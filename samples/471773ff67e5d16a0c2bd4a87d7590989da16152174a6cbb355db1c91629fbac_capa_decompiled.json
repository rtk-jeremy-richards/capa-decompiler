{
    "00401091": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401091(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.0040103c(iVar1);\n        }\n    }\n    else {\n        fcn.00401271(param_2);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004010cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004010cd(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n        iVar1 = *param_1;\n    }\n    return iVar2;\n}\n",
        "token_count": 99
    },
    "00401163": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401163(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h;\n    if (arg_8h != NULL) goto code_r0x00401890;\ncode_r0x0040188b:\n    do {\n        do {\n            fcn.0040129e();\n            piVar2 = arg_8h;\ncode_r0x00401890:\n            arg_8h = piVar2;\n        } while ((arg_ch < 0) || (arg_10h == 0));\n        iVar1 = *piVar2;\n        if (iVar1 == arg_10h) {\n            if (arg_ch <= arg_14h) goto code_r0x004018c7;\n            iVar1 = fcn.00431fb4(arg_ch, 1);\ncode_r0x004018e1:\n            *piVar2 = iVar1;\n            arg_8h = unaff_ESI;\n        }\n        else {\n            if (arg_14h < arg_ch) {\n                iVar1 = fcn.0043220e(iVar1, arg_ch, 1);\n                if (iVar1 != 0) goto code_r0x004018e1;\n                goto code_r0x0040188b;\n            }\n            fcn.00431d9c(iVar1);\ncode_r0x004018c7:\n            *piVar2 = arg_10h;\n            arg_8h = unaff_ESI;\n        }\n        unaff_ESI = arg_8h;\n        if (*piVar2 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 408
    },
    "004011c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011c7(uint hWnd)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint lpwndpl;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowPlacement)(hWnd, &lpwndpl);\n    arg_10h = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(hWnd, 0x3f6);\n    if (arg_10h == 1) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(hWnd, 0x3f7);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar1);\n        var_14h = var_4h + 8;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(hWnd, 0x3f8, &var_10h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar1);\n        var_14h = var_ch + 2;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPlacement)(hWnd, &lpwndpl);\n    fcn.00406f55();\n    fcn.0040f459(\"Window\", \"ExpandedState\", arg_10h);\n    return;\n}\n",
        "token_count": 303
    },
    "004011cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004011cc(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x495194;\n    if (param_2 == 0) {\n        uVar1 = *0x495198;\n    }\n    (*_sym.imp.USER32.dll_SendDlgItemMessageA)(param_1, 0x3eb, 0x172, 0, uVar1);\n    return 1;\n}\n",
        "token_count": 104
    },
    "0040124e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040124e(int32_t **param_1)\n\n{\n    int32_t **arg_8h;\n    \n    while (*param_1 != NULL) {\n        arg_8h = *param_1;\n        *param_1 = *arg_8h;\n        fcn.00431d9c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040307d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_70h\n\nuint __cdecl fcn.0040307d(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int16_t iVar9;\n    uint uVar10;\n    char *var_70h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_ch == 2) {\n        (*_sym.imp.USER32.dll_GetWindowPlacement)(arg_8h, &var_44h);\n        fcn.00406f55();\n        fcn.0040f459(\"Window\", \"Left\", var_28h);\n        fcn.00406f55();\n        fcn.0040f459(\"Window\", 0x47b718, var_24h);\n        fcn.00406f55();\n        var_70h = \"Window\";\n        fcn.0040f459(\"Window\", \"Width\", var_20h - var_28h);\n        fcn.00406f55();\n        fcn.0040f459(\"Window\", 0x47b708, var_1ch - var_24h);\n    }\n    else {\n        if (arg_ch == 0x110) {\n            var_4h = 1;\n            fcn.00406f55();\n            uVar3 = fcn.0040f3f0(\"Window\", \"ExpandedState\", 1);\n            pcVar1 = _sym.imp.USER32.dll_CheckDlgButton;\n            (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, 0x3f6, uVar3);\n            fcn.004011c7(arg_8h);\n            fcn.00406f55();\n            var_8h = fcn.0040f3f0(\"Window\", \"Left\", 0);\n            fcn.00406f55();\n            uVar3 = fcn.0040f3f0(\"Window\", 0x47b718, 0);\n            fcn.00406f55();\n            uVar6 = fcn.0040f3f0(\"Window\", \"Width\", 0x185);\n            fcn.00406f55();\n            uVar8 = fcn.0040f3f0(\"Window\", 0x47b708, 0x1f0);\n            fcn.00406f55();\n            iVar4 = fcn.0040f3f0(\"Window\", \"OnTop\", 0);\n            (*pcVar1)(arg_8h, 0x3f4, iVar4);\n            if (iVar4 == 1) {\n                uVar10 = 0xffffffff;\n            }\n            else {\n                uVar10 = 0xfffffffe;\n            }\n            (*_sym.imp.USER32.dll_SetWindowPos)(arg_8h, uVar10, var_8h, uVar3, uVar6, uVar8, 0x40);\n            return var_4h;\n        }\n        if (arg_ch == 0x111) {\n            iVar9 = arg_10h;\n            if ((iVar9 == 1) || (iVar9 == 2)) {\n                var_4h = 1;\n                (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h & 0xffff);\n            }\n            if (iVar9 == 0x3eb) {\n                var_4h = 1;\n                fcn.00401078(arg_8h);\n                return var_4h;\n            }\n            if (iVar9 == 0x3ed) {\n                uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec);\n                pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                (*_sym.imp.USER32.dll_SendMessageA)(uVar3, 0xb1, 0, 0xffffffff);\n                (*pcVar1)(uVar3, 0x301, 0, 0);\n            }\n            pcVar2 = _sym.imp.USER32.dll_GetWindowPlacement;\n            pcVar1 = _sym.imp.USER32.dll_GetDlgItemInt;\n            if (iVar9 == 0x3f0) {\n                iVar4 = (*_sym.imp.USER32.dll_GetDlgItemInt)(arg_8h, 0x3ee, 0, 1);\n                iVar5 = (*pcVar1)(arg_8h, 0x3ef, 0, 1);\n                (*pcVar2)(*0x49519c, &var_44h);\n                var_20h = (var_20h - var_28h) + iVar4;\n                var_1ch = (var_1ch - var_24h) + iVar5;\n                var_28h = iVar4;\n                var_24h = iVar5;\n                (*_sym.imp.USER32.dll_SetWindowPlacement)(*0x49519c, &var_44h);\n            }\n            if (iVar9 == 0x3fb) {\n                (*pcVar2)(*0x49519c, &var_44h);\n                uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_70h);\n                (*pcVar2)(uVar3);\n                var_1ch = var_1ch - var_24h;\n                var_20h = var_20h - var_28h;\n                var_28h = (var_4ch - var_54h) / 2 - var_20h / 2;\n                var_24h = (var_48h - var_50h) / 2 - var_1ch / 2;\n                var_20h = var_28h + var_20h;\n                var_1ch = var_24h + var_1ch;\n                (*_sym.imp.USER32.dll_SetWindowPlacement)(*0x49519c, &var_44h);\n                (*_sym.imp.USER32.dll_SetDlgItemInt)(arg_8h, 0x3ee, var_28h, 0);\n                (*_sym.imp.USER32.dll_SetDlgItemInt)(arg_8h, 0x3ef, var_24h, 0);\n            }\n            if (iVar9 == 0x3f3) {\n                iVar4 = (*pcVar1)(arg_8h, 0x3f1, 0, 1);\n                iVar5 = (*pcVar1)(arg_8h, 0x3f2, 0, 1);\n                (*pcVar2)(*0x49519c, &var_44h);\n                var_20h = var_28h + iVar4;\n                var_1ch = var_24h + iVar5;\n                (*_sym.imp.USER32.dll_SetWindowPlacement)(*0x49519c, &var_44h);\n            }\n            pcVar1 = _sym.imp.USER32.dll_IsDlgButtonChecked;\n            if (iVar9 == 0x3f4) {\n                iVar4 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(arg_8h, 0x3f4);\n                if (iVar4 == 1) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    uVar3 = 0xfffffffe;\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(arg_8h, uVar3, 0, 0, 0, 0, 0x43);\n                fcn.00406f55();\n                fcn.0040f459(\"Window\", \"OnTop\", iVar4);\n            }\n            if (iVar9 == 0x3f6) {\n                uVar3 = (*pcVar1)(arg_8h, 0x3f6);\n                fcn.004011c7(arg_8h);\n                fcn.00406f55();\n                fcn.0040f459(\"Window\", \"ExpandedState\", uVar3);\n            }\n            if (iVar9 == 0x3f9) {\n                (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 0);\n                pcVar1 = _sym.imp.KERNEL32.dll_Beep;\n                (*_sym.imp.KERNEL32.dll_Beep)(0x960, 0x3c);\n                uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n                uVar6 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar3);\n                (*_sym.imp.USER32.dll_GetWindowRect)(*0x49519c, &var_18h);\n                iVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar3, var_10h - var_18h, var_ch - var_14h);\n                if (iVar4 != 0) {\n                    (*_sym.imp.GDI32.dll_SelectObject)(uVar6, iVar4);\n                    (*_sym.imp.GDI32.dll_BitBlt)\n                              (uVar6, 0, 0, var_10h - var_18h, var_ch - var_14h, uVar3, var_18h, var_14h, 0xcc0020);\n                    (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                    (*_sym.imp.USER32.dll_EmptyClipboard)();\n                    (*_sym.imp.USER32.dll_SetClipboardData)(2, iVar4);\n                    (*_sym.imp.USER32.dll_CloseClipboard)();\n                    (*_sym.imp.GDI32.dll_DeleteDC)(uVar6);\n                    (*_sym.imp.USER32.dll_ReleaseDC)(*0x49519c, uVar3);\n                    (*pcVar1)(0x4b0, 0x3c);\n                }\n                (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 5);\n            }\n            if (iVar9 != 0x3fa) {\n                return var_4h;\n            }\n            uVar7 = (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", \"http://www.Powerprogrammer.co.uk\", 0, 0, 5);\n            if (0x20 < uVar7) {\n                return var_4h;\n            }\n            fcn.0041052b(\"An error occurred accessing the PowerProgrammer URL!\", 0, 0);\n            return var_4h;\n        }\n        if (arg_ch != 0x200) {\n            if (arg_ch != 0x202) {\n                return 0;\n            }\n            var_4h = 1;\n            if (*0x4951a4 == 0) {\n                return 1;\n            }\n            fcn.00401028(arg_8h);\n            return var_4h;\n        }\n    }\n    var_4h = 1;\n    if (*0x4951a4 != 0) {\n        fcn.00401122(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return var_4h;\n}\n",
        "token_count": 2608
    },
    "00431d9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00431d9c(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x48fe20, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4990d4 == 3) {\n            fcn.00438da5(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.00438ec1(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.00438eec(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00431df2();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00431e24;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x497264, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00433586();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0043354b(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x00431e24:\n    fcn.00433d89();\n    return;\n}\n",
        "token_count": 429
    },
    "004042f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004042f4(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl method.CMemoryException.virtual_20(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    iVar1 = (**(*in_ECX + 0xc))(&var_204h, 0x200, &var_208h);\n    if (iVar1 == 0) {\n        if (arg_ch == NULL) {\n            arg_ch = 0xf020;\n        }\n        fcn.00410574(arg_ch, arg_8h, var_208h);\n    }\n    else {\n        arg_ch = &var_204h;\n        fcn.0041052b(arg_ch, arg_8h, var_208h);\n    }\n    fcn.00432a57(arg_ch);\n    return;\n}\n",
        "token_count": 217
    },
    "00404763": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00404763(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_10h == NULL) {\n        arg_10h = fcn.0040440f();\n    }\n    if ((arg_8h == NULL) && (arg_ch != 0)) {\n        *(arg_10h + 2) = 0;\n        *(arg_10h + 6) = 0xffffffff;\n        *(arg_10h + 8) = 0xffffffff;\n        *arg_10h = arg_ch;\n        *(arg_10h + 4) = 1;\n        arg_8h = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 171
    },
    "00404871": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404871(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTreatAsClass;\n    iVar2 = (*_sym.imp.ole32.dll_CoTreatAsClass)(arg_ch, arg_10h);\n    if ((iVar2 != 0) && (arg_8h != 0)) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_StringFromCLSID)(arg_ch, &var_4h);\n        uVar3 = fcn.004164d0(var_4h);\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueA)(var_8h, uVar3, 1, arg_8h, uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n    }\n    return iVar2;\n}\n",
        "token_count": 338
    },
    "004048fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004048fc(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.00416781(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 261
    },
    "00404963": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404963(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.004048fc(arg_8h);\n        if (var_8h != NULL) {\n            iVar1 = (**(*var_8h + 0x58))(var_8h, &var_ch);\n            if ((iVar1 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar1 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &var_4h);\n                if (iVar1 == 0) {\n                    arg_8h = 0;\n                    iVar1 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &arg_8h);\n                    if ((iVar1 == 0) && (arg_8h != 0)) {\n                        uVar2 = fcn.00432b70(arg_8h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                    }\n                    fcn.00416781(&var_4h);\n                }\n            }\n            fcn.00416781(&var_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 348
    },
    "00404e96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404e96(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint hMem;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_18h = arg_34h;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        var_18h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2042, iVar1);\n    if (iVar4 != 0) {\n        piVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            fcn.0040105f(piVar5 + 0xd, iVar2, arg_30h);\n        }\n        if (var_18h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            fcn.0040105f(iVar2 + piVar5, iVar3, var_18h);\n        }\n        *piVar5 = iVar1;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n    }\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 738
    },
    "004053a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004053a2(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.0040536e(iVar1);\n        }\n    }\n    else {\n        fcn.00405306(param_2);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0040546a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040546a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.00405266();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.0040129e(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar2 = arg_8h - *in_ECX;\n        arg_8h_00 = fcn.0040117c(arg_ch);\n        if (uVar1 < uVar2) {\n            fcn.00432c1b(arg_8h_00, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00433341(arg_8h_00, arg_ch, arg_8h_00 + uVar2, arg_ch);\n        }\n        fcn.00401181(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "004061f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004061f2(void)\n\n{\n    code *pcVar1;\n    char *pcStack12;\n    \n    if (*0x4952ac == 0) {\n        *0x4952ac = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (*0x4952ac == 0) {\n            pcStack12 = 0x492448;\n            fcn.004332dc(&pcStack12, 0x48c270);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        pcStack12 = \"CreateActCtxW\";\n        *0x49529c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4952ac);\n        *0x4952a0 = (*pcVar1)(*0x4952ac, \"ReleaseActCtx\");\n        *0x4952a4 = (*pcVar1)(*0x4952ac, \"ActivateActCtx\");\n        *0x4952a8 = (*pcVar1)(*0x4952ac, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0040629f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar fcn.0040629f(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.0040440f();\n    }\n    if (*0x4952a4 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0040627f(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 124
    },
    "004062cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004062cf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack544;\n    uint uStack536;\n    uchar auStack532 [96];\n    uchar auStack436 [424];\n    int16_t iStack12;\n    ushort uStack10;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack436;\n    fcn.004061f2();\n    uVar2 = *(param_1 + 8);\n    uStack10 = 0;\n    iStack12 = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, auStack532);\n    if (iVar1 != 0) {\n        if (iStack12 == 0) {\n            puStack556 = auStack532;\n            puVar3 = &uStack564;\n            uStack564 = 0x20;\n            uStack560 = 0x88;\n            uStack544 = 2;\n            uStack536 = uVar2;\n            iVar1 = fcn.00406260(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                uStack544 = 3;\n                uVar2 = fcn.00406260(&uStack564);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                uStack544 = 1;\n                iVar1 = fcn.00406260(puVar3, &uStack564);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 497
    },
    "00406711": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** fcn.00406711(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    ppiVar3 = param_1 + 3;\n    if ((*ppiVar3 < 0) || (piVar2 != *param_1)) {\n        ppiVar3 = (***piVar2)(param_1[1], 1);\n        if (ppiVar3 == NULL) {\n            fcn.0040129e(0x8007000e);\n            pcVar1 = swi(3);\n            ppiVar3 = (*pcVar1)();\n            return ppiVar3;\n        }\n        ppiVar3[1] = param_1[1];\n        fcn.00432c1b(ppiVar3 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    }\n    else {\n        LOCK();\n        *ppiVar3 = *ppiVar3 + 1;\n        ppiVar3 = param_1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 275
    },
    "004067ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067ba(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0xc);\n    while (iVar1 != 0) {\n        fcn.00416d12();\n        if (var_8h != arg_8h) {\n            fcn.004042e5(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004067fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067fc(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.004042e5(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.00416ed7();\n            fcn.004042e5(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "00406a81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406a81(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00406fea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00406fea(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00406f55();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0040627f(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 154
    },
    "00407036": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407036(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.00432e30(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 143
    },
    "004071cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004071cb(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0040708e();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n    }\n    else {\n        uVar3 = (**0x496acc)(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040745c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040745c(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0040708e();\n    if (iVar1 == 0) {\n        if ((arg_8h == 0) && (arg_ch == 0)) {\n            if ((arg_10h == NULL) || (*arg_10h < 0x1a8)) {\n                uVar2 = 0;\n            }\n            else {\n                fcn.00433816(arg_10h + 1, 0x20, \"DISPLAY\", 0x1f);\n                fcn.00433816(arg_10h + 9, 0x80, \"DISPLAY\", 0x1f);\n                arg_10h[0x29] = 5;\n                uVar2 = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x00407469. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (**0x496ad8)();\n    return uVar2;\n}\n",
        "token_count": 286
    },
    "004074ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.004074ce(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x00407a38;\n    // switch table (19 cases) at 0x407a4e\n    switch(*((arg_ch + 0x139aU) * 4 + 0x407a4e)) {\n    case 0x4075ab:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x4075cc:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x004077c4;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x004079b0:\n                    *arg_28h = 1;\n                    goto code_r0x00407a38;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x407639:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x004077c4;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x407686:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x4076ef:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x004077c4;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x407739:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x00407967:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x407761:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x00407a38;\n    case 0x40776f:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x00407a38;\n    case 0x40777d:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00407967;\n        }\n        break;\n    case 0x4077a5:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x004077c4:\n                *arg_28h = 0;\n                goto code_r0x00407a38;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00407a0d;\n        }\n        break;\n    case 0x407827:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00407967;\n        }\n        break;\n    case 0x40784f:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x407873:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00407a38;\n        }\n        break;\n    case 0x407897:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00407967;\n        }\n        break;\n    case 0x4078bf:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00407940;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x004079b0;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00407a38;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00407967;\n        }\n        break;\n    case 0x407940:\ncode_r0x00407940:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x004079d8;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x004079b0;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00407a38;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00407967;\n        }\n        break;\n    case 0x4079d8:\ncode_r0x004079d8:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00407a2a;\n        }\n        break;\n    case 0x407a00:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x00407a0d:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x00407a38;\n    case 0x407a1d:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x00407a2a:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x00407a38;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x00407a38:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3756
    },
    "00407a9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00407a9a(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x492680));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x492630);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "00407cf5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00407cf5(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "00407e36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407e36(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    param_3[1] = param_4;\n    (*_sym.imp.USER32.dll_GetScrollInfo)(iVar2, param_2, param_3);\n    return;\n}\n",
        "token_count": 180
    },
    "00407e81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e81(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "00408256": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408256(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x004082c5:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00417668(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x004082c5;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 303
    },
    "004084b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004084b4(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040854a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040854a(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004085de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004085de(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0040868d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040868d(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00408724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408724(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "004087b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004087b2(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00408af7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408af7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.00406fc8();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x164))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00408e56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e56(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint *puStack8;\n    \n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar3 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar4 = 5;\n        iVar3 = *(in_ECX + 0x20);\n        while (iVar3 = (*pcVar1)(iVar3, uVar4),  iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &fcn.00408e56::var_10h);\n            puStack8 = &fcn.00408e56::var_10h;\n            uStack12 = 0x408e9b;\n            fcn.004141b1();\n            iVar2 = var_ch;\n            uStack12 = 0x15;\n            var_ch = 0;\n            var_10h = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, arg_8h, iVar2 + arg_ch);\n            uVar4 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00409914": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409914(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (*(param_1 + 0x4c) != 0) {\n        iVar1 = *(*(param_1 + 0x4c) + 0x44);\n        while (iVar1 != 0) {\n            piVar2 = fcn.004081ba();\n            if ((*(*piVar2 + 4) != 0) && (*(*(*piVar2 + 4) + 0x74) != 0)) {\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 179
    },
    "0040995a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040995a(uint arg_8h, uint noname_1, int32_t arg_10h, uint noname_3, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h, int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00408165(arg_18h, arg_1ch, arg_20h, arg_24h, arg_8h);\n    if (iVar1 < 0) {\n        (**(**(in_ECX + 0x28) + 0x20))(*(in_ECX + 0x28), &var_4h);\n        iVar2 = fcn.00409914();\n        if (arg_10h <= iVar2 + var_4h) {\n            var_8h = *(*(in_ECX + 0x4c) + 0x44);\n            while (var_8h != 0) {\n                piVar3 = fcn.004081ba(&var_8h);\n                iVar2 = *(*piVar3 + 4);\n                if (iVar2 != 0) {\n                    if (*(iVar2 + 0x74) != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    if (var_4h == arg_10h) {\n                        iVar1 = *(*piVar3 + 4);\n                        var_18h = *(iVar1 + 0x30);\n                        var_14h = *(iVar1 + 0x34);\n                        var_10h = *(iVar1 + 0x38);\n                        var_ch = *(iVar1 + 0x3c);\n                        fcn.004141ed(&var_18h);\n                        *arg_18h = var_18h;\n                        *arg_1ch = var_14h;\n                        *arg_20h = var_10h - var_18h;\n                        *arg_24h = var_ch - var_14h;\n                        iVar1 = 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 554
    },
    "00409e57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409e57(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 160
    },
    "00409e89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409e89(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.00409e57(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 125
    },
    "00409f16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00409f16(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0040628f(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00409f27": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409f27(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.00409e57(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 126
    },
    "00409fc6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00409fc6(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040a0d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a0d5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a66(0);\n    iVar1 = fcn.00406fc8();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004042a8(0x417577);\n        iVar3 = fcn.004042ba(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004181db(0x47c0a4, 0x409e1b, 0x408399, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.004042a8(uVar2);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 319
    },
    "0040a1f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a1f1(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.00416267(0x404429);\n    if (iVar3 == 0) {\n        uStack16 = 0x492448;\n        fcn.004332dc(&stack0xfffffff0, 0x48c270);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.00406f55();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x40a225;\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 262
    },
    "0040a277": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a277(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0041163f();\n    if (iVar2 == 0) goto code_r0x0040a2c2;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.00406f55();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00406f55();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.0041853c();\n                if (iVar3 == 0) goto code_r0x0040a2b7;\n            }\n            fcn.00410ac9(0);\n        }\ncode_r0x0040a2b7:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x0040a2c2:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.00406fc8();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.00432e30(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.0040a0a5();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0040a1c3();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 749
    },
    "0040a53d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040a53d(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x20), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x20)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.0040a170(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.0040a149(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.00407e81(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 947
    },
    "0040a78c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040a78c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0040a0a5();\n    return piVar1;\n}\n",
        "token_count": 166
    },
    "0040aa49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040aa49(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00432a99(0x38);\n    iVar1 = fcn.00416267(0x404429);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0040440f();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.00408a3d(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0040a9cd(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 805
    },
    "0040ab87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040ab87(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x496af0)) && (extraout_ECX != 0x496b48)) &&\n       ((extraout_ECX != 0x496ba0 && (extraout_ECX != 0x496bf8)))) {\n        fcn.0040a388();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040e115();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 337
    },
    "0040ad16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040ad16(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0040acd7();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0040acd7();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "0040ad55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad55(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0040a170(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040aa49(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040ad55(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "0040af7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040af7f(int32_t arg_8h, int32_t arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (*(in_ECX + 0x4c) != 0) {\n        var_8h = arg_8h;\n        var_4h = arg_ch;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*(in_ECX + 0x20), &var_8h);\n        iVar2 = fcn.0040aec9();\n        if (*(in_ECX + 0x4c) != 0) {\n            iVar1 = *(*(in_ECX + 0x4c) + 0x44);\n            while (iVar1 != 0) {\n                piVar3 = fcn.004081ba();\n                iVar4 = *(*piVar3 + 4);\n                if ((iVar4 != 0) && (*(iVar4 + 0x74) != 0)) {\n                    iVar2 = iVar2 + 1;\n                    iVar4 = (*_sym.imp.USER32.dll_PtInRect)(iVar4 + 0x30, var_8h, var_4h);\n                    if (iVar4 != 0) {\n                        *arg_10h = 3;\n                        *(arg_10h + 4) = iVar2;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    uVar5 = fcn.004081d3(arg_8h, arg_ch, arg_10h);\n    return uVar5;\n}\n",
        "token_count": 419
    },
    "0040b023": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040b023(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_8ch;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(0x80);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040dfea();\n    fcn.004089fa();\n    uVar1 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.0040ab87();\n            fcn.00432b3e();\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x8c;\n        iVar4 = fcn.0040a170(iVar2);\n        if (iVar4 == 0) {\ncode_r0x0040b096:\n            iVar4 = fcn.0040de48(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) {\n                iVar4 = *(unaff_EBP + 0xc);\n                if (iVar4 != 0) {\n                    uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                    if ((uVar3 & 0x2000) != 0) {\n                        uVar3 = fcn.0040e62b();\n                        uVar3 = uVar3 & 0xf;\n                        if ((((uVar3 != 3) && (uVar3 != 6)) && (uVar3 != 7)) && (uVar3 != 9)) goto code_r0x0040b0ed;\n                    }\n                    iVar4 = 0;\n                }\ncode_r0x0040b0ed:\n                fcn.0040e010(*(unaff_EBP + 8), iVar4);\n            }\n        }\n        else {\n            iVar4 = fcn.0040de48(0, 0xbd11ffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) goto code_r0x0040b096;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 811
    },
    "0040b126": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040b126(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0040a18a(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.0040ab36);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 179
    },
    "0040b7f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7f9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x20));\n        uVar2 = fcn.0040b7a1(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x20), uVar2);\n        fcn.0040a042(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040b838. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x8c))();\n    return;\n}\n",
        "token_count": 204
    },
    "0040baca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040baca(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.0040baa2();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0040e7cd();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x20);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x20));\n            fcn.0040a149(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x20), 0x112, wParam, lParam);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 458
    },
    "0040bd42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd42(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        fcn.0040129e(0x80070057);\n    }\n    iVar1 = fcn.004339b1(arg_8h, arg_ch);\n    uVar2 = fcn.0040117c(iVar1);\n    fcn.00433bb4(uVar2, iVar1 + 1, arg_8h, arg_ch);\n    fcn.00401181(iVar1);\n    return;\n}\n",
        "token_count": 143
    },
    "0040bdf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bdf8(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0040be29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040be29(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "0040be54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040be54(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0040be29(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.0040bdbe(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0040be88;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0040be88:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 429
    },
    "0040bf1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bf1a(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.0040bdf8();\n    iVar2 = fcn.00406f55();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00406f55();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.0041855c(1);\n        iVar2 = fcn.00406f55();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.00406f55();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.00410ac9(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0040e791();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004185a9. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "0040c480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c480(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00416267(0x404429);\n    if (iVar1 == 0) {\n        fcn.0040440f();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x40c22d, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.004043db();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0040c62e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.0040c62e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x0040c66c:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x0040cb25;\n        }\n        goto code_r0x0040c83e;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x0040cb02;\n        }\n        goto code_r0x0040c83e;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0040a149(var_24h);\n        fcn.0040bffd(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.0040c073(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x0040c66c;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0040cb25;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0040896c(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x4952c0);\n    *(unaff_EBP + -0x18) = iVar8 + 0x4952c0;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x4952c8))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.00407cf5(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0040899b();\n                    goto code_r0x0040c7cc;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.00407cf5(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0040899b();\n                        goto code_r0x0040cb17;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0040899b();\n        goto code_r0x0040c83e;\n    }\n    iVar3 = *(iVar8 + 0x4952c4);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0040899b();\n    if (iVar3 == 0) goto code_r0x0040c83e;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0040cb17:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x0040cb1a:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040cb1e;\n    }\ncode_r0x0040c7cc:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x40cb46\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041458a(var_14h);\n        goto code_r0x0040c86d;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040c86d;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0040a149(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x0040c8a2;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0040a149();\n        goto code_r0x0040cb1e;\n    case 7:\n    case 0xd:\ncode_r0x0040c86d:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x0040cb22:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.00413d7f();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.004089fa();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.0040a170(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.00416c68(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040ab87();\n        goto code_r0x0040c94d;\n    case 9:\n        fcn.00413d7f();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x0040c94d:\n        *(unaff_EBP + -4) = 0;\n        fcn.00414612();\n        break;\n    case 10:\n        uVar7 = fcn.0040a149(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x0040c96b;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040cb1e;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x0040cb1a;\n    case 0xf:\n        var_18h = fcn.00417962(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040c96b:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0040c8a2:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x0040cb22;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x0040ca93;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040caa0;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ca96;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x0040ca96;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040cabf;\n    case 0x1a:\n        fcn.0040a149(var_24h);\ncode_r0x0040ca93:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ca96;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x0040cb22;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0040a149(var_14h);\n        fcn.0040a149(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0040cac3;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041458a(var_14h);\n        goto code_r0x0040caa0;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00417962(var_14h);\n        goto code_r0x0040caa0;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.00417962(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040cac3;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ca25;\n    case 0x24:\ncode_r0x0040ca25:\n        fcn.0040a149(var_14h);\n        goto code_r0x0040caa0;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040ca42;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0040ca42:\n        uVar7 = fcn.0040a149(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040cac3;\n    case 0x27:\n        var_18h = fcn.0040a149(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040ca96;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0040a149(var_24h, var_14h);\n        goto code_r0x0040caad;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0040a149(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0040cac3;\n        }\ncode_r0x0040ca96:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x0040caa0:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040c66c;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x0040cb1e:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x0040cb22;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040caad:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040cac3;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0040cabf:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040cac3:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x0040cb02;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x0040cb02:\n        if (iVar3 != 0) {\ncode_r0x0040c83e:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040899b();\n            goto code_r0x0040c84c;\n        }\n    }\ncode_r0x0040cb25:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040899b();\ncode_r0x0040c84c:\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 4509
    },
    "0040d980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0040d980(uint32_t arg_8h, uint32_t wParam, int32_t lParam, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == 0x2b) {\n        var_4h = lParam;\n        var_8h = 0x40da05;\n        (**(*in_ECX + 0x138))();\n        return 1;\n    }\n    if (arg_8h == 0x2c) {\n        var_4h = lParam;\n        var_8h = 0x40d9f8;\n        (**(*in_ECX + 0x13c))();\n        return 1;\n    }\n    if (arg_8h == 0x2d) {\n        var_4h = lParam;\n        var_8h = 0x40d9eb;\n        (**(*in_ECX + 0x144))();\n        return 1;\n    }\n    if (arg_8h == 0x2e) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x40d9de;\n        iVar1 = (**(*in_ECX + 0x148))();\n    }\n    else if (arg_8h == 0x2f) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x40d9c8;\n        iVar1 = (**(*in_ECX + 0x14c))();\n    }\n    else {\n        if (arg_8h != 0x39) {\n            if (in_ECX[0x14] != 0) {\n                var_8h = lParam;\n                var_ch = wParam;\n                iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], arg_8h + 0x2000);\n                if ((6 < arg_8h - 0x132) || (iVar1 != 0)) {\n                    if (arg_14h != NULL) {\n                        *arg_14h = iVar1;\n                    }\n                    iVar1 = 1;\n                }\n                return iVar1;\n            }\n            if (arg_8h < 0x112) {\n                if (arg_8h == 0x111) {\n                    iVar1 = fcn.0040de48(0, wParam >> 0x10 | 0xbd110000, 0, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    if (arg_14h != NULL) {\n                        *arg_14h = 1;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (0x2a < arg_8h) {\n                    if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0040cd6d;\n                    if (arg_8h == 0x4e) {\n                        var_8h = arg_14h;\n                        var_4h = lParam;\n                        iVar1 = fcn.0040de48(0, *(lParam + 8) & 0xffff | 0xbc4e0000, &fcn.0040d980::var_8h, 0);\n                        return iVar1;\n                    }\n                }\n            }\n            else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0040cd6d:\n                iVar1 = fcn.0040c62e(arg_8h + 0xbc00, wParam, lParam, arg_14h);\n                return iVar1;\n            }\n            if (arg_8h - 0x132 < 7) {\n                var_4h = arg_8h - 0x132;\n                var_8h = wParam;\n                iVar1 = fcn.0040c62e(0xbc19, 0, &fcn.0040d980::var_ch, arg_14h);\n                if (*arg_14h != 0) {\n                    return iVar1;\n                }\n            }\n            return 0;\n        }\n        var_4h = lParam;\n        var_8h = 0x40d9ad;\n        iVar1 = (**(*in_ECX + 0x140))();\n    }\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 1061
    },
    "0040d1bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d1bb(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.00432a99(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.004084eb(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.00408458(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.00406f55(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.00418145(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.00406f55();\n        fcn.0040105a(*(lpWndClass + 0x24));\n        fcn.00405442(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004181b2(1);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 311
    },
    "0040d34c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d34c(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar5 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            uVar3 = *puVar5;\n            if (*puVar5 == 0) break;\n            uVar2 = puVar5[1];\n            var_10h = *(puVar5 + 2);\n            puVar5 = puVar5 + 4;\n            var_ch = uVar3;\n            if (uVar2 == 0x1234) {\ncode_r0x0040d3b7:\n                puVar6 = &var_30h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.00405ab5(puVar5);\n                var_2ch = arg_8h;\n                iVar4 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n                fcn.0040128a();\n                in_ECX = var_8h;\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x0040d418:\n                iVar4 = (*pcVar1)(*(in_ECX + 0x20), uVar3, uVar2, 0, puVar5);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x0040d3b7;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x0040d418;\n            }\n            puVar5 = puVar5 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0040ad55(*(in_ECX + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 740
    },
    "0040de48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040de48(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00406f55();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x0040de66;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x0040df1c;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0040df1c:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.00407cf5(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.0040dd10(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x0040dee3:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.0040dcf8(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x0040dee3;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.0040440f();\ncode_r0x0040de66:\n    iVar1 = fcn.00406f55();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 753
    },
    "0040e44f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e44f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e45a. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "0040e465": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e465(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e470. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0040e49a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e49a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e4bf. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x6c))();\n    return;\n}\n",
        "token_count": 156
    },
    "0040e4c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e4c2(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        fcn.0040a149(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e4e3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 159
    },
    "0040e4e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e4e6(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e507. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x70))();\n    return;\n}\n",
        "token_count": 164
    },
    "0040e50a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e50a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e52f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 156
    },
    "0040e532": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e532(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemTextA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e557. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 156
    },
    "0040e55a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e55a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e582. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 167
    },
    "0040e588": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e588(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e5ad. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 155
    },
    "0040e62b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e62b(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e642. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 129
    },
    "0040e645": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e645(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e65c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 129
    },
    "0040e65f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e65f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.00407ba7(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e683. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x80))();\n    return;\n}\n",
        "token_count": 149
    },
    "0040e689": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e689(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.00407bc1(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e6ad. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 149
    },
    "0040e6b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e6b3(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) goto code_r0x0040e6bf;\n    while( true ) {\n        fcn.0040440f();\ncode_r0x0040e6bf:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n        if (iVar1 != 0) break;\n        if (*(param_1 + 0x50) != 0) {\ncode_r0x0040e6d1:\n    // WARNING: Could not recover jumptable at 0x0040e6d7. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(param_1 + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    goto code_r0x0040e6d1;\n}\n",
        "token_count": 269
    },
    "0040e732": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e732(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040e770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e770(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e78b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 131
    },
    "0040e791": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e791(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e7a6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 123
    },
    "0040e7ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e7ac(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e7c7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 133
    },
    "0040e7cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e7cd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.0040a149(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e7e8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 146
    },
    "0040e891": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e891(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x50) == 0) && (*(param_2 + 0x4c) != 0)) {\n        (**(**(param_2 + 0x4c) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0040e8b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e8b6(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e8c1. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 118
    },
    "0040ea46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ea46(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x4c) != 0) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 232
    },
    "0040ea97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ea97(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040eacd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 195
    },
    "0040ead3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ead3(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.00416c68(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0040ebb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040ebb0(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    bool bVar9;\n    uint uVar10;\n    code *var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (*(in_ECX + 0x4c) == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            uVar10 = 5;\n            uVar4 = *(in_ECX + 0x20);\n            while( true ) {\n                uVar4 = (*pcVar2)(uVar4, uVar10);\n                iVar5 = fcn.0040a149(uVar4);\n                if (iVar5 == 0) break;\n                uVar8 = fcn.0040e645();\n                if ((((uVar8 & 0x10000) != 0) && (uVar8 = fcn.0040e62b(),  (uVar8 & 0x10000000) != 0)) &&\n                   (uVar8 = fcn.0040e62b(),  (uVar8 & 0x8000000) == 0)) goto code_r0x0040eca5;\n                uVar4 = *(iVar5 + 0x20);\n                uVar10 = 2;\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = 0x408394;\n            arg_ch = 0x408191;\n        }\n        else {\n            var_8h = 0x40eb7d;\n            arg_ch = 0x40e9c0;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x0040ec50:\n        do {\n            if (var_4h == 0) goto code_r0x0040eca5;\n            ppiVar6 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar6;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar5 = *piVar1;\n                }\n                else {\n                    iVar5 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar5 != 0) && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar5 == iVar7)) break;\n                if (piVar1[1] == 0) goto joined_r0x0040ec50;\n                bVar9 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar9 = arg_8h == piVar1;\n            }\n        } while (!bVar9);\n        if (piVar1 == NULL) {\ncode_r0x0040eca5:\n            piVar3 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar6 = (*var_8h)(&var_4h);\n                piVar3 = *ppiVar6;\n                uVar8 = fcn.0040e8b6();\n            } while ((piVar3 != piVar1) &&\n                    ((((uVar8 & 0x10000) == 0 || ((uVar8 & 0x8000000) != 0)) || ((uVar8 & 0x10000000) == 0))));\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 886
    },
    "0040ed07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ed07(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.00416f8a(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.004081ba(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x0040edac:\n                arg_8h = puVar3;\n                fcn.0040e9dd(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0040e9dd(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0040e8b6();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.004081ba();\n            puVar4 = *puVar4;\n            uVar5 = fcn.0040e8b6();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x0040edac;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 601
    },
    "0040ee39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040ee39(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040e974(param_1);\n    iVar1 = param_2;\n    while ((0 < iVar1 && (*(param_1 + 4) != 0))) {\n        if (*(param_2 + 4) != 0) {\n            fcn.0040e9c4(param_2 + 4);\n        }\n        iVar1 = iVar1 + -1;\n    }\n    return param_2;\n}\n",
        "token_count": 131
    },
    "0040ee93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040ee93(uint lpString, uint nMaxCount)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    if (*(extraout_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x20), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        uVar2 = fcn.0040f93d();\n        fcn.004012a8(uVar2);\n        iVar1 = **(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x8c))(unaff_EBP + -0x10);\n        fcn.0040445d(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x10), 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.0040128a();\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 342
    },
    "0040eff9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040eff9(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e974();\n    fcn.0040ef62(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        uVar1 = fcn.0040e8b6();\n        if ((uVar1 >> 0x11 & 1) != 0) break;\n        fcn.0040e9c4();\n        if (*(arg_8h + 4) != 0) {\n            fcn.0040e9c4();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "0040f10f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f10f(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e974(param_1);\n    bVar1 = false;\n    do {\n        if (((var_4h == 0) || (fcn.0040e9c4(&var_4h),  iVar5 = var_4h,  var_4h == 0)) ||\n           (uVar3 = fcn.0040e8b6(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0040ef93(&var_10h);\n            fcn.0040e990(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n            iVar5 = var_4h;\n        }\n        cVar2 = fcn.0040e8cf(*(iVar5 + 8));\n        if (cVar2 == '\\0') {\n            fcn.0040e990(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 313
    },
    "0040f18a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f18a(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e974(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (uVar3 = fcn.0040e8b6(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0040eff9(&var_10h);\n            fcn.0040e990(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            fcn.0040e9f7(&var_4h);\n        }\n        if ((var_4h != 0) && (cVar2 = fcn.0040e8cf(*(var_4h + 8)),  cVar2 == '\\0')) {\n            fcn.0040e990(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 295
    },
    "0040f205": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f205(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0040f09d();\n        }\n        else {\n            iVar1 = fcn.0040f054(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0040f18a(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "0040f253": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f253(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0040f09d();\n        }\n        else {\n            iVar1 = fcn.0040f054(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0040f10f(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "0040f3f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f3f0(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x68));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.0040f3aa(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 263
    },
    "0040f459": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f459(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.00433e8b(&lpString, 0x10, 0x47b704, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.0040f3aa(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.00432a57(unaff_EBX);\n    return;\n}\n",
        "token_count": 275
    },
    "0040f4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f4e0(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x68));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.0040f319();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x0040f54c;\n        }\n    }\n    else {\n        iVar1 = fcn.0040f3aa(lpAppName);\n        if (lpString == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x0040f54c:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x0040f54c;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 395
    },
    "0040f576": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f576(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        iVar2 = fcn.004042ba(arg_14h * 2 + 1);\n        uVar1 = 0;\n        if (arg_14h != 0) {\n            do {\n                *(iVar2 + uVar1 * 2) = (*(arg_10h + uVar1) & 0xf) + 0x41;\n                *(iVar2 + 1 + uVar1 * 2) = (*(arg_10h + uVar1) >> 4) + 0x41;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < arg_14h);\n        }\n        *(iVar2 + uVar1 * 2) = 0;\n        uVar1 = fcn.0040f4e0(arg_8h, arg_ch, iVar2);\n        fcn.004042e5(iVar2);\n    }\n    else {\n        uVar1 = fcn.0040f3aa(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 390
    },
    "0040fba4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040fba4(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint uStack16;\n    \n    if (param_4 == NULL) {\n        fcn.0040129e(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        uStack16 = 0x80070057;\n        fcn.0040129e();\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004011ea();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00401181(param_2);\n    fcn.00432c1b(*param_1, param_2, uStack16, param_2);\n    return param_1;\n}\n",
        "token_count": 275
    },
    "0040fc5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040fc5c(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint in_stack_fffffff0;\n    \n    if (param_4 == NULL) {\n        fcn.0040129e(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        in_stack_fffffff0 = 0x80070057;\n        fcn.0040129e(0x80070057);\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040525b();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00405234(param_2);\n    fcn.00404b0f(*param_1, param_2, in_stack_fffffff0, param_2);\n    return param_1;\n}\n",
        "token_count": 288
    },
    "0040fcbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040fcbf(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040fb57();\n    *param_1 = iVar1;\n    if ((*param_2 != 0) && (iVar1 == 0)) {\n        fcn.0040129e(0x8007000e);\n    }\n    return param_1;\n}\n",
        "token_count": 106
    },
    "0040fdc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fdc2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    \n    if (arg_ch == 0) {\n        fcn.004052bd();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.0040129e(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar3 = arg_8h - *in_ECX >> 1;\n        iVar2 = fcn.004054d5(arg_ch);\n        if (uVar1 < uVar3) {\n            fcn.00404b0f(iVar2, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0040f9c0(iVar2, arg_ch, iVar2 + uVar3 * 2);\n        }\n        fcn.00405234(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0040fe9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040fe9c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = *param_2;\n    piVar1 = iVar2 + -0x10;\n    piVar3 = *param_1 + -0x10;\n    if (piVar1 != piVar3) {\n        if ((*(*param_1 + -4) < 0) || (*piVar1 != *piVar3)) {\n            fcn.0040546a(iVar2, *(iVar2 + -0xc));\n        }\n        else {\n            iVar2 = fcn.00406711(piVar1);\n            fcn.0040128a();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 208
    },
    "004102f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004102f1(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004087f0();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004103d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004103d0(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t hWnd;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *lpCaption;\n    int32_t *arg_8h;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack160;\n    fcn.004102f1(0);\n    arg_8h = &iStack272;\n    hWnd = fcn.00410325(0);\n    if (hWnd != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    iStack280 = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &iStack280);\n    if ((((hWnd == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  iStack280 != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        lpCaption = auStack268;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        lpCaption = *(param_1 + 0x50);\n    }\n    fcn.004086c2(hWnd, param_2, lpCaption, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.004102f1(1);\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 693
    },
    "00410695": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00410695(uint32_t *param_1, int32_t param_2)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    \n    Var2 = *0x496c74 >> 8;\n    if (*0x496c74 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((param_2 == 0) || (*param_1 != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x496c74)(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "004106cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004106cb(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x496c7c == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x496c7c)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 107
    },
    "00410a33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410a33(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.0040f459(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00410bc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410bc8(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00417544(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00417544(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "00410cb2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.00410cb2(int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_11ch;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    if (Locale == 0x800) {\n        uVar1 = fcn.00436ff6(&var_11ch, 4, 0x47d4a4);\n        fcn.0040123a(uVar1);\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &var_11ch, 4);\n        if (iVar5 == 0) goto code_r0x00410d72;\n    }\n    puVar2 = fcn.00433586();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00433586();\n    *puVar2 = 0;\n    uVar3 = fcn.00433ec4(&lpLibFileName, 0x112, 0x111, in_ECX, &var_11ch);\n    piVar4 = fcn.00433586();\n    if (*piVar4 == 0) {\n        puVar2 = fcn.00433586();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.00433586();\n        fcn.004051a6(*puVar2);\n    }\n    if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x00410d72:\n    fcn.00432a57(var_11ch);\n    return;\n}\n",
        "token_count": 455
    },
    "00410d7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d7f(int32_t *param_1)\n\n{\n    if ((*0x496c78 != NULL) && (*param_1 != -1)) {\n        fcn.004106f8();\n        (**0x496c78)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00410fd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004111df)\n\nvoid fcn.00410fd5(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char **in_FS_OFFSET;\n    char *arg_8h;\n    char *pcStack304;\n    char *pcStack300;\n    uint auStack288 [65];\n    uchar uStack28;\n    uchar uStack27;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack288;\n    auStack288[0] = 0x58;\n    fcn.00432a66();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcStack300 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    arg_8h = pcStack300;\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar3 == NULL) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar5 < 0) {\n            pcStack304 = &stack0xfffffec8;\n            arg_8h = NULL;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n                if (((iVar5 == 0) && (*0x10 == 0x165)) &&\n                   (iVar5 = fcn.00437103(),  pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar5 == 1)) {\n                    (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n                    (*pcVar1)();\n                    pcStack304 = 0x2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n        else {\n            pcStack304 = \"ntdll.dll\";\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n            }\n        }\n    }\n    else {\n        (*pcVar3)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n        (*pcVar1)();\n        arg_8h = \"GetSystemDefaultUILanguage\";\n        pcStack304 = 0x2;\n        pcVar4 = (*pcVar4)();\n        if (pcVar4 != NULL) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar1)();\n            pcStack304 = 0x4;\n        }\n    }\n    iVar5 = pcStack304 * 4;\n    pcStack304 = pcStack304 + 1;\n    *(&stack0xfffffeac + iVar5) = 0x800;\n    uStack27 = 0;\n    uStack28 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if (iVar5 != 0) {\n        fcn.00432e30();\n        fcn.004105e5();\n        cVar2 = fcn.00410695();\n        if (cVar2 != '\\0') {\n            fcn.004106cb();\n        }\n        iVar5 = 0;\n        if (0 < pcStack304) {\n            do {\n                iVar6 = fcn.00410cb2(*(&stack0xfffffeac + iVar5 * 4));\n                if (iVar6 != 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < pcStack304);\n        }\n        fcn.00410d7f();\n    }\n    *in_FS_OFFSET = pcStack300;\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 879
    },
    "0041168c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041168c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_4h;\n    \n    fcn.00432a99(0x10);\n    *(unaff_EBP + -4) = 0;\n    fcn.004181d2();\n    fcn.00418443(0xffffffff);\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 8) == 0) {\n        iVar1 = fcn.00406fc8();\n        if ((iVar1 != 0) && (*(iVar1 + 0x3c) != NULL)) {\n            (**(**(iVar1 + 0x3c) + 0x60))();\n            if (*(iVar1 + 0x3c) != NULL) {\n                (**(**(iVar1 + 0x3c) + 4))(1);\n            }\n            *(iVar1 + 0x3c) = 0;\n        }\n    }\n    bVar2 = *0x496dec != 0;\n    *(unaff_EBP + -4) = 4;\n    if (bVar2) {\n        fcn.0041620e(*(unaff_EBP + 8), 0);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 325
    },
    "0041199e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041199e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.00406fc8();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.00411851(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.004087f0();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[8];\n    }\n    iVar1 = fcn.0040a687(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0040a149(*param_1);\n            piVar4 = fcn.0040baa2();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 298
    },
    "00411aac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411aac(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.00406fc8();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0xf] != NULL) {\n            (*piVar1[0xf])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.0041168c(0);\n    fcn.00437143(unaff_retaddr);\n    return;\n}\n",
        "token_count": 176
    },
    "00411dab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411dab(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00406f55();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.0040698e();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x411c17, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0041242e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041242e(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.00401271(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 63
    },
    "004128e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004128e1(int32_t param_1)\n\n{\n    if (*(param_1 + 0x58) != 0) {\n    // WARNING: Could not recover jumptable at 0x004128ec. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x58) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00412a6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412a6b(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0040a388();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ab87();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 165
    },
    "00413036": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00413036(uint *param_1, int32_t param_2)\n\n{\n    uint *extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.0040129e(0x80004005);\n        param_1 = extraout_ECX;\n    }\n    fcn.00433803(*param_1, param_2);\n    return;\n}\n",
        "token_count": 92
    },
    "00414516": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414516(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a66(0);\n    iVar1 = fcn.00406fc8();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004042a8(0x417577);\n        iVar3 = fcn.004042ba(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004181db(0x47d984, 0x4144ab, 0x413bef, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.004042a8(uVar2);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 313
    },
    "00418283": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418283(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a99(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.00416c68(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.00416c68(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.004042a8(0x417577);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.00420bef();\n            if (iVar1 == 0) {\n                fcn.004043db();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00416e1e(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.004042a8(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 513
    },
    "00414612": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414612(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004145cb();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004147dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004147dd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a66(0);\n    iVar1 = fcn.00406fc8();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004042a8(0x417577);\n        iVar3 = fcn.004042ba(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004181db(0x47d9f4, 0x4144c7, 0x413bfd, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.004042a8(uVar2);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 314
    },
    "004148b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004148b2(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00414888();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "00415a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00415a30(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) goto code_r0x00415a3b;\n    do {\n        param_1 = fcn.0040440f();\ncode_r0x00415a3b:\n    } while (param_2 == 0);\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_1 = *(param_1 + 0x10);\n    } while (param_1 != 0);\n    return 0;\n}\n",
        "token_count": 139
    },
    "00415a7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00415a7d(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.00415a65(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "00415bd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415bd7(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.00437483(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.00405266();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.00437483(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.0040b7a1(iVar2, iVar2, arg_ch, iVar2);\n        fcn.00404ba5(uVar1);\n        fcn.0040a042(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 303
    },
    "00415c72": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415c72(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00415c79. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00415dba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00415dba(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.0040440f();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 86
    },
    "00416179": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416179(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00415df0(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 360
    },
    "0041620e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041620e(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.00416179(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.00416179(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 217
    },
    "00416267": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416267(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00416286;\ncode_r0x00416281:\n    do {\n        fcn.0040440f();\ncode_r0x00416286:\n        if (*extraout_ECX != 0) goto code_r0x004162c1;\n        if (*0x496dec == 0) {\n            *(unaff_EBP + -0x10) = 0x496df0;\n            *(unaff_EBP + -4) = 0;\n            *0x496dec = fcn.00415f8c();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x496dec == 0) goto code_r0x00416281;\n        }\n        iVar1 = fcn.00415e56();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x004162c1:\n            iVar1 = fcn.00415c83(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.0041602e(*extraout_ECX, arg_ch);\n            }\n            fcn.00432b3e();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 386
    },
    "0041679d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041679d(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x485a18 == *param_2) && (param_2[1] == *0x485a1c)) && (param_2[2] == *0x485a20)) &&\n           (param_2[3] == *0x485a24)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 455
    },
    "0041684b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041684b(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "00416902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416902(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 85
    },
    "00416b92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416b92(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.004042e5(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.004042ba(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00432e30(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 212
    },
    "00416dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416dd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00420aba(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 288
    },
    "00416fdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416fdd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00420aba(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "00417089": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417089(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0040440f();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.0040e9dd(&arg_8h);\n        fcn.00417036();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004170c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004170c6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0040440f();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.004081ba(&arg_8h);\n        fcn.00417060();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041720a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041720a(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *(*in_ECX + -0xc);\n    iVar2 = fcn.004171cb(arg_ch, arg_10h);\n    if (iVar1 < iVar2) {\n        arg_10h = *(*in_ECX + -0xc) - arg_ch;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.004068e4();\n    }\n    else {\n        uVar3 = fcn.0041240b();\n        fcn.004171f0(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 296
    },
    "004172c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004172c6(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    if (iVar3 < 0) {\n        uVar6 = fcn.0040129e(0x80070057);\n        iVar3 = uVar6 >> 0x20;\n        in_ECX = uVar6;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = *in_ECX;\n        if (iVar3 < *(iVar2 + -0xc)) {\n            uVar4 = fcn.0041240b();\n            fcn.00417287(*arg_10h + iVar2, uVar4);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar2 = *in_ECX;\n        uVar1 = iVar2 + iVar3;\n        uVar5 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar5) {\n            iVar3 = fcn.0043755b(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar5) {\n                arg_10h_00 = fcn.00437633(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.0041720a(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar4 = fcn.0041240b();\n    fcn.004012a8(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 481
    },
    "004178ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004178ee(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a66(0);\n    iVar1 = fcn.00406fc8();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004042a8(0x417577);\n        iVar3 = fcn.004042ba(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004181db(0x47dfd4, 0x4178b7, 0x4177ff, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.004042a8(uVar2);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 313
    },
    "004179dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004179dd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004179b3();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "004180dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004180dc(void)\n\n{\n    if (*0x496e80 == 0) {\n        *0x496e80 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x497020);\n    }\n    return *0x496e80;\n}\n",
        "token_count": 67
    },
    "00418145": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418145(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.0040440f();\n    }\n    if (*0x496e80 == 0) {\n        fcn.004180dc();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x497038;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x497020);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x496e88);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x497020);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x496e88);\n    return;\n}\n",
        "token_count": 242
    },
    "00418336": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418336(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00416d12(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.00416bec();\n        fcn.00420b2b();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00418443": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00418443(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00406fc8();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0041163f(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00418336();\n            fcn.00418336();\n            fcn.00418336();\n            fcn.00418336();\n            fcn.00418336();\n        }\n        iVar2 = fcn.00406f55();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00415d10();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.00437744(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.00437744(*(iVar3 + 0xc));\n                fcn.00431d9c(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.00431cd9(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.00431cd9(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 528
    },
    "00418752": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418752(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0041c05a(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00404ba5(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00404ba5(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 939
    },
    "004188f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004188f8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00418912;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.0041c05a(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x00418912:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.0041872c(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "00418bdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00418bdd(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00418ad1(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00418b58(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00418ad1(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00418c01;\n            fcn.00418b58(&arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.00418b9b(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00418b10(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.0041c05a(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n        else {\n            puVar2 = arg_8h & 0xffff;\n        }\n    }\n    else {\ncode_r0x00418c01:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 388
    },
    "00418d07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00418d07(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        fcn.0040440f();\n    }\n    iVar1 = fcn.00406f55();\n    fcn.00418145(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.004181b2(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.004181b2(0);\n    return puVar2;\n}\n",
        "token_count": 200
    },
    "00418dd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418dd8(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0041c05a(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.00404ba5(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.00418881();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x00418e7d;\n            do {\n                fcn.0040440f();\ncode_r0x00418e7d:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00404ba5(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 562
    },
    "00419521": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419521(int16_t *plLbound, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t cDims;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar2 = plLbound;\n    if ((*plLbound != 0x2011) || (iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(plLbound + 4)),  iVar3 != 1))\n    {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar2);\n        var_8h = 0;\n        cDims = arg_ch;\n        *piVar2 = 0x2011;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(0x11, 1, &cDims);\n        *(piVar2 + 4) = iVar3;\n        if (iVar3 != 0) {\n            return;\n        }\n        fcn.004043db();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(piVar2 + 4), 1, &var_4h);\n    fcn.00419276(uVar4);\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(piVar2 + 4), 1, &plLbound);\n    fcn.00419276(uVar4);\n    iVar3 = plLbound - var_4h;\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    if (iVar3 == arg_ch) {\n        return;\n    }\n    cDims = arg_ch;\n    var_8h = var_4h;\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptorEx)(*(piVar2 + 4), &cDims);\n    fcn.00419276(uVar4);\n    return;\n}\n",
        "token_count": 481
    },
    "0041984d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041984d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        if ((arg_8h == 0) || (arg_ch == 0)) {\n            fcn.0040440f();\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            fcn.0041981a();\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00419bac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419bac(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.00432e30(param_1, 0, 0x18);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00419e79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00419e79(ulong *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 1) == 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*param_1, param_2),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0041a037": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a037(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.00419276(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 1, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 1, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.00420d48(iVar2, 0xffffffff);\n        fcn.00404ba5(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.00420d48(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 356
    },
    "0041a570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a570(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.00419276(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 0, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 0, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.00420d48(iVar2, 0xffffffff);\n        fcn.00404ba5(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.00420d48(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 356
    },
    "0041a60a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a60a(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack20 = *(param_1 + 8);\n    puStack24 = 0x41a61b;\n    var_8h = param_1;\n    var_4h = param_1;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)();\n    if (iVar2 != 1) {\n        uStack28 = 0x492448;\n        puStack24 = &stack0xfffffffc;\n        fcn.004332dc(&stack0xffffffe4, 0x48c270);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puStack24 = &fcn.0041a60a::var_4h;\n    uStack28 = 1;\n    fcn.00419ade();\n    fcn.00419ac4(1, &fcn.0041a60a::var_8h);\n    return (var_4h - var_8h) + 1;\n}\n",
        "token_count": 298
    },
    "0041a649": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a649(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar1 != 1) {\n        fcn.0040440f();\n    }\n    var_4h = 0;\n    var_8h = arg_8h;\n    fcn.00419b46(&var_8h);\n    return;\n}\n",
        "token_count": 136
    },
    "0041a67e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041a67e(uint16_t *param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    \n    if ((param_3 != 0) && (param_4 != 0)) {\n        uVar4 = param_2;\n        if (((param_2 & 0x7000) == 0) && ((uVar4 != 0 && (uVar4 != 1)))) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(param_2, param_3, param_3);\n            *(param_1 + 4) = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = fcn.004043db();\n            }\n            *param_1 = uVar4 | 0x2000;\n            *(param_1 + 10) = param_3;\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(iVar2);\n            *(param_1 + 8) = uVar3;\n            return;\n        }\n    }\n    fcn.0040440f();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 324
    },
    "0041ade1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ade1(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (arg_ch != 0) goto code_r0x0041adf6;\n    while( true ) {\n        fcn.0040440f();\ncode_r0x0041adf6:\n        var_4h = arg_14h;\n        var_8h = uVar2;\n        fcn.0041a67e(arg_8h, 1, &var_8h);\n        if (arg_10h == 0) break;\n        fcn.00419a61(&arg_ch);\n        uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar1 = uVar3 * uVar2;\n        uVar3 = iVar1;\n        if ((iVar1 >> 0x20 == 0) && (uVar3 < 0x80000000)) {\n            fcn.00404ba5(arg_ch, uVar3, arg_10h, uVar3);\n            fcn.00419a77();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0041baaa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041baaa(uint arg_8h, uint pbstrOut, uint dwFlags)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *extraout_ECX;\n    int32_t unaff_EBP;\n    uint pbstr;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = 0;\n    if (*(extraout_ECX + 1) == 2) {\n        fcn.00405ab5(0x47ca58);\n    }\n    else if (*(extraout_ECX + 1) == 1) {\n        uVar2 = fcn.0040f93d();\n        fcn.004012a8(uVar2);\n        *(unaff_EBP + -4) = 0;\n        iVar3 = fcn.00405549(0xd800);\n        if (iVar3 == 0) {\n            fcn.00405ab5(\"Invalid DateTime\");\n        }\n        else {\n            fcn.004068e4(unaff_EBP + 0xc);\n        }\n        fcn.0040128a();\n    }\n    else {\n        *(unaff_EBP + -0x10) = 0;\n        uVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VarBstrFromDisp)\n                          (uVar1, *(unaff_EBP + 0x10), *(unaff_EBP + 0xc), unaff_EBP + -0x10);\n        if (iVar3 < 0) {\n            uVar2 = fcn.0040f93d();\n            fcn.004012a8(uVar2);\n            *(unaff_EBP + -4) = 2;\n            iVar3 = fcn.00405549(0xd800);\n            if (iVar3 == 0) {\n                fcn.00405ab5(\"Invalid DateTime\");\n            }\n            else {\n                fcn.004068e4(unaff_EBP + 0xc);\n            }\n        }\n        else {\n            fcn.004055c5(*(unaff_EBP + -0x10));\n            *(unaff_EBP + -4) = 3;\n            fcn.004068e4(unaff_EBP + 0x10);\n        }\n        fcn.0040128a();\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x10));\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 615
    },
    "0041c0ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c0ed(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = arg_8h;\n    iVar4 = fcn.004186d2(arg_8h, 0xffffffff);\n    if (iVar4 == 0) {\n        fcn.0040440f();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    iVar5 = fcn.00422244(arg_8h, 0, 0);\n    iVar5 = iVar5 + -1;\n    pcVar1 = arg_8h + (iVar4 - iVar5);\n    if (arg_ch < iVar4) {\n        if (arg_ch < iVar5) {\n            if (arg_10h == 0) {\n                *arg_8h = '\\0';\n                return;\n            }\n        }\n        else {\n            pcVar6 = arg_8h + 2;\n            if ((*arg_8h == '\\\\') && (arg_8h[1] == '\\\\')) {\n                for (; *pcVar6 != '\\\\'; pcVar6 = fcn.00437a3d(pcVar6)) {\n                }\n            }\n            arg_8h = pcVar6;\n            if (3 < iVar4 - iVar5) {\n                do {\n                    arg_8h = fcn.00437a3d(arg_8h);\n                } while (*arg_8h != '\\\\');\n            }\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            iVar8 = arg_8h - pcVar3;\n            if (iVar8 + 5 + iVar5 <= arg_ch) {\n                while (iVar5 = (*pcVar2)(arg_8h),  arg_ch < iVar5 + 4 + iVar8) {\n                    do {\n                        arg_8h = fcn.00437a3d(arg_8h);\n                    } while (*arg_8h != '\\\\');\n                }\n                if ((iVar8 < 0) || (arg_ch <= iVar8)) {\n                    iVar8 = arg_ch;\n                }\n                uVar7 = fcn.00432c1b(pcVar3 + iVar8, 5, \"\\\\...\", 5);\n                fcn.0040123a(uVar7);\n                fcn.0041c0a2(pcVar3, iVar4, arg_8h);\n                return;\n            }\n        }\n        fcn.00410c71(pcVar3, iVar4, pcVar1);\n    }\n    return;\n}\n",
        "token_count": 631
    },
    "0041cba9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cba9(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x496e6c == 0) && (*0x496e6c = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f8b),  *0x496e6c == 0)) {\n        iVar2 = fcn.00406f55();\n        *0x496e6c = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x496e6c == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 233
    },
    "0041cd12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cd12(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_28h;\n    uint lpPoint;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar6 = *(arg_8h + 4);\n    if ((uVar6 == 0x367) || ((uVar6 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x0041cefd:\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, uVar6, uVar6, 1);\n        return 0;\n    }\n    if (((uVar6 < 0x200) || (0x209 < uVar6)) && ((uVar6 < 0xa0 || (0xa9 < uVar6)))) {\n        if ((uVar6 != 0x112) && ((uVar6 < 0x100 || (0x109 < uVar6)))) {\n            iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h, 0, uVar6, uVar6, 1);\n            if (iVar3 == 0) {\n                return 1;\n            }\ncode_r0x0041ce24:\n            (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n            return 1;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n        pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            do {\n                iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n            } while (iVar3 != 0);\n        }\n        iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n        if (iVar3 == 0) goto code_r0x0041ced9;\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n        iVar3 = (**(*var_4h + 0x100))(iVar2);\n        if (iVar3 != 0) goto code_r0x0041ced9;\n        (*_sym.imp.USER32.dll_TranslateMessage)(iVar2);\n        uVar6 = *(iVar2 + 4);\n        if ((uVar6 != 0x112) && ((uVar6 < 0x104 || (0x107 < uVar6)))) goto code_r0x0041ced9;\n    }\n    else {\n        iVar3 = fcn.0041cc03(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            goto code_r0x0041ce24;\n        }\n        if (*(iVar2 + 4) != 0x201) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            return 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n        if ((iVar4 != 5) && (iVar4 != 3)) {\n            if (iVar4 == 1) {\n                uVar5 = fcn.0041c9eb(iVar3, *(iVar2 + 0x14), iVar3);\n            }\n            else {\n                uVar5 = fcn.0041ca59(iVar4);\n            }\n            *arg_ch = uVar5;\n            uVar6 = *(iVar2 + 4);\n            goto code_r0x0041cefd;\n        }\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, 0xa1, 0xa1);\n    }\n    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\ncode_r0x0041ced9:\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    fcn.0041cc03(lpPoint, var_8h, 0);\n    return 1;\n}\n",
        "token_count": 1106
    },
    "0041cf0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cf0d(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpMsg;\n    uint lpPoint;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x68) != 1) && (iVar3 = fcn.0041cba9(),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, *(param_1 + 0x20), 0x367, 0x367, 3),  iVar3 == 0)) {\n        var_ch = *(param_1 + 0x68);\n        *(param_1 + 0x68) = 1;\n        if (var_ch != 2) {\n            piVar1 = *(param_1 + 0x80);\n            if ((piVar1 != NULL) && (iVar3 = (**(*piVar1 + 0x60))(1),  iVar3 == 0)) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n                *(param_1 + 0x68) = 0;\n                return;\n            }\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x111, 0xe145);\n            *(param_1 + 0x68) = 2;\n        }\n        else {\n            var_ch = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, 0xe002, 0);\n            if (var_ch == 0) {\n                var_ch = 0xe001;\n            }\n            var_8h = 0;\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            fcn.0041cc03(lpPoint, var_14h, 0);\n            var_4h = 0;\n            iVar3 = fcn.00406f55();\n            piVar1 = *(iVar3 + 4);\n            var_10h = piVar1;\n            do {\n                while( true ) {\n                    if (*(param_1 + 0x68) == 0) goto code_r0x0041d03d;\n                    iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 0);\n                    if (iVar3 != 0) break;\n                    iVar3 = (**(*piVar1 + 0x60))(var_4h);\n                    var_4h = var_4h + 1;\n                    if (iVar3 == 0) {\n                        var_4h = 0;\n                        (*_sym.imp.USER32.dll_WaitMessage)();\n                    }\n                }\n                iVar3 = fcn.0041cd12(&lpMsg, &var_8h);\n            } while (iVar3 != 0);\ncode_r0x0041d03d:\n            pcVar2 = _sym.imp.USER32.dll_ReleaseCapture;\n            *(param_1 + 0x68) = 0;\n            (*pcVar2)();\n            uVar4 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x20));\n            fcn.0040a149(uVar4);\n            (*pcVar2)();\n            pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, var_ch, 0);\n            if (*(param_1 + 0x80) != NULL) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n            }\n            if (var_8h != 0) {\n                if (var_8h == -1) {\n                    (*pcVar2)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n                }\n                else {\n                    (**(*var_10h + 0xac))(var_8h, 1);\n                }\n            }\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1012
    },
    "0041d0bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041d0bf(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 306
    },
    "0041d44f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d44f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.004081ba(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 205
    },
    "0041d731": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d731(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0xc;\n    fcn.00432a66(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        iVar4 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.004081ba();\n        piVar2 = *ppiVar3;\n        if (piVar2[8] != 0) {\n            fcn.00416f2c(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00416fd2(iVar4);\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 357
    },
    "0041ec42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ec42(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.0040440f();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ec56. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x2c))();\n    return;\n}\n",
        "token_count": 126
    },
    "0041eee9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eee9(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint var_624h;\n    uint var_620h;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if ((iVar2 == 0) &&\n       (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n        iVar3 = (*pcVar1)(lpString2);\n        if (iVar2 == iVar3) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_61ch);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_414h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_20ch + iVar2) & 0x80) != 0) && (*(&var_61ch + iVar2) != *(&var_414h + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.00437a3d(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n    }\n    fcn.00432a57(unaff_EDI);\n    return;\n}\n",
        "token_count": 499
    },
    "0041f3e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f3e5(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar *puStack360;\n    uchar *puStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uchar *puStack332;\n    uint arg_8h;\n    uchar auStack284 [276];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ &stack0xfffffeb8;\n    arg_8h = 0x14;\n    puStack332 = 0x41f409;\n    fcn.00432a66();\n    puStack352 = param_3;\n    if (param_1 != NULL) goto code_r0x0041f42e;\n    do {\n        puStack332 = 0x41f42e;\n        fcn.0040440f();\ncode_r0x0041f42e:\n    } while (param_2 == NULL);\n    puStack332 = &stack0xfffffea4;\n    puStack336 = param_1;\n    uStack340 = 0x104;\n    puStack344 = param_2;\n    puStack348 = 0x41f44b;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)();\n    if (uVar1 == 0) {\n        puStack348 = 0xffffffff;\n        puStack352 = param_2;\n        puStack356 = 0x104;\n        puStack360 = param_1;\n        fcn.0040445d();\n        puStack348 = param_2;\n        puStack356 = 0x41f465;\n        fcn.0041f3ba();\n        goto code_r0x0041f537;\n    }\n    if (0x103 < uVar1) goto code_r0x0041f537;\n    puStack348 = 0x41f475;\n    puStack348 = fcn.0040f93d();\n    puStack352 = 0x41f47e;\n    fcn.004012a8();\n    puStack332 = NULL;\n    puStack352 = &stack0xfffffea8;\n    puStack356 = param_1;\n    puStack360 = 0x41f48c;\n    fcn.0041f21b();\n    puStack360 = puStack344;\n    puStack348 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)();\n    if (puStack348 == NULL) {\n        puStack356 = &stack0xfffffe9c;\n        puStack360 = &stack0xfffffe98;\n        puStack352 = puStack348;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(puStack344, 0, 0, 0);\n        if (iVar2 == 0) {\n            puStack348 = param_2;\n            puStack356 = 0x41f4c0;\n            fcn.0041f3ba();\n            goto code_r0x0041f4c0;\n        }\n        if ((puStack356 & 2) == 0) {\n            puStack348 = param_1;\n            puStack352 = 0x41f4da;\n            (*_sym.imp.USER32.dll_CharUpperA)();\n        }\n        if ((puStack356 & 4) == 0) {\n            puStack352 = param_2;\n            puStack356 = 0x41f4eb;\n            puStack348 = &stack0xfffffeb8;\n            puStack348 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n            if (puStack348 != 0xffffffff) {\n                puStack352 = 0x41f4f7;\n                (*_sym.imp.KERNEL32.dll_FindClose)();\n                if ((puStack348 != NULL) && (param_1 < puStack348)) {\n                    puStack348 = &stack0xfffffee4;\n                    puStack352 = 0x41f50c;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    if (iVar2 + (puStack348 - param_1) < 0x104) {\n                        puStack356 = &stack0xfffffee4;\n                        puStack352 = 0x104 - (puStack348 - param_1);\n                        puStack360 = 0x41f526;\n                        puStack348 = puStack356;\n                        fcn.00410c71();\n                        goto code_r0x0041f529;\n                    }\n                }\ncode_r0x0041f4c0:\n                puStack348 = 0x41f4cb;\n                fcn.0040128a();\n                goto code_r0x0041f537;\n            }\n        }\n    }\ncode_r0x0041f529:\n    puStack348 = 0x41f534;\n    fcn.0040128a();\ncode_r0x0041f537:\n    *in_FS_OFFSET = uStack340;\n    puStack332 = 0x41f552;\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 1153
    },
    "0041f63e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041f63e(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint in_stack_fffffedc;\n    uint uStack276;\n    uchar auStack268 [104];\n    uchar auStack164 [156];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack164;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0xffffffff;\n    fcn.00405266();\n    if (((param_2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2),  0x103 < iVar2)) ||\n       (iVar2 = param_2,  iVar3 = fcn.0041f3e5(),  iVar3 == 0)) goto code_r0x0041f7bb;\n    fcn.0040559b(auStack268);\n    uVar4 = param_3 & 3;\n    uStack276 = 0;\n    if (uVar4 == 0) {\n        uStack276 = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        uStack276 = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        uStack276 = 0xc0000000;\n    }\n    uVar4 = param_3 & 0x70;\n    uVar5 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x0041f71b:\n        uVar5 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = 3;\n            if (uVar4 != 0x40) goto code_r0x0041f71b;\n        }\n    }\n    in_stack_fffffedc = 0xc;\n    if ((param_3 & 0x1000) == 0) {\n        cVar1 = '\\x03';\n    }\n    else {\n        cVar1 = (-((param_3 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar4 = 0x80;\n    if ((param_3 & 0x10000) != 0) {\n        uVar4 = 0x20000080;\n    }\n    if ((param_3 & 0x20000) != 0) {\n        uVar4 = uVar4 | 0x80000000;\n    }\n    if ((param_3 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x10000000;\n    }\n    if ((param_3 & 0x80000) != 0) {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_2, uStack276, uVar5, &stack0xfffffedc, cVar1, uVar4, 0);\n    if (iVar3 == -1) {\n        fcn.0041f3ba(iVar2, param_2, param_4);\n    }\n    else {\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 8) = 1;\n    }\ncode_r0x0041f7bb:\n    fcn.00432a57(in_stack_fffffedc);\n    return;\n}\n",
        "token_count": 862
    },
    "0041fc27": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041fc27(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar1 = fcn.0041fbdc(arg_8h);\n    iVar2 = fcn.0041fb70(arg_8h);\n    if (iVar2 != 0) {\n        iVar1 = iVar1 + (bVar6 * 2 + 1) * 2;\n        iVar2 = fcn.00432b70(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        iVar5 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar5 = *(arg_8h + 8);\n    }\n    if (iVar5 != 0) {\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            uVar4 = *puVar3;\n            if ((uVar4 != 0) && (!bVar6)) {\n                uVar4 = uVar4 - 2;\n            }\n            iVar5 = iVar5 + -1;\n            iVar1 = puVar3 + uVar4 + 2;\n        } while (iVar5 != 0);\n    }\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 494
    },
    "0041ff2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.0041ff2c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar12 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.0041fb70(puVar2);\n        iVar1 = bVar12 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar12) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar4 = var_58h + iVar4 * 2;\n            if (var_58h <= iVar4) {\n                uVar13 = fcn.0041fbdc(puVar2);\n                puVar5 = uVar13;\n                iVar7 = 0;\n                iVar10 = uVar13 >> 0x20;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00432b70(puVar5 + iVar1);\n                    iVar7 = var_58h + 2 + iVar3 * 2;\n                    iVar10 = iVar4;\n                }\n                uVar6 = iVar7 + 3 + puVar5 & 0xfffffffc;\n                uVar11 = puVar5 + iVar10 + 3 & 0xfffffffc;\n                if (bVar12) {\n                    iVar9 = *(puVar2 + 4);\n                }\n                else {\n                    iVar9 = *(puVar2 + 2);\n                }\n                if ((iVar4 != iVar7) && (iVar9 != 0)) {\n                    uVar8 = (in_ECX[1] - uVar6) + puVar2;\n                    if (in_ECX[1] < uVar8) goto code_r0x0042006c;\n                    fcn.0041872c(uVar11, uVar8, uVar6, uVar8);\n                }\n                *puVar5 = arg_ch;\n                iVar4 = iVar4 + iVar1 * -2;\n                fcn.0041872c(puVar5 + iVar1, iVar4, &var_44h, iVar4);\n                in_ECX[1] = in_ECX[1] + (uVar11 - uVar6);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x0042006c:\n    fcn.00432a57(var_58h);\n    return;\n}\n",
        "token_count": 864
    },
    "0042007b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042007b(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x004200f7;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x004200f7:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.0041ff2c(arg_8h_00, arg_8h);\n    fcn.00432a57(unaff_EDI);\n    return;\n}\n",
        "token_count": 475
    },
    "0042040c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042040c(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x496e44;\n    uVar3 = *0x496e40;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.00414407(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 353
    },
    "0042049a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042049a(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x496e44;\n    uVar3 = *0x496e40;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0041439e(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 354
    },
    "0042055e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042055e(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.00418145(8);\n    if (*0x497080 == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar2 != 0) {\n            *0x497080 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n        }\n    }\n    if (*0x497084 == '\\0') {\n        iVar2 = fcn.00433049(0x4202d4);\n        *0x497084 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.004181b2(8);\n    iVar2 = *0x497080;\n    fcn.00414851();\n    fcn.00432a57(iVar2);\n    return;\n}\n",
        "token_count": 331
    },
    "00420aba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420aba(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.004042ba(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.0040440f();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 141
    },
    "00420b01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00420b01(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 127
    },
    "00420bef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420bef(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00420aba(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 198
    },
    "00420f36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420f36(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00420d48(arg_10h + iVar1, 0xffffffff);\n            iVar3 = *(in_ECX + 4) + arg_8h;\n            fcn.0041872c(iVar3 + arg_10h, (*(in_ECX + 8) - arg_8h) - arg_10h, iVar3, iVar1 - arg_8h);\n            fcn.00432e30(*(in_ECX + 4) + arg_8h, 0, arg_10h);\n        }\n        else {\n            fcn.00420d48(arg_10h + arg_8h, 0xffffffff);\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0040440f();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 353
    },
    "004212bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004212bc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0040e4e6(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0040e465(iVar1);\n        if (iVar2 == 0) {\n            fcn.004043f5();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 159
    },
    "004212fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004212fb(int32_t *param_1)\n\n{\n    int32_t *hWnd;\n    \n    hWnd = param_1;\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        fcn.0040e4e6(param_1[2], &hWnd);\n        if (hWnd != NULL) {\n            (*_sym.imp.USER32.dll_SetFocus)(hWnd);\n            if (param_1[3] != 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0xb1, 0, 0xffffffff);\n            }\n        }\n    }\n    fcn.00413bd5();\n    return;\n}\n",
        "token_count": 161
    },
    "0042134a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042134a(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = arg_8h;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        if ((*arg_10h < 0) || (2 < *arg_10h)) {\n            *arg_10h = 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf1, *arg_10h, 0);\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf0, 0, 0);\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00421500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421500(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = arg_8h;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        (*_sym.imp.USER32.dll_SetScrollPos)(arg_8h, 2, *arg_10h, 1);\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetScrollPos)(arg_8h, 2);\n        *arg_10h = uVar2;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004215ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004215ef(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        fcn.0040e4e6(arg_8h[2], &arg_ch);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_ch, 0x407, 0, uVar2);\n        (*pcVar1)(arg_ch, 0x408, 1, uVar3);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00421641": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421641(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x20) != 0) {\n        return;\n    }\n    iVar1 = fcn.0040e443();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.0040b126(arg_10h);\n        if (iVar1 == 0) {\n            fcn.004043f5();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x20));\n            if (*(iVar1 + 0x20) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x004216bc;\n        }\n    }\n    iVar2 = fcn.0040e465(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x004216bc:\n    fcn.0040e891(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 342
    },
    "004216e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004216e1(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint unaff_EDI;\n    uint var_48h;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.004216ca(arg_ch);\n    uVar1 = arg_18h;\n    if (*arg_8h == 0) {\n        puVar3 = fcn.00433586();\n        uVar1 = *puVar3;\n        puVar3 = fcn.00433586();\n        *puVar3 = 0;\n        fcn.00433cd4(&lpString, 0x40, 0x3f, arg_10h, &arg_18h);\n        piVar4 = fcn.00433586();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00433586();\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.00433586();\n            fcn.004051a6(*puVar3);\n        }\n        fcn.0041748c(arg_8h_00, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, &lpString, 0x40);\n        iVar2 = fcn.00437fcf(&lpString, 0x40, arg_10h, uVar1);\n        if (iVar2 != 1) {\n            fcn.00410574(arg_14h, 0, 0xffffffff);\n            fcn.004212fb();\n        }\n    }\n    fcn.00432a57(unaff_EDI);\n    return;\n}\n",
        "token_count": 462
    },
    "004217a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004217a4(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.004216e1(arg_8h, arg_ch, 0x47e644, 0xf116, arg_10h);\n    }\n    else {\n        fcn.004216e1(arg_8h, arg_ch, 0x47e644, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.00410574(0xf116, 0, 0xffffffff);\n            fcn.004212fb();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00421815": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421815(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.004216e1(arg_8h, arg_ch, 0x47e648, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "00421846": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421846(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.004216e1(arg_8h, arg_ch, 0x47b704, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "00421875": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421875(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.004216e1(arg_8h, arg_ch, 0x47e644, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "004218a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004218a4(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.004216e1(arg_8h, arg_ch, 0x47e64c, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "004218d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004218d3(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.004216e1(arg_8h, arg_ch, 0x47e650, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00421902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421902(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.004216e1(arg_8h, arg_ch, \"%I64d\", 0xf110, *arg_10h);\n    }\n    else {\n        fcn.004216e1(arg_8h, arg_ch, \"%I64d\", 0xf110, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0042194a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042194a(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.004216e1(arg_8h, arg_ch, \"%I64u\", 0xf117, *arg_10h);\n    }\n    else {\n        fcn.004216e1(arg_8h, arg_ch, \"%I64u\", 0xf117, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00421992": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421992(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.004216ca(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0041748c(arg_8h_00, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00421e28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421e28(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h_00 = fcn.004216ca(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0041748c(arg_8h_00, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        uVar2 = fcn.0040b7a1(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, uVar2);\n        fcn.0040a042(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00421e7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421e7a(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = hWnd;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &hWnd);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*piVar2 == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.00405266();\n        }\n        else {\n            uVar4 = (*pcVar1)(hWnd, 0x18a, iVar3, 0);\n            uVar4 = fcn.0040b7a1(uVar4);\n            (*pcVar1)(hWnd, 0x189, iVar3, uVar4);\n        }\n        fcn.0040a042(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00421f0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421f0e(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    int32_t iVar2;\n    \n    hWnd = arg_8h;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar2) {\n            (*pcVar1)(arg_8h, 0x186, iVar2, 0);\n        }\n    }\n    else {\n        fcn.00421e7a(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00421f6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421f6e(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = hWnd;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &hWnd);\n    puVar2 = lParam;\n    if (*piVar1 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar3 == -1) {\n            fcn.0041748c(hWnd, *puVar2);\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar3 < 1) {\n            uVar4 = fcn.0040117c(0xff);\n            iVar3 = 0x100;\n        }\n        else {\n            uVar4 = fcn.0040b7a1(iVar3, iVar3 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar4, iVar3);\n        fcn.0040a042(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00422000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422000(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    hWnd = arg_8h;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &arg_8h);\n    puVar2 = arg_10h;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x158, 0xffffffff, *arg_10h);\n        if (iVar3 < 0) {\n            fcn.0041748c(arg_8h, *puVar2);\n        }\n        else {\n            (*pcVar1)(arg_8h, 0x14e, iVar3, 0);\n        }\n    }\n    else {\n        fcn.00421f6e(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0042206e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042206e(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x00422081;\n    do {\n        fcn.0040440f();\ncode_r0x00422081:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x004220d9;\n                if (cVar2 < ':') goto code_r0x004220b9;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x004220b9:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x004220ec;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x004220d9:\n            iVar3 = fcn.00437d12(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x004220ec:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.0040117c(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.0040a042(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00422175;\n                if (cVar2 < ':') goto code_r0x00422132;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00422132:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x00422192;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.00410c71(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x00422175:\n            iVar3 = fcn.00437d12(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x00422192:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1000
    },
    "00422244": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422244(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (pszPath == 0) {\n        fcn.0040440f();\n    }\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        fcn.0040445d(arg_ch, arg_10h, uVar1, 0xffffffff);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 172
    },
    "00422282": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422282(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack848;\n    char *pcStack844;\n    uint uStack840;\n    uchar *puStack836;\n    uchar *puStack832;\n    uchar *pszPath;\n    char acStack784 [124];\n    uchar auStack660 [132];\n    uchar auStack528 [260];\n    char acStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ &stack0xfffffd6c;\n    iVar2 = fcn.00406f55();\n    *(iVar2 + 8) = *(param_1 + 0x44);\n    *(iVar2 + 0xc) = *(param_1 + 0x44);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if ((iVar3 == 0) || (iVar3 == 0x104)) {\n        fcn.00413bd5();\n    }\n    puVar4 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (puVar4 == NULL) {\n        fcn.00413bd5();\n    }\n    *puVar4 = 0;\n    pszPath = &stack0xfffffef4;\n    puStack832 = 0x42230b;\n    iVar3 = fcn.00422244(pszPath, &stack0xfffffdf0, 0x104);\n    if (iVar3 != 0) {\n        puStack832 = 0x422314;\n        fcn.00413bd5();\n    }\n    if (*(param_1 + 0x60) == 0) {\n        puStack832 = &stack0xfffffdf0;\n        puStack836 = 0x422326;\n        iVar3 = fcn.00436b7c();\n        *(param_1 + 0x60) = iVar3;\n        if (iVar3 == 0) goto code_r0x004043db;\n    }\n    iVar3 = *(param_1 + 0x50);\n    if (iVar3 == 0) {\n        puStack832 = 0x100;\n        puStack836 = &stack0xfffffcf0;\n        uStack840 = 0xe000;\n        pcStack844 = 0x42234d;\n        iVar3 = fcn.00415b14();\n        if (iVar3 == 0) {\n            pcStack844 = *(param_1 + 0x60);\n        }\n        else {\n            pcStack844 = &stack0xfffffcf0;\n        }\n        puStack848 = 0x42235f;\n        iVar3 = fcn.00436b7c();\n        *(param_1 + 0x50) = iVar3;\n        if (iVar3 == 0) goto code_r0x004043db;\n    }\n    *(iVar2 + 0x10) = iVar3;\n    if (*(param_1 + 100) == 0) {\n        puStack848 = &stack0xfffffff8 + -puVar4;\n        if (*(param_1 + 0x6c) == 1) {\n            pcStack844 = \".CHM\";\n        }\n        else {\n            pcStack844 = \".HLP\";\n        }\n        fcn.00410c71(puVar4);\n        pcStack844 = &stack0xfffffef4;\n        puStack848 = 0x4223a3;\n        iVar2 = fcn.00436b7c();\n        *(param_1 + 100) = iVar2;\n        if (iVar2 == 0) goto code_r0x004043db;\n        *puVar4 = 0;\n    }\n    if (*(param_1 + 0x68) == 0) {\n        pcStack844 = \".INI\";\n        puStack848 = 0x104;\n        uVar5 = fcn.00437a7e(&stack0xfffffdf0);\n        fcn.0040123a(uVar5);\n        iVar2 = fcn.00436b7c(&stack0xfffffdf0);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x004043db:\n            puStack848 = 0x492318;\n            pcStack844 = &stack0xfffffd6c;\n            fcn.004332dc(&stack0xfffffcb0, 0x48c178);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    puStack832 = 0x4223f9;\n    fcn.00432a57(pszPath);\n    return;\n}\n",
        "token_count": 1056
    },
    "00422401": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00422401(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00406f55();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    fcn.004062cf();\n    iVar3 = fcn.00406f55();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = param_1;\n        *(iVar3 + 0x4c) = param_2;\n        *(iVar3 + 0x44) = unaff_ESI;\n        fcn.00422282();\n    }\n    iVar3 = fcn.00406f55();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00411dab();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x496ae4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 344
    },
    "0042286e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042286e(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.004224da(param_1, param_1, param_2);\n        fcn.00422828(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00422a17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00422a73)\n// WARNING: Removing unreachable block (ram,0x00422a7f)\n\nvoid fcn.00422a17(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar1)(iVar4, 2)) {\n        iVar5 = fcn.0040a170(iVar4);\n        if ((((iVar5 != 0) && (*0x25 != iVar4)) && (iVar6 = fcn.00422986(*0x25, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x3c) & 2) != 0)) && (*(unaff_EBX + 0xb4) == 0)))) {\n            (*pcVar2)(iVar4, 4);\n            *(iVar5 + 0x3c) = *(iVar5 + 0x3c) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "00422ba8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422ba8(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xb0);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xb0) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x160))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xb0) == 0) && (*(param_1 + 0xb0) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x160))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00422cb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422cb8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x15c))();\n    if (iVar1 != 0) {\n        return param_1[0x25];\n    }\n    if ((param_1[0x23] != 0) && (*(param_1[0x23] + 0x94) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "00422edb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422edb(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_10h == 0) && (arg_8h != 0)) {\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (**0x494888)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar2, 0, arg_ch, 0xffffffff, arg_8h, arg_10h);\n        if ((arg_8h != 0) && (arg_10h < iVar1)) {\n            iVar1 = fcn.0040129e(0x80004005);\n        }\n        if ((0 < iVar1) && (arg_8h != 0)) {\n            *(arg_8h + -2 + iVar1 * 2) = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 226
    },
    "00423554": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423554(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00406f55();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.00432e30(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (var_30h != 0) {\n            iVar2 = fcn.00406f55();\n            iVar2 = fcn.004084eb(*(iVar2 + 8), var_30h, &var_28h);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0040d249(var_28h, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "0042369e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042369e(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2d] != NULL) {\n        piStack24 = 0x4236b3;\n        (*param_1[0x2d])();\n    }\n    piVar2 = (**(*param_1 + 0x13c))();\n    if (piVar2 != NULL) {\n        piStack24 = 0x4236ce;\n        iVar3 = (**(*piVar2 + 0x8c))();\n        if (iVar3 == 0) {\n            return;\n        }\n    }\n    piStack24 = 0x4236dc;\n    iVar3 = fcn.00406f55();\n    piVar4 = *(iVar3 + 4);\n    if ((piVar4 != NULL) && (piVar4[8] == param_1)) {\n        if (piVar2 == NULL) {\n            piStack24 = 0x4236f6;\n            iVar3 = (**(*piVar4 + 0x94))();\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n        piStack24 = 0x423705;\n        fcn.00412975();\n        iStack28 = 0x42370e;\n        fcn.004128e1();\n        iStack28 = 0x423713;\n        iStack28 = fcn.0041853c();\n        if (iStack28 == 0) {\n            fcn.0041855c();\n            return;\n        }\n        iStack28 = 0x423724;\n        iVar3 = fcn.00406f55();\n        if ((*(iVar3 + 0x14) == '\\0') && (piVar4[8] == 0)) {\n            iStack28 = 0;\n            fcn.00410ac9();\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x13] != 0)) {\n        piStack24 = 0x42374a;\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                piStack24 = 0x423778;\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            piStack24 = &fcn.0042369e::var_4h;\n            iStack28 = 0x42375c;\n            iVar3 = (**(*piVar2 + 100))();\n            if (iVar3 == 0) {\n                iStack28 = 0x492448;\n                piStack24 = &stack0xfffffffc;\n                fcn.004332dc(&stack0xffffffe4, 0x48c270);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            piStack24 = 0x423767;\n            piVar4 = fcn.0040acd7();\n        } while (piVar4 == param_1);\n        iStack28 = 0x42378a;\n        piStack24 = param_1;\n        (**(*piVar2 + 0x94))();\n    }\n    piStack24 = 0x423791;\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 803
    },
    "00423912": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423912(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t *extraout_ECX;\n    \n    fcn.0040a0a5();\n    uVar1 = fcn.0040e62b();\n    piVar2 = in_ECX;\n    if ((uVar1 & 0x40000000) == 0) {\n        piVar2 = fcn.0040ad16();\n    }\n    piVar4 = NULL;\n    if (piVar2 == NULL) {\n        fcn.0040440f();\n        piVar4 = extraout_ECX;\n    }\n    if (arg_8h != piVar4) {\n        arg_ch = in_ECX;\n    }\n    if (arg_ch != piVar4) {\n        if ((piVar2 == arg_ch) ||\n           ((piVar4 = fcn.0040ad16(),  piVar2 == piVar4 &&\n            (iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[8], 0x36d, 0x40, 0),  iVar3 != 0)))) {\n            piVar4 = 0x1;\n        }\n        else {\n            piVar4 = NULL;\n        }\n    }\n    piVar2[0xf] = piVar2[0xf] & 0xffffffdf;\n    if (piVar4 != NULL) {\n        piVar2[0xf] = piVar2[0xf] | 0x20;\n    }\n    fcn.004233ab((piVar4 == NULL) * '\\x04' + '\\x04');\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 == NULL) {\n        iVar3 = (**(*in_ECX + 0x140))();\n        piVar2 = *(iVar3 + 0xb0);\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != NULL) && (arg_10h == 0)) {\n        (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n    }\n    (**(*piVar2 + 0x164))(arg_8h);\n    return;\n}\n",
        "token_count": 548
    },
    "004239f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004239f3(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040ad16();\n    if (iVar2 == 0) {\n        iVar2 = fcn.0040440f();\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 0x68) == 0) {\ncode_r0x00423a38:\n        fcn.0040a0a5();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x00423a31:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x00423a38;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x00423a31;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00423c8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423c8a(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.0040440f();\n    }\n    piVar1 = fcn.00422ca4();\n    if (arg_10h == 0) {\n        fcn.0040ea97(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x150))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.00422cb8(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x148))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x150))(arg_ch);\n        piVar1[0x34] = piVar1[0x34] | 0xc;\n    }\n    iVar2 = fcn.00422cb8();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x23] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x23] + 0x16c))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x28] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x00423d71;\n            }\n            piVar1[0x28] = 8;\n            goto code_r0x00423d7f;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x28] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x28] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x00423d71:\n        fcn.0040e770(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x00423d7f:\n    (**(*piVar1 + 0x148))(0);\n    return;\n}\n",
        "token_count": 586
    },
    "00423d8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423d8f(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041777c(*(in_ECX + 0x20));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x80) == NULL || (iVar2 = (**(**(in_ECX + 0x80) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        if (arg_8h == 0) {\n            fcn.0040440f();\n        }\n        fcn.0040dfea();\n        iVar2 = fcn.0040698e();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n             (iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x20)),  iVar2 != 0)) &&\n            (iVar2 = fcn.0040baa2(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x20)),  iVar2 != 0)) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.00417962(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.0040882d(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x00423f02;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x54) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.0040e010(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x00423f02:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1006
    },
    "00423f18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423f18(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0040ad16();\n    if (iVar1 == 0) {\n        fcn.0040440f();\n    }\n    if ((in_ECX[0x20] != NULL) && (iVar2 = (**(*in_ECX[0x20] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xf] = in_ECX[0xf] & 0xffffffbf;\n        if (*(iVar1 + 0x68) == 0) {\n            in_ECX[0x2a] = 0xe001;\n        }\n        else {\n            in_ECX[0x2a] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x362, in_ECX[0x2a], 0);\n        iVar1 = (**(*in_ECX + 0x154))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x20));\n        }\n        goto code_r0x00423ff8;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x2a] = 0;\n    }\n    else {\n        if (arg_8h - 0xf000 < 0x1f0) {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        else if (0xfeff < arg_8h) {\n            in_ECX[0x2a] = 0xef1f;\n            goto code_r0x00423ff4;\n        }\n        in_ECX[0x2a] = arg_8h;\n    }\ncode_r0x00423ff4:\n    *(iVar1 + 0x3c) = *(iVar1 + 0x3c) | 0x40;\ncode_r0x00423ff8:\n    if (in_ECX[0x2a] != in_ECX[0x2b]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar1 = fcn.0040a149(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[8], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 650
    },
    "00424093": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424093(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x88);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.004081ba(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x20));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 203
    },
    "00424806": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424806(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00420aba(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040440f();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 316
    },
    "004248ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004248ea(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x3c) == 0) {\n        uVar1 = fcn.00409e57(\"ImageList_Draw\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x3c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x3c);\n    return;\n}\n",
        "token_count": 127
    },
    "00424998": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00424998(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004249ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004249ce(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x9c;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00409e57(\"ImageList_GetImageInfo\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 140
    },
    "00424a77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00424a77(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00424f48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00424f48(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack24;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x3c;\n    var_4h = 0x424f54;\n    fcn.00432a66();\n    var_4h = 10;\n    iStack12 = 0x424f60;\n    fcn.0042479a();\n    *(unaff_EBP + -4) = 0;\n    iStack12 = 10;\n    iStack16 = 0x424f6e;\n    fcn.0042479a();\n    iVar1 = *(extraout_ECX + 0x88);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    while (iVar1 != 0) {\n        iStack16 = unaff_EBP + -0x10;\n        var_10h = 0x424f90;\n        ppiVar3 = fcn.004081ba();\n        piVar4 = *ppiVar3;\n        var_10h = 0x424f9c;\n        (**(*piVar4 + 0x15c))();\n        iStack12 = piVar4[8];\n        iStack16 = 0x424fae;\n        fcn.00424dc5();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while( true ) {\n        while( true ) {\n            do {\n                if (puVar5 == NULL) {\n                    puVar5 = *(unaff_EBP + -0x28);\n                    while (puVar5 != NULL) {\n                        iStack12 = puVar5[2];\n                        puVar5 = *puVar5;\n                        var_10h = 0x425012;\n                        var_10h = fcn.0040a170();\n                        uStack24 = 0x47e71c;\n                        piVar4 = fcn.00415a7d();\n                        if (piVar4 != NULL) {\n                            var_10h = 0x42502a;\n                            (**(*piVar4 + 0x60))();\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x2c) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x425042;\n                    fcn.00422eb0();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + -0x48) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x425051;\n                    fcn.00422eb0();\n                    iStack16 = 0x425056;\n                    fcn.00432b3e();\n                    return;\n                }\n                iStack12 = puVar5[2];\n                puVar5 = *puVar5;\n                var_10h = 0x424fc5;\n                var_10h = fcn.0040a170();\n                uStack24 = 0x4804e0;\n                piVar4 = fcn.00415a7d();\n            } while (piVar4 == NULL);\n            if (piVar4[0x25] != 0) break;\n            var_10h = 0x424ff8;\n            (**(*piVar4 + 0x60))();\n        }\n        var_10h = 0x424fe6;\n        piVar4 = fcn.0040acd7();\n        if (piVar4 == NULL) break;\n        var_10h = 0x424ff1;\n        (**(*piVar4 + 0x60))();\n    }\n    uStack24 = 0x492448;\n    fcn.004332dc(&stack0xffffffe8, 0x48c270);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1026
    },
    "00425eea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00425eea(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.00409e57(\"GetOpenFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 125
    },
    "00425f89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00425f89(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00425fbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00425fbf(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.00409e57(\"GetSaveFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 126
    },
    "0042605e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042605e(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004260c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004260c2(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(*(param_1 + 0x74) + 0x1c));\n    bVar1 = false;\n    fcn.00432e30(*(*(param_1 + 0x74) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x74) + 0x20) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    iVar3 = *(param_1 + 0x74);\n    uVar4 = fcn.00412d86();\n    *(iVar3 + 4) = uVar4;\n    fcn.0040a1f1();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(*(param_1 + 0x74) + 4) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(*(param_1 + 0x74) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x74) + 4), 0);\n        }\n    }\n    iVar3 = fcn.0040698e();\n    if ((*(*(param_1 + 0x74) + 0x34) & 0x80000) == 0) {\n        fcn.0040c480(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        fcn.004260ab(*(param_1 + 0x74));\n    }\n    else {\n        fcn.00426094();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x74) + 4), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EBP);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(unaff_ESI);\n    }\n    fcn.00412dc0();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 596
    },
    "00426b5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00426b5d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.0040129e(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.00438607(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 237
    },
    "00426dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426dbc(uint arg_8h, int32_t lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    if (lpFileTime == 0) {\n        iStack36 = 0x492448;\n        fcn.004332dc(&stack0xffffffdc, 0x48c270);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iStack36 = 0x426dd8;\n    lpSystemTime._0_2_ = fcn.00426ba3();\n    iStack36 = 0x426de3;\n    lpSystemTime._2_2_ = fcn.00426bc3();\n    iStack36 = 0x426dee;\n    var_12h._0_2_ = fcn.00426bdf();\n    iStack36 = 0x426df9;\n    var_12h._2_2_ = fcn.00426bfa();\n    iStack36 = 0x426e04;\n    var_eh = fcn.00426c16();\n    iStack36 = 0x426e0f;\n    var_ch = fcn.00426c32();\n    var_ah._0_2_ = 0;\n    iStack36 = &fcn.00426dbc::var_ah + 2;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&fcn.00426dbc::lpSystemTime);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.0042286e(uVar3);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&fcn.00426dbc::var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar3 = (*pcVar1)(0);\n        fcn.0042286e(uVar3);\n    }\n    return;\n}\n",
        "token_count": 520
    },
    "00429291": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429291(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.00409e57(\"ImageList_Create\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 124
    },
    "0042933c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042933c(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00429372": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429372(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        uVar1 = fcn.00409e57(\"ImageList_Destroy\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x1c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 127
    },
    "00429411": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429411(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00429447": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429447(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        uVar1 = fcn.00409e57(\"ImageList_LoadImageA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x58) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x58);\n    return;\n}\n",
        "token_count": 126
    },
    "004294f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004294f8(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0042952e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042952e(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x84;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00409e57(\"ImageList_Read\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "004295d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004295d1(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00429607": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429607(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x88;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00409e57(\"ImageList_Write\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 137
    },
    "004296ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004296ad(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004296e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004296e3(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xa0;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00409e57(\"ImageList_Merge\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00429795": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429795(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004297cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004297cb(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xcc;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00409e57(\"MakeDragList\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 136
    },
    "0042986e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042986e(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004298a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004298a4(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xd4;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00409e57(\"LBItemFromPt\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00429952": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429952(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != -1;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040628f(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00429b3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429b3b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a66(0);\n    iVar1 = fcn.00406fc8();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004042a8(0x417577);\n        iVar3 = fcn.004042ba(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004181db(0x47f1f0, 0x42927c, 0x428b0d, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.004042a8(uVar2);\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 317
    },
    "00429bd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429bd9(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00429baf();\n    uVar1 = fcn.004299ae(uVar1);\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "0042a972": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a972(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.0040cc95();\n        if ((*(in_ECX + 0x164) & 0x40) != 0) {\ncode_r0x0042aa20:\n            fcn.0040a0a5();\n            return;\n        }\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.0042a7f0();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if (iVar1 != 0) goto code_r0x0042a9bb;\n    }\n    else {\n        if (7 < arg_8h - 10U) goto code_r0x0042aa20;\n        fcn.0040cc95();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.0042a7f0();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if ((iVar1 != 0) && (*(iVar1 + 0x90) != NULL)) {\n            (**(**(iVar1 + 0x90) + 4))(arg_8h, arg_ch, arg_10h);\n            return;\n        }\n    }\n    do {\n        iVar1 = fcn.0040440f();\ncode_r0x0042a9bb:\n    } while (*(iVar1 + 0x90) == 0);\n    (****(iVar1 + 0x90))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 443
    },
    "0042ab66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ab66(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.0042a7b3(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.0042e13f(iVar1, 1);\n        piVar2 = fcn.0042a590(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.0042a590(iVar1);\n            if (*piVar2 == 0) {\n                fcn.0042e13f(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0042abcd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042abcd(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    if (in_ECX != NULL) goto code_r0x0042abdd;\n    do {\n        fcn.0040440f();\ncode_r0x0042abdd:\n    } while ((arg_8h == 0) || (iVar1 = fcn.0042a7b3(arg_8h, arg_ch),  iVar1 < 1));\n    if (arg_10h == 1) {\n        puVar2 = fcn.0042a590(iVar1);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.0042a590(iVar1);\n        iVar4 = fcn.0042a7b3();\n        if (0 < iVar4) {\n            fcn.0042e13f(iVar1, 1);\n            piVar5 = fcn.0042a590();\n            if ((*piVar5 == 0) && (piVar5 = fcn.0042a590(),  *piVar5 == 0)) {\n                fcn.0042e13f(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.0042e13f(iVar1, 1);\n        piVar5 = fcn.0042a590(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.0042a590(iVar1),  *piVar5 == 0)) {\n            fcn.0042e13f(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.0042ab66(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x90) != 0) {\n        piVar5 = fcn.00422ca4();\n        if ((in_ECX[0x25] == 0) || (iVar1 = (**(*in_ECX + 0x16c))(),  iVar1 != 0)) {\n            piVar5[0x34] = piVar5[0x34] | 0xc;\n        }\n        else {\n            iVar1 = fcn.0042aafe();\n            if (iVar1 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.0040e770(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 637
    },
    "0042b580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042b580(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint unaff_ESI;\n    uint uFlags;\n    uchar auStack308 [16];\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [88];\n    uchar auStack180 [172];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack180;\n    iStack288 = param_2;\n    iStack292 = param_3;\n    if (param_1 != 0) goto code_r0x0042b5bb;\n    do {\n        fcn.0040440f();\ncode_r0x0042b5bb:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), auStack308);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (param_3 == 0) goto code_r0x0042b7a6;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(auStack308, param_3);\n        if (iVar2 != 0) goto code_r0x0042b7a6;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0040ee93(auStack268, 0x104);\n        fcn.0041748c(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.0042e80b(uVar3);\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x20), 0xffffffff);\n    iVar2 = fcn.0042a7b3(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.0042a590(iVar2);\n        *piVar4 = param_2;\n    }\n    if (iStack292 == 0) {\n        if (iVar2 < 1) {\n            fcn.0042e06b(*(param_1 + 0xa0), param_2);\n            fcn.0042e06b(*(param_1 + 0xa0), 0);\n        }\n        uFlags = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x496e3c;\n        iStack284 = -*0x496e38;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, iStack292);\n        fcn.004141b1();\n        if (iVar2 < 1) {\n            fcn.0042a80f(iStack288, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284\n                         , (iStack272 - iStack280) / 2 + iStack280);\n            param_2 = iStack288;\n        }\n        iStack272 = iStack272 - iStack280;\n        uFlags = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.0040ea97(0, iStack284, iStack280, iStack276, iStack272, uFlags);\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.0040a149();\n    if (iVar2 != param_1) {\n        fcn.0042a5f8(param_1);\n    }\n    if (*(param_2 + 0x8c) != 0) {\n        fcn.0042abcd(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x8c) = param_1;\n    iVar2 = fcn.00422ca4();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x0042b7a6:\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 1244
    },
    "0042bcd2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042bcd2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar6 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x0042bd95:\n        return var_4h + 1;\n    }\ncode_r0x0042bcf0:\n    piVar1 = iVar3 * 0x14 + arg_8h;\n    piVar4 = piVar1 + 2;\n    *piVar4 = *piVar4 & 0xdf;\n    if ((*piVar4 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar2 = *(in_ECX + 0xac);\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        iVar6 = iVar6 + iVar2;\n        iVar2 = iVar3;\n        if (arg_10h < iVar6) {\n            for (; (-1 < iVar2 && ((*piVar4 & 0x20) == 0)); piVar4 = piVar4 + -5) {\n                if (((*(piVar4 + 1) & 1) != 0) && ((piVar4[-1] == 0 && ((*piVar4 & 8) == 0)))) goto code_r0x0042bd78;\n                iVar2 = iVar2 + -1;\n            }\n            iVar2 = iVar3 + -1;\n            if (-1 < iVar2) {\n                puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n                do {\n                    if ((*puVar5 & 0x20) != 0) break;\n                    if (((*puVar5 & 8) == 0) && (((puVar5[1] & 1) == 0 || (*(puVar5 + -4) == 0))))\n                    goto code_r0x0042bd78;\n                    iVar2 = iVar2 + -1;\n                    puVar5 = puVar5 + -0x14;\n                } while (-1 < iVar2);\n            }\n        }\n    }\n    goto code_r0x0042bd89;\ncode_r0x0042bd78:\n    puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n    *puVar5 = *puVar5 | 0x20;\n    iVar6 = 0;\n    var_4h = var_4h + 1;\n    iVar3 = iVar2;\ncode_r0x0042bd89:\n    iVar3 = iVar3 + 1;\n    if (arg_ch <= iVar3) goto code_r0x0042bd95;\n    goto code_r0x0042bcf0;\n}\n",
        "token_count": 701
    },
    "0042bfd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042bfd4(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *arg_8h;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint hResData;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    piVar10 = piVar5;\n    if ((piVar5 != NULL) && (piVar6 = (*_sym.imp.KERNEL32.dll_LockResource)(piVar5),  piVar10 = piVar6,  piVar6 != NULL)\n       ) {\n        iVar14 = *piVar6 + 0x40;\n        arg_8h = fcn.00431cd9(iVar14);\n        piVar10 = arg_8h;\n        if (arg_8h != NULL) {\n            fcn.00404ba5(arg_8h, iVar14, piVar6, iVar14);\n            pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n            iVar14 = *arg_8h;\n            hResInfo = 0;\n            do {\n                puVar1 = arg_8h + hResInfo * 4 + iVar14;\n                iVar13 = 0;\n                do {\n                    if (*puVar1 == *(iVar13 * 8 + 0x48093c)) {\n                        if (arg_10h == 0) {\n                            puVar2 = iVar13 * 8 + 0x480940;\n                            uVar7 = (*pcVar3)(*puVar2);\n                            uVar4 = (*pcVar3)(*puVar2);\n                            uVar8 = (*pcVar3)(*puVar2);\n                            *puVar1 = uVar8 >> 0x10 & 0xff | (uVar4 << 8 | uVar7 >> 8 & 0xff) << 8;\n                        }\n                        else if (*(iVar13 * 8 + 0x480940) != 0x12) {\n                            *puVar1 = 0xffffff;\n                        }\n                        break;\n                    }\n                    iVar13 = iVar13 + 1;\n                } while (iVar13 < 4);\n                hResInfo = hResInfo + 1;\n            } while (hResInfo < 0x10);\n            iVar14 = arg_8h[1];\n            iVar13 = arg_8h[2];\n            uVar9 = (*_sym.imp.USER32.dll_GetDC)(0);\n            piVar10 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar9, iVar14, iVar13);\n            if (piVar10 != NULL) {\n                uVar11 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar9);\n                pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n                uVar12 = (*_sym.imp.GDI32.dll_SelectObject)(uVar11, piVar10);\n                (*_sym.imp.GDI32.dll_StretchDIBits)\n                          (uVar11, 0, 0, iVar14, iVar13, 0, 0, iVar14, iVar13, \n                           piVar6 + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10, arg_8h, 0, 0xcc0020);\n                (*pcVar3)(uVar11, uVar12);\n                (*_sym.imp.GDI32.dll_DeleteDC)(uVar11);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar9);\n            fcn.00431d9c(arg_8h);\n            (*_sym.imp.KERNEL32.dll_FreeResource)(piVar5);\n        }\n    }\n    return piVar10;\n}\n",
        "token_count": 936
    },
    "0042c611": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042c611(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar7 = *in_ECX;\n    var_ch = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    uVar2 = (**(iVar7 + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar8 = arg_ch + 9;\n        arg_ch = arg_10h;\n        do {\n            arg_10h = *(puVar8 + -9);\n            uVar3 = fcn.0040e62b();\n            if (((uVar3 & 0x800) == 0) && (*0x4932f4 != 0x40047)) {\n                arg_10h = (arg_10h * 2) / 3;\n            }\n            if ((puVar8[-1] & 8) == 0) {\n                uVar1 = *puVar8;\n                iVar7 = in_ECX[0x2b];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar7 = iVar7 + *0x4932f8;\n                    }\n                    iVar4 = var_ch + iVar7;\n                    if (var_ch + iVar7 <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                    iVar4 = in_ECX[0x2c];\n                    iVar6 = var_8h;\ncode_r0x0042c6ea:\n                    iVar5 = iVar4 + iVar6;\n                    if (iVar4 + iVar6 <= arg_8h[1]) {\n                        iVar5 = arg_8h[1];\n                    }\n                    arg_8h[1] = iVar5;\n                }\n                else {\n                    if ((puVar8[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2c] + var_8h;\n                        iVar6 = arg_10h;\n                        goto code_r0x0042c6ea;\n                    }\n                    iVar4 = *(puVar8 + -9) + var_ch;\n                    if (*(puVar8 + -9) + var_ch <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar7 = *(puVar8 + -9);\n                }\n                var_ch = var_ch + iVar7;\n                if ((puVar8[-1] & 0x20) != 0) {\n                    var_8h = var_8h + in_ECX[0x2c];\n                    var_ch = 0;\n                    if ((uVar1 & 1) != 0) {\n                        var_8h = var_8h + arg_10h;\n                    }\n                }\n            }\n            puVar8 = puVar8 + 0x14;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 847
    },
    "0042cae1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042cae1(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint dwNewLong;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    dwNewLong = 0;\n    var_4h = 0;\n    if (0x40046 < *0x4932f4) {\n        dwNewLong = fcn.0040e62b();\n        iVar3 = fcn.0040e65f(0, 0x8800, 0);\n        if (0x5ffff < *0x4932f4) {\n            if (in_ECX == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *(in_ECX + 0x20);\n            }\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar2 != 0) {\n                fcn.0042bfaa();\n                var_4h = fcn.0042bfbd();\n            }\n        }\n    }\n    iVar2 = fcn.0040a0a5();\n    if (iVar2 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x20), 0xfffffff0, dwNewLong);\n    }\n    if (var_4h != 0) {\n        fcn.0042bfbd(var_4h);\n    }\n    return iVar2;\n}\n",
        "token_count": 397
    },
    "0042cf8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpRect\n\nint32_t * __cdecl fcn.0042cf8c(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t lpRect;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t lprc;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t *var_4h;\n    \n    iVar6 = *in_ECX;\n    arg_8h_00 = 0x418;\n    var_4h = NULL;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    var_ch = (**(iVar6 + 0x110))(0x418, 0, 0);\n    if (var_ch == 0) goto code_r0x0042d27e;\n    var_4h = fcn.004042ba(-(var_ch * 0x14 >> 0x20 != 0) | var_ch * 0x14);\n    puVar4 = NULL;\n    if (var_ch < 1) goto code_r0x0042d27e;\n    do {\n        arg_8h_00 = puVar4;\n        fcn.0042bbf2();\n        arg_ch_00 = var_ch;\n        puVar4 = puVar4 + 1;\n    } while (puVar4 < var_ch);\n    uVar3 = 0;\n    if (var_ch < 1) goto code_r0x0042d27e;\n    uVar1 = in_ECX[0x20];\n    if ((uVar1 & 2) == 0) {\n        if ((uVar1 & 4) == 0) {\ncode_r0x0042d087:\n            uVar3 = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x0042d087;\n                        goto code_r0x0042d022;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n                    (**(*in_ECX + 0x140))(&lprc, arg_ch & 2);\n                    lpRect = arg_ch & 0x20;\n                    if (lpRect == 0) {\n                        var_28h = var_24h - lprc;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    uVar3 = var_28h + arg_10h;\n                }\n                else {\n                    lpRect = 0;\n                }\n            }\n            else {\n                uVar3 = 0x7fff;\n            }\n        }\n        else {\ncode_r0x0042d022:\n            uVar3 = in_ECX[0x1c];\n        }\n        fcn.0042c740(var_4h, arg_ch_00, uVar3, lpRect);\n    }\n    arg_8h_00 = &var_24h;\n    piVar2 = fcn.0042c611(arg_8h_00, var_4h, arg_ch_00);\n    iVar6 = piVar2[1];\n    *arg_8h = *piVar2;\n    arg_8h[1] = iVar6;\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x28];\n        var_14h = 0;\n        arg_10h = 0;\n        in_ECX[0x28] = 0;\n        if (0 < arg_ch_00) {\n            var_18h = var_4h + 1;\n            puVar5 = var_18h;\n            uVar3 = arg_ch_00;\n            do {\n                if (((*(puVar5 + 5) & 1) != 0) && (*puVar5 != 0)) {\n                    arg_10h = arg_10h + 1;\n                }\n                puVar5 = puVar5 + 5;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (0 < arg_10h) {\n                var_14h = fcn.004042ba(-(arg_10h * 0x18 >> 0x20 != 0) | arg_10h * 0x18);\n                var_10h = var_14h + 8;\n                var_1ch = arg_10h;\n                arg_10h = 0;\n                var_8h = NULL;\n                puVar5 = var_10h;\n                do {\n                    arg_ch_00 = var_ch;\n                    if (var_1ch <= arg_10h) break;\n                    puVar7 = puVar5;\n                    if (((*(var_18h + 5) & 1) != 0) && (*var_18h != 0)) {\n                        puVar5[-2] = var_8h;\n                        puVar5[-1] = *var_18h;\n                        (**(*in_ECX + 0x170))(var_8h, &lpRect);\n                        arg_8h_00 = &lpRect;\n                        fcn.004141ed(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        puVar7 = var_10h + 6;\n                        *puVar5 = lpRect;\n                        puVar5[1] = var_38h;\n                        puVar5[2] = var_34h;\n                        puVar5[3] = var_30h;\n                        var_10h = puVar7;\n                    }\n                    var_8h = var_8h + 1;\n                    var_18h = var_18h + 5;\n                    arg_ch_00 = var_ch;\n                    puVar5 = puVar7;\n                } while (var_8h < var_ch);\n            }\n        }\n        if (((in_ECX[0x20] & 1U) != 0) && ((in_ECX[0x20] & 4U) != 0)) {\n            in_ECX[0x1c] = *arg_8h;\n        }\n        var_8h = NULL;\n        if (0 < arg_ch_00) {\n            var_10h = var_4h;\n            do {\n                arg_8h_00 = var_8h;\n                fcn.0042c413(var_8h, var_10h);\n                var_8h = var_8h + 1;\n                var_10h = var_10h + 5;\n            } while (var_8h < arg_ch_00);\n        }\n        if (0 < arg_10h) {\n            puVar5 = var_14h + 8;\n            do {\n                arg_8h_00 = puVar5[-1];\n                var_10h = puVar5;\n                var_1ch = fcn.0040e4c2();\n                if (var_1ch != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_1ch + 0x20), &lpRect);\n                    iVar8 = var_38h - puVar5[1];\n                    iVar6 = lpRect - *puVar5;\n                    (**(*in_ECX + 0x170))(var_10h[-2], &lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.0040ea97(0, iVar6 + lpRect, iVar8 + var_38h, 0, 0, 0x15);\n                    puVar5 = var_10h;\n                }\n                puVar5 = puVar5 + 6;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            var_10h = puVar5;\n            fcn.004042e5(var_14h, arg_8h_00);\n        }\n        in_ECX[0x28] = var_20h;\n    }\n    fcn.004042e5(var_4h);\ncode_r0x0042d27e:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&lpRect, arg_8h_00);\n    (**(*in_ECX + 0x140))(&lpRect, arg_ch & 2);\n    arg_8h[1] = arg_8h[1] + (var_38h - var_30h);\n    *arg_8h = *arg_8h + (lpRect - var_34h);\n    fcn.0042ec1e(&var_24h, arg_ch & 1, arg_ch & 2);\n    iVar6 = *arg_8h;\n    if (*arg_8h <= var_24h) {\n        iVar6 = var_24h;\n    }\n    *arg_8h = iVar6;\n    iVar6 = arg_8h[1];\n    if (arg_8h[1] <= var_20h) {\n        iVar6 = var_20h;\n    }\n    arg_8h[1] = iVar6;\n    return arg_8h;\n}\n",
        "token_count": 2278
    },
    "0042d93d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d93d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_3ch;\n    uint var_20h;\n    \n    if (arg_8h == 0) {\n        fcn.0040440f();\n    }\n    var_48h = arg_14h;\n    var_4ch = 1;\n    if (arg_ch != 0) {\n        var_4ch = 5;\n        var_3ch = arg_ch;\n    }\n    if (arg_10h != 0) {\n        var_20h = *(arg_10h + 4);\n        var_4ch = var_4ch | 0x80;\n    }\n    fcn.0042d843(arg_8h, &var_50h);\n    return;\n}\n",
        "token_count": 222
    },
    "0042e417": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042e417(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0040e62b();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_14h);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    iVar5 = fcn.0040a0a5();\n    if ((var_4h & 0x1000) != 0) {\n        if (iVar5 == 3) {\n            iVar5 = 2;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < iVar5) && (iVar5 < 0x12)) || (iVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (iVar5 != 4) {\n                    if (iVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (iVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (iVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (iVar5 != 0x11) {\n                        return iVar5;\n                    }\n                }\n                iVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            iVar5 = 2;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 543
    },
    "0042e920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e920(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    if ((*(param_1 + 0x20) != 0) && (iVar2 = fcn.00422cb8(),  iVar2 != 0)) {\n        piVar3 = fcn.00422ca4();\n    // WARNING: Could not recover jumptable at 0x0042e93e. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (**(*piVar3 + 0x60))();\n        return uVar4;\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) == 0) {\n        if (*(param_1 + 0x50) == 0) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = fcn.0040a0d5(0);\n        if (iVar2 == 0) {\n            iStack20 = 0x492448;\n            fcn.004332dc(&iStack20, 0x48c270);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iStack20 = 0x40a3bc;\n        fcn.00416c68();\n    }\n    iStack20 = *(param_1 + 0x20);\n    if ((iStack20 != 0) || (*(param_1 + 0x50) != 0)) {\n        if (*(param_1 + 0x50) == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            iStack20 = 0x40a3de;\n            uVar4 = (**(**(param_1 + 0x50) + 0x58))();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 456
    },
    "0042ea5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ea5d(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x80);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x496e38;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x496e3c;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x496e38;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x496e3c;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 100);\n        param_2[1] = param_2[1] + *(param_1 + 0x5c);\n        param_2[2] = param_2[2] - *(param_1 + 0x68);\n        param_2[3] = param_2[3] - *(param_1 + 0x60);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x5c);\n        param_2[1] = param_2[1] + *(param_1 + 100);\n        param_2[2] = param_2[2] - *(param_1 + 0x60);\n        param_2[3] = param_2[3] - *(param_1 + 0x68);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "0042ec1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec1e(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    *arg_8h = uVar1;\n    if ((arg_ch == 0) || (arg_10h != 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 161
    },
    "0042ec8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec8c(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.00406fc8();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[8], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x4c) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.0040baa2();\n        iVar5 = fcn.0040cc5a();\n        if (iVar5 == 0) {\ncode_r0x0042ed07:\n            var_4h = -1;\n        }\n        else {\n            if (iVar4 == 0) {\n                fcn.0040440f();\n            }\n            iVar5 = fcn.0040e791();\n            if (iVar5 == 0) goto code_r0x0042ed07;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x20);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.0040a149(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[8];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.0040baa2(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x0042ed9c:\n            var_4h = -1;\n            *(var_8h + 0x4c) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[8]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[8], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x20);\n            }\n            if (iVar4 != iVar3) goto code_r0x0042ed9c;\n        }\n        if (-1 < var_4h) goto code_r0x0042edcc;\n    }\n    if (*(var_8h + 0x4c) == -1) {\n        (*pcVar1)(in_ECX[8], 0xe001);\n    }\n    (**(*in_ECX + 0x164))(0xffffffff);\ncode_r0x0042edcc:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[8], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x164))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 934
    },
    "0042f0e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f0e8(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x23] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &arg_ch);\n        (***in_ECX[0x24])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.0040a0a5();\n    return;\n}\n",
        "token_count": 159
    },
    "0042f16c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f16c(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x158))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar4 = var_14h - lprcDst;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x20] & 4U) == 0) || ((var_4h[0x20] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x138))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if (uVar1 < 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = lprcDst + var_ch;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.00407e81(arg_ch, var_4h[8], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 859
    },
    "0042f984": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042f984(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x0042f9e2;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.00431a90(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x0042f9e2:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.00431a90(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.00431a90(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.00431a90(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.00431a90(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 762
    },
    "0042fda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fda0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.00414851(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.0042055e();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x74) & 0xf000) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.00420601(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 847
    },
    "0042feab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042feab(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.0042f984();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.0042fda0(0);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0042feff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042feff(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.0042f984();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.0042fda0(0);\n    return;\n}\n",
        "token_count": 309
    },
    "00430168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430168(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.00430123();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.00431960(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.0042faa2(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x74) & 0x5000) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x20));\n        if ((uVar1 & 0xffff) - 0xe81b < 4) {\n            *(param_1 + 0x90) = uVar1 & 0xffff;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.004141b1(param_1 + 0x94);\n        }\n        fcn.004317b1(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "00430861": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00430861(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.004042e5(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.004042ba(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00432e30(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 211
    },
    "00430910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00430910(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00420aba(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -4;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    if (puVar4 != 0xfffffff8) {\n        fcn.004010c8();\n    }\n    puVar4[3] = 0;\n    return puVar4;\n}\n",
        "token_count": 308
    },
    "00430fc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430fc1(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.00430eea(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.00432c1b(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.0040123a(uVar1);\n    }\n    var_ch = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 200
    },
    "00431017": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431017(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    \n    fcn.00430eea(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.00432c1b(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.0040123a(uVar1);\n    }\n    iVar2 = fcn.00406f55();\n    var_10h = *(iVar2 + 0xc);\n    var_ch = arg_ch & 0xffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 247
    },
    "00431126": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431126(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x00431142;\n    do {\n        do {\n            fcn.0040440f();\ncode_r0x00431142:\n        } while (arg_ch == 0);\n        uVar2 = fcn.00432b90(arg_8h);\n    } while (0x400 < uVar2);\n    fcn.00430eea(&var_30h, arg_ch, arg_10h);\n    var_ch = arg_8h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40c, 0, &var_30h);\n    return;\n}\n",
        "token_count": 240
    },
    "00431673": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431673(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.00406fc8();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x3c) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.00408af7(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n                fcn.00432e30(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x20);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x3c) = *(in_ECX + 0x3c) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x3c) & arg_ch) == 0) {\n        iVar2 = fcn.00406f55();\n        *(iVar2 + 0x38) = 0x4315a3;\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "00431960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431960(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (arg_8h != 0) goto code_r0x00431978;\ncode_r0x00431973:\n    do {\n        fcn.0040440f();\ncode_r0x00431978:\n        if (((*(arg_8h + 0x88) != 0) && (iVar4 = *(arg_8h + 0x8c),  iVar4 != 0)) && (*(iVar4 + 0x94) != 0)) {\n            iVar1 = fcn.0042aafe();\n            if ((iVar1 == 1) && ((*(iVar4 + 0x80) & arg_14h & 0xf000) != 0)) {\n                uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x20));\n                piVar3 = fcn.0040a149(uVar2);\n                if (piVar3 != NULL) {\n                    fcn.0040ea97(0, arg_ch, arg_10h, 0, 0, 0x15);\n                    (**(*piVar3 + 0x148))(1);\n                    goto code_r0x00431a80;\n                }\n                goto code_r0x00431973;\n            }\n        }\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x80) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar3 = fcn.00431778(arg_14h);\n        if (piVar3 != NULL) {\n            fcn.0040ea97(0, arg_ch, arg_10h, 0, 0, 0x15);\n            if (piVar3[0xe] == 0) {\n                piVar3[0xe] = *(arg_8h + 0x20);\n            }\n            iVar4 = fcn.0040e4c2(0xe81f);\n            if (iVar4 != 0) {\n                fcn.0042b2f8(arg_8h, 0);\n                (**(*piVar3 + 0x148))(1);\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x20), 0xfffffff0);\n                if ((uVar5 & 0x10000000) != 0) {\n                    fcn.0040e770(8);\ncode_r0x00431a80:\n                    (*_sym.imp.USER32.dll_UpdateWindow)(piVar3[8]);\n                }\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 714
    },
    "00431a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00431a90(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x88);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.004081ba(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x15c))();\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar1[8]),  iVar4 == 0)) ||\n                 ((piVar1[0x20] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x25] != 0 && ((piVar1[0x20] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[8], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x20] & arg_18h;\n}\n",
        "token_count": 541
    },
    "0043277f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043277f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x432828;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00432854;\n        uStack36 = *0x4933e0 ^ &fcn.0043277f::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0043277f::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0043bcf3();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0043277f::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 723
    },
    "00432a57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432a57(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4933e0) {\n        return;\n    }\n    *0x4976b8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4976bc = &arg_8h;\n    *0x4975f8 = 0x10001;\n    *0x4975a0 = 0xc0000409;\n    *0x4975a4 = 1;\n    var_328h = *0x4933e0;\n    var_324h = *0x4933e4;\n    *0x4975ac = unaff_retaddr;\n    *0x497684 = in_GS;\n    *0x497688 = in_FS;\n    *0x49768c = in_ES;\n    *0x497690 = in_DS;\n    *0x497694 = unaff_EDI;\n    *0x497698 = unaff_ESI;\n    *0x49769c = unaff_EBX;\n    *0x4976a0 = in_EDX;\n    *0x4976a4 = in_ECX;\n    *0x4976a8 = in_EAX;\n    *0x4976ac = unaff_EBP;\n    *0x4976b0 = unaff_retaddr;\n    *0x4976b4 = in_CS;\n    *0x4976c0 = in_SS;\n    *0x4975f0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0044bd83(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x481d78);\n    if (*0x4975f0 == 0) {\n        fcn.0044bd83(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 836
    },
    "00436e9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00436f31: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00436f36)\n// WARNING: Removing unreachable block (ram,0x00436f64)\n// WARNING: Removing unreachable block (ram,0x00436f3c)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436e9c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x48fec8, 0xc);\n    fcn.00438da5(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4970f8 != 1) {\n        *0x4970f4 = 1;\n        *0x4970f0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.0043bab5(*0x499124);\n            uVar2 = fcn.0043bab5(*0x499120);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.00436c3d(0x47acb0);\n        }\n        fcn.00436c3d(0x47afbc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00438cb5(8);\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "004373b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004373b1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.00437308(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00437b3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437b3c(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.00437308(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0043aa3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043aa3a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043bcf3();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0043bcf3();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0043b0d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b0d0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004329ad(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0043bcf3();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0043bcf3();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0043298c(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0043aa9a(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00442fd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442fd8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00438cb5(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0044bb8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044bb8f(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.0043baac();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x497b3c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxA\"),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x497b3c = fcn.0043ba49(iVar2);\n        uVar3 = (*pcVar4)(iVar1, \"GetActiveWindow\");\n        *0x497b40 = fcn.0043ba49(uVar3);\n        uVar3 = (*pcVar4)(iVar1, \"GetLastActivePopup\");\n        *0x497b44 = fcn.0043ba49(uVar3);\n        iVar2 = fcn.00436c75(&var_8h);\n        if (iVar2 != 0) {\n            fcn.0043a174(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x497b4c = fcn.0043ba49(uVar3);\n            if (*0x497b4c != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x497b48 = fcn.0043ba49(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x497b48 == var_10h) || (*0x497b4c == var_10h)) {\ncode_r0x0044bcdd:\n        if (*0x497b40 != iVar1) {\n            pcVar4 = fcn.0043bab5(*0x497b40);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x497b44 != iVar1)) {\n                pcVar4 = fcn.0043bab5(*0x497b44, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.0043bab5(*0x497b48);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.0043bab5(*0x497b4c, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x0044bcdd;\n        }\n        iVar1 = fcn.00436d24(&var_ch);\n        if (iVar1 != 0) {\n            fcn.0043a174(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.0043bab5(*0x497b3c, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 956
    },
    "0044c154": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c154(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00431d9c(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0045311a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045311a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.00433654(arg_10h);\n    var_14h = fcn.00457140(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00456021(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00453171:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004531b1;\n        }\n        if (iVar1 != 2) {\ncode_r0x004531a3:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004531b1;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004531a3;\n        goto code_r0x00453171;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004531b1:\n    fcn.00432a57(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "0045328d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045328d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.00433654(arg_10h);\n    var_14h = fcn.00457140(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00456563(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004532e4:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00453324;\n        }\n        if (iVar1 != 2) {\ncode_r0x00453316:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00453324;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00453316;\n        goto code_r0x004532e4;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00453324:\n    fcn.00432a57(unaff_EBX);\n    return;\n}\n",
        "token_count": 496
    },
    "00456021": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456021(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00456520;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00456154;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0045615b;\ncode_r0x00456154:\n                        do {\n                            var_4h = 1;\ncode_r0x0045615b:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00456169;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00456169:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x49457c - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x49457c < iVar12) {\n                if (iVar12 < *0x494578) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x494578;\n                    uVar5 = 1;\n                }\n                goto code_r0x00456520;\n            }\n            var_10h = *0x49457c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0045630c;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0045630c:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00456520:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3654
    },
    "00456563": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456563(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00456a62;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x494598 - 1;\n        iVar4 = *0x494598 + (*0x494598 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x494598 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00456696;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0045669d;\ncode_r0x00456696:\n                        do {\n                            var_4h = 1;\ncode_r0x0045669d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004566ab;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004566ab:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x494594 - *0x494598) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x494594 < iVar12) {\n                if (iVar12 < *0x494590) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4945a4;\n                    iVar4 = *0x49459c + (*0x49459c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x49459c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x49459c + (*0x49459c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x49459c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4945a4 + *0x494590;\n                    uVar5 = 1;\n                }\n                goto code_r0x00456a62;\n            }\n            var_10h = *0x494594 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x494598 - 1;\n            iVar12 = *0x494598 + (*0x494598 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x494598 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0045684e;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0045684e:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x49459c + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00456a62:\n    var_20h = iVar12 << (0x1fU - *0x49459c & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4945a0 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4945a0 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3623
    },
    "0045b385": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045b385(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x45b381,  var_94h < 5)) {\n        pcVar1 = fcn.0045b31c;\n    }\n    arg_8h = 0x494888;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x494888, pcVar1);\n    (**0x494888)();\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 220
    },
    "0045b691": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b691(uint *param_1)\n\n{\n    if (*(param_1 + 1) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*param_1);\n        *(param_1 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0045b81b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b81b(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack124;\n    fcn.0045b6a8();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.00432e30(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x0045b897;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x0045b897;\n    *(param_1 + 3) = 1;\ncode_r0x0045b897:\n    param_1[4] = 0x800;\n    param_1[5] = 0x486238;\n    iVar1 = fcn.0045b465();\n    if (iVar1 < 0) {\n        *0x495180 = 1;\n    }\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 391
    },
    "00401195": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00401195(uint param_1, uint param_2, uint param_3)\n\n{\n    uint8_t extraout_var;\n    \n    if ((*0x49518c & 1) == 0) {\n        *0x49518c = *0x49518c | 1;\n        (*_sym.imp.KERNEL32.dll_GetVersion)();\n        *0x495188 = extraout_var >> 7;\n    }\n    if (*0x495188 == 0) {\n        param_2 = param_3;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(param_1, param_2);\n    return;\n}\n",
        "token_count": 144
    },
    "00409c7a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409c7a(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0040e62b(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[8]);\n    param_1[0xf] = param_1[0xf] | 0x18;\n    iVar6 = fcn.00411648();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x00409d39:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.00411c01();\n            if (iVar7 == 0) {\n                fcn.00410ac9(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0040e770(1);\n                (*pcVar3)(param_1[8]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xf] = param_1[0xf] & 0xffffffe7;\n                return param_1[0x11];\n            }\n            iVar7 = fcn.00411a91(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0040e770(1);\n        (*pcVar3)(param_1[8]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[8]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x00409d1a;\n    goto code_r0x00409d35;\ncode_r0x00409d1a:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[8], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x00409d35:\n        bVar2 = false;\n    }\n    goto code_r0x00409d39;\n}\n",
        "token_count": 791
    },
    "0040d4a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040d4a2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00406f55();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00432e30(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00406f55();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x496e68;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.0040d1bb(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.0040d1bb(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0040d1bb(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0040d461(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0040d461(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0040a8ba(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1813
    },
    "0040ef93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ef93(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e974();\n    puVar4 = &var_8h;\n    fcn.0040e974(puVar4);\n    do {\n        iVar1 = var_4h;\n        if (var_4h == 0) {\n            puVar3 = &var_10h;\ncode_r0x0040efe8:\n            fcn.0040e974(puVar3, puVar4);\n            return arg_8h;\n        }\n        uVar2 = fcn.0040e8b6();\n        if ((uVar2 >> 0x11 & 1) != 0) {\ncode_r0x0040efe5:\n            puVar3 = &var_8h;\n            goto code_r0x0040efe8;\n        }\n        if (var_10h != var_8h) {\n            fcn.0040440f();\n            goto code_r0x0040efe5;\n        }\n        puVar4 = &var_4h;\n        var_ch = iVar1;\n        fcn.0040e9f7();\n    } while( true );\n}\n",
        "token_count": 325
    },
    "0040fd21": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040fd21(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    \n    if (noname_2 != 0) {\n        if (noname_1 == 0) {\n            fcn.0040440f();\n        }\n        if ((~*(var_8h + 0x18) & 1) == 0) {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0041a951(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n        else {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0040fcbf();\n                fcn.0041a904(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "00415e56": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415e56(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x00415f3a;\n        }\n        iVar3 = iVar3 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            fcn.00401203(iVar3, 8);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            fcn.00401203(iVar3, 8);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iVar4 == 0) {\n            if (*(param_1 + 0x10) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            fcn.004332dc(&stack0xffffffd4, 0x48c178);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        fcn.00432e30();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = uVar5;\n    }\ncode_r0x00415f3a:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 655
    },
    "00418881": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418881(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 375
    },
    "004189e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004189e8(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 1;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00418a1e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418a1e(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 234
    },
    "00418a5e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418a5e(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "00418a98": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418a98(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "00418ad1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418ad1(int32_t param_1)\n\n{\n    uchar *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 1U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 1);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 194
    },
    "00418b10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418b10(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 225
    },
    "00418b58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418b58(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 194
    },
    "00418b9b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418b9b(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0041a6e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a6e8(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 235
    },
    "0041a728": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a728(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "0041a761": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a761(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "0041a79a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __fastcall fcn.0041a79a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00418881();\n    }\n    **(param_1 + 0x28) = CONCAT44(unaff_retaddr, unaff_ESI);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 228
    },
    "0041a7d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a7d3(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "0041a81b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a81b(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0041a85d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a85d(int32_t param_1)\n\n{\n    ulong *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0041a89f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a89f(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0041c05a(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.004188f8((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0041aab8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0041ab7a)\n\nvoid __cdecl fcn.0041aab8(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = in_ECX[2];\n    if (uVar3 != 0) {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        arg_8h[2] = uVar3;\n        return;\n    }\n    uVar3 = in_ECX[1];\n    uVar5 = *in_ECX;\n    if (((uVar5 | uVar3) == 0) || (arg_ch == 0)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        return;\n    }\n    uVar1 = arg_ch >> 0x18 ^ uVar3 >> 0x18;\n    if ((uVar3 < 1) && (uVar3 < 0)) {\n        bVar6 = uVar5 != 0;\n        uVar5 = -uVar5;\n        uVar3 = -(uVar3 + bVar6);\n    }\n    uVar4 = fcn.004372eb(arg_ch);\n    uVar7 = fcn.00437930(uVar3, 0, uVar4, 0);\n    if ((uVar7 >> 0x20 == 0) && (uVar7 < 0x80000001)) {\n        uVar8 = fcn.00437930(uVar5, 0, uVar4, 0);\n        iVar9 = fcn.00437930(uVar7, 0, 0, 1);\n        uVar2 = uVar8 + iVar9;\n        if (uVar8 <= uVar2) {\n            if (uVar1 < '\\0') {\n                uVar2 = CONCAT44(-((uVar2 >> 0x20) + (uVar2 != 0)), -uVar2);\n            }\n            if (-1 < (uVar2 >> 0x20 ^ arg_ch ^ in_ECX[1])) {\n                uVar3 = 0;\n                goto code_r0x0041abb6;\n            }\n        }\n    }\n    uVar3 = 1;\n    if (uVar1 < '\\0') {\n        uVar2 = 0x8000000000000000;\n    }\n    else {\n        uVar2 = 0x7fffffffffffffff;\n    }\ncode_r0x0041abb6:\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    arg_8h[2] = uVar3;\n    return;\n}\n",
        "token_count": 749
    },
    "0041b47e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041b47e(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if ((noname_2 != 0) && (noname_1 == 0)) {\n        fcn.0040440f();\n    }\n    if ((~*(var_8h + 0x18) & 1) == 0) {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.0041b216(var_8h, noname_1);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    else {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.00419ff1();\n            fcn.0041b016(var_8h, noname_1, uStack32, uStack28, uStack24);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0041c209": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041c209(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.0040128a();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.004042e5(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.00437366(param_1, 4, *puVar1, 0x401299);\n        if ((param_2 & 1) != 0) {\n            fcn.004042e5(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "004233ab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004233ab(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0040e62b();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0040ad16();\n    }\n    if (iVar4 == 0) {\n        fcn.0040440f();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0040e791();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) | 0x200;\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 1, 0);\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffdff;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.00422986(*(iVar4 + 0x20), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "00424864": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424864(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0040440f();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00419e4b();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00418dd8(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "00426e57": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426e57(uint arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(arg_8h);\n        fcn.0042286e(uVar2);\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) != 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042286e(uVar2);\n        }\n    }\n    if ((arg_ch[2] | arg_ch[3]) != 0) {\n        fcn.00426dbc(arg_ch + 2, &var_24h);\n        if ((arg_ch[4] | arg_ch[5]) != 0) {\n            fcn.00426dbc(arg_ch + 4, &var_14h);\n            var_8h = &var_14h;\n        }\n        if ((*arg_ch | arg_ch[1]) != 0) {\n            fcn.00426dbc(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042286e(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042286e(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042286e(uVar2);\n        }\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) == 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042286e(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 753
    },
    "00427428": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427428(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint in_stack_fffffff4;\n    \n    if (param_2 != 0) goto code_r0x0042743e;\n    in_stack_fffffff4 = *(param_1 + 0x14);\n    arg_8h = 6;\n    while( true ) {\n        fcn.0041c05a(arg_8h, in_stack_fffffff4);\ncode_r0x0042743e:\n        if ((~*(param_1 + 0x18) & 1) != 0) break;\n        arg_8h = 1;\n    }\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.004043f5();\n    }\n    fcn.0042732f(0);\n    puVar2 = fcn.00416e1e(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.00418a5e(0xffff);\n        fcn.00418fdc(param_1);\n        fcn.0042731b();\n        puVar3 = fcn.00416e1e(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.00418a5e(uVar1 | 0x8000);\n    }\n    else {\n        fcn.00418a5e(0x7fff);\n        fcn.00418a98(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "004276ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004276ae(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.0041c05a(2, in_stack_fffffff8);\n    }\n    fcn.0042732f(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.00418a5e(0);\n    }\n    else {\n        puVar2 = fcn.00416e1e(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.00427428(uVar3);\n            fcn.0042731b();\n            puVar4 = fcn.00416e1e(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.00418a5e(uVar1);\n        }\n        else {\n            fcn.00418a5e(0x7fff);\n            fcn.00418a98(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "0042bc54": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042bc54(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x20];\n    param_1[0x28] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x138))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 218
    },
    "0042c413": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c413(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    arg_8h_00 = &var_18h;\n    (**(*in_ECX + 0x110))(0x417, arg_8h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.004354fc(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        uVar3 = fcn.0040e62b();\n        var_20h = uVar3;\n        fcn.0040e65f(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (arg_ch[4] < -1) {\n            var_1ch = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x43d, 0, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 0, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch + 1, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 1, 0);\n            arg_ch[4] = arg_ch[4] + 1000000;\n            uVar3 = var_20h;\n        }\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.0040e65f(0, uVar3 & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x0042c566;\n            puVar4 = &var_30h;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[8], puVar4, 1);\n    }\ncode_r0x0042c566:\n    fcn.00432a57(arg_8h_00);\n    return;\n}\n",
        "token_count": 791
    },
    "0042d688": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d688(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_30h;\n    \n    iVar1 = fcn.0040a0a5();\n    if (iVar1 != 0) {\n        var_50h = 0x50;\n        var_4ch = 0x11;\n        (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_50h);\n        uVar2 = fcn.0040a170(var_30h);\n        piVar3 = fcn.00415a7d(0x47e71c, uVar2);\n        if (piVar3 == NULL) {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_30h, 0xfffffff0);\n            uVar4 = uVar4 >> 0x1c & 1;\n        }\n        else {\n            uVar4 = (**(*piVar3 + 0x154))();\n        }\n        uVar5 = ~(var_48h >> 3) & 1;\n        if (uVar4 != uVar5) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_30h, -(uVar5 != 0) & 5);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 362
    },
    "0042ee40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ee40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x20), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &lpRect);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - lpRect;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x80) & 0x400) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x496e38, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x496e38, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x80) & 0x800) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x496e3c, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x496e3c, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004308ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004308ef(uint param_1, uint8_t param_2)\n\n{\n    fcn.0040128a();\n    if ((param_2 & 1) != 0) {\n        fcn.004042e5(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "0044cc77": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044cc77(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x490560, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00433599();\n        *puVar2 = 0;\n        puVar2 = fcn.00433586();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x498f64)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x498fc0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00453c5f(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00433586();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00433599();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0044c6b1(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0044cd49(0x490560);\n                goto code_r0x0044cd43;\n            }\n        }\n        puVar2 = fcn.00433599();\n        *puVar2 = 0;\n        puVar2 = fcn.00433586();\n        *puVar2 = 9;\n        fcn.0043a2a8(0, 0, 0, 0, 0);\n    }\ncode_r0x0044cd43:\n    fcn.00433d89();\n    return;\n}\n",
        "token_count": 629
    },
    "00455786": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00455786(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x490770, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00433599();\n        *puVar2 = 0;\n        puVar2 = fcn.00433586();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x498f64)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x498fc0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00453c5f(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00433586();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00433599();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004551e4(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00455858(0x490770);\n                goto code_r0x00455852;\n            }\n        }\n        puVar2 = fcn.00433599();\n        *puVar2 = 0;\n        puVar2 = fcn.00433586();\n        *puVar2 = 9;\n        fcn.0043a2a8(0, 0, 0, 0, 0);\n    }\ncode_r0x00455852:\n    fcn.00433d89();\n    return;\n}\n",
        "token_count": 623
    },
    "00401235": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401235(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 * param_3;\n    if ((param_2 * param_3 >> 0x20) + (0x7fffffff < uVar1) != 0) {\n        return 0x80070057;\n    }\n    *param_1 = uVar1;\n    return 0;\n}\n",
        "token_count": 112
    },
    "0040123f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040123f(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "00404b2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00404b2e(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 82
    },
    "00404cbb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cbb(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.00432b70(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.00404bc4(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 112
    },
    "004069a7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004069a7(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.004042e5(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.00406271(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004162f1();\n    fcn.0040128a();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 456
    },
    "0040a042": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040a042(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.00432b90(param_2);\n    }\n    fcn.00401181(param_2);\n    return;\n}\n",
        "token_count": 91
    },
    "00410574": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00410574(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    uVar1 = fcn.0040f93d();\n    fcn.004012a8(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.00405549(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.0041052b(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.0040128a();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 278
    },
    "00412154": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00412154(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004159d3();\n    if (piVar1 == NULL) {\n        fcn.004043db();\n    }\n    piVar1[0xd] = 0;\n    iVar2 = fcn.00411fec(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar1[0xb], arg_ch);\n        if (((arg_14h & 4) == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar1[0xb]),  iVar2 == -1)) {\n            fcn.0040440f();\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 259
    },
    "00415f8c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00415f8c(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x492318;\n        fcn.004332dc(&stack0xfffffff4, 0x48c178);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x415fc7;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 247
    },
    "00416321": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416321(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00416179(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 228
    },
    "00416d12": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416d12(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00416d42;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.0040440f();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x00416d42:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "0041abd5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041abd5(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    ulong uVar3;\n    \n    iVar1 = in_ECX[2];\n    if (iVar1 == 0) {\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = -0x80000000;\n        }\n        else {\n            if (((arg_ch != -1) || (*in_ECX != 0)) || (in_ECX[1] != -0x80000000)) {\n                uVar3 = fcn.00437970(*in_ECX, in_ECX[1], arg_ch, arg_ch >> 0x1f);\n                *arg_8h = uVar3;\n                arg_8h[1] = uVar3 >> 0x20;\n                arg_8h[2] = 0;\n                return arg_8h;\n            }\n            *arg_8h = -1;\n            arg_8h[1] = 0x7fffffff;\n        }\n        arg_8h[2] = 1;\n    }\n    else {\n        iVar2 = in_ECX[1];\n        *arg_8h = *in_ECX;\n        arg_8h[1] = iVar2;\n        arg_8h[2] = iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 340
    },
    "0041f045": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f045(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00405266();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.0042286e(uVar2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0041f286": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041f286(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00432a99();\n    *extraout_ECX = vtable.CFile.0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.0041f045();\n    }\n    fcn.0040128a();\n    *in_FS_OFFSET = uStackY532;\n    fcn.00432a57(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 145
    },
    "00420d48": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420d48(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00420d5e;\n    do {\n        fcn.0040440f();\ncode_r0x00420d5e:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004042e5(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00420e4e;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004042ba(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.00432e30(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00420dc5:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00432e30(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x00420dc5;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00420df7:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00420df7;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004042ba(arg_8h);\n    fcn.00404ba5(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00432e30(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.004042e5(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00420e4e:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 747
    },
    "00423505": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00423505(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a0a5();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x15c))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[8], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x148))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 153
    },
    "00426a02": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00426a02(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = unaff_EBX;\n    uVar2 = unaff_EDI;\n    if (0x76b < arg_8h) goto code_r0x00426a1e;\n    do {\n        do {\n            fcn.0040129e();\n            iVar1 = unaff_EBX;\n            uVar2 = unaff_EDI;\ncode_r0x00426a1e:\n            unaff_EBX = arg_ch;\n            unaff_EDI = uVar2;\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (unaff_EDI = arg_14h,  0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        unaff_EDI = uVar2;\n        unaff_EBX = iVar1;\n        iVar3 = fcn.004385ed(&var_24h, uVar2, iVar1);\n        *in_ECX = iVar3;\n        in_ECX[1] = iVar3 >> 0x20;\n    } while (iVar3 == -1);\n    return;\n}\n",
        "token_count": 523
    },
    "00426fc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426fc0(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.00432e30(arg_8h, 0, 0x128);\n    fcn.0040445d(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x47e474) {\ncode_r0x0042710f:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar3;\n            arg_8h[7] = 0;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.004269b7(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar4 = fcn.00426aed(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                iVar1 = fcn.004269b7(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar4 = fcn.00426aed(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar4;\n                    arg_8h[5] = puVar4[1];\n                }\n                iVar1 = fcn.004269b7(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar4 = fcn.00426aed(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar4;\n                    arg_8h[3] = puVar4[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x0042710f;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 855
    },
    "00428e49": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.00428e49(uint wParam)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint nWidth;\n    uint nHeight;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(0x18);\n    if (*(unaff_EBP + 8) != -1) {\n        uVar2 = fcn.0042055e();\n        (*_sym.imp.USER32.dll_GetClientRect)(*(extraout_ECX + 0x20), unaff_EBP + -0x24);\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar3 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x24);\n        fcn.0041485f(uVar3);\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(*(extraout_ECX + 0x20));\n        iVar4 = fcn.0041458a(uVar3);\n        fcn.00414134(unaff_EBP + -0x14);\n        (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x20), 0x198, *(unaff_EBP + 8), unaff_EBP + -0x24);\n        iVar1 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -2;\n        *(unaff_EBP + -0x18) = iVar1 + 2;\n        uVar2 = fcn.00414a54(uVar2);\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (*(iVar4 + 4), *(unaff_EBP + -0x24), *(unaff_EBP + -0x20), *(unaff_EBP + -0x1c) - *(unaff_EBP + -0x24)\n                   , *(unaff_EBP + -0x18) - *(unaff_EBP + -0x20), 0x5a0049);\n        fcn.00414a54(uVar2);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(extraout_ECX + 0x20), *(iVar4 + 4));\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n        fcn.004148b2();\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 765
    },
    "0042914e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042914e(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_ECX;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    var_14h = arg_ch;\n    var_1ch = arg_10h;\n    var_20h = 5;\n    if (arg_14h != -1) {\n        var_20h = 7;\n        var_18h = arg_14h;\n    }\n    if (arg_18h != -1) {\n        var_20h = var_20h | 8;\n        var_ch = arg_18h;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x101b, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 235
    },
    "0042b93d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0042b93d(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x4932f8 == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x4932f8);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x4932f8;\n}\n",
        "token_count": 306
    },
    "0042cd9d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0042cd9d(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x4932f4;\n    if (*0x4932f4 == -1) {\n        fcn.00406f55();\n        uVar1 = fcn.00409e57();\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.00432e30(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x4932f4 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 260
    },
    "00430d51": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430d51(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_34h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_34h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_14h == 0) && (var_10h != 0xffffffff)) && (var_10h != NULL)) {\n        iVar2 = fcn.004309bc(var_10h, &var_4h);\n        if (iVar2 == 0) {\n            puVar1 = fcn.00430bb5(var_10h);\n            *puVar1 = 0;\n        }\n        arg_ch = NULL;\n        fcn.004309e3(var_10h, &arg_ch);\n        var_10h = arg_ch;\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 323
    },
    "00401064": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401064(char *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00432b90(arg_8h);\n    uVar2 = uVar2 >> 1;\n    iVar3 = fcn.00431cd9(uVar2 + 1);\n    var_4h = 0;\n    if (uVar2 != 0) {\n        do {\n            uVar4 = *arg_8h & 0x8000001f;\n            if (uVar4 < 0) {\n                uVar4 = (uVar4 - 1 | 0xffffffe0) + 1;\n            }\n            uVar5 = arg_8h[1] & 0x8000001f;\n            if (uVar5 < 0) {\n                uVar5 = (uVar5 - 1 | 0xffffffe0) + 1;\n            }\n            arg_8h = arg_8h + 2;\n            uVar1 = var_4h + 1;\n            *(var_4h + iVar3) = ((uVar4 + 9) % 0x19) * '\\x10' + (uVar5 + 9) % 0x19;\n            var_4h = uVar1;\n        } while (uVar1 < uVar2);\n    }\n    *(iVar3 + uVar2) = 0;\n    return;\n}\n",
        "token_count": 369
    },
    "0040502a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040502a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint CodePage;\n    int32_t iVar1;\n    uint var_4h;\n    \n    CodePage = (**0x494888)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.00401258(arg_8h, arg_ch, 0x20, CodePage);\n        iVar1 = fcn.00432c1b(arg_8h + 0x40, 0x26, arg_ch + 0x20, 0x26);\n        if (iVar1 == 0) {\n            fcn.00401258(arg_8h + 0x66, arg_ch + 0x46, 0x20, CodePage);\n            iVar1 = fcn.00432c1b(arg_8h + 0xa6, 0x36, arg_ch + 0x66, 0x36);\n            if ((iVar1 == 0) &&\n               ((*(arg_ch + 0x26) == 0 ||\n                (iVar1 = fcn.00432c1b(arg_8h + 0xdc, *(arg_ch + 0x26), arg_ch + 0x9c, *(arg_ch + 0x26)),  iVar1 == 0))))\n            {\n                *(arg_8h + 0x44) = 0xdc;\n                fcn.0040124e();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.0040124e();\n    return 0;\n}\n",
        "token_count": 361
    },
    "004050e7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004050e7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint CodePage;\n    int32_t iVar1;\n    uint var_4h;\n    \n    CodePage = (**0x494888)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.004010a5(arg_8h, arg_ch, 0x20, CodePage);\n        iVar1 = fcn.00432c1b(arg_8h + 0x20, 0x26, arg_ch + 0x40, 0x26);\n        if (iVar1 == 0) {\n            fcn.004010a5(arg_8h + 0x46, arg_ch + 0x66, 0x20, CodePage);\n            iVar1 = fcn.00432c1b(arg_8h + 0x66, 0x36, arg_ch + 0xa6, 0x36);\n            if ((iVar1 == 0) &&\n               ((*(arg_ch + 0x46) == 0 ||\n                (iVar1 = fcn.00432c1b(arg_8h + 0x9c, *(arg_ch + 0x46), arg_ch + 0xdc, *(arg_ch + 0x46)),  iVar1 == 0))))\n            {\n                *(arg_8h + 0x24) = 0x9c;\n                fcn.0040124e();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.0040124e();\n    return 0;\n}\n",
        "token_count": 365
    },
    "0040f054": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0040f054(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x4c);\n    if (iVar3 != 0) {\n        puVar1 = iVar3 + 0x40;\n        var_4h = *(iVar3 + 0x44);\n        while (var_4h != 0) {\n            if (var_4h == 0) {\n                fcn.0040440f(puVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            if (*(var_4h + 8) == arg_8h) {\n                return var_4h;\n            }\n            puVar1 = &var_4h;\n            fcn.0040e9c4();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "0041fe69": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041fe69(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 + 0x40;\n    param_1[1] = param_3;\n    if (param_3 <= uVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar3);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n            fcn.00404ba5(uVar2, param_1[1], uVar3, param_1[1]);\n            iVar1 = fcn.0041fb70(uVar2);\n            param_1[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0040e2da": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0040e2da(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack124;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.00432e30(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x47d158;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x496e78 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iStack148, 1);\n        if (*0x496e78 == 0) {\n            *0x496e78 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.00432a57(uVar3);\n        return;\n    }\n    fcn.004332dc(&stack0xffffff54, 0x48c270);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 606
    },
    "00411648": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.00411648(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040698e();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 44
    },
    "0040a067": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0040a067(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.00416267(0x404429);\n    if (iVar2 == 0) {\n        uStack16 = 0x492448;\n        fcn.004332dc(&uStack16, 0x48c270);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 217
    },
    "0040b943": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b943(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.00407da5();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x0040b9c6:\n            uVar2 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar2;\n        }\n    }\n    else {\n        iVar1 = fcn.00416267(0x404429);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040440f();\n        }\n        if ((*(iVar1 + 0xdc) != in_ECX[8]) && (iVar1 = fcn.0040add2(arg_ch, 0),  iVar1 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x0040b9c6;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 387
    },
    "0041fd2d": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041fd2d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t lptm;\n    int32_t var_84h;\n    int32_t var_5ch;\n    uint *var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint hdc;\n    int32_t var_40h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    var_54h = arg_18h;\n    hdc = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.00432e30(&var_40h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hdc, 0x5a, 0x48);\n    pcVar2 = _sym.imp.KERNEL32.dll_MulDiv;\n    var_40h = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_ch, uVar4);\n    var_40h = -var_40h;\n    var_30h = 400;\n    var_29h._0_1_ = 1;\n    uVar4 = fcn.00433326(&var_24h, 0x20, arg_8h, 0xffffffff);\n    fcn.0040123a(uVar4);\n    var_4ch = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_40h);\n    pcVar3 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (var_4ch == 0) {\n        var_48h = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        var_48h = var_48h & 0xffff;\n        uVar5 = (*pcVar3)();\n        uVar5 = uVar5 >> 0x10;\n    }\n    else {\n        var_50h = (*_sym.imp.GDI32.dll_SelectObject)(hdc, var_4ch);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(hdc, &lptm);\n        uVar5 = var_84h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (hdc, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_5ch);\n        var_48h = (var_5ch + 0x1a) / 0x34;\n        (*pcVar1)(hdc, var_50h);\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_4ch);\n        arg_18h = var_54h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n    uVar4 = (*pcVar2)(arg_10h, var_48h, 4);\n    *arg_18h = uVar4;\n    uVar4 = (*pcVar2)(arg_14h, uVar5, 8);\n    arg_18h[1] = uVar4;\n    fcn.00432a57(arg_10h);\n    return;\n}\n",
        "token_count": 806
    },
    "0042c296": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c296(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xac) = arg_8h;\n        *(in_ECX + 0xb0) = arg_ch;\n        *(in_ECX + 0xa4) = arg_10h;\n        *(in_ECX + 0xa8) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x20), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        if (0x5ffff < *0x4932f4) {\n            uVar3 = (*pcVar1)(*(in_ECX + 0x20), 0x43a, 0, 0);\n            *(in_ECX + 0xac) = uVar3 & 0xffff;\n            *(in_ECX + 0xb0) = uVar3 >> 0x10;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "0042c5b0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c5b0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    arg_ch_00 = 0x42c5cf;\n    fcn.0042bbf2(arg_8h, &fcn.0042c5b0::var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        arg_ch_00 = &fcn.0042c5b0::var_18h;\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.0042c413(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.00432a57(arg_ch_00);\n    return;\n}\n",
        "token_count": 277
    },
    "0042c8cd": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c8cd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.0042bbf2(arg_8h, &var_18h);\n    arg_ch_00 = 0x14;\n    uVar1 = fcn.00432c1b(&var_2ch, 0x14, &var_18h, 0x14);\n    fcn.0040123a(uVar1);\n    var_14h = arg_ch;\n    var_18h = arg_14h;\n    var_fh._0_1_ = arg_10h;\n    var_10h = arg_10h >> 0x10;\n    iVar2 = fcn.004354fc(&var_2ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        arg_ch_00 = &var_18h;\n        fcn.0042c413(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.00432a57(arg_ch_00);\n    return;\n}\n",
        "token_count": 366
    },
    "0042dcbc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dcbc(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00416267(0x404429);\n        if (iVar3 == 0) {\n            fcn.0040440f();\n        }\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.0040a170(arg_8h),  iVar4 == 0)) {\n            fcn.0040b126(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x497090 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x497094 = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x497098 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x49709c = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x4970a0 = (*pcVar1)(\"commdlg_help\");\n            *0x4970a4 = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.00412a0f(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x4970a0) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (((0xbfff < arg_ch) && (piVar5 = fcn.0040a170(arg_8h),  piVar5 != NULL)) &&\n               ((iVar3 = fcn.00415a65(0x47edd4),  iVar3 == 0 ||\n                (iVar3 = fcn.00425cb2(),  (*(iVar3 + 0x34) & 0x80000) == 0)))) {\n                if (arg_ch == *0x497094) {\n                    uVar2 = (**(*piVar5 + 0x15c))(arg_14h);\n                    return uVar2;\n                }\n                if (arg_ch == *0x497098) {\n                    piVar5[0x71] = arg_14h;\n                    uVar2 = (**(*piVar5 + 0x160))();\n                    piVar5[0x71] = 0;\n                    return uVar2;\n                }\n                if (arg_ch == *0x497090) {\n                    (**(*piVar5 + 0x164))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x49709c) {\n                    uVar2 = (**(*piVar5 + 0x15c))();\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 797
    },
    "00444d00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.00444d00(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "0040c4d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0040c4d5(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        iVar1 = fcn.004186d2(arg_10h, 0xffffffff);\n        if (iVar1 == 0) {\n            fcn.0040440f();\n        }\n    }\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_ch = arg_10h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00406f55();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0040c480();\n        iVar1 = fcn.00408613(var_4h, var_8h, var_ch, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, var_28h, \n                             var_2ch, var_30h);\n        iVar2 = fcn.0040a1f1();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 585
    },
    "00431079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431079(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_30h;\n    \n    fcn.00430eea(&var_30h, arg_8h, arg_ch);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x405, 0, &var_30h);\n    return;\n}\n",
        "token_count": 98
    },
    "004310dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004310dc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    \n    fcn.00430eea(&var_30h, arg_8h, arg_ch);\n    uVar1 = fcn.00432c1b(&var_20h, 0x10, arg_10h, 0x10);\n    fcn.0040123a(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x406, 0, &var_30h);\n    return;\n}\n",
        "token_count": 163
    },
    "00414b02": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414b02(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.00414034(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    uVar5 = fcn.00414851(uVar5);\n                    iVar3 = *arg_18h;\ncode_r0x00414bca:\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                uVar5 = fcn.00414851(uVar5);\n                iVar3 = *arg_18h;\n                goto code_r0x00414bca;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1178
    },
    "00422c75": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422c75(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x20));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0042ceb8": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042ceb8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00406f55();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, arg_8h, 0xf1);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2),  iVar3 != 0)) {\n        arg_8h_00 = fcn.004042ba(*(iVar3 + 6) * 4);\n        iVar4 = 0;\n        if (*(iVar3 + 6) != 0) {\n            puVar5 = iVar3 + 8;\n            do {\n                *(arg_8h_00 + iVar4 * 4) = *puVar5;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar4 < *(iVar3 + 6));\n        }\n        iVar4 = fcn.0042bab4(arg_8h_00, *(iVar3 + 6));\n        fcn.004042e5(arg_8h_00);\n        if (iVar4 != 0) {\n            fcn.0042c296(*(iVar3 + 2) + 7, *(iVar3 + 4) + 7, *(iVar3 + 2), *(iVar3 + 4));\n            iVar4 = fcn.0042c3b2(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar2);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 466
    },
    "00430f3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430f3d(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x20), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if (var_20h - 0x200U < 10) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x20), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 361
    },
    "00417544": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00417544(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00418f15": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418f15(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_4h;\n    int32_t iVar5;\n    \n    iVar5 = 0x14;\n    fcn.00432a99(0x14);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar3 = *(unaff_EBP + 0xc);\n    iVar4 = 0;\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        *(unaff_EBP + -4) = 0;\n        for (; *(unaff_EBP + -0x18) = iVar4,  iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            iVar5 = unaff_EBP + -0x11;\n            fcn.00418ad1();\n            cVar2 = *(unaff_EBP + -0x11);\n            if (cVar2 == '\\n') {\ncode_r0x00418f70:\n                if (*(unaff_EBP + 0xc) != iVar3) {\n                    *(iVar4 + iVar1) = cVar2;\n                    iVar4 = iVar4 + 1;\n                }\n                break;\n            }\n            if (cVar2 == '\\r') {\n                iVar5 = unaff_EBP + -0x11;\n                fcn.00418ad1();\n                cVar2 = *(unaff_EBP + -0x11);\n                goto code_r0x00418f70;\n            }\n            *(iVar4 + iVar1) = cVar2;\n        }\n        *(iVar4 + iVar1) = 0;\n    }\n    fcn.00432b3e(iVar5);\n    return;\n}\n",
        "token_count": 470
    },
    "004195f3": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195f3(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 237
    },
    "0042ffaf": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ffaf(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    uint lprcDst;\n    int32_t lprcSrc1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcSrc2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h - *(in_ECX + 4);\n    iVar4 = arg_ch - *(in_ECX + 8);\n    iVar3 = *(in_ECX + 0x8c);\n    uVar5 = 2;\n    if (iVar3 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar2;\n    }\n    else {\n        if (iVar3 != 0xb) {\n            uVar5 = 0x22;\n            if (iVar3 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar4;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar4;\n            }\n            iVar3 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x00430007;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar2;\n    }\n    iVar3 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x00430007:\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x138))(&var_8h, iVar3, uVar5);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    lprcSrc1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4c);\n    var_24h = (*pcVar1)(0x4d);\n    var_20h = (*pcVar1)(0x4e);\n    var_20h = var_20h + lprcSrc1;\n    var_1ch = (*pcVar1)(0x4f);\n    var_1ch = var_1ch + var_24h;\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((*(in_ECX + 0x58) - *(in_ECX + 0x60)) - var_8h) + var_10h;\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.0042fda0(0);\n    return;\n}\n",
        "token_count": 1203
    },
    "0041c9eb": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c9eb(int32_t arg_8h, uint32_t lpPoint, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    while( true ) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x366, 0, lpPoint & 0xffff | arg_10h << 0x10);\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if (((uVar2 & 0x40000000) == 0) || (arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h),  arg_8h == 0)) break;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 268
    },
    "00424642": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424642(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar3 = 8;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar4 = 4;\n    }\n    else {\n        uVar4 = 0;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar5 == 0) {\n        iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n    }\n    else {\n        do {\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            if (iVar5 == 0) {\n                return 0;\n            }\n        } while (iVar5 != iVar6);\n    }\n    return iVar7;\n}\n",
        "token_count": 418
    },
    "0042bc9b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bc9b(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.0042bbf2(arg_8h, &var_18h);\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 100
    },
    "0042bdbc": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bdbc(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint unaff_ESI;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.0042bbf2(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_fh;\n    *arg_14h = var_18h;\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 193
    },
    "0042b2f8": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042b2f8(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint arg_10h;\n    uint uStack300;\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [80];\n    uchar auStack188 [180];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack188;\n    iStack276 = param_2;\n    iStack272 = param_3;\n    if (param_1 != 0) goto code_r0x0042b335;\n    do {\n        fcn.0040440f();\ncode_r0x0042b335:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), &stack0xfffffec4);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (iStack272 == 0) goto code_r0x0042b566;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(&stack0xfffffec4, iStack272);\n        if (iVar2 != 0) goto code_r0x0042b566;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0040ee93(auStack268, 0x104);\n        fcn.0041748c(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.0042e80b(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x8c) != param_1) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_2 + 0x20));\n        if (iVar2 != 0) {\n            fcn.0040ea97(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack300 = 0xffffffff;\n    if (iStack272 == 0) {\n        fcn.0042e06b(*(param_1 + 0xa0), param_2);\n        fcn.0042e06b(*(param_1 + 0xa0), 0);\n        fcn.0040ea97(0, -*0x496e38, -*0x496e3c, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack292, iStack272);\n        fcn.004141b1(&iStack292);\n        uStack300 = fcn.0042a80f(iStack276, iStack292, iStack288, iStack284, iStack280, \n                                 (iStack284 - iStack292) / 2 + iStack292, (iStack280 - iStack288) / 2 + iStack288);\n        fcn.0040ea97(0, iStack292, iStack288, iStack284 - iStack292, iStack280 - iStack288, 0x114);\n        param_2 = iStack276;\n    }\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.0040a149();\n    if (iVar2 != param_1) {\n        fcn.0042a5f8(param_1);\n    }\n    iVar2 = *(param_2 + 0x8c);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x0042b531:\n        fcn.0042abcd(param_2, uStack300, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x94) == 0) || (*(iVar2 + 0x94) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack300 = 0xffffffff;\n        goto code_r0x0042b531;\n    }\n    *(param_2 + 0x8c) = param_1;\n    if (bVar1) {\n        fcn.0040ea97(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.0042ab66(param_2);\n    iVar2 = fcn.00422ca4();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x0042b566:\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 1373
    },
    "00430840": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00430840(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x00430858;\n    uVar3 = fcn.0040440f();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x00430858:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "00453fad": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00453fad(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x498fc0) + 4 + (unaff_ESI & 0x1f) * 0x28;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.00453cff();\n    return;\n}\n",
        "token_count": 152
    },
    "0045b31c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045b31c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n    arg_8h = 0x1004;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x0045b372;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetACP)();\ncode_r0x0045b372:\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 309
    },
    "0040103c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040103c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 1);\n        if (iVar2 != 0) goto code_r0x004029b6;\n    }\n    iVar2 = fcn.004011ea();\ncode_r0x004029b6:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 169
    },
    "004010e6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004010e6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.0040117c(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.00432c1b(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.00401181(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 186
    },
    "00401253": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00401253(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    if (-param_2 - 1U < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 78
    },
    "004047a1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047a1(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    iVar3 = (*_sym.imp.ole32.dll_ReadClassStg)(arg_8h, &var_14h);\n    if (iVar3 != 0) goto code_r0x00404860;\n    var_20h = 0;\n    (*_sym.imp.ole32.dll_ReadFmtUserTypeStg)(arg_8h, &var_28h, &var_20h);\n    var_24h = 0;\n    var_18h = NULL;\n    iVar3 = (*_sym.imp.ole32.dll_OleRegGetUserType)(arg_ch, 1, &var_18h);\n    pcVar1 = _sym.imp.ole32.dll_WriteClassStg;\n    if (iVar3 != 0) {\n        var_18h = &var_24h;\n    }\n    var_1ch = (*_sym.imp.ole32.dll_WriteClassStg)(arg_8h, arg_ch);\n    pcVar2 = _sym.imp.ole32.dll_WriteFmtUserTypeStg;\n    if (var_1ch == 0) {\n        var_1ch = (*_sym.imp.ole32.dll_WriteFmtUserTypeStg)(arg_8h, var_28h, var_18h);\n        if (var_1ch == 0) {\n            var_1ch = (*_sym.imp.ole32.dll_SetConvertStg)(arg_8h, 1);\n            if (var_1ch == 0) goto code_r0x00404845;\n        }\n        (*pcVar1)(arg_8h, &var_14h);\n        (*pcVar2)(arg_8h, var_28h, var_20h);\n    }\ncode_r0x00404845:\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    if (var_18h != &var_24h) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_18h);\n    }\n    (*pcVar1)(var_20h);\ncode_r0x00404860:\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 596
    },
    "0040536e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040536e(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 2);\n        if (iVar2 != 0) goto code_r0x00405399;\n    }\n    iVar2 = fcn.0040525b();\ncode_r0x00405399:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 168
    },
    "00408e0f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408e0f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00408d9c(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.00407e36(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 163
    },
    "00409ab8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ab8(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0040e62b();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.004087f0();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.0040726d(iVar5, 1);\n            fcn.004072d8(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040726d(iVar5, 2);\n            fcn.004072d8(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        lprcDst = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.0040ea97(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1079
    },
    "0040d249": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d249(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040698e();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.00406f55();\n    var_1ch = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        puVar3 = fcn.00433586();\n        var_4h = *puVar3;\n        puVar3 = fcn.00433586();\n        *puVar3 = 0;\n        fcn.00433ec4(iVar1, 0x60, 0x5f, \"Afx:%p:%x\", var_1ch);\n    }\n    else {\n        puVar3 = fcn.00433586();\n        var_4h = *puVar3;\n        puVar3 = fcn.00433586();\n        *puVar3 = 0;\n        fcn.00433ec4(iVar1, 0x60, 0x5f, \"Afx:%p:%x:%p:%p:%p\", var_1ch);\n    }\n    piVar4 = fcn.00433586();\n    if (*piVar4 == 0) {\n        puVar3 = fcn.00433586();\n        *puVar3 = var_4h;\n    }\n    else {\n        puVar3 = fcn.00433586();\n        fcn.004051a6(*puVar3);\n    }\n    iVar2 = fcn.004084eb(var_1ch, iVar1, &var_2ch);\n    if (iVar2 == 0) {\n        var_2ch = arg_8h;\n        var_28h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_18h = arg_14h;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_20h = 0;\n        var_24h = 0;\n        var_ch = 0;\n        var_8h = iVar1;\n        iVar2 = fcn.0040d1bb(&var_2ch);\n        if (iVar2 == 0) {\n            fcn.00413bbb();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 660
    },
    "0041071e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041071e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x4929d4;\n    var_10h = param_1;\n    iVar1 = *0x4929d4;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "00411fec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411fec(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x2c) != 0) {\n        fcn.0040440f();\n    }\n    fcn.00432e30(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.0040698e();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.0043723d(arg_10h, arg_ch, 0x411ed4, &var_1ch, arg_8h | 4, in_ECX + 0x30);\n            *(in_ECX + 0x2c) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.dll_SuspendThread)(*(in_ECX + 0x2c));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x2c), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x2c));\n            *(in_ECX + 0x2c) = 0;\n            goto code_r0x004120cb;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x004120cb:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 610
    },
    "004171a7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.004171a7(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0x7fffffff - param_2 < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 80
    },
    "004185d9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004185d9(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 111
    },
    "0041ac50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = fcn.004372eb(arg_8h);\n    puVar1 = fcn.0041aab8(&var_24h, 10000);\n    var_ch = *puVar1;\n    var_8h = puVar1[1];\n    var_4h = puVar1[2];\n    if (arg_8h < 0) {\n        puVar1 = fcn.0041aa75(&var_24h);\n        var_ch = *puVar1;\n        var_8h = puVar1[1];\n        var_4h = puVar1[2];\n    }\n    var_18h = fcn.004372eb(arg_ch);\n    if (arg_ch < 0) {\n        puVar1 = fcn.0041aa75(&var_24h);\n        var_18h = *puVar1;\n        var_14h = puVar1[1];\n        var_10h = puVar1[2];\n    }\n    uVar2 = fcn.0041a9b1(&var_24h, &var_18h);\n    fcn.00419887(uVar2);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 400
    },
    "0041cc03": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041cc03(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x68) == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetCapture)();\n    iVar2 = fcn.0041ca7f(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    iVar3 = fcn.0040baa2();\n    uVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    fcn.0040a149(uVar4);\n    iVar5 = fcn.0040baa2();\n    var_ch = 0;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    if (iVar2 != 0) {\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  iVar2 == iVar7)) {\n        uVar4 = *0x496e68;\n        if (iVar1 == *(in_ECX + 0x20)) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            uVar4 = *0x496e68;\n        }\ncode_r0x0041ccf7:\n        (*_sym.imp.USER32.dll_SetCursor)(uVar4);\n        goto code_r0x0041ccfd;\n    }\n    if (iVar2 == 0) {\ncode_r0x0041ccc6:\n        if (iVar6 != iVar8) goto code_r0x0041cccb;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar4 = *(in_ECX + 0x20);\n            iVar7 = fcn.00422986();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar3) {\n                    iVar2 = 0;\n                    goto code_r0x0041ccfd;\n                }\n                uVar4 = *0x496e6c;\n                if (iVar1 != *(in_ECX + 0x20)) {\n                    (*_sym.imp.USER32.dll_SetCapture)(*(in_ECX + 0x20));\n                    uVar4 = *0x496e6c;\n                }\n                goto code_r0x0041ccf7;\n            }\n            goto code_r0x0041ccc6;\n        }\ncode_r0x0041cccb:\n        iVar2 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x20)) {\n        (*_sym.imp.USER32.dll_ReleaseCapture)(uVar4);\n    }\ncode_r0x0041ccfd:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 770
    },
    "00420601": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: lprcSrc1\n\nvoid __cdecl\nfcn.00420601(uint lprcSrc2, uint dx, uint dy, uint lprcSrc, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint lprcSrc1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(0x38);\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00420373(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.0041485f(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.0041485f(uVar2);\n    fcn.004203a7(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.0042055e();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    iVar3 = *(unaff_EBP + 0x20);\n    if (iVar3 == 0) {\n        fcn.0040440f();\n        iVar3 = extraout_ECX_00;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = iVar3;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = _sym.imp.GDI32.dll_CreateRectRgn;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.0041485f(uVar2);\n        fcn.0042038c(*(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.0042038c(unaff_EBP + -0x44);\n        fcn.004203a7(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.0041485f(uVar2);\n            fcn.004203a7(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.00414134(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.00414a54(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.00414a54(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.00414134(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.00414a54(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.00414a54(*(unaff_EBP + 0x14));\n    }\n    fcn.00414134(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 2204
    },
    "00420953": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420953(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar5 = &var_40h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a, var_40h, 0x2d0);\n    var_44h = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_48h = 0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_48h, 1);\n    uVar3 = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    (*pcVar1)(uVar2, &var_50h);\n    iVar4 = fcn.004372eb(var_44h - var_4ch);\n    var_40h = -iVar4;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    fcn.0041785f(&var_40h);\n    fcn.00432a57(uVar3);\n    return;\n}\n",
        "token_count": 508
    },
    "00423466": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00423466(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h != NULL) goto code_r0x00423480;\n    do {\n        fcn.0040440f();\ncode_r0x00423480:\n    } while (*arg_8h == 0);\n    piVar1 = fcn.004159d3();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040e645();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0040e689(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 339
    },
    "004244b7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004244b7(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x32] == 0) {\n        uVar1 = in_ECX[0x34];\n        in_ECX[0x32] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x34] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x20] != NULL)) {\n            (**(*in_ECX[0x20] + 0x50))();\n        }\n        uVar1 = fcn.0040e62b();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.0040a53d(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.0040a53d(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.0040a53d(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.0040ea97(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x32] = 0;\n    }\n    return;\n}\n",
        "token_count": 486
    },
    "0042845f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042845f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    \n    var_24h = arg_8h;\n    var_28h = 0x18;\n    var_1ch = 0xf000;\n    var_20h = ((arg_ch != 0) + 1) * 0x1000;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110d, 0, &var_28h);\n    return;\n}\n",
        "token_count": 161
    },
    "0042a700": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a700(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xac);\n    puVar1 = in_ECX + 0xb0;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb4);\n    uVar4 = *(in_ECX + 0xb8);\n    uVar5 = *(in_ECX + 0xbc);\n    *(in_ECX + 0xac) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.0042f16c(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb4) = uVar3;\n    *(in_ECX + 0xb8) = uVar4;\n    *(in_ECX + 0xbc) = uVar5;\n    *(in_ECX + 0xac) = uVar6;\n    return;\n}\n",
        "token_count": 306
    },
    "0042a80f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0042a80f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (in_ECX != 0) goto code_r0x0042a825;\n    do {\n        iVar1 = fcn.0040440f();\ncode_r0x0042a825:\n    } while (arg_8h == iVar1);\n    uVar4 = *(in_ECX + 0x80) & 0xa000;\n    var_10h = iVar1;\n    var_ch = iVar1;\n    var_8h = iVar1;\n    var_4h = iVar1;\n    if (*(in_ECX + 0xa0) != iVar1 && iVar1 <= *(in_ECX + 0xa0)) {\n        do {\n            iVar1 = var_4h;\n            piVar2 = fcn.0042a7f0();\n            if ((piVar2 == NULL) || (iVar3 = (**(*piVar2 + 0x154))(),  iVar3 == 0)) {\n                var_10h = var_10h + (var_8h - *0x496e3c);\n                var_8h = 0;\n                iVar1 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar1 = arg_1ch;\n                }\n                if (iVar1 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.0042e09b(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x0042a921;\n                }\ncode_r0x0042a8f0:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar2[8], &lpRect, iVar1);\n                fcn.004141b1(&lpRect);\n                if (uVar4 == 0) {\n                    iVar1 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar1 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar1) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar1 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar1 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar1 < 0) goto code_r0x0042a8f0;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0xa0));\n        iVar1 = 0;\n    }\n    iVar3 = var_ch + 1;\n    fcn.0042e09b(iVar3, iVar1, 1);\ncode_r0x0042a921:\n    fcn.0042e09b(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 949
    },
    "0042ba1a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042ba1a(int32_t hgdiobj)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    piVar1 = in_ECX + 0x27;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x29], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x29];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.00417522(piVar1);\n        *piVar1 = hgdiobj;\n    }\n    return uVar3;\n}\n",
        "token_count": 380
    },
    "0042c740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c740(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.0042bcd2(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.0042bcd2(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.0042bcd2(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.0042bcd2(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.0042c611(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x0042c8b6:\n        fcn.0042bcd2(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.0042bcd2(arg_8h, arg_ch, 0);\n        piVar3 = fcn.0042c611(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.0042bcd2(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.0042c611(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.0042bcd2(arg_8h, arg_ch, (iVar1 + iVar4) / 2);\n                piVar3 = fcn.0042c611(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.0042bed9(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x0042c8b6;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.0042bed9(*piVar3, iVar4);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x0042c8b6;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 856
    },
    "0042ca3b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ca3b(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.0042ea5d(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x4932f4 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 227
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401050(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00401253(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.0040129e(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 92
    },
    "0040105f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040105f(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00431e2a(param_1, param_2, param_3);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 73
    },
    "00401078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401078(uint param_1)\n\n{\n    *0x4951a4 = 1;\n    fcn.004011cc(param_1, 0);\n    fcn.00401212(param_1);\n    if (*0x4951a8 == 0) {\n        *0x4951a0 = 0;\n    }\n    else {\n        *0x4951a0 = (*_sym.imp.USER32.dll_SetCursor)(*0x4951a8);\n    }\n    (*_sym.imp.USER32.dll_SetCapture)(param_1);\n    return 0;\n}\n",
        "token_count": 131
    },
    "00401082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00401082(uint noname_0, uint noname_1, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    uint var_34h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x14;\n    var_4h_2 = 0x48bfb8;\n    fcn.004323a4();\n    *(unaff_EBP + -0x1d) = 1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.00401253(unaff_EBP + -0x24, *(unaff_EBP + 8), 0x2000);\n    if (iVar1 < 0) {\n        *(unaff_EBP + -0x1d) = 0;\n    }\n    else {\n        fcn.004325d0();\n        *(unaff_EBP + -0x18) = &fcn.00401082::var_4h_2;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x38) = 0x401973;\n    fcn.004323ec();\n    return;\n}\n",
        "token_count": 358
    },
    "004010b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010b9(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    if (param_2 == 0) {\n        *param_1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n        iVar2 = iVar2 + 1;\n        fcn.00401163(param_1, iVar2 * 4, param_1 + 1, 0x80);\n        pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        uVar8 = 0;\n        uVar7 = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(param_2, 0, param_2, iVar2, *param_1, iVar2 * 4, 0, 0);\n        bVar4 = iVar3 == 0;\n        if (bVar4) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar3 == 0x7a) {\n                uVar6 = 0;\n                uVar5 = 0;\n                uVar7 = (*pcVar1)(uVar8, 0, uVar7, iVar2, 0, 0, 0, 0);\n                fcn.00401163(param_1, uVar7, param_1 + 1, 0x80);\n                iVar2 = (*pcVar1)(uVar6, 0, uVar5, iVar2, *param_1, uVar7, 0, 0);\n                bVar4 = iVar2 == 0;\n            }\n            if (bVar4) {\n                fcn.00401005();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "004010d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get graphical window text"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004010d7(char *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar *puStackY10704;\n    uint uStackY10628;\n    char *pcStackY10624;\n    int32_t iStackY10620;\n    uint uStackY10612;\n    uchar auStackY10608 [5500];\n    uchar auStackY5108 [4860];\n    uint uStackY248;\n    uchar *puStackY244;\n    uchar *puStackY240;\n    char *pcStackY236;\n    char *pcStackY232;\n    uchar *puStackY228;\n    char *pcStackY224;\n    uint uStackY220;\n    char *arg_8h;\n    uchar auStack108 [92];\n    int32_t iStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = 0x402c27;\n    fcn.00432eb0();\n    uStack12 = 0x472e13;\n    iStack16 = *in_FS_OFFSET;\n    uStack8 = *0x4933e0 ^ &stack0xffffd690;\n    *in_FS_OFFSET = &stack0xffffd684;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    (*_sym.imp.USER32.dll_GetDlgCtrlID)();\n    (*_sym.imp.USER32.dll_wsprintfA)();\n    (*_sym.imp.USER32.dll_SetDlgItemTextA)();\n    pcVar1 = _sym.imp.USER32.dll_SetDlgItemInt;\n    (*_sym.imp.USER32.dll_SetDlgItemInt)();\n    uStackY220 = 0x402ce2;\n    arg_8h = param_1;\n    (*pcVar1)();\n    pcStackY10624 = NULL;\n    uStackY220 = 0x402cec;\n    uStackY220 = fcn.0040f93d();\n    pcStackY224 = 0x402cf5;\n    fcn.004012a8();\n    pcStackY224 = 0x1388;\n    pcStackY232 = &stack0xffffec0c;\n    puStackY228 = NULL;\n    uStackY10612 = 0;\n    pcStackY236 = 0x402d0a;\n    fcn.00432e30();\n    puStackY240 = &stack0xffffff94;\n    pcStackY236 = \"ListBox\";\n    puStackY244 = 0x402d1b;\n    iVar2 = fcn.00432da0();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        pcStackY224 = 0x402d34;\n        fcn.004089fa();\n        pcStackY224 = param_2;\n        uStackY10612 = CONCAT31(uStackY10612._1_3_, 1);\n        puStackY228 = 0x402d48;\n        fcn.0040a18a();\n        puStackY228 = NULL;\n        pcStackY232 = NULL;\n        pcStackY236 = 0x18b;\n        puStackY240 = puStackY10704;\n        puStackY244 = 0x402d54;\n        iVar2 = (*pcVar1)();\n        pcStackY10624 = NULL;\n        if (0 < iVar2) {\n            do {\n                uStackY220 = 0x402d6d;\n                arg_8h = pcStackY10624;\n                fcn.0040dc96();\n                uStackY220 = 0x47b654;\n                pcStackY224 = 0x402d7a;\n                fcn.0040105a();\n                pcStackY224 = uStackY10628;\n                puStackY228 = &stack0xffffec0c;\n                pcStackY232 = 0x402d89;\n                fcn.00432cb0();\n                pcStackY10624 = pcStackY10624 + 1;\n            } while (pcStackY10624 < iVar2);\n        }\n        pcStackY224 = 0x402d9e;\n        fcn.0040a1c3();\n        pcStackY10624 = 0x1;\n        uStackY10612 = uStackY10612 & 0xffffff00;\n        pcStackY224 = 0x402db0;\n        fcn.0040d931();\n    }\n    puStackY228 = &stack0xffffff94;\n    pcStackY224 = \"ComboBox\";\n    pcStackY232 = 0x402dc1;\n    iVar2 = fcn.00432da0();\n    if (iVar2 == 0) {\n        pcStackY224 = 0x402dd3;\n        fcn.004089fa();\n        pcStackY224 = param_2;\n        uStackY10612 = CONCAT31(uStackY10612._1_3_, 2);\n        puStackY228 = 0x402de7;\n        fcn.0040a18a();\n        puStackY228 = NULL;\n        pcStackY232 = NULL;\n        pcStackY236 = 0x146;\n        puStackY240 = puStackY10704;\n        puStackY244 = 0x402df3;\n        iVar2 = (*pcVar1)();\n        pcStackY10624 = NULL;\n        if (0 < iVar2) {\n            do {\n                pcStackY224 = &stack0xffffd67c;\n                puStackY228 = pcStackY10624;\n                pcStackY232 = 0x402e0c;\n                fcn.0040dcc7();\n                pcStackY232 = NULL;\n                pcStackY236 = NULL;\n                puStackY240 = 0x147;\n                puStackY244 = puStackY10704;\n                uStackY248 = 0x402e18;\n                iVar3 = (*pcVar1)();\n                if (iVar3 == pcStackY10624) {\n                    arg_8h = \" <- Selected\";\n                    pcStackY224 = 0x402e2a;\n                    fcn.0040105a();\n                }\n                uStackY220 = 0x47b654;\n                pcStackY224 = 0x402e37;\n                fcn.0040105a();\n                pcStackY224 = uStackY10628;\n                puStackY228 = &stack0xffffec0c;\n                pcStackY232 = 0x402e46;\n                fcn.00432cb0();\n                pcStackY10624 = pcStackY10624 + 1;\n            } while (pcStackY10624 < iVar2);\n        }\n        pcStackY224 = 0x402e5b;\n        fcn.0040a1c3();\n        pcStackY10624 = 0x1;\n        uStackY10612 = uStackY10612 & 0xffffff00;\n        pcStackY224 = 0x402e6d;\n        fcn.0040da65();\n    }\n    if (pcStackY10624 == NULL) {\n        pcStackY224 = &stack0xffffec0c;\n        puStackY228 = 0x1388;\n        pcStackY232 = 0xd;\n        pcStackY236 = param_2;\n        puStackY240 = 0x402e83;\n        (*pcVar1)();\n    }\n    pcStackY224 = &stack0xffffec0c;\n    puStackY228 = 0x3ec;\n    pcStackY232 = param_1;\n    pcStackY236 = 0x402e98;\n    (*_sym.imp.USER32.dll_SetDlgItemTextA)();\n    pcStackY236 = 0x402ea3;\n    fcn.0040128a();\n    *in_FS_OFFSET = iStackY10620;\n    uStackY220 = 0x402ec0;\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 1778
    },
    "004010f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004010f5(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t iVar4;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    \n    iVar2 = fcn.004010cd(param_1);\n    uVar7 = fcn.004010cd(param_2);\n    if (iVar2 == uVar7) {\n        uVar6 = 0;\n        uVar7 = fcn.004010cd(uVar7 >> 0x20);\n        piVar5 = uVar7 >> 0x20;\n        if (uVar7 != 0) {\n            do {\n                iVar1 = *piVar5;\n                iVar4 = *param_2;\n                if (iVar1 - 0x41U < 0x1a) {\n                    iVar1 = iVar1 + 0x20;\n                }\n                if (iVar4 - 0x41U < 0x1a) {\n                    iVar4 = iVar4 + 0x20;\n                }\n                if (iVar1 != iVar4) {\n                    return 1;\n                }\n                uVar6 = uVar6 + 1;\n                param_2 = param_2 + 1;\n                uVar7 = fcn.004010cd(piVar5 + 1);\n                piVar5 = uVar7 >> 0x20;\n            } while (uVar6 < uVar7);\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 371
    },
    "00401122": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401122(uint param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t hWnd;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack272;\n    uint uStack268;\n    uchar auStack264 [116];\n    uchar auStack148 [140];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4933e0 ^ auStack148;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&uStack272);\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    (*_sym.imp.USER32.dll_wsprintfA)(auStack264, 0x47b704, uStack272);\n    pcVar2 = _sym.imp.USER32.dll_SetDlgItemTextA;\n    (*_sym.imp.USER32.dll_SetDlgItemTextA)(param_1, 0x3ee, auStack264);\n    (*pcVar1)(auStack264, 0x47b704, uStack268);\n    arg_8h = 0x3ef;\n    (*pcVar2)(param_1, 0x3ef, auStack264);\n    hWnd = (*_sym.imp.USER32.dll_WindowFromPoint)(uStack272, uStack268);\n    iVar3 = fcn.0040128f(param_1, hWnd);\n    if (iVar3 != 0) {\n        fcn.004010d7(param_1, hWnd);\n        if (*0x49519c != 0) {\n            fcn.004010e1(*0x49519c);\n        }\n        *0x49519c = hWnd;\n        fcn.0040114a(param_1, hWnd);\n    }\n    fcn.00432a57(arg_8h);\n    return;\n}\n",
        "token_count": 393
    },
    "004011ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004011ef(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = fcn.00401050(param_2, 8);\n    puVar2 = fcn.00431cd9(uVar1);\n    if (puVar2 != NULL) {\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        puVar2 = puVar2 + 2;\n    }\n    return puVar2;\n}\n",
        "token_count": 124
    },
    "00401203": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401203(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040123f(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.0040129e(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 93
    },
    "00401212": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401212(uint hDlg)\n\n{\n    int32_t iVar1;\n    int32_t lpRect;\n    int32_t Y;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, 0x3eb);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n        (*_sym.imp.USER32.dll_SetCursorPos)(lpRect + 0xf, Y + 0x12);\n    }\n    return 0;\n}\n",
        "token_count": 122
    },
    "00401271": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401271(int32_t arg_8h)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = *in_ECX;\n    iVar1 = *(arg_10h + -0xc);\n    puVar2 = (**(**(arg_10h + -0x10) + 0x10))();\n    iVar3 = (***puVar2)(arg_8h, 1);\n    if (iVar3 == 0) {\n        fcn.004011ea();\n    }\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    fcn.00432c1b(iVar3 + 0x10, arg_8h + 1, arg_10h, arg_8h + 1);\n    *(iVar3 + 4) = iVar1;\n    fcn.0040128a();\n    *in_ECX = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 262
    },
    "004012a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004012a3(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = *(arg_8h + 0x3c);\n    iVar4 = fcn.00432f01(0x47b860);\n    var_4h = 0;\n    iVar5 = *(iVar4 + iVar1 + arg_8h) + arg_8h;\n    iVar1 = *(iVar5 + 0x1c);\n    iVar4 = *(iVar5 + 0x20);\n    iVar2 = *(iVar5 + 0x24);\n    uVar3 = *(iVar5 + 0x18);\n    if (uVar3 != 0) {\n        do {\n            iVar5 = fcn.00432da0(arg_ch, *(iVar4 + arg_8h + var_4h * 4) + arg_8h);\n            if (iVar5 == 0) break;\n            var_4h = var_4h + 1;\n        } while (var_4h < uVar3);\n    }\n    if (var_4h == uVar3) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = *(iVar1 + arg_8h + *(iVar2 + arg_8h + var_4h * 2) * 4) + arg_8h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 368
    },
    "004012a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004012a8(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.0040129e(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 123
    },
    "00401c4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401c4d(void)\n\n{\n    fcn.00401195(0x492000, 0x4010c3, _sym.imp.KERNEL32.dll_CompareStringW);\n    // WARNING: Could not recover jumptable at 0x00401c69. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x492000)();\n    return;\n}\n",
        "token_count": 91
    },
    "0040241b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040241b(void)\n\n{\n    fcn.00401195(0x492004, 0x401136, _sym.imp.KERNEL32.dll_GetStringTypeExW);\n    // WARNING: Could not recover jumptable at 0x00402437. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x492004)();\n    return;\n}\n",
        "token_count": 88
    },
    "0040445d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040445d(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00433326(param_1, param_2, param_3, param_4);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "00404b4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b4e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint cb;\n    \n    cb = 0;\n    iVar1 = fcn.00404b2e(&cb, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(cb);\n    return uVar2;\n}\n",
        "token_count": 115
    },
    "00404ba5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ba5(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00432c1b(param_1, param_2, param_3, param_4);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "00404bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404bc4(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00404b86(param_1, param_2, param_3, param_4);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 81
    },
    "00404be3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404be3(uint hModule, uint hResInfo, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, hResInfo);\n        puVar3 = iVar1 + puVar2;\n        for (arg_10h = arg_10h & 0xf; arg_10h != 0; arg_10h = arg_10h - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "00404c3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404c3f(uint param_1, uint32_t param_2)\n\n{\n    int32_t hResInfo;\n    \n    hResInfo = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1);\n    if (hResInfo == 0) {\n        return;\n    }\n    fcn.00404be3((param_2 >> 4) + 1 & 0xffff, hResInfo, 6);\n    return;\n}\n",
        "token_count": 104
    },
    "00404e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404e1f(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalSize;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalSize)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, uVar3);\n        if (arg_8h != 0) {\ncode_r0x00404e58:\n            pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_ch);\n            uVar6 = (*pcVar2)(arg_8h);\n            uVar5 = (*pcVar1)(arg_8h, uVar5, uVar3);\n            fcn.00404ba5(uVar6, uVar5);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar4 = (*pcVar1)(arg_8h);\n        if (uVar3 <= uVar4) goto code_r0x00404e58;\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "0040520f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040520f(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.0040129e(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 123
    },
    "00405266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405266(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.0040129e(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.0040128a();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004052bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004052bd(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.0040129e(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.0040128a();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00405306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405306(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    puVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n    iVar4 = (***puVar3)(arg_8h, 2);\n    if (iVar4 == 0) {\n        fcn.0040525b();\n    }\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    fcn.00404b0f(iVar4 + 0x10, arg_8h + 1, iVar1, arg_8h + 1);\n    *(iVar4 + 4) = iVar2;\n    fcn.0040128a();\n    *in_ECX = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 253
    },
    "004053e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.004053e9(uint arg_8h, uint arg_ch)\n\n{\n    ushort *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    puVar1 = fcn.00404c3f(arg_8h, arg_ch);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.00404d3d(puVar1 + 1, *puVar1);\n        uVar3 = fcn.0040117c(uVar2);\n        fcn.00404d5a(uVar3, uVar2, puVar1 + 1, *puVar1);\n        fcn.00401181(uVar2);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 182
    },
    "004054ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004054ff(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00404d21(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00405266();\n    }\n    else {\n        uVar2 = fcn.0040117c(iVar1);\n        fcn.00404d5a(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00401181(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 161
    },
    "004059d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004059d1(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00404c77(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.004052bd();\n    }\n    else {\n        uVar2 = fcn.004054d5(iVar1);\n        fcn.00404c9b(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00405234(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 162
    },
    "00405a1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * fcn.00405a1b(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    \n    puVar1 = fcn.00404c3f(param_1, param_2);\n    if (puVar1 != NULL) {\n        arg_ch = *puVar1;\n        arg_8h = fcn.004054d5(arg_ch);\n        fcn.00404cbb(arg_8h, arg_ch, puVar1 + 1, *puVar1);\n        fcn.00405234(arg_ch);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 161
    },
    "004068e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004068e4(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406711(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "00406ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00406ae0(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    fcn.00405ab5(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00406a5e(unaff_EBP + -0x10);\n    fcn.0040128a();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 1390
    },
    "00406d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00406d24(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    fcn.00405ab5(\"comdlg32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00406a5e(unaff_EBP + -0x10);\n    fcn.0040128a();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 411
    },
    "00406fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406fc8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.00406f55();\n    iVar2 = fcn.00406a4a();\n    if (iVar2 == 0) {\n        uStack8 = 0x492448;\n        fcn.004332dc(&uStack8, 0x48c270);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004072d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004072d8(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040708e();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.00433816(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x496ad0)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 419
    },
    "004081ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004081ba(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.0040440f();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 106
    },
    "00409a2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409a2d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00432a99(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.0040698e();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xf4))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 358
    },
    "0040a170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a170(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0040a0d5(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0040440f();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "0040ce5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ce5c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00432a99();\n    fcn.00406f55();\n    fcn.0040e13f();\n    *in_FS_OFFSET = uStackY532;\n    fcn.00432a57(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 95
    },
    "0040dcf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040dcf8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004354fc(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "0040dd10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0040dd10(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0040dd1f;\ncode_r0x0040dd1a:\n    fcn.0040440f();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x0040dd1f:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x40de18\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x40de18)) {\n    case 0x40dd50:\n        (*arg_14h)();\n        return 1;\n    case 0x40dd58:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x40dd60:\n        arg_18h = arg_ch;\n        break;\n    case 0x40dd6b:\n        arg_18h = arg_ch;\n        goto code_r0x0040de04;\n    case 0x40dd73:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040dd1a;\n    case 0x40dd87:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040dd1a;\n    case 0x40dd98:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040dd1a;\n    case 0x40ddb0:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040dd1a;\n    case 0x40ddc8:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x0040ddd7;\n        }\n        goto code_r0x0040dd1a;\n    case 0x40dde5:\n        goto code_r0x0040dde5;\n    case 0x40ddf9:\n        break;\n    case 0x40de01:\ncode_r0x0040de04:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x0040dde5:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x0040ddd7:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x0040dd1a;\n}\n",
        "token_count": 971
    },
    "0040e9dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040e9dd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040440f();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 104
    },
    "0040f09d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f09d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    iVar1 = *(iVar1 + 0x44);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        piVar2 = *(iVar1 + 8);\n        if (piVar2[1] == 0) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = *(piVar2[1] + 0x24);\n        }\n        if ((iVar4 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar3)) break;\n        if ((piVar2[1] != 0) && (piVar2[1] == *(*(param_1 + 0x4c) + 0x70))) {\n            return iVar1;\n        }\n        fcn.0040e9c4();\n    }\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "0040f2a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f2a1(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.00431d9c(*(param_1 + 0x54));\n    uVar1 = fcn.00436b7c(param_2);\n    *(param_1 + 0x54) = uVar1;\n    fcn.00431d9c(*(param_1 + 0x68));\n    uVar1 = fcn.00436b7c(*(param_1 + 0x50));\n    *(param_1 + 0x68) = uVar1;\n    return;\n}\n",
        "token_count": 148
    },
    "0041052b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041052b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406f55();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0041053f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.004103d0(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 145
    },
    "0041091a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0041091a(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar3 = fcn.00406f55();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x496c70 != NULL) {\n            (**(**0x496c70 + 4))(1);\n            *0x496c70 = NULL;\n        }\n        if (*0x496c6c != NULL) {\n            (**(**0x496c6c + 4))(1);\n            *0x496c6c = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00417544(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.00417544(extraout_ECX[0x1d]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar3 = fcn.00406f55();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.00431d9c(extraout_ECX[0x14]);\n    fcn.00431d9c(extraout_ECX[0x15]);\n    fcn.00431d9c(extraout_ECX[0x18]);\n    fcn.00431d9c(extraout_ECX[0x19]);\n    fcn.00431d9c(extraout_ECX[0x1a]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[0xb] = NULL;\n    fcn.00411762();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 767
    },
    "00410c71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410c71(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00436ff6(param_1, param_2, param_3);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "0041172b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041172b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.0040698e();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 199
    },
    "00411851": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411851(int32_t *param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint arg_14h;\n    \n    ppcVar1 = (**(*param_1 + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.00407cf5(ppcVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x00411886:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.00407cf5(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x00411886;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 349
    },
    "00411dd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00411dd9(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.0040aa49(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.0040ad55(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00406f55();\n        iVar1 = fcn.00406a4a();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0040e770(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.0040aa49(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.0040ad55(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0040e770();\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00406f55();\n        iVar3 = fcn.00406a4a();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.004181d2();\n            fcn.00418443(1);\n        }\n    }\n    return unaff_retaddr < 0;\n}\n",
        "token_count": 554
    },
    "00412448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412448(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.0040117c(arg_10h + arg_18h);\n    fcn.00432c1b(arg_8h_00, arg_10h, arg_ch, arg_10h);\n    fcn.00432c1b(arg_8h_00 + arg_10h, arg_18h, arg_14h, arg_18h);\n    fcn.00401181(arg_10h + arg_18h);\n    return;\n}\n",
        "token_count": 166
    },
    "00413077": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413077(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.00432a99(0x3c);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00406f55();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.00406f55();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040d4a2(0x10);\n    fcn.0040d4a2(0x7c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x0041325f;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 == 0) goto code_r0x0041325f;\n    uVar3 = fcn.0040f93d();\n    fcn.004012a8(uVar3);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x18) = 0;\n    iVar4 = fcn.0042019d(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n    bVar5 = iVar4 == 0;\n    if (*0x496e7c == 0) {\ncode_r0x0041315d:\n        if (bVar5) {\ncode_r0x00413161:\n            fcn.0042011d(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.0042007b(*(unaff_EBP + -0x18));\n            uVar3 = fcn.0041fba5();\n            *(unaff_EBP + -0x14) = uVar3;\n            *(unaff_EBP + -4) = 1;\n            fcn.0041fb97();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n    }\n    else {\n        if (bVar5) goto code_r0x00413161;\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        if (iVar4 != 0) {\n            iVar4 = fcn.00413036(iVar2, \"MS Shell Dlg\");\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                if (*(unaff_EBP + -0x18) == 8) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                goto code_r0x0041315d;\n            }\n        }\n    }\n    extraout_ECX[0x11] = -1;\n    extraout_ECX[0xf] = extraout_ECX[0xf] | 0x10;\n    fcn.0040c480(extraout_ECX);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(unaff_EBP + 0xc) + 0x20);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar3, fcn.00412a0f, 0);\n    fcn.0040128a();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(unaff_EBP + -0x28) != NULL) && ((**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48),  iVar2 != 0)) {\n        (**(*extraout_ECX + 300))(0);\n    }\n    iVar4 = fcn.0040a1f1();\n    if (iVar4 == 0) {\n        (**(*extraout_ECX + 0x114))();\n    }\n    if ((iVar2 != 0) && ((*(extraout_ECX + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n    }\ncode_r0x0041325f:\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 1402
    },
    "00413eb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413eb7(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00432e30(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 116
    },
    "00415b14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00415b14(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.00406f55();\n        puVar3 = fcn.00404c3f(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.0040440f();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "0041602e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.0041602e(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint uVar5;\n    uint *puVar6;\n    uint var_4h;\n    \n    fcn.00432a99(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar6 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar6);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00416155;\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.00415c5a(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.00415dd7(ppcVar1);\ncode_r0x00416085:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.00401203(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar2);\n        }\n        else {\n            uVar5 = 2;\n            uVar2 = fcn.00401203(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], uVar2, uVar5);\n        }\n        if (pcVar3 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.004043db();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.00432e30(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00416085;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar6 = *(unaff_EBP + -0x14);\ncode_r0x00416155:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar6);\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 885
    },
    "00416988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00416988(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041679d(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041684b(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00416902();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "00416e1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00416e1e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00416c30(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00416b92(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00416dd0();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 218
    },
    "004171cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004171cb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004171a7(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.0040129e(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 93
    },
    "00417379": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n\nvoid fcn.00417379(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.00432a66(0xc);\n    fcn.00406f55();\n    fcn.00418145(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.004172c6(unaff_EBP + -0x10, 0x47dfbc, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.00406f55();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.004172c6(unaff_EBP + -0x18, 0x47dfbc, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.0040fe9c(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.0040128a();\n    }\n    fcn.00405266();\n    fcn.004181b2(1);\n    fcn.0040128a();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 418
    },
    "0041748c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041748c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x004174b1;\n    do {\n        fcn.0040440f();\ncode_r0x004174b1:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.00432e30(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x00417511;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x00417511:\n    fcn.00432a57(unaff_EBX);\n    return;\n}\n",
        "token_count": 347
    },
    "004175c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004175c9(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        fcn.0040440f();\n    }\n    arg_8h_00 = &var_104h;\n    iVar1 = fcn.00415b14(arg_8h, arg_8h_00, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00437483(&var_104h, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.00432f01(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3, *0x496e44, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        uVar3 = fcn.00433326(arg_ch + 7, 0x20, &var_104h, 0xffffffff);\n        fcn.0040123a(uVar3);\n    }\n    fcn.00432a57(arg_8h_00);\n    return;\n}\n",
        "token_count": 339
    },
    "00417970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00417970(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.004178ee(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0040440f();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "004181b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004181b2(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.0040440f();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x496e88);\n    return;\n}\n",
        "token_count": 77
    },
    "0041854c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041854c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406f55();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 58
    },
    "0041872c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041872c(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00433341(param_1, param_2, param_3, param_4);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "0041983a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041983a(uint param_1)\n\n{\n    fcn.00432e30(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 39
    },
    "00419bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00419bd0(int16_t *vtime, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint wVerMinor;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.0040129e(0x80004005);\n    }\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(vtime, arg_ch);\n    fcn.00432e30(&wVerMinor, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg_ch, &wVerMinor),  iVar1 != 0)) &&\n         (*vtime == wVerMinor)) && ((vtime[1] == wVerMinor._2_2_ && (vtime[3] == var_ah)))) &&\n       ((vtime[4] == var_ah._2_2_ && ((vtime[5] == var_6h && (vtime[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "00419eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419eb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.00432e30(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.00419bd0(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 244
    },
    "00419f73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f73(uint psa, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_4h);\n    fcn.00419276(uVar1);\n    fcn.00404ba5(var_4h, arg_10h, arg_ch, arg_10h);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n    fcn.00419276(uVar1);\n    return;\n}\n",
        "token_count": 145
    },
    "0041a904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a904(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00432a66(0);\n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantInit;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*pcVar1)(arg_8h_00);\n    fcn.00418a98(uVar2);\n    iVar3 = (*pcVar1)(arg_8h_00);\n    if (iVar3 != 0) {\n        iVar3 = (*pcVar1)(arg_8h_00);\n        fcn.00418dd8(arg_8h_00, iVar3 * 2);\n    }\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h_00);\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 274
    },
    "0041a9b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041a9b1(uint32_t *param_1, int32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[2];\n    iVar4 = 2;\n    param_2[1] = 0;\n    *param_2 = 0;\n    param_2[2] = 0;\n    if ((((uVar1 != 2) && (param_3[2] != 2)) && (iVar4 = 1,  uVar1 != 1)) && (param_3[2] != 1)) {\n        uVar3 = param_3[1] + param_1[1] + CARRY4(*param_3, *param_1);\n        uVar1 = param_1[1];\n        *param_2 = *param_3 + *param_1;\n        uVar2 = param_3[1];\n        param_2[1] = uVar3;\n        if (((uVar2 ^ uVar1) & 0x80000000) != 0) {\n            return;\n        }\n        if (((uVar3 ^ uVar1) & 0x80000000) == 0) {\n            return;\n        }\n    }\n    param_2[2] = iVar4;\n    return;\n}\n",
        "token_count": 328
    },
    "0041af02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041af02(int32_t arg_8h, uint pdateOut, uint lcid)\n\n{\n    char cVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uchar *arg_8h_00;\n    int32_t iVar3;\n    ulong *in_ECX;\n    uint unaff_EDI;\n    int32_t noname_1;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    CodePage = (**0x494888)();\n    var_8h = 0;\n    if (arg_8h == 0) {\n        arg_8h = 0x47ca58;\n    }\n    arg_8h_00 = &stack0xffffffdc;\n    noname_1 = arg_8h;\n    var_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_ch = var_ch + 1;\n    iVar2 = fcn.00401235(&var_ch, var_ch, 2);\n    iVar3 = var_ch;\n    if (iVar2 < 0) {\ncode_r0x0041af87:\n        *(in_ECX + 1) = 1;\n        *in_ECX = 0;\n    }\n    else {\n        if ((var_ch < 0x401) && (cVar1 = fcn.00401082(var_ch, noname_1, unaff_EDI),  cVar1 != '\\0')) {\n            fcn.004325d0();\n        }\n        else {\n            arg_8h_00 = fcn.004011ef(iVar3);\n        }\n        iVar3 = fcn.00401258(arg_8h_00, arg_8h, iVar3, CodePage);\n        if (iVar3 == 0) goto code_r0x0041af87;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VarDateFromDisp)(iVar3, lcid, pdateOut);\n        if (-1 < iVar3) {\n            *(in_ECX + 1) = 0;\ncode_r0x0041afe1:\n            fcn.0040124e();\n            goto code_r0x0041af9c;\n        }\n        if (iVar3 == -0x7ffdfffb) goto code_r0x0041af87;\n        *in_ECX = *0x47e068;\n        *(in_ECX + 1) = 1;\n        if (iVar3 != -0x7ffdfff6) goto code_r0x0041afe1;\n    }\n    fcn.0040124e();\ncode_r0x0041af9c:\n    fcn.00432a57(CodePage);\n    return;\n}\n",
        "token_count": 665
    },
    "0041b216": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0041b216(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint16_t *puVar8;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00432b05(0x30);\n    puVar8 = *(unaff_EBP + 0xc);\n    uVar6 = *(unaff_EBP + 8);\n    uVar2 = *puVar8;\n    *(unaff_EBP + -0x28) = uVar6;\n    *(unaff_EBP + -0x30) = puVar8;\n    if (uVar2 != 0) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar8);\n    }\n    fcn.00418b58(puVar8);\n    if ((*puVar8 & 0x6000) != 0) goto code_r0x0041b318;\n    // switch table (22 cases) at 0x41b426\n    switch(*puVar8) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        fcn.00418b58(puVar8 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar8 = puVar8 + 4;\n        goto code_r0x0041b287;\n    case 4:\n        fcn.0041a81b(puVar8 + 4);\n        break;\n    case 5:\n    case 7:\n        fcn.0041a85d(puVar8 + 4);\n        break;\n    case 6:\n        fcn.00418b9b(puVar8 + 4);\n        puVar8 = puVar8 + 6;\ncode_r0x0041b287:\n        fcn.0041a89f(puVar8);\n        break;\n    case 8:\n        fcn.00418b9b(unaff_EBP + -0x28);\n        if (*(unaff_EBP + -0x28) == 0) {\n            *(puVar8 + 4) = 0;\n        }\n        else {\n            iVar7 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, *(unaff_EBP + -0x28));\n            *(puVar8 + 4) = iVar7;\n            if (iVar7 == 0) {\n                iVar7 = fcn.004043db();\n            }\n            fcn.00419e4b(iVar7, *(unaff_EBP + -0x28));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x2c) = 0;\n        fcn.004212aa(uVar6);\n        fcn.00418b9b(unaff_EBP + -0x24);\n        fcn.00418b58(unaff_EBP + -0x20);\n        fcn.00418b58(unaff_EBP + -0x1e);\n        fcn.00419e4b(unaff_EBP + -0x1c, 8);\n        pcVar5 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar6 = 0x485a18;\n        if (*puVar8 != 0xd) {\n            uVar6 = 0x4859a8;\n        }\n        puVar1 = puVar8 + 4;\n        iVar7 = (*_sym.imp.ole32.dll_CoCreateInstance)(unaff_EBP + -0x24, 0, 0x17, uVar6, puVar1);\n        if (iVar7 == -0x7ff8ffa9) {\n            uVar6 = 0x485a18;\n            if (*puVar8 != 0xd) {\n                uVar6 = 0x4859a8;\n            }\n            iVar7 = (*pcVar5)(unaff_EBP + -0x24, 0, 7, uVar6, puVar1);\n        }\n        fcn.00419276(iVar7);\n        puVar3 = *puVar1;\n        ppcVar4 = *puVar3;\n        *(unaff_EBP + -4) = 0;\n        iVar7 = (**ppcVar4)(puVar3, 0x486128, unaff_EBP + -0x2c);\n        if (iVar7 < 0) {\n            iVar7 = (****puVar1)(*puVar1, 0x485b88, unaff_EBP + -0x2c);\n        }\n        fcn.00419276(iVar7);\n        uVar6 = (**(**(unaff_EBP + -0x2c) + 0x14))(*(unaff_EBP + -0x2c), unaff_EBP + -0x38);\n        fcn.00419276(uVar6);\n        iVar7 = **(unaff_EBP + -0x2c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(iVar7 + 8))(*(unaff_EBP + -0x2c));\n        break;\n    case 0x10:\n    case 0x11:\n        fcn.00418ad1(puVar8 + 4);\n        break;\n    case 0x13:\n        fcn.00418b9b(puVar8 + 4);\n        break;\n    case 0x14:\n        fcn.0041a7d3(puVar8 + 4);\n        break;\n    case 0x15:\n        fcn.00418b10(puVar8 + 4);\n    }\ncode_r0x0041b318:\n    fcn.00432b61();\n    return;\n}\n",
        "token_count": 1474
    },
    "0041b7e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b7e1(uint arg_8h, uint pcyOut, uint lcid)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    \n    puVar1 = fcn.00405f44(arg_8h);\n    arg_8h_00 = (*_sym.imp.OLEAUT32.dll_VarCyFromDisp)(*puVar1, lcid, pcyOut);\n    fcn.0040128a();\n    uVar2 = 0;\n    if (arg_8h_00 < 0) {\n        if (arg_8h_00 == -0x7ffdfffb) {\n            in_ECX[1] = 0;\n        }\n        else {\n            if (arg_8h_00 != -0x7ffdfff6) {\n                if (arg_8h_00 == -0x7ff8fff2) {\n                    fcn.004043db();\n                }\n                uVar2 = fcn.00404d82(arg_8h_00);\n                goto code_r0x0041b852;\n            }\n            in_ECX[1] = 0x80000000;\n        }\n        *in_ECX = 0;\n        in_ECX[2] = 1;\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0041b852:\n        in_ECX[2] = uVar2;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 346
    },
    "0041c0a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c0a2(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00437a7e(param_1, param_2, param_3);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 75
    },
    "0041c4a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041c4a6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_14h;\n    int32_t arg_ch_00;\n    uint arg_10h_00;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    piVar1 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 0;\n    uVar2 = fcn.0041240b();\n    fcn.004012a8(uVar2);\n    arg_14h = **(unaff_EBP + 0x10);\n    uVar2 = *(arg_14h + -0xc);\n    arg_ch_00 = *piVar1;\n    arg_10h_00 = *(arg_ch_00 + -0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    fcn.00412448(*(unaff_EBP + 8), arg_ch_00, arg_10h_00, arg_14h, uVar2);\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 352
    },
    "0041ca59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041ca59(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 0x16) {\n        iVar1 = param_1 + 0x40000;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 74
    },
    "0041d232": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n\nvoid __cdecl fcn.0041d232(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint phkResult;\n    uint lpName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.00436b7c(arg_8h);\n    if (arg_8h_00 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h_00);\n        puVar2 = iVar1 + arg_8h_00;\n        while (puVar2 != NULL) {\n            *puVar2 = 0;\n            fcn.00437f18(arg_8h_00, puVar2);\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, arg_8h_00, &phkResult);\n            if (iVar1 != 0) break;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(phkResult, 0, &lpName, 0x105);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if (iVar1 == 0) break;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000000, arg_8h_00);\n            puVar2 = fcn.00437e6e(arg_8h_00, 0x5c);\n        }\n        fcn.00431d9c(arg_8h_00);\n    }\n    fcn.00432a57(phkResult);\n    return;\n}\n",
        "token_count": 410
    },
    "0041d7bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041d7bd(int32_t *param_1, uchar param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.00437483(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 120
    },
    "0041d981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d981(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (arg_ch < iVar2) {\n        uVar3 = fcn.0041240b();\n        fcn.004171f0((iVar1 - arg_ch) + iVar2, arg_ch, uVar3);\n    }\n    else {\n        fcn.004068e4();\n    }\n    return arg_8h;\n}\n",
        "token_count": 174
    },
    "0041f21b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f21b(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040117c(0x104);\n    fcn.00432e30(uVar1, 0, 0x104);\n    fcn.0040445d(uVar1, 0x104, unaff_retaddr, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.0040a042(0xffffffff);\n    return;\n}\n",
        "token_count": 126
    },
    "0041f7df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f7df(uint arg_8h, uint *arg_ch)\n\n{\n    uint unaff_ESI;\n    uint var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.00433e8b(&var_104h, 0x100, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), \n                 *(arg_ch + 6), *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), \n                 *(arg_ch + 0xd), *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.00405ab5(&var_104h);\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 243
    },
    "0041f8e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041f8e3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    uVar2 = *(unaff_EBP + 8);\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.0041f7df(unaff_EBP + -0x10, uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0040f93d();\n    fcn.004012a8(uVar2);\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.0041f16b(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 == 0) {\n        fcn.0040128a();\n        fcn.0040128a();\n    }\n    else {\n        iVar3 = fcn.00408759(*(unaff_EBP + 0x10));\n        if ((iVar3 != 0) &&\n           (pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"DllGetClassObject\"),  pcVar4 != NULL)) {\n            (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n        }\n        fcn.0040128a();\n        fcn.0040128a();\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 436
    },
    "0041fbdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fbdc(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 251
    },
    "0042089d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042089d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 207
    },
    "004208e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004208e9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0042089d(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.0042089d(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.0042089d(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.0042089d(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 200
    },
    "00420a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420a54(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint var_40h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    fcn.00432e30(&var_40h, 0, 0x3c);\n    var_40h = arg_8h;\n    var_29h._0_1_ = 1;\n    uVar1 = fcn.00433326(&var_24h, 0x20, arg_ch, 0xffffffff);\n    fcn.0040123a(uVar1);\n    fcn.00420953(&var_40h, arg_10h);\n    fcn.00432a57(unaff_ESI);\n    return;\n}\n",
        "token_count": 226
    },
    "00420b8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420b8e(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 50
    },
    "00420bdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420bdf(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 49
    },
    "004219d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.004219d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_50h;\n    uint var_4h;\n    \n    fcn.00432acf(0x8c);\n    uVar5 = *(unaff_EBP + 0x1c);\n    iVar1 = **(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        puVar3 = fcn.00433586();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00433586();\n        *puVar3 = 0;\n        fcn.00433ec4(unaff_EBP + -0x90, 0x40, 0x3f, uVar5, *(unaff_EBP + 0xc));\n        piVar4 = fcn.00433586();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00433586();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.00433586();\n            fcn.004051a6(*puVar3);\n        }\n        puVar3 = fcn.00433586();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00433586();\n        *puVar3 = 0;\n        fcn.00433ec4(unaff_EBP + -0x50, 0x40, 0x3f, uVar5, *(unaff_EBP + 0x14));\n        piVar4 = fcn.00433586();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00433586();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.00433586();\n            fcn.004051a6(*puVar3);\n        }\n        uVar5 = fcn.0040f93d();\n        fcn.004012a8(uVar5);\n        *(unaff_EBP + -4) = 0;\n        fcn.0042221e(unaff_EBP + -0x94, *(unaff_EBP + 0x20), unaff_EBP + -0x90, unaff_EBP + -0x50);\n        fcn.0041052b(*(unaff_EBP + -0x94), 0x30, *(unaff_EBP + 0x20));\n        fcn.00405266();\n        fcn.004212fb();\n        fcn.0040128a();\n    }\n    fcn.00432b52();\n    return;\n}\n",
        "token_count": 715
    },
    "004221b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004221b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    uVar1 = fcn.0040f93d();\n    fcn.004012a8(uVar1);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00405549(*(unaff_EBP + 0xc));\n    if (iVar2 != 0) {\n        fcn.0042206e(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.0040128a();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 259
    },
    "004224da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004224da(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x4226e6\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x0042260e;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x0042260e;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x0042260e;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x0042260e:\n                return 5;\n            case 0xb:\ncode_r0x0042260e:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x0042260e:\n                return 10;\n            default:\n                goto code_r0x0042260e;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x42274a\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x0042260e;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x0042260e;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x0042260e;\n            case 0x3c:\n                goto code_r0x0042260e;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00422555:\n        if (iVar1 == 1) {\ncode_r0x0042260e:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x0042260e:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00422555;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x0042260e:\n            return 3;\n        }\n    }\ncode_r0x0042260e:\n    return 1;\n}\n",
        "token_count": 1730
    },
    "00422cfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422cfd(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00433816(param_1, param_2, param_3, param_4);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "00422d47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422d47(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x00422d5a;\n    do {\n        fcn.0040440f();\n        iVar4 = unaff_EDI;\ncode_r0x00422d5a:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.004042e5(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.004042ba(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.00432e30(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x00422e76;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00432e30(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00422e76;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.004042ba(arg_8h << 2, iVar4);\n    fcn.00404ba5(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00432e30(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004042e5(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00422e76:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 827
    },
    "004230d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004230d2(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040698e();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 127
    },
    "00424c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424c5c(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h == 0) || ((*(in_ECX + 0xf) & 4) == 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar4 = fcn.0040a149(uVar3);\n        if (iVar4 != 0) {\n            arg_8h = 0;\n            (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(*(iVar4 + 0x20), &arg_8h);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            if (iVar4 == arg_8h) {\n                return;\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (iVar2 == 0) {\n            if (in_ECX[0x2e] == 0) {\n                in_ECX[0xf] = in_ECX[0xf] | 0x80;\n                (**(*in_ECX + 0xf8))();\n            }\n        }\n        else {\n            if (in_ECX[0xf] < '\\0') {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffff7f;\n                (**(*in_ECX + 0xfc))();\n                arg_8h = in_ECX[8];\n                iVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n                if (iVar4 == arg_8h) {\n                    (*pcVar1)(arg_8h, 6, 1, 0);\n                }\n            }\n            if ((*(in_ECX + 0xf) & 0x20) != 0) {\n                (*pcVar1)(in_ECX[8], 0x86, 1, 0);\n            }\n        }\n        fcn.004233ab((-(iVar2 != 0) & 0xfffffff0) + 0x20);\n    }\n    else {\n        fcn.0040e7ac(0);\n        (*_sym.imp.USER32.dll_SetFocus)(0);\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "00424e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e50(uint param_1)\n\n{\n    fcn.00406f55();\n    fcn.00406a4a();\n    fcn.00415dd7(param_1);\n    return;\n}\n",
        "token_count": 52
    },
    "00424e6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e6d(uint param_1)\n\n{\n    fcn.00406f55();\n    fcn.00406a4a();\n    fcn.00415df0(param_1);\n    return;\n}\n",
        "token_count": 53
    },
    "00425b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425b6e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00432acf(0x28);\n    iVar1 = *(unaff_EBP + 8);\n    uVar2 = fcn.0040f93d();\n    fcn.004012a8(uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0040e62b();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.0041da75(extraout_ECX + 0xc4);\n        if (iVar1 != 0) {\n            fcn.0040105a(0x47edb0);\n            fcn.0040105a(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.00433e8b(unaff_EBP + -0x30, 0x20, 0x47edb4, *(extraout_ECX + 0x58));\n                fcn.0040105a(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            fcn.0040105a(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.00433e8b(unaff_EBP + -0x30, 0x20, 0x47edb4, *(extraout_ECX + 0x58));\n                fcn.0040105a(unaff_EBP + -0x30);\n            }\n            fcn.0040105a(0x47edb0);\n        }\n        fcn.0041da75(extraout_ECX + 0xc4);\n    }\n    fcn.0041748c(*(extraout_ECX + 0x20), *(unaff_EBP + -0x34));\n    fcn.0040128a();\n    fcn.00432b52();\n    return;\n}\n",
        "token_count": 524
    },
    "00425ceb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00425ceb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00438012(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 142
    },
    "00425d19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425d19(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00438233(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    fcn.0040123a(uVar1);\n    return;\n}\n",
        "token_count": 108
    },
    "00426ba3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00426ba3(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00426b5d(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x14) + 0x76c;\n    }\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "00426bc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00426bc3(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00426b5d(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x10) + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 94
    },
    "00426bdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00426bdf(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00426b5d(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(iVar1 + 0xc);\n    }\n    return uVar2;\n}\n",
        "token_count": 96
    },
    "00426bfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00426bfa(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00426b5d(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 96
    },
    "00426c16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00426c16(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00426b5d(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 96
    },
    "00426c32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00426c32(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    puVar1 = fcn.00426b5d(auStack36);\n    if (puVar1 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "004278d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004278d5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x004278eb;\n    do {\n        fcn.0040440f();\ncode_r0x004278eb:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004042e5(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x004279ef;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004042ba(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00432e30(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00427957:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00432e30(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00427957;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00427989:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00427989;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004042ba(arg_8h << 2);\n    fcn.00404ba5(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00432e30(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004042e5(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004279ef:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 768
    },
    "00427ae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427ae4(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.004278d5(iVar1 + arg_10h, 0xffffffff);\n            fcn.0041872c(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00432e30(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.004278d5(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0040440f();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 390
    },
    "00428106": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428106(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    \n    fcn.00432e30(&var_34h, 0, 0x34);\n    var_2ch = arg_ch;\n    var_1ch = arg_14h;\n    var_20h = arg_10h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x102d, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 166
    },
    "0042814b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042814b(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_14h;\n    \n    fcn.00432e30(&var_34h, 0, 0x34);\n    var_30h = arg_8h;\n    var_34h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1005, 0, &var_34h);\n    return var_14h;\n}\n",
        "token_count": 135
    },
    "0042a516": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a516(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 107
    },
    "0042a766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a766(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    (**(*in_ECX + 0x140))(&var_10h, in_ECX[0x20] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 189
    },
    "0042a7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0042a7f0(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004272df(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 59
    },
    "0042aa95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042aa95(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 4;\n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x28];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar4 = iVar3;\n            iVar2 = fcn.0042a7f0();\n            if ((iVar2 != 0) && (*(iVar2 + 0x8c) == extraout_ECX)) {\n                *(iVar2 + 0x8c) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x28]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0042de7c(iVar4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042eba2();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 329
    },
    "0042bab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bab4(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.00432e30(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x0042bbe1;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.0040e62b();\n                    if (((uVar2 & 0x800) == 0) && (*0x4932f4 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = var_20h;\n                    var_20h = var_20h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x0042bbe1;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1d] = iVar1;\n    in_ECX[0x28] = 1;\ncode_r0x0042bbe1:\n    fcn.00432a57(unaff_EDI);\n    return;\n}\n",
        "token_count": 740
    },
    "0042bd9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bd9e(uint arg_8h, uint arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    for (arg_10h = arg_10h + -1; -1 < arg_10h; arg_10h = arg_10h + -1) {\n        (*arg_14h)();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0042d843": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d843(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.0040440f();\n    }\n    arg_ch[1] = arg_ch[1] | 0x70;\n    *arg_ch = 0x50;\n    arg_ch[8] = *(arg_8h + 0x20);\n    piVar1 = fcn.00415a7d(0x47e71c, arg_8h);\n    if (piVar1 == NULL) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_8h + 0x20), &lpRect);\n        var_8h = var_8h - lpRect;\n        var_4h = var_4h - var_ch;\n    }\n    else {\n        piVar1 = (**(*piVar1 + 0x134))(&var_8h, 0, in_ECX[0x20] & 0xa000);\n        var_8h = *piVar1;\n        var_4h = piVar1[1];\n    }\n    arg_ch[10] = var_4h;\n    if (*0x4932f4 < 0x40048) {\n        iVar2 = 4;\n    }\n    else {\n        iVar2 = 0;\n    }\n    iVar2 = iVar2 + var_8h;\n    arg_ch[0x11] = iVar2;\n    arg_ch[0xb] = iVar2;\n    if ((arg_ch[2] & 0x200) == 0) {\n        arg_ch[9] = iVar2;\n    }\n    else {\n        arg_ch[1] = arg_ch[1] | 0x200;\n        arg_ch[9] = var_4h;\n    }\n    iVar2 = (**(*in_ECX + 0x110))(0x401, 0xffffffff, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        piVar1 = fcn.0040acd7();\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x148))(1);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x41f, 0, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 604
    },
    "0042dbe9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dbe9(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.0042ea5d(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 191
    },
    "0042de8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042de8c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x0042dea2;\n    do {\n        fcn.0040440f();\ncode_r0x0042dea2:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004042e5(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0042dfa6;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004042ba(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00432e30(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0042df0e:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00432e30(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0042df0e;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0042df40:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0042df40;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004042ba(arg_8h << 2);\n    fcn.00404ba5(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00432e30(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004042e5(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0042dfa6:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 779
    },
    "0042e09b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e09b(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0042de8c(iVar1 + arg_10h, 0xffffffff);\n            fcn.0041872c(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00432e30(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0042de8c(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0040440f();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 393
    },
    "0042e13f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e13f(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_2 + param_3;\n    if ((((-1 < param_2) && (-1 < param_3)) && (iVar1 <= *(param_1 + 8))) && ((param_2 <= iVar1 && (param_3 <= iVar1))))\n    {\n        iVar3 = *(param_1 + 8) - iVar1;\n        if (iVar3 != 0) {\n            iVar3 = iVar3 * 4;\n            fcn.0041872c(*(param_1 + 4) + param_2 * 4, iVar3, *(param_1 + 4) + iVar1 * 4, iVar3);\n        }\n        *(param_1 + 8) = *(param_1 + 8) - param_3;\n        return;\n    }\n    fcn.0040440f();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 259
    },
    "0042fce1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fce1(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x84);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x80) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.0040a149(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x20));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x20), 0, uVar3);\n            uVar3 = fcn.0041458a(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x42fd19;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "00430123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430123(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.0042fda0(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar3 = fcn.0040a149(uVar2);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar3 + 0x20), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00430e6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00430e6f(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    fcn.00432e30(&var_3ch, 0, 0x3c);\n    var_30h = 0x28;\n    if (arg_8h == 0) {\n        var_3ch = 0;\n    }\n    else {\n        var_3ch = *(arg_8h + 0x20);\n    }\n    var_38h = arg_ch;\n    var_34h = arg_10h;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40a, 0, &var_3ch);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00432c1b(arg_14h, 0x30, &var_30h, 0x28);\n        fcn.0040123a(uVar2);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 293
    },
    "00430eea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430eea(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.00432e30(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x20);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "004315b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004315b3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_40h;\n    int32_t var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4933e0 ^ &stack0xfffffffc;\n    var_10h = arg_8h;\n    fcn.00430eea(&var_40h, arg_ch, arg_10h);\n    var_ch = *0x4816a0;\n    uStack12 = *0x4816a4;\n    var_1ch = fcn.0040117c(0x405);\n    fcn.00432e30(var_1ch, 0, 0x400);\n    uVar1 = fcn.00432c1b(var_1ch + 0x400, 5, &var_ch, 5);\n    fcn.0040123a(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40b, 0, &var_40h);\n    iVar2 = fcn.004354fc(&var_ch, var_1ch + 0x400, 5);\n    if (iVar2 != 0) {\n        fcn.004043db();\n    }\n    uVar1 = 0xffffffff;\n    fcn.0040a042();\n    fcn.00432a57(uVar1);\n    return;\n}\n",
        "token_count": 372
    },
    "00431814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431814(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar3 = 0;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x00431828;\n    while( true ) {\n        fcn.0040440f();\n        puVar4 = unaff_ESI;\ncode_r0x00431828:\n        if (arg_ch != iVar3) break;\n        unaff_ESI = 0x4816a8;\n        do {\n            arg_8h_00 = *unaff_ESI;\n            iVar2 = fcn.00424093(arg_8h_00);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20), 0xffffffff, arg_8h_00, puVar4);\n                iVar2 = fcn.0042a7b3(uVar1);\n                if (0 < iVar2) goto code_r0x00431894;\n            }\n            if (((unaff_ESI[1] ^ *(arg_8h + 0x80)) & 0xf000) == 0) {\n                iVar3 = fcn.00424093(*unaff_ESI);\n            }\n            unaff_ESI = unaff_ESI + 2;\n        } while (unaff_ESI < 0x4816c8);\n        if (iVar3 != 0) break;\n    }\ncode_r0x00431894:\n    fcn.0042b580(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 426
    },
    "00432cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00432cb0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x00432d03;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x00432d15;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x00432d15;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x00432d15;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x00432d03:\n    puVar5 = puVar3 + -1;\ncode_r0x00432d15:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00432d90;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x00432d90:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 752
    },
    "004334e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004334e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0043ea3e(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 77
    },
    "004339b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004339b1(uint param_1, uint param_2)\n\n{\n    fcn.0043395c(fcn.0044033d, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 51
    },
    "00433b06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433b06(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00433a15(fcn.0044033d, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "00433d19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433d19(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00433a15(0x440eaf, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "00433f1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433f1f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00433d19(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 77
    },
    "00436c75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00436c75(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4970b8 != 0)) {\n        *param_1 = *0x4970b8;\n        return 0;\n    }\n    puVar1 = fcn.00433586();\n    *puVar1 = 0x16;\n    fcn.0043a2a8(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 125
    },
    "00436d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00436d24(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4970b8 != 0)) {\n        *param_1 = *0x4970c4;\n        return 0;\n    }\n    puVar1 = fcn.00433586();\n    *puVar1 = 0x16;\n    fcn.0043a2a8(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 123
    },
    "00437103": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437103(uint param_1, uint param_2)\n\n{\n    fcn.0043705b(0x443fc3, param_2, 0, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 54
    },
    "004378b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004378b6(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "00437fad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437fad(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00437f2b(0x4432c2, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "00437fcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437fcf(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00437f2b(0x443fc3, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 60
    },
    "00437ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437ff0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00437f2b(0x443fc3, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "0043d370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d370(void)\n\n{\n    code **ppcVar1;\n    \n    ppcVar1 = 0x48bbac;\n    do {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n        ppcVar1 = ppcVar1 + 1;\n    } while (ppcVar1 < 0x48bcac);\n    return;\n}\n",
        "token_count": 91
    },
    "0043e828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043e828(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043e70b(fcn.0043dc8b, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 119
    },
    "0043ea3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ea3e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043e70b(0x44d8ca, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 119
    },
    "00445c7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00445c7d(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00433586();\n        *puVar1 = 0x16;\n        fcn.0043a2a8(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x493ec4;\n    return 0;\n}\n",
        "token_count": 111
    },
    "00445cb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00445cb1(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00433586();\n        *puVar1 = 0x16;\n        fcn.0043a2a8(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x493ec8;\n    return 0;\n}\n",
        "token_count": 110
    },
    "00445ce5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00445ce5(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00433586();\n        *puVar1 = 0x16;\n        fcn.0043a2a8(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x493ec0;\n    return 0;\n}\n",
        "token_count": 110
    },
    "0044c0a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044c0a6(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *param_1 = vtable.std::exception.0;\n    pcVar3 = *(param_2 + 8);\n    param_1[2] = pcVar3;\n    pcVar1 = *(param_2 + 4);\n    if (pcVar3 == NULL) {\n        param_1[1] = pcVar1;\n    }\n    else if (pcVar1 == NULL) {\n        param_1[1] = NULL;\n    }\n    else {\n        iVar2 = fcn.00432b90(pcVar1);\n        pcVar3 = fcn.00431cd9(iVar2 + 1);\n        param_1[1] = pcVar3;\n        if (pcVar3 != NULL) {\n            fcn.00436ff6(pcVar3, iVar2 + 1, *(param_2 + 4));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 246
    },
    "0044d294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d294(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044cdf5();\n    fcn.0044cf4d(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "00454626": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00454626(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x490750, 0x10);\n    iVar1 = fcn.0044cdf5();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.00433586();\n        *puVar2 = 0x16;\n        fcn.0043a2a8(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.0044cecc(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar3 = fcn.00454561(iVar1);\n        uVar4 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar4;\n        fcn.004545f7(uVar3, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004546ae();\n    }\n    fcn.00433d89();\n    return;\n}\n",
        "token_count": 430
    },
    "0045b43c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045b43c(uint param_1)\n\n{\n    fcn.00432e30(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 45
    },
    "0045b54e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0045b54e(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((param_2 < 0) || (iVar1 = param_1[1],  iVar1 <= param_2)) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 != iVar1 + -1) {\n            iVar2 = (iVar1 - param_2) * 4;\n            iVar1 = *param_1 + param_2 * 4;\n            fcn.0041872c(iVar1, iVar2, iVar1 + 4, iVar2 + -4);\n        }\n        param_1[1] = param_1[1] + -1;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 203
    },
    "0045b78f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0045b78f(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (param_1[1] == param_1[2]) {\n        if (param_1[2] == 0) {\n            uVar3 = 1;\ncode_r0x0045b7b5:\n            iVar1 = fcn.0043220e(*param_1, uVar3, 4);\n            if (iVar1 != 0) {\n                param_1[2] = uVar3;\n                *param_1 = iVar1;\n                goto code_r0x0045b7cb;\n            }\n        }\n        else {\n            uVar3 = param_1[1] * 2;\n            if ((-1 < uVar3) && (uVar3 < 0x20000000)) goto code_r0x0045b7b5;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0045b7cb:\n        fcn.0045b5b8(param_1[1], param_2);\n        param_1[1] = param_1[1] + 1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 302
    },
    "004326c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004326c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0043b965(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004010d2": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.004010d2(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 34
    },
    "00414fd7": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_52h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.00414fd7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(0x58);\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.00414e69(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.00414e69(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    var_18h = (*pcVar1)(0);\n    iVar3 = fcn.00414598(var_18h);\n    if (iVar3 != 0) {\n        var_18h = (*pcVar1)(0);\n        iVar3 = fcn.00414598(var_18h);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.004148b2();\n            var_18h = *(unaff_EBP + -0x60);\n            iVar4 = fcn.00414956(var_18h, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                var_18h = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.0041485f();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.004149bb(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    var_18h = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.004149bb(var_18h, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.004135dd(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.004135dd(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.004149bb(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.0042089d(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.004135dd(0xffffff);\n                            uVar2 = fcn.00414a54(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.00414a54(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.00414a54(*(unaff_EBP + 0xc));\n                            fcn.004135dd(*(unaff_EBP + -0x10));\n                        }\n                        fcn.004149bb(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        var_18h = *(unaff_EBP + -0x38);\n                        fcn.004149bb(var_18h, *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.004148b2(var_18h);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 0;\n    fcn.00414612();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00414612();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 2126
    },
    "00415481": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: hDC\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hbr\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n\nvoid __cdecl fcn.00415481(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(0x6c);\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.00414598(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.00414598(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.00414598(uVar2);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78),  iVar3 != 0)\n               ) {\n                fcn.004148b2();\n                iVar3 = fcn.00414956(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                     *(unaff_EBP + -0x66), 0);\n                pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                if (iVar3 != 0) {\n                    uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x47dd54);\n                    fcn.0041485f(uVar2);\n                    fcn.0041491d(unaff_EBP + -0x18);\n                    fcn.004148b2();\n                    (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                    fcn.0041485f();\n                    uVar2 = fcn.004149bb(*(unaff_EBP + -0x3c));\n                    *(unaff_EBP + 8) = uVar2;\n                    iVar3 = fcn.004149bb(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                    *(unaff_EBP + -0x10) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                        fcn.004135dd(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        (*_sym.imp.GDI32.dll_BitBlt)\n                                  (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                   *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                        fcn.004135dd(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                  *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                        fcn.004135dd();\n                        iVar3 = fcn.004149bb();\n                        *(unaff_EBP + 0xc) = iVar3;\n                        if (iVar3 != 0) {\n                            uVar2 = fcn.004136c4();\n                            uVar4 = fcn.004135dd();\n                            *(unaff_EBP + 0x14) = uVar4;\n                            *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                            *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                            *(unaff_EBP + -0x60) = 0;\n                            *(unaff_EBP + -0x5c) = 0;\n                            (*_sym.imp.USER32.dll_FillRect)(*(unaff_EBP + -0x2c), unaff_EBP + -0x60);\n                            fcn.004136c4(uVar2);\n                            fcn.004135dd(*(unaff_EBP + 0x14));\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                        }\n                        fcn.004149bb();\n                        fcn.004149bb(*(unaff_EBP + -0x4c));\n                        fcn.004149bb(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    fcn.004148b2();\n    *(unaff_EBP + -4) = 1;\n    fcn.00414612();\n    *(unaff_EBP + -4) = 0;\n    fcn.00414612();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00414612();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 2390
    },
    "00418fdc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418fdc(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    fcn.00418a5e(*(param_1 + 2), uVar1 & 0xffff);\n    fcn.00418a5e();\n    fcn.00418dd8(*param_1, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 107
    },
    "00421aea": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421aea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.004219d0(arg_8h, arg_10h, 0, arg_14h, 0, \"%I64u\", 0xf112);\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00426a95": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426a95(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.00426a02(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0040111d": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040111d(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(uVar1 + arg_ch) = *(uVar1 + arg_ch) ^ *(arg_8h + (uVar1 % arg_14h) * 2);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004043b2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043b2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.00415b14(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0040bd91": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040bd91(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.0041854c();\n    return param_1;\n}\n",
        "token_count": 145
    },
    "0040dfea": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040dfea(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "0040e0ef": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e0ef(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00406f55();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 151
    },
    "0041142a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0041142a(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.004010c8();\n    fcn.004010c8();\n    fcn.004010c8();\n    fcn.004010c8();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 119
    },
    "00414749": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414749(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.00414598(uVar2);\n    if (iVar3 == 0) {\n        fcn.00413bbb();\n    }\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 291
    },
    "00416bec": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416bec(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.004042e5(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00420aeb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "00416d97": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416d97(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "00416e95": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416e95(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00420aeb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "00416faf": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416faf(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "00422eb0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422eb0(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00420aeb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 143
    },
    "0042479a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042479a(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CList_struct_HWND_____struct_HWND____.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 112
    },
    "004308c1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004308c1(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "0043096a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043096a(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00430840(param_2);\n    *param_3 = uVar1;\n    uVar1 = uVar1 % *(param_1 + 8);\n    *param_2 = uVar1;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (iVar2 = fcn.00413036(unaff_retaddr),  iVar2 == 0)) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 230
    },
    "00430a1b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430a1b(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar2 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3 == 0xfffffff8) {\n                        uStack20 = 0;\n                        uStack24 = 0x492448;\n                        fcn.004332dc(&stack0xffffffe8, 0x48c270);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x430a44;\n                    fcn.004308ef();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1 + 8));\n        }\n        uStack20 = *(param_1 + 4);\n        uStack24 = 0x430a58;\n        fcn.004042e5();\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    uStack20 = 0x430a6a;\n    fcn.00420aeb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 382
    },
    "0040f319": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f319(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 381
    },
    "0040f3aa": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f3aa(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040f319();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 166
    },
    "004124f3": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid fcn.004124f3(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t iStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint uStack272;\n    uint in_stack_fffffef4;\n    \n    uStack272 = 0x18;\n    fcn.00432a99();\n    puStack280 = *param_2;\n    uStack284 = param_1;\n    iStack288 = 0x412537;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)();\n    if (iVar1 == 0) {\n        do {\n            iStack288 = 0x104;\n            uStack296 = 0;\n            puStack292 = &stack0xfffffef0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(0);\n            if (iVar1 != 0) break;\n            puStack280 = 0x41256a;\n            fcn.00405ab5(&stack0xfffffef0);\n            puStack280 = &stack0xfffffedc;\n            uStack284 = 0;\n            iStack288 = 0x41257a;\n            iVar1 = fcn.004124f3();\n            iStack288 = 0x412590;\n            fcn.0040128a();\n        } while (iVar1 == 0);\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            iStack288 = *param_2;\n            puStack292 = 0x412555;\n            uStack296 = 0x4125d0;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n        }\n        iStack288 = uStack296;\n        puStack292 = 0x4125db;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    *in_FS_OFFSET = uStack284;\n    uStack272 = 0x4125f8;\n    fcn.00432a57(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 483
    },
    "0041f16b": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041f16b(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpType;\n    uint lpData;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    var_8h = 0;\n    lpData = fcn.0040117c(0x104);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    lpcbData = 0x104;\n    lpType = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x47ca58, 0, &lpType, lpData, &lpcbData);\n                bVar4 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    fcn.0040a042(0xffffffff);\n    return bVar4;\n}\n",
        "token_count": 401
    },
    "0043026c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043026c(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.00430123();\n    (**(**(param_1 + 0x68) + 0x138))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.00431960(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 176
    },
    "00406dc7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406dc7(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00432a99(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.004010c8();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.0040117c(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.004042ba(8);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.00415c5a(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00406ae0();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.00415c5a(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00406d24();\n    }\n    *(extraout_ECX[0x1e] + 4) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 733
    },
    "00411469": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411469(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.0040128a();\n    fcn.0040128a();\n    fcn.0040128a();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00411a25": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00411a25(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.0040698e();\n        iVar2 = fcn.00411959(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "004181db": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004181db(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.00420b01(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00416d97(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00416d97(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00418230;\n    do {\n        iVar2 = fcn.0040440f();\ncode_r0x00418230:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.00416b92(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 459
    },
    "004593be": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004593be(void)\n\n{\n    *0x4945ac = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "00401087": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00401087(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = fcn.004010d2();\n    piVar1 = *(*(iVar2 + 0xc) + 0xc);\n    piVar3 = piVar1;\n    do {\n        iVar2 = fcn.004010f5(piVar3[0xc], param_1);\n        if (iVar2 == 0) {\n            return piVar3[6];\n        }\n        piVar3 = *piVar3;\n    } while (piVar3 != piVar1);\n    return 0;\n}\n",
        "token_count": 155
    },
    "004042ba": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004042ba(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00431cd9(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x49219c == NULL) break;\n        iVar1 = (**0x49219c)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "004051a6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004051a6(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    if (param_1 == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (param_1 == 0x16) goto code_r0x004051cc;\n        if (param_1 == 0x22) goto code_r0x004051cc;\n        if (param_1 == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.0040129e(uVar1);\ncode_r0x004051cc:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 186
    },
    "0040896c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040896c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x0040898b;\n    if (*param_1 == 0x7fffffff) goto code_r0x00408989;\n    if (*param_1 == param_2) goto code_r0x00408989;\n    do {\n        iVar1 = fcn.0040440f();\n        param_1 = extraout_ECX;\ncode_r0x00408989:\n        *param_1 = param_2;\ncode_r0x0040898b:\n    } while (*param_1 == iVar1);\n    fcn.00418145(*param_1);\n    return;\n}\n",
        "token_count": 200
    },
    "00408bee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408bee(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.0040440f();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040882d(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x00408c50;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x00408c50:\n                    iVar1 = fcn.00417970(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.00408bee(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "0040a464": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a464(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x20),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.0040a149(iVar5);\n    return uVar4;\n}\n",
        "token_count": 235
    },
    "0040a4c6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4c6(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0040a4c6(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0040a149();\n            return;\n        }\n        iVar2 = fcn.0040a170(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0040a4c6(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0040a687": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040a687(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0040a170(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 186
    },
    "0040a853": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a853(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.0040a0a5();\n    return;\n}\n",
        "token_count": 129
    },
    "0040acd7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040acd7(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0040a149(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[8];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 194
    },
    "0040aec9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040aec9(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = 0;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindow)(*(param_1 + 0x20), 5);\n    iVar3 = fcn.0040a149(uVar2);\n    while (iVar3 != 0) {\n        uVar2 = (*pcVar1)(*(iVar3 + 0x20), 2);\n        iVar3 = fcn.0040a149(uVar2);\n        iVar4 = iVar4 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 178
    },
    "0040baa2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040baa2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0040ba5d(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040a149(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "00410325": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00410325(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00410354;\n    iVar3 = fcn.004102e5();\n    if ((iVar3 == 0) && (iVar3 = fcn.004087f0(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00410354:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 481
    },
    "004105e5": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004105e5(uint *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    *param_1 = param_2;\n    param_1[1] = 0;\n    if (*0x496c84 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x00410618;\ncode_r0x00410613:\n        do {\n            fcn.0040440f();\ncode_r0x00410618:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            *0x496c74 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\", unaff_ESI);\n            *0x496c78 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x496c7c = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x496c80 = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            if (*0x496c74 == 0) {\n                if ((*0x496c78 != 0) || (*0x496c7c != 0)) goto code_r0x00410613;\n            }\n            else if ((*0x496c78 == 0) || (*0x496c7c == 0)) goto code_r0x00410613;\n        } while (*0x496c80 != 0);\n        *0x496c84 = '\\x01';\n    }\n    return param_1;\n}\n",
        "token_count": 376
    },
    "00415a65": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00415a65(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    \n    if (param_1 != NULL) goto code_r0x00415a6e;\n    do {\n        fcn.0040440f();\n        param_1 = extraout_ECX;\ncode_r0x00415a6e:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x00415a3b;\n    do {\n        iVar1 = fcn.0040440f();\ncode_r0x00415a3b:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 220
    },
    "00415df0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00415df0(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *param_1;\n    if (iVar5 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (iVar5 == param_2) {\n            piVar2 = fcn.00415dba(param_2);\n            *param_1 = *piVar2;\n        }\n        else {\n            do {\n                piVar2 = fcn.00415dba(iVar5);\n                if (*piVar2 == param_2) break;\n                piVar2 = fcn.00415dba();\n                iVar5 = *piVar2;\n            } while (iVar5 != 0);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar3 = fcn.00415dba(param_2);\n            puVar4 = fcn.00415dba(iVar5);\n            *puVar4 = *puVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "00415fcb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415fcb(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "00416c30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00416c30(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "00416c68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00416c68(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.0040440f();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00416ccf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00416ccf(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.00416c17(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 219
    },
    "00416f8a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416f8a(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00416fa0;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x00416fa0:\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041770a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041770a(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "004202df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004202df(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1 != 0) goto code_r0x004202ee;\n    do {\n        fcn.0040440f();\ncode_r0x004202ee:\n    } while ((*(param_1 + 4) == 0) || (param_2 == 0));\n    (*_sym.imp.GDI32.dll_SetBkColor)(*(param_1 + 4), param_3);\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(param_1 + 4), 0, 0, 2, unaff_ESI, 0, 0, 0);\n    return;\n}\n",
        "token_count": 179
    },
    "00420aeb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420aeb(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.004042e5(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00421006": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421006(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00421031;\n    }\n    arg_10h = fcn.0040440f();\n    arg_8h = unaff_EBX;\ncode_r0x00421031:\n    fcn.00420f36(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00420ce5(iVar1);\n            fcn.00420d01();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "004213ad": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004213ad(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_8h;\n    fcn.004212bc(arg_ch);\n    fcn.0040e4e6(arg_ch, &arg_8h);\n    if (*piVar2 != 0) {\n        *arg_10h = -1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    arg_ch = 0;\n    while( true ) {\n        uVar3 = (*pcVar1)(arg_8h, 0x87, 0, 0);\n        if ((uVar3 & 0x40) != 0) {\n            if (*piVar2 == 0) {\n                (*pcVar1)(arg_8h, 0xf1, arg_ch == *arg_10h, 0);\n            }\n            else {\n                iVar4 = (*pcVar1)(arg_8h, 0xf0, 0, 0);\n                if (iVar4 != 0) {\n                    *arg_10h = arg_ch;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        }\n        arg_8h = (*_sym.imp.USER32.dll_GetWindow)(arg_8h, 2);\n        if (arg_8h == NULL) break;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if ((uVar3 & 0x20000) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00422986": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00422986(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.0040ba5d();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "00425285": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00425285(void)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00432a66(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00424e6d();\n    iVar1 = fcn.0040698e();\n    while (*(iVar1 + 0xec) == extraout_ECX) {\n        fcn.00423122();\n    }\n    if (extraout_ECX[0x2f] != NULL) {\n        fcn.004042e5(extraout_ECX[0x2f]);\n    }\n    fcn.0040128a();\n    *(unaff_EBP + -4) = 0;\n    fcn.00416fd2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ab87();\n    fcn.00432b3e();\n    return;\n}\n",
        "token_count": 280
    },
    "004254d6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004254d6(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code **ppcVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    int32_t **ppiVar11;\n    uint extraout_ECX;\n    uint32_t uVar12;\n    int32_t unaff_EBP;\n    uint32_t uVar13;\n    uint *in_FS_OFFSET;\n    uint32_t uVar14;\n    \n    fcn.00432a66(0xf4);\n    *(unaff_EBP + 0x60) = extraout_ECX;\n    uVar4 = fcn.0040f93d();\n    fcn.004012a8(uVar4);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    *(unaff_EBP + -4) = 0;\n    iVar5 = (*pcVar2)(\"ReBarWindow32\");\n    uVar4 = fcn.0040117c(iVar5 + 1);\n    puVar10 = *(unaff_EBP + 0x74);\n    (*_sym.imp.USER32.dll_GetClassNameA)(*puVar10, uVar4, iVar5 + 1);\n    fcn.0040a042(0xffffffff);\n    uVar4 = fcn.0040a170(*puVar10);\n    *(unaff_EBP + 0x74) = uVar4;\n    iVar5 = fcn.00413036(\"ReBarWindow32\");\n    if ((iVar5 == 0) && (iVar5 = *(unaff_EBP + 0x74),  iVar5 != 0)) {\n        iVar6 = fcn.00415a65(0x480cb0);\n        if (iVar6 != 0) {\n            iVar6 = fcn.0040acd7();\n            if ((iVar6 != 0) && (*(unaff_EBP + 0x60) != iVar6)) {\n                uVar4 = fcn.004254d6(*(unaff_EBP + 0x70), puVar10, *(unaff_EBP + 0x78));\n                goto code_r0x00425589;\n            }\n            fcn.00417a54();\n            *(unaff_EBP + -4) = 1;\n            uVar4 = fcn.0040f93d();\n            fcn.004012a8(uVar4);\n            *(unaff_EBP + -4) = 2;\n            uVar4 = fcn.0040f93d();\n            fcn.004012a8(uVar4);\n            *(unaff_EBP + -4) = 3;\n            fcn.00413d7f();\n            *(unaff_EBP + -4) = 4;\n            fcn.0041462b(*(unaff_EBP + 0x60));\n            pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n            uVar4 = puVar10[3];\n            uVar1 = *(iVar5 + 0x20);\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x100) = 0x50;\n            *(unaff_EBP + -0xfc) = 0x10;\n            (*pcVar3)(uVar1, 0x41d, uVar4, unaff_EBP + -0x100);\n            (*pcVar3)(*(*(unaff_EBP + 0x74) + 0x20), 0x409, puVar10[3], unaff_EBP + -0x1c);\n            iVar5 = (*pcVar2)(\"ToolbarWindow32\");\n            uVar4 = fcn.0040117c(iVar5 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0xe0), uVar4, iVar5 + 1);\n            fcn.0040a042(0xffffffff);\n            iVar5 = fcn.0040a170(*(unaff_EBP + -0xe0));\n            *(unaff_EBP + 0x20) = iVar5;\n            iVar6 = fcn.00413036();\n            if ((iVar6 == 0) && (iVar5 != 0)) {\n                iVar6 = fcn.00415a65(0x48095c);\n                if (iVar6 != 0) {\n                    *(unaff_EBP + -0x14) = puVar10[6];\n                    *(unaff_EBP + 0x24) = puVar10 + 6;\n                    fcn.004141ed(unaff_EBP + -0x1c);\n                    fcn.004141b1(unaff_EBP + -0x1c);\n                    iVar6 = fcn.00423147();\n                    *(unaff_EBP + 0x58) = iVar6;\n                    do {\n                        iVar6 = iVar6 + -1;\n                        uVar4 = *(iVar5 + 0x20);\n                        *(unaff_EBP + 0x74) = iVar6;\n                        (*pcVar3)(uVar4, 0x41d, iVar6, unaff_EBP + -0x80);\n                        iVar7 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x90, unaff_EBP + -0x1c, unaff_EBP + -0x80);\n                        if (iVar7 != 0) break;\n                    } while (iVar6 != 0);\n                    fcn.00432e30(unaff_EBP + -0x70, 0, 0x30);\n                    *(unaff_EBP + -0x70) = 0x30;\n                    iVar5 = fcn.00423173();\n                    fcn.004278ae();\n                    *(unaff_EBP + 0x3c) = vtable.CTypedPtrArray_class_CObArray__class_CBitmap__.0;\n                    uVar14 = *(unaff_EBP + 0x74);\n                    *(unaff_EBP + -4) = 6;\n                    fcn.004278d5(*(unaff_EBP + 0x58) - uVar14, 0xffffffff);\n                    uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.0041798a(uVar4);\n                    fcn.0041497e(unaff_EBP + -0x30);\n                    uVar12 = 0;\n                    if (uVar14 < *(unaff_EBP + 0x58)) {\n                        do {\n                            fcn.0042bdbc(*(unaff_EBP + 0x74), unaff_EBP + 0x54, unaff_EBP + 0x38, unaff_EBP + 0x50);\n                            if ((*(unaff_EBP + 0x38) & 1) == 0) {\n                                *(unaff_EBP + -0x6c) = 0x162;\n                                fcn.00405549(*(unaff_EBP + 0x54));\n                                fcn.00415bd7(unaff_EBP + 0x5c, *(unaff_EBP + 0x70), 1, 10);\n                                ppcVar8 = fcn.004042ba(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                fcn.00427ab4(uVar12, ppcVar8);\n                                fcn.00424ad5(*(iVar5 + 4), *(unaff_EBP + 0x50), unaff_EBP + -0xb0);\n                                (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + 0x10, unaff_EBP + -0xa0);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + 0x10, -*(unaff_EBP + 0x10), -*(unaff_EBP + 0x14));\n                                fcn.00422f80(uVar12);\n                                fcn.00422fc9(unaff_EBP + -0x30, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n                                piVar9 = fcn.00422f80(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.004149bb(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.00422f80(uVar12);\n                                *puVar10 = uVar4;\n                                uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.004202df(unaff_EBP + 0x10, uVar4);\n                                fcn.00424af3(unaff_EBP + 0x28, *(unaff_EBP + 0x50), 0, 0, 1);\n                                piVar9 = fcn.00422f80(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.004149bb(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.00422f80(uVar12);\n                                *puVar10 = uVar4;\n                                *(unaff_EBP + -0x4c) = *(unaff_EBP + 0x5c);\n                                *(unaff_EBP + -0x60) = *(unaff_EBP + 0x54);\n                                *(unaff_EBP + -0x68) = 0x100;\n                                puVar10 = fcn.00422f80(uVar12);\n                                *(unaff_EBP + -0x50) = *puVar10;\n                                uVar12 = uVar12 + 1;\ncode_r0x004258d7:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + 4), *(unaff_EBP + 0x74), 1, unaff_EBP + -0x70);\n                            }\n                            else if (uVar12 != 0) {\n                                *(unaff_EBP + -0x6c) = 0x100;\n                                *(unaff_EBP + -0x68) = 0x800;\n                                goto code_r0x004258d7;\n                            }\n                            *(unaff_EBP + 0x74) = *(unaff_EBP + 0x74) + 1;\n                        } while (*(unaff_EBP + 0x74) < *(unaff_EBP + 0x58));\n                    }\n                    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x40, *(unaff_EBP + 0x24));\n                    fcn.004141ed(unaff_EBP + -0x40);\n                    uVar13 = 0;\n                    uVar14 = 0;\n                    fcn.00408b48(0, *(unaff_EBP + -0x40), *(unaff_EBP + -0x34), *(unaff_EBP + 0x60), 0);\n                    **(unaff_EBP + 0x78) = 0;\n                    if (uVar12 != 0) {\n                        do {\n                            uVar14 = uVar13;\n                            ppiVar11 = fcn.00422f80();\n                            if (*ppiVar11 != NULL) {\n                                (**(**ppiVar11 + 4))(1);\n                            }\n                            uVar13 = uVar13 + 1;\n                        } while (uVar13 < uVar12);\n                    }\n                    *(unaff_EBP + -4) = 5;\n                    fcn.004278c5(uVar14);\n                    *(unaff_EBP + -4) = 4;\n                    fcn.0041467f();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.00414612();\n                    fcn.0040128a();\n                    fcn.0040128a();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00417abb();\n                    uVar4 = 1;\n                    goto code_r0x00425589;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.0041467f();\n            *(unaff_EBP + -4) = 3;\n            fcn.00414612();\n            fcn.0040128a();\n            fcn.0040128a();\n            *(unaff_EBP + -4) = 0;\n            fcn.00417abb();\n        }\n    }\n    uVar4 = 0;\ncode_r0x00425589:\n    fcn.0040128a();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 2913
    },
    "00426aed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426aed(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x00426b18;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.0040129e();\ncode_r0x00426b18:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.00426a95(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 249
    },
    "00427bdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427bdc(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00427c07;\n    }\n    arg_10h = fcn.0040440f();\n    arg_8h = unaff_EBX;\ncode_r0x00427c07:\n    fcn.00427ae4(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00427846(iVar1);\n            fcn.00427862();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004282d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004282d8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x004282f3;\n    do {\n        fcn.0040440f();\ncode_r0x004282f3:\n    } while (arg_8h == 0);\n    var_24h = arg_8h;\n    var_28h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110c, 0, &var_28h);\n    return var_4h;\n}\n",
        "token_count": 200
    },
    "0042a7b3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042a7b3(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.0042a590(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xa0));\n    }\n    return -1;\n}\n",
        "token_count": 169
    },
    "0042aafe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042aafe(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            iVar1 = fcn.0042a7f0();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0xa0));\n    }\n    return iVar2;\n}\n",
        "token_count": 147
    },
    "0042b1ea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b1ea(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            arg_8h = fcn.0042a7f0(iVar1);\n            if (arg_8h != 0) {\n                fcn.00422ca4();\n                fcn.00423c8a(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0xa0));\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0042e193": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e193(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x0042e1be;\n    }\n    arg_10h = fcn.0040440f();\n    arg_8h = unaff_EBX;\ncode_r0x0042e1be:\n    fcn.0042e09b(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.004272df(iVar1);\n            fcn.004272fb();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "004302b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004302b0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x20));\n        fcn.0040a149(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.0040a149(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.00410ac9(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0042ff7b(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0042ff7b(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.0042ffaf(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.0042feff(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.0043026c();\n                        }\n                        else {\n                            fcn.00430168();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.0040a149(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.00430123();\n    }\n    return 0;\n}\n",
        "token_count": 650
    },
    "00430a77": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430a77(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack24;\n    code *pcStack20;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    if (puVar2 == 0xfffffff8) {\n                        pcStack20 = NULL;\n                        uStack24 = 0x492448;\n                        fcn.004332dc(&uStack24, 0x48c270);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x430a44;\n                    fcn.004308ef();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        pcStack20 = param_1[1];\n        uStack24 = 0x430a58;\n        fcn.004042e5();\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    pcStack20 = 0x430a6a;\n    fcn.00420aeb();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 358
    },
    "004317b1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004317b1(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        fcn.0040440f();\n    }\n    if (param_2 == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x4816ac) & 0xf000) == (*(param_1 + 0x80) & 0xf000)) {\n                iVar1 = fcn.00424093(*(iVar1 * 8 + 0x4816a8));\n                if (iVar1 != 0) goto code_r0x00431802;\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n        fcn.0040440f();\n    }\ncode_r0x00431802:\n    fcn.0042b2f8(param_1, param_2);\n    return;\n}\n",
        "token_count": 225
    },
    "004388d3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004388d3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x48ffa8, 0xc);\n    fcn.00438da5(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x497108;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x497104;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00438917;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00431d9c(arg_8h_00);\ncode_r0x00438917:\n        fcn.00431d9c(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0043893a();\n    fcn.00433d89();\n    return;\n}\n",
        "token_count": 395
    },
    "00438a38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00438a38(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433d44(0x48ffe8, 0xc);\n    fcn.00438da5(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x497108;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x497104;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00438a7c;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00431d9c(arg_8h_00);\ncode_r0x00438a7c:\n        fcn.00431d9c(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00438a9f();\n    fcn.00433d89();\n    return;\n}\n",
        "token_count": 400
    },
    "0045b6e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b6e0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = in_ECX + 0x18;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar5);\n    iVar4 = 0;\n    if (0 < *(in_ECX + 0x34)) {\n        do {\n            iVar5 = iVar4;\n            piVar1 = fcn.0045b591();\n            if (*piVar1 == arg_8h) {\n                fcn.0045b54e();\n                uVar3 = 1;\n                goto code_r0x0045b728;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(in_ECX + 0x34));\n    }\n    iVar4 = iVar5;\n    uVar3 = 0;\ncode_r0x0045b728:\n    uVar2 = fcn.0045b691(iVar4);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 289
    },
    "0040d795": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0040d795(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.00406f55();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0040d34c(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "00413455": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413455(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    iVar1 = fcn.00406f55();\n    uVar3 = *(iVar1 + 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar3, arg_8h, 5);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, uVar2);\n    if (iVar1 != 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    }\n    uVar3 = fcn.00413077(arg_8h_00, arg_ch, uVar3);\n    (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n    return uVar3;\n}\n",
        "token_count": 227
    },
    "004134ab": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.004134ab(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.0041342a(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 74
    },
    "0040708e": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040708e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x496adc != 0) {\n        return *0x496ad0 != 0;\n    }\n    *0x496ae0 = fcn.00407036();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) &&\n          (*0x496ac0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetSystemMetrics\"),  *0x496ac0 != 0)) &&\n         (*0x496ac4 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x496ac4 != 0)) &&\n        ((*0x496ac8 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x496ac8 != 0 &&\n         (*0x496acc = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x496acc != 0)))) &&\n       ((*0x496ad4 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x496ad4 != 0 &&\n        ((*0x496ad0 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x496ad0 != 0 &&\n         (*0x496ad8 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x496ad8 != 0)))))) {\n        *0x496adc = 1;\n        return true;\n    }\n    *0x496ac0 = 0;\n    *0x496ac4 = 0;\n    *0x496ac8 = 0;\n    *0x496acc = 0;\n    *0x496ad0 = 0;\n    *0x496ad4 = 0;\n    *0x496ad8 = 0;\n    *0x496adc = 1;\n    return false;\n}\n",
        "token_count": 457
    },
    "00413a37": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00413a37(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "00413a6d": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00413a6d(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 191
    },
    "00406785": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406785(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.00431d9c(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00417418": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00417418(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00417379();\n    iVar2 = fcn.00406f55();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.00406fc8();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x13c))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.0040698e();\n    iVar3 = fcn.00406f55();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "0042e273": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e273(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.0040e62b();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((uVar3 < 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.0040baca(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.004239f3(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 228
    },
    "00415c83": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415c83(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    puVar1 = param_1 + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1),  iVar3 != 0)) && (unaff_retaddr < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + unaff_retaddr * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    }
}