{
    "0042d000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042d000(void)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.DLL_GetACP)();\n    if ((*0x42e6dc == 0) && (iVar1 = (**0x42e254)(0, 0x101c),  iVar1 != 0)) {\n        return 0;\n    }\n    if ((*0x42e6dc == 0) && (iVar1 = (**0x42e254)(0, 0x7f00),  iVar1 == 0)) {\n        return 0;\n    }\n    *0x42e6e0 = 0x3b1aaf;\n    return 0x3b1ab3;\n}\n",
        "token_count": 161
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode * __cdecl entry0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_214h;\n    uint var_210h;\n    uint lpFileName;\n    \n    *0x42e6e8 = arg_8h;\n    *0x42e6d4 = 0x8e;\n    *0x42e6dc = (arg_8h & 0xffff) == 0;\n    if (arg_8h == 0) {\n        *0x42e6dc = 0;\n    }\n    *0x42e6e4 = fcn.0042d000();\n    *0x42e6e4 = *0x42e6e4 + 0x51615;\n    iVar1 = (**0x42e240)(0x42e098, 1, 3, 0, 3, 0x80, 0);\n    if ((iVar1 == -1) || (iVar1 == 0)) {\n        *0x42e6ec = fcn.0042d560(*0x42e6e4);\n        *0x42e6f0 = fcn.0042d580(*0x42e6ec);\n        *0x42e6f4 = 0;\n        *0x42e6f8 = 1;\n        if ((*0x42e6dc == 0) && (iVar1 = (**0x42e254)(0, 0x1019),  iVar1 != 0)) {\n            pcVar2 = swi(0x16);\n            (*pcVar2)();\n        }\n        *(*0x42e024 + 0x11) = 0x49;\n        *(*0x42e024 + 0x12) = 0x6e;\n        *(*0x42e024 + 0x13) = 0x74;\n        *0x42e6fc = *0x42e2fc;\n        if ((*0x42e6dc != 0) || (iVar1 = (**0x42e2fc)(*0x42e080, *0x42e024, 0x42e6f4),  iVar1 == 0)) {\n            *0x42e700 = *0x42e6ec;\n            *0x42e704 = 0;\n            *0x42e708 = *0x42e704;\n            for (; *0x42e704 < *0x42e6ec; *0x42e704 = *0x42e704 + *0x42e000) {\n                *0x42e70c = fcn.0042d5b0(*0x42e000, *0x42e700);\n                fcn.0042d6b0(*0x42e6f0 + *0x42e704, *0x42e6e4 + *0x42e708, *0x42e70c);\n                *0x42e708 = *0x42e004 + *0x42e000 + *0x42e708;\n                *0x42e700 = *0x42e700 - *0x42e70c;\n            }\n            fcn.0042d5f0(*0x42e6f0, *0x42e6ec);\n            *0x42e710 = &stack0xfffffffc;\n            *0x42e714 = fcn.0042d580(0x5b000);\n            *0x42e6f4 = 0;\n            *0x42e704 = 0;\n            *0x42e708 = 0;\n            fcn.0042d070();\n            *0x42e6ec = fcn.0042d560(*0x42e6e4);\n            *0x42e718 = fcn.0042d580(*0x42e6ec);\n            *0x42e700 = *0x42e6ec;\n            for (; *0x42e704 < *0x42e6ec; *0x42e704 = *0x42e704 + *0x42e000) {\n                *0x42e70c = fcn.0042d5b0(*0x42e000, *0x42e700);\n                fcn.0042d6b0(*0x42e718 + *0x42e704, *0x42e6e4 + *0x42e708, *0x42e70c);\n                *0x42e708 = *0x42e004 + *0x42e000 + *0x42e708;\n                *0x42e700 = *0x42e700 - *0x42e70c;\n            }\n            fcn.0042d5f0(*0x42e718, *0x42e6ec);\n            **0x42e6f0 = *0x42e718;\n            fcn.0042d090(*0x42e714 + 0x200, *0x42e6f0);\n            *0x42e71c = fcn.0042d080();\n            fcn.0042d850(*0x42e718, *0x42e714, *0x42e714 - *0x42e71c);\n            *0x42e720 = *0x42e714 + 0x287d0;\n            *0x42e724 = fcn.0042d720;\n            return fcn.0042d720;\n        }\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = 0x42;\n    }\n    return pcVar2;\n}\n",
        "token_count": 1265
    },
    "0042d740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d740(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h <= var_4h) {\n            return;\n        }\n        uVar1 = *(arg_ch + 0x463a + (var_4h - 0x231d) * 2);\n        if (uVar1 >> 0xc == 3) {\n            uVar3 = uVar1 & 0xfff;\n            if ((var_4h == 0) && (iVar2 = (**0x42e254)(0, 0x154b),  iVar2 != 0)) {\n                return;\n            }\n            *arg_18h = uVar3 + *arg_18h;\n            *(arg_10h + *arg_18h) = *(arg_10h + *arg_18h) + arg_14h;\n            *arg_18h = *arg_18h - uVar3;\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 326
    },
    "0042d850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d850(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    for (; *(arg_8h + 4) != 0; arg_8h = arg_8h + *(arg_8h + 4)) {\n        fcn.0042d740(*(arg_8h + 4) - 8U >> 1, arg_8h + 8, arg_ch, arg_10h, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0042d5b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042d5b0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < arg_ch) {\n        arg_ch = arg_8h;\n    }\n    return arg_ch;\n}\n",
        "token_count": 79
    },
    "0042d090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d090(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0042d6b0(arg_8h, arg_ch, 0x28a00);\n    return;\n}\n",
        "token_count": 51
    },
    "0042d6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d6b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 1) {\n        *(arg_8h + var_ch) = *(arg_ch + var_ch);\n    }\n    return;\n}\n",
        "token_count": 116
    }
}