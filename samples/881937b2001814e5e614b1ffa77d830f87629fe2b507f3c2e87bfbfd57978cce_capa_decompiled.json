{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401a40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00401a40(int32_t param_1, int32_t param_2)\n\n{\n    int32_t arg_ch;\n    code *pcVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((in_EAX != 0) && (param_2 == 0)) {\n        fcn.0040a4b0();\n    }\n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        if (in_EAX != 0) {\n            while( true ) {\n                uVar3 = in_EAX;\n                if (0x1ffffffe < in_EAX) {\n                    uVar3 = 0x1fffffff;\n                }\n                arg_ch = uVar3 * 4;\n                iVar2 = fcn.0041095d(param_2, arg_ch);\n                if (iVar2 != arg_ch) break;\n                in_EAX = in_EAX - uVar3;\n                param_2 = param_2 + arg_ch;\n                if (in_EAX == 0) {\n                    return;\n                }\n            }\n            fcn.004113f7(3, 0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else if (in_EAX != 0) {\n        do {\n            uVar3 = in_EAX;\n            if (0x1ffffffe < in_EAX) {\n                uVar3 = 0x1fffffff;\n            }\n            fcn.0041101f(param_2, uVar3 * 4);\n            in_EAX = in_EAX - uVar3;\n            param_2 = param_2 + uVar3 * 4;\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "004050a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004050a0(void)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint *arg_8h;\n    int16_t *piVar8;\n    uint *arg_ch;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    int16_t *piVar9;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    uint8_t uVar10;\n    char cVar11;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar in_stack_00000034;\n    uchar in_stack_00000048;\n    uint in_stack_00000064;\n    uint *puVar12;\n    uint *arg_8h_01;\n    uint in_stack_ffffff80;\n    uint *arg_8h_02;\n    uint *puVar13;\n    uint uStack96;\n    uint8_t uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    int32_t *piStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    uchar auStack60 [20];\n    int32_t iStack40;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x42bb13;\n    iStack20 = *in_FS_OFFSET;\n    uStack28 = *0x438ddc ^ &stack0xffffff3c;\n    uVar3 = *0x438ddc ^ &stack0xffffff30;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.00401f30(uVar3);\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceW)(0, L\"#129\", 2);\n    if (((iVar4 != 0) && (iVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar4),  iVar5 != 0)) &&\n       (iVar5 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar5),  iVar5 != 0)) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, iVar4);\n        arg_8h_02 = iVar5 + 0x28;\n        arg_ch = iVar4 + -0x28;\n        fcn.00414d85(0x400);\n        puVar13 = NULL;\n        in_stack_00000064 = 0;\n        fcn.00414dba(arg_8h_02, arg_ch, 0);\n        fcn.004111c6(&stack0xfffffffc, 1, 0x1000, 0);\n        in_stack_00000048 = 1;\n        arg_8h_01 = 0x40518a;\n        fcn.0041a4d8(0x1335ca);\n        in_stack_00000034 = 0;\n        iVar4 = 0;\n        do {\n            iVar5 = fcn.0041a4ea();\n            uVar10 = iVar5 % 0x3e;\n            if (uVar10 < 0x1a) {\n                cVar11 = uVar10 + 0x41;\ncode_r0x004051bf:\n                (&stack0x00000014)[iVar4] = cVar11;\n            }\n            else {\n                if (uVar10 < 0x34) {\n                    cVar11 = uVar10 + 0x47;\n                    goto code_r0x004051bf;\n                }\n                if (uVar10 < 0x3e) {\n                    cVar11 = uVar10 - 4;\n                    goto code_r0x004051bf;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x20);\n        if ((uStack84 & 1) == 0) {\n            arg_8h_01 = 0x4;\n            fcn.004113f7(4, uStack88);\n        }\n        piVar7 = piStack76;\n        if (piStack72 < piStack76 + 1) {\n            arg_8h_01 = piStack76 + (4 - piStack72);\n            fcn.00410b06(arg_8h_01);\n            piVar7 = piStack80;\n            piStack72 = piStack76;\n        }\n        piVar6 = piVar7 + 1;\n        if ((uStack92 & 1) == 0) {\n            arg_8h_01 = 0x4;\n            piVar6 = fcn.004113f7(4, uStack96);\n            piStack72 = extraout_ECX;\n        }\n        if (piStack72 < piVar6 + 1) {\n            arg_8h_01 = piVar6 + (4 - piStack72);\n            fcn.00410b06(arg_8h_01);\n            piVar6 = piStack80;\n            piStack72 = piVar7 + 1;\n        }\n        piVar7 = piVar6 + 1;\n        if ((uStack92 & 1) == 0) {\n            arg_8h_01 = 0x4;\n            piVar7 = fcn.004113f7(4, uStack96);\n            piStack72 = extraout_ECX_00;\n        }\n        if (piStack72 < piVar7 + 1) {\n            arg_8h_01 = piVar7 + (4 - piStack72);\n            fcn.00410b06(arg_8h_01);\n            piVar7 = piStack80;\n            piStack72 = piVar6 + 1;\n        }\n        iStack32 = *piVar7;\n        piVar6 = piVar7 + 1;\n        if ((uStack92 & 1) == 0) {\n            arg_8h_01 = 0x4;\n            piVar6 = fcn.004113f7(4, uStack96);\n            piStack72 = extraout_ECX_01;\n        }\n        if (piStack72 < piVar6 + 1) {\n            arg_8h_01 = piVar6 + (4 - piStack72);\n            fcn.00410b06(arg_8h_01);\n            piVar6 = piStack80;\n            piStack72 = piVar7 + 1;\n        }\n        iStack40 = *piVar6;\n        piVar6 = piVar6 + 1;\n        if ((uStack92 & 1) == 0) {\n            arg_8h_01 = 0x4;\n            piVar6 = fcn.004113f7(4, uStack96);\n            piStack72 = extraout_ECX_02;\n        }\n        if (piStack72 < piVar6 + 1) {\n            arg_8h_01 = piVar6 + (4 - piStack72);\n            fcn.00410b06(arg_8h_01);\n            piVar6 = piStack80;\n        }\n        arg_ch_00 = *piVar6;\n        arg_8h = fcn.00409a87();\n        puVar12 = arg_8h;\n        fcn.0041095d(arg_8h, arg_ch_00);\n        piVar8 = fcn.00408aa0();\n        if (piVar8 != NULL) {\n            do {\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n        }\n        fcn.00402120();\n        fcn.00409a92();\n        fcn.00409a92();\n        fcn.004113f7(4, 0x1000);\n        if (puVar13 < arg_ch + 1) {\n            iVar4 = arg_ch + (4 - puVar13);\n            arg_ch = arg_8h_02;\n            fcn.00410b06(iVar4);\n        }\n        uVar2 = *arg_ch;\n        arg_8h_00 = fcn.00409a87();\n        fcn.0041095d(arg_8h_00, uVar2);\n        piVar8 = fcn.00408aa0();\n        if (piVar8 != NULL) {\n            do {\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n        }\n        fcn.00402120();\n        fcn.00409a92();\n        fcn.00409a92();\n        fcn.004113f7(4, arg_8h);\n        if (arg_8h_01 < arg_ch_00 + 1) {\n            iVar4 = arg_ch_00 + (4 - arg_8h_01);\n            arg_ch_00 = puVar12;\n            fcn.00410b06(iVar4);\n        }\n        uVar2 = *arg_ch_00;\n        iVar4 = fcn.00409a87();\n        unaff_EDI = iVar4;\n        fcn.0041095d(iVar4, uVar2);\n        piVar9 = fcn.00408aa0(iVar4, &stack0xffffffc4);\n        piVar8 = piVar9;\n        if (piVar9 != NULL) {\n            do {\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            piVar8 = piVar8 - (piVar9 + 1) >> 1;\n        }\n        fcn.00402120(piVar9, piVar8);\n        fcn.00409a92(piVar9);\n        fcn.00409a92(iVar4);\n        *(unaff_EDI + 0x228) = in_stack_ffffff80;\n        *(unaff_EDI + 0x224) = 0;\n        fcn.0041100f();\n        uStack24 = uStack24 & 0xffffff00;\n        fcn.00411188();\n        uStack24 = 0xffffffff;\n        fcn.00415109();\n    }\n    *in_FS_OFFSET = iStack32;\n    fcn.00419910(unaff_EDI);\n    return;\n}\n",
        "token_count": 2357
    },
    "004074c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004074c0(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint uVar8;\n    char *pcVar9;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iStack120;\n    int32_t iStack104;\n    char *pcStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t iStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    iStack8 = 0x42bc38;\n    iStack12 = *in_FS_OFFSET;\n    uStack40 = *0x438ddc ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack44 = param_2;\n    uStack48 = 0x4074f7;\n    fcn.00402270();\n    pcVar3 = _sym.imp.KERNEL32.dll_FlushFileBuffers;\n    iStack8 = 0;\n    uStack48 = *(param_1 + 0x20);\n    uStack52 = 0x40750b;\n    (*_sym.imp.KERNEL32.dll_FlushFileBuffers)();\n    if (*(param_1 + 0x24) == 0) {\n        uStack52 = uStack4;\n        uStack56 = 0x4075f0;\n        iStack68 = unaff_ESI;\n        fcn.00409040();\n        iStack64 = *(iStack68 + -0xc);\n        uStack56 = 0;\n        puStack60 = &stack0xffffffe4;\n        uStack72 = *(param_1 + 0x20);\n        iStack76 = 0x40760a;\n        (*_sym.imp.KERNEL32.dll_WriteFile)();\n        iStack76 = *(param_1 + 0x20);\n        uStack80 = 0x407610;\n        (*pcVar3)();\n        piVar1 = in_stack_ffffff80 + -4;\n        LOCK();\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar6 == 1 || iVar6 + -1 < 0) {\n            (**(**(in_stack_ffffff80 + -0x10) + 4))(in_stack_ffffff80 + -0x10);\n        }\n    }\n    else {\n        uStack52 = *(param_1 + 0x20);\n        uStack56 = 0x40751f;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetFileType)();\n        pcVar4 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        uStack56 = 0;\n        if ((uVar5 & 1) == 0) {\n            puStack60 = NULL;\n            iStack64 = 0;\n            iStack68 = 0;\n            uStack72 = 0xffffffff;\n            iStack76 = iStack8;\n            uStack80 = 0;\n            uStack84 = 0xfde9;\n            iStack88 = 0x407545;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n            iStack92 = 0x40754d;\n            iStack88 = iVar6;\n            pcVar7 = fcn.00409a87();\n            iStack96 = 0;\n            pcStack100 = pcVar7;\n            iStack92 = iVar6;\n            fcn.0041b210();\n            iStack88 = 0;\n            iStack92 = 0;\n            iStack104 = -1;\n            pcStack100 = pcVar7;\n            iStack96 = iVar6;\n            (*pcVar4)(0xfde9, 0, uStack40);\n            pcVar7[iVar6 + -1] = '\\0';\n            uVar8 = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)();\n            pcVar3 = _sym.imp.KERNEL32.dll_SetConsoleOutputCP;\n            iStack120 = 0xfde9;\n            (*_sym.imp.KERNEL32.dll_SetConsoleOutputCP)();\n            pcVar9 = pcVar7;\n            do {\n                cVar2 = *pcVar9;\n                pcVar9 = pcVar9 + 1;\n            } while (cVar2 != '\\0');\n            (*_sym.imp.KERNEL32.dll_WriteFile)(*(param_1 + 0x20), pcVar7, pcVar9 - (pcVar7 + 1), &stack0xffffff9c, 0);\n            (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(*(param_1 + 0x20));\n            (*pcVar3)(uVar8);\n            fcn.00409a92(pcVar7);\n        }\n        else {\n            puStack60 = &stack0xffffffe4;\n            uStack72 = *(param_1 + 0x20);\n            iStack64 = *(iStack8 + -0xc) * 2;\n            iStack68 = iStack8;\n            iStack76 = 0x4075da;\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n            iStack76 = *(param_1 + 0x20);\n            uStack80 = 0x4075e0;\n            (*pcVar3)();\n        }\n    }\n    piVar1 = iStack104 + -4;\n    LOCK();\n    iVar6 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar6 == 1 || iVar6 + -1 < 0) {\n        (**(**(iStack104 + -0x10) + 4))(iStack104 + -0x10);\n    }\n    *in_FS_OFFSET = iStack120;\n    return;\n}\n",
        "token_count": 1418
    },
    "00409beb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409beb(uint32_t arg_8h)\n\n{\n    fcn.00402380();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409a92();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0040fedd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040fedd(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0040b0a1();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0041b210(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcW;\n        iVar1 = fcn.0040b0a1();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x43be70;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = L\"AfxWnd90su\";\n            iVar1 = fcn.0040fe0c(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = L\"AfxOleControl90su\";\n            iVar1 = fcn.0040fe0c(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = L\"AfxControlBar90su\";\n            var_18h = 0x10;\n            iVar1 = fcn.0040fe0c(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0040fe99(&var_34h, L\"AfxMDIFrame90su\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0040fe99(&var_34h, L\"AfxFrameOrView90su\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80000) != 0) {\n            var_8h = 0x1000;\n            uVar2 = fcn.0040dbd4(&var_ch, 0x80000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1886
    },
    "0041095d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041095d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.004113f7(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00401b50(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00401b50(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 939
    },
    "00410a8e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410a8e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 377
    },
    "00410b06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410b06(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00410b22;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.004113f7(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x00410b22:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.00409990(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "00410bf5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410bf5(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 1;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.00410a8e();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 1;\n    return;\n}\n",
        "token_count": 194
    },
    "00410c30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410c30(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(2, *(in_ECX + 0x14));\n    }\n    uVar2 = *(in_ECX + 0x28) + 8;\n    if (*(in_ECX + 0x2c) <= uVar2 && uVar2 != *(in_ECX + 0x2c)) {\n        fcn.00410a8e();\n    }\n    puVar1 = *(in_ECX + 0x28);\n    *puVar1 = arg_8h;\n    puVar1[1] = arg_ch;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 8;\n    return;\n}\n",
        "token_count": 224
    },
    "00410c74": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410c74(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 2;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.00410a8e();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 194
    },
    "00410cb3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410cb3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 4;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.00410a8e();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 194
    },
    "00410cf1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410cf1(uchar *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 1U) {\n        fcn.00410b06((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 1);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 1;\n    return;\n}\n",
        "token_count": 189
    },
    "00410d35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d35(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 8U) {\n        fcn.00410b06((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 8);\n    }\n    puVar1 = *(in_ECX + 0x28);\n    *arg_8h = *puVar1;\n    arg_8h[1] = puVar1[1];\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 8;\n    return;\n}\n",
        "token_count": 219
    },
    "00410d82": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d82(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 2U) {\n        fcn.00410b06((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 2);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 189
    },
    "00410dca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410dca(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 4U) {\n        fcn.00410b06((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 4);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 188
    },
    "0041101f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041101f(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.004113f7(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.00401b50(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.00410a8e();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x004110c6;\n            do {\n                fcn.0040a4b0();\ncode_r0x004110c6:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00401b50(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "004111c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004111c6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00402350();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.0040a4b0();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.00403290(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00402380();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    extraout_ECX[0xc] = *(unaff_EBP + 0x14);\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = 1;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[7] = 1;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.00409a58(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    extraout_ECX[10] = iVar4;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 857
    },
    "00412e8b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412e8b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (in_ECX[2] != 0) {\n        fcn.00409a92(*in_ECX);\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.00409a92();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004130f9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004130f9(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0040a4b0();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00401b20();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.0041101f(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "00415404": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415404(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0040a4b0();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00401b20();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.0041101f(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "0041569f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041569f(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint in_stack_ffffffec;\n    \n    if (arg_8h != 0) goto code_r0x004156ba;\n    in_stack_ffffffec = *(in_ECX + 0x14);\n    arg_8h_00 = 6;\n    while( true ) {\n        fcn.004113f7(arg_8h_00, in_stack_ffffffec);\ncode_r0x004156ba:\n        if ((~*(in_ECX + 0x18) & 1) != 0) break;\n        arg_8h_00 = 1;\n    }\n    if (*(arg_8h + 8) == 0xffff) {\n        fcn.0040a494();\n    }\n    fcn.00415560(0);\n    puVar2 = fcn.00416843(arg_8h);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.00410c74(0xffff);\n        fcn.0041114b(in_ECX);\n        fcn.004151c8();\n        puVar3 = fcn.00416843(arg_8h);\n        *puVar3 = *(in_ECX + 0x34);\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.00410c74(uVar1 | 0x8000);\n    }\n    else {\n        fcn.00410c74(0x7fff);\n        fcn.00410cb3(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "0041574e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041574e(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint arg_8h_01;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x0041576b;\n    in_stack_ffffffdc = *(in_ECX + 0x14);\n    arg_8h_01 = 1;\ncode_r0x00415766:\n    do {\n        while( true ) {\n            fcn.004113f7(arg_8h_01, in_stack_ffffffdc);\ncode_r0x0041576b:\n            arg_8h_00 = 0xffff;\n            if ((arg_8h != 0) && (*(arg_8h + 8) == 0xffff)) {\n                fcn.0040a494();\n            }\n            fcn.00415560(0);\n            fcn.00410d82(&var_4h);\n            if (var_4h == 0x7fff) {\n                fcn.00410dca(&var_ch);\n            }\n            else {\n                var_ch = (var_4h & 0x8000) << 0x10 | var_4h & 0x7fff;\n            }\n            if ((var_ch & 0x80000000) != 0) break;\n            if (arg_10h != NULL) {\n                *arg_10h = var_ch;\n                return 0;\n            }\ncode_r0x004157d6:\n            arg_8h_01 = 5;\n        }\n        if (var_4h != -1) {\n            uVar4 = var_ch & 0x7fffffff;\n            if ((uVar4 == 0) || (*(*(in_ECX + 0x38) + 8) - 1U < uVar4)) goto code_r0x004157d6;\n            var_4h = 0;\n            fcn.004166c1(1, &var_4h);\n            if (var_4h == 0) {\ncode_r0x0041586e:\n                fcn.0040a4b0();\n                goto code_r0x00415873;\n            }\n            piVar2 = fcn.004151a7(uVar4);\n            if (*piVar2 == 2) goto code_r0x004157d6;\n            arg_8h_00 = fcn.00409a20(uVar4);\n            var_8h = 0;\n            if ((*(in_ECX + 0x3c) == 0) || (iVar3 = fcn.004166c1(arg_8h_00, &var_4h),  var_8h = var_4h,  iVar3 == 0)) {\n                var_8h = *(arg_8h_00 + 8) & 0x7fffffff;\n            }\ncode_r0x00415904:\n            if ((arg_8h == 0) || (iVar3 = fcn.0041148a(arg_8h),  iVar3 != 0)) {\n                if (arg_ch == NULL) {\n                    *(in_ECX + 0x10) = var_8h;\n                }\n                else {\n                    *arg_ch = var_8h;\n                }\n                if (arg_10h != NULL) {\n                    *arg_10h = var_ch;\n                }\n                return arg_8h_00;\n            }\ncode_r0x00415800:\n            arg_8h_01 = 6;\n            goto code_r0x00415766;\n        }\n        arg_8h_00 = fcn.00410f98(in_ECX, &var_8h);\n        if (arg_8h_00 == 0) goto code_r0x00415800;\n        if ((*(arg_8h_00 + 8) & 0x7fffffff) == var_8h) {\ncode_r0x0041583f:\n            fcn.004151c8();\n            uVar4 = 1;\n            fcn.00414c66(*(in_ECX + 0x34), arg_8h_00, 1);\n            var_10h = 0;\n            fcn.004166c1(1, &var_10h);\n            if (var_10h == 0) goto code_r0x0041586e;\ncode_r0x00415873:\n            var_4h = uVar4;\n            fcn.0041532e(*(in_ECX + 0x34), &var_4h, uVar4);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            goto code_r0x00415904;\n        }\n        if ((*(arg_8h_00 + 8) & 0x80000000) != 0) {\n            fcn.0041548c(0);\n            uVar4 = var_8h;\n            puVar1 = fcn.00416843(arg_8h_00);\n            *puVar1 = uVar4;\n            goto code_r0x0041583f;\n        }\n        arg_8h_01 = 7;\n    } while( true );\n}\n",
        "token_count": 1280
    },
    "00415984": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415984(int32_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *puVar1;\n    uint arg_8h_01;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.004113f7(2, *(in_ECX + 0x14));\n    }\n    fcn.00415560(0);\n    if (arg_8h == NULL) {\n        fcn.00410c74(0);\n    }\n    else {\n        puVar1 = fcn.00416843(arg_8h);\n        arg_8h_00 = *puVar1;\n        if (arg_8h_00 == 0) {\n            arg_8h_01 = (***arg_8h)();\n            fcn.0041569f(arg_8h_01);\n            fcn.004151c8();\n            puVar2 = fcn.00416843(arg_8h);\n            *puVar2 = *(in_ECX + 0x34);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            (**(*arg_8h + 8))();\n        }\n        else if (arg_8h_00 < 0x7fff) {\n            fcn.00410c74(arg_8h_00);\n        }\n        else {\n            fcn.00410c74(0x7fff);\n            fcn.00410cb3(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00415a20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00415a20(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *arg_ch;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar4;\n    uint var_4h;\n    \n    var_4h = 0x415a2c;\n    fcn.0041ad00(0x14);\n    if ((*(extraout_ECX + 0x18) & 1) != 0) goto code_r0x00415a3e;\n    var_4h = *(extraout_ECX + 0x14);\n    uVar4 = 4;\ncode_r0x00415a39:\n    do {\n        fcn.004113f7(uVar4, var_4h);\ncode_r0x00415a3e:\n        iVar2 = fcn.0041574e(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x18);\n        *(unaff_EBP + -0x14) = 0;\n        if (iVar2 == 0) {\n            arg_ch = *(unaff_EBP + -0x18);\n            if (*(*(extraout_ECX + 0x38) + 8) + -1 < arg_ch) {\ncode_r0x00415a69:\n                uVar4 = 5;\n                goto code_r0x00415a39;\n            }\n            *(unaff_EBP + -0x14) = 0;\n            iVar2 = fcn.004166c1(1, unaff_EBP + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = *(unaff_EBP + -0x14);\n                if (iVar2 == 0) goto code_r0x00415a8c;\n                goto code_r0x00415a91;\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            arg_ch = fcn.00411440();\n            *(unaff_EBP + -0x14) = arg_ch;\n            if (arg_ch == NULL) {\n                fcn.0040a478();\n            }\n            fcn.004151c8();\n            fcn.00414c66(*(extraout_ECX + 0x34), arg_ch, 1);\n            *(unaff_EBP + 8) = 0;\n            fcn.004166c1(1, unaff_EBP + 8);\n            if (*(unaff_EBP + 8) != 0) {\n                uVar4 = *(extraout_ECX + 0x34);\n                *(unaff_EBP + -0x18) = 2;\n                fcn.0041532e(uVar4, unaff_EBP + -0x18, 1);\n                uVar4 = *(unaff_EBP + -0x1c);\n                uVar1 = *(extraout_ECX + 0x10);\n                *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\n                *(extraout_ECX + 0x10) = uVar4;\n                (**(*arg_ch + 8))(extraout_ECX);\n                *(extraout_ECX + 0x10) = uVar1;\ncode_r0x00415b58:\n                fcn.0041ada5();\n                return;\n            }\ncode_r0x00415a8c:\n            fcn.0040a4b0();\n            iVar2 = extraout_ECX_00;\ncode_r0x00415a91:\n            if (arg_ch <= *(iVar2 + 8) + -1) {\n                piVar3 = fcn.004151a7(arg_ch);\n                if (*piVar3 == 1) goto code_r0x00415a69;\n            }\n        }\n        iVar2 = fcn.00409a20(arg_ch);\n        if ((iVar2 == 0) || (*(unaff_EBP + 8) == 0)) goto code_r0x00415b58;\n        iVar2 = fcn.004114b5(*(unaff_EBP + 8));\n        if (iVar2 != 0) goto code_r0x00415b58;\n        uVar4 = 6;\n    } while( true );\n}\n",
        "token_count": 1073
    },
    "004161df": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004161df(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint hMem;\n    uint lpCriticalSection;\n    \n    iVar1 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x004162cd;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            uVar4 = fcn.00409ae1(iVar7, 8);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar4);\n        }\n        else {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar4);\n            uVar9 = 0x2002;\n            uVar6 = fcn.00409ae1(iVar7, 8);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar4, uVar6, uVar9);\n        }\n        if (iVar5 == 0) {\n            param_1 = *(param_1 + 0x10);\n            if (param_1 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1);\n                (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar4);\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n            iVar5 = fcn.0040a478();\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar5);\n        fcn.0041b210(iVar5 + *(param_1 + 4) * 8, 0, (iVar7 - *(param_1 + 4)) * 8);\n        *(param_1 + 4) = iVar7;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x004162cd:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar2 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar2 = *puVar2 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n    return iVar8;\n}\n",
        "token_count": 775
    },
    "00423f80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00423f80(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0041cb45();\n    var_4h = 0;\n    if (*0x43ce50 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x43ce50 = fcn.0041cad3(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x430084);\n        *0x43ce54 = fcn.0041cad3(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x430070);\n        *0x43ce58 = fcn.0041cad3(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x43ce60 = fcn.0041cad3(uVar3);\n        if (*0x43ce60 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x43ce5c = fcn.0041cad3(uVar3);\n        }\n    }\n    if ((*0x43ce5c != iVar1) && (*0x43ce60 != iVar1)) {\n        pcVar4 = fcn.0041cb4e(*0x43ce5c);\n        pcVar5 = fcn.0041cb4e(*0x43ce60);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x004240c2;\n        }\n    }\n    if ((((*0x43ce54 != iVar1) && (pcVar4 = fcn.0041cb4e(*0x43ce54),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x43ce58 != iVar1 && (pcVar4 = fcn.0041cb4e(*0x43ce58),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x004240c2:\n    pcVar4 = fcn.0041cb4e(*0x43ce50);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 830
    },
    "00424da1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424da1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041b28c(0x4357f8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0041b1a5();\n        *puVar2 = 0;\n        puVar2 = fcn.0041b192();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x43dfe8)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x43e000;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00426abe(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0041b192();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0041b1a5();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0042466e(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00424e73(0x4357f8);\n                goto code_r0x00424e6d;\n            }\n        }\n        puVar2 = fcn.0041b1a5();\n        *puVar2 = 0;\n        puVar2 = fcn.0041b192();\n        *puVar2 = 9;\n        fcn.0041d6dc(0, 0, 0, 0, 0);\n    }\ncode_r0x00424e6d:\n    fcn.0041b2d1();\n    return;\n}\n",
        "token_count": 646
    },
    "004262ce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004262ce(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    fcn.00419d18(arg_10h);\n    var_14h = fcn.0042801b(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00427593(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00426327:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00426367;\n        }\n        if (iVar1 != 2) {\ncode_r0x00426359:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00426367;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00426359;\n        goto code_r0x00426327;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00426367:\n    fcn.00419910(unaff_EBX);\n    return;\n}\n",
        "token_count": 493
    },
    "00426376": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426376(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    fcn.00419d18(arg_10h);\n    var_14h = fcn.0042801b(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00427ad7(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004263cf:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0042640f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00426401:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0042640f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00426401;\n        goto code_r0x004263cf;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0042640f:\n    fcn.00419910(unaff_EBX);\n    return;\n}\n",
        "token_count": 497
    },
    "0042801b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004282dd)\n// WARNING: Removing unreachable block (ram,0x004282a6)\n// WARNING: Removing unreachable block (ram,0x0042868f)\n// WARNING: Removing unreachable block (ram,0x004282b5)\n// WARNING: Removing unreachable block (ram,0x004282bd)\n// WARNING: Removing unreachable block (ram,0x004282c3)\n// WARNING: Removing unreachable block (ram,0x004282c6)\n// WARNING: Removing unreachable block (ram,0x004282cd)\n// WARNING: Removing unreachable block (ram,0x004282d7)\n// WARNING: Removing unreachable block (ram,0x00428332)\n// WARNING: Removing unreachable block (ram,0x0042832c)\n// WARNING: Removing unreachable block (ram,0x00428338)\n// WARNING: Removing unreachable block (ram,0x00428355)\n// WARNING: Removing unreachable block (ram,0x00428357)\n// WARNING: Removing unreachable block (ram,0x0042835f)\n// WARNING: Removing unreachable block (ram,0x00428362)\n// WARNING: Removing unreachable block (ram,0x00428367)\n// WARNING: Removing unreachable block (ram,0x0042836a)\n// WARNING: Removing unreachable block (ram,0x00428698)\n// WARNING: Removing unreachable block (ram,0x00428375)\n// WARNING: Removing unreachable block (ram,0x004286af)\n// WARNING: Removing unreachable block (ram,0x004286b6)\n// WARNING: Removing unreachable block (ram,0x00428380)\n// WARNING: Removing unreachable block (ram,0x00428393)\n// WARNING: Removing unreachable block (ram,0x00428395)\n// WARNING: Removing unreachable block (ram,0x004283a2)\n// WARNING: Removing unreachable block (ram,0x004283a7)\n// WARNING: Removing unreachable block (ram,0x004283ad)\n// WARNING: Removing unreachable block (ram,0x004283b6)\n// WARNING: Removing unreachable block (ram,0x004283bd)\n// WARNING: Removing unreachable block (ram,0x004283d5)\n// WARNING: Removing unreachable block (ram,0x004283e6)\n// WARNING: Removing unreachable block (ram,0x004283f4)\n// WARNING: Removing unreachable block (ram,0x00428434)\n// WARNING: Removing unreachable block (ram,0x0042843d)\n// WARNING: Removing unreachable block (ram,0x00428655)\n// WARNING: Removing unreachable block (ram,0x0042844b)\n// WARNING: Removing unreachable block (ram,0x00428455)\n// WARNING: Removing unreachable block (ram,0x00428670)\n// WARNING: Removing unreachable block (ram,0x00428462)\n// WARNING: Removing unreachable block (ram,0x00428469)\n// WARNING: Removing unreachable block (ram,0x00428473)\n// WARNING: Removing unreachable block (ram,0x00428478)\n// WARNING: Removing unreachable block (ram,0x00428488)\n// WARNING: Removing unreachable block (ram,0x0042848d)\n// WARNING: Removing unreachable block (ram,0x00428497)\n// WARNING: Removing unreachable block (ram,0x0042849c)\n// WARNING: Removing unreachable block (ram,0x004284ae)\n// WARNING: Removing unreachable block (ram,0x004284bb)\n// WARNING: Removing unreachable block (ram,0x004284ca)\n// WARNING: Removing unreachable block (ram,0x004284d7)\n// WARNING: Removing unreachable block (ram,0x004284f4)\n// WARNING: Removing unreachable block (ram,0x004284f8)\n// WARNING: Removing unreachable block (ram,0x004284ff)\n// WARNING: Removing unreachable block (ram,0x00428508)\n// WARNING: Removing unreachable block (ram,0x0042850b)\n// WARNING: Removing unreachable block (ram,0x0042851c)\n// WARNING: Removing unreachable block (ram,0x0042852a)\n// WARNING: Removing unreachable block (ram,0x00428535)\n// WARNING: Removing unreachable block (ram,0x0042853c)\n// WARNING: Removing unreachable block (ram,0x00428567)\n// WARNING: Removing unreachable block (ram,0x0042856c)\n// WARNING: Removing unreachable block (ram,0x00428577)\n// WARNING: Removing unreachable block (ram,0x00428580)\n// WARNING: Removing unreachable block (ram,0x00428586)\n// WARNING: Removing unreachable block (ram,0x00428589)\n// WARNING: Removing unreachable block (ram,0x004285af)\n// WARNING: Removing unreachable block (ram,0x004285b4)\n// WARNING: Removing unreachable block (ram,0x004285b9)\n// WARNING: Removing unreachable block (ram,0x004285c6)\n// WARNING: Removing unreachable block (ram,0x004285d7)\n// WARNING: Removing unreachable block (ram,0x00428608)\n// WARNING: Removing unreachable block (ram,0x004285dd)\n// WARNING: Removing unreachable block (ram,0x00428603)\n// WARNING: Removing unreachable block (ram,0x004285e7)\n// WARNING: Removing unreachable block (ram,0x004285fd)\n// WARNING: Removing unreachable block (ram,0x004285f6)\n// WARNING: Removing unreachable block (ram,0x0042860b)\n// WARNING: Removing unreachable block (ram,0x00428638)\n// WARNING: Removing unreachable block (ram,0x00428615)\n// WARNING: Removing unreachable block (ram,0x004284a0)\n// WARNING: Removing unreachable block (ram,0x0042847d)\n// WARNING: Removing unreachable block (ram,0x00428673)\n// WARNING: Removing unreachable block (ram,0x004283b8)\n// WARNING: Removing unreachable block (ram,0x0042867d)\n// WARNING: Removing unreachable block (ram,0x004286be)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0042801b(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0041b192();\n        *puVar2 = 0x16;\n        fcn.0041d6dc(0, 0, 0, 0, 0);\n        fcn.00419910(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004280ae. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x4286e3\n    (**0x4286e3)();\n    return;\n}\n",
        "token_count": 1781
    },
    "00428713": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x00428c51)\n// WARNING: Removing unreachable block (ram,0x00428c5b)\n// WARNING: Removing unreachable block (ram,0x00428c60)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00428713(uint32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint16_t *puVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    uint16_t uVar14;\n    char cVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int16_t *piVar18;\n    int16_t *piVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    char *pcVar22;\n    uint var_74h;\n    uint16_t *var_70h;\n    int32_t *var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    var_10h._0_1_ = arg_8h;\n    var_10h._1_1_ = arg_8h >> 8;\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_ch._0_2_ = noname_1;\n    var_ch._2_2_ = noname_1 >> 0x10;\n    var_8h._0_2_ = noname_2;\n    uVar6 = var_8h & 0x8000;\n    uVar12 = var_8h & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h = 0xcc;\n    var_27h = 0xcc;\n    var_26h = 0xfb;\n    var_25h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if ((((noname_2 & 0x7fff) == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar6 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n        goto code_r0x00428fee;\n    }\n    if (uVar12 == 0x7fff) {\n        *arg_1ch = 1;\n        var_ch = noname_1;\n        if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n            if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x0042884a;\n                pcVar22 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x0042884a:\n                    pcVar22 = \"1#QNAN\";\n                    goto code_r0x0042884f;\n                }\n                pcVar22 = \"1#IND\";\n            }\n            iVar7 = fcn.004242ab(arg_1ch + 2, 0x16, pcVar22);\n            if (iVar7 != 0) {\n                fcn.0041d5b4(0, 0, 0, 0, 0);\n            }\n            *(arg_1ch + 3) = 5;\n            noname_1 = var_ch;\n        }\n        else {\n            pcVar22 = \"1#SNAN\";\ncode_r0x0042884f:\n            iVar7 = fcn.004242ab(arg_1ch + 2, 0x16, pcVar22);\n            noname_1 = var_ch;\n            if (iVar7 != 0) {\n                fcn.0041d5b4(0, 0, 0, 0, 0);\n                noname_1 = var_ch;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        goto code_r0x00428fee;\n    }\n    var_4ch._0_2_ =\n         (((noname_2 & 0x7fff) >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + (noname_2 & 0x7fff) * 0x4d10 >>\n         0x10;\n    uVar16 = var_4ch;\n    var_20h._0_2_ = 0;\n    var_16h._0_1_ = uVar12;\n    var_16h._1_1_ = uVar12 >> 8;\n    var_1ah._0_2_ = var_ch;\n    var_1ah._2_2_ = var_ch._2_2_;\n    var_20h._2_2_ = arg_8h;\n    var_68h = 0x439d00;\n    var_1ch = var_10h._2_2_;\n    var_1ah = noname_1;\n    if (-uVar16 != 0) {\n        uVar17 = -uVar16;\n        uVar11 = arg_8h;\n        if (0 < uVar16) {\n            var_68h = 0x439e60;\n            uVar17 = uVar16;\n        }\njoined_r0x004288dd:\n        var_1ch = uVar11 >> 0x10;\n        arg_8h = uVar11 & 0xffff | var_10h._2_2_ << 0x10;\n        if (uVar17 != 0) {\n            var_68h = var_68h + 0x54;\n            uVar16 = uVar17 & 7;\n            uVar17 = uVar17 >> 3;\n            if (uVar16 != 0) {\n                piVar10 = uVar16 * 0xc + var_68h;\n                if (0x7fff < *piVar10) {\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    piVar2 = piVar10 + 2;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    piVar10 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar7 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar7;\n                    var_38h._0_2_ = iVar7 >> 0x10;\n                }\n                var_48h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar13 = (*(piVar10 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar14 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar9 = *(piVar10 + 10) & 0x7fff;\n                uVar12 = uVar9 + uVar14;\n                if (((uVar14 < 0x7fff) && (uVar9 < 0x7fff)) && (uVar12 < 0xbffe)) {\n                    if (0x3fbf < uVar12) {\n                        if (((uVar14 == 0) &&\n                            (uVar12 = uVar12 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(var_1ah, var_1ch) == 0 && (CONCAT22(uVar11, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            noname_1 = 0;\n                            goto joined_r0x004288dd;\n                        }\n                        if ((((uVar9 != 0) || (uVar12 = uVar12 + 1,  (piVar10[2] & 0x7fffffffU) != 0)) ||\n                            (piVar10[1] != 0)) || (*piVar10 != 0)) {\n                            var_54h = 0;\n                            puVar21 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_70h = &var_20h + var_54h * 2;\n                                    var_6ch = piVar10 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar16 = puVar21[-1] + *var_70h * *var_6ch;\n                                        if ((uVar16 < puVar21[-1]) || (uVar16 < *var_70h * *var_6ch)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar21[-1] = uVar16;\n                                        if (bVar5) {\n                                            *puVar21 = *puVar21 + 1;\n                                        }\n                                        var_70h = var_70h + 1;\n                                        var_6ch = var_6ch + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar21 = puVar21 + 2;\n                                var_54h = var_54h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar12 = uVar12 + 0xc002;\n                            if (uVar12 < 1) {\ncode_r0x00428a91:\n                                uVar12 = uVar12 - 1;\n                                if (uVar12 < 0) {\n                                    uVar16 = -uVar12;\n                                    uVar12 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_48h = var_48h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar7 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar20 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar7 << 0x1f) >> 0x10;\n                                        uVar16 = uVar16 - 1;\n                                        var_ch._0_2_ = uVar11 >> 1;\n                                        var_10h._0_1_ = uVar20;\n                                        var_10h._1_1_ = uVar20 >> 8;\n                                    } while (uVar16 != 0);\n                                    if (var_48h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar14 = var_ch._2_2_;\n                                    uVar9 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar7 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar7;\n                                    var_10h._1_1_ = iVar7 >> 8;\n                                    var_10h._2_2_ = iVar7 >> 0x10;\n                                    iVar7 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar7 | uVar9 >> 0xf;\n                                    var_ch._2_2_ = iVar7 >> 0x10;\n                                    iVar7 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar7 | uVar14 >> 0xf;\n                                    uVar12 = uVar12 - 1;\n                                    var_8h._2_2_ = iVar7 >> 0x10;\n                                } while (0 < uVar12);\n                                if (uVar12 < 1) goto code_r0x00428a91;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar12 = uVar12 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar7 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar7;\n                                        var_8h._0_2_ = iVar7 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar7 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar7;\n                                    var_ch._0_2_ = iVar7 >> 0x10;\n                                }\n                            }\n                            noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            if (uVar12 < 0x7fff) {\n                                var_16h._1_1_ = uVar12 >> 8 | uVar13 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar12;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                uVar11 = 0;\n                                iVar7 = ((uVar13 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar7;\n                                var_1ah = 0x80000000;\n                                var_16h._0_1_ = iVar7 >> 0x10;\n                                var_16h._1_1_ = iVar7 >> 0x18;\n                                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            }\n                            goto joined_r0x004288dd;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar7 = ((uVar13 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar7;\n                    var_16h._0_1_ = iVar7 >> 0x10;\n                    var_16h._1_1_ = iVar7 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                var_1ah = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                uVar11 = 0;\n                noname_1 = 0;\n            }\n            goto joined_r0x004288dd;\n        }\n    }\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    uVar16 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar16 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        arg_8h = arg_8h & 0xffff;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar16 = uVar16 >> 0x10 & 0x7fff;\n        iVar7 = uVar16 + 0x3ffb;\n        if ((uVar16 < 0x7fff) && (iVar7 < 0xbffe)) {\n            if (0x3fbf < iVar7) {\n                if ((((uVar16 == 0) &&\n                     (iVar7 = uVar16 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    noname_1 = 0;\n                    goto code_r0x00428e26;\n                }\n                var_54h = 0;\n                puVar21 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_48h = var_40h;\n                    if (0 < var_40h) {\n                        var_58h = &var_28h;\n                        puVar8 = &var_20h + var_54h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar16 = puVar21[-1] + *var_58h * *puVar8;\n                            if ((uVar16 < puVar21[-1]) || (uVar16 < *var_58h * *puVar8)) {\n                                bVar5 = true;\n                            }\n                            puVar21[-1] = uVar16;\n                            if (bVar5) {\n                                *puVar21 = *puVar21 + 1;\n                            }\n                            var_58h = var_58h + -1;\n                            puVar8 = puVar8 + 1;\n                            var_48h = var_48h + -1;\n                        } while (0 < var_48h);\n                    }\n                    puVar21 = puVar21 + 2;\n                    var_54h = var_54h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar7 = iVar7 + 0xc002;\n                if (iVar7 < 1) {\ncode_r0x00428d1f:\n                    uVar12 = iVar7 + 0xffff;\n                    if (uVar12 < 0) {\n                        uVar16 = -(iVar7 + 0xffff) & 0xffff;\n                        uVar12 = uVar12 + uVar16;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar17 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar7 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar11 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar7 << 0x1f) >> 0x10;\n                            uVar16 = uVar16 - 1;\n                            var_ch._0_2_ = uVar17 >> 1;\n                            var_10h._0_1_ = uVar11;\n                            var_10h._1_1_ = uVar11 >> 8;\n                        } while (uVar16 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar9 = var_ch._2_2_;\n                        uVar12 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar12 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar9 >> 0xf;\n                        iVar7 = iVar7 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar7);\n                    uVar12 = iVar7;\n                    if (uVar12 < 1) goto code_r0x00428d1f;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar12 = uVar12 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar7 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar7;\n                            var_8h._0_2_ = iVar7 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar7 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar7;\n                        var_ch._0_2_ = iVar7 >> 0x10;\n                    }\n                }\n                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                if (uVar12 < 0x7fff) {\n                    var_16h._1_1_ = uVar12 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_10h._2_2_, var_ch);\n                    var_1ch = var_ch._2_2_;\n                    var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar12;\n                }\n                else {\n                    var_1ch = 0;\n                    var_20h._0_2_ = 0;\n                    arg_8h = var_10h._2_2_ << 0x10;\n                    iVar7 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah = 0x80000000;\n                    var_16h._0_1_ = iVar7 >> 0x10;\n                    var_16h._1_1_ = iVar7 >> 0x18;\n                    noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                }\n                goto code_r0x00428e26;\n            }\n            iVar7 = 0;\n        }\n        else {\n            iVar7 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        var_1ch = 0;\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        var_1ah = iVar7 << 0x10;\n        var_16h._0_1_ = iVar7 >> 0x10;\n        var_16h._1_1_ = iVar7 >> 0x18;\n        noname_1 = 0;\n    }\ncode_r0x00428e26:\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar7 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            uVar12 = var_20h._2_2_;\n            var_1ah._2_2_ = var_1ah >> 0x10;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar12 >> 0xf;\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar7 < 0) && (uVar16 = -iVar7 & 0xff,  uVar16 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar11 = CONCAT22(var_1ah, var_1ch);\n                iVar7 = CONCAT22(var_1ah, var_1ch);\n                uVar17 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar17;\n                var_16h._0_1_ = uVar17 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar17 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar7 << 0x1f) >> 0x10;\n                uVar16 = uVar16 - 1;\n                var_1ch = uVar11 >> 1;\n                var_20h._0_2_ = uVar17 >> 1;\n            } while (0 < uVar16);\n        }\n        piVar1 = arg_1ch + 2;\n        piVar18 = piVar1;\n        uVar12 = var_20h;\n        uVar9 = var_20h._2_2_;\n        uVar13 = var_1ch;\n        uVar14 = var_1ah;\n        for (arg_14h = arg_14h + 1; var_1ah = CONCAT22(var_1ah._2_2_, uVar14),  0 < arg_14h; arg_14h = arg_14h + -1) {\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar17 = CONCAT22(uVar9, uVar12) * 4;\n            uVar16 = CONCAT22(uVar14, uVar13) * 2;\n            uVar11 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar14 >> 0xf) * 2 |\n                     uVar16 >> 0x1f;\n            uVar20 = (uVar16 | uVar9 >> 0xf) * 2 | (CONCAT22(uVar9, uVar12) << 1) >> 0x1f;\n            uVar16 = CONCAT22(uVar9, uVar12) + uVar17;\n            if ((uVar16 < uVar17) || (uVar17 = uVar20,  uVar16 < CONCAT22(uVar9, uVar12))) {\n                uVar17 = uVar20 + 1;\n                bVar5 = false;\n                if ((uVar17 < uVar20) || (uVar17 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n            uVar20 = CONCAT22(uVar14, uVar13) + uVar17;\n            if ((uVar20 < uVar17) || (uVar20 < CONCAT22(uVar14, uVar13))) {\n                uVar11 = uVar11 + 1;\n            }\n            iVar7 = (uVar11 + var_34h) * 2;\n            var_1ah._2_2_ = iVar7 | uVar20 >> 0x1f;\n            var_20h._0_2_ = uVar16 * 2;\n            var_20h._2_2_ = uVar16 * 2 >> 0x10;\n            var_16h._0_1_ = iVar7 >> 0x10;\n            var_1ch = uVar20 * 2 | uVar16 >> 0x1f;\n            *piVar18 = (iVar7 >> 0x18) + '0';\n            piVar18 = piVar18 + 1;\n            var_1ah._0_2_ = uVar20 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar12;\n            var_3ch._2_2_ = uVar9;\n            var_38h._0_2_ = uVar13;\n            var_38h._2_2_ = uVar14;\n            uVar12 = var_20h;\n            uVar9 = var_20h._2_2_;\n            uVar13 = var_1ch;\n            uVar14 = var_1ah;\n        }\n        piVar19 = piVar18 + -1;\n        var_20h._0_2_ = uVar12;\n        var_20h._2_2_ = uVar9;\n        var_1ch = uVar13;\n        if (*(piVar18 + -1) < '5') {\n            for (; (piVar1 <= piVar19 && (*piVar19 == '0')); piVar19 = piVar19 + -1) {\n            }\n            if (piVar19 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((uVar6 != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x00428fee;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar19 && (*piVar19 == '9')); piVar19 = piVar19 + -1) {\n                *piVar19 = 0x30;\n            }\n            if (piVar19 < piVar1) {\n                piVar19 = piVar19 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar19 = *piVar19 + '\\x01';\n        }\n        cVar15 = (piVar19 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar15;\n        *(cVar15 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 1) = ((uVar6 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x00428fee:\n    var_ch = noname_1;\n    fcn.00419910(1);\n    return;\n}\n",
        "token_count": 9014
    },
    "00401ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** fcn.00401ba0(int32_t **param_1)\n\n{\n    int32_t arg_ch;\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    piVar1 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar1 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar2 = (***piVar1)(param_1[1], 2);\n    if (ppiVar2 == NULL) {\n        fcn.00402020();\n    }\n    ppiVar2[1] = param_1[1];\n    arg_ch = param_1[1] * 2 + 2;\n    fcn.0041991f(ppiVar2 + 4, arg_ch, param_1 + 4, arg_ch);\n    return ppiVar2;\n}\n",
        "token_count": 226
    },
    "00401f30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f30(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00402330(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00402070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402070(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 2);\n        if (iVar4 == 0) {\n            fcn.00402020();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        arg_ch = param_2 * 2 + 2;\n        fcn.0041991f(iVar4 + 0x10, arg_ch, iVar5, arg_ch);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 2);\n        if (iVar5 != 0) goto code_r0x0040205e;\n    }\n    iVar5 = fcn.00402020();\ncode_r0x0040205e:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 610
    },
    "00402810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402810(int32_t *param_1)\n\n{\n    int16_t iVar1;\n    uint *in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t *piVar5;\n    uint uStack32;\n    uchar *puStack28;\n    uint *puStack24;\n    uint *puStack20;\n    \n    puStack20 = in_EAX;\n    if (in_EAX != NULL) {\n        puVar2 = in_EAX;\n        do {\n            iVar1 = *puVar2;\n            puVar2 = puVar2 + 2;\n        } while (iVar1 != 0);\n        puStack20 = puVar2 - (in_EAX + 2) >> 1;\n    }\n    puStack28 = 0x402848;\n    puStack24 = in_EAX;\n    fcn.00402120();\n    puStack28 = &stack0xfffffff0;\n    *(unaff_ESI + 8) = unaff_EDI;\n    uStack32 = 0x431290;\n    (***param_1)();\n    piVar5 = unaff_EDI;\n    (**(*unaff_EDI + 0xc))();\n    *(unaff_ESI + 0xc) = *puStack24;\n    *(unaff_ESI + 0x10) = puStack24[1];\n    *(unaff_ESI + 0x14) = puStack24[2];\n    *(unaff_ESI + 0x18) = puStack24[3];\n    (**(*param_1 + 0x10))(param_1, unaff_ESI + 0xc, &stack0xffffffe0);\n    iVar4 = unaff_ESI + 0x1c;\n    iVar3 = (**(*piVar5 + 0x14))(piVar5);\n    if ((iVar3 != 0) && (*(unaff_ESI + 0x2c) != 0)) {\n        iVar4 = fcn.0040b0a1(iVar4);\n        (*_sym.imp.USER32.dll_MessageBoxW)(0, 0x431390, *(iVar4 + 0x10), 0);\n    }\n    (**(*unaff_EDI + 0x4c))();\n    return;\n}\n",
        "token_count": 527
    },
    "00419f94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f94(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_ch != 0) {\n        do {\n            if (*arg_8h == 0) {\n                return;\n            }\n            uVar1 = uVar1 + 1;\n            arg_8h = arg_8h + 1;\n        } while (uVar1 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00403210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403210(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 == ppiVar5) {\n        return param_1;\n    }\n    piVar2 = iVar4 + -4;\n    if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n        iVar4 = fcn.00401ba0(ppiVar1);\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *param_1 = iVar4 + 0x10;\n        return param_1;\n    }\n    fcn.00402120(iVar3, *(iVar3 + -0xc));\n    return param_1;\n}\n",
        "token_count": 300
    },
    "00403ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00403ec0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t uStack24;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b5c8;\n    piStack12 = *in_FS_OFFSET;\n    uStack24 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(param_1 + 0x54) == 0) {\n        uStack4 = 0xffffffff;\n        piVar1 = param_2 + -4;\n        LOCK();\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar6 == 1 || iVar6 + -1 < 0) {\n            (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n        }\n        *in_FS_OFFSET = piStack12;\n        return false;\n    }\n    iVar6 = *(param_2 + -0xc);\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(param_2);\n    if (uVar3 == 0) {\n        uVar3 = fcn.00402020();\n    }\n    piVar5 = 0x1;\n    uStack24 = uVar3;\n    iVar4 = (**(**(param_1 + 0x54) + 0x14))(*(param_1 + 0x54), 0x431250, &uStack24, 1, 0x800, unaff_retaddr);\n    piVar1 = iVar6 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iVar6 + -0x10) + 4))(iVar6 + -0x10);\n    }\n    *in_FS_OFFSET = piVar5;\n    return iVar4 == 0;\n}\n",
        "token_count": 547
    },
    "004049b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004049b0(int32_t **param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint unaff_EBP;\n    int32_t *unaff_ESI;\n    uint16_t uVar3;\n    int32_t *piStack12;\n    int32_t iStack4;\n    \n    pcVar2 = *(*unaff_ESI + 0xc);\n    *param_1 = unaff_ESI;\n    (*pcVar2)();\n    uVar1 = *(iStack4 + 0x30);\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        do {\n            (**(*unaff_ESI + 0x24))();\n            if ((unaff_EBP & 3) == 3) {\n                (**(*unaff_ESI + 0x20))();\n                (**(*unaff_ESI + 0x38))();\n                *param_1 = piStack12;\n                break;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    (**(*unaff_ESI + 0x4c))();\n    return;\n}\n",
        "token_count": 263
    },
    "00405510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405510(uint param_1, int16_t *param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    int32_t *in_FS_OFFSET;\n    uchar *puVar9;\n    uchar *puVar10;\n    char16_t *pcVar11;\n    uchar *puStack1536;\n    int32_t iStack1532;\n    uchar *puStack1528;\n    uchar *puStack1524;\n    int32_t **ppiStack1520;\n    uchar *puStack1516;\n    uchar *puStack1512;\n    uint uStack1508;\n    uint uStack1504;\n    uint uStack1500;\n    uchar *puStack1496;\n    uchar *puStack1492;\n    uchar *puStack1488;\n    uint uStack1484;\n    uint uStack1480;\n    uchar *puStack1476;\n    int32_t iStack1472;\n    uchar *puStack1468;\n    uchar *puStack1464;\n    uchar *puStack1460;\n    uchar *puStack1456;\n    int16_t *piStack1452;\n    uchar *puStack1448;\n    char *pcStack1444;\n    uint uStack1440;\n    uchar *puStack1432;\n    uint uStack1428;\n    uchar *puStack1424;\n    int32_t iStack1416;\n    uint uStack1412;\n    uint32_t uStack1408;\n    uint uStack1388;\n    int32_t *apiStack1364 [2];\n    uchar auStack1356 [12];\n    uint uStack1344;\n    uchar auStack1332 [20];\n    uchar auStack1312 [32];\n    uchar auStack1280 [32];\n    uchar auStack1248 [24];\n    uchar auStack1224 [156];\n    ushort uStack1068;\n    uchar auStack728 [684];\n    int32_t iStack44;\n    uint uStack36;\n    uint32_t uStack20;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42bd0b;\n    iStack12 = *in_FS_OFFSET;\n    uStack20 = *0x438ddc ^ &stack0xfffffa94;\n    uStack1408 = *0x438ddc ^ &stack0xfffffa84;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack1412 = 0x432320;\n    uStack1344 = param_3;\n    uStack1068 = 0;\n    iStack1416 = 0x405574;\n    fcn.00403570();\n    uStack8 = 0;\n    if (param_2 == NULL) {\n        iStack1416 = 0;\n    }\n    else {\n        piVar4 = param_2;\n        do {\n            iVar2 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar2 != 0);\n        iStack1416 = piVar4 - (param_2 + 1) >> 1;\n    }\n    puStack1424 = 0x4055aa;\n    piVar4 = param_2;\n    fcn.00402970();\n    pcVar3 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    puStack1424 = &stack0xfffffa8c;\n    uStack1428 = 0x20019;\n    puStack1432 = NULL;\n    uStack1440 = 0x80000000;\n    pcStack1444 = 0x4055c8;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    if (iVar5 != 0) {\n        pcStack1444 = \"Wow6432Node\\\\TypeLib\\\\\";\n        puStack1448 = 0x4055da;\n        fcn.004032d0();\n        if (param_2 == NULL) {\n            puStack1448 = NULL;\n        }\n        else {\n            piVar6 = param_2;\n            do {\n                iVar2 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar2 != 0);\n            puStack1448 = piVar6 - (param_2 + 1) >> 1;\n        }\n        puStack1456 = 0x405601;\n        piStack1452 = param_2;\n        fcn.00402970();\n        puStack1456 = &stack0xfffffa6c;\n        puStack1460 = 0x20019;\n        puStack1464 = NULL;\n        puStack1468 = puStack1432;\n        iStack1472 = -0x80000000;\n        puStack1476 = 0x405619;\n        iVar5 = (*pcVar3)();\n        if (iVar5 != 0) {\n            piVar1 = piVar4 + -2;\n            LOCK();\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            goto code_r0x0040587c;\n        }\n    }\n    pcVar8 = _sym.imp.ADVAPI32.dll_RegEnumKeyExW;\n    pcStack1444 = &stack0xfffffaac;\n    puStack1448 = NULL;\n    piStack1452 = NULL;\n    puStack1456 = NULL;\n    puStack1460 = &stack0xfffffa8c;\n    puStack1464 = &stack0xfffffab4;\n    puStack1468 = NULL;\n    iStack1472 = iStack1416;\n    uStack1388 = 0x80;\n    puStack1476 = 0x40567e;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)();\n    puVar10 = puStack1492;\n    puStack1492 = puStack1448;\n    while (iVar5 == 0) {\n        puStack1476 = &stack0xfffffa60;\n        uStack1480 = 0x20019;\n        uStack1484 = 0;\n        puStack1488 = &stack0xfffffa94;\n        puStack1496 = 0x40569e;\n        puStack1448 = puStack1492;\n        iVar5 = (*pcVar3)();\n        if (iVar5 == 0) {\n            iVar5 = 0;\n            puStack1496 = &stack0xfffffa70;\n            uStack1500 = 0;\n            uStack1504 = 0;\n            uStack1508 = 0;\n            puStack1512 = &stack0xfffffa54;\n            puStack1516 = &stack0xfffffb00;\n            ppiStack1520 = NULL;\n            puStack1524 = puStack1460;\n            piStack1452 = 0x40;\n            puStack1528 = 0x4056c9;\n            iVar7 = (*pcVar8)();\n            while (iVar7 == 0) {\n                puStack1528 = &stack0xfffffa30;\n                iStack1532 = 0x20019;\n                puStack1536 = NULL;\n                iVar7 = (*pcVar3)(puStack1492, &stack0xfffffae0);\n                if (iVar7 == 0) {\n                    pcVar11 = L\"win32\";\n                    iVar7 = (*pcVar3)(uStack1508, L\"win32\", 0, 0x20019, &stack0xfffffa14);\n                    if ((iVar7 == 0) ||\n                       (iVar7 = (*pcVar3)(puStack1528, L\"win64\", 0, 0x20019, &stack0xfffffa00),  iVar7 == 0)) {\n                        puVar10 = &stack0xfffffa18;\n                        puStack1512 = 0x105;\n                        puVar9 = puStack1536;\n                        iVar7 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                          (puStack1536, 0, 0, &stack0xfffffa1c, &stack0xfffffb38, puVar10);\n                        if (iVar7 == 0) {\n                            if (iStack1532 != 1) {\n                                if (iStack1532 != 2) goto code_r0x004057d2;\n                                iVar7 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)\n                                                  (&stack0xfffffb20, &stack0xfffffd28, 0x104);\n                                if (iVar7 != 0) {\n                                    fcn.0041a50c(&stack0xfffffb20, 0x104, &stack0xfffffd28);\n                                }\n                            }\n                            puVar9 = &stack0xfffffb20;\n                            iVar7 = fcn.004058f0();\n                            pcVar8 = _sym.imp.ADVAPI32.dll_RegEnumKeyExW;\n                            if (0 < iVar7) {\n                                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar10);\n                                uStack36 = 0xffffffff;\n                                piVar1 = piVar4 + -2;\n                                LOCK();\n                                iVar5 = *piVar1;\n                                *piVar1 = *piVar1 + -1;\n                                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                                    puStack1448 = 0x4058ea;\n                                    pcStack1444 = piVar4 + -8;\n                                    (**(**(piVar4 + -8) + 4))();\n                                }\n                                goto code_r0x0040588a;\n                            }\n                        }\ncode_r0x004057d2:\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(pcVar11, puVar9);\n                    }\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack1528);\n                }\n                iVar5 = iVar5 + 1;\n                uStack1504 = 0x40;\n                iVar7 = (*pcVar8)(puStack1512, iVar5, &stack0xfffffacc, &stack0xfffffa20, 0, 0, 0, &stack0xfffffa3c);\n            }\n            iStack1532 = 0x405820;\n            puStack1528 = puStack1492;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n        puStack1496 = &stack0xfffffa78;\n        uStack1500 = 0;\n        uStack1504 = 0;\n        uStack1508 = 0;\n        puStack1512 = &stack0xfffffa58;\n        puStack1516 = &stack0xfffffa80;\n        ppiStack1520 = pcStack1444 + 1;\n        puStack1524 = puStack1468;\n        puStack1448 = 0x40;\n        puStack1528 = 0x40584a;\n        pcStack1444 = ppiStack1520;\n        iVar5 = (*pcVar8)();\n        puVar10 = puStack1492;\n        puStack1492 = puStack1448;\n    }\n    uStack1480 = 0x40585d;\n    puStack1476 = puStack1492;\n    puStack1492 = puVar10;\n    puStack1448 = puStack1476;\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    piVar1 = piVar4 + -2;\n    LOCK();\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\ncode_r0x0040587c:\n    uStack36 = 0xffffffff;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        puStack1448 = 0x405888;\n        pcStack1444 = piVar4 + -8;\n        (**(**(piVar4 + -8) + 4))();\n    }\ncode_r0x0040588a:\n    *in_FS_OFFSET = iStack44;\n    puStack1424 = 0x4058ab;\n    fcn.00419910(piVar4);\n    return;\n}\n",
        "token_count": 2700
    },
    "00405b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405b60(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t **ppiVar6;\n    uint unaff_EBX;\n    code *pcVar7;\n    int32_t unaff_ESI;\n    uint32_t *in_FS_OFFSET;\n    bool bVar8;\n    bool bVar9;\n    char16_t *pcVar10;\n    uchar *puVar11;\n    uint uVar12;\n    uchar *puVar13;\n    char16_t *pcStack1912;\n    int32_t iVar14;\n    uint32_t uStack1892;\n    uint uStack1872;\n    char16_t *pcStack1868;\n    uint uStack1864;\n    uint uStack1856;\n    uint uStack1848;\n    int16_t iStack1844;\n    uchar auStack1842 [254];\n    char16_t acStack1588 [96];\n    char16_t acStack1396 [12];\n    uchar auStack1372 [16];\n    uchar auStack1356 [24];\n    uchar auStack1332 [504];\n    uchar auStack828 [4];\n    uchar auStack824 [212];\n    uchar auStack612 [40];\n    uchar auStack572 [556];\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42bd7b;\n    uStack12 = *in_FS_OFFSET;\n    uStack16 = *0x438ddc ^ &stack0xfffff8b0;\n    uStack1892 = *0x438ddc ^ &stack0xfffff8a0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack1848 = param_2;\n    fcn.00402270();\n    uStack8 = 0;\n    iStack1844 = 0;\n    if (*(pcStack1868 + -6) == 0) {\n        ppiVar6 = pcStack1868 + -8;\n        piVar1 = pcStack1868 + -2;\n        LOCK();\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        bVar9 = iVar4 + -1 < 0;\n        bVar8 = iVar4 == 1;\n    }\n    else {\n        fcn.00408b60();\n        pcVar3 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n        pcStack1912 = pcStack1868;\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000000);\n        pcVar7 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar4 == 0) {\n            pcStack1912 = NULL;\n            uStack1864 = 0x80;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(uStack1872, 0);\n            if ((iVar4 == 0) && (unaff_ESI == 1)) {\n                fcn.0041a50c(&stack0xfffff8b4, 0x40, &stack0xfffffcc4);\n            }\n            pcVar7 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(param_1);\n        }\n        piVar5 = &stack0xfffff8cc;\n        do {\n            iVar2 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar2 != 0);\n        if (piVar5 - &stack0xfffff8ce >> 1 == 0) {\n            ppiVar6 = pcStack1868 + -8;\n            piVar1 = pcStack1868 + -2;\n            LOCK();\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            bVar9 = iVar4 + -1 < 0;\n            bVar8 = iVar4 == 1;\n        }\n        else {\n            pcStack1912 = 0x405cce;\n            fcn.0041a50c(&stack0xfffff9cc, 0x80, L\"CLSID\\\\\");\n            pcStack1912 = 0x405ce4;\n            fcn.0041a6a9(&stack0xfffff9cc, 0x80, &stack0xfffff8cc);\n            pcStack1912 = &stack0xfffff9cc;\n            iVar4 = (*pcVar3)(0x80000000);\n            uVar12 = unaff_EBX;\n            if (iVar4 == 0) {\ncode_r0x00405d55:\n                iVar14 = 0x20019;\n                pcStack1912 = L\"TypeLib\";\n                iVar4 = (*pcVar3)(uStack1856);\n                if (iVar4 == 0) {\n                    puVar13 = &stack0xfffff8a4;\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                      (uStack1892, 0, 0, &stack0xfffff8a8, &stack0xfffffcc8, puVar13);\n                    unaff_EBX = uVar12;\n                    if (((iVar4 == 0) && (iVar14 == 1)) &&\n                       (iVar4 = fcn.00405510(&stack0xfffff8a0),  unaff_EBX = uVar12,  0 < iVar4)) {\n                        (*pcVar7)(puVar13);\n                        fcn.004023a0();\n                        unaff_EBX = uVar12;\n                        goto code_r0x00405fb4;\n                    }\n                    (*pcVar7)(uStack1856);\n                }\n                else {\n                    iVar14 = 0x20019;\n                    puVar13 = NULL;\n                    unaff_EBX = uVar12;\n                    iVar4 = (*pcVar3)(uVar12, L\"InprocServer32\", 0, 0x20019, &stack0xfffff89c);\n                    pcVar7 = _sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW;\n                    if (iVar4 == 0) {\n                        puVar11 = &stack0xfffffaa4;\n                        pcVar10 = pcStack1912;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                          (pcStack1912, 0, 0, &stack0xfffff894, puVar11, &stack0xfffff890);\n                        if (iVar4 == 0) {\n                            if (iVar14 != 1) {\n                                if (iVar14 != 2) goto code_r0x00405eae;\n                                iVar4 = (*pcVar7)(&stack0xfffffa8c, &stack0xfffffd9c, 0x104);\n                                if (iVar4 != 0) {\n                                    fcn.0041a50c(&stack0xfffffa8c, 0x104, &stack0xfffffd9c);\n                                }\n                            }\n                            pcVar10 = &stack0xfffffa8c;\n                            iVar4 = fcn.004058f0();\n                            if (0 < iVar4) {\n                                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar11);\n                                fcn.004023a0();\n                                goto code_r0x00405fb4;\n                            }\n                        }\ncode_r0x00405eae:\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar12, pcVar10);\n                    }\n                    iVar4 = (*pcVar3)(param_1, L\"LocalServer32\", 0, 0x20019, &stack0xfffff888);\n                    if (iVar4 == 0) {\n                        puVar11 = &stack0xfffffacc;\n                        pcStack1912 = NULL;\n                        uStack1864 = 0x105;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(uStack1872, 0);\n                        if (iVar4 == 0) {\n                            if (unaff_ESI != 1) {\n                                if (unaff_ESI != 2) goto code_r0x00405f7c;\n                                puVar13 = &stack0xfffffdc4;\n                                iVar4 = (*pcVar7)(&stack0xfffffab4, puVar13, 0x104);\n                                if (iVar4 != 0) {\n                                    puVar13 = 0x104;\n                                    fcn.0041a50c(&stack0xfffffab4, 0x104, &stack0xfffffdc4);\n                                }\n                            }\n                            iVar4 = fcn.004058f0(puVar13, unaff_EBX, &stack0xfffffab4);\n                            if (0 < iVar4) {\n                                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar11);\n                                fcn.004023a0();\n                                goto code_r0x00405fb4;\n                            }\n                        }\ncode_r0x00405f7c:\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(param_1);\n                    }\n                }\n            }\n            else {\n                pcStack1912 = 0x405d19;\n                fcn.0041a50c(&stack0xfffff9cc, 0x80, L\"Wow6432Node\\\\CLSID\\\\\");\n                pcStack1912 = 0x405d2f;\n                fcn.0041a6a9(&stack0xfffff9cc, 0x80, &stack0xfffff8cc);\n                pcStack1912 = &stack0xfffff9cc;\n                iVar4 = (*pcVar3)(0x80000000);\n                uVar12 = unaff_EBX;\n                if (iVar4 == 0) goto code_r0x00405d55;\n            }\n            ppiVar6 = pcStack1868 + -8;\n            piVar1 = pcStack1868 + -2;\n            LOCK();\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            bVar9 = iVar4 + -1 < 0;\n            bVar8 = iVar4 == 1;\n        }\n    }\n    uStack8 = 0xffffffff;\n    if (bVar8 || bVar9) {\n        (**(**ppiVar6 + 4))();\n    }\ncode_r0x00405fb4:\n    *in_FS_OFFSET = uStack16;\n    fcn.00419910(unaff_EBX);\n    return;\n}\n",
        "token_count": 2350
    },
    "004086b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004086b0(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    ushort *puVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    uint32_t uVar10;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t **var_14h;\n    uchar *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42b987;\n    var_ch_2 = *in_FS_OFFSET;\n    puStack20 = &stack0xffffffb0;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar6 = fcn.00409a58(0x34);\n    iVar8 = 0;\n    var_4h = 0;\n    if (iVar6 == 0) {\n        var_20h = 0;\n    }\n    else {\n        var_20h = fcn.00402b00(iVar6);\n    }\n    var_4h = 0xffffffff;\n    uVar10 = *(param_1 + 0x28);\n    var_1ch = fcn.00409a87(-(uVar10 * 0x10 >> 0x20 != 0) | uVar10 * 0x10);\n    fcn.0040a5a0();\n    var_4h = 2;\n    while( true ) {\n        var_18h = iVar8;\n        if (uVar10 <= iVar8) goto code_r0x004089c5;\n        if ((iVar8 < 0) || (*(param_1 + 0x28) <= iVar8)) break;\n        iVar6 = *(*(param_1 + 0x24) + iVar8 * 4);\n        ppiVar9 = iVar6 + -0x10;\n        piVar7 = (**(**(iVar6 + -0x10) + 0x10))();\n        if ((*(iVar6 + -4) < 0) || (piVar7 != *ppiVar9)) {\n            ppiVar9 = (***piVar7)(*(iVar6 + -0xc), 2);\n            if (ppiVar9 == NULL) {\n                fcn.00402020();\n            }\n            ppiVar9[1] = *(iVar6 + -0xc);\n            fcn.0041991f(ppiVar9 + 4, *(iVar6 + -0xc) * 2 + 2, iVar6, *(iVar6 + -0xc) * 2 + 2);\n        }\n        else {\n            LOCK();\n            *(iVar6 + -4) = *(iVar6 + -4) + 1;\n        }\n        var_14h = ppiVar9 + 4;\n        var_4h._0_1_ = 3;\n        piVar7 = fcn.00408f10(&var_24h, 1);\n        var_4h._0_1_ = 4;\n        iVar6 = *piVar7;\n        ppiVar1 = iVar6 + -0x10;\n        if (ppiVar1 != ppiVar9) {\n            ppiVar2 = ppiVar9 + 3;\n            if ((ppiVar9[3] < 0) || (*ppiVar1 != *ppiVar9)) {\n                fcn.00402120(iVar6, *(iVar6 + -0xc));\n            }\n            else {\n                iVar8 = fcn.00401ba0(ppiVar1);\n                LOCK();\n                piVar7 = *ppiVar2;\n                *ppiVar2 = *ppiVar2 + -1;\n                if (piVar7 == 0x1 || piVar7 + -1 < 0) {\n                    (**(**ppiVar9 + 4))(ppiVar9);\n                }\n                var_14h = iVar8 + 0x10;\n                iVar8 = var_18h;\n            }\n        }\n        var_4h._0_1_ = 3;\n        piVar7 = var_24h + -4;\n        LOCK();\n        iVar6 = *piVar7;\n        *piVar7 = *piVar7 + -1;\n        if (iVar6 == 1 || iVar6 + -1 < 0) {\n            (**(**(var_24h + -0x10) + 4))(var_24h + -0x10);\n        }\n        fcn.00408c10(&var_14h);\n        ppiVar9 = var_14h;\n        if (0 < var_14h[-3]) {\n            iVar6 = fcn.0041a5dc(var_14h, 0x3a);\n            if ((iVar6 != 0) && (iVar6 = iVar6 - ppiVar9 >> 1,  -1 < iVar6)) {\n                piVar7 = fcn.00408fc0(&var_28h, iVar6);\n                var_4h._0_1_ = 5;\n                iVar6 = *piVar7;\n                ppiVar1 = iVar6 + -0x10;\n                ppiVar2 = ppiVar9 + -4;\n                if (ppiVar1 != ppiVar2) {\n                    ppiVar3 = ppiVar9 + -1;\n                    if ((ppiVar9[-1] < 0) || (*ppiVar1 != *ppiVar2)) {\n                        fcn.00402120(iVar6, *(iVar6 + -0xc));\n                        ppiVar9 = var_14h;\n                    }\n                    else {\n                        iVar8 = fcn.00401ba0(ppiVar1);\n                        LOCK();\n                        piVar7 = *ppiVar3;\n                        *ppiVar3 = *ppiVar3 + -1;\n                        if (piVar7 == 0x1 || piVar7 + -1 < 0) {\n                            (**(**ppiVar2 + 4))(ppiVar2);\n                        }\n                        var_14h = iVar8 + 0x10;\n                        iVar8 = var_18h;\n                        ppiVar9 = var_14h;\n                    }\n                }\n                var_4h._0_1_ = 3;\n                piVar7 = var_28h + -4;\n                LOCK();\n                iVar6 = *piVar7;\n                *piVar7 = *piVar7 + -1;\n                if (iVar6 == 1 || iVar6 + -1 < 0) {\n                    (**(**(var_28h + -0x10) + 4))(var_28h + -0x10);\n                }\n            }\n        }\n        puVar4 = iVar8 * 0x10 + var_1ch;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(puVar4);\n        iVar6 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(ppiVar9, ppiVar9[-3]);\n        if (iVar6 == 0) {\n            iVar6 = fcn.00402020();\n        }\n        *(puVar4 + 4) = iVar6;\n        *puVar4 = 8;\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        ppiVar1 = ppiVar9 + -1;\n        LOCK();\n        piVar7 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n        if (piVar7 == 0x1 || piVar7 + -1 < 0) {\n            (**(*ppiVar9[-4] + 4))(ppiVar9 + -4);\n        }\n        iVar8 = iVar8 + 1;\n    }\n    fcn.0040a4b0();\n    pcVar5 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    uVar10 = var_18h - 1;\n    if (-1 < uVar10) {\n        iVar8 = uVar10 * 0x10 + var_1ch;\n        do {\n            (*pcVar5)(iVar8);\n            uVar10 = uVar10 - 1;\n            iVar8 = iVar8 + -0x10;\n        } while (-1 < uVar10);\n    }\n    fcn.00409a92(var_1ch);\n    fcn.0040a5dc();\n    fcn.0041b0c5(0, 0);\ncode_r0x004089c5:\n    var_4h = 0xffffffff;\n    fcn.0040a5b8();\n    *(var_20h + 0x24) = uVar10;\n    *(var_20h + 0x28) = var_1ch;\n    *(var_20h + 0x20) = 0;\n    fcn.00411c59(0x431260);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 2099
    },
    "004095b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004095b0(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00402330(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00409790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409790(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar3 = *param_1;\n    if (param_2 < *(iVar3 + -0xc)) {\n        param_2 = *(iVar3 + -0xc);\n    }\n    if (1 < *(iVar3 + -4)) {\n        iVar3 = *param_1;\n        iVar2 = *(iVar3 + -0xc);\n        ppiVar6 = iVar3 + -0x10;\n        puVar4 = (**(**ppiVar6 + 0x10))();\n        iVar5 = (***puVar4)(param_2, 1);\n        if (iVar5 == 0) {\n            fcn.00402020();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.0041991f(iVar5 + 0x10, param_2 + 1, iVar3, param_2 + 1);\n        *(iVar5 + 4) = iVar2;\n        piVar1 = iVar3 + -4;\n        LOCK();\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar5 + 0x10;\n        return;\n    }\n    iVar3 = *(iVar3 + -8);\n    if (param_2 <= iVar3) {\n        return;\n    }\n    if (iVar3 < 0x401) {\n        iVar3 = iVar3 * 2;\n    }\n    else {\n        iVar3 = iVar3 + 0x400;\n    }\n    if (iVar3 < param_2) {\n        iVar3 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar3) && (0 < iVar3)) {\n        iVar3 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar3, 1);\n        if (iVar3 != 0) goto code_r0x0040988e;\n    }\n    iVar3 = fcn.00402020();\ncode_r0x0040988e:\n    *param_1 = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 597
    },
    "00409c11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c11(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uStack12;\n    uchar *puStack8;\n    \n    while( true ) {\n        if (arg_ch == 0) {\n            return;\n        }\n        arg_ch = arg_ch + -1;\n        if (arg_8h == 0) break;\n        puStack8 = 0x409c29;\n        fcn.00402350();\n        arg_8h = arg_8h + 4;\n    }\n    uStack12 = 0x438440;\n    puStack8 = &stack0xfffffffc;\n    fcn.0041b0c5(&stack0xfffffff4, 0x4342ec);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 193
    },
    "00409c7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c7c(int32_t arg_8h_2, int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    while( true ) {\n        if (arg_8h == 0) {\n            return;\n        }\n        arg_8h = arg_8h + -1;\n        if (arg_8h_2 == 0) break;\n        uStack12 = 0x409c96;\n        fcn.00409beb(0);\n        arg_8h_2 = arg_8h_2 + 4;\n    }\n    uStack12 = 0x438440;\n    fcn.0041b0c5(&stack0xfffffff4, 0x4342ec);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 216
    },
    "00409fcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409fcc(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_01;\n    int32_t unaff_EBP;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_94h;\n    uint var_90h;\n    uint var_4h;\n    \n    fcn.0041ad36(0x118);\n    *(unaff_EBP + -0x120) = arg_8h_01;\n    arg_8h_00 = fcn.00410e11(arg_8h_01, unaff_EBP + -0x124);\n    if (*(unaff_EBP + -0x124) == 1) {\n        fcn.00409ddd(arg_8h_00);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.0041095d(*(unaff_EBP + -0x118), arg_8h_00);\n        if (iVar1 != arg_8h_00) goto code_r0x0040a022;\n    }\n    else {\n        fcn.00409df7(arg_8h_00);\n        *(unaff_EBP + -4) = 2;\n        iVar1 = fcn.0041095d(*(unaff_EBP + -0x94), arg_8h_00 * 2);\n        if (iVar1 == arg_8h_00 * 2) {\n            uVar2 = fcn.00409bc9(*(unaff_EBP + -0x94), arg_8h_00);\n            *(unaff_EBP + -4) = 3;\n            fcn.00403290(uVar2);\n            fcn.00402380();\n            if (*(unaff_EBP + -0x94) != unaff_EBP + -0x90) {\n                fcn.00409b35();\n            }\n            goto code_r0x0040a0e2;\n        }\ncode_r0x0040a022:\n        fcn.004113f7(3, 0);\n    }\n    uVar2 = fcn.00409e11(*(unaff_EBP + -0x118), arg_8h_00);\n    *(unaff_EBP + -4) = 1;\n    fcn.00403290(uVar2);\n    fcn.00402380();\n    if (*(unaff_EBP + -0x118) != unaff_EBP + -0x114) {\n        fcn.00409b35();\n    }\ncode_r0x0040a0e2:\n    fcn.0041adb9();\n    return;\n}\n",
        "token_count": 640
    },
    "0040a3a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a3a8(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "0040a6b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040a6b3(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x43a454 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x42d830);\n        *0x43a454 = iVar2;\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040a4b0();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        *0x43a440 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxW\");\n        *0x43a444 = (*pcVar1)(*0x43a454, \"ReleaseActCtx\");\n        *0x43a448 = (*pcVar1)(*0x43a454, \"ActivateActCtx\");\n        *0x43a44c = (*pcVar1)(*0x43a454, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0040a77c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040a77c(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.0040a4b0();\n    }\n    if (*0x43a448 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0040a74e(arg_8h, arg_ch);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 128
    },
    "0040a7af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a7af(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint var_230h;\n    uint var_22ch;\n    uint *var_228h;\n    uint var_21ch;\n    uint var_214h;\n    uint lpFilename;\n    int16_t var_8h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    fcn.0040a6b3();\n    uVar2 = *(param_1 + 8);\n    var_6h = 0;\n    var_8h = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, &lpFilename);\n    if (iVar1 != 0) {\n        if (var_8h == 0) {\n            var_228h = &lpFilename;\n            puVar3 = &var_230h;\n            var_230h = 0x20;\n            var_22ch = 0x88;\n            var_21ch = 2;\n            var_214h = uVar2;\n            iVar1 = fcn.0040a721(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                var_21ch = 3;\n                uVar2 = fcn.0040a721(&var_230h);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                var_21ch = 1;\n                iVar1 = fcn.0040a721(puVar3, &var_230h);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.00419910(arg_8h);\n    return;\n}\n",
        "token_count": 515
    },
    "0040a9a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a9a8(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x144))();\n    }\n    fcn.00409a92(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0041690a();\n            fcn.00409a92(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "0040abcd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040abcd(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0040b0ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0ed(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040b0a1();\n    if ((*(iVar1 + 0x7c) == 0) || (*(arg_8h + 0x80) == -1)) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0040a74e(*(arg_8h + 0x80));\n        *(in_ECX + 4) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0040b125": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b125(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    fcn.0041b210(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.00419910(arg_8h);\n    return;\n}\n",
        "token_count": 142
    },
    "0040b40d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040b40d(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    ushort uVar11;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x0040b978;\n    // switch table (19 cases) at 0x40b98d\n    switch(*((arg_ch + 0x139aU) * 4 + 0x40b98d)) {\n    case 0x40b4ee:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b50f:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040b713;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x0040b8fa:\n                    *arg_28h = 1;\n                    goto code_r0x0040b978;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b57c:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040b713;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b5c9:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b634:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040b713;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b67e:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x0040b6a1:\n            if (iVar9 < 0) goto code_r0x0040b978;\n            uVar11 = 8;\n            goto code_r0x0040b971;\n        }\n        break;\n    case 0x40b6b2:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x0040b978;\n    case 0x40b6c0:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x0040b978;\n    case 0x40b6ce:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040b6a1;\n        }\n        break;\n    case 0x40b6f3:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x0040b713:\n                *arg_28h = 0;\n                goto code_r0x0040b978;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x0040b77a;\n        }\n        break;\n    case 0x40b78b:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040b6a1;\n        }\n        break;\n    case 0x40b7b3:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b7d7:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040b978;\n        }\n        break;\n    case 0x40b7fb:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040b6a1;\n        }\n        break;\n    case 0x40b823:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040b8a0;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0040b8fa;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0040b978;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040b6a1;\n        }\n        break;\n    case 0x40b8a0:\ncode_r0x0040b8a0:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040b922;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0040b8fa;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0040b978;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040b6a1;\n        }\n        break;\n    case 0x40b922:\ncode_r0x0040b922:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040b969;\n        }\n        break;\n    case 0x40b94a:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x0040b77a:\n        if (iVar9 < 0) goto code_r0x0040b978;\n        uVar11 = 3;\n        goto code_r0x0040b971;\n    case 0x40b95c:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x0040b969:\n        if (iVar9 < 0) goto code_r0x0040b978;\n        uVar11 = 9;\ncode_r0x0040b971:\n        *arg_20h = uVar11;\n        goto code_r0x0040b978;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x0040b978:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3855
    },
    "0040b9d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040b9d9(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x4386e0));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x438690);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "0040bbbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040bbbe(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "0040c0e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c0e6(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0040c17c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c17c(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040c210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c210(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040c2bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c2bf(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040c356": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c356(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040c3e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c3e4(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0040c64e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c64e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.0040b0d4();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((arg_8h != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x178))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0040c766": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c766(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0040b0d4();\n        if ((*(iVar1 + 0x48) != 0) && ((*(*(iVar1 + 0x48) + 4) & 0x40000000) == 0)) {\n            fcn.0040c64e(1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0040d3bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d3bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 161
    },
    "0040d3f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3f3(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        uVar1 = fcn.0040d3bf(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(in_ECX + 0x10) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x10);\n    return;\n}\n",
        "token_count": 130
    },
    "0040d485": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d485(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0040a765(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d496": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d496(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x14) == 0) {\n        uVar1 = fcn.0040d3bf(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(in_ECX + 0x14) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x14);\n    return;\n}\n",
        "token_count": 129
    },
    "0040d53a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d53a(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040a765(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0040d600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d600(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041accd(0);\n    iVar1 = fcn.0040b0d4();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00409a41(fcn.00416d95);\n        iVar2 = fcn.00409a58(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00417662(0x42d9b8, 0x40d398, fcn.0040c05f, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar3;\n        fcn.00409a41(arg_8h_00);\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 332
    },
    "0040d72d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d72d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004164ee(0x40a4cc);\n    if (iVar1 == 0) {\n        fcn.0040a4b0();\n    }\n    iVar2 = fcn.0040b0a1();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x28) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x28));\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "0040d7b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d7b7(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.004101f4();\n    if (iVar2 == 0) goto code_r0x0040d804;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.0040b0a1();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.0040b0a1();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00411b96();\n                if (iVar3 == 0) goto code_r0x0040d7f9;\n            }\n            fcn.00412185(0);\n        }\ncode_r0x0040d7f9:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x0040d804:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.0040b0d4();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.0041b210(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x2c;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageW)(*(iVar2 + 0x20), 0x433, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongW;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(param_1[8], 0xfffffffc);\n    fcn.0040d5ce();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf8))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0040d6fd();\n    (**(*param_1 + 0x11c))();\n    return;\n}\n",
        "token_count": 752
    },
    "0040d97a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d97a(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0040d97a(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0040d674(iVar2);\n            return;\n        }\n        iVar2 = fcn.0040d6a0();\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0040d97a(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "0040db05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040db05(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xec))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0040d5ce();\n    return piVar1;\n}\n",
        "token_count": 163
    },
    "0040e24d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040e24d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0041ad00(0x38);\n    iVar1 = fcn.004164ee(0x40a4cc);\n    iVar4 = 0;\n    *(unaff_EBP + -0x18) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0040a4b0();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0040c575(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x110))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0040e1d7(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 809
    },
    "0040e38d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040e38d(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x43bc98)) && (extraout_ECX != 0x43bcf0)) &&\n       ((extraout_ECX != 0x43bd48 && (extraout_ECX != 0x43bda0)))) {\n        fcn.0040d8ca();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411854();\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 339
    },
    "0040e42f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e42f(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    if (*arg_ch == 1) {\n        iVar1 = fcn.004164ee(0x40a4cc);\n        if (iVar1 != 0) goto code_r0x0040e458;\n        do {\n            iVar1 = fcn.0040a4b0();\ncode_r0x0040e458:\n            if (*(iVar1 + 0x74) == in_ECX[8]) {\n                iVar1 = fcn.00416b19();\n            }\n            else {\n                iVar1 = (**(*in_ECX + 0x6c))();\n            }\n        } while (iVar1 == 0);\n        piVar2 = fcn.0040c6a4(iVar1, arg_ch[2]);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x10))(arg_ch);\n        }\n    }\n    else {\n        iVar1 = fcn.0040d97a(in_ECX[8], arg_ch[1], 1);\n        if ((iVar1 != 0) && (iVar1 = fcn.0040da39(0),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.0040d5ce();\n    return;\n}\n",
        "token_count": 324
    },
    "0040e4f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040e4f7(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x128))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0040e4b8();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0040e4b8();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "0040e538": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e538(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0040d6a0(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040e24d(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040e538(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "0040e657": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e657(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h == 1) || (arg_8h == 2)) && (iVar1 = fcn.0040e5b7(arg_ch, 0),  iVar1 != 0)) {\n        return;\n    }\n    fcn.0040d5ce();\n    return;\n}\n",
        "token_count": 98
    },
    "0040e71f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e71f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0040e734": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e734(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((((*arg_8h == 0) && (arg_8h[1] == 0)) && (arg_8h[2] == 0xc0)) && (arg_8h[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "0040e764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e764(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0040e734(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.0040e6e0(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0040e79a;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0040e79a:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 433
    },
    "00411c1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411c1f(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040b0a1();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.0040b0a1();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00411bb6(1);\n        iVar2 = fcn.0040b0a1();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.0040b0a1();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.00412185(0);\n            }\n        }\n        else {\n            iVar1 = fcn.004169a4();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00411c08. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "0040e927": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e927(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((*arg_ch == 1) && (piVar1 = fcn.00416b2d(arg_ch[5]),  piVar1 != NULL)) {\n        (**(*piVar1 + 0xc))(arg_ch);\n        return;\n    }\n    iVar2 = fcn.0040e5b7(arg_ch[5], 0);\n    if (iVar2 == 0) {\n        fcn.0040d5ce();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0040e9ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e9ba(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00416e82(0xc);\n    iVar1 = fcn.0041612e(0x40e1a7);\n    if (iVar1 == 0) {\n        fcn.0040a4b0();\n    }\n    if (*(iVar1 + 8) == 0) {\n        iVar2 = fcn.0040c38b(\"hhctrl.ocx\");\n        *(iVar1 + 4) = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x42df94);\n            *(iVar1 + 8) = iVar2;\n            if (iVar2 != 0) goto code_r0x0040ea1f;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar1 + 4));\n            *(iVar1 + 4) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x0040ea1f:\n        fcn.00416ef4(0xc);\n        uVar3 = (**(iVar1 + 8))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 330
    },
    "0040f179": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f179(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004164ee(0x40a4cc);\n    if (iVar1 == 0) {\n        fcn.0040a4b0();\n    }\n    if (*(iVar1 + 0x14) != arg_8h) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExW)(5, 0x40ef59, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.0040a478();\n            }\n        }\n        *(iVar1 + 0x14) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0040f330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040f330(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    code *pcVar8;\n    int32_t unaff_EBP;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xf0))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 == 0) goto code_r0x0040f540;\n        goto code_r0x0040f36e;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xf4))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x0040f819;\n        }\n        goto code_r0x0040f540;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0040d674(var_24h);\n        fcn.0040ed1c(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar9 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.0040ed94(arg_8h_00, iVar9, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x0040f36e;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0040f8d2;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0040c4c7(7);\n    iVar3 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    *(unaff_EBP + -0x18) = iVar3 + 0x43a468;\n    if ((*(unaff_EBP + 8) != *(iVar3 + 0x43a468)) || (*(unaff_EBP + 0x10) != *(iVar3 + 0x43a470))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.0040bbbe(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0040c4fb();\n                    goto code_r0x0040f4ce;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.0040bbbe(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0040c4fb();\n                        goto code_r0x0040f8c4;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0040c4fb();\n        goto code_r0x0040f540;\n    }\n    iVar3 = *(iVar3 + 0x43a46c);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0040c4fb();\n    if (iVar3 == 0) goto code_r0x0040f540;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0040f8c4:\n        pcVar8 = *(iVar3 + 0x14);\n        goto code_r0x0040f8c8;\n    }\ncode_r0x0040f4ce:\n    pcVar8 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar10 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (84 cases) at 0x40f8f4\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00417482(var_14h);\n        goto code_r0x0040f56f;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f56f;\n    case 5:\n    case 0xc:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0040d674(uVar7);\n        goto code_r0x0040f5a4;\n    case 6:\n    case 0x47:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0040d674(var_24h);\n        goto code_r0x0040f8cb;\n    case 7:\n    case 0xd:\n    case 0x4a:\ncode_r0x0040f56f:\n        uVar4 = (*pcVar8)(var_14h);\n        goto code_r0x0040f8cf;\n    case 8:\n        fcn.00417097();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0040c530();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.0040d6a0(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0041667c(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040e38d();\n        goto code_r0x0040f629;\n    case 9:\n        fcn.00417097();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x0040f629:\n        *(unaff_EBP + -4) = 0;\n        fcn.004174c9();\n        break;\n    case 10:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.0040d674(var_24h);\n        var_18h = var_24h;\n        goto code_r0x0040f66d;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f8cb;\n    case 0xe:\n    case 0x2f:\n    case 0x4f:\n        goto code_r0x0040f8c8;\n    case 0xf:\n        var_18h = fcn.00416b19(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040f66d:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0040f5a4:\n        uVar4 = (*pcVar8)(uVar5, uVar7, var_18h, var_14h);\n        goto code_r0x0040f8cf;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n    case 0x4c:\n    case 0x53:\n        goto code_r0x0040f8ad;\n    case 0x11:\n    case 0x14:\n    case 0x54:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f699;\n    case 0x13:\n        (*pcVar8)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f8b0;\n    case 0x17:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        goto code_r0x0040f8b0;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040f6d1;\n    case 0x1a:\n        fcn.0040d674(var_24h);\n        goto code_r0x0040f8ad;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar8)();\n        goto code_r0x0040f8cf;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0040d674(var_14h);\n        fcn.0040d674(var_24h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0040f6d5;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00417482(var_14h);\n        goto code_r0x0040f699;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00416b19(var_14h);\n        goto code_r0x0040f699;\n    case 0x22:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        uVar7 = fcn.00416b19(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040f6d5;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f726;\n    case 0x24:\ncode_r0x0040f726:\n        fcn.0040d674(var_14h);\n        goto code_r0x0040f699;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040f739;\n    case 0x26:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0040f739:\n        uVar7 = fcn.0040d674(*(unaff_EBP + 0xc));\n        goto code_r0x0040f6d5;\n    case 0x27:\n        var_18h = fcn.0040d674(*(unaff_EBP + 0xc));\n        goto code_r0x0040f8b0;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0040d674(var_24h);\n        goto code_r0x0040f76b;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0040d674(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0040f6d5;\n        }\n        goto code_r0x0040f8b0;\n    case 0x2c:\n    case 0x33:\ncode_r0x0040f699:\n        (*pcVar8)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n    case 0x52:\n        (*pcVar8)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040f36e;\n    case 0x30:\n    case 0x46:\n        var_28h = iVar9;\n        var_24h = iVar10;\n        goto code_r0x0040f8cb;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040f76b:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040f6d5;\n    case 0x35:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0040f6d1:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040f6d5:\n        (*pcVar8)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x0040f819;\n    case 0x38:\n        (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        break;\n    case 0x45:\n        iVar3 = (*pcVar8)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x0040f819:\n        if (iVar3 != 0) {\ncode_r0x0040f540:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040c4fb();\n            goto code_r0x0040f54e;\n        }\n        break;\n    case 0x48:\n        fcn.00416b19(var_24h);\ncode_r0x0040f8ad:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f8b0;\n    case 0x49:\n        var_24h = fcn.00416b19(var_24h);\n        goto code_r0x0040f8c8;\n    case 0x4b:\n        var_18h = fcn.00416b19(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040f8b0;\n    case 0x4d:\n        var_14h = var_24h & 0xffff;\n        var_18h = var_24h >> 0x10 & 0xf000;\n        uVar5 = var_24h >> 0x10 & 0xfff;\n        uVar7 = fcn.0040d674(*(unaff_EBP + 0xc));\n        goto code_r0x0040f86a;\n    case 0x4e:\n        var_18h = *(unaff_EBP + 0xc);\ncode_r0x0040f8b0:\n        (*pcVar8)(var_18h, var_14h);\n        break;\n    case 0x50:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040f86a;\n    case 0x51:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040f86a:\n        (*pcVar8)(uVar7, uVar5, var_18h, var_14h);\ncode_r0x0040f36e:\n        *(unaff_EBP + -0x10) = 1;\n    }\ncode_r0x0040f8d2:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c4fb();\ncode_r0x0040f54e:\n    fcn.0041ada5();\n    return;\ncode_r0x0040f8c8:\n    var_28h = *(unaff_EBP + 0xc);\ncode_r0x0040f8cb:\n    uVar4 = (*pcVar8)(var_28h, var_24h);\ncode_r0x0040f8cf:\n    *(unaff_EBP + -0x10) = uVar4;\n    goto code_r0x0040f8d2;\n}\n",
        "token_count": 5076
    },
    "0040fe0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040fe0c(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.0041ad00(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.0040c11d(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.0040c08b(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.0040b0a1(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.00416e82(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.0040b0a1();\n        fcn.004028f0(*(lpWndClass + 0x24));\n        fcn.0040a38b(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00416ef4(1);\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 321
    },
    "00410230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410230(uint noname_0, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_EBP;\n    \n    iVar1 = fcn.0040b0d4();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00410244. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(**(iVar1 + 4) + 0x6c))();\n        return uVar2;\n    }\n    if (arg_ch[1] == 1) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        if (arg_ch[1] == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg_ch, 0, unaff_EBP);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "00410447": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410447(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0040b0d4();\n    if (((*(iVar1 + 4) == 0) || (*arg_8h != 0)) || (iVar1 = fcn.00410379(arg_8h),  iVar1 == 0)) {\n        piVar3 = fcn.00401c30();\n        piVar4 = piVar3;\n        if (piVar3 != NULL) {\n            piVar4 = piVar3[8];\n        }\n        iVar1 = fcn.0040d9f3(piVar4, arg_8h);\n        if (iVar1 == 0) {\n            if (piVar3 != NULL) {\n                fcn.0040d674(*arg_8h);\n                piVar4 = fcn.0040eb9f();\n                if (piVar4 != piVar3) {\n                    uVar2 = (**(*piVar3 + 0x108))(arg_8h);\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 317
    },
    "00410628": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410628(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b0a1();\n    if ((*(iVar1 + 0x14) == '\\0') && ((-1 < arg_8h || (arg_8h == 0x8001)))) {\n        iVar1 = fcn.0040b0d4();\n        if (*(iVar1 + 4) != NULL) {\n            (**(**(iVar1 + 4) + 0x70))(arg_8h, arg_10h);\n            return;\n        }\n    }\n    iVar1 = fcn.004164ee(0x40a4cc);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040a4b0();\n    }\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar1 + 0x2c), arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 234
    },
    "004107c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004107c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0040b0a1();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.0040aad5();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExW)(0xffffffff, fcn.00410628, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "004107ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004107ee(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (arg_8h < 1) {\n        iVar3 = *(in_ECX + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.0040e24d(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.0040e538(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.0040b0a1();\n        iVar1 = fcn.0040ab91();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0041697d(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.0040e24d(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.0040e538(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0041697d(*(iVar1 + 0xa0));\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.0040b0a1();\n        iVar3 = fcn.0040ab91();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00417659();\n            fcn.00417871(1);\n        }\n    }\n    return arg_8h < 1;\n}\n",
        "token_count": 557
    },
    "00410e11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00410e11(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00410cf1(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00410d82(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00410cf1(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00410e37;\n            fcn.00410d82(&arg_8h);\n        }\n        if (arg_8h < 0xffff) {\n            puVar2 = arg_8h & 0xffff;\n        }\n        else {\n            fcn.00410dca(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00410d35(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.004113f7(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x00410e37:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 388
    },
    "00410ec2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ec2(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.00410bf5(0xff);\n        fcn.00410c74(0xfffe);\n    }\n    if (arg_ch < 0xff) {\n        fcn.00410bf5(arg_ch);\n    }\n    else {\n        fcn.00410bf5(0xff);\n        if (arg_ch < 0xfffe) {\n            fcn.00410c74(arg_ch);\n        }\n        else {\n            fcn.00410c74(0xffff);\n            if (arg_ch == 0xffffffff) {\n                fcn.00410cb3(0xffffffff);\n                fcn.00410c30(0xffffffff, 0);\n            }\n            else {\n                fcn.00410cb3(arg_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00410f46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00410f46(int32_t lpString1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (lpString1 == 0) {\n        fcn.0040a4b0();\n    }\n    iVar1 = fcn.0040b0a1();\n    fcn.00416e82(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.00416ef4(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.00416ef4(0);\n    return puVar2;\n}\n",
        "token_count": 199
    },
    "00411188": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411188(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.0041100f();\n    }\n    fcn.004108f0();\n    fcn.00402380();\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 168
    },
    "0041148a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041148a(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (in_ECX != 0) goto code_r0x0041149a;\n    do {\n        in_ECX = fcn.0040a4b0();\ncode_r0x0041149a:\n    } while (arg_8h == 0);\n    do {\n        if (in_ECX == arg_8h) {\n            return 1;\n        }\n        in_ECX = *(in_ECX + 0x10);\n    } while (in_ECX != 0);\n    return 0;\n}\n",
        "token_count": 143
    },
    "00411636": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411636(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code **ppcVar5;\n    int32_t *in_ECX;\n    int32_t *piVar6;\n    uint32_t arg_ch_00;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.0040b0a1();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x00411656;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                uVar4 = arg_ch & 0xffff;\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = uVar4;\n                if (arg_ch_00 != 0) goto code_r0x0041170e;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0041170e:\n            ppcVar5 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar5 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.0040bbbe(ppcVar5[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar5 = (**ppcVar5)();\n            }\n            iVar1 = fcn.004114fe(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar6 = puVar2[1];\n                while (((piVar6[1] != 0 && (piVar6[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar6[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar6 == 0) {\ncode_r0x004116d3:\n                                *(arg_10h + 4) = piVar6[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar6 != 0) && (iVar3 = fcn.004023c0(iVar1, *piVar6),  iVar3 != 0))\n                        goto code_r0x004116d3;\n                    }\n                    piVar6 = piVar6 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.0040a4b0();\ncode_r0x00411656:\n    iVar1 = fcn.0040b0a1();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 769
    },
    "00411c59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00411c59(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*in_ECX + 0x44))(arg_8h);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*in_ECX + 0x38))();\n        if ((((*0x431260 == *arg_8h) && (arg_8h[1] == *0x431264)) && (arg_8h[2] == *0x431268)) &&\n           (arg_8h[3] == *0x43126c)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + in_ECX) != 0) {\n                        return piVar1[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *arg_8h) && (piVar1[1] == arg_8h[1])) &&\n                       ((piVar1[2] == arg_8h[2] && ((piVar1[3] == arg_8h[3] && (*(ppiVar3[1] + in_ECX) != 0)))))) {\n                        return ppiVar3[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 461
    },
    "00411d0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411d0c(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 294
    },
    "00411d9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d9c(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 87
    },
    "00411e0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00411e0d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    if (*(param_1 + 8) == 0) {\n        iVar3 = 8;\n        fcn.0041accd(8);\n        if ((extraout_ECX[1] != 0) &&\n           (iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 1),  iVar2 == 0)) {\n            fcn.0040b0ed(extraout_ECX[7]);\n            iVar1 = *extraout_ECX;\n            *(unaff_EBP + -4) = 0;\n            (**(iVar1 + 0x10))();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x10) != 0) {\n                fcn.0040a765();\n                iVar3 = iVar2;\n            }\n        }\n        fcn.0041ada5(iVar3);\n        return;\n    }\n    (**(**(param_1 + 8) + 8))(*(param_1 + 8));\n    return;\n}\n",
        "token_count": 329
    },
    "00411e65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411e65(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) != 0) {\n        iVar1 = (****(in_ECX + 8))(*(in_ECX + 8), arg_8h, arg_ch);\n        return iVar1;\n    }\n    iVar1 = fcn.00411c59(arg_8h);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00411d0c(arg_8h);\n        *arg_ch = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00411d9c();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 213
    },
    "00411f59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411f59(int32_t arg_8h)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    Var2 = *0x43be08 >> 8;\n    if (*0x43be08 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((arg_8h == 0) || (*in_ECX != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x43be08)(arg_8h);\n        *in_ECX = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 186
    },
    "00411f93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00411f93(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x43be10 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x43be10)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 106
    },
    "004120eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004120eb(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.00417da6(L\"Settings\", L\"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00412290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412290(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(iVar2 + *(iVar2 + 2) * 2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterW(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00416d5d(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesW(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesW(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00416d5d(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "004124b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004124b9(int32_t *param_1)\n\n{\n    if ((*0x43be0c != NULL) && (*param_1 != -1)) {\n        fcn.00411fc0();\n        (**0x43be0c)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00412603": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_12h\n\nvoid __cdecl fcn.00412603(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_258h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_228h;\n    uint lParam;\n    uint var_220h;\n    uint lpFilename;\n    uint var_12h;\n    uint var_4h;\n    \n    fcn.0041ad36(0x260);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    *(unaff_EBP + -0x228) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x234) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x224) = 0;\n    *(unaff_EBP + -0x220) = 0;\n    uVar4 = (*pcVar1)(L\"kernel32.dll\");\n    pcVar7 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *(unaff_EBP + -0x238) = uVar4;\n    pcVar5 = (*pcVar7)(uVar4, \"GetUserDefaultUILanguage\");\n    if (pcVar5 == NULL) {\n        iVar8 = (*pcVar1)(L\"ntdll.dll\");\n        if (iVar8 != 0) {\n            *(unaff_EBP + -0x224) = 0;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesW)(iVar8, 0x10, 1, fcn.00411e88, unaff_EBP + -0x224);\n            pcVar7 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n            if (*(unaff_EBP + -0x224) != 0) {\n                uVar6 = *(unaff_EBP + -0x224) & 0x3ff;\n                uVar4 = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)((*(unaff_EBP + -0x224) >> 10) << 10 | uVar6);\n                *(unaff_EBP + -0x24c) = uVar4;\n                uVar4 = (*pcVar7)(uVar6);\n                *(unaff_EBP + -0x248) = uVar4;\n                *(unaff_EBP + -0x220) = 2;\n            }\n        }\n    }\n    else {\n        uVar6 = (*pcVar5)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        *(unaff_EBP + -0x224) = uVar6 & 0xffff;\n        *(unaff_EBP + -0x220) = uVar6 & 0x3ff;\n        uVar4 = (*pcVar1)(uVar6 & 0xffff);\n        *(unaff_EBP + -0x24c) = uVar4;\n        uVar4 = (*pcVar1)(*(unaff_EBP + -0x220));\n        *(unaff_EBP + -0x248) = uVar4;\n        *(unaff_EBP + -0x220) = 2;\n        pcVar7 = (*pcVar7)(*(unaff_EBP + -0x238), \"GetSystemDefaultUILanguage\");\n        if (pcVar7 != NULL) {\n            uVar3 = (*pcVar7)();\n            *(unaff_EBP + -0x224) = uVar3;\n            uVar4 = (*pcVar1)(uVar3);\n            *(unaff_EBP + -0x244) = uVar4;\n            uVar4 = (*pcVar1)(uVar3 & 0x3ff);\n            *(unaff_EBP + -0x240) = uVar4;\n            *(unaff_EBP + -0x220) = 4;\n        }\n    }\n    if (*0x43be1c == 0) {\n        iVar8 = *(unaff_EBP + -0x220);\n        *(unaff_EBP + -0x220) = *(unaff_EBP + -0x220) + 1;\n        *(unaff_EBP + -0x24c + iVar8 * 4) = 0x800;\n    }\n    *(unaff_EBP + -0x12) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0x400000, unaff_EBP + -0x21c, 0x105);\n    if (iVar8 != 0) {\n        fcn.0041b210(unaff_EBP + -0x26c, 0, 0x20);\n        *(unaff_EBP + -0x26c) = 0x20;\n        *(unaff_EBP + -0x264) = unaff_EBP + -0x21c;\n        *(unaff_EBP + -600) = 1000;\n        *(unaff_EBP + -0x250) = 0x400000;\n        *(unaff_EBP + -0x268) = 0x88;\n        fcn.00411ea2(0xffffffff);\n        *(unaff_EBP + -4) = 0;\n        cVar2 = fcn.00411f59(unaff_EBP + -0x26c);\n        if (cVar2 != '\\0') {\n            fcn.00411f93();\n        }\n        iVar8 = 0;\n        if (0 < *(unaff_EBP + -0x220)) {\n            do {\n                iVar9 = fcn.0041236f(*(unaff_EBP + -0x234), *(unaff_EBP + -0x24c + iVar8 * 4));\n                if (iVar9 != 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < *(unaff_EBP + -0x220));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004124b9();\n    }\n    fcn.0041adb9();\n    return;\n}\n",
        "token_count": 1509
    },
    "00412bc6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412bc6(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    \n    if (pszPath == 0) {\n        fcn.0040a4b0();\n    }\n    arg_10h_00 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(pszPath);\n    if (arg_ch == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_10h_00);\n        iVar1 = iVar1 + 1;\n    }\n    else {\n        fcn.0040a25a(arg_ch, arg_10h, arg_10h_00, 0xffffffff);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 188
    },
    "00412c06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412c06(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort *arg_8h;\n    uint uVar3;\n    uint *arg_8h_00;\n    char16_t *arg_10h;\n    uint *arg_8h_01;\n    uint var_618h;\n    uint var_614h;\n    uint var_414h;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    iVar1 = fcn.0040b0a1();\n    *(iVar1 + 8) = *(param_1 + 0x44);\n    *(iVar1 + 0xc) = *(param_1 + 0x44);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(*(param_1 + 0x44), &lpFilename, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.0041707b();\n    }\n    arg_8h_01 = &lpFilename;\n    arg_8h = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)();\n    if (arg_8h == NULL) {\n        fcn.0041707b();\n    }\n    *arg_8h = 0;\n    iVar2 = fcn.00412bc6(&lpFilename, &var_414h, 0x104);\n    if (iVar2 != 0) {\n        fcn.0041707b();\n    }\n    if (*(param_1 + 0x60) != 0) goto code_r0x00412cb9;\n    iVar2 = fcn.0041b4b3(&var_414h);\n    *(param_1 + 0x60) = iVar2;\n    if (iVar2 != 0) goto code_r0x00412cb9;\ncode_r0x00412cb4:\n    do {\n        fcn.0040a478();\ncode_r0x00412cb9:\n        iVar2 = *(param_1 + 0x50);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040a5ec(0xe000, &var_614h, 0x100);\n            if (iVar2 == 0) {\n                arg_8h_00 = *(param_1 + 0x60);\n            }\n            else {\n                arg_8h_00 = &var_614h;\n            }\n            iVar2 = fcn.0041b4b3(arg_8h_00);\n            *(param_1 + 0x50) = iVar2;\n            if (iVar2 == 0) goto code_r0x00412cb4;\n        }\n        *(iVar1 + 0x10) = iVar2;\n        if (*(param_1 + 100) == 0) {\n            if (*(param_1 + 0x6c) == 1) {\n                arg_10h = L\".CHM\";\n            }\n            else {\n                arg_10h = L\".HLP\";\n            }\n            fcn.00412337(arg_8h, 0x104 - (arg_8h - &lpFilename >> 1), arg_10h);\n            iVar2 = fcn.0041b4b3(&lpFilename);\n            *(param_1 + 100) = iVar2;\n            if (iVar2 == 0) goto code_r0x00412cb4;\n            *arg_8h = 0;\n        }\n        if (*(param_1 + 0x68) != 0) goto code_r0x00412d8c;\n        uVar3 = fcn.0041a6a9(&var_414h, 0x104, L\".INI\");\n        fcn.00401da0(uVar3);\n        iVar2 = fcn.0041b4b3(&var_414h);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 != 0) {\ncode_r0x00412d8c:\n            fcn.00419910(arg_8h_01);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 949
    },
    "00412d9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412d9b(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.0040b0a1();\n    *(iVar3 + 8) = arg_8h;\n    *(iVar3 + 0xc) = arg_8h;\n    fcn.0040a7af();\n    iVar3 = fcn.0040b0a1();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = arg_10h;\n        *(iVar3 + 0x4c) = arg_14h;\n        *(iVar3 + 0x44) = arg_8h;\n        fcn.00412c06();\n    }\n    iVar3 = fcn.0040b0a1();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.004107c0();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x43bc8c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 368
    },
    "00412e2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412e2f(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00413181": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413181(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        uVar1 = *arg_8h;\n        if (arg_8h[2] != 0) {\n            *arg_8h = 0;\n        }\n        *in_ECX = uVar1;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004132d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004132d7(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00411d9c();\n    }\n    fcn.00411c59(0x431270);\n    return;\n}\n",
        "token_count": 62
    },
    "00413445": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413445(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    ulong *arg_8h_00;\n    int16_t *piVar5;\n    uint pvargDest;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.0041accd(0x20);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    var_4h = unaff_EBP + -0x2c;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.00415e72(var_4h);\n    iVar2 = *(unaff_EBP + 8);\n    piVar5 = **(unaff_EBP + 0xc);\n    iVar1 = *(iVar2 + 0xc);\n    if ((iVar1 != 0xc) && (*piVar5 != iVar1)) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(unaff_EBP + -0x2c, piVar5, 0, iVar1);\n        *(unaff_EBP + -0x10) = iVar3;\n        if (iVar3 < 0) {\n            **(unaff_EBP + 0x10) = 0;\n            goto code_r0x0041356e;\n        }\n        piVar5 = unaff_EBP + -0x2c;\n    }\n    arg_8h_00 = *(iVar2 + 0x18) + *(unaff_EBP + -0x14);\n    // switch table (20 cases) at 0x413579\n    switch(*(iVar2 + 0xc)) {\n    case 2:\n    case 0x12:\n        *arg_8h_00 = piVar5[4];\n        break;\n    case 4:\n        *arg_8h_00 = *(piVar5 + 4);\n        break;\n    case 5:\n    case 7:\n        *arg_8h_00 = *(piVar5 + 4);\n        break;\n    case 6:\n    case 0x14:\n    case 0x15:\n        *arg_8h_00 = *(piVar5 + 4);\n        *(arg_8h_00 + 4) = *(piVar5 + 6);\n        break;\n    case 8:\n        fcn.0041814a(arg_8h_00, *(piVar5 + 4));\n        break;\n    case 9:\n    case 0xd:\n        if (*(piVar5 + 4) != 0) {\n            (**(**(piVar5 + 4) + 4))(*(piVar5 + 4));\n        }\n        fcn.00411c38(arg_8h_00);\n    case 3:\n    case 10:\n    case 0x13:\n        uVar4 = *(piVar5 + 4);\n        goto code_r0x004134c6;\n    case 0xb:\n        uVar4 = piVar5[4] != 0;\ncode_r0x004134c6:\n        *arg_8h_00 = uVar4;\n        break;\n    case 0xc:\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_8h_00, piVar5);\n        if (iVar3 != 0) goto code_r0x00413527;\n        break;\n    default:\n        *(unaff_EBP + -0x10) = 0x80020008;\ncode_r0x00413527:\n        **(unaff_EBP + 0x10) = 0;\n        break;\n    case 0x10:\n    case 0x11:\n        *arg_8h_00 = *(piVar5 + 4);\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x2c);\n    if ((-1 < *(unaff_EBP + -0x10)) && (*(iVar2 + 0x14) != 0)) {\n        fcn.0040b0ed(*(*(unaff_EBP + -0x14) + 0x1c));\n        *(unaff_EBP + -4) = 0;\n        (**(iVar2 + 0x14))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x18) != 0) {\n            var_4h = 0;\n            fcn.0040a765();\n        }\n    }\ncode_r0x0041356e:\n    fcn.0041ada5(var_4h);\n    return;\n}\n",
        "token_count": 1152
    },
    "004137a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004137a8(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.004130bb(arg_8h);\n            if ((*piVar2 == 0) || (iVar3 = fcn.004130bb(arg_8h),  *(iVar3 + 4) == 0)) {\n                fcn.0040a4b0();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            ppiVar4 = fcn.004130bb(arg_8h);\n            iVar3 = fcn.004130bb(arg_8h);\n            arg_8h = arg_8h + 1;\n            **(iVar3 + 4) = -(**ppiVar4 != 0);\n        } while (arg_8h < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00413943": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00413943(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint32_t *arg_8h_00;\n    uint uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint extraout_ECX;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    uint32_t *puVar9;\n    ulong *puVar10;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(0x14);\n    puVar7 = *(unaff_EBP + 8);\n    *puVar7 = extraout_ECX;\n    puVar10 = puVar7 + 1;\n    if ((*(unaff_EBP + 0x14) == 6) || (*(unaff_EBP + 0x14) == 0xc)) {\n        *puVar10 = *(unaff_EBP + 0x10);\n        puVar10 = puVar7 + 2;\n    }\n    puVar7 = *(unaff_EBP + 0x18);\n    uVar4 = *puVar7;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = uVar4;\n    *(unaff_EBP + 0x14) = puVar7[2];\n    *(unaff_EBP + 0x10) = puVar7[3];\n    pcVar6 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + 8) = pcVar6;\n    do {\n        if (*pcVar6 == '\\0') {\ncode_r0x00413b2d:\n            if (*(unaff_EBP + 0x14) < 1) {\n                if (**(unaff_EBP + 8) != '\\0') {\n                    **(unaff_EBP + 0x1c) = puVar7[2];\n                }\n            }\n            else {\ncode_r0x00413b38:\n                **(unaff_EBP + 0x1c) = *(unaff_EBP + 0x14);\n            }\n            fcn.0041ada5();\n            return;\n        }\n        uVar1 = **(unaff_EBP + 8);\n        uVar3 = uVar1;\n        iVar8 = *(unaff_EBP + 0x14) + -1;\n        *(unaff_EBP + 0x14) = iVar8;\n        if ((uVar1 != 0xff) && ((uVar1 & 0x40) != 0)) {\n            uVar3 = uVar3 & 0xffbf | 0x4000;\n        }\n        if (iVar8 < *(unaff_EBP + 0x10)) {\n            if (uVar3 == 0xff) {\n                uVar4 = puVar7[3];\n                *(unaff_EBP + 0x10) = 0;\n                *(unaff_EBP + 0x14) = uVar4;\n                *(unaff_EBP + -0x10) = 1;\n                goto code_r0x00413b1e;\n            }\n            if ((*(unaff_EBP + -0x10) == 0) && (uVar3 == 0xc)) {\n                *0x43be20 = 10;\n                *0x43be28 = 0x80020004;\n                puVar9 = 0x43be20;\n                goto code_r0x00413a4c;\n            }\n            goto code_r0x00413b2d;\n        }\n        if (uVar3 == 0xff) goto code_r0x00413b2d;\n        puVar9 = iVar8 * 0x10 + *(unaff_EBP + -0x14);\n        if ((uVar3 != 0xc) && (uVar3 != *puVar9)) {\n            iVar8 = iVar8 * 0x10 + *(unaff_EBP + 0x20);\n            *(unaff_EBP + 0xc) = iVar8;\n            iVar8 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(iVar8, puVar9, 0, uVar3);\n            if (iVar8 < 0) goto code_r0x00413b38;\n            puVar9 = *(unaff_EBP + 0xc);\n            puVar7 = *(unaff_EBP + 0x18);\n        }\ncode_r0x00413a4c:\n        if ((uVar3 & 0x4000) != 0) {\n            if ((uVar3 == 0x400b) && (*(unaff_EBP + 0x24) != 0)) {\n                iVar2 = *puVar9[2];\n                arg_8h_00 = fcn.00409a58(4);\n                if (arg_8h_00 == NULL) {\n                    arg_8h_00 = NULL;\n                }\n                else {\n                    *arg_8h_00 = iVar2 != 0;\n                }\n                uVar4 = fcn.00412e51(arg_8h_00, puVar9[2], 1);\n                *(unaff_EBP + -4) = 0;\n                fcn.0041328c(uVar4);\n                *(unaff_EBP + -4) = 0xffffffff;\n                if (*(unaff_EBP + -0x18) != 0) {\n                    fcn.00409a92(*(unaff_EBP + -0x20));\n                }\n                puVar7 = *(unaff_EBP + 0x18);\n                puVar9 = arg_8h_00;\n            }\n            else {\n                puVar9 = puVar9[2];\n            }\ncode_r0x00413ac0:\n            *puVar10 = puVar9;\n            goto code_r0x00413b1c;\n        }\n    // switch table (20 cases) at 0x413b63\n        switch(uVar3) {\n        case 2:\n            uVar5 = *(puVar9 + 2);\n            break;\n        case 3:\n        case 8:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            uVar5 = puVar9[2];\n            break;\n        case 4:\n            *puVar10 = puVar9[2];\n            goto code_r0x00413b1c;\n        case 5:\n        case 7:\n            *puVar10 = *(puVar9 + 2);\n            goto code_r0x00413af9;\n        case 6:\n        case 0x14:\n        case 0x15:\n            *puVar10 = puVar9[2];\n            *(puVar10 + 4) = puVar9[3];\ncode_r0x00413af9:\n            puVar10 = puVar10 + 1;\n            goto code_r0x00413b1e;\n        case 0xb:\n            uVar5 = *(puVar9 + 2) != 0;\n            break;\n        case 0xc:\n            goto code_r0x00413ac0;\n        default:\n            goto code_r0x00413b1e;\n        case 0x10:\n            uVar5 = *(puVar9 + 2);\n            break;\n        case 0x11:\n            uVar5 = *(puVar9 + 2);\n            break;\n        case 0x12:\n            uVar5 = *(puVar9 + 2);\n        }\n        *puVar10 = uVar5;\ncode_r0x00413b1c:\n        puVar10 = puVar10 + 4;\ncode_r0x00413b1e:\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n        pcVar6 = *(unaff_EBP + 8);\n    } while( true );\n}\n",
        "token_count": 1894
    },
    "00413bb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.00413bb3(uint noname_0, uint arg_14h_2, uint arg_18h, uint arg_8h, uint arg_ch, uint noname_5, uint arg_14h)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int16_t iVar9;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar10;\n    float10 fVar11;\n    ulong uVar12;\n    uint var_4h;\n    uint var_6ch_2;\n    uint var_6ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint pvargDest;\n    uint var_3ch;\n    uint var_30h_2;\n    uint var_2ch_2;\n    uint var_30h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint pbstr;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar var_10h_2 [3];\n    int32_t var_19h;\n    uint var_10h;\n    \n    fcn.0041ad6c();\n    *(unaff_EBP + -0x2c) = extraout_ECX;\n    var_10h = *(extraout_ECX + 0x1c);\n    fcn.0040b0ed(var_10h);\n    iVar6 = *(unaff_EBP + 8);\n    iVar5 = *(iVar6 + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x19) = 0;\n    *(unaff_EBP + -0x18) = iVar5;\n    if (iVar5 == 0) {\n        *(unaff_EBP + -0x18) = unaff_EBP + -0x19;\n    }\n    uVar8 = *(unaff_EBP + -0x18);\n    stack0xfffffff0 = 0x413bf1;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    uVar10 = *(iVar6 + 0x10);\n    *(unaff_EBP + -0x20) = *(iVar6 + 0xc);\n    if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n        unique0x00001d00 = iVar5 + 3;\n        _var_10h_2 = 0x413c0c;\n        cVar4 = fcn.0041370a(unique0x00001d00, uVar8, var_10h);\n        if (cVar4 != '\\0') {\n            stack0xfffffff0 = 0x413c36;\n            fcn.0041b6e0();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            _var_10h_2 = *(unaff_EBP + -0x18);\n            unique0x10000316 = iVar5;\n            fcn.00401b50(&stack0xfffffff4, iVar5 + 3);\n            uVar1 = *(iVar6 + 0xc);\n            (&stack0xfffffff4)[iVar5] = 0xff;\n            *(unaff_EBP + -0x20) = 0;\n            (&stack0xfffffff5)[iVar5] = uVar1;\n            *(unaff_EBP + -0x18) = &stack0xfffffff4;\n            (&stack0xfffffff6)[iVar5] = 0;\n            uVar10 = *(iVar6 + 0x14);\n            goto code_r0x00413c67;\n        }\ncode_r0x00413c11:\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x24) != 0) {\n            unique0x00007a00 = *(unaff_EBP + -0x28);\n            _var_10h_2 = 0;\n            fcn.0040a765();\n        }\n        goto code_r0x00413ead;\n    }\ncode_r0x00413c67:\n    iVar6 = *(unaff_EBP + 0x14);\n    *NULL = *(iVar6 + 8) << 4;\n    _var_10h_2 = 0x413c76;\n    cVar4 = fcn.0041370a(*NULL, uVar8, var_10h);\n    if ((cVar4 == '\\0') || (uVar7 = *(iVar6 + 8),  0x7ffffff < uVar7)) goto code_r0x00413c11;\n    stack0xfffffff0 = 0x413c90;\n    fcn.0041b6e0();\n    *(unaff_EBP + -0x10) = &stack0xfffffff4;\n    *(unaff_EBP + -0x30) = &stack0xfffffff4;\n    _var_10h_2 = 0;\n    unique0x1000031a = uVar7 << 4;\n    fcn.0041b210(*(unaff_EBP + -0x30));\n    unique0x00007a00 = *(unaff_EBP + -0x20);\n    _var_10h_2 = *(unaff_EBP + -0x18);\n    iVar6 = fcn.00413303(_var_10h_2, unique0x00007a00);\n    cVar4 = fcn.0041370a(iVar6 + 0x10, _var_10h_2, stack0xfffffff0);\n    if (cVar4 == '\\0') goto code_r0x00413c11;\n    fcn.0041b6e0();\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x58) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    *(unaff_EBP + -0x54) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x50) = 0;\n    *(unaff_EBP + -4) = 1;\n    iVar5 = fcn.00413943(&stack0xffffffec, *(unaff_EBP + -0x18), unaff_EBP + -0x40, *(unaff_EBP + -0x20), \n                         *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + -0x30), unaff_EBP + -0x58);\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x2c) = iVar5;\n    if (iVar5 == 0) {\n        uVar7 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -4) = 2;\n        if (uVar7 == 4) {\n            fVar11 = fcn.00418189(uVar10, &stack0xffffffec, iVar6);\n            *(unaff_EBP + -0x44) = fVar11;\n            *(unaff_EBP + -0x40) = *(unaff_EBP + -0x44);\n        }\n        else if ((uVar7 == 5) || (uVar7 == 7)) {\n            fVar11 = fcn.00418189(uVar10, &stack0xffffffec, iVar6);\n            *(unaff_EBP + -0x40) = fVar11;\n        }\n        else if (uVar7 - 0x14 < 2) {\n            uVar12 = fcn.00418189(uVar10, &stack0xffffffec, iVar6);\n            *(unaff_EBP + -0x40) = uVar12;\n            *(unaff_EBP + -0x3c) = uVar12 >> 0x20;\n        }\n        else {\n            uVar8 = fcn.00418189(uVar10, &stack0xffffffec, iVar6);\n            *(unaff_EBP + -0x18) = uVar8;\n        }\n        *(unaff_EBP + -4) = 1;\n    }\n    iVar6 = *(unaff_EBP + 0x14);\n    uVar7 = 0;\n    if (*(iVar6 + 8) != 0) {\n        iVar5 = *(unaff_EBP + -0x30);\n        do {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar5);\n            uVar7 = uVar7 + 1;\n            iVar5 = iVar5 + 0x10;\n        } while (uVar7 < *(iVar6 + 8));\n    }\n    if (*(unaff_EBP + -0x2c) != 0) {\n        *(unaff_EBP + -4) = 0;\n        fcn.004131ac();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x24) != 0) {\n            fcn.0040a765(0, *(unaff_EBP + -0x28));\n        }\n        goto code_r0x00413ead;\n    }\n    fcn.004137a8();\n    puVar2 = *(unaff_EBP + 0x10);\n    if (puVar2 == NULL) {\n        iVar9 = *(unaff_EBP + -0x20);\n        if (iVar9 == 8) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x18));\n        }\n        else if (iVar9 == 9) {\ncode_r0x00413e67:\n            piVar3 = *(unaff_EBP + -0x18);\n            if (piVar3 != NULL) {\n                (**(*piVar3 + 8))(piVar3);\n            }\n        }\n        else if (iVar9 == 0xc) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x40);\n        }\n        else if (iVar9 == 0xd) goto code_r0x00413e67;\n        goto code_r0x00413e8b;\n    }\n    uVar7 = *(unaff_EBP + -0x20);\n    *puVar2 = uVar7;\n    // switch table (20 cases) at 0x413ebb\n    switch(uVar7 & 0xffff) {\n    case 2:\n    case 0x12:\n        iVar9 = *(unaff_EBP + -0x18);\n        goto code_r0x00413e10;\n    case 3:\n    case 8:\n    case 9:\n    case 10:\n    case 0xd:\n    case 0x13:\n        puVar2[2] = *(unaff_EBP + -0x18);\n        break;\n    case 4:\n        puVar2[2] = *(unaff_EBP + -0x40);\n        break;\n    case 5:\n    case 7:\n        *(puVar2 + 2) = *(unaff_EBP + -0x40);\n        break;\n    case 6:\n    case 0x14:\n    case 0x15:\n        puVar2[2] = *(unaff_EBP + -0x40);\n        puVar2[3] = *(unaff_EBP + -0x3c);\n        break;\n    case 0xb:\n        iVar9 = (*(unaff_EBP + -0x18) == 0) - 1;\ncode_r0x00413e10:\n        *(puVar2 + 2) = iVar9;\n        break;\n    case 0xc:\n        *puVar2 = *(unaff_EBP + -0x40);\n        puVar2[1] = *(unaff_EBP + -0x3c);\n        puVar2[2] = *(unaff_EBP + -0x38);\n        puVar2[3] = *(unaff_EBP + -0x34);\n        break;\n    case 0x10:\n    case 0x11:\n        *(puVar2 + 2) = *(unaff_EBP + -0x18);\n    }\ncode_r0x00413e8b:\n    *(unaff_EBP + -4) = 0;\n    fcn.004131ac();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x24) != 0) {\n        fcn.0040a765(0, *(unaff_EBP + -0x28));\n    }\ncode_r0x00413ead:\n    *(unaff_EBP + -0x70) = 0x413eb5;\n    fcn.0041adc8();\n    return;\n}\n",
        "token_count": 3170
    },
    "00413f0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413f0b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040a4fb();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.00402350();\n    *(unaff_EBP + -4) = 0;\n    fcn.00402350();\n    fcn.00402350();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar2 != 0) {\n        fcn.00402230(*(unaff_EBP + 8));\n    }\n    extraout_ECX[7] = (iVar1 != 0) - 1 & 0x8000ffff;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 351
    },
    "00414122": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414122(ushort *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *arg_ch_00;\n    uint var_20ch;\n    uint *var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    arg_ch_00 = 0x41414a;\n    fcn.0041b210(arg_8h, 0, 0x20);\n    var_208h = &fcn.00414122::var_204h;\n    iVar2 = fcn.004114b5(0x42ec40);\n    pcVar1 = _sym.imp.OLEAUT32.dll_SysReAllocString;\n    if (iVar2 == 0) {\n        iVar2 = fcn.004114b5(0x42d728);\n        arg_ch_00 = &fcn.00414122::var_204h;\n        uVar3 = 0xf10a;\n        if (iVar2 == 0) {\n            uVar3 = 0xf108;\n        }\n        fcn.0040a5ec(uVar3, arg_ch_00, 0x100);\n        *arg_8h = uVar3;\n    }\n    else {\n        var_208h = *(arg_ch + 0xc);\n        *arg_8h = *(arg_ch + 8);\n        *(arg_8h + 8) = *(arg_ch + 0x10);\n        *(arg_8h + 0xe) = *(arg_ch + 0x1c);\n        if (*(*(arg_ch + 0x14) + -0xc) != 0) {\n            fcn.00401c10(arg_ch + 0x14);\n            arg_ch_00 = 0x4141aa;\n            uVar3 = (*pcVar1)(var_20ch);\n            *(arg_8h + 6) = uVar3;\n            fcn.00402380();\n        }\n        if (*(*(arg_ch + 0x18) + -0xc) != 0) {\n            fcn.00401c10(arg_ch + 0x18);\n            uVar3 = (*pcVar1)(var_20ch);\n            *(arg_8h + 2) = uVar3;\n            fcn.00402380();\n        }\n    }\n    puVar4 = fcn.00402270(var_208h);\n    uVar3 = (*pcVar1)(*puVar4);\n    *(arg_8h + 4) = uVar3;\n    fcn.00402380();\n    if (*(arg_8h + 2) == 0) {\n        iVar2 = fcn.0040b0a1();\n        puVar4 = fcn.00402270(*(iVar2 + 0x10));\n        uVar3 = (*pcVar1)(*puVar4);\n        *(arg_8h + 2) = uVar3;\n        fcn.00402380();\n    }\n    if ((*(arg_8h + 6) == 0) && (*(arg_8h + 8) != 0)) {\n        iVar2 = fcn.0040b0a1();\n        puVar4 = fcn.00402270(*(*(iVar2 + 4) + 100));\n        uVar3 = (*pcVar1)(*puVar4);\n        *(arg_8h + 6) = uVar3;\n        fcn.00402380();\n    }\n    fcn.00419910(arg_ch_00);\n    return;\n}\n",
        "token_count": 824
    },
    "00414760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414760(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 4) = 0xffffffff;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 0x20);\n    return;\n}\n",
        "token_count": 77
    },
    "004147a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004147a8(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_ch != NULL) {\n        *(in_ECX + 4) = arg_8h;\n        *(in_ECX + 0xc) = *0x431250;\n        *(in_ECX + 0x10) = *0x431254;\n        *(in_ECX + 0x14) = *0x431258;\n        *(in_ECX + 0x18) = *0x43125c;\n        fcn.00411c38(in_ECX + 0x1c);\n        fcn.00411c38(in_ECX + 8);\n        *(in_ECX + 8) = arg_ch;\n        (**(*arg_ch + 4))(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00414920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414920(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((((*(in_ECX + 4) != -1) && (*(in_ECX + 4) == arg_8h)) && (*(in_ECX + 0x1c) != 0)) &&\n       (iVar1 = fcn.004023c0(in_ECX + 0xc, arg_ch),  iVar1 != 0)) {\n        *arg_10h = *(in_ECX + 0x1c);\n        (**(**(in_ECX + 0x1c) + 4))(*(in_ECX + 0x1c));\n        return 1;\n    }\n    *arg_10h = 0;\n    return 0;\n}\n",
        "token_count": 194
    },
    "00415b86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415b86(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00401c30();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x128))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00415bbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415bbf(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = arg_8h;\n    if (arg_8h != 0) goto code_r0x00415bef;\n    iVar3 = fcn.00415b7a();\n    if ((iVar3 == 0) && (iVar3 = fcn.00401c30(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00415bef:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((arg_8h == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (arg_ch != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *arg_ch = 0;\n        }\n        else {\n            *arg_ch = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 485
    },
    "00415c5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415c5f(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t hWnd_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *lpCaption;\n    uint *arg_ch_00;\n    uint var_220h;\n    uint var_21ch;\n    int32_t lpdwProcessId;\n    int32_t var_214h;\n    int32_t hWnd;\n    uint var_20ch;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    fcn.00415b86(0);\n    arg_ch_00 = &hWnd;\n    hWnd_00 = fcn.00415bbf(0, arg_ch_00);\n    if (hWnd_00 != hWnd) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd_00, 1);\n    }\n    lpdwProcessId = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd_00, &lpdwProcessId);\n    if ((((hWnd_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  lpdwProcessId != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd_00, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg_8h != 0)) {\n        piVar2 = arg_8h + 0x78;\n    }\n    var_214h = 0;\n    if ((piVar2 != NULL) && (var_214h = *piVar2,  arg_14h != 0)) {\n        *piVar2 = arg_14h + 0x30000;\n    }\n    if ((arg_10h & 0xf0) == 0) {\n        if ((arg_10h & 0xf) < 2) {\n            arg_10h = arg_10h | 0x30;\n        }\n        else if ((arg_10h & 0xf) - 3 < 2) {\n            arg_10h = arg_10h | 0x20;\n        }\n    }\n    var_20ch._0_2_ = 0;\n    if (arg_8h == 0) {\n        lpCaption = &var_20ch;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            var_6h = 0;\n        }\n    }\n    else {\n        lpCaption = *(arg_8h + 0x50);\n    }\n    fcn.0040c2f4(hWnd_00, arg_ch, lpCaption, arg_10h);\n    if (piVar2 != NULL) {\n        *piVar2 = var_214h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.00415b86(1);\n    fcn.00419910(arg_ch_00);\n    return;\n}\n",
        "token_count": 761
    },
    "004161a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004161a7(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.0040a4b0();\n        in_ECX = extraout_ECX;\n    }\n    return *(in_ECX + 4) + arg_8h;\n}\n",
        "token_count": 92
    },
    "004164ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004164ee(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x0041650d;\ncode_r0x00416508:\n    do {\n        fcn.0040a4b0();\ncode_r0x0041650d:\n        if (*extraout_ECX != 0) goto code_r0x00416548;\n        if (*0x43be84 == 0) {\n            *(unaff_EBP + -0x10) = 0x43be88;\n            *(unaff_EBP + -4) = 0;\n            *0x43be84 = fcn.004162f7();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x43be84 == 0) goto code_r0x00416508;\n        }\n        iVar1 = fcn.004161df();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00416548:\n            iVar1 = fcn.004160c2(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.0041639e(*extraout_ECX, arg_ch);\n            }\n            fcn.0041ada5();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00416598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416598(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x11;\n    }\n    if (*(in_ECX + 4) != 0) {\n        fcn.00409a92(*(in_ECX + 4));\n        *(in_ECX + 4) = 0;\n    }\n    if (arg_ch != 0) {\n        uVar1 = fcn.00409a58(-(arg_8h * 4 >> 0x20 != 0) | arg_8h * 4);\n        *(in_ECX + 4) = uVar1;\n        fcn.0041b210(uVar1, 0, arg_8h << 2);\n    }\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 217
    },
    "004167f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004167f3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.0041958a(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 289
    },
    "00416949": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416949(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00416960. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 126
    },
    "00416963": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416963(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041697a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 127
    },
    "0041697d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041697d(uint nCmdShow)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(in_ECX + 0x20), nCmdShow);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041699e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 131
    },
    "004169a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004169a4(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004169b9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 121
    },
    "004169bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004169bf(uint bEnable)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(in_ECX + 0x20), bEnable);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004169e0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 128
    },
    "004169e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004169e6(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00416a1e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 196
    },
    "00416a24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a24(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((in_ECX != 0) && (*(in_ECX + 0x50) == 0)) {\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        iVar1 = fcn.0041667c(arg_8h_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x4c) != 0)) {\n            (**(**(iVar1 + 0x4c) + 0x9c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00416aa5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416aa5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041accd(0);\n    iVar1 = fcn.0040b0d4();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00409a41(fcn.00416d95);\n        iVar2 = fcn.00409a58(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00417662(0x42ee6c, fcn.00416a8b, fcn.0040c05f, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar3;\n        fcn.00409a41(arg_8h_00);\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 331
    },
    "004176eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004176eb(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041ad00(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0041667c(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0041667c(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00409a41(fcn.00416d95);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.0041961d();\n            if (iVar1 == 0) {\n                fcn.0040a478();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00416843(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.00409a41(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 514
    },
    "00416b7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416b7a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00416b4e();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "00416e5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00416e5e(void)\n\n{\n    if (*0x43bebc == 0) {\n        *0x43bebc = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x43c058);\n    }\n    return *0x43bebc;\n}\n",
        "token_count": 70
    },
    "00416e82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416e82(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < arg_8h) {\n        fcn.0040a4b0();\n    }\n    if (*0x43bebc == 0) {\n        fcn.00416e5e();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = arg_8h * 4 + 0x43c070;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x43c058);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg_8h * 0x18 + 0x43bec0);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x43c058);\n    }\n    (*pcVar2)(arg_8h * 0x18 + 0x43bec0);\n    return;\n}\n",
        "token_count": 257
    },
    "0041740e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041740e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041accd(0);\n    iVar1 = fcn.0040b0d4();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00409a41(fcn.00416d95);\n        iVar2 = fcn.00409a58(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00417662(0x42ef88, fcn.004173b1, fcn.0040c05f, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar3;\n        fcn.00409a41(arg_8h_00);\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 331
    },
    "004174c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004174c9(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.00417496();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004174e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004174e2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041accd(0);\n    iVar1 = fcn.0040b0d4();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00409a41(fcn.00416d95);\n        iVar2 = fcn.00409a58(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00417662(0x42efa4, fcn.004173d2, fcn.0040c05f, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar3;\n        fcn.00409a41(arg_8h_00);\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 329
    },
    "00417596": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417596(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0041756a();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "0041779e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041779e(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00416732(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.004165f6();\n        fcn.00419601();\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00417871": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00417871(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0040b0d4();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.004101f4(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.0041779e();\n            fcn.0041779e();\n            fcn.0041779e();\n            fcn.0041779e();\n            fcn.0041779e();\n        }\n        iVar2 = fcn.0040b0a1();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00416114();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.0041ba69(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.0041ba69(*(iVar3 + 0xc));\n                fcn.0041a83f(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.0041a775(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.0041a775(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 538
    },
    "0041796c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041796c(int32_t *arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_4h;\n    \n    piVar6 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x00417981;\n    do {\n        fcn.0040a4b0();\ncode_r0x00417981:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    iVar2 = *piVar6;\n    piVar5 = piVar6;\n    while (iVar2 != 0) {\n        if (*piVar5 == 0x25) {\n            uVar3 = piVar5[1];\n            if ((uVar3 < 0x31) || (0x39 < uVar3)) {\n                if ((uVar3 < 0x41) || (0x5a < uVar3)) goto code_r0x004179e5;\n                if (uVar3 < 0x3a) goto code_r0x004179c4;\n                iVar4 = uVar3 - 0x38;\n            }\n            else {\ncode_r0x004179c4:\n                iVar4 = uVar3 - 0x31;\n            }\n            piVar5 = piVar5 + 2;\n            if (arg_14h <= iVar4) goto code_r0x004179e7;\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n                arg_ch = arg_ch + iVar4;\n            }\n        }\n        else {\ncode_r0x004179e5:\n            piVar5 = piVar5 + 1;\ncode_r0x004179e7:\n            arg_ch = arg_ch + 1;\n        }\n        iVar2 = *piVar5;\n    }\n    piVar5 = fcn.004020c0(arg_ch);\n    iVar2 = *piVar6;\n    do {\n        if (iVar2 == 0) {\n            fcn.0040a65f(piVar5 - *arg_8h >> 1);\n            return;\n        }\n        if (*piVar6 == 0x25) {\n            uVar3 = piVar6[1];\n            if ((uVar3 < 0x31) || (0x39 < uVar3)) {\n                if ((uVar3 < 0x41) || (0x5a < uVar3)) goto code_r0x00417a87;\n                if (uVar3 < 0x3a) goto code_r0x00417a3c;\n                iVar4 = uVar3 - 0x38;\n            }\n            else {\ncode_r0x00417a3c:\n                iVar4 = uVar3 - 0x31;\n            }\n            piVar6 = piVar6 + 2;\n            if (arg_14h <= iVar4) {\n                *piVar5 = 0x3f;\n                goto code_r0x00417a8e;\n            }\n            piVar1 = arg_10h + iVar4 * 4;\n            iVar4 = *piVar1;\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n                fcn.00412337(piVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar4;\n                piVar5 = piVar5 + iVar4;\n            }\n        }\n        else {\ncode_r0x00417a87:\n            *piVar5 = *piVar6;\n            piVar6 = piVar6 + 1;\ncode_r0x00417a8e:\n            piVar5 = piVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        iVar2 = *piVar6;\n    } while( true );\n}\n",
        "token_count": 935
    },
    "00417bed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417bed(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    \n    if (arg_8h == NULL) {\n        in_ECX = fcn.0040a4b0();\n        arg_8h = extraout_ECX;\n    }\n    if (*(in_ECX + 0x88) == NULL) {\n        (***arg_8h)(0);\n    }\n    else {\n        (**(**(in_ECX + 0x88) + 0xc))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00417da6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417da6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.0041b111(&lpString, 0x10, 0x4313bc, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.00417d5e(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.00419910(unaff_EBX);\n    return;\n}\n",
        "token_count": 272
    },
    "00417e2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417e2f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00417e3d. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(**(param_1 + 0x58) + 0x10))();\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "00417e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417e40(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.0040a4b0();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x00417e56. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x14))();\n    return;\n}\n",
        "token_count": 127
    },
    "00417e59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417e59(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint hKey;\n    uint phkResult;\n    uint lpSubKey;\n    uint var_224h;\n    uint lpName;\n    uint var_4h;\n    \n    fcn.0041ad6c(0x228);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x230) = iVar1;\n    fcn.00401c10(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 == -0x80000000) {\n        iVar1 = fcn.0040a8e2();\n        if (iVar1 == 1) {\n            uVar2 = fcn.0041603a(unaff_EBP + -0x224, L\"Software\\\\Classes\\\\\", unaff_EBP + -0x228);\n            *(unaff_EBP + -4) = 1;\n            fcn.00403210(uVar2);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402380();\n            *(unaff_EBP + -0x230) = 0x80000001;\n        }\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyW)(*(unaff_EBP + -0x230), *(unaff_EBP + -0x228), unaff_EBP + -0x22c);\n    if (iVar1 == 0) {\n        while( true ) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(*(unaff_EBP + -0x22c), 0, unaff_EBP + -0x220, 0x104);\n            if (iVar1 != 0) break;\n            *(unaff_EBP + -4) = 2;\n            fcn.00402270(unaff_EBP + -0x220);\n            *(unaff_EBP + -4) = 3;\n            iVar1 = fcn.00417e59(*(unaff_EBP + -0x22c), unaff_EBP + -0x224);\n            *(unaff_EBP + -4) = 2;\n            fcn.00402380();\n            if (iVar1 != 0) break;\n            *(unaff_EBP + -4) = 0;\n        }\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(*(unaff_EBP + -0x230), *(unaff_EBP + -0x228));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x22c));\n    }\n    fcn.00402380();\n    fcn.0041adc8();\n    return;\n}\n",
        "token_count": 685
    },
    "0041814a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041814a(int32_t arg_8h, uint pvarg)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    if (arg_8h != 0) {\n        arg_8h_00 = (*_sym.imp.OLEAUT32.dll_VariantInit)(pvarg);\n        uVar1 = fcn.0040a689(arg_8h_00);\n        fcn.00401b50(uVar1, arg_8h_00 * 2, pvarg, arg_8h_00 * 2);\n        fcn.0040a65f(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0041876d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041876d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_274h;\n    uint var_270h;\n    uint lpFilePart;\n    uint lpFileName;\n    uint lpRootPathName;\n    uint lpFindFileData;\n    uint lpString;\n    uint var_4h;\n    \n    fcn.0041ad36(0x268);\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar2 = *(unaff_EBP + 0xc);\n    arg_8h_01 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x268) = iVar2;\n    if (arg_8h_00 != 0) goto code_r0x0041879b;\n    do {\n        iVar2 = fcn.0040a4b0();\ncode_r0x0041879b:\n    } while (iVar2 == 0);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(iVar2, 0x104, arg_8h_00, unaff_EBP + -0x26c);\n    if (uVar3 == 0) {\n        fcn.0040a25a(arg_8h_00, 0x104, *(unaff_EBP + -0x268), 0xffffffff);\n        fcn.0041873e(arg_8h_01, *(unaff_EBP + -0x268));\n        goto code_r0x00418904;\n    }\n    if (0x103 < uVar3) {\n        if (arg_8h_01 != 0) {\n            uVar1 = *(unaff_EBP + -0x268);\n            *(arg_8h_01 + 8) = 3;\n            fcn.00402230(uVar1);\n        }\n        goto code_r0x00418904;\n    }\n    fcn.00402350();\n    *(unaff_EBP + -4) = 0;\n    fcn.004185af(arg_8h_00, unaff_EBP + -0x264);\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathIsUNCW)(*(unaff_EBP + -0x264));\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)\n                          (*(unaff_EBP + -0x264), 0, 0, 0, unaff_EBP + -0x274, unaff_EBP + -0x270, 0, 0);\n        if (iVar2 == 0) {\ncode_r0x00418856:\n            fcn.0041873e(arg_8h_01, *(unaff_EBP + -0x268));\n        }\n        else {\n            if ((*(unaff_EBP + -0x270) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperW)(arg_8h_00);\n            }\n            if (((*(unaff_EBP + -0x270) & 4) != 0) ||\n               (iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(*(unaff_EBP + -0x268), unaff_EBP + -0x260),  iVar2 == -1\n               )) goto code_r0x004188f3;\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            if ((*(unaff_EBP + -0x26c) == 0) ||\n               (*(unaff_EBP + -0x26c) < arg_8h_00 || *(unaff_EBP + -0x26c) == arg_8h_00)) goto code_r0x00418856;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(unaff_EBP + -0x234);\n            iVar4 = *(unaff_EBP + -0x26c) - arg_8h_00 >> 1;\n            if (iVar2 + iVar4 < 0x104) {\n                fcn.00412337(*(unaff_EBP + -0x26c), 0x104 - iVar4, unaff_EBP + -0x234);\n                goto code_r0x004188f3;\n            }\n            if (arg_8h_01 != 0) {\n                uVar1 = *(unaff_EBP + -0x268);\n                *(arg_8h_01 + 8) = 3;\n                fcn.00402230(uVar1);\n            }\n        }\n        fcn.00402380();\n    }\n    else {\ncode_r0x004188f3:\n        fcn.00402380();\n    }\ncode_r0x00418904:\n    fcn.0041adb9();\n    return;\n}\n",
        "token_count": 1145
    },
    "00418ce5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418ce5(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int32_t in_ECX;\n    uint var_28h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    uint32_t lpFileSize;\n    uint32_t var_4h;\n    \n    fcn.0041b210(arg_8h, 0, 0x22c);\n    fcn.0040a25a(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x42f0b0) {\ncode_r0x00418e3c:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(*(in_ECX + 4), &lpFileSize);\n            if (iVar1 != 0) {\n                arg_8h[6] = lpFileSize;\n                arg_8h[7] = var_4h;\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.00418b62(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar3 = fcn.00418c85(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar3;\n                    arg_8h[1] = puVar3[1];\n                }\n                iVar1 = fcn.00418b62(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar3 = fcn.00418c85(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar3;\n                    arg_8h[5] = puVar3[1];\n                }\n                iVar1 = fcn.00418b62(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar3 = fcn.00418c85(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar3;\n                    arg_8h[3] = puVar3[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x00418e3c;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 872
    },
    "00419371": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419371(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t arg_10h;\n    \n    if (arg_8h != 0) {\n        arg_10h = arg_8h;\n        arg_8h_00 = fcn.00418fdf(arg_8h);\n        fcn.0041932b(arg_8h_00, arg_8h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0041958a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041958a(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        puVar2 = fcn.00409a58(arg_ch * arg_10h + 4);\n        *puVar2 = *arg_8h;\n        *arg_8h = puVar2;\n        return;\n    }\n    fcn.0040a4b0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 150
    },
    "004195d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195d3(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *in_ECX;\n    \n    if (arg_8h < 4) {\n        arg_8h = 4;\n    }\n    if (arg_ch < 2) {\n        arg_ch = 0x40;\n    }\n    in_ECX[3] = 0;\n    in_ECX[2] = 0;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 128
    },
    "0041961d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041961d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.0041958a(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 200
    },
    "00419910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419910(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x438ddc) {\n        return;\n    }\n    *0x43c9a8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x43c9ac = &arg_8h;\n    *0x43c8e8 = 0x10001;\n    *0x43c890 = 0xc0000409;\n    *0x43c894 = 1;\n    var_328h = *0x438ddc;\n    var_324h = *0x438de0;\n    *0x43c89c = unaff_retaddr;\n    *0x43c974 = in_GS;\n    *0x43c978 = in_FS;\n    *0x43c97c = in_ES;\n    *0x43c980 = in_DS;\n    *0x43c984 = unaff_EDI;\n    *0x43c988 = unaff_ESI;\n    *0x43c98c = unaff_EBX;\n    *0x43c990 = in_EDX;\n    *0x43c994 = in_ECX;\n    *0x43c998 = in_EAX;\n    *0x43c99c = unaff_EBP;\n    *0x43c9a0 = unaff_retaddr;\n    *0x43c9a4 = in_CS;\n    *0x43c9b0 = in_SS;\n    *0x43c8e0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0042435e(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x42ff08);\n    if (*0x43c8e0 == 0) {\n        fcn.0042435e(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 844
    },
    "0041a314": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0041a407: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0041a40c)\n// WARNING: Removing unreachable block (ram,0x0041a43a)\n// WARNING: Removing unreachable block (ram,0x0041a412)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a314(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041b28c(0x435370, 0x18);\n    fcn.004204aa(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x43c340 != 1) {\n        *0x43c33c = 1;\n        *0x43c338 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0041cb4e(*0x43e108);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0041cb4e(*0x43e104);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0041cb45();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0041cb4e(*piVar2);\n                        iVar3 = fcn.0041cb45();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0041cb4e(*0x43e108);\n                        piVar1 = fcn.0041cb4e(*0x43e104);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0041a24e(0x42d500);\n        }\n        fcn.0041a24e(0x42d508);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004203d0(8);\n    }\n    return;\n}\n",
        "token_count": 807
    },
    "0041a9dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041a9dd(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x41aa88;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0041aab4;\n        uStack36 = *0x438ddc ^ &fcn.0041a9dd::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0041a9dd::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0041cd9a();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0041a9dd::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 728
    },
    "004208b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004208b8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004203d0(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00425fca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425fca(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0041a83f(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00421674": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421674(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041b28c(0x4355e0, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.0041cd9a();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00420699();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.00422240(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042173a();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00420699();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0041b2d1();\n    return;\n}\n",
        "token_count": 568
    },
    "0042173a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042173a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041cd9a();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0041cd9a();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00421a02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421a02(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0041ac1b(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0041cd9a();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0041cd9a();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0041abf4(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0042179a(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00427593": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427593(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00427a94;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004276c8;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004276cf;\ncode_r0x004276c8:\n                        do {\n                            var_4h = 1;\ncode_r0x004276cf:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004276dd;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004276dd:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x439d28 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x439d28 < iVar12) {\n                if (iVar12 < *0x439d24) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x439d24;\n                    uVar5 = 1;\n                }\n                goto code_r0x00427a94;\n            }\n            var_10h = *0x439d28 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00427880;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00427880:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00427a94:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3657
    },
    "00427ad7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427ad7(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00427fd8;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x439d44 - 1;\n        iVar4 = *0x439d44 + (*0x439d44 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x439d44 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00427c0c;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00427c13;\ncode_r0x00427c0c:\n                        do {\n                            var_4h = 1;\ncode_r0x00427c13:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00427c21;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00427c21:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x439d40 - *0x439d44) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x439d40 < iVar12) {\n                if (iVar12 < *0x439d3c) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x439d50;\n                    iVar4 = *0x439d48 + (*0x439d48 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x439d48 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x439d48 + (*0x439d48 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x439d48 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x439d50 + *0x439d3c;\n                    uVar5 = 1;\n                }\n                goto code_r0x00427fd8;\n            }\n            var_10h = *0x439d40 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x439d44 - 1;\n            iVar12 = *0x439d44 + (*0x439d44 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x439d44 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00427dc4;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00427dc4:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x439d48 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00427fd8:\n    var_20h = iVar12 << (0x1fU - *0x439d48 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x439d4c == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x439d4c == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3644
    },
    "004023c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.004023c0(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0x10;\n    do {\n        if (*param_1 != *param_2) {\n            iVar2 = *param_1 - *param_2;\n            if (((iVar2 == 0) && (iVar2 = *(param_1 + 1) - *(param_2 + 1),  iVar2 == 0)) &&\n               (iVar2 = *(param_1 + 2) - *(param_2 + 2),  iVar2 == 0)) {\n                iVar2 = *(param_1 + 3) - *(param_2 + 3);\n            }\n            return (iVar2 >> 0x1f | 1U) == 0;\n        }\n        uVar1 = uVar1 - 4;\n        param_2 = param_2 + 1;\n        param_1 = param_1 + 1;\n    } while (3 < uVar1);\n    return true;\n}\n",
        "token_count": 247
    },
    "00416d95": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416d95(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.0040aad5();\n    if ((iVar2 != 0) && (*(iVar2 + 0xc) != 0)) {\n        uVar3 = fcn.0041ba69(*(iVar2 + 0xc));\n        if (arg_8h + 4U < uVar3) {\n            fcn.0041b929(*(iVar2 + 0xc), (uVar3 - arg_8h) + -4);\n        }\n        else {\n            fcn.0041a83f(*(iVar2 + 0xc));\n            *(iVar2 + 0xc) = 0;\n        }\n        return 1;\n    }\n    fcn.0040a478();\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 231
    },
    "00401e30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00401e30(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if ((iVar3 == 0) || (puVar4 = fcn.00401cf0(param_2, iVar3, param_3),  puVar4 == NULL)) {\n        return 0;\n    }\n    uVar8 = *puVar4;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - uVar8) < 0) {\n        fcn.00402070(uVar8);\n    }\n    uVar5 = *puVar4;\n    if (uVar5 == 0xffffffff) {\n        puVar6 = puVar4 + 1;\n        do {\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n        } while (uVar1 != 0);\n        uVar5 = (puVar6 - (puVar4 + 2) >> 1) + 1;\n    }\n    uVar7 = fcn.0041991f(*param_1, uVar8 * 2, puVar4 + 1, uVar5 * 2);\n    fcn.00401da0(uVar7);\n    if (*(*param_1 + -8) < uVar8) {\n        fcn.00402330(0x80070057);\n        pcVar2 = swi(3);\n        uVar7 = (*pcVar2)();\n        return uVar7;\n    }\n    *(*param_1 + -0xc) = uVar8;\n    *(uVar8 * 2 + *param_1) = 0;\n    return 1;\n}\n",
        "token_count": 485
    },
    "00409aa3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409aa3(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (arg_ch * arg_10h >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch * arg_10h;\n    return 0;\n}\n",
        "token_count": 85
    },
    "0040a65f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a65f(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h == -1) {\n        arg_8h = fcn.00402a40(*in_ECX, *(*in_ECX + -8));\n    }\n    fcn.004020f0(arg_8h);\n    return;\n}\n",
        "token_count": 88
    },
    "0040aaee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040aaee(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.00409a92(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.0040a739(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00416578();\n    fcn.00402380();\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 454
    },
    "0041236f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_274h\n\nvoid __cdecl fcn.0041236f(uint32_t arg_8h, int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint in_ECX;\n    uint var_274h;\n    uint var_270h;\n    uint32_t var_234h;\n    uint pszPath;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    var_234h = arg_8h;\n    if (Locale == 0x800) {\n        uVar1 = fcn.0041a50c(&var_ch, 4, 0x42e914);\n        fcn.00401da0(uVar1);\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale, 3, &var_ch, 4);\n        if (iVar4 == 0) goto code_r0x004124ac;\n    }\n    puVar2 = fcn.0041b192();\n    uVar1 = *puVar2;\n    puVar2 = fcn.0041b192();\n    *puVar2 = 0;\n    var_234h = fcn.0041b12f(&pszPath, 0x112, 0x111, in_ECX, var_234h);\n    piVar3 = fcn.0041b192();\n    if (*piVar3 == 0) {\n        puVar2 = fcn.0041b192();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.0041b192();\n        fcn.0040a32f(*puVar2);\n    }\n    if ((var_234h != 0xffffffff) && (var_234h < 0x112)) {\n        puVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(&pszPath);\n        var_274h = 0x40;\n        fcn.0041b210(&var_270h, 0, 0x3c);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x42d830);\n        if ((iVar4 == 0) ||\n           ((pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"FindActCtxSectionStringW\"),  pcVar5 == NULL ||\n            (iVar4 = (*pcVar5)(0, 0, 2, puVar2, &var_274h),  iVar4 == 0)))) {\n            puVar2 = &pszPath;\n        }\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(puVar2, 0, 0);\n    }\ncode_r0x004124ac:\n    fcn.00419910(var_274h);\n    return;\n}\n",
        "token_count": 670
    },
    "004132a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004132a5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (**(arg_8h + 8) == -1) {\n        for (iVar1 = *(arg_8h + 4); *(iVar1 + 0x18) != -1; iVar1 = iVar1 + 0x20) {\n        }\n        **(arg_8h + 8) = iVar1 - *(arg_8h + 4) >> 5;\n    }\n    return **(arg_8h + 8);\n}\n",
        "token_count": 130
    },
    "004135c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004135c9(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = arg_8h[1];\n        uVar1 = fcn.004132a5(arg_8h);\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) && (iVar2 = fcn.0040c4a7(*puVar4, arg_ch),  iVar2 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return var_4h << 0x10 | uVar3 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        arg_8h = *arg_8h;\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 314
    },
    "0041363b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041363b(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    \n    arg_8h_00 = (**(*arg_8h + 0x30))();\n    bVar5 = arg_ch == 0;\n    puVar4 = arg_8h_00;\n    if (bVar5) {\n        for (; puVar4 != NULL; puVar4 = *puVar4) {\n            for (puVar1 = puVar4[1]; puVar1[6] != -1; puVar1 = puVar1 + 8) {\n                if (*(puVar1 + 3) == 0xfff) {\n                    arg_ch = puVar1[1];\n                    if ((arg_ch == 0xffffffff) && (arg_ch = fcn.004135c9(arg_8h_00, *puVar1),  arg_ch == 0xffffffff)) {\n                        return 0;\n                    }\n                    bVar5 = arg_ch == 0;\n                    goto code_r0x0041369b;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x0041369b:\n        if ((!bVar5 && -1 < arg_ch) && (uVar2 = 0,  arg_8h_00 != NULL)) {\n            puVar4 = arg_8h_00;\n            do {\n                if (arg_ch >> 0x10 <= uVar2) break;\n                puVar4 = *puVar4;\n                uVar2 = uVar2 + 1;\n            } while (puVar4 != NULL);\n            if (puVar4 != NULL) {\n                uVar2 = fcn.004132a5(puVar4);\n                if ((arg_ch & 0xffff) <= uVar2) {\n                    iVar3 = puVar4[1] + ((arg_ch & 0xffff) * 8 + -8) * 4;\n                    if (*(iVar3 + 4) == 0xffffffff) {\n                        return iVar3;\n                    }\n                    if (*(iVar3 + 4) == arg_ch) {\n                        return iVar3;\n                    }\n                }\n            }\n        }\n    }\n    do {\n        if (arg_8h_00 == NULL) {\n            return 0;\n        }\n        for (iVar3 = arg_8h_00[1]; *(iVar3 + 0x18) != -1; iVar3 = iVar3 + 0x20) {\n            if (*(iVar3 + 4) == arg_ch) {\n                return iVar3;\n            }\n        }\n        arg_8h_00 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "00414774": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414774(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 4) == -1) || (*(in_ECX + 4) != arg_8h)) {\n        *arg_ch = 0;\n        uVar1 = 0;\n    }\n    else {\n        *arg_ch = *(in_ECX + 8);\n        (**(**(in_ECX + 8) + 4))(*(in_ECX + 8));\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "00415e12": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00415e12(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    fcn.00402350();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401f00(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.00415dc4(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.00402380();\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 254
    },
    "004162f7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004162f7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.0040a478();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 170
    },
    "00416732": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416732(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *arg_8h;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(in_ECX + 8) != 0) {\n                ppiVar1 = *(in_ECX + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00416766;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(in_ECX + 8));\n                fcn.0040a4b0();\n                in_ECX = extraout_ECX;\n            }\n        }\ncode_r0x00416766:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(in_ECX + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(in_ECX + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *arg_8h = piVar5;\n        *arg_ch = piVar3[1];\n        *arg_10h = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "004184b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004184b4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    bool bVar2;\n    uint arg_ch;\n    \n    bVar2 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar2 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00401f30();\n    if (bVar2) {\n        arg_ch = *(param_1 + 0xc);\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00419371(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00418622": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00418622(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_41ch;\n    uint var_4h;\n    \n    fcn.0041ad6c(0x414);\n    *(unaff_EBP + -0x41c) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.004184b4();\n    }\n    fcn.00402380();\n    fcn.0041adc8();\n    return;\n}\n",
        "token_count": 193
    },
    "00418b93": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00418b93(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    if (0x76b < arg_8h) goto code_r0x00418bb1;\n    do {\n        do {\n            fcn.00402330();\ncode_r0x00418bb1:\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        iVar1 = fcn.0041bdf0(&var_24h);\n        *in_ECX = iVar1;\n        in_ECX[1] = iVar1 >> 0x20;\n    } while (iVar1 == -1);\n    return;\n}\n",
        "token_count": 394
    },
    "004193c1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004193c1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    if (-1 < arg_8h) goto code_r0x004193d9;\n    do {\n        fcn.0040a4b0();\ncode_r0x004193d9:\n        if (iVar3 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h_00 == iVar3) {\n            fcn.00409a92(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar3;\n            *(in_ECX + 8) = iVar3;\n            goto code_r0x004194c9;\n        }\n        if (*(in_ECX + 4) == iVar3) {\n            uVar1 = fcn.00409a58(arg_8h_00);\n            *(in_ECX + 4) = uVar1;\n            fcn.0041b210(uVar1, iVar3, arg_8h_00);\n            *(in_ECX + 0xc) = arg_8h_00;\ncode_r0x00419440:\n            *(in_ECX + 8) = arg_8h_00;\n            return;\n        }\n        iVar3 = *(in_ECX + 0xc);\n        if (arg_8h_00 <= iVar3) {\n            iVar3 = *(in_ECX + 8);\n            if (iVar3 < arg_8h_00) {\n                fcn.0041b210(iVar3 + *(in_ECX + 4), 0, arg_8h_00 - iVar3);\n            }\n            goto code_r0x00419440;\n        }\n        iVar2 = *(in_ECX + 0x10);\n        if (iVar2 == 0) {\n            iVar2 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar2 < 4) {\ncode_r0x00419472:\n                iVar2 = 4;\n            }\n            else if (iVar2 < 0x401) {\n                if (iVar2 < 4) goto code_r0x00419472;\n            }\n            else {\n                iVar2 = 0x400;\n            }\n        }\n        arg_8h = iVar2 + iVar3;\n        if (iVar2 + iVar3 <= arg_8h_00) {\n            arg_8h = arg_8h_00;\n        }\n    } while (arg_8h < iVar3);\n    iVar3 = fcn.00409a58(arg_8h);\n    fcn.00401b50(iVar3, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.0041b210(*(in_ECX + 8) + iVar3, 0, arg_8h_00 - *(in_ECX + 8));\n    fcn.00409a92(*(in_ECX + 4));\n    *(in_ECX + 8) = arg_8h_00;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004194c9:\n    *(in_ECX + 4) = iVar3;\n    return;\n}\n",
        "token_count": 798
    },
    "004101fd": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.004101fd(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040aad5();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 44
    },
    "004058f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004058f0(int32_t *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar7;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    uchar *puStack576;\n    int32_t arg_8h;\n    int32_t *piStack568;\n    int32_t *piStack564;\n    uchar auStack548 [512];\n    int32_t iStack36;\n    uint32_t uStack28;\n    uchar uStack24;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42bcd1;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x438ddc ^ &stack0xfffffddc;\n    piStack564 = *0x438ddc ^ &stack0xfffffdd0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    piStack568 = param_1;\n    fcn.00402270();\n    uStack8 = 0;\n    fcn.00409230();\n    fcn.004092b0();\n    arg_8h = 0xb;\n    puStack576 = &stack0xfffffddc;\n    puVar2 = fcn.00408f40();\n    iVar3 = fcn.00419eb0(*puVar2, L\"/automation\");\n    uStack16 = uStack16 & 0xffffff00;\n    piVar9 = unaff_EBP + -4;\n    LOCK();\n    iVar5 = *piVar9;\n    *piVar9 = *piVar9 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(unaff_EBP + -0x10) + 4))();\n    }\n    if (iVar3 == 0) {\n        uVar4 = fcn.00408fc0();\n        uStack24 = 2;\n        fcn.00403210(uVar4);\n        uStack28 = uStack28 & 0xffffff00;\n        piVar9 = piStack568 + -1;\n        LOCK();\n        iVar5 = *piVar9;\n        *piVar9 = *piVar9 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(*piStack568[-4] + 4))(piStack568 + -4);\n        }\n    }\n    piVar9 = &stack0xfffffdd8;\n    piVar8 = 0x2;\n    iVar5 = (*_sym.imp.OLEAUT32.dll_SystemTimeToVariantTime)(unaff_ESI);\n    if (-1 < iVar5) {\n        uVar7 = 0;\n        iVar5 = (**(*piStack564 + 0xc))(piStack564);\n        pcVar1 = _sym.imp.ole32.dll_StringFromGUID2;\n        if (iVar5 != 0) {\n            do {\n                iVar5 = (**(*piStack568 + 0x14))(piStack568, uVar7, &stack0xfffffdcc);\n                if (((iVar5 == 0) && (puStack576 == 0x5)) &&\n                   (iVar5 = (**(*piVar9 + 0x10))(piVar9, uVar7, &stack0xfffffdb8),  -1 < iVar5)) {\n                    (**(*piVar8 + 0xc))(piVar8, &stack0xfffffdc4);\n                    (*pcVar1)(piVar9, &stack0xfffffdc0, 0x100);\n                    iVar5 = fcn.00419eb0(&stack0xfffffdc8, unaff_EDI);\n                    if (iVar5 == 0) {\n                        fcn.004049b0(param_2);\n                        (**(*piVar8 + 8))(piVar8);\n                        uStack28 = 0xffffffff;\n                        piVar9 = arg_8h + -4;\n                        LOCK();\n                        iVar5 = *piVar9;\n                        *piVar9 = *piVar9 + -1;\n                        if (iVar5 == 1 || iVar5 + -1 < 0) {\n                            (**(**(arg_8h + -0x10) + 4))(arg_8h + -0x10);\n                        }\n                        goto code_r0x00405ae4;\n                    }\n                }\n                uVar7 = uVar7 + 1;\n                uVar6 = (**(*piVar9 + 0xc))(piVar9);\n            } while (uVar7 < uVar6);\n        }\n        (**(*piStack568 + 8))(piStack568);\n    }\n    uStack28 = 0xffffffff;\n    piVar9 = arg_8h + -4;\n    LOCK();\n    iVar5 = *piVar9;\n    *piVar9 = *piVar9 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(arg_8h + -0x10) + 4))(arg_8h + -0x10);\n    }\ncode_r0x00405ae4:\n    *in_FS_OFFSET = iStack36;\n    puStack576 = 0x405b04;\n    fcn.00419910(arg_8h);\n    return;\n}\n",
        "token_count": 1250
    },
    "00411a0c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00411a0c(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t var_90h;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    nWidth = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if ((nWidth < 5) || (iVar4 = nWidth,  nHeight < 6)) {\n        fcn.0040a4b0();\n        iVar4 = extraout_ECX;\n    }\n    if (0x20 < iVar4) {\n        iVar4 = 0x20;\n        nWidth = 0x20;\n    }\n    iVar7 = iVar4 + 0xf >> 4;\n    iVar4 = ((iVar4 + -4) / 2 + iVar7 * 0x10) - iVar4;\n    if (0xc < iVar4) {\n        iVar4 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.0041b210(&lpvBits, 0xff, 0x80);\n    puVar3 = &lpvBits + (nHeight + -6 >> 1) * iVar7 * 2;\n    puVar5 = 0x42e570;\n    var_90h = 5;\n    do {\n        uVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n        uVar6 = ~(uVar1 << (iVar4 & 0x1f));\n        *puVar3 = uVar6 >> 8;\n        puVar3[1] = uVar6;\n        puVar3 = puVar3 + iVar7 * 2;\n        var_90h = var_90h + -1;\n    } while (var_90h != 0);\n    uVar2 = 1;\n    *0x43be80 = (*_sym.imp.GDI32.dll_CreateBitmap)(nWidth, nHeight, 1, 1, &lpvBits);\n    if (*0x43be80 == 0) {\n        *0x43be80 = (*_sym.imp.USER32.dll_LoadBitmapW)(0, 0x7fe3);\n    }\n    fcn.00419910(uVar2);\n    return;\n}\n",
        "token_count": 615
    },
    "00408a00": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408a79)\n\nvoid __cdecl\nfcn.00408a00(int32_t noname_0, char *noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    pcVar4 = noname_1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    puVar6 = noname_0 + 0x20;\n    uVar5 = 0;\n    do {\n        puVar1 = puVar6 + uVar5;\n        uVar3 = noname_1[uVar5 % (pcVar4 - (noname_1 + 1))];\n        *puVar1 = uVar5;\n        uVar5 = uVar5 + 1;\n        puVar1[(noname_0 - puVar6) + 0x120] = uVar3;\n    } while (uVar5 < 0x100);\n    uVar5 = 0;\n    iVar7 = 0x100;\n    do {\n        uVar3 = *puVar6;\n        uVar5 = uVar3 + puVar6[0x100] + uVar5 & 0xff;\n        *puVar6 = *(uVar5 + 0x20 + noname_0);\n        puVar6 = puVar6 + 1;\n        iVar7 = iVar7 + -1;\n        *(uVar5 + 0x20 + noname_0) = uVar3;\n    } while (iVar7 != 0);\n    return;\n}\n",
        "token_count": 434
    },
    "00408aa0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408b2e)\n// WARNING: Removing unreachable block (ram,0x00408aea)\n// WARNING: Removing unreachable block (ram,0x00408b05)\n\nuint8_t * fcn.00408aa0(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint8_t *unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint8_t *puVar5;\n    uint unaff_retaddr;\n    uint8_t *noname_5;\n    \n    puVar2 = fcn.00409a87(in_EAX + 1);\n    noname_5 = puVar2;\n    fcn.0041b210(puVar2, 0, in_EAX + 1);\n    fcn.00408a00(unaff_ESI, param_2, unaff_EDI, unaff_EBP, unaff_EBX, noname_5, unaff_retaddr);\n    if (in_EAX != 0) {\n        uVar3 = 0;\n        uVar4 = 0;\n        puVar5 = puVar2;\n        do {\n            uVar3 = uVar3 + 1 & 0xff;\n            uVar1 = *(uVar3 + 0x20 + unaff_ESI);\n            uVar4 = uVar4 + uVar1 & 0xff;\n            *(uVar3 + 0x20 + unaff_ESI) = *(uVar4 + 0x20 + unaff_ESI);\n            *(uVar4 + 0x20 + unaff_ESI) = uVar1;\n            in_EAX = in_EAX + -1;\n            *puVar5 = *((*(uVar3 + 0x20 + unaff_ESI) + uVar1 & 0x800000ff) + 0x20 + unaff_ESI) ^\n                      puVar5[noname_5 - puVar2];\n            puVar5 = puVar5 + 1;\n        } while (in_EAX != 0);\n        return unaff_EBP;\n    }\n    return puVar2;\n}\n",
        "token_count": 522
    },
    "00416d5d": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416d5d(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(arg_8h);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00409ba2": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409ba2(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h < 0x81) {\n        *in_ECX = in_ECX + 1;\n    }\n    else {\n        fcn.00409b3e(arg_8h);\n    }\n    return *in_ECX;\n}\n",
        "token_count": 88
    },
    "0040d590": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0040d590(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004164ee(0x40a4cc);\n    if (iVar1 == 0) {\n        fcn.0040a4b0();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x68) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x70) = uVar2 >> 0x10;\n    *(iVar1 + 0x6c) = uVar2;\n    return iVar1 + 0x58;\n}\n",
        "token_count": 163
    },
    "0040fa44": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fa44(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.00411636(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0040fada;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.00411636(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0040fada:\n        uVar1 = fcn.0040f330(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if (arg_8h - 0x132 < 7) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0040f330(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 525
    },
    "0042a3b0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042a3b0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 593
    },
    "004264dd": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004264dd(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6) >> 4;\n    uVar4 = uVar1 & 0x7ff;\n    uVar2 = *(arg_ch + 6) & 0x8000;\n    uVar3 = *arg_ch;\n    var_4h = 0x80000000;\n    if ((uVar1 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar3 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x0042658c;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    var_4h = uVar3 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    uVar3 = uVar3 << 0xb;\n    while( true ) {\n        *arg_8h = uVar3;\n        arg_8h[1] = var_4h;\n        if ((var_4h & 0x80000000) != 0) break;\n        var_4h = arg_8h[1] * 2 | *arg_8h >> 0x1f;\n        uVar3 = *arg_8h * 2;\n        uVar4 = uVar4 - 1;\n    }\n    uVar2 = uVar2 | uVar4;\ncode_r0x0042658c:\n    *(arg_8h + 2) = uVar2;\n    return;\n}\n",
        "token_count": 498
    },
    "00401000": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "get ntdll base address"
        ],
        "decompiled_code": "\ncode ** fcn.00401000(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    // [00] -r-x section size 180224 named .text\n    uStack8 = 0x42b2bb;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.ActiveScriptSite.0;\n    param_1[1] = vtable.ActiveScriptSite.1.0;\n    param_1[2] = vtable.CArray_class_ExposedObject___class_ExposedObject__.0;\n    param_1[3] = NULL;\n    param_1[6] = NULL;\n    param_1[5] = NULL;\n    param_1[4] = NULL;\n    uStack4 = 0;\n    fcn.00409b08(uVar1);\n    param_1[0xe] = 0x1;\n    param_1[0xd] = 0x1;\n    param_1[0xc] = NULL;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 296
    },
    "00402430": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00402430(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code **unaff_ESI;\n    \n    *unaff_ESI = vtable.CAppEventListener.0;\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    unaff_ESI[8] = iVar3 + 0x10;\n    unaff_ESI[1] = NULL;\n    unaff_ESI[7] = NULL;\n    unaff_ESI[0xb] = 0x1;\n    unaff_ESI[3] = *0x431250;\n    unaff_ESI[4] = *0x431254;\n    unaff_ESI[5] = *0x431258;\n    pcVar1 = *0x43125c;\n    unaff_ESI[9] = NULL;\n    unaff_ESI[10] = NULL;\n    unaff_ESI[6] = pcVar1;\n    return;\n}\n",
        "token_count": 266
    },
    "004030b0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.004030b0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b7ab;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.ExposedObject.0;\n    piVar2 = fcn.0040a197(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[2] = iVar3 + 0x10;\n    uStack8 = 0;\n    param_1[1] = NULL;\n    fcn.004032d0(0x431484);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 284
    },
    "00403180": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403180(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b938;\n    uStack12 = *in_FS_OFFSET;\n    uVar3 = *0x438ddc ^ &uStack12;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.00403210(&stack0x00000004);\n    uStack8 = 0xffffffff;\n    piVar1 = unaff_retaddr + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 258
    },
    "00403880": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403880(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint arg_48h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint var_1h;\n    uint var_bp_14h;\n    int32_t iStack40;\n    int32_t iVar5;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iVar4 = 0;\n    iStack40 = 0x4038b4;\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        iStack40 = -0x7fffbffb;\n        piVar2 = fcn.00402330();\n    }\n    (**(*piVar2 + 0xc))();\n    (**(**(noname_0 + 0x48) + 0x20))();\n    fcn.00401cd0();\n    fcn.00403780();\n    iVar3 = fcn.00409a58(0xc);\n    iVar5 = CONCAT31(unaff_EBP >> 8, 2);\n    if (iVar3 != 0) {\n        iVar4 = fcn.004030b0();\n    }\n    *(iVar4 + 4) = iVar1;\n    fcn.00401ba0(in_ECX + -0x10);\n    fcn.00403180();\n    iVar1 = *(noname_0 + 0x1c);\n    if (iVar1 < 0) {\n        fcn.0040a4b0();\n    }\n    fcn.00401910();\n    *(*(noname_0 + 0x18) + iVar1 * 4) = iVar4;\n    piVar2 = iVar5 + -4;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar1 == 1 || iVar1 + -1 < 0) {\n        (**(**(iVar5 + -0x10) + 4))(iVar5 + -0x10);\n    }\n    piVar2 = unaff_EBX + -4;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar1 == 1 || iVar1 + -1 < 0) {\n        (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n    }\n    *in_FS_OFFSET = iStack40;\n    return;\n}\n",
        "token_count": 711
    },
    "004039f0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004039f0(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint arg_48h, uint arg_4ch, uint noname_18, uint arg_54h)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    uint var_ch;\n    uint var_1ch;\n    uint var_20h;\n    uint var_28h;\n    int32_t arg_8h;\n    int32_t **ppiStack40;\n    int32_t iStack36;\n    uint32_t uStack28;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b900;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x438ddc ^ &stack0xffffffd8;\n    uVar5 = *0x438ddc ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    arg_8h = 0x403a2b;\n    piVar6 = fcn.0040a197();\n    if (piVar6 == NULL) {\n        arg_8h = -0x7fffbffb;\n        piVar6 = fcn.00402330();\n    }\n    (**(*piVar6 + 0xc))();\n    uStack8 = 0;\n    piVar6 = fcn.0040a197();\n    if (piVar6 == NULL) {\n        piVar6 = fcn.00402330(0x80004005);\n    }\n    ppiVar7 = (**(*piVar6 + 0xc))();\n    ppiStack40 = ppiVar7 + 4;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    fcn.00409ca7(0, 0xffffffff);\n    *(noname_0 + 0x40) = uStack4;\n    (*_sym.imp.ole32.dll_CLSIDFromProgID)(L\"VBScript\", &stack0xffffffd4);\n    cVar4 = fcn.00403780(noname_0);\n    if (cVar4 == '\\0') {\ncode_r0x00403c3b:\n        ppiVar1 = ppiVar7 + 3;\n        LOCK();\n        piVar6 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n    }\n    else {\n        ppiVar7 = noname_0 + 0x48;\n        (*_sym.imp.ole32.dll_CoCreateInstance)(&stack0xffffffc8, 0, 1, 0x431230, ppiVar7);\n        cVar4 = fcn.00403780(noname_0);\n        if (cVar4 != '\\0') {\n            (****ppiVar7)(*ppiVar7, 0x431240, noname_0 + 0x4c);\n            cVar4 = fcn.00403780(noname_0);\n            piVar6 = *ppiVar7;\n            iVar8 = *piVar6;\n            if (cVar4 == '\\0') {\ncode_r0x00403b34:\n                (**(iVar8 + 8))(piVar6);\n                *(noname_0 + 0x4c) = 0;\n                *ppiVar7 = NULL;\n                *(noname_0 + 0x54) = 0;\n            }\n            else {\n                (**(iVar8 + 0xc))(piVar6, noname_0 + 0xc);\n                cVar4 = fcn.00403780(noname_0);\n                if (cVar4 == '\\0') {\n                    (**(**ppiVar7 + 8))(*ppiVar7);\n                    piVar6 = *(noname_0 + 0x4c);\n                    iVar8 = *piVar6;\n                    goto code_r0x00403b34;\n                }\n                (**(**(noname_0 + 0x4c) + 0xc))(*(noname_0 + 0x4c));\n                cVar4 = fcn.00403780(noname_0);\n                if (cVar4 == '\\0') {\n                    (**(**ppiVar7 + 8))(*ppiVar7);\n                    (**(**(noname_0 + 0x4c) + 8))(*(noname_0 + 0x4c));\n                    *(noname_0 + 0x4c) = 0;\n                    *ppiVar7 = NULL;\n                    *(noname_0 + 0x54) = 0;\n                    fcn.004023a0();\n                    fcn.004023a0();\n                    goto code_r0x00403c7c;\n                }\n                iVar8 = 0;\n                *(noname_0 + 0x54) = 0;\n                if (0 < *(noname_0 + 0x1c)) {\n                    do {\n                        if ((iVar8 < 0) || (*(noname_0 + 0x1c) <= iVar8)) {\n                            fcn.0040a4b0();\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        puVar2 = *(*(noname_0 + 0x18) + iVar8 * 4);\n                        if (puVar2 != NULL) {\n                            (***puVar2)(1);\n                        }\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < *(noname_0 + 0x1c));\n                }\n                if (*(noname_0 + 0x18) != 0) {\n                    fcn.00409a92(*(noname_0 + 0x18));\n                    *(noname_0 + 0x18) = 0;\n                }\n                *(noname_0 + 0x20) = 0;\n                *(noname_0 + 0x1c) = 0;\n                *(noname_0 + 0x3c) = 0;\n            }\n            ppiVar7 = uVar5 - 0x10;\n            goto code_r0x00403c3b;\n        }\n        ppiVar7 = uVar5 - 0x10;\n        ppiVar1 = uVar5 - 4;\n        LOCK();\n        piVar6 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n    }\n    uStack28 = uStack28 & 0xffffff00;\n    if (piVar6 + -1 < 1) {\n        (**(**ppiVar7 + 4))(ppiVar7);\n    }\n    uStack28 = 0xffffffff;\n    piVar6 = arg_8h + -4;\n    LOCK();\n    iVar8 = *piVar6;\n    *piVar6 = *piVar6 + -1;\n    if (iVar8 == 1 || iVar8 + -1 < 0) {\n        (**(**(arg_8h + -0x10) + 4))(arg_8h + -0x10);\n    }\ncode_r0x00403c7c:\n    *in_FS_OFFSET = iStack36;\n    fcn.00419910(arg_8h);\n    return;\n}\n",
        "token_count": 1764
    },
    "00404c40": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404c40(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uchar *puStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar auStack20 [8];\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b828;\n    iStack12 = *in_FS_OFFSET;\n    uStack36 = *0x438ddc ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    uStack40 = 0;\n    puStack44 = NULL;\n    puStack48 = &stack0xffffffec;\n    iStack52 = 0x400;\n    uStack56 = 0x404c7b;\n    uStack56 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    uStack60 = 0;\n    uStack64 = 0x1100;\n    puStack68 = 0x404c89;\n    (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n    puStack68 = 0x404c8e;\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        puStack68 = 0x80004005;\n        piVar2 = fcn.00402330();\n    }\n    puStack68 = 0x404cac;\n    iStack52 = (**(*piVar2 + 0xc))();\n    iStack52 = iStack52 + 0x10;\n    puStack68 = puStack48;\n    uVar3 = (*pcVar1)();\n    fcn.00401cd0(&stack0xffffffcc, 0x4322cc, uVar3);\n    puStack44 = &stack0xffffffbc;\n    iVar4 = fcn.00401ba0(iStack52 + -0x10);\n    puStack68 = iVar4 + 0x10;\n    fcn.00406110();\n    (*_sym.imp.KERNEL32.dll_LocalFree)(iStack52);\n    uVar3 = (*pcVar1)();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 589
    },
    "00404d10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404d10(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int16_t *piVar7;\n    uchar *unaff_EBP;\n    int32_t iVar8;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1h;\n    uchar *puVar9;\n    uint uVar10;\n    int16_t *piVar11;\n    uint uVar12;\n    uchar *puVar13;\n    uchar auStack664 [8];\n    uchar auStack640 [24];\n    int32_t iStack616;\n    int16_t iStack560;\n    uchar auStack558 [18];\n    uchar auStack540 [456];\n    int32_t iStack84;\n    uchar auStack12 [12];\n    \n    *in_FS_OFFSET = auStack12;\n    fcn.00401ba0();\n    piVar4 = fcn.0040a197();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00402330();\n    }\n    (**(*piVar4 + 0xc))();\n    iVar5 = *(param_1 + 0x234);\n    if (0 < *(iVar5 + -0xc)) {\n        iVar5 = fcn.0041a5dc(iVar5, 0x5c);\n        if ((iVar5 != 0) && (unaff_EBP = iVar5 - *(param_1 + 0x234) >> 1,  -1 < unaff_EBP)) {\n            uVar6 = fcn.00408f10(&stack0xfffffd7c);\n            fcn.00403210(uVar6);\n            piVar4 = unaff_EDI + -4;\n            LOCK();\n            iVar5 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n            }\n            fcn.00408fc0();\n            fcn.00403210();\n            piVar4 = iStack616 + -4;\n            LOCK();\n            iVar5 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(iStack616 + -0x10) + 4))();\n            }\n        }\n    }\n    puVar13 = auStack540;\n    uVar6 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0);\n    piVar4 = fcn.0040a197();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00402330(0x80004005);\n    }\n    (**(*piVar4 + 0xc))();\n    iVar5 = 1;\n    uVar12 = 0x4322e4;\n    fcn.00402970(0x4322e4);\n    piVar7 = &iStack560;\n    do {\n        iVar1 = *piVar7;\n        piVar7 = piVar7 + 1;\n    } while (iVar1 != 0);\n    piVar11 = &iStack560;\n    fcn.00402970(piVar11, piVar7 - auStack558 >> 1);\n    uVar10 = 0x4322e8;\n    fcn.00402970(0x4322e8, 9);\n    iVar8 = 0;\n    if (0 < *(param_1 + 600)) {\n        do {\n            puVar9 = 0x4322fc;\n            fcn.00402970(0x4322fc, 2);\n            if ((iVar8 < 0) || (*(param_1 + 600) <= iVar8)) goto code_r0x00404fbf;\n            iVar2 = *(*(param_1 + 0x254) + iVar8 * 4);\n            fcn.00402970(iVar2, *(iVar2 + -0xc));\n            uVar10 = 0x4322e4;\n            fcn.00402970();\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < *(param_1 + 600));\n    }\n    unaff_EBP = puVar13;\n    iVar8 = iVar5;\n    fcn.0041b210(auStack640, 0, 0x40, uVar10);\n    puVar9 = &stack0xfffffd7c;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_CreateProcessWithLogonW)\n                      (uVar6, unaff_EBP, *(param_1 + 0x238), 1, 0, iVar8, 0x400, 0, 0, puVar9, &stack0xfffffd64);\n    if (iVar5 == 0) {\n        fcn.00404c40();\ncode_r0x00404fbf:\n        fcn.0040a4b0();\n    }\n    uVar10 = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar6);\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(uVar12, auStack664);\n    pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(piVar11);\n    (*pcVar3)(piVar11);\n    piVar4 = iVar8 + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(iVar8 + -0x10) + 4))(iVar8 + -0x10);\n    }\n    piVar4 = unaff_EBP + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(unaff_EBP + -0x10) + 4))(unaff_EBP + -0x10);\n    }\n    piVar4 = puVar9 + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(puVar9 + -0x10) + 4))(puVar9 + -0x10);\n    }\n    *in_FS_OFFSET = iStack84;\n    fcn.00419910(uVar10);\n    return;\n}\n",
        "token_count": 1520
    },
    "00406110": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406110(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b938;\n    iStack12 = *in_FS_OFFSET;\n    uVar2 = *0x438ddc ^ &iStack12;\n    *in_FS_OFFSET = &iStack12;\n    uStack4 = 0;\n    iVar3 = fcn.0040b0a1(uVar2);\n    (*_sym.imp.USER32.dll_MessageBoxW)(0, param_1, *(iVar3 + 0x10), 0);\n    piVar1 = iStack12 + -4;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(iStack12 + -0x10) + 4))(iStack12 + -0x10);\n    }\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 274
    },
    "00409190": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004091f0)\n// WARNING: Removing unreachable block (ram,0x004091fd)\n\nint32_t * __thiscall fcn.00409190(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b508;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    if (param_1 == NULL) {\n        fcn.00402330(0x80004005, uVar1);\n        param_1 = extraout_ECX;\n    }\n    iVar2 = (**(*param_1 + 0xc))();\n    *param_2 = iVar2 + 0x10;\n    uStack8 = 0;\n    fcn.004032d0(0x432374);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_2;\n}\n",
        "token_count": 297
    },
    "00409400": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00409400(int32_t *param_1, uint32_t param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b508;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    if (param_1 == NULL) {\n        fcn.00402330(0x80004005, uVar1);\n        param_1 = extraout_ECX;\n    }\n    iVar2 = (**(*param_1 + 0xc))();\n    *param_3 = iVar2 + 0x10;\n    uStack8 = 0;\n    if ((param_2 == 0) || ((param_2 & 0xffff0000) != 0)) {\n        fcn.004094a0(param_2);\n    }\n    else {\n        iVar2 = fcn.0040a654(param_2 & 0xffff);\n        if (iVar2 != 0) {\n            fcn.00409610(iVar2, param_2 & 0xffff);\n        }\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return param_3;\n}\n",
        "token_count": 354
    },
    "0040a44d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a44d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0040a5ec(*(param_1 + 0x114), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 100
    },
    "0040b347": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b347(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040b17f();\n    if (iVar2 == 0) {\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) &&\n           ((0x27 < *arg_ch && (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)\n            ))) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar3;\n            uVar3 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            iVar2 = 1;\n            arg_ch[4] = uVar3;\n            arg_ch[9] = 1;\n            if (0x67 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, \"DISPLAY\", 0xffffffff, arg_ch + 10, 0x20);\n            }\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    else {\n        iVar2 = (**0x43bc78)(arg_8h, arg_ch);\n        if (((iVar2 != 0) && (*0x43bc88 == 0)) && (0x67 < *arg_ch)) {\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch + 10, 0xffffffff, arg_ch + 10, 0x20);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 500
    },
    "0040e6b3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040e6b3(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00411ba6();\n    return param_1;\n}\n",
        "token_count": 147
    },
    "004117b8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004117b8(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "0041182c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041182c(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0040b0a1();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 152
    },
    "004165f6": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004165f6(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00409a92(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.004195bd();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "004167b5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004167b5(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.CMapPtrToPtr.0;\n    if (arg_8h < 1) {\n        arg_8h = 0xa;\n    }\n    in_ECX[1] = NULL;\n    in_ECX[2] = 0x11;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[5] = NULL;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 137
    },
    "004168c1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004168c1(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.004195bd();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "0042a53a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042a53a(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042a506();\n    *param_1 = 0x38;\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    param_1[3] = 0x900;\n    param_1[4] = 0x4312c0;\n    iVar1 = fcn.0042a4bb();\n    if (iVar1 < 0) {\n        *0x43cfac = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 148
    },
    "00402b90": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402b90(code **param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b258;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x438ddc ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CEnumVariant.0;\n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    iVar3 = 0;\n    uStack4 = 0;\n    if (param_1[0xb] == NULL) {\n        iVar4 = 0;\n        if (0 < param_1[9]) {\n            do {\n                (*pcVar1)(param_1[10] + iVar3, uVar2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + 0x10;\n            } while (iVar4 < param_1[9]);\n        }\n        fcn.00409a92(param_1[10]);\n    }\n    else {\n        fcn.00411e0d();\n    }\n    fcn.00411c1f();\n    uStack4 = 0xffffffff;\n    fcn.00411854();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 341
    },
    "00402c40": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00402c40(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantClear;\n    iVar3 = param_1;\n    iVar4 = in_EAX;\n    if (0 < in_EAX) {\n        do {\n            (*pcVar1)(iVar3);\n            iVar4 = iVar4 + -1;\n            iVar3 = iVar3 + 0x10;\n        } while (iVar4 != 0);\n    }\n    iVar3 = 0;\n    if (0 < in_EAX) {\n        iVar4 = param_1;\n        do {\n            iVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(iVar4, iVar4 + (param_2 - param_1));\n            pcVar1 = _sym.imp.OLEAUT32.dll_VariantCopy;\n            if (iVar2 != 0) {\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    param_1 = iVar3 * 0x10 + param_1;\n                    do {\n                        (*pcVar1)(param_1);\n                        iVar3 = iVar3 + -1;\n                        param_1 = param_1 + -0x10;\n                    } while (-1 < iVar3);\n                }\n                fcn.0040a478();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + 0x10;\n        } while (iVar3 < in_EAX);\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "00404a50": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00404a50(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    int16_t *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar2 = fcn.00409a58(0x30);\n    if (iVar2 == 0) {\n        arg_ch = NULL;\n    }\n    else {\n        arg_ch = fcn.00402430();\n    }\n    fcn.00414c32(*(param_1 + 0x244), arg_ch);\n    (**(*arg_ch + 4))(arg_ch);\n    if (unaff_EBX != NULL) {\n        do {\n            iVar1 = *unaff_EBX;\n            unaff_EBX = unaff_EBX + 1;\n        } while (iVar1 != 0);\n    }\n    fcn.00402120();\n    arg_ch[9] = unaff_EDI;\n    arg_ch[10] = unaff_ESI;\n    arg_ch[0xb] = *(param_1 + 0x224);\n    fcn.00402810(unaff_EDI);\n    return;\n}\n",
        "token_count": 267
    },
    "00404b60": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b60(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    uint *puVar4;\n    uchar *puStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uchar auStack76 [4];\n    uint uStack72;\n    uchar auStack64 [52];\n    uint32_t uStack12;\n    \n    uStack12 = *0x438ddc ^ &stack0xffffffb4;\n    puStack92 = &stack0xffffffb8;\n    uStack96 = 0x431260;\n    uStack100 = 0;\n    uStack104 = arg_8h;\n    uStack72 = 0;\n    puStack108 = 0x404b9b;\n    (*_sym.imp.ole32.dll_CoGetObject)();\n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantClear;\n    puStack108 = &stack0xffffffb0;\n    uStack112 = 0x404ba8;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    pcVar2 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    uStack112 = 8;\n    uStack116 = 0;\n    uStack120 = arg_ch;\n    puStack124 = &stack0xffffffac;\n    iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)();\n    if (iVar3 == 0) {\n        (*_sym.imp.ole32.dll_CLSIDFromProgID)(puStack92, &stack0xffffffc0);\n    }\n    puVar4 = &stack0xffffffac;\n    (*pcVar1)();\n    arg_8h_01 = &stack0xffffffa8;\n    (*pcVar2)(arg_8h_01, arg_10h, 0, 8);\n    arg_8h_00 = &stack0xffffff84;\n    puStack124 = NULL;\n    iVar3 = (***puVar4)(puVar4, 0x431270);\n    if (iVar3 < 0) {\n        fcn.00419910(arg_8h_01);\n        return;\n    }\n    (**(*arg_10h + 8))(arg_10h);\n    fcn.00419910(arg_8h_00);\n    return;\n}\n",
        "token_count": 589
    },
    "00405fe0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fe0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint arg_8h_00;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint uStack76;\n    uchar auStack72 [4];\n    int32_t iStack68;\n    int32_t *piStack64;\n    uchar auStack60 [4];\n    int32_t aiStack56 [5];\n    uchar auStack36 [8];\n    uchar auStack28 [16];\n    uint32_t uStack12;\n    \n    uStack12 = *0x438ddc ^ &uStack76;\n    piVar2 = arg_8h;\n    iVar1 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(arg_8h, auStack28);\n    if (-1 < iVar1) {\n        puVar3 = NULL;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(auStack36, 0, 0x15, 0x431260, &stack0xffffffb0);\n        if (-1 < iVar1) {\n            uStack76 = 0;\n            iVar1 = (***puVar3)(puVar3, 0x431270, &uStack76);\n            if (-1 < iVar1) {\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(aiStack56);\n                arg_8h_00 = 8;\n                iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(auStack60, arg_ch, 0);\n                if (iVar1 == 0) {\n                    iVar1 = (***piVar2)(piVar2, 0x4312a0, &stack0xffffffac);\n                    if (iVar1 == 0) {\n                        piVar2 = aiStack56;\n                        iVar1 = (**(*piStack64 + 0xc))(piStack64);\n                        if (iVar1 < 0) goto code_r0x00406011;\n                        fcn.004049b0(auStack72);\n                    }\n                    else {\n                        piVar2 = &iStack68;\n                        fcn.00405b60(arg_8h);\n                    }\n                    arg_8h_00 = uStack76;\n                    fcn.00404a50(iStack68, puVar3);\n                }\n                (**(*piVar2 + 8))(piVar2);\n                fcn.00419910(arg_8h_00);\n                return;\n            }\n        }\n    }\ncode_r0x00406011:\n    fcn.00419910(unaff_ESI);\n    return;\n}\n",
        "token_count": 587
    },
    "0040ac13": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040ac13(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    fcn.00402270(0x42d86c);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040aba5(unaff_EBP + -0x10);\n    fcn.00402380();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 1388
    },
    "0040ae57": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040ae57(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    fcn.00402270(0x42d890);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040aba5(unaff_EBP + -0x10);\n    fcn.00402380();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 408
    },
    "0040af21": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040af21(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0041ad00(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.00402350();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.004020c0(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.00409a58(0xc);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.0041608f(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0040ac13();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.0041608f(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0040ae57();\n    }\n    pcVar3 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *(pcVar3 + 4) = uVar5;\n    iVar4 = fcn.0041608f(0x14);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 6;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0040aeda();\n    }\n    *(extraout_ECX[0x1e] + 8) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 881
    },
    "004104db": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004104db(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(arg_8h + 4);\n    if ((iVar2 == 0x200) || (iVar2 == 0xa0)) {\n        iVar2 = fcn.0040aad5();\n        iVar3 = fcn.00410428(*(arg_8h + 0x14), *(arg_8h + 0x18));\n        if ((iVar3 == 0) || (*(arg_8h + 4) != *(iVar2 + 0x54))) {\n            *(iVar2 + 0x4c) = *(arg_8h + 0x14);\n            *(iVar2 + 0x50) = *(arg_8h + 0x18);\n            *(iVar2 + 0x54) = *(arg_8h + 4);\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    else if ((iVar2 == 0xf) || (iVar2 == 0x118)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 291
    },
    "004138f5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004138f5(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.00402380();\n    fcn.00402380();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00414d85": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d85(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.0041851a();\n    in_ECX[4] = arg_8h;\n    in_ECX[5] = NULL;\n    in_ECX[6] = NULL;\n    in_ECX[7] = NULL;\n    in_ECX[8] = NULL;\n    *in_ECX = vtable.CMemFile.0;\n    in_ECX[9] = 0x1;\n    return;\n}\n",
        "token_count": 120
    },
    "00414dba": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414dba(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    \n    if ((arg_8h == 0) && (arg_ch != 0)) {\n        fcn.0040a4b0();\n        in_ECX = extraout_ECX;\n        arg_ch = extraout_EDX;\n    }\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 0x10) = arg_10h;\n    *(in_ECX + 0x24) = 0;\n    *(in_ECX + 0x20) = arg_8h;\n    *(in_ECX + 0x18) = arg_ch;\n    *(in_ECX + 0x1c) = ~-(arg_10h != 0) & arg_ch;\n    return;\n}\n",
        "token_count": 222
    },
    "00414ff4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414ff4(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "00415109": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00415109(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.00414ff4();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.00418622();\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 206
    },
    "00417662": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00417662(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t arg_ch_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.004195d3(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.004167b5(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.004167b5(4);\n    arg_ch_00 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x004176b7;\n    do {\n        arg_ch_00 = fcn.0040a4b0();\ncode_r0x004176b7:\n    } while (*(unaff_EBP + 0x10) == arg_ch_00);\n    fcn.00416598(7, arg_ch_00);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 471
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004010a0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b28b;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.ActiveScriptSite.0;\n    param_1[1] = vtable.ActiveScriptSite.1.0;\n    uStack4 = 0;\n    fcn.00409e81(uVar1);\n    uStack4 = 0xffffffff;\n    param_1[2] = vtable.CArray_class_ExposedObject___class_ExposedObject__.0;\n    if (param_1[3] != NULL) {\n        fcn.00409a92(param_1[3]);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 237
    },
    "004015e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.004015e0(int32_t *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b749;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar2 = (**(**(*param_2 + -0x10) + 0x10))(uVar1);\n        if (piVar2 != NULL) goto code_r0x00401639;\n    }\n    piVar2 = fcn.0040a197();\n    piVar2 = (**(*piVar2 + 0x10))();\ncode_r0x00401639:\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    fcn.004017e0(param_1, *param_2, *(*param_2 + -0xc), *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 378
    },
    "004016a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004016a0(int32_t *param_1, int32_t *param_2, int16_t *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b709;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x438ddc ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_2 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x004016fb;\n    }\n    piVar3 = fcn.0040a197();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x004016fb:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00402330(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        piVar5 = param_3;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        iVar4 = piVar5 - (param_3 + 1) >> 1;\n    }\n    fcn.004017e0(param_1, *param_2, *(*param_2 + -0xc), param_3, iVar4);\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 474
    },
    "00401780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401780(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00402330(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "004017e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004017e0(int32_t *param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    int32_t arg_ch;\n    \n    param_5 = param_3 + param_5;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - param_5) < 0) {\n        fcn.00402070(param_5);\n    }\n    arg_8h = *param_1;\n    arg_ch = param_3 * 2;\n    fcn.0041991f(arg_8h, arg_ch, param_1, arg_ch);\n    fcn.0041991f(arg_ch + arg_8h, param_4 * 2, param_3, param_4 * 2);\n    if ((-1 < param_5) && (param_5 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_5;\n        *(*param_1 + param_5 * 2) = 0;\n        return;\n    }\n    fcn.00402330(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 302
    },
    "00401910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401910(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uchar uVar5;\n    \n    uVar5 = unaff_EDI == 0;\n    if (unaff_EDI < 0) {\n        fcn.0040a4b0();\n    }\n    if (!uVar5) {\n        if (*(unaff_ESI + 4) == 0) {\n            iVar4 = *(unaff_ESI + 0x10);\n            if (*(unaff_ESI + 0x10) < unaff_EDI) {\n                iVar4 = unaff_EDI;\n            }\n            uVar1 = fcn.00409a87(iVar4 * 4);\n            *(unaff_ESI + 4) = uVar1;\n            fcn.0041b210(uVar1, 0, iVar4 * 4);\n            *(unaff_ESI + 0xc) = iVar4;\n            *(unaff_ESI + 8) = unaff_EDI;\n            return;\n        }\n        iVar4 = *(unaff_ESI + 0xc);\n        if (iVar4 < unaff_EDI) {\n            iVar2 = *(unaff_ESI + 0x10);\n            if (iVar2 == 0) {\n                iVar2 = *(unaff_ESI + 8) + (*(unaff_ESI + 8) >> 0x1f & 7U) >> 3;\n                if (iVar2 < 4) {\n                    iVar2 = 4;\n                }\n                else if (0x400 < iVar2) {\n                    iVar2 = 0x400;\n                }\n            }\n            iVar3 = unaff_EDI;\n            if (unaff_EDI < iVar2 + iVar4) {\n                iVar3 = iVar2 + iVar4;\n            }\n            iVar2 = iVar3;\n            if (iVar3 < iVar4) {\n                iVar3 = fcn.0040a4b0();\n            }\n            iVar4 = fcn.00409a87(iVar3 * 4);\n            fcn.00401b50(iVar4, iVar3 * 4, *(unaff_ESI + 4), *(unaff_ESI + 8) * 4);\n            fcn.0041b210(iVar4 + *(unaff_ESI + 8) * 4, 0, (unaff_EDI - *(unaff_ESI + 8)) * 4);\n            fcn.00409a92(*(unaff_ESI + 4));\n            *(unaff_ESI + 4) = iVar4;\n            *(unaff_ESI + 0xc) = iVar2;\n        }\n        else {\n            iVar4 = *(unaff_ESI + 8);\n            if (iVar4 < unaff_EDI) {\n                fcn.0041b210(*(unaff_ESI + 4) + iVar4 * 4, 0, (unaff_EDI - iVar4) * 4);\n                *(unaff_ESI + 8) = unaff_EDI;\n                return;\n            }\n        }\n        *(unaff_ESI + 8) = unaff_EDI;\n        return;\n    }\n    if (*(unaff_ESI + 4) != 0) {\n        fcn.00409a92(*(unaff_ESI + 4));\n        *(unaff_ESI + 4) = 0;\n    }\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 8) = 0;\n    return;\n}\n",
        "token_count": 811
    },
    "00401b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401b50(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041991f(param_1, param_2, param_3, param_4);\n    fcn.00401da0(uVar1);\n    return;\n}\n",
        "token_count": 81
    },
    "00401c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401c10(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401ba0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 82
    },
    "00401c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401c50(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00402330(0x80070057);\n    }\n    iVar2 = fcn.00419cfc(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.00402070(iVar2);\n    }\n    fcn.00419b7c(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(*param_1 + iVar2 * 2) = 0;\n        return;\n    }\n    fcn.00402330(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 254
    },
    "00401cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401cf0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 278
    },
    "00401d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401d60(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceW)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00401cf0(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 107
    },
    "00402120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402120(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t arg_ch;\n    int32_t arg_14h;\n    uint unaff_EBP;\n    uint32_t uVar4;\n    \n    if (param_3 == 0) {\n        fcn.00401f30();\n        return;\n    }\n    if (param_2 == 0) {\n        fcn.00402330(0x80070057);\n    }\n    iVar1 = *param_1;\n    uVar4 = param_2 - iVar1 >> 1;\n    uVar2 = *(iVar1 + -0xc);\n    if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n        fcn.00402070(param_3);\n    }\n    iVar1 = *param_1;\n    arg_ch = *(iVar1 + -8) * 2;\n    arg_14h = param_3 * 2;\n    if (uVar2 < uVar4) {\n        fcn.0041991f(iVar1, arg_ch, unaff_EBP, arg_14h);\n    }\n    else {\n        fcn.0041999c(iVar1, arg_ch, iVar1 + uVar4 * 2, arg_14h);\n    }\n    if ((-1 < param_3) && (param_3 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_3;\n        *(arg_14h + *param_1) = 0;\n        return;\n    }\n    fcn.00402330(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 427
    },
    "004021d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004021d0(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (param_1 == NULL) {\n        return param_1;\n    }\n    piVar1 = param_1 + 1;\n    do {\n        iVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (iVar2 != 0);\n    return param_1 - piVar1 >> 1;\n}\n",
        "token_count": 116
    },
    "004021f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004021f0(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00402120(0, 0);\n        return;\n    }\n    piVar2 = param_1;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.00402120(param_1, piVar2 - (param_1 + 1) >> 1);\n    return;\n}\n",
        "token_count": 137
    },
    "00402230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402230(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00402120(0, 0);\n        return param_1;\n    }\n    piVar2 = param_2;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.00402120(param_2, piVar2 - (param_2 + 1) >> 1);\n    return param_1;\n}\n",
        "token_count": 150
    },
    "00402270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402270(int32_t *param_1)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int16_t *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b538;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x438ddc ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar3 = fcn.0040a197(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00402330(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack8 = 0;\n    if (unaff_retaddr == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        if ((unaff_retaddr & 0xffff0000) == 0) {\n            iVar4 = fcn.0040a654(unaff_retaddr & 0xffff);\n            if (iVar4 != 0) {\n                fcn.00401e30(iVar4, unaff_retaddr & 0xffff);\n            }\n            goto code_r0x00402318;\n        }\n        piVar5 = unaff_retaddr;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        iVar4 = piVar5 - (unaff_retaddr + 1) >> 1;\n    }\n    fcn.00402120(unaff_retaddr, iVar4);\ncode_r0x00402318:\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 472
    },
    "00402350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402350(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040a197();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00402330(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 118
    },
    "004028f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004028f0(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00402970(0, 0);\n        return param_1;\n    }\n    piVar2 = param_2;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.00402970(param_2, piVar2 - (param_2 + 1) >> 1);\n    return param_1;\n}\n",
        "token_count": 151
    },
    "00402930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402930(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00402970(0, 0);\n        return;\n    }\n    piVar2 = param_1;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.00402970(param_1, piVar2 - (param_1 + 1) >> 1);\n    return;\n}\n",
        "token_count": 136
    },
    "00402970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402970(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    int32_t arg_10h;\n    int32_t unaff_retaddr;\n    \n    uVar2 = *(*param_1 + -0xc);\n    uVar5 = param_2 - *param_1 >> 1;\n    if (param_3 < 0) {\n        param_3 = fcn.00402330(0x80070057);\n        param_2 = extraout_ECX;\n    }\n    if (param_2 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = fcn.00419f94(param_2, param_3);\n    }\n    if (0x7fffffff - iVar4 < uVar2) {\n        fcn.00402330(0x80070057);\n        iVar4 = extraout_EDX;\n    }\n    iVar1 = iVar4 + uVar2;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar1) < 0) {\n        iVar4 = unaff_retaddr;\n        fcn.00402070(iVar1);\n    }\n    arg_10h = *param_1 + uVar5 * 2;\n    if (uVar2 < uVar5) {\n        arg_10h = unaff_EBX;\n    }\n    fcn.0041991f(*param_1 + uVar2 * 2, iVar4 * 2, arg_10h, iVar4 * 2);\n    if ((-1 < iVar1) && (iVar1 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar1;\n        *(*param_1 + iVar1 * 2) = 0;\n        return;\n    }\n    fcn.00402330(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 511
    },
    "00402a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00402a60(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004023c0(param_1, param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 56
    },
    "00402b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\ncode ** fcn.00402b00(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b438;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0041182c(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CEnumVariant.0;\n    param_1[0xc] = vtable.CEnumVariant::XEnumVARIANT.0;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = NULL;\n    fcn.00411ba6();\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 240
    },
    "004031f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004031f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    iVar1 = fcn.00401ba0(*(in_EAX + 8) + -0x10, 0);\n    *unaff_ESI = iVar1 + 0x10;\n    return;\n}\n",
        "token_count": 85
    },
    "00403570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403570(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint32_t unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b538;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar2 = fcn.0040a197(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack8 = 0;\n    if ((unaff_retaddr == 0) || ((unaff_retaddr & 0xffff0000) != 0)) {\n        fcn.004032d0(unaff_retaddr);\n    }\n    else {\n        iVar3 = fcn.0040a654(unaff_retaddr & 0xffff);\n        if (iVar3 != 0) {\n            fcn.00401e30(iVar3, unaff_retaddr & 0xffff);\n        }\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 360
    },
    "00403610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.00403610(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b3db;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00412e22(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.ScriptEngineFactory.0;\n    fcn.00401000(param_1 + 3);\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x15] = NULL;\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 228
    },
    "004036a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036a0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b3ab;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.ScriptEngineFactory.0;\n    uStack4 = 0;\n    fcn.004010a0(uVar1);\n    uStack4 = 0xffffffff;\n    fcn.00412e2f();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 176
    },
    "00403700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403700(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b49b;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &piStack16;\n    *in_FS_OFFSET = &piStack12;\n    if (*0x43cf04 == 0) {\n        piStack16 = fcn.00409a58(0x58);\n        uStack4 = 0;\n        if (piStack16 != NULL) {\n            *0x43cf04 = fcn.00403610(piStack16, uVar1);\n            *in_FS_OFFSET = piStack16;\n            return;\n        }\n        *0x43cf04 = 0;\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 231
    },
    "00403780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00403780(void)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t **ppiVar5;\n    int16_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int16_t **in_FS_OFFSET;\n    uint32_t uStack20;\n    uchar auStack16 [4];\n    int16_t *piStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    iStack8 = 0x42b5f8;\n    piStack12 = *in_FS_OFFSET;\n    uStack20 = *0x438ddc ^ auStack16;\n    *in_FS_OFFSET = &piStack12;\n    if (-1 < unaff_EDI) {\n        *in_FS_OFFSET = piStack12;\n        return CONCAT31(&piStack12 >> 8, 1);\n    }\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    uStack20 = iVar3 + 0x10;\n    iStack8 = 0;\n    fcn.00401cd0(&uStack20, L\"COM Error: 0x%08lx\\n\");\n    piVar4 = unaff_ESI;\n    if (unaff_ESI != NULL) {\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n    }\n    piVar4 = unaff_ESI;\n    fcn.00402970();\n    fcn.0040a0f0(*(iStack8 + 0x30), unaff_ESI);\n    ppiVar5 = unaff_ESI + -8;\n    piVar2 = unaff_ESI + -2;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        ppiVar5 = (**(**ppiVar5 + 4))(ppiVar5);\n    }\n    *in_FS_OFFSET = piVar4;\n    return ppiVar5 & 0xffffff00;\n}\n",
        "token_count": 541
    },
    "00403cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cb0(int32_t param_1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    bool bVar6;\n    int32_t *piVar7;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b8c8;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x438ddc ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(param_1, *(param_1 + -0xc), uVar3);\n    if (iVar4 == 0) {\n        iVar4 = fcn.00402020();\n    }\n    piVar7 = NULL;\n    (**(**(unaff_EBX + 0x4c) + 0x14))(*(unaff_EBX + 0x4c), iVar4, 0, 0, 0, 0, 0, 0);\n    cVar2 = fcn.00403780();\n    if (cVar2 == '\\0') {\n        (**(**(unaff_EBX + 0x4c) + 8))(*(unaff_EBX + 0x4c));\n        (**(**(unaff_EBX + 0x48) + 8))(*(unaff_EBX + 0x48));\n        *(unaff_EBX + 0x4c) = 0;\n        *(unaff_EBX + 0x48) = 0;\n        *(unaff_EBX + 0x54) = 0;\n        piVar7 = unaff_EDI + -4;\n        LOCK();\n        iVar4 = *piVar7;\n        *piVar7 = *piVar7 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n        }\n    }\n    else {\n        puVar1 = unaff_EBX + 0x54;\n        (**(**(unaff_EBX + 0x48) + 0x28))(*(unaff_EBX + 0x48), 0, puVar1);\n        cVar2 = fcn.00403780();\n        if (cVar2 == '\\0') {\n            *puVar1 = 0;\n            piVar7 = unaff_EDI + -4;\n            LOCK();\n            iVar4 = *piVar7;\n            *piVar7 = *piVar7 + -1;\n            if (iVar4 == 1 || iVar4 + -1 < 0) {\n                (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n                *in_FS_OFFSET = NULL;\n                return 0;\n            }\n        }\n        else {\n            fcn.004130dc(*puVar1, 1);\n            (**(**(unaff_EBX + 0x48) + 0x14))(*(unaff_EBX + 0x48), 2);\n            cVar2 = fcn.00403780();\n            if (cVar2 != '\\0') {\n                LOCK();\n                iVar4 = *0xfffffffc + -1;\n                iVar5 = *0xfffffffc + -1;\n                bVar6 = *0xfffffffc == 1;\n                *0xfffffffc = iVar4;\n                if (bVar6 || iVar5 < 0) {\n                    (**(**0xfffffff0 + 4))(0xfffffff0);\n                }\n                *in_FS_OFFSET = piVar7;\n                return 1;\n            }\n            (**(**(unaff_EBX + 0x4c) + 8))(*(unaff_EBX + 0x4c));\n            (**(**(unaff_EBX + 0x48) + 8))(*(unaff_EBX + 0x48));\n            *(unaff_EBX + 0x4c) = 0;\n            *(unaff_EBX + 0x48) = 0;\n            *puVar1 = 0;\n            piVar7 = unaff_EDI + -4;\n            LOCK();\n            iVar4 = *piVar7;\n            *piVar7 = *piVar7 + -1;\n            if (iVar4 == 1 || iVar4 + -1 < 0) {\n                (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n                *in_FS_OFFSET = NULL;\n                return 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = &stack0xffffffcc;\n    return 0;\n}\n",
        "token_count": 1110
    },
    "00403fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.00403fe0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b438;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0041182c(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CTextStream.0;\n    fcn.004138ed();\n    fcn.00414827();\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 184
    },
    "00404070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** fcn.00404070(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b233;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0041182c(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CArguments.0;\n    fcn.00409b08();\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.004138ed();\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 211
    },
    "004040e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040e0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b1f8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CArguments.0;\n    uStack4 = 0;\n    fcn.00409e81(uVar1);\n    uStack4 = 0xffffffff;\n    fcn.00411854();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 174
    },
    "00404160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** fcn.00404160(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b233;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0041182c(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CNamedArguments.0;\n    fcn.00409b08();\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.004138ed();\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 212
    },
    "004041d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041d0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b1f8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CNamedArguments.0;\n    uStack4 = 0;\n    fcn.00409e81(uVar1);\n    uStack4 = 0xffffffff;\n    fcn.00411854();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 175
    },
    "00404250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** fcn.00404250(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b233;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0041182c(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CUnnamedArguments.0;\n    fcn.00409b08();\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.004138ed();\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 212
    },
    "004042d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004042d0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b1f8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CUnnamedArguments.0;\n    uStack4 = 0;\n    fcn.00409e81(uVar1);\n    uStack4 = 0xffffffff;\n    fcn.00411854();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 175
    },
    "00404350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** fcn.00404350(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b6ce;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0041182c(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CScriptUtils.0;\n    *(param_1 + 0x88) = 0;\n    param_1[0x89] = 0x1;\n    param_1[0x8b] = NULL;\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[0x8c] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[0x8d] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[0x8e] = iVar3 + 0x10;\n    uStack8._0_1_ = 3;\n    fcn.00414ae5();\n    uStack8._0_1_ = 4;\n    fcn.00409b08();\n    uStack8 = CONCAT31(uStack8._1_3_, 5);\n    fcn.004138ed();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 585
    },
    "004044a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004044a0(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42b5a0;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x438ddc ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CScriptUtils.0;\n    uStack4 = 4;\n    fcn.00409e81(uVar3);\n    uStack4._0_1_ = 3;\n    fcn.00414afc();\n    uStack4._0_1_ = 2;\n    ppiVar4 = param_1[0x8e] + -0x10;\n    piVar1 = param_1[0x8e] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    uStack4._0_1_ = 1;\n    ppiVar4 = param_1[0x8d] + -0x10;\n    piVar1 = param_1[0x8d] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    uStack4 = uStack4._1_3_ << 8;\n    ppiVar4 = param_1[0x8c] + -0x10;\n    piVar1 = param_1[0x8c] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    uStack4 = 0xffffffff;\n    fcn.00411854();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 562
    },
    "004076c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004076c0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42bd48;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x438ddc ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    pcVar3 = _sym.imp.OLEAUT32.dll_SysReAllocStringLen;\n    iVar5 = 0;\n    if (0 < param_1) {\n        do {\n            fcn.00402270(0x43250c, uVar4);\n            uStack8 = 0;\n            uVar4 = (*pcVar3)(unaff_retaddr, *(unaff_retaddr + -0xc));\n            if (uVar4 == 0) {\n                fcn.00402020();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            fcn.004074c0();\n            uStack4 = 0xffffffff;\n            piVar1 = param_1 + -4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < param_1);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 427
    },
    "00408540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408540(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42b46f;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar3 = fcn.00409a58(0x34);\n    var_4h = 0;\n    if (iVar3 == 0) {\n        var_1ch = 0;\n    }\n    else {\n        var_1ch = fcn.00402b00(iVar3);\n    }\n    var_4h = 0xffffffff;\n    uVar1 = *(param_1 + 0x28);\n    iVar3 = fcn.00409a87(-(uVar1 * 0x10 >> 0x20 != 0) | uVar1 * 0x10);\n    fcn.0040a5a0();\n    var_4h = 2;\n    iVar5 = 0;\n    while( true ) {\n        if (uVar1 <= iVar5) goto code_r0x00408669;\n        puVar6 = iVar3 + iVar5 * 0x10;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(puVar6);\n        if ((iVar5 < 0) || (*(param_1 + 0x28) <= iVar5)) break;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(*(*(param_1 + 0x24) + iVar5 * 4));\n        if (iVar4 == 0) {\n            iVar4 = fcn.00402020();\n        }\n        *(puVar6 + 4) = iVar4;\n        *puVar6 = 8;\n        iVar5 = iVar5 + 1;\n    }\n    fcn.0040a4b0();\n    pcVar2 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    iVar3 = iVar5;\n    while (iVar3 = iVar3 + -1,  -1 < iVar3) {\n        (*pcVar2)();\n    }\n    fcn.00409a92();\n    fcn.0040a5dc();\n    fcn.0041b0c5(0, 0);\ncode_r0x00408669:\n    var_4h = 0xffffffff;\n    fcn.0040a5b8();\n    *(var_1ch + 0x24) = uVar1;\n    *(var_1ch + 0x28) = iVar3;\n    *(var_1ch + 0x20) = 0;\n    fcn.00411c59(0x431260);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 745
    },
    "00408b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408b60(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b5f8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &iStack16;\n    *in_FS_OFFSET = &piStack12;\n    if (*(*unaff_ESI + -0x10) != NULL) {\n        iVar2 = (**(**(*unaff_ESI + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x00408ba3;\n    }\n    piVar3 = fcn.0040a197();\n    (**(*piVar3 + 0x10))();\ncode_r0x00408ba3:\n    fcn.00409190();\n    uStack8 = 0;\n    iVar2 = *(uVar1 - 0xc);\n    fcn.00402970(uVar1);\n    iStack16 = -1;\n    ppiVar4 = iVar2 + -0x10;\n    piVar3 = iVar2 + -4;\n    LOCK();\n    iVar2 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = &iStack16;\n    return;\n}\n",
        "token_count": 402
    },
    "00408c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nint32_t fcn.00408c10(int16_t **param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    code *pcVar22;\n    int32_t iVar23;\n    int16_t *piVar24;\n    int32_t iVar25;\n    int32_t *piVar26;\n    char *pcVar27;\n    uint32_t uVar28;\n    char extraout_CL;\n    char extraout_DH;\n    int32_t iVar29;\n    int32_t *arg_8h;\n    int32_t unaff_EBP;\n    int32_t iVar30;\n    int16_t *piVar31;\n    int32_t iVar32;\n    char cVar33;\n    char cVar34;\n    int32_t **unaff_retaddr;\n    int32_t iStack24;\n    int32_t iStack8;\n    \n    piVar2 = 0x4322e4;\n    do {\n        piVar31 = piVar2;\n        piVar2 = piVar31 + 1;\n    } while (*piVar31 != 0);\n    iVar30 = piVar31 + -0x219172 >> 1;\n    if (iVar30 == 0) {\n        return 0;\n    }\n    piVar2 = 0x4326cc;\n    do {\n        piVar31 = piVar2;\n        piVar2 = piVar31 + 1;\n    } while (*piVar31 != 0);\n    iStack24 = piVar31 + -0x219366 >> 1;\n    piVar31 = *param_1;\n    piVar2 = piVar31 + *(piVar31 + -6);\n    iVar29 = 0;\n    if (piVar31 < piVar2) {\n        do {\n            iVar23 = fcn.0041a57b(piVar31, 0x4322e4);\n            while (iVar23 != 0) {\n                piVar31 = iVar23 + iVar30 * 2;\n                iVar29 = iVar29 + 1;\n                iVar23 = fcn.0041a57b(piVar31, 0x4322e4);\n            }\n            if (piVar31 == NULL) {\n                iVar23 = 0;\n            }\n            else {\n                piVar24 = piVar31;\n                do {\n                    iVar1 = *piVar24;\n                    piVar24 = piVar24 + 1;\n                } while (iVar1 != 0);\n                iVar23 = piVar24 - (piVar31 + 1) >> 1;\n            }\n            piVar31 = piVar31 + iVar23 + 1;\n        } while (piVar31 < piVar2);\n        if (0 < iVar29) {\n            piVar2 = *param_1;\n            iVar23 = *(piVar2 + -6);\n            iVar29 = (iStack24 - iVar30) * iVar29 + iVar23;\n            iVar25 = iVar29;\n            if (iVar29 <= iVar23) {\n                iVar25 = iVar23;\n            }\n            if ((1U - *(piVar2 + -2) | *(piVar2 + -4) - iVar25) < 0) {\n                fcn.00402070(iVar25);\n            }\n            piVar3 = *unaff_retaddr;\n            iVar25 = iVar23;\n            arg_8h = piVar3;\n            do {\n                if (piVar3 + iVar23 * 2 <= arg_8h) {\n                    cVar34 = '\\0';\n                    cVar33 = iVar29 < 0;\n                    if (!cVar33) {\n                        piVar3 = *unaff_retaddr + -2;\n                        cVar34 = SBORROW4(iVar29, *piVar3);\n                        iVar25 = *piVar3;\n                        cVar33 = iVar29 - iVar25 < 0;\n                        if (iVar29 <= iVar25) {\n                            (*unaff_retaddr)[-3] = iVar29;\n                            *(*unaff_retaddr + iVar29 * 2) = 0;\n                            return iVar23;\n                        }\n                    }\ncode_r0x00408e3a:\n                    iVar29 = fcn.00402330(0x80070057);\n                    if (cVar34 != cVar33) {\n                        pcVar27 = iVar29 + 1;\n                        *pcVar27 = *pcVar27 + extraout_DH;\n                        *arg_8h = *arg_8h + (pcVar27 ^ 0x3500408e);\n                        iVar29 = (pcVar27 ^ 0x3500408e) + *arg_8h + *arg_8h + *arg_8h + *arg_8h + *arg_8h;\n                        *arg_8h = *arg_8h + iVar29;\n                        uVar28 = iVar29 + *arg_8h + *arg_8h + *arg_8h + *arg_8h;\n                        uVar28 = (uVar28 & 0xffffff00 | uVar28 + *arg_8h) + *arg_8h + *arg_8h + *arg_8h + *arg_8h +\n                                 *arg_8h;\n                        cVar33 = *arg_8h;\n                        iVar29 = *arg_8h;\n                        iVar23 = *arg_8h;\n                        iVar25 = *arg_8h;\n                        iVar32 = *arg_8h;\n                        iVar4 = *arg_8h;\n                        iVar5 = *arg_8h;\n                        iVar6 = *arg_8h;\n                        iVar7 = *arg_8h;\n                        iVar8 = *arg_8h;\n                        iVar9 = *arg_8h;\n                        iVar10 = *arg_8h;\n                        iVar11 = *arg_8h;\n                        iVar12 = *arg_8h;\n                        iVar13 = *arg_8h;\n                        iVar14 = *arg_8h;\n                        iVar15 = *arg_8h;\n                        iVar16 = *arg_8h;\n                        iVar17 = *arg_8h;\n                        iVar18 = *arg_8h;\n                        iVar19 = *arg_8h;\n                        iVar20 = *arg_8h;\n                        iVar21 = *arg_8h;\n                        *(iVar30 + -0x7255ffb7) = *(iVar30 + -0x7255ffb7) + extraout_CL;\n                        pcVar27 = (uVar28 & 0xffffff00 | uVar28 + cVar33) + iVar29 + iVar23 + iVar25 + iVar32 + iVar4 +\n                                  iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 + iVar13 + iVar14 +\n                                  iVar15 + iVar16 + iVar17 + iVar18 + iVar19 + iVar20 + iVar21 + 1;\n                        *pcVar27 = *pcVar27 + extraout_DH;\n                        *arg_8h = *arg_8h + (pcVar27 ^ 0x3500408e);\n                        *arg_8h = *arg_8h + (pcVar27 ^ 0x3500408e) + *arg_8h + *arg_8h + *arg_8h + *arg_8h + *arg_8h;\n                        pcVar22 = swi(3);\n                        iVar30 = (*pcVar22)();\n                        return iVar30;\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                iVar29 = fcn.0041a57b(arg_8h, 0x4322e4);\n                if (iVar29 != 0) {\ncode_r0x00408d40:\n                    iVar32 = (iVar25 - (iVar29 - piVar3 >> 1)) - iVar30;\n                    iVar25 = iVar32 * 2;\n                    arg_8h = unaff_EBP * 2 + iVar29;\n                    iVar25 = fcn.0041999c(arg_8h, iVar25, iVar29 + iVar30 * 2, iVar25);\n                    cVar34 = SBORROW4(iVar25, 0x50);\n                    cVar33 = iVar25 + -0x50 < 0;\n    // switch table (81 cases) at 0x408e44\n                    switch(iVar25) {\n                    case 0:\n                    case 0x50:\n                        iVar25 = fcn.0041991f(iVar29, unaff_EBP * 2, 0x4326cc, unaff_EBP * 2);\n                        cVar34 = SBORROW4(iVar25, 0x50);\n                        cVar33 = iVar25 + -0x50 < 0;\n    // switch table (81 cases) at 0x408ea8\n                        switch(iVar25) {\n                        case 0:\n                        case 0x50:\n                            goto code_r0x00408daa;\n                        default:\n                            break;\n                        case 0xc:\n                            goto code_r0x00408e30;\n                        }\n                    case 0xc:\ncode_r0x00408e30:\n                        fcn.0040a478();\n                    }\n                    fcn.0040a4b0();\n                    goto code_r0x00408e3a;\n                }\ncode_r0x00408dd8:\n                if (arg_8h == NULL) {\n                    iVar29 = 0;\n                }\n                else {\n                    piVar26 = arg_8h;\n                    do {\n                        iVar1 = *piVar26;\n                        piVar26 = piVar26 + 2;\n                    } while (iVar1 != 0);\n                    iVar29 = piVar26 - (arg_8h + 2) >> 1;\n                }\n                arg_8h = arg_8h + iVar29 * 2 + 2;\n                iVar29 = iStack8;\n            } while( true );\n        }\n    }\n    return iVar29;\ncode_r0x00408daa:\n    iVar25 = iStack24 + (unaff_EBP - iVar30);\n    *(iVar29 + (iVar32 + unaff_EBP) * 2) = 0;\n    iVar29 = fcn.0041a57b(arg_8h, 0x4322e4);\n    iStack24 = iVar25;\n    if (iVar29 == 0) goto code_r0x00408dd8;\n    goto code_r0x00408d40;\n}\n",
        "token_count": 2419
    },
    "00408f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408f40(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    iVar2 = *param_1;\n    iVar1 = *(iVar2 + -0xc);\n    if (iVar1 <= param_3) {\n        iVar2 = fcn.00401ba0(iVar2 + -0x10);\n        *param_2 = iVar2 + 0x10;\n        return param_2;\n    }\n    if (*(iVar2 + -0x10) != NULL) {\n        iVar2 = (**(**(iVar2 + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x00408fa1;\n    }\n    piVar3 = fcn.0040a197();\n    iVar2 = (**(*piVar3 + 0x10))();\ncode_r0x00408fa1:\n    fcn.00409530(*param_1 + (iVar1 - param_3) * 2, param_3, iVar2);\n    return param_2;\n}\n",
        "token_count": 292
    },
    "00408fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408fc0(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    iVar1 = *param_1;\n    if (*(iVar1 + -0xc) <= param_3) {\n        iVar1 = fcn.00401ba0(iVar1 + -0x10);\n        *param_2 = iVar1 + 0x10;\n        return param_2;\n    }\n    if (*(iVar1 + -0x10) != NULL) {\n        iVar1 = (**(**(iVar1 + -0x10) + 0x10))();\n        if (iVar1 != 0) goto code_r0x0040901b;\n    }\n    piVar2 = fcn.0040a197();\n    iVar1 = (**(*piVar2 + 0x10))();\ncode_r0x0040901b:\n    fcn.00409530(*param_1, param_3, iVar1);\n    return param_2;\n}\n",
        "token_count": 266
    },
    "00409040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00409040(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint32_t unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b538;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar2 = fcn.0040a197(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00402330(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack8 = 0;\n    if ((unaff_retaddr == 0) || ((unaff_retaddr & 0xffff0000) != 0)) {\n        fcn.004094a0(unaff_retaddr);\n    }\n    else {\n        iVar3 = fcn.0040a654(unaff_retaddr & 0xffff);\n        if (iVar3 != 0) {\n            fcn.00409610(iVar3, unaff_retaddr & 0xffff);\n        }\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 359
    },
    "004090e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004090e0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42b5f8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x438ddc ^ &iStack16;\n    *in_FS_OFFSET = &piStack12;\n    if (*(*unaff_ESI + -0x10) != NULL) {\n        iVar2 = (**(**(*unaff_ESI + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x00409123;\n    }\n    piVar3 = fcn.0040a197();\n    (**(*piVar3 + 0x10))();\ncode_r0x00409123:\n    fcn.00409400();\n    uStack8 = 0;\n    fcn.004096d0();\n    iStack16 = -1;\n    ppiVar4 = uVar1 - 0x10;\n    piVar3 = uVar1 - 4;\n    LOCK();\n    iVar2 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = &iStack16;\n    return;\n}\n",
        "token_count": 387
    },
    "00409230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409230(void)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t **unaff_EBX;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    \n    puVar5 = *unaff_EBX;\n    uVar2 = *puVar5;\n    puVar4 = NULL;\n    if (uVar2 != 0) {\n        do {\n            iVar3 = fcn.0041a679(uVar2);\n            if (iVar3 == 0) {\n                puVar4 = NULL;\n            }\n            else if (puVar4 == NULL) {\n                puVar4 = puVar5;\n            }\n            uVar2 = puVar5[1];\n            puVar5 = puVar5 + 1;\n        } while (uVar2 != 0);\n        if (puVar4 != NULL) {\n            puVar5 = *unaff_EBX;\n            iVar3 = puVar4 - puVar5 >> 1;\n            if ((1U - *(puVar5 + -2) | *(puVar5 + -4) - iVar3) < 0) {\n                fcn.00402070(iVar3);\n            }\n            if ((iVar3 < 0) || (*(*unaff_EBX + -4) < iVar3)) {\n                fcn.00402330(0x80070057);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            *(*unaff_EBX + -6) = iVar3;\n            (*unaff_EBX)[iVar3] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "004092b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004092b0(void)\n\n{\n    uint16_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t **unaff_EBX;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    \n    puVar5 = *unaff_EBX;\n    iVar3 = fcn.0041a679(*puVar5);\n    while (iVar3 != 0) {\n        puVar1 = puVar5 + 1;\n        puVar5 = puVar5 + 1;\n        iVar3 = fcn.0041a679(*puVar1);\n    }\n    puVar1 = *unaff_EBX;\n    if (puVar5 != puVar1) {\n        iVar3 = puVar5 - puVar1 >> 1;\n        if ((1U - *(puVar1 + -2) | *(puVar1 + -4) - *(puVar1 + -6)) < 0) {\n            fcn.00402070(*(puVar1 + -6));\n        }\n        puVar5 = *unaff_EBX;\n        iVar6 = *(puVar5 + -6) - iVar3;\n        uVar4 = fcn.0041999c(puVar5, *(puVar5 + -6) * 2 + 2, puVar5 + iVar3, iVar6 * 2 + 2);\n        fcn.00401da0(uVar4);\n        if ((iVar6 < 0) || (*(*unaff_EBX + -4) < iVar6)) {\n            fcn.00402330(0x80070057);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        *(*unaff_EBX + -6) = iVar6;\n        (*unaff_EBX)[iVar6] = 0;\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00409350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00409350(int32_t *param_1, int32_t *param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t *unaff_retaddr;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    if (param_4 < 0) {\n        param_4 = 0;\n    }\n    if (0x7fffffff - param_3 < param_4) {\n        fcn.00402330(0x80070057);\n        iVar2 = extraout_ECX;\n    }\n    else {\n        iVar2 = *param_1;\n        iVar1 = *(iVar2 + -0xc);\n        if (iVar1 < param_3 + param_4) {\n            param_4 = iVar1 - param_3;\n        }\n        if (iVar1 < param_3) {\n            param_4 = 0;\n        }\n        if ((param_3 == 0) && (param_4 == iVar1)) {\n            iVar2 = fcn.00401ba0(iVar2 + -0x10);\n            *param_2 = iVar2 + 0x10;\n            return param_2;\n        }\n    }\n    if (*(iVar2 + -0x10) != NULL) {\n        iVar2 = (**(**(iVar2 + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x004093e3;\n    }\n    piVar3 = fcn.0040a197();\n    iVar2 = (**(*piVar3 + 0x10))();\ncode_r0x004093e3:\n    fcn.00409530(*param_1 + param_3 * 2, param_4, iVar2);\n    return unaff_retaddr;\n}\n",
        "token_count": 440
    },
    "00409530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00409530(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    \n    if (param_4 == NULL) {\n        fcn.00402330(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if (unaff_retaddr != 0) goto code_r0x00409561;\n    if (param_2 == 0) goto code_r0x00409561;\n    do {\n        fcn.00402330();\n        param_4 = extraout_ECX_00;\ncode_r0x00409561:\n        iVar1 = (***param_4)(param_2, 2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00402020();\n        }\n        *param_1 = iVar1 + 0x10;\n    } while ((param_2 < 0) || (*(iVar1 + 8) < param_2));\n    *(iVar1 + 4) = param_2;\n    param_2 = param_2 * 2;\n    *(param_2 + *param_1) = 0;\n    fcn.0041991f(*param_1, param_2, unaff_retaddr, param_2);\n    return param_1;\n}\n",
        "token_count": 333
    },
    "00409610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00409610(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar2 != 0) {\n        puVar3 = fcn.00401cf0(param_2, iVar2, param_3);\n        if (puVar3 != NULL) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, puVar3 + 1, *puVar3, 0, 0, 0, 0);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n                fcn.00409790(iVar2);\n            }\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, puVar3 + 1, *puVar3, *param_1, iVar2, 0, 0);\n            if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar2;\n                *(iVar2 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00402330(0x80070057);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "004096d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004096d0(uint param_1, int32_t param_2, int32_t *param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t arg_ch;\n    int32_t *unaff_EBP;\n    int32_t *unaff_EDI;\n    uint32_t uVar4;\n    int32_t *arg_10h;\n    \n    uVar2 = *(*param_3 + -0xc);\n    uVar4 = param_4 - *param_3;\n    if (param_2 < 0) {\n        fcn.00402330(0x80070057);\n        param_4 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    if (param_4 == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.0041a68c(param_4, param_2);\n    }\n    if (0x7fffffff - arg_ch < uVar2) {\n        fcn.00402330(0x80070057);\n    }\n    iVar1 = arg_ch + uVar2;\n    arg_10h = unaff_EBP;\n    if ((1U - *(*unaff_EBP + -4) | *(*unaff_EBP + -8) - iVar1) < 0) {\n        fcn.00409790(iVar1);\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = unaff_EBP;\n    }\n    if (uVar4 <= uVar2) {\n        arg_10h = uVar4 + *unaff_EBP;\n    }\n    fcn.0041991f(*unaff_EBP + uVar2, arg_ch, arg_10h, arg_ch);\n    if ((-1 < iVar1) && (iVar1 <= *(*unaff_EDI + -8))) {\n        *(*unaff_EDI + -0xc) = iVar1;\n        *(iVar1 + *unaff_EDI) = 0;\n        return;\n    }\n    fcn.00402330(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 520
    },
    "004098a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.004098a0(int32_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int16_t *piStack44;\n    uint32_t uStack40;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42baa0;\n    uStack12 = *in_FS_OFFSET;\n    uStack40 = *0x438ddc ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    piStack44 = 0x4098ce;\n    piVar2 = fcn.0040a197();\n    if (piVar2 == NULL) {\n        piStack44 = 0x80004005;\n        puStack48 = 0x4098e3;\n        piVar2 = fcn.00402330();\n    }\n    puStack48 = 0x4098ec;\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    puStack48 = &stack0xffffffe0;\n    uStack8 = 0;\n    uStack52 = 0x409904;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    uStack52 = 8;\n    uStack56 = 0;\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&stack0xffffffdc);\n    if (iVar3 < 0) {\n        fcn.00402330(iVar3);\n    }\n    if (piStack44 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        piVar4 = piStack44;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar3 = piVar4 - (piStack44 + 1) >> 1;\n    }\n    fcn.00402120(piStack44, iVar3);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&stack0xffffffc4);\n    *in_FS_OFFSET = puStack48;\n    return param_1;\n}\n",
        "token_count": 580
    },
    "00409990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409990(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041999c(param_1, param_2, param_3, param_4);\n    fcn.00401da0(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "00409ae1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409ae1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00409aa3(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00402330(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 93
    },
    "00409b64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b64(int32_t *arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00410ec2(in_ECX, *(*arg_8h + -0xc), 1);\n    fcn.0041101f(*arg_8h, *(*arg_8h + -0xc) * 2);\n    return;\n}\n",
        "token_count": 85
    },
    "00409ca7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ca7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint unaff_EDI;\n    \n    arg_ch_00 = arg_8h;\n    iVar2 = 0;\n    if (-1 < arg_8h) goto code_r0x00409cbf;\n    do {\n        fcn.0040a4b0();\ncode_r0x00409cbf:\n        if (iVar2 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_ch_00 == iVar2) {\n            fcn.00409c7c(*(in_ECX + 4), *(in_ECX + 8), unaff_EDI);\n            fcn.00409a92(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar2;\n            *(in_ECX + 8) = iVar2;\n            goto code_r0x00409dd3;\n        }\n        iVar1 = *(in_ECX + 4);\n        if (iVar1 == iVar2) {\n            arg_8h_00 = fcn.00409a58(arg_ch_00 << 2);\n            *(in_ECX + 4) = arg_8h_00;\n            fcn.00409c11(arg_8h_00, arg_ch_00);\n            *(in_ECX + 0xc) = arg_ch_00;\ncode_r0x00409d40:\n            *(in_ECX + 8) = arg_ch_00;\n            return;\n        }\n        iVar2 = *(in_ECX + 0xc);\n        if (arg_ch_00 <= iVar2) {\n            iVar2 = *(in_ECX + 8);\n            if (iVar2 < arg_ch_00) {\n                fcn.00409c11(iVar1 + iVar2 * 4, arg_ch_00 - iVar2);\n            }\n            else if (arg_ch_00 < iVar2) {\n                fcn.00409c7c(iVar1 + arg_ch_00 * 4, iVar2 - arg_ch_00, unaff_EDI);\n            }\n            goto code_r0x00409d40;\n        }\n        iVar1 = *(in_ECX + 0x10);\n        if (iVar1 == 0) {\n            iVar1 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar1 < 4) {\ncode_r0x00409d72:\n                iVar1 = 4;\n            }\n            else if (iVar1 < 0x401) {\n                if (iVar1 < 4) goto code_r0x00409d72;\n            }\n            else {\n                iVar1 = 0x400;\n            }\n        }\n        arg_8h = iVar1 + iVar2;\n        if (iVar1 + iVar2 <= arg_ch_00) {\n            arg_8h = arg_ch_00;\n        }\n    } while (arg_8h < iVar2);\n    iVar2 = fcn.00409a58(arg_8h << 2);\n    fcn.00401b50(iVar2, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00409c11(iVar2 + *(in_ECX + 8) * 4, arg_ch_00 - *(in_ECX + 8));\n    fcn.00409a92(*(in_ECX + 4));\n    *(in_ECX + 8) = arg_ch_00;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00409dd3:\n    *(in_ECX + 4) = iVar2;\n    return;\n}\n",
        "token_count": 885
    },
    "00409e11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00409e11(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    uVar1 = fcn.0040a197();\n    fcn.00401780(uVar1);\n    *(unaff_EBP + -4) = 0;\n    if (0 < *(unaff_EBP + 0xc)) {\n        if (*(unaff_EBP + 8) == 0) {\n            fcn.00402330(0x80070057);\n        }\n        uVar1 = fcn.00409ac7(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        uVar2 = fcn.004020c0(uVar1);\n        fcn.004032b0(uVar2, uVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        fcn.004020f0(uVar1);\n    }\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 321
    },
    "0040a25a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a25a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041aff2(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00401da0(uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "0040a5ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0040a5ec(uint arg_8h, ushort *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    \n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        iVar3 = fcn.0040b0a1();\n        puVar4 = fcn.00401d60(*(iVar3 + 0xc), arg_8h);\n        if (puVar4 == NULL) {\n            *arg_ch = 0;\n            puVar5 = puVar4;\n        }\n        else {\n            puVar1 = arg_10h - 1;\n            puVar5 = *puVar4;\n            if (puVar1 < *puVar4) {\n                puVar5 = puVar1;\n            }\n            fcn.00401b50(arg_ch, puVar1 * 2, puVar4 + 1, puVar5 * 2);\n            arg_ch[puVar5] = 0;\n        }\n        return puVar5;\n    }\n    fcn.0040a4b0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 306
    },
    "0040aeda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040aeda(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    fcn.00402270(0x42d8b4);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040aba5(unaff_EBP + -0x10);\n    fcn.00402380();\n    *extraout_ECX = vtable.CShellWrapper.0;\n    extraout_ECX[4] = NULL;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 165
    },
    "0040b0d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b0d4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.0040b0a1();\n    iVar2 = fcn.0040ab91();\n    if (iVar2 == 0) {\n        uStack8 = 0x438440;\n        fcn.0041b0c5(&uStack8, 0x4342ec);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040c517": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c517(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00416843(arg_8h);\n    *puVar1 = arg_ch;\n    return;\n}\n",
        "token_count": 59
    },
    "0040d181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d181(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00416949();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if (iVar5 != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0x36b, 0, 0);\n            if (iVar4 != 0) {\n                iVar5 = iVar4;\n            }\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if (iVar5 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar5, 0xfffffff0);\n            if (((uVar2 & 0x10000000) == 0) || ((uVar2 & 0x20000000) != 0)) {\n                iVar5 = 0;\n            }\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.00401c30();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.0040b2da(iVar5, 1);\n            fcn.0040b347(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040b2da(iVar5, 2);\n            fcn.0040b347(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if (var_10h < (var_30h - var_38h) + iVar5) {\n        iVar5 = (var_38h - var_30h) + var_10h;\n    }\n    if (iVar5 < lprcDst) {\n        iVar5 = lprcDst;\n    }\n    if (var_ch < (var_2ch - var_34h) + iVar4) {\n        iVar4 = (var_34h - var_2ch) + var_ch;\n    }\n    if (iVar4 < var_14h) {\n        iVar4 = var_14h;\n    }\n    fcn.004169e6(0, iVar5, iVar4, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1085
    },
    "0040d6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d6a0(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0040d600(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0040a4b0(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "0041024d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041024d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.0040aad5();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 199
    },
    "00410379": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410379(int32_t arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    uint arg_14h;\n    uint var_4h;\n    \n    ppcVar1 = (**(*in_ECX + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(arg_8h + 4) < 0xc000) {\n            iVar2 = fcn.0040bbbe(ppcVar1[1], *(arg_8h + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x004103b3:\n                (**(iVar2 + 0x14))(*(arg_8h + 8), *(arg_8h + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.0040bbbe(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(arg_8h + 4)) goto code_r0x004103b3;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 364
    },
    "004114fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004114fe(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0041150f;\ncode_r0x0041150a:\n    fcn.0040a4b0();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x0041150f:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x39U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x411606\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x39U) * 4 + 0x411606)) {\n    case 0x411540:\n        (*arg_14h)();\n        return 1;\n    case 0x411548:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x411550:\n        arg_18h = arg_ch;\n        break;\n    case 0x41155b:\n        arg_18h = arg_ch;\n        goto code_r0x004115f4;\n    case 0x411563:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0041150a;\n    case 0x411577:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0041150a;\n    case 0x411588:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0041150a;\n    case 0x4115a0:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0041150a;\n    case 0x4115b8:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x004115c7;\n        }\n        goto code_r0x0041150a;\n    case 0x4115d5:\n        goto code_r0x004115d5;\n    case 0x4115e9:\n        break;\n    case 0x4115f1:\ncode_r0x004115f4:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x004115d5:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x004115c7:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x0041150a;\n}\n",
        "token_count": 958
    },
    "00411ba6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ba6(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b0a1();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 60
    },
    "00412337": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412337(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041a50c(arg_8h, arg_ch, arg_10h);\n    fcn.00401da0(uVar1);\n    return;\n}\n",
        "token_count": 76
    },
    "00411fe6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411fe6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x4389d4;\n    var_10h = param_1;\n    iVar1 = *0x4389d4;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "004129ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004129ce(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_41ch;\n    uint var_4h;\n    \n    fcn.0041ad6c(0x414);\n    *(unaff_EBP + -0x41c) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar2 = fcn.0040b0a1();\n    if (*(iVar2 + 0x14) == '\\0') {\n        if (*0x43be04 != NULL) {\n            (**(**0x43be04 + 4))(1);\n            *0x43be04 = NULL;\n        }\n        if (*0x43be00 != NULL) {\n            (**(**0x43be00 + 4))(1);\n            *0x43be00 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00416d5d(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.00416d5d(extraout_ECX[0x1d]);\n    }\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar2 = fcn.0040b0a1();\n    if (*(iVar2 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar2 + 0x10) = 0;\n    }\n    if (*(iVar2 + 4) == extraout_ECX) {\n        *(iVar2 + 4) = 0;\n    }\n    fcn.0041a83f(extraout_ECX[0x14]);\n    fcn.0041a83f(extraout_ECX[0x15]);\n    fcn.0041a83f(extraout_ECX[0x18]);\n    fcn.0041a83f(extraout_ECX[0x19]);\n    fcn.0041a83f(extraout_ECX[0x1a]);\n    extraout_ECX[0xb] = NULL;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00410286();\n    fcn.0041adc8();\n    return;\n}\n",
        "token_count": 756
    },
    "00412eb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412eb5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    \n    iVar6 = arg_8h;\n    bVar7 = -1 < arg_8h;\n    arg_8h = 0;\n    if (bVar7) goto code_r0x00412ecd;\n    do {\n        fcn.0040a4b0();\ncode_r0x00412ecd:\n        if (arg_8h <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar6 == arg_8h) {\n            if (*(in_ECX + 4) != arg_8h) {\n                iVar6 = 0;\n                if (*(in_ECX + 8) != arg_8h && arg_8h <= *(in_ECX + 8)) {\n                    do {\n                        fcn.00412e8b(arg_8h);\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < *(in_ECX + 8));\n                }\n                fcn.00409a92(*(in_ECX + 4));\n                *(in_ECX + 4) = arg_8h;\n            }\n            *(in_ECX + 0xc) = arg_8h;\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        if (*(in_ECX + 4) == arg_8h) {\n            arg_8h = iVar6;\n            if (iVar6 <= *(in_ECX + 0x10)) {\n                arg_8h = *(in_ECX + 0x10);\n            }\n            uVar1 = fcn.00409a58(arg_8h * 0xc);\n            *(in_ECX + 4) = uVar1;\n            fcn.0041b210(uVar1, 0, arg_8h * 0xc);\n            if (0 < iVar6) {\n                iVar4 = 0;\n                iVar5 = iVar6;\n                do {\n                    puVar2 = *(in_ECX + 4) + iVar4;\n                    if (puVar2 != NULL) {\n                        *puVar2 = 0;\n                        puVar2[1] = 0;\n                    }\n                    iVar4 = iVar4 + 0xc;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            goto code_r0x004130ab;\n        }\n        if (iVar6 <= *(in_ECX + 0xc)) {\n            iVar5 = *(in_ECX + 8);\n            if (iVar5 < iVar6) {\n                fcn.0041b210(iVar5 * 0xc + *(in_ECX + 4), arg_8h, (iVar6 - iVar5) * 0xc);\n                iVar5 = 0;\n                if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n                    do {\n                        piVar3 = (*(in_ECX + 8) + iVar5) * 0xc + *(in_ECX + 4);\n                        if (piVar3 != NULL) {\n                            *piVar3 = arg_8h;\n                            piVar3[1] = arg_8h;\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6 - *(in_ECX + 8));\n                }\n            }\n            else if ((iVar6 < iVar5) && (iVar5 != iVar6 && -1 < iVar5 - iVar6)) {\n                do {\n                    fcn.00412e8b(0);\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(in_ECX + 8) - iVar6);\n            }\n            goto code_r0x004130b1;\n        }\n        iVar5 = *(in_ECX + 0x10);\n        if (iVar5 == arg_8h) {\n            iVar5 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar5 < 4) {\n                iVar5 = 4;\n            }\n            else if (0x400 < iVar5) {\n                iVar5 = 0x400;\n            }\n        }\n        arg_8h = iVar5 + *(in_ECX + 0xc);\n        if (arg_8h <= iVar6) {\n            arg_8h = iVar6;\n        }\n    } while (arg_8h < *(in_ECX + 0xc));\n    iVar5 = fcn.00409a58(arg_8h * 0xc);\n    fcn.00401b50(iVar5, arg_8h * 0xc, *(in_ECX + 4), *(in_ECX + 8) * 0xc);\n    fcn.0041b210(*(in_ECX + 8) * 0xc + iVar5, 0, (iVar6 - *(in_ECX + 8)) * 0xc);\n    iVar4 = 0;\n    if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n        do {\n            puVar2 = (*(in_ECX + 8) + iVar4) * 0xc + iVar5;\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                puVar2[1] = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar6 - *(in_ECX + 8));\n    }\n    fcn.00409a92(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar5;\ncode_r0x004130ab:\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004130b1:\n    *(in_ECX + 8) = iVar6;\n    return;\n}\n",
        "token_count": 1388
    },
    "004130bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004130bb(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (arg_8h < *(in_ECX + 8))) {\n        return arg_8h * 0xc + *(in_ECX + 4);\n    }\n    fcn.0040a4b0();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 128
    },
    "004131ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004131ac(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.00412e8b(0);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.00409a92(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0041324c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041324c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_8h < 0) {\n        fcn.0040a4b0();\n    }\n    if (*(in_ECX + 8) <= arg_8h) {\n        fcn.00412eb5(arg_8h + 1, 0xffffffff);\n    }\n    fcn.00413181(arg_ch);\n    return;\n}\n",
        "token_count": 111
    },
    "00413303": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413303(uint8_t *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    if (arg_ch < 0x16) goto code_r0x00413314;\ncode_r0x0041330f:\n    fcn.0040a4b0();\ncode_r0x00413314:\n    uVar1 = *arg_8h;\n    iVar2 = *(arg_ch * 4 + 0x42ebe8) + 4;\n    puVar3 = arg_8h;\n    do {\n        if (uVar1 == 0) {\n            return iVar2;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x42eb90;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x42eb38;\n            }\n            if (0x15 < (uVar1 & 0xbf)) goto code_r0x0041330f;\n            iVar2 = iVar2 + *(iVar4 + (uVar1 & 0xbf) * 4);\n        }\n        puVar3 = puVar3 + 1;\n        uVar1 = *puVar3;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "0041341f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041341f(int32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (-arg_ch - 1U < arg_10h) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch + arg_10h;\n    return 0;\n}\n",
        "token_count": 83
    },
    "0041370a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041370a(uint noname_0, uint noname_1, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    uint var_34h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x14;\n    var_4h_2 = 0x434b00;\n    fcn.0041b67c();\n    *(unaff_EBP + -0x1d) = 1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.0041341f(unaff_EBP + -0x24, *(unaff_EBP + 8), 0x2000);\n    if (iVar1 < 0) {\n        *(unaff_EBP + -0x1d) = 0;\n    }\n    else {\n        fcn.0041b6e0();\n        *(unaff_EBP + -0x18) = &fcn.0041370a::var_4h_2;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x38) = 0x41377e;\n    fcn.0041b6c4();\n    return;\n}\n",
        "token_count": 367
    },
    "00413801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413801(int32_t arg_8h, int16_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    ulong *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    \n    puVar3 = *(arg_8h + 0x18) + in_ECX;\n    if (*(arg_8h + 0xc) != 0xc) {\n        *arg_ch = *(arg_8h + 0xc);\n    }\n    uVar6 = *(arg_8h + 0xc) - 2;\n    if (0x13 < uVar6) goto code_r0x00413881;\n    // switch table (20 cases) at 0x41389d\n    switch(*(uVar6 * 4 + 0x41389d)) {\n    case 0x413832:\n        *(arg_ch + 4) = *puVar3;\n        break;\n    case 0x413839:\n        iVar2 = *puVar3;\n        goto code_r0x0041383c;\n    case 0x413842:\n        uVar4 = *puVar3;\n        goto code_r0x00413844;\n    case 0x413849:\n        *(arg_ch + 4) = *puVar3;\n        *(arg_ch + 6) = *(puVar3 + 4);\n        break;\n    case 0x413856:\n        *(arg_ch + 4) = *puVar3;\n        break;\n    case 0x41385d:\n        *(arg_ch + 4) = *puVar3;\n        break;\n    case 0x413864:\n        uVar4 = fcn.00403fb0();\ncode_r0x00413844:\n        *(arg_ch + 4) = uVar4;\n        break;\n    case 0x41386d:\n        iVar2 = -(*puVar3 != 0);\ncode_r0x0041383c:\n        arg_ch[4] = iVar2;\n        break;\n    case 0x413875:\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_ch, puVar3);\n        if (iVar5 == 0) {\n            return;\n        }\n    case 0x413881:\ncode_r0x00413881:\n        *arg_10h = 0;\n        break;\n    case 0x41388c:\n        piVar1 = *puVar3;\n        *(arg_ch + 4) = piVar1;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 619
    },
    "00414970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414970(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint *arg_10h_00;\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_230h;\n    uint var_22ch;\n    uint rguid;\n    uint var_224h;\n    uint var_220h;\n    uint wVerMajor;\n    uint lpFilename;\n    uint var_4h;\n    \n    fcn.0041ad36(0x224);\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    fcn.00416e82(0xd);\n    iVar3 = *extraout_ECX;\n    *(unaff_EBP + -0x220) = 0x80029c4a;\n    uVar2 = (**(iVar3 + 0x20))();\n    *(unaff_EBP + -0x21c) = 0;\n    *(unaff_EBP + -0x224) = uVar2;\n    iVar3 = fcn.00414920(*(unaff_EBP + 8), arg_ch_00, arg_10h_00);\n    if (iVar3 == 0) {\n        iVar3 = fcn.00414774(*(unaff_EBP + 8), unaff_EBP + -0x21c);\n        if (iVar3 == 0) {\n            iVar3 = (**(*extraout_ECX + 0x24))(*(unaff_EBP + 8), unaff_EBP + -0x21c);\n            if (iVar3 < 0) {\n                fcn.0040b0ed(extraout_ECX[7]);\n                *(unaff_EBP + -4) = 0;\n                iVar3 = fcn.0040b0a1();\n                uVar2 = 0x104;\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(*(iVar3 + 8), unaff_EBP + -0x218, 0x104);\n                fcn.00402270(unaff_EBP + -0x218);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(*(unaff_EBP + -0x228), unaff_EBP + -0x21c);\n                if (iVar3 < 0) {\n                    *(unaff_EBP + -0x21c) = 0;\n                }\n                fcn.00402380();\n                *(unaff_EBP + -4) = 0xffffffff;\n                if (*(unaff_EBP + -0x22c) != 0) {\n                    fcn.0040a765(uVar2, *(unaff_EBP + -0x230), 0);\n                }\n            }\n            fcn.004147a8(*(unaff_EBP + 8), *(unaff_EBP + -0x21c));\n        }\n        piVar1 = *(unaff_EBP + -0x21c);\n        if (piVar1 != NULL) {\n            uVar2 = (**(*piVar1 + 0x18))(piVar1, arg_ch_00, arg_10h_00);\n            *(unaff_EBP + -0x220) = uVar2;\n            (**(**(unaff_EBP + -0x21c) + 8))(*(unaff_EBP + -0x21c));\n            fcn.004147ee(*(unaff_EBP + 8), arg_ch_00, *arg_10h_00);\n        }\n    }\n    else {\n        *(unaff_EBP + -0x220) = 0;\n    }\n    fcn.00416ef4(0xd);\n    fcn.0041adb9();\n    return;\n}\n",
        "token_count": 887
    },
    "00414b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414b0c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00414b24;\n    do {\n        fcn.0040a4b0();\ncode_r0x00414b24:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00409a92(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00414c28;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00409a58(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.0041b210(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00414b90:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.0041b210(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00414b90;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00414bc2:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00414bc2;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00409a58(arg_8h << 2);\n    fcn.00401b50(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0041b210(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00409a92(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00414c28:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 781
    },
    "00414c66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c66(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00414b0c(iVar1 + arg_10h, 0xffffffff);\n            fcn.00409990(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.0041b210(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00414b0c(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0040a4b0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 393
    },
    "00414d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d0c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h + arg_ch;\n    if ((((-1 < arg_8h) && (-1 < arg_ch)) && (iVar1 <= *(in_ECX + 8))) && ((arg_8h <= iVar1 && (arg_ch <= iVar1)))) {\n        iVar3 = *(in_ECX + 8) - iVar1;\n        if (iVar3 != 0) {\n            iVar3 = iVar3 * 4;\n            fcn.00409990(*(in_ECX + 4) + arg_8h * 4, iVar3, *(in_ECX + 4) + iVar1 * 4, iVar3);\n        }\n        *(in_ECX + 8) = *(in_ECX + 8) - arg_ch;\n        return;\n    }\n    fcn.0040a4b0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 259
    },
    "004151f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004151f3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar2 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x00415208;\n    do {\n        fcn.0040a4b0();\n        iVar4 = unaff_EDI;\ncode_r0x00415208:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar2 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.00409a92(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar4 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar2) {\n                iVar4 = iVar2;\n            }\n            uVar3 = fcn.00409a58(iVar4 << 2);\n            *(in_ECX + 4) = uVar3;\n            fcn.0041b210(uVar3, 0, iVar4 << 2);\n            *(in_ECX + 0xc) = iVar4;\n            goto code_r0x00415324;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar2 <= unaff_EDI) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < iVar2) {\n                fcn.0041b210(*(in_ECX + 4) + iVar1 * 4, 0, (iVar2 - iVar1) * 4, iVar4);\n            }\n            goto code_r0x00415324;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar4 < 4) {\n                iVar4 = 4;\n            }\n            else if (0x400 < iVar4) {\n                iVar4 = 0x400;\n            }\n        }\n        arg_8h = iVar4 + unaff_EDI;\n        if (iVar4 + unaff_EDI <= iVar2) {\n            arg_8h = iVar2;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00409a58(arg_8h << 2);\n    fcn.00401b50(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0041b210(iVar4 + *(in_ECX + 8) * 4, 0, (iVar2 - *(in_ECX + 8)) * 4);\n    fcn.00409a92(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00415324:\n    *(in_ECX + 8) = iVar2;\n    return;\n}\n",
        "token_count": 821
    },
    "0041532e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041532e(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar2 = *(in_ECX + 8);\n            fcn.004151f3(iVar2 + arg_10h, 0xffffffff);\n            iVar2 = (iVar2 - arg_8h) * 4;\n            fcn.00409990(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, iVar2, *(in_ECX + 4) + arg_8h * 4, iVar2);\n            fcn.0041b210(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.004151f3(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = *arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0040a4b0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 376
    },
    "00415dc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415dc4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b0a1();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00415dda. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.00415c5f(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 147
    },
    "00415e72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415e72(uint arg_8h)\n\n{\n    fcn.0041b210(arg_8h, 0, 0x10);\n    return;\n}\n",
        "token_count": 43
    },
    "0041603a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041603a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    piVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x10) = 0;\n    uVar3 = fcn.004017b0();\n    fcn.00401780(uVar3);\n    iVar2 = *piVar1;\n    uVar3 = *(iVar2 + -0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    uVar3 = fcn.004021d0(*(unaff_EBP + 0xc), iVar2, uVar3);\n    fcn.004017e0(*(unaff_EBP + 8), *(unaff_EBP + 0xc), uVar3);\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 298
    },
    "0041639e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.0041639e(uint arg_8h, uint arg_ch)\n\n{\n    code **arg_8h_00;\n    uint uVar1;\n    code *pcVar2;\n    uint *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.0041ad00(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x004164c5;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (arg_8h_00 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.0041608f(0x10);\n        if (arg_8h_00 == NULL) {\n            arg_8h_00 = NULL;\n        }\n        else {\n            *arg_8h_00 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        arg_8h_00[2] = NULL;\n        arg_8h_00[3] = NULL;\n        fcn.004161c1(arg_8h_00);\ncode_r0x004163f5:\n        if (arg_8h_00[3] == NULL) {\n            uVar1 = fcn.00409ae1(extraout_ECX[3], 4);\n            pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar1);\n        }\n        else {\n            uVar4 = 2;\n            uVar1 = fcn.00409ae1(extraout_ECX[3], 4);\n            pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(arg_8h_00[3], uVar1, uVar4);\n        }\n        if (pcVar2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar2 = fcn.0040a478();\n        }\n        arg_8h_00[3] = pcVar2;\n        fcn.0041b210(pcVar2 + arg_8h_00[2] * 4, 0, (extraout_ECX[3] - arg_8h_00[2]) * 4);\n        arg_8h_00[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, arg_8h_00);\n        iVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar3 = *(unaff_EBP + 8);\n        if ((arg_8h_00[2] <= iVar3) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x004163f5;\n    }\n    if ((arg_8h_00[3] != NULL) && (iVar3 < arg_8h_00[2])) {\n        *(arg_8h_00[3] + iVar3 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x004164c5:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar5);\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 932
    },
    "00416843": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00416843(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00416641(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00416598(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.004167f3();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 214
    },
    "00416b2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00416b2d(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00416aa5(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0040a4b0(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00416c9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416c9d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint lpString1;\n    uint32_t var_4h;\n    \n    var_4h = *0x438ddc ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00416cc4;\n    do {\n        fcn.0040a4b0();\ncode_r0x00416cc4:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    lpString1._0_2_ = 0;\n    fcn.0041b210(&lpString1 + 2, 0, 0x1fe);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x00416d25;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, arg_ch);\ncode_r0x00416d25:\n    fcn.00419910(unaff_EBX);\n    return;\n}\n",
        "token_count": 362
    },
    "00416ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ef4(uint32_t arg_8h)\n\n{\n    if (0x10 < arg_8h) {\n        arg_8h = fcn.0040a4b0();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h * 0x18 + 0x43bec0);\n    return;\n}\n",
        "token_count": 85
    },
    "00417aaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00417aaf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    fcn.00402350();\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00401f00(*(unaff_EBP + 0xc));\n    if (iVar1 != 0) {\n        fcn.0041796c(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.00402380();\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 234
    },
    "00417c6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417c6d(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t extraout_ECX;\n    \n    iVar2 = in_ECX[0x22];\n    if (iVar2 != 0) goto code_r0x00417c85;\n    do {\n        fcn.0040a4b0();\n        iVar2 = extraout_ECX;\ncode_r0x00417c85:\n    } while ((arg_8h < 0xe110) || (*(iVar2 + 4) + 0xe110U <= arg_8h));\n    puVar1 = fcn.00417c3a(arg_8h - 0xe110);\n    iVar2 = (**(*in_ECX + 0x88))(*puVar1);\n    if (iVar2 == 0) {\n        (***in_ECX[0x22])(arg_8h - 0xe110);\n    }\n    return 1;\n}\n",
        "token_count": 233
    },
    "00418189": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418189(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x418199;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 85
    },
    "004185af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004185af(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.004020c0(0x104);\n    fcn.0041b210(arg_8h_00, 0, 0x104);\n    fcn.0040a25a(arg_8h_00, 0x104, arg_8h, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootW)(arg_8h_00);\n    fcn.0040a65f(0xffffffff);\n    return;\n}\n",
        "token_count": 144
    },
    "00418fdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418fdf(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < arg_8h) {\n        if (arg_8h == 0x3e3) {\n            return 10;\n        }\n        if (arg_8h == 0x3e4) {\n            return 10;\n        }\n        if (arg_8h == 0x3e5) {\n            return 10;\n        }\n        if (arg_8h != 999) {\n            return 1;\n        }\n        return 5;\n    }\n    if (arg_8h == 0x10b) {\n        return 3;\n    }\n    if (arg_8h < 0x3f) {\n        if (arg_8h == 0x3e) {\n            return 8;\n        }\n        if (arg_8h < 0x1a) {\n            if (arg_8h == 0x19) {\n                return 9;\n            }\n            if (arg_8h < 0x19) {\n    // switch table (25 cases) at 0x4191ef\n                switch(*(arg_8h * 4 + 0x4191ef)) {\n                case 0x419020:\n                    return 0;\n                case 0x419027:\n                    return 2;\n                case 0x41902e:\n                    return 4;\n                case 0x419035:\n                    return 7;\n                case 0x419065:\n                    return 9;\n                case 0x4190eb:\n                    return 3;\n                case 0x419114:\n                    return 10;\n                case 0x419150:\n                    return 6;\n                case 0x4191a3:\n                    return 5;\n                case 0x4191e5:\n                    return 1;\n                }\n            }\n            return 1;\n        }\n        if (0x27 < arg_8h) {\n            if (8 < arg_8h - 0x34) {\n                return 1;\n            }\n    // switch table (9 cases) at 0x419253\n            switch(*((arg_8h - 0x34) * 4 + 0x419253)) {\n            case 0x4190eb:\n                return 3;\n            case 0x419114:\n                return 10;\n            case 0x419150:\n                return 6;\n            case 0x4191a3:\n                return 5;\n            case 0x4191e5:\n                return 1;\n            }\n        }\n        if (arg_8h == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < arg_8h) {\n            if (arg_8h == 0x21) {\n                return 0xc;\n            }\n            if (arg_8h == 0x22) {\n                return 3;\n            }\n            if (arg_8h == 0x24) {\n                return 4;\n            }\n            if (arg_8h != 0x26) {\n                return 1;\n            }\n            return 0xe;\n        }\n        if (arg_8h == 0x20) {\n            return 0xb;\n        }\n        if (arg_8h == 0x1a) {\n            return 6;\n        }\n        if (arg_8h == 0x1b) {\n            return 9;\n        }\n        iVar1 = arg_8h - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0041905e:\n        if (iVar1 == 1) {\n            return 9;\n        }\n    }\n    else {\n        if (arg_8h < 0x6c) {\n            if (arg_8h == 0x6b) {\n                return 2;\n            }\n            if (0x47 < arg_8h) {\n                if (arg_8h == 0x50) {\n                    return 5;\n                }\n                if (arg_8h == 0x52) {\n                    return 5;\n                }\n                if (arg_8h == 0x55) {\n                    return 3;\n                }\n                if (arg_8h == 0x56) {\n                    return 5;\n                }\n                if (arg_8h != 0x58) {\n                    return 1;\n                }\n                return 10;\n            }\n            if (arg_8h == 0x47) {\n                return 5;\n            }\n            if (arg_8h == 0x40) {\n                return 5;\n            }\n            if (arg_8h == 0x41) {\n                return 5;\n            }\n            if (arg_8h == 0x42) {\n                return 6;\n            }\n            if (arg_8h == 0x43) {\n                return 3;\n            }\n            iVar1 = arg_8h - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (arg_8h < 0x91) {\n                if (arg_8h == 0x90) {\n                    return 3;\n                }\n                if (arg_8h < 0x76) {\n                    if (arg_8h == 0x75) {\n                        return 10;\n                    }\n                    if (arg_8h == 0x6c) {\n                        return 0xc;\n                    }\n                    if (arg_8h == 0x6f) {\n                        return 3;\n                    }\n                    if (arg_8h != 0x70) {\n                        if (arg_8h == 0x71) {\n                            return 4;\n                        }\n                        if (arg_8h == 0x72) {\n                            return 6;\n                        }\n                        return 1;\n                    }\n                    return 0xd;\n                }\n                if (arg_8h == 0x7b) {\n                    return 3;\n                }\n                if (arg_8h == 0x7c) {\n                    return 3;\n                }\n                if (arg_8h == 0x7d) {\n                    return 3;\n                }\n                iVar1 = arg_8h - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0041905e;\n            }\n            if (arg_8h < 0xb7) {\n                if (arg_8h == 0xb6) {\n                    return 6;\n                }\n                if (arg_8h == 0x91) {\n                    return 7;\n                }\n                if (arg_8h == 0x9a) {\n                    return 3;\n                }\n                if (arg_8h == 0xa1) {\n                    return 3;\n                }\n                if (arg_8h == 0xa7) {\n                    return 0xc;\n                }\n                if (arg_8h != 0xaa) {\n                    return 1;\n                }\n                return 5;\n            }\n            if (arg_8h == 0xb7) {\n                return 5;\n            }\n            if (arg_8h == 0xbf) {\n                return 6;\n            }\n            if (arg_8h == 0xc1) {\n                return 6;\n            }\n            iVar1 = arg_8h - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\n            return 3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1700
    },
    "00419cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419cfc(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00419ca5(fcn.0041dc2f, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0041a0f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0041a0f1(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0041b28c(0x435350, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0041b192();\n        *puVar1 = 0x16;\n        fcn.0041d6dc(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.004200a9();\n        fcn.004201c1(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.004200a9();\n        arg_8h_00 = fcn.0042025e(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.004200a9();\n        uVar4 = fcn.0041dc2f(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.004200a9();\n        fcn.004202fa(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0041a18d();\n    }\n    fcn.0041b2d1();\n    return;\n}\n",
        "token_count": 469
    },
    "0041a18d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a18d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004200a9();\n    fcn.0042022f(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "0041a440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a440(uint arg_8h)\n\n{\n    fcn.0041a314(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0041b746": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b746(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0041ca87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ca9b)\n// WARNING: Removing unreachable block (ram,0x0041caa1)\n// WARNING: Removing unreachable block (ram,0x0041caa3)\n\nvoid fcn.0041ca87(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "00423508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423508(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0041b192();\n        *puVar1 = 0x16;\n        fcn.0041d6dc(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439ad4;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "00423541": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423541(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0041b192();\n        *puVar1 = 0x16;\n        fcn.0041d6dc(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439ad8;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0042357a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042357a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0041b192();\n        *puVar1 = 0x16;\n        fcn.0041d6dc(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439ad0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0042a4a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042a4a5(uint param_1)\n\n{\n    fcn.0041b210(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 46
    },
    "0041a974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a974(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042214f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00415f2c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415f2c(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    fcn.00415ed0();\n    *(param_1 + 0x24) = 0;\n    fcn.00415e8a();\n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n    *(param_1 + 0x3c) = uVar2;\n    uVar2 = (*pcVar1)(0, 0x7f00);\n    *(param_1 + 0x40) = uVar2;\n    *(param_1 + 0x10) = 2;\n    *(param_1 + 0x14) = 2;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x44) = 0;\n    return param_1;\n}\n",
        "token_count": 229
    },
    "00417ccb": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417ccb(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t phkResult;\n    \n    var_ch = 0;\n    phkResult = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x42f07c, 0, 0x2001f, &phkResult);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExW;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                          (phkResult, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (phkResult != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 379
    },
    "0041114b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041114b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*in_ECX);\n    arg_8h_00 = *(in_ECX + 2);\n    fcn.00410c74(arg_8h_00);\n    fcn.00410c74(arg_8h_00);\n    fcn.0041101f(*in_ECX, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 137
    },
    "00418c28": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418c28(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.00418b93(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00417d5e": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417d5e(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00417ccb();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 165
    },
    "00429616": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00429616(void)\n\n{\n    *0x439d58 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "00402a40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00402a40(int16_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 == NULL) {\n        return;\n    }\n    uVar1 = 0;\n    if (param_2 != 0) {\n        do {\n            if (*param_1 == 0) {\n                return;\n            }\n            uVar1 = uVar1 + 1;\n            param_1 = param_1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00409a58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409a58(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0041a775(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x438000 == NULL) break;\n        iVar1 = (**0x438000)(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00409a87": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00409a87(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0041a775(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x438000 == NULL) break;\n        iVar1 = (**0x438000)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 114
    },
    "00409f7a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f7a(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (-1 < arg_8h) goto code_r0x00409f8f;\n    do {\n        fcn.0040a4b0();\ncode_r0x00409f8f:\n        if (arg_8h < *(in_ECX + 8)) goto code_r0x00409fb8;\n    } while (((*(in_ECX + 0xc) <= arg_8h) && (*(in_ECX + 4) <= arg_ch)) &&\n            (arg_ch < *(in_ECX + 4) + *(in_ECX + 0xc) * 4));\n    fcn.00409ca7(arg_8h + 1, 0xffffffff);\ncode_r0x00409fb8:\n    fcn.00403290(arg_ch);\n    return;\n}\n",
        "token_count": 210
    },
    "0040a32f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a32f(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    if (arg_8h == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (arg_8h == 0x16) goto code_r0x0040a359;\n        if (arg_8h == 0x22) goto code_r0x0040a359;\n        if (arg_8h == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00402330(uVar1);\ncode_r0x0040a359:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 197
    },
    "0040c4c7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c4c7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t unaff_ESI;\n    \n    iVar2 = 0x7fffffff;\n    iVar1 = unaff_ESI;\n    if (arg_8h == 0x7fffffff) goto code_r0x0040c4ea;\n    if (*in_ECX == 0x7fffffff) goto code_r0x0040c4e8;\n    if (*in_ECX == arg_8h) goto code_r0x0040c4e8;\n    do {\n        iVar2 = fcn.0040a4b0();\n        in_ECX = extraout_ECX;\ncode_r0x0040c4e8:\n        *in_ECX = arg_8h;\n        iVar1 = unaff_ESI;\ncode_r0x0040c4ea:\n        arg_8h = iVar1;\n        unaff_ESI = arg_8h;\n    } while (*in_ECX == iVar2);\n    fcn.00416e82(*in_ECX);\n    return;\n}\n",
        "token_count": 274
    },
    "0040c6a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c6a4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t nPos;\n    \n    if (arg_8h == 0) {\n        fcn.0040a4b0();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    nPos = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040c42e(nPos);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c419(nPos);\n                if (iVar2 == arg_ch) goto code_r0x0040c706;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x0040c706:\n                    iVar1 = fcn.00416b2d(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.0040c6a4(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            nPos = nPos + 1;\n        } while (nPos < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "0040d9f3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d9f3(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *arg_ch;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0040d6a0(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x108))(arg_ch),  iVar2 != 0)) break;\n        if (iVar3 == arg_8h) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 183
    },
    "0040db69": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040db69(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&var_1ch);\n    }\n    fcn.0040d5ce();\n    return;\n}\n",
        "token_count": 134
    },
    "0040e4b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040e4b8(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t *piVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            arg_8h = (*pcVar1)(iVar2);\n            piVar3 = fcn.0040d674(arg_8h);\n            if ((piVar3 == NULL) || (iVar2 = (**(*piVar3 + 0x128))(),  iVar2 != 0)) break;\n            iVar2 = piVar3[8];\n        }\n        return piVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 199
    },
    "0040eb9f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eb9f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            arg_8h = iVar1;\n            iVar1 = fcn.0040eb55(arg_8h);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040d674(arg_8h);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "004114b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004114b5(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint unaff_EBP;\n    \n    if (param_1 != NULL) goto code_r0x004114c3;\n    do {\n        fcn.0040a4b0();\n        param_1 = extraout_ECX;\ncode_r0x004114c3:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x0041149a;\n    do {\n        iVar1 = fcn.0040a4b0(unaff_EBP);\ncode_r0x0041149a:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 231
    },
    "00411ea2": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411ea2(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    if (*0x43be18 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x42d830);\n        if (iVar2 != 0) goto code_r0x00411edc;\ncode_r0x00411ed7:\n        do {\n            fcn.0040a4b0();\ncode_r0x00411edc:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            iVar3 = iVar2;\n            *0x43be08 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxW\");\n            *0x43be0c = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x43be10 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x43be14 = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            iVar2 = iVar3;\n            if (*0x43be08 == 0) {\n                if ((*0x43be0c != 0) || (*0x43be10 != 0)) goto code_r0x00411ed7;\n            }\n            else if ((*0x43be0c == 0) || (*0x43be10 == 0)) goto code_r0x00411ed7;\n        } while (*0x43be14 != 0);\n        *0x43be18 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "004128f7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004128f7(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041056d();\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CWinApp.0;\n    if (*(unaff_EBP + 8) == 0) {\n        extraout_ECX[0x14] = NULL;\n    }\n    else {\n        pcVar1 = fcn.0041b4b3(*(unaff_EBP + 8));\n        extraout_ECX[0x14] = pcVar1;\n    }\n    iVar2 = fcn.0040b0a1();\n    if (iVar2 != 0) goto code_r0x0041293e;\n    do {\n        fcn.0040a4b0();\ncode_r0x0041293e:\n        iVar3 = fcn.0040ab91();\n    } while (iVar3 == 0);\n    *(iVar3 + 4) = extraout_ECX;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    extraout_ECX[0xb] = pcVar1;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    extraout_ECX[0xc] = pcVar1;\n    *(iVar2 + 4) = extraout_ECX;\n    *(extraout_ECX + 0x92) = 0;\n    *(extraout_ECX + 0x24) = 0;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x26] = 0x200;\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 696
    },
    "00415560": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00415560(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041accd(0xc);\n    if ((~*(extraout_ECX + 0x18) & 1) == 0) {\n        if (*(extraout_ECX + 0x38) != 0) goto code_r0x0041564e;\n        iVar1 = fcn.00409a58(0x14);\n        *(unaff_EBP + -0x18) = iVar1;\n        *(unaff_EBP + -4) = 1;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00414ae5();\n        }\n        arg_ch = *(extraout_ECX + 0x40);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x38) = uVar2;\n        fcn.00414b0c(1, arg_ch);\n        iVar1 = *(extraout_ECX + 0x38);\n        if (0 < *(iVar1 + 8)) goto code_r0x00415627;\n        do {\n            iVar1 = fcn.0040a4b0();\ncode_r0x00415627:\n            **(iVar1 + 4) = 0;\n            *(extraout_ECX + 0x34) = 1;\n            *(unaff_EBP + -0x10) = 0;\n            fcn.0041548c(unaff_EBP + -0x10);\n            *(unaff_EBP + -0x18) = 0;\n            fcn.0041532e(0, unaff_EBP + -0x18, 1);\ncode_r0x0041564e:\n            if (*(unaff_EBP + 8) == 0) goto code_r0x00415697;\n            fcn.004151c8();\n            fcn.00414c66(*(extraout_ECX + 0x34), *(unaff_EBP + 8), 1);\n            *(unaff_EBP + -0x14) = 0;\n            fcn.004166c1(1, unaff_EBP + -0x14);\n        } while (*(unaff_EBP + -0x14) == 0);\n        uVar2 = *(extraout_ECX + 0x34);\n        *(unaff_EBP + 8) = 2;\n        fcn.0041532e(uVar2, unaff_EBP + 8, 1);\n    }\n    else {\n        if (*(extraout_ECX + 0x38) == 0) {\n            iVar1 = fcn.00409a58(0x1c);\n            *(unaff_EBP + -0x18) = iVar1;\n            *(unaff_EBP + -4) = 0;\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.004167b5(*(extraout_ECX + 0x40));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(extraout_ECX + 0x38) = uVar2;\n            fcn.00416598(*(extraout_ECX + 0x44), 1);\n            puVar3 = fcn.00416843(0);\n            *puVar3 = 0;\n            *(extraout_ECX + 0x34) = 1;\n        }\n        if (*(unaff_EBP + 8) == 0) goto code_r0x00415697;\n        fcn.004151c8();\n        puVar3 = fcn.00416843(*(unaff_EBP + 8));\n        *puVar3 = *(extraout_ECX + 0x34);\n    }\n    *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\ncode_r0x00415697:\n    fcn.0041ada5();\n    return;\n}\n",
        "token_count": 1040
    },
    "00416336": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416336(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 296
    },
    "00416641": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00416641(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    *arg_10h = arg_8h >> 4;\n    uVar2 = (arg_8h >> 4) % *(in_ECX + 8);\n    *arg_ch = uVar2;\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 195
    },
    "0041667c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041667c(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (in_ECX == 0) {\n        fcn.0040a4b0();\n        in_ECX = extraout_ECX;\n    }\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "004166ea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004166ea(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        puVar2 = *(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4;\n        puVar1 = *puVar2;\n        while (arg_8h_00 = puVar1,  arg_8h_00 != NULL) {\n            if (arg_8h_00[1] == arg_8h) {\n                *puVar2 = *arg_8h_00;\n                fcn.00416623(arg_8h_00);\n                return 0x1;\n            }\n            puVar2 = arg_8h_00;\n            puVar1 = *arg_8h_00;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 249
    },
    "0041690a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041690a(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    \n    if (param_1 != 0) goto code_r0x00416913;\n    do {\n        fcn.0040a4b0();\n        param_1 = extraout_ECX;\ncode_r0x00416913:\n        arg_8h = *(param_1 + 4);\n    } while (arg_8h == NULL);\n    iVar1 = *arg_8h;\n    iVar2 = arg_8h[2];\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        *(iVar1 + 4) = 0;\n    }\n    fcn.004168e3(arg_8h);\n    return iVar2;\n}\n",
        "token_count": 226
    },
    "00416de8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416de8(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar4 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar4);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0xffff) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar2 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar2 != 0) {\n                return hWnd;\n            }\n        }\n        uVar4 = 2;\n    } while( true );\n}\n",
        "token_count": 294
    },
    "0041819a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041819a(uint param_1, int32_t param_2)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = 0;\n    iVar2 = param_2;\n    if (param_2 != 0) {\n        do {\n            if (*in_EAX == 0) break;\n            in_EAX = in_EAX + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        if (iVar2 != 0) goto code_r0x004181ba;\n    }\n    iVar1 = -0x7ff8ffa9;\ncode_r0x004181ba:\n    if (unaff_EDI != NULL) {\n        if (-1 < iVar1) {\n            *unaff_EDI = param_2 - iVar2;\n            return;\n        }\n        *unaff_EDI = 0;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00418c85": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418c85(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x00418cb2;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00402330();\ncode_r0x00418cb2:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.00418c28(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 249
    },
    "004195bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004195bd(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00409a92(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041fe76": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041fe76(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041b28c(0x435500, 0xc);\n    fcn.004204aa(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x43cbfc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x43cbf8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0041feba;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0041a83f(arg_8h_00);\ncode_r0x0041feba:\n        fcn.0041a83f(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0041fedd();\n    fcn.0041b2d1();\n    return;\n}\n",
        "token_count": 401
    },
    "0040b17f": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040b17f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    if (*0x43bc84 != 0) {\n        return *0x43bc78 != 0;\n    }\n    *0x43bc88 = fcn.0040b125();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if ((((iVar2 != 0) && (*0x43bc68 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x42da54),  *0x43bc68 != 0)) &&\n        (*0x43bc6c = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x43bc6c != 0)) &&\n       (((*0x43bc70 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x43bc70 != 0 &&\n         (*0x43bc74 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x43bc74 != 0)) &&\n        ((*0x43bc7c = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x43bc7c != 0 &&\n         (*0x43bc80 = (*pcVar1)(iVar2, \"EnumDisplayDevicesW\"),  *0x43bc80 != 0)))))) {\n        if (*0x43bc88 == 0) {\n            pcVar3 = \"GetMonitorInfoA\";\n        }\n        else {\n            pcVar3 = \"GetMonitorInfoW\";\n        }\n        *0x43bc78 = (*pcVar1)(iVar2, pcVar3);\n        if (*0x43bc78 != 0) {\n            *0x43bc84 = 1;\n            return true;\n        }\n    }\n    *0x43bc68 = 0;\n    *0x43bc6c = 0;\n    *0x43bc70 = 0;\n    *0x43bc74 = 0;\n    *0x43bc78 = 0;\n    *0x43bc7c = 0;\n    *0x43bc80 = 0;\n    *0x43bc84 = 1;\n    return false;\n}\n",
        "token_count": 525
    },
    "0040a901": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a901(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.0041a83f(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "004160c2": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004160c2(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < arg_8h) && (arg_8h < in_ECX[3])) && (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX),  iVar3 != 0))\n       && (arg_8h < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    }
}