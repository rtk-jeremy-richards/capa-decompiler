{
    "005103a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x005106a5)\n\nuint fcn.005103a0(void)\n\n{\n    uint uVar1;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_1h;\n    \n    *0x55b8d2 = 0xcb;\n    // WARNING: Could not recover jumptable at 0x00510610. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5106e0\n    uVar1 = (**0x5106f0)(0xa5c9a, *0x55b930, *0x55b934, *0x55b918, *0x55b91c, 0x257acafa, 0, 0xee, 0, *0x55b8ce, \n                         *0x55b8ce >> 0x1f, *0x55b94c, 0, 0x9c, *0x55b8cb, 0x3fdd9185, 0x66, *0x55b92c, 0x7c, *0x55b8f0\n                         , *0x55b8f4, 0x1e89998b, 0xbfbb, 0xeb20aeea, *0x55b8c4, *0x55b960, *0x55b8d3, *0x55b8c8, 3, \n                         *0x55b8c0, *0x55b8e4, *0x55b96c, *0x55b928, 0xe5, 0x8c5b, 0x5422, 0x75a4, 0xa8, *0x55b914, 0x72\n                         , *0x55b968 == 0, *0x55b968 == 0, 0);\n    return uVar1;\n}\n",
        "token_count": 1485
    },
    "005110e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_f8h\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Removing unreachable block (ram,0x0051142f)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.005110e0(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t arg_8h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    var_1ah._0_1_ = 0x16;\n    iVar1 = *0x55b8e6;\n    var_1ah._1_1_ = *0x55b970;\n    stack0xffffffe4 = str.Unhandled_exceptio._0_4_;\n    var_14h = str.Unhandled_exceptio._4_4_;\n    var_10h = str.Unhandled_exceptio._8_4_;\n    var_ch = str.Unhandled_exceptio._12_4_;\n    var_8h._0_2_ = str.Unhandled_exceptio._16_2_;\n    var_8h._2_1_ = str.Unhandled_exceptio[18];\n    arg_8h = &var_1ah + 2;\n    *0x55b920 = (*_sym.imp.KERNEL32.dll_lstrlenA)\n                          (arg_8h, 0x39d92c4d, 0, *0x55b914, 0, *0x55b8e7, *0x55b8e7 >> 0x1f, 0xbb1a, 0, *0x55b90a, 0, \n                           *0x55b8e6, *0x55b8e6 >> 0x1f, 0x6884995e, 0x48d3b40c, 0, 0xc2c170b9, 0xb6246, *0x55b920, 0, \n                           0xae1da320, 0x686bb, *0x55b968, *0x55b968 >> 0x1f, *0x55b974, *0x55b8cc, 0x4bba6f12, \n                           *0x55b8cf, *0x55b8d2, *0x55b8e2, 0x2d, *0x55b928, *0x55b974, 0xe2, *0x55b8cf, *0x55b974, \n                           *0x55b94c, *0x55b908, *0x55b8f4, 0x2ed1, 0);\n    *0x55b8c8 = *0x55b8c8 - *0x55b920;\n    bVar2 = *0x55b930 < iVar1 - 0xcb9eU;\n    *0x55b930 = *0x55b930 - (iVar1 - 0xcb9eU);\n    *0x55b934 = *0x55b934 - bVar2;\n    *0x55b96c = var_1ah._1_1_ << 5;\n    bVar2 = *0x55b8f0 == 0;\n    *0x55b8f0 = *0x55b8f0 + -1;\n    *0x55b8f4 = *0x55b8f4 - bVar2;\n    *0x55b924 = *0x55b968 + -0x70de;\n    *0x55b8e7 = 0;\n    *0x607038 = *0x55b8e0;\n    fcn.00519070(arg_8h);\n    return;\n}\n",
        "token_count": 1866
    },
    "00511470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00511cbf)\n// WARNING: Removing unreachable block (ram,0x00511cbd)\n// WARNING: Removing unreachable block (ram,0x0051191e)\n// WARNING: Removing unreachable block (ram,0x00511955)\n// WARNING: Removing unreachable block (ram,0x00511957)\n// WARNING: Removing unreachable block (ram,0x00511971)\n// WARNING: Removing unreachable block (ram,0x00511965)\n// WARNING: Removing unreachable block (ram,0x0051197b)\n// WARNING: Removing unreachable block (ram,0x0051198d)\n// WARNING: Removing unreachable block (ram,0x00511981)\n// WARNING: Removing unreachable block (ram,0x00511997)\n// WARNING: Removing unreachable block (ram,0x00511a30)\n// WARNING: Removing unreachable block (ram,0x00511a47)\n// WARNING: Removing unreachable block (ram,0x00511a3b)\n// WARNING: Removing unreachable block (ram,0x00511a51)\n// WARNING: Removing unreachable block (ram,0x00511a82)\n// WARNING: Removing unreachable block (ram,0x00511a76)\n// WARNING: Removing unreachable block (ram,0x00511a8c)\n// WARNING: Removing unreachable block (ram,0x00511b23)\n// WARNING: Removing unreachable block (ram,0x00511bc8)\n// WARNING: Removing unreachable block (ram,0x00511bd3)\n// WARNING: Removing unreachable block (ram,0x00511b30)\n// WARNING: Removing unreachable block (ram,0x00511b70)\n// WARNING: Removing unreachable block (ram,0x00511b5c)\n// WARNING: Removing unreachable block (ram,0x00511b7b)\n// WARNING: Removing unreachable block (ram,0x00511aa1)\n// WARNING: Removing unreachable block (ram,0x00511b11)\n// WARNING: Removing unreachable block (ram,0x00511b0b)\n// WARNING: Removing unreachable block (ram,0x00511b15)\n// WARNING: Removing unreachable block (ram,0x005119a9)\n// WARNING: Removing unreachable block (ram,0x005119bf)\n// WARNING: Removing unreachable block (ram,0x005119b3)\n// WARNING: Removing unreachable block (ram,0x005119c9)\n// WARNING: Removing unreachable block (ram,0x005119de)\n// WARNING: Removing unreachable block (ram,0x005119d2)\n// WARNING: Removing unreachable block (ram,0x005119e8)\n// WARNING: Removing unreachable block (ram,0x00511a0b)\n// WARNING: Removing unreachable block (ram,0x005119f6)\n// WARNING: Removing unreachable block (ram,0x00511a2b)\n// WARNING: Removing unreachable block (ram,0x00511bf8)\n// WARNING: Removing unreachable block (ram,0x00511d27)\n// WARNING: Removing unreachable block (ram,0x00511d65)\n// WARNING: Removing unreachable block (ram,0x00511c2f)\n// WARNING: Removing unreachable block (ram,0x00511d0e)\n// WARNING: Removing unreachable block (ram,0x00511d19)\n// WARNING: Removing unreachable block (ram,0x00511c4f)\n// WARNING: Removing unreachable block (ram,0x00511c84)\n// WARNING: Removing unreachable block (ram,0x00511c70)\n// WARNING: Removing unreachable block (ram,0x00511c90)\n// WARNING: Removing unreachable block (ram,0x00511cb1)\n// WARNING: Removing unreachable block (ram,0x00511cb7)\n// WARNING: Removing unreachable block (ram,0x00511d00)\n// WARNING: Removing unreachable block (ram,0x00511ccb)\n// WARNING: Removing unreachable block (ram,0x00511d0c)\n// WARNING: Removing unreachable block (ram,0x00511d25)\n// WARNING: Removing unreachable block (ram,0x00511d71)\n// WARNING: Removing unreachable block (ram,0x00511d7b)\n// WARNING: Removing unreachable block (ram,0x00511d81)\n// WARNING: Removing unreachable block (ram,0x00511d95)\n// WARNING: Removing unreachable block (ram,0x00511d8c)\n// WARNING: Removing unreachable block (ram,0x00511d9c)\n\nuint fcn.00511470(void)\n\n{\n    uint uVar1;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_9h;\n    uint var_1h;\n    \n    var_80h = *0x55b920 == 0;\n    var_84h = (*0x55b950 | *0x55b954) == 0;\n    *0x55b918 = (*0x55b94c + var_80h) * var_84h;\n    *0x55b91c = 0;\n    // WARNING: Could not recover jumptable at 0x005117d4. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x511dec\n    uVar1 = (**0x511df8)();\n    return uVar1;\n}\n",
        "token_count": 1824
    },
    "00511e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x005120cf)\n// WARNING: Removing unreachable block (ram,0x00512109)\n// WARNING: Removing unreachable block (ram,0x00512100)\n// WARNING: Removing unreachable block (ram,0x00512110)\n// WARNING: Removing unreachable block (ram,0x00512121)\n// WARNING: Removing unreachable block (ram,0x005120b0)\n// WARNING: Removing unreachable block (ram,0x0051215e)\n// WARNING: Removing unreachable block (ram,0x00512118)\n// WARNING: Removing unreachable block (ram,0x00512128)\n// WARNING: Removing unreachable block (ram,0x005120ca)\n\nuint fcn.00511e00(void)\n\n{\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_dh;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_1h;\n    \n    for (var_1ch = 0; var_1ch < 0x2ae; var_1ch = var_1ch + 1) {\n        if (('0' < *0x55b8e6) < ('q' < *0x55b8e6)) {\n            *0x55b908 = *0x55b920;\n        }\n    }\n    *0x55b8e4 = *0x55b8e4 * (*0x55b8e4 + 0x7111);\n    *0x55b8e8 = *0x55b8d2;\n    *0x55b924 = *0x55b924 - (*0x55b8e7 + -0x19cd);\n    return 0x2203f0e3;\n}\n",
        "token_count": 798
    },
    "00512290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00512590)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00512290(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint in_stack_fffffea4;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_35h;\n    uint var_2fh;\n    uint32_t var_4h;\n    \n    iVar2 = *0x55b96c;\n    uVar1 = *0x55b948;\n    iVar4 = *0x55b918;\n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    var_2fh._0_1_ = *0x55b970;\n    uVar5 = *0x55b948 >> 0x1f;\n    var_2fh._1_1_ = '\\x02';\n    var_2fh._2_1_ = '\\v' << (0xbU - var_2fh & 0x1f);\n    for (var_50h = 0x11a2; 0x1139 < var_50h; var_50h = var_50h + -1) {\n        var_2fh._2_1_ = *0x64ead8;\n    }\n    if (*0x55b918 == 0) {\n        *0x55b928 = *0x55b8ec - 0x6d;\n        *0x55b8c0 = CONCAT44(*0x55b8c4, *0x55b8c0);\n    }\n    else {\n        in_stack_fffffea4 = 0;\n        cVar3 = fcn.00512c30(0, 0, 0x73, *0x55b8d3);\n        *0x55b8ec = cVar3;\n        var_68h = iVar2 != 0;\n        uVar6 = *0x55b96c >> 0x1f;\n        if ((uVar5 < uVar6) || ((uVar5 <= uVar6 && (uVar1 < *0x55b96c)))) {\n            var_5ch = 0;\n        }\n        else {\n            var_5ch = 1;\n        }\n        var_64h = ~*0x55b90c < var_5ch;\n        if (~var_64h < var_68h) {\n            *0x55b8c0 = CONCAT44(*0x55b8c4, *0x55b8c0);\n            if ((-1 < *0x55b8f4) &&\n               ((0 < *0x55b8f4 || (*0x55b8c0 = CONCAT44(*0x55b8c4, *0x55b8c0),  *0x55b8ec < *0x55b8f0)))) {\n                *0x55b8d0 = *0x64ead8;\n                *0x55b8c0 = CONCAT44(*0x55b8c4, *0x55b8c0);\n            }\n        }\n        else {\n            var_70h = *0x55b928 == iVar4;\n            *0x55b8c0 = CONCAT44(*0x55b8c4, *0x55b8c0);\n            if ((~(var_2fh._1_1_ * *0x55b8e7) | var_70h) != 0) {\n                *0x55b8c0 = fcn.00548310(*0x55b8c0, *0x55b8c4, *0x55b948 - 0x90, *0x55b948 - 0x90 >> 0x1f);\n                in_stack_fffffea4 = *0x55b8c4;\n            }\n        }\n    }\n    puVar7 = L\".?AU?$__abi_Functo\";\n    puVar8 = &var_2fh + 3;\n    for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = *puVar7;\n    *0x55b8ca = (*_sym.imp.KERNEL32.dll_lstrlenW)(&var_2fh + 3);\n    fcn.00519070(in_stack_fffffea4);\n    return;\n}\n",
        "token_count": 1513
    },
    "005127b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_104h\n// WARNING: Variable defined which should be unmapped: var_100h\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_f8h\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00512bd7)\n// WARNING: Removing unreachable block (ram,0x00512a6a)\n// WARNING: Removing unreachable block (ram,0x00512a9d)\n// WARNING: Removing unreachable block (ram,0x00512ac3)\n// WARNING: Removing unreachable block (ram,0x00512acb)\n// WARNING: Removing unreachable block (ram,0x00512b10)\n// WARNING: Removing unreachable block (ram,0x00512b18)\n// WARNING: Removing unreachable block (ram,0x00512b39)\n// WARNING: Removing unreachable block (ram,0x00512b2e)\n// WARNING: Removing unreachable block (ram,0x00512b3f)\n// WARNING: Removing unreachable block (ram,0x00512ad3)\n// WARNING: Removing unreachable block (ram,0x00512aec)\n// WARNING: Removing unreachable block (ram,0x00512ade)\n// WARNING: Removing unreachable block (ram,0x00512af4)\n// WARNING: Removing unreachable block (ram,0x00512bd9)\n\nvoid fcn.005127b0(void)\n\n{\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_11h;\n    uint var_bh;\n    uint var_2h;\n    \n    if ((*0x55b93c < *0x55b968 >> 0x1f) || ((*0x55b93c <= *0x55b968 >> 0x1f && (*0x55b938 <= *0x55b968)))) {\n        var_30h = 0;\n    }\n    else {\n        var_30h = 1;\n    }\n    if ((*0x55b93c == 0) && (*0x55b938 < 0x56)) {\n        var_34h = 0;\n    }\n    else {\n        var_34h = 1;\n    }\n    if (var_34h <= var_30h) {\n        *0x55b8e0 = *0x55b8e0 + -1;\n    }\n    *0x55b94c = *0x55b94c - (*0x55b970 + -0xc03);\n    *0x55b93c = *0x55b90c >> 0x1f;\n    *0x55b938 = *0x55b90c;\n    *0x55b8ce = 1;\n    fcn.00548310(*0x55b8d4, 0, 0x84, 0);\n    return;\n}\n",
        "token_count": 1389
    },
    "00513460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00513780)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00513460(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_98h;\n    uint var_94h;\n    uint hWnd;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_22h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = *0x55b968;\n    iVar5 = *0x55b970;\n    var_8h._0_2_ = -0x5f7b;\n    var_ch._0_2_ = 0xbee7;\n    uVar4 = *0x55b94c;\n    var_58h = 0xae1da320;\n    var_54h = 0x686bb;\n    var_3ch = *0x55b948 == 0;\n    if ((var_3ch != 0xfd7de2d0) + (*0x55b928 != 0x16) == '\\0') {\n        *0x55b974 = *0x55b8e8 >> 0x1f;\n        *0x55b970 = *0x55b8e8;\n        pcVar2 = *0x57b3e4;\n    }\n    else {\n        var_ch._0_2_ = fcn.005110e0(0xdb);\n        if (var_ch == 0) {\n            *0x55b918 = fcn.005103a0(*0x55b8cb, 8);\n            *0x55b91c = 0;\n            pcVar2 = *0x57b3e4;\n        }\n        else {\n            bVar6 = *0x55b8c0 < *0x57cbce;\n            *0x55b8c0 = *0x55b8c0 - *0x57cbce;\n            *0x55b8c4 = *0x55b8c4 - bVar6;\n            var_58h = 0xc2d82fd8;\n            var_54h = -1;\n            *0x55b96c = 0xd84a;\n            pcVar2 = *0x57b3e4;\n        }\n    }\n    while( true ) {\n        *0x55b8e2 = 0x5d;\n        for (var_2ch = 0x273; 0 < var_2ch; var_2ch = var_2ch + -1) {\n            var_8h._0_2_ = (*_sym.imp.USER32.dll_GetDlgCtrlID)(uVar3);\n        }\n        if (((*0x55b958 != iVar5 + 0x13c845a2) || (*0x55b95c != iVar5 + 0x13c845a2 >> 0x1f)) ||\n           (*0x55b8cb + var_8h != 1)) break;\n        *0x55b930 = uVar4 << 5;\n        *0x55b934 = 0;\n    }\n    if ((*0x55b8e2 == *0x55b930) && (*0x55b934 == 0)) {\n        for (var_30h = 0; var_30h < 0x9f; var_30h = var_30h + 2) {\n            if (var_ch != iVar5) {\n                if ((var_54h == 0) && (var_58h < 0x32e034f6)) {\n                    iVar1 = 0;\n                }\n                else {\n                    iVar1 = 1;\n                }\n                if (iVar1 == iVar5) {\n                    *0x55b8e4 = 2;\n                }\n            }\n            *0x55b8e7 = *0x55b8e7 + '\\x01';\n        }\n    }\n    else {\n        *0x55b92c = *0x55b8ec + -0x1be085c0;\n        *0x55b8d3 = *0x64ead8;\n    }\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1436
    },
    "00513a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x005141bd)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x005144f6)\n// WARNING: Removing unreachable block (ram,0x0051455f)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00513a50(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int64_t iVar11;\n    ulong uVar12;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint hWnd;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar8 = *0x64ead8;\n    cVar3 = *0x55b920;\n    uVar1 = *0x55b90a;\n    uVar4 = *0x55b8e4;\n    iVar2 = *0x55b8c8;\n    iVar11 = 0x2bbc6f866fdd;\n    var_28h = 3;\n    var_9h = *0x55b8ce;\n    uVar6 = *0x55b8d3;\n    var_2ch = *0x55b960;\n    var_3ch = *0x55b8c0;\n    if ((*0x55b970 | *0x55b974) != 0) {\n        *0x55b910 = *0x55b8e3 + 0x4899;\n    }\n    iVar7 = *0x64ead8 + 0x3a9;\n    var_8h._0_2_ = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    *0x55b918 = fcn.00510b10(0, 0, *0x55b924, 0, 0xd0, *0x55b910, 0);\n    *0x55b918 = *0x55b918 & 0xffff;\n    *0x55b91c = 0;\n    if ((*0x55b918 == 0) == (*0x55b918 == 0x24)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n        if (iVar5 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowDC)(iVar5);\n        }\n    }\n    else {\n        var_28h = *0x55b90c >> 8;\n    }\n    if ((iVar8 + 0x1b5) * (iVar8 + 0x29c) + iVar7 * -0x260 != 0) {\n        if ((*0x55b910 == 0) && (*0x55b8e7 == '\\0')) {\n            var_80h = 0;\n        }\n        else {\n            var_80h = 1;\n        }\n        if ((*0x55b8d0 == 0) && (*0x55b90c != 0)) {\n            var_84h = 0;\n        }\n        else {\n            var_84h = 1;\n        }\n        iVar8 = cVar3 >> 0x1f;\n        if ((iVar8 < 0x5d648) && ((iVar8 < 0x5d647 || (cVar3 < 0x6211ce3d)))) {\n            var_88h = 1;\n        }\n        else {\n            var_88h = 0;\n        }\n        if ((~uVar1 <= ~var_88h) < (var_84h <= var_80h)) {\n            if ((var_8h == *0x55b970) && (*0x55b974 == 0)) {\n                bVar10 = false;\n            }\n            else {\n                bVar10 = true;\n            }\n            if ((bVar10 < (var_8h != 0x47)) &&\n               (*0x55b960 = CONCAT44(*0x55b964, *0x55b960),  iVar11 = 0x2bbc6f866fdd,  *0x55b96c != 0)) {\n                *0x55b8cb = ~*0x55b968;\n                if (iVar2 == 0) {\n                    var_9ch._0_2_ = 0x4b;\n                }\n                else {\n                    var_9ch._0_2_ = *0x55b928;\n                }\n                *0x55b8d0 = var_9ch;\n                *0x55b960 = CONCAT44(*0x55b964, *0x55b960);\n                iVar11 = 0x2bbc6f866fdd;\n            }\n        }\n        else {\n            var_9h = fcn.00548310(var_8h, 0, 0xa30d7a8f, 0xfffb6498);\n            *0x55b960 = CONCAT44(*0x55b964, *0x55b960);\n            iVar11 = 0x2bbc6f866fdd;\n        }\n        while( true ) {\n            var_18h = iVar11 >> 0x20;\n            var_1ch = iVar11;\n            *0x55b90a = 0xa2;\n            uVar9 = *0x55b8e6 >> 0x1f;\n            if ((*0x55b944 < uVar9) || ((*0x55b944 <= uVar9 && (*0x55b940 < *0x55b8e6)))) {\n                if ((var_18h == 0) && (var_1ch < 0xbfbc)) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = 1;\n                }\n                if (*0x55b8ca < uVar1) {\n                    *0x55b8e8 = *0x55b8e8 + *0x55b918;\n                    iVar11 = fcn.00548310(iVar11, var_2ch, var_2ch >> 0x1f);\n                }\n                else if (*0x55b968 != 0) {\n                    *0x55b8cb = *0x55b8cb * (*0x55b8cb ^ *0x55b8e2);\n                    var_2ch = *0x55b8cc >> 4;\n                    uVar4 = *0x55b8cc ^ 0x2625;\n                }\n            }\n            else {\n                *0x55b930 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessorNumber)();\n                *0x55b934 = 0;\n            }\n            var_18h = iVar11 >> 0x20;\n            var_1ch = iVar11;\n            uVar12 = *0x55b960;\n            if (*0x55b8ec != *0x55b90a - 0x659a) break;\n            uVar12 = fcn.00512f40(0, 0, *0x55b970, *0x55b974, 0, 0, *0x55b8c0, *0x55b8c4, 0, 0);\n            *0x55b8d3 = ~*0x55b90c + (-0x45 - *0x55b8c8) + var_28h;\n            *0x55b8f0 = 0x14068651;\n            *0x55b8f4 = 0xb8f61;\n            uVar4 = uVar4 - var_9h;\n            iVar8 = var_28h + 0x659a;\n            *0x55b8e6 = -0x44;\n            if (*0x55b8ec != var_28h + -0x2123749d) break;\n            var_28h = iVar8;\n            *0x55b960 = uVar12;\n            if (*0x55b968 != 0) {\n                (*_sym.imp.KERNEL32.dll_IsValidCodePage)(0xffffffbc);\n            }\n        }\n        bVar10 = *0x55b92c == 0;\n        *0x55b960 = uVar12;\n        uVar12 = fcn.00548310(~var_1ch, ~var_18h, 0x57cd7384, 0x8fba);\n        var_a8h = bVar10;\n        iVar8 = fcn.00548310(uVar12, *0x55b930 + var_a8h, *0x55b934 + CARRY4(*0x55b930, var_a8h));\n        for (var_30h = 0; var_30h < arg_ch; var_30h = var_30h + 1) {\n            *0x55b970 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n            *0x55b974 = 0;\n            if ((((*0x55b970 != 0x2f) < (*0x55b970 != 0)) && (var_8h <= *0x55b96c == *0x55b8ce <= *0x55b8cc)) &&\n               (iVar8 != 0)) {\n                *0x55b90a = *0x55b90a - *0x55b928;\n                *0x55b924 = uVar4;\n            }\n            while( true ) {\n                *0x55b8f0 = 0x9c3e;\n                *0x55b8f4 = 0;\n                for (var_54h = 0; var_54h < 0x71; var_54h = var_54h + 1) {\n                    *0x55b90a = *0x55b8d3 + 0x76;\n                    var_8h._0_2_ = var_8h + 1;\n                }\n                if ((iVar11 + 0xd8f1 != CONCAT44(*0x55b8dc, *0x55b8d8)) ||\n                   (iVar11 + CONCAT44(*0x55b8dc, *0x55b8d8) != 1)) break;\n                if (*0x55b8e3 < (var_3ch != ~uVar6)) {\n                    iVar11 = 0;\n                    var_3ch = var_3ch - (var_2ch ^ 0xb);\n                    *0x55b8cf = *0x55b8cf - (*0x55b90a + 0xb5);\n                }\n                else {\n                    *0x55b940 = ~(*0x55b8cf * *0x55b914) + *0x55b94c;\n                    *0x55b944 = 0;\n                }\n            }\n            *0x55b8e2 = *0x55b8e2 ^ *0x55b938;\n            *(arg_8h + var_30h) = *(arg_8h + var_30h) - *(arg_10h + var_30h % arg_14h);\n        }\n    }\n    *0x55b964 = *0x55b960 >> 0x20;\n    return 0;\n}\n",
        "token_count": 3317
    },
    "00514660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00515a65)\n// WARNING: Removing unreachable block (ram,0x00515a6d)\n// WARNING: Removing unreachable block (ram,0x00515a8d)\n// WARNING: Removing unreachable block (ram,0x00515aa4)\n// WARNING: Removing unreachable block (ram,0x00515a98)\n// WARNING: Removing unreachable block (ram,0x00515ab1)\n// WARNING: Removing unreachable block (ram,0x00516f53)\n// WARNING: Removing unreachable block (ram,0x00516f84)\n// WARNING: Removing unreachable block (ram,0x00516f92)\n// WARNING: Removing unreachable block (ram,0x00516fb1)\n// WARNING: Removing unreachable block (ram,0x00516fb9)\n// WARNING: Removing unreachable block (ram,0x00516fd0)\n// WARNING: Removing unreachable block (ram,0x00516fc1)\n// WARNING: Removing unreachable block (ram,0x00516fdc)\n// WARNING: Removing unreachable block (ram,0x00516f9f)\n// WARNING: Removing unreachable block (ram,0x00516f73)\n// WARNING: Removing unreachable block (ram,0x00516772)\n// WARNING: Removing unreachable block (ram,0x00516752)\n// WARNING: Removing unreachable block (ram,0x005167a7)\n// WARNING: Removing unreachable block (ram,0x005167cb)\n// WARNING: Removing unreachable block (ram,0x005167bd)\n// WARNING: Removing unreachable block (ram,0x005167d4)\n// WARNING: Removing unreachable block (ram,0x00515f86)\n// WARNING: Removing unreachable block (ram,0x00515e72)\n// WARNING: Removing unreachable block (ram,0x00515e41)\n// WARNING: Removing unreachable block (ram,0x00515e3f)\n// WARNING: Removing unreachable block (ram,0x005161ee)\n// WARNING: Removing unreachable block (ram,0x00516af1)\n// WARNING: Removing unreachable block (ram,0x0051676d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00514660(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    bool bVar10;\n    int64_t iVar11;\n    ulong uVar12;\n    uint *arg_8h;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint32_t var_3fch;\n    uint32_t var_3f8h;\n    uint32_t var_3f4h;\n    uint32_t var_3f0h;\n    uint32_t var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    int32_t var_3dch;\n    uint32_t var_3d8h;\n    uint32_t var_3d4h;\n    int32_t var_3d0h;\n    uint var_3cch;\n    uint32_t var_3c8h;\n    uint var_3c4h;\n    int32_t var_3c0h;\n    int32_t var_3bch;\n    int32_t var_3b8h;\n    uint var_3b4h;\n    int32_t var_3b0h;\n    uint var_3ach;\n    uint32_t var_3a8h;\n    uint32_t var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t var_39ch;\n    uint32_t var_398h;\n    uint32_t var_394h;\n    int32_t var_390h;\n    uint32_t var_38ch;\n    int32_t var_388h;\n    uint32_t var_384h;\n    uint32_t var_380h;\n    uint32_t var_37ch;\n    uint var_378h;\n    uint32_t var_374h;\n    int32_t var_370h;\n    uint32_t var_36ch;\n    int32_t var_368h;\n    uint32_t var_364h;\n    uint32_t var_360h;\n    uint32_t var_35ch;\n    int32_t var_358h;\n    uint32_t var_354h;\n    int32_t var_350h;\n    uint32_t var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    uint var_340h;\n    uint32_t var_33ch;\n    int32_t var_338h;\n    uint bRevert;\n    uint var_330h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint32_t var_31ch;\n    int32_t var_318h;\n    int32_t var_314h;\n    uint var_308h;\n    uint var_304h;\n    uint32_t var_300h;\n    uint var_2fch;\n    uint32_t var_2f8h;\n    uint32_t var_2f4h;\n    uint32_t var_2f0h;\n    int32_t var_2ech;\n    uint32_t var_2e8h;\n    uint32_t var_2e4h;\n    uint32_t var_2e0h;\n    uint32_t var_2dch;\n    uint32_t var_2d8h;\n    uint32_t var_2d4h;\n    uint32_t var_2d0h;\n    int32_t var_2cch;\n    uint32_t var_2c8h;\n    uint var_2c4h;\n    uint32_t var_2c0h;\n    uint var_2bch;\n    int32_t var_2b8h;\n    int32_t var_2b4h;\n    uint32_t var_2b0h;\n    uint32_t var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint32_t var_2a0h;\n    uint32_t var_29ch;\n    uint32_t var_298h;\n    int32_t var_294h;\n    uint32_t var_290h;\n    uint32_t var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint32_t var_27ch;\n    uint var_278h;\n    uint32_t var_274h;\n    int32_t var_270h;\n    uint32_t var_26ch;\n    uint var_268h;\n    uint32_t var_264h;\n    uint32_t var_260h;\n    uint32_t var_25ch;\n    int32_t var_258h;\n    uint32_t var_254h;\n    uint32_t var_250h;\n    uint32_t var_24ch;\n    uint32_t var_248h;\n    uint32_t var_244h;\n    uint32_t var_240h;\n    uint var_23ch;\n    int32_t var_238h;\n    uint *lpProcName;\n    uint32_t var_230h;\n    int32_t var_22ch;\n    uint32_t var_228h;\n    uint var_224h;\n    uint var_218h;\n    uint var_214h;\n    uint32_t var_210h;\n    uint32_t var_20ch;\n    uint32_t var_208h;\n    uint32_t var_204h;\n    uint32_t var_200h;\n    uint32_t var_1fch;\n    uint32_t var_1f8h;\n    uint32_t var_1f4h;\n    uint32_t var_1f0h;\n    uint var_1ech;\n    uint32_t var_1e8h;\n    uint32_t var_1e4h;\n    uint32_t var_1e0h;\n    uint32_t var_1dch;\n    uint32_t var_1d8h;\n    uint32_t var_1cch;\n    uint32_t var_1c8h;\n    uint32_t var_1c4h;\n    uint32_t var_1c0h;\n    uint32_t var_1bch;\n    uint32_t var_1b8h;\n    uint32_t var_1b4h;\n    uint32_t var_1b0h;\n    uint32_t var_1ach;\n    uint hModule;\n    uint32_t var_1a4h;\n    uint32_t var_1a0h;\n    uint32_t var_19ch;\n    uint32_t var_198h;\n    uint32_t var_194h;\n    uint32_t var_190h;\n    uint var_18ch;\n    uint32_t var_188h;\n    uint32_t var_184h;\n    uint32_t var_180h;\n    int32_t var_17ch;\n    uint32_t var_178h;\n    int32_t var_174h;\n    uint32_t var_170h;\n    uint var_16ch;\n    uint32_t var_168h;\n    uint var_164h;\n    uint32_t var_160h;\n    int32_t var_15ch;\n    int32_t var_158h;\n    int32_t var_154h;\n    int32_t var_150h;\n    uint32_t var_14ch;\n    uint32_t var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint32_t var_13ch;\n    uint32_t var_138h;\n    uint32_t var_134h;\n    uint32_t var_130h;\n    uint32_t var_12ch;\n    int32_t var_128h;\n    int32_t var_124h;\n    int32_t var_120h;\n    uint var_11ch;\n    uint32_t var_118h;\n    uint32_t var_114h;\n    uint32_t var_110h;\n    int32_t hWnd;\n    uint32_t var_108h;\n    uint32_t var_104h;\n    uint32_t var_100h;\n    uint32_t var_fch;\n    uint32_t var_f8h;\n    uint32_t var_f4h;\n    uint32_t var_f0h;\n    int32_t var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    uint32_t var_c8h;\n    int32_t var_c4h;\n    int32_t var_bdh;\n    int32_t var_b8h;\n    int32_t var_b4h;\n    int32_t var_b0h;\n    uint var_ach;\n    uint32_t var_a8h;\n    int32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint32_t var_8bh;\n    uint32_t var_84h;\n    int32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t CodePage;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint8_t var_28h;\n    uint8_t var_27h;\n    uint var_26h;\n    uint var_38h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    uint8_t var_22h;\n    uint var_21h;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    var_388h = *0x55b8c4;\n    var_38ch = *0x55b8c0;\n    var_26h._0_1_ = 'T';\n    CodePage = 0x1e57;\n    var_48h._0_2_ = 0x1e;\n    var_21h._0_1_ = *0x55b968;\n    var_27h = *0x55b8e7;\n    var_44h = *0x55b948;\n    var_3ch._0_2_ = *0x55b928;\n    var_58h = *0x55b8e8 >> 0x1f;\n    var_5ch = *0x55b8e8;\n    var_26h._1_1_ = *0x55b8ec;\n    var_22h = 0x54;\n    var_6ch = 0x6761484a;\n    var_68h = 0xb303a;\n    var_26h._3_1_ = *0x55b914;\n    var_26h._2_1_ = 0x1d;\n    var_40h._0_2_ = 0x5258;\n    var_28h = *0x55b930;\n    var_50h = 0xdb8c;\n    var_4ch = 0;\n    var_2ch._0_2_ = *0x55b910;\n    var_30h._0_2_ = 0xe50e;\n    var_38h._0_2_ = -0x76e7;\n    var_31h = 0x5c;\n    var_8bh._0_1_ = 0x42;\n    var_bdh._0_1_ = 0x6c;\n    var_390h = *0x55b8f4;\n    var_330h._0_2_ = *0x55b8f0;\n    var_394h = *0x55b948;\n    var_288h._0_2_ = 0xe6b0;\n    var_98h._0_1_ = 0x56;\n    var_398h = *0x55b8dc;\n    var_39ch = *0x55b8d8;\n    var_3a0h = *0x55b8d3;\n    var_98h._1_1_ = *0x55b8ce;\n    var_3a4h = *0x55b8cc;\n    var_3a8h = *0x55b8cc;\n    var_3ach = 0x320ea7ed;\n    var_98h._2_1_ = 0x56;\n    var_32ch._0_2_ = *0x55b8d4;\n    var_98h._3_1_ = *0x55b90c;\n    var_3b0h = *0x55b8c4;\n    var_328h._0_2_ = *0x55b8c0;\n    var_324h._0_2_ = 0x847a;\n    var_3b4h = 0x2bd6f01c;\n    var_320h._0_2_ = 0x4b7b;\n    var_1e0h = *0x55b8e7 + *0x55b8cf == 0;\n    var_9ch = *0x64ead8;\n    var_124h = *0x64ead8 + 0x1f9;\n    var_64h = *0x64ead0;\n    var_60h = *0x64ead4;\n    var_7ch = *0x55b8e7 + 0x41dbU & *0x55b920 * 0x91;\n    var_78h = 0;\n    var_120h = *0x64ead8 + 0x1db;\n    var_344h = 0x54;\n    var_340h = 0;\n    var_34ch = *0x55b970;\n    var_348h = *0x55b974;\n    if ((*0x55b974 < 1) && ((*0x55b974 < 0 || (*0x55b970 < 0x55)))) {\n        var_35ch = *0x55b8e3;\n        var_358h = var_35ch >> 0x1f;\n        var_354h = *0x55b970;\n        var_350h = *0x55b974;\n        if ((*0x55b974 < var_358h) || ((*0x55b974 <= var_358h && (*0x55b970 < var_35ch)))) {\n            var_38h._0_2_ = *0x55b948 + 0x1232;\n            *0x55b8c8 = *0x55b8ce >> 5;\n        }\n        else {\n            var_31h = *0x55b910 >> 6;\n        }\n    }\n    else {\n        var_364h = ~*0x55b8d8;\n        var_360h = ~*0x55b8dc;\n        var_36ch = *0x55b8e8;\n        var_368h = var_58h;\n        if ((var_58h <= var_360h) && ((var_58h < var_360h || (*0x55b8e8 <= var_364h)))) {\n            *0x55b950 = *0x55b8cf + 0x345eaf6e;\n            *0x55b954 = *0x55b950 >> 0x1f;\n        }\n    }\n    var_128h = *0x64ead8 + 0x3a6;\n    uVar3 = 0x54;\n    if (0x1e < *0x55b910) {\n        if (*0x55b8e7 == 0) {\n            var_374h = *0x55b8e8;\n            var_37ch = *0x55b8ec;\n            var_378h = 0;\n            var_370h = var_58h;\n            uVar3 = var_344h;\n            if ((var_58h < 1) && ((var_58h < 0 || (*0x55b8e8 < *0x55b8ec)))) {\n                var_44h = *0x55b960 + 0xfa7b3eda;\n                if (*0x55b914 == 0) {\n                    var_74h._3_1_ = 0x54;\n                }\n                else {\n                    var_74h._3_1_ = *0x55b8ec;\n                }\n                *0x55b96c = var_74h._3_1_;\n            }\n        }\n        else {\n            var_344h = 0x54;\n            *0x55b910 = (*_sym.imp.USER32.dll_OpenIcon)(*0x55b924);\n            var_c8h = -1 < *0x55b910;\n            var_cch = 3 < *0x55b910;\n            if (var_c8h == var_cch) {\n                if ((var_64h | var_60h) == 0) {\n                    var_d0h = var_44h;\n                }\n                else {\n                    var_d0h = *0x55b8e6;\n                }\n                var_50h = var_d0h;\n                var_4ch = 0;\n                fcn.005481e0();\n                uVar3 = var_344h;\n            }\n            else {\n                uVar3 = var_344h;\n                if (*0x55b8e3 != '\\0') {\n                    *0x55b8d8 = 0x4d590198;\n                    *0x55b8dc = 0;\n                    var_26h._0_1_ = var_26h + -0x51 + *0x55b92c;\n                }\n            }\n        }\n    }\n    var_344h = uVar3;\n    var_a0h = *0x64ead8;\n    var_48h._0_2_ = 1;\n    var_154h = *0x64ead8 + 0xe0;\n    var_314h = *0x64ead8 + 0x3c2;\n    var_d4h = var_26h._3_1_ + 0x6bcU == var_21h;\n    *0x55b928 = var_d4h;\n    var_50h = var_44h ^ 0x3d;\n    var_4ch = 0;\n    var_5ch = var_6ch;\n    var_58h = var_68h;\n    var_3b8h = *0x64ead8 + 0x47b;\n    var_d8h = var_22h == var_26h;\n    var_1dch = var_22h == 0x16;\n    if (var_d8h == var_1dch) {\n        var_dch = CodePage == 0;\n        var_e0h = *0x55b924 <= var_dch;\n        var_e4h = *0x55b924 == *0x55b8ce;\n        if (var_e4h <= var_e0h) {\n            var_26h._1_1_ = ~*0x55b8ec * ~*0x55b8e4;\n            if (var_26h._3_1_ == '\\0') {\n                var_e8h = 0;\n            }\n            else {\n                var_e8h = var_22h;\n            }\n            var_40h._0_2_ = var_e8h;\n            *0x55b96c = *0x55b8e3 + 0x7caa;\n        }\n    }\n    else {\n        *0x55b8cf = fcn.00511470(0, 0, 0xca, 0xd4, var_38h);\n        if (*0x55b8cf == '\\0') {\n            uVar7 = (*0x55b968 ^ *0x55b908) + *0x55b924 * *0x55b8e7;\n            uVar8 = var_2ch - *0x55b8e2 ^ *0x55b940 ^ 0xe3;\n            var_384h = uVar7 + uVar8;\n            var_380h = (uVar7 >> 0x1f) + (var_2ch - *0x55b8e2 >> 0x1f ^ *0x55b944) + CARRY4(uVar7, uVar8);\n            *0x55b8e6 = (var_384h | var_380h) == 0;\n            CodePage = *0x64ead8;\n            var_74h._2_1_ = *0x55b8e6;\n        }\n        else {\n            *0x55b8e8 = var_28h * *0x55b8e8 + *0x55b8e8;\n            var_22h = *0x55b8d3 << 2;\n        }\n    }\n    var_a8h = *0x64ead8;\n    if (var_38h < var_40h) {\n        var_244h = *0x55b8e6;\n        var_240h = var_244h >> 0x1f;\n        var_24ch = var_5ch;\n        var_248h = var_58h;\n        if ((var_244h == var_5ch) && (var_240h == var_58h)) {\n            if ((*0x55b8d3 == 0) || (var_21h == 0)) {\n                _var_1f8h = 0;\n            }\n            else {\n                _var_1f8h = 1;\n            }\n            if ((var_1f4h < 0xeba8d) && ((var_1f4h < 0xeba8c || (var_1f8h < 0x929df393)))) {\n                var_ech = 1;\n            }\n            else {\n                var_ech = 0;\n            }\n            if (var_ech != -1) {\n                bVar10 = CARRY4(var_50h, var_64h);\n                bVar9 = CARRY4(var_50h + var_64h, var_64h);\n                var_64h = var_50h + var_64h + var_64h;\n                var_60h = var_4ch + var_60h * 2 + bVar10 + bVar9;\n                var_30h._0_2_ = var_30h | var_30h * *0x55b94c;\n            }\n        }\n        else {\n            *0x55b96c = *0x55b96c + *0x55b968;\n        }\n    }\n    else if ((var_48h != 0) || (var_22h != 0xffffffff)) {\n        var_254h = *0x55b8c0 - *0x55b8e4;\n        var_250h = *0x55b8c4 - (*0x55b8c0 < *0x55b8e4);\n        bVar10 = (var_254h | var_250h) == 0;\n        var_f0h = bVar10;\n        var_40h._0_2_ = -0x5029 - bVar10;\n        var_3bch = var_4ch;\n        var_2ch._0_2_ = var_50h + 0x684a;\n    }\n    var_15ch = *0x64ead8 + 0x459;\n    var_2ch._0_2_ = var_2ch * *0x55b8e6 * 0x281c;\n    var_3c0h = *0x64ead8 + 0x24d;\n    var_a4h = 0x19;\n    var_44h = CodePage;\n    *0x55b914 = *0x64ead8;\n    var_f4h = var_28h == 0;\n    *0x55b8d8 = ((var_26h._1_1_ - *0x55b908) - (*0x55b8cb ^ *0x55b8e6)) -\n                ~((*0x55b8e4 ^ var_f4h) + (*0x55b8e4 | var_26h._2_1_));\n    *0x55b8dc = *0x55b8d8 >> 0x1f;\n    do {\n        var_50h = 5;\n        var_4ch = 0;\n        var_26h._3_1_ = var_26h._3_1_ + '\\x01';\n        *0x55b918 = 0xe18df8a7;\n        *0x55b91c = 0xc5fe;\n        var_a4h = var_a4h + 1;\n    } while (var_a4h < 0x1edb);\n    var_158h = *0x64ead8 + 0x35d;\n    _var_228h = ~*0x55b8e7 != *0x55b8cb;\n    var_25ch = *0x55b970;\n    var_258h = *0x55b974;\n    if ((-1 < *0x55b974) && ((0 < *0x55b974 || (var_228h = ~*0x55b8e7 != *0x55b8cb,  var_228h <= *0x55b970)))) {\n        var_f8h = var_26h == '\\0';\n        var_fch = var_f8h != CodePage;\n        var_100h = var_26h < ~var_30h;\n        if (var_fch == var_100h) {\n            var_44h = (*_sym.imp.USER32.dll_IsZoomed)(*0x55b8e7);\n            goto code_r0x00515399;\n        }\n    }\n    var_108h = *0x55b92c == *0x55b94c;\n    var_104h = var_26h._2_1_ < *0x55b924;\n    if (var_108h < ~var_104h) {\n        *0x55b8e3 = *0x64ead8 + -0x80;\n        *0x55b8d3 = 0xf9;\n    }\n    else if (var_21h * CodePage == 0) {\n        if (var_3ch != 0) {\n            var_48h._0_2_ = 0xacd6;\n            *0x55b8cf = *0x55b928 + CodePage + *0x64ead8 * *0x55b8e8;\n        }\n    }\n    else {\n        var_3c4h = 0;\n        *0x55b8d3 = ~var_26h._1_1_ * var_26h._3_1_ + '\\x05' + (*0x55b8e7 ^ var_2ch - var_26h._2_1_);\n    }\ncode_r0x00515399:\n    var_10h._0_1_ = 0x37;\n    var_10h._1_1_ = 0x59;\n    var_10h._2_1_ = 0x5d;\n    var_10h._3_1_ = 0x49;\n    var_ch = 0x45;\n    var_bh = 0x4d;\n    var_ah = 0x27;\n    var_9h = 0x4b;\n    var_8h = 0x54;\n    var_7h = 0x56;\n    var_6h = 0x39;\n    var_5h = 0;\n    if (*0x55b908 == 0) {\n        var_230h = var_22h;\n        var_22ch = 0;\n    }\n    else {\n        var_230h = *0x55b8f0;\n        var_22ch = *0x55b8f4;\n    }\n    *0x55b8e0 = var_230h;\n    uVar1 = *0x55b8cc;\n    uVar2 = var_40h ^ var_31h;\n    cVar4 = fcn.00548310(*0x55b930, *0x55b934, 0, 0);\n    var_3c8h = var_4ch;\n    var_22h = ~(((uVar1 & 0x1d) - uVar2) + (cVar4 - (var_50h - var_38h)));\n    var_70h = 0;\n    for (var_84h = 0; var_84h < 0xb; var_84h = var_84h + 1) {\n        iVar6 = fcn.00548310(*0x55b950, 0x5ff5d743, 0);\n        *0x55b92c = *0x55b92c + iVar6;\n        iVar11 = *0x55b950;\n        while( true ) {\n            *0x55b8ce = -0x49;\n            *0x55b950 = iVar11;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(*0x55b8ec);\n            if ((*0x55b8e6 != var_26h + 0x5bde988f) || (*0x55b8e6 + var_26h != 1)) break;\n            hWnd = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar11 = *0x55b950;\n            if (hWnd != 0) {\n                bRevert = 1;\n                var_3cch = (*_sym.imp.USER32.dll_GetSystemMenu)(hWnd, 1);\n                iVar11 = *0x55b950;\n            }\n            *0x55b950 = iVar11;\n            if (var_26h._3_1_ == '\\0') {\n                if (*0x55b948 != 0) {\n                    *0x55b8e3 = var_22h << 1;\n                    var_28h = var_28h + *0x55b8e7;\n                    var_44h = fcn.00548310();\n                    iVar11 = *0x55b950;\n                }\n            }\n            else if (*0x55b910 == 0) {\n                var_264h = *0x55b8d8;\n                var_260h = *0x55b8dc;\n                var_110h = (*0x55b8d8 | *0x55b8dc) == 0;\n                if (*0x55b8d4 < var_110h) {\n                    if (var_26h._3_1_ != '\\0') {\n                        *0x55b92c = var_40h << 2;\n                        iVar11 = fcn.00548310(*0x55b970, *0x55b974, 0x5ad38f24, 0);\n                    }\n                }\n                else {\n                    var_6ch = var_38h << 6;\n                    var_68h = var_6ch >> 0x1f;\n                    var_48h._0_2_ = *0x55b8ec * -0x7f9a;\n                }\n            }\n            else {\n                *0x55b8ec = var_64h - *0x55b920;\n                *0x55b948 = *0x55b914 + 0x325b90db;\n            }\n        }\n        while( true ) {\n            *0x55b960 = 0xeec;\n            *0x55b964 = 0;\n            var_26ch = *0x55b8cb;\n            var_268h = 0;\n            var_274h = *0x55b8f0;\n            var_270h = *0x55b8f4;\n            if (((*0x55b8f4 < 0) || ((*0x55b8f4 < 1 && (*0x55b8f0 < var_26ch)))) && (*0x55b8d2 != var_22h)) {\n                *0x55b8ca = var_38h;\n            }\n            var_27ch = *0x55b8cb;\n            var_31ch = CodePage + 0xeec;\n            var_318h = (CodePage >> 0x1f) + (0xfffff113 < CodePage);\n            var_278h = 0;\n            if ((var_27ch != var_31ch) || (var_318h != 0)) break;\n            *0x55b970 = 0x1d34;\n            *0x55b974 = 0;\n            *0x55b8cb = var_26h._1_1_ + *0x55b910;\n            var_40h._0_2_ = (*_sym.imp.USER32.dll_GetCapture)();\n            if (*0x55b968 != var_27h + 0x8b8fee59) break;\n            var_38h._0_2_ = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"ntdll\");\n        }\n        var_26h._0_1_ = fcn.00512290(0x28, 0);\n        if (var_26h != '\\0') {\n            var_21h._0_1_ = *0x55b8e7 * -0x4f;\n            *0x55b8e4 = *0x55b8e4 & *0x55b8e4 * *0x55b8e8;\n        }\n        var_70h = *(&var_10h + var_84h);\n        var_21h._0_1_ = fcn.00512f40(0xc9, 0, 0, 0, *0x55b8d3, 0, *0x55b8cc, 0, 0x98, 0);\n        *0x55b8e0 = fcn.005103a0(0, 0x1d);\n        if (*0x55b8e0 == 0) {\n            if (var_3ch == 0) {\n                if ((var_30h == 0xffffffff) && (var_40h == -1)) {\n                    if (var_30h <= ~var_38h) {\n                        var_21h._0_1_ = var_21h - 1;\n                    }\n                }\n                else {\n                    *0x55b920 = *0x55b90a - 0x4e;\n                    *0x55b914 = 0x66195af2;\n                }\n            }\n            else {\n                var_21h._0_1_ = 1;\n                *0x55b910 = *0x55b8cc + 0x1dc6;\n                if (var_28h == 0) {\n                    var_1e8h = *0x55b940;\n                    var_1e4h = *0x55b944;\n                }\n                else {\n                    var_1e8h = var_38h;\n                    var_1e4h = var_1e8h >> 0x1f;\n                }\n            }\n        }\n        else {\n            var_30h._0_2_ = fcn.005110e0(0);\n            if (var_30h == 0) {\n                *0x55b930 = *0x55b968 + 0xa71e8e0d;\n                *0x55b934 = (*0x55b968 >> 0x1f) + 0xe5ef8 + (0x58e171f2 < *0x55b968);\n            }\n            else if (*0x55b948 < *0x55b8d2) {\n                if ((var_48h == 0) && (var_30h == 0)) {\n                    var_114h = var_22h == 0;\n                    if (var_114h < -0xfbaf) {\n                        bVar10 = (var_6ch | var_68h) == 0;\n                        var_118h = bVar10;\n                        var_26h._0_1_ = *0x55b8e7 * bVar10;\n                    }\n                    else if (*0x55b908 != 0) {\n                        *0x55b8d2 = -var_26h._3_1_;\n                    }\n                }\n                else {\n                    var_26h._1_1_ = var_2ch + 0x58;\n                }\n            }\n            else {\n                *0x55b90a = *0x55b90a + *0x55b90a * var_38h;\n                var_6ch = CodePage + 0x2cb0c4c5;\n                var_68h = var_6ch >> 0x1f;\n            }\n        }\n        var_26h._2_1_ = *0x55b90a;\n        var_12ch = *0x55b920 != var_26h._3_1_;\n        var_290h = ~var_50h;\n        var_28ch = ~var_4ch;\n        var_298h = var_26h._3_1_;\n        var_294h = var_298h >> 0x1f;\n        if ((var_294h < var_28ch) || ((var_294h <= var_28ch && (var_298h < var_290h)))) {\n            var_130h = 0;\n        }\n        else {\n            var_130h = 1;\n        }\n        if (var_12ch == var_130h) {\n            if (var_28h == 0) {\n                var_26h._3_1_ = var_26h._3_1_ * -0x42;\n            }\n            else {\n                *0x55b930 = 0x2dcf7783;\n                *0x55b934 = 0;\n                var_21h._0_1_ = var_21h << (var_21h - *0x55b90a & 0x1f);\n            }\n        }\n        else {\n            var_28h = 3;\n            *0x55b958 = *0x55b930 + 0x9143;\n            *0x55b95c = *0x55b934 + (0xffff6ebc < *0x55b930);\n        }\n        var_70h = var_70h + (0x3a7U - var_120h ^ 0x3a7U - var_120h) + 0x10 + var_84h;\n        *0x55b8ec = fcn.005103a0(0, 0x87);\n        if (*0x55b8ec == 0) {\n            _var_1f0h = var_31h == 0;\n            var_2a0h = ~var_7ch;\n            var_29ch = ~var_78h;\n            if ((var_29ch < 1) && ((-1 < var_78h || (var_1f0h = var_31h == 0,  var_2a0h <= var_1f0h)))) {\n                var_134h = 1;\n            }\n            else {\n                var_134h = 0;\n            }\n            var_138h = *0x55b8e8 < ~var_44h;\n            if (var_134h < var_138h) {\n                if ((var_64h | var_60h) == 0) {\n                    if (var_48h < var_26h._1_1_) {\n                        var_3d4h = var_58h;\n                        var_27h = var_5ch;\n                        *0x55b92c = *0x55b92c * *0x55b92c;\n                        *0x55b8ca = *0x55b8ca + *0x55b8d3;\n                    }\n                }\n                else {\n                    *0x55b8ca = *0x55b8ca + var_22h;\n                    var_26h._2_1_ = var_2ch + 0xf;\n                    _var_2a8h = *0x55b950 + *0x55b8ce;\n                    *0x55b8cb = _var_2a8h == 0;\n                    var_74h._1_1_ = *0x55b8cb;\n                }\n            }\n            else {\n                var_3d0h = *0x55b974;\n                *0x55b8e2 = *0x55b8e2 * '\\x02' - *0x55b970;\n                var_44h = *0x55b8e7 * var_44h + var_44h;\n                var_28h = var_28h & var_28h - var_27h;\n            }\n        }\n        var_38h._0_2_ = var_3ch + -0x6c43;\n        var_70h = (var_70h ^ var_84h) + var_84h;\n        *0x55b8d3 = 2;\n        var_3d8h = var_58h;\n        var_48h._0_2_ = var_5ch;\n        var_ach._0_1_ = 2;\n        var_22h = *0x55b928 << 7;\n        *(&var_10h + var_84h) = var_70h;\n    }\n    bVar10 = CARRY4(var_6ch, *0x64ead8);\n    var_6ch = var_6ch + *0x64ead8;\n    var_68h = var_68h + *0x64eadc + bVar10;\n    *0x55b914 = var_30h ^ *0x55b970;\n    var_13ch = var_30h == 0;\n    uVar8 = *0x55b90c + ~var_7ch;\n    uVar7 = var_2ch * var_13ch;\n    var_2b0h = uVar8 - uVar7 ^ var_64h;\n    var_2ach = (((*0x55b90c >> 0x1f) + ~var_78h + CARRY4(*0x55b90c, ~var_7ch)) - (uVar7 >> 0x1f)) - (uVar8 < uVar7) ^\n               var_60h;\n    var_74h._0_1_ = (var_2b0h | var_2ach) == 0;\n    var_140h = 0xb;\n    var_3dch = *0x55b974;\n    var_5h = 0;\n    var_21h._0_1_ = var_74h;\n    var_64h = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(CodePage);\n    iVar11 = CONCAT44(*0x55b93c, *0x55b938);\n    var_60h = 0;\n    var_21h._1_1_ = 0xa0;\n    var_21h._2_1_ = 0x92;\n    var_21h._3_1_ = 0x9e;\n    var_1dh = 0xa1;\n    var_1ch = 0xa1;\n    var_1bh = 0xae;\n    var_1ah = 0x9c;\n    var_19h = 0xc1;\n    var_18h = 0xa4;\n    var_17h = 0xa0;\n    var_16h = 0xa8;\n    var_15h = 0xb8;\n    var_14h = 0xb7;\n    var_13h = 0xab;\n    var_12h = 0;\n    *0x55b948 = *0x64ead8;\n    var_26h._0_1_ = *0x6240b8;\n    var_3ch._0_2_ = var_3ch - (var_27h + 0xda97);\n    var_80h = 0;\n    for (stack0xffffff74 = 0; *0x55b938 = iVar11,  stack0xffffff74 < 0xe; *0x8 = stack0xffffff74 + 1) {\n        if (*0x55b8e7 == *0x55b8cb) {\n            var_31h = var_31h * '\\x02' + *0x55b8e2;\n            *0x55b8e0 = iVar11 + 0x8ae7;\n        }\n        else {\n            if (*0x55b968 != 0) {\n                var_2ch._0_2_ = 4;\n                *0x55b948 = var_21h;\n                var_26h._1_1_ = *0x64ead8;\n                var_144h = 4;\n    // WARNING: Could not recover jumptable at 0x005160a2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x517678\n                (**0x517688)();\n                return;\n            }\n            var_148h = var_38h == 0;\n            if (*0x55b928 < var_148h) {\n                iVar11 = var_30h + 0x40256552;\n                var_3e8h = var_4ch;\n                var_44h = var_44h - var_50h;\n                *0x55b8d4 = *0x55b8d4 * *0x55b8d4 * var_31h;\n            }\n        }\n        while( true ) {\n            *0x55b8e6 = -0x71;\n            for (var_c4h = 0; cVar4 = CodePage,  var_c4h < 0x6b; var_c4h = var_c4h + 1) {\n                var_27h = *0x55b90a;\n                *0x55b8d2 = cVar4 - 6;\n                *0x55b8cc = *0x55b8cc + 1;\n            }\n            if (*0x55b92c != var_26h + 0xb7U) break;\n            var_2b8h = var_48h + *0x55b958;\n            var_2b4h = *0x55b95c + CARRY4(var_48h, *0x55b958);\n            if ((var_2b8h != 1) || (var_2b4h != 0)) break;\n            var_30h._0_2_ = var_30h + (var_26h & 0x5dU);\n            *0x55b8ca = *0x55b8ca * '\\x02' + cVar4;\n            var_22h = var_22h - 1;\n        }\n        *0x55b970 = 0x11;\n        *0x55b974 = 0;\n        var_26h._1_1_ = var_26h._1_1_ - var_26h._1_1_ * cVar4;\n        for (var_b0h = 0x204; 0x182 < var_b0h; var_b0h = var_b0h + -1) {\n            *0x55b8e0 = 1;\n            iVar6 = var_26h;\n            var_50h = iVar6 * 0xc0c2;\n            var_4ch = iVar6 / 0xa9ff + (iVar6 >> 0x1f);\n            var_2ch._0_2_ = 0;\n            var_14ch = (*0x55b940 | *0x55b944) == 0;\n            bVar10 = *0x55b8e3 + var_14ch == 0;\n            _var_218h = bVar10;\n            *0x55b938 = iVar11;\n            uVar12 = fcn.00548310(~*0x55b8d0 ^ var_6ch, ~*0x55b8d0 >> 0x1f ^ var_68h, bVar10, 0);\n            uVar8 = var_26h ^ *0x55b940;\n            uVar7 = var_28h * ~var_21h;\n            iVar11 = fcn.00548310(uVar12, uVar8 - uVar7, \n                                  ((var_26h >> 0x1f ^ *0x55b944) - (uVar7 >> 0x1f)) - (uVar8 < uVar7));\n            var_150h = *0x55b8e0;\n            if (var_150h == 0) {\n                var_50h = *0x55b92c + 0x7a;\n                var_4ch = var_50h >> 0x1f;\n                *0x55b938 = iVar11;\n                var_26h._1_1_ = fcn.00548310(var_3ch, 0, 0x98b5e596, 0x358ec);\n                *0x55b910 = *0x55b8e7 * 0x55;\n                iVar11 = *0x55b938;\n            }\n            else if (var_150h == 1) {\n                *0x55b94c = var_30h + 0xf0f;\n                *0x55b8ce = var_40h + -7;\n            }\n        }\n        var_2ch._0_2_ = *0x55b90c << 5;\n        if ((*0x55b960 | *0x55b964) == 0) {\n            var_210h = var_6ch;\n            var_20ch = var_68h;\n        }\n        else {\n            var_210h = *0x55b908;\n            var_20ch = 0;\n        }\n        var_26h._3_1_ = var_210h;\n        if (*0x55b920 < var_22h) {\n            var_26h._0_1_ = *0x55b92c + -0x70;\n            *0x55b8e2 = 0xe0;\n        }\n        *0x55b90a = (*0x55b90c << 5) - 0x38;\n        uVar7 = var_210h;\n        bVar10 = CARRY4(var_7ch, uVar7);\n        var_7ch = var_7ch + uVar7;\n        var_78h = var_78h + (uVar7 >> 0x1f) + bVar10;\n        var_80h = ((*(&var_21h + stack0xffffff74 + 1) - stack0xffffff74) + 1 ^ 0xb1) - 0xba;\n        bVar10 = *0x55b8cc + var_22h + var_28h == 0;\n        _var_2c0h = bVar10;\n        var_2c0h = bVar10;\n        *0x55b8ec = var_2c0h - ((*0x55b910 ^ 0xffff726bU) + *0x55b910 + *0x55b960);\n        *(&var_21h + stack0xffffff74 + 1) = var_80h;\n    }\n    *0x55b8ca = 0x31;\n    *0x55b968 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n    if (*0x55b968 == 0) {\n        *0x55b958 = 2;\n        *0x55b95c = 0;\n        *0x55b918 = var_26h._2_1_ & 0x84e9;\n        *0x55b91c = 0;\n        var_94h = 2;\n        var_90h = 0;\n        var_3ch._0_2_ =\n             fcn.00548310(*0x55b910, *0x55b910 >> 0x1f, ~*0x55b940 & var_26h + ~var_3ch, \n                          ~*0x55b944 & var_26h + ~var_3ch >> 0x1f);\n        var_3ch._0_2_ = ~var_3ch;\n        *0x55b8cb = *0x55b8d3 + 0x32;\n    }\n    else if (~*0x55b8ce <= *0x55b968) {\n        *0x55b8d0 = 1;\n    }\n    var_2c8h = *0x55b8ca;\n    uVar7 = var_26h;\n    var_2d0h = uVar7 + 0xe5ba7731;\n    var_2cch = (uVar7 >> 0x1f) + 0xfa517 + (0x1a4588ce < uVar7);\n    var_2c4h = 0;\n    if (((var_2c8h == var_2d0h) && (var_2cch == 0)) && (*0x55b8e7 == var_27h + 0x4d96ea72)) {\n        var_2ch._0_2_ = *0x55b914 + 0x480c;\n        var_31h = var_2ch + 0x52;\n        for (var_b4h = 0x165d; 0x15c1 < var_b4h; var_b4h = var_b4h + -1) {\n        }\n    }\n    *0x55b8ca = 0x31;\n    var_3f0h = var_58h;\n    var_27h = ~(~var_5ch ^ var_44h);\n    var_160h = (*0x55b960 | *0x55b964) == 0;\n    uVar7 = ~(*0x55b948 - *0x55b8e4);\n    uVar12 = fcn.00548310(*0x55b8d3 * var_160h, 0, var_5ch, var_58h);\n    *0x55b970 = uVar7 - uVar12;\n    *0x55b974 = ((uVar7 >> 0x1f) - (uVar12 >> 0x20)) - (uVar7 < uVar12);\n    if (((var_7ch | var_78h) == 0) && (*0x55b914 != 0)) {\n        _var_208h = 1;\n    }\n    else {\n        _var_208h = 0;\n    }\n    if ((var_204h < 0x5530c) && ((var_204h < 0x5530b || (var_208h < 0x42715bd3)))) {\n        var_2dch = CodePage >> 0x1f;\n        var_2e0h = CodePage;\n        if ((*0x55b964 < var_2dch) || ((*0x55b964 <= var_2dch && (*0x55b960 < CodePage)))) {\n            var_164h = 0;\n        }\n        else {\n            var_164h = 1;\n        }\n        var_168h = CodePage < 8;\n    }\n    else {\n        var_2e8h = *0x55b970 | *0x55b8c8;\n        var_2e4h = *0x55b974 | *0x55b8c8 >> 0x1f;\n        if ((var_2e8h | var_2e4h) != 0) {\n            *0x55b90a = *0x64ead8;\n            var_27h = var_38h * '\\'';\n            *0x55b8cf = '$';\n        }\n    }\n    var_16ch = 0xe;\n    var_2d4h = var_78h;\n    var_2d8h = var_7ch;\n    var_12h = 0;\n    var_2ch._0_2_ = *0x55b8d0 + 0x34;\n    hModule = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    *0x55b920 = 1;\n    var_44h = fcn.00548310(var_44h, 0, *0x55b918, *0x55b91c);\n    var_64h = var_40h + 0xdc7d;\n    var_60h = var_64h >> 0x1f;\n    var_170h = *0x55b920;\n    if (var_170h == 0) {\n        *0x642ef0 = CodePage;\n        var_44h = *0x55b958 + 0xaa6c072;\n    }\n    else if (var_170h == 1) {\n        if (*0x55b8cc == 0) {\n            var_200h = *0x55b960;\n            var_1fch = *0x55b964;\n        }\n        else {\n            var_1fch = 0;\n            var_200h = var_44h;\n        }\n        var_40h._0_2_ = var_200h;\n    }\n    lpProcName = &var_10h;\n    if (var_2ch < *0x55b920) {\n        var_50h = *0x55b8d2 + *0x55b920;\n        var_4ch = 0;\n        *0x55b924 = *0x55b924 - *0x624085;\n    }\n    else {\n        var_33ch = ~var_3ch;\n        var_338h = var_33ch >> 0x1f;\n        var_2f0h = *0x55b918;\n        var_2ech = *0x55b91c;\n        if ((*0x55b918 == var_33ch) && (*0x55b91c == var_338h)) {\n            var_174h = 1;\n        }\n        else {\n            var_174h = 0;\n        }\n        if ((var_174h == -1) && (var_2ch < var_21h)) {\n            var_180h = 0;\n        }\n        else {\n            var_180h = 1;\n        }\n        var_178h = *0x55b94c != *0x55b8e2;\n        var_300h = var_48h;\n        var_2f8h = var_50h;\n        var_2f4h = var_4ch;\n        var_2fch = 0;\n        if ((var_4ch < 1) && ((var_4ch < 0 || (var_50h < var_300h)))) {\n            var_17ch = 1;\n        }\n        else {\n            var_17ch = 0;\n        }\n        var_184h = ~var_178h < var_17ch;\n        var_188h = var_180h < var_184h;\n        if (var_188h == 0xffffffff) {\n            var_3f4h = var_4ch;\n            var_31h = var_50h ^ 0x3a;\n            *0x64ecdb = var_2ch;\n            *0x55b950 = *0x55b8e4 + 0x7823fe66;\n        }\n    }\n    *0x64eadc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hModule, lpProcName);\n    *0x57b3e4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, 0x10f3a0);\n    fcn.0051b840(*0x57b3e4, 0x401000, 0x10f3a0);\n    fcn.00513a50(*0x57b3e4, 0x10f3a0, 0x55b8f8, 0x10);\n    for (var_b8h = 0; var_b8h < 0x309; var_b8h = var_b8h + 1) {\n        var_6ch = fcn.00511e00(0x72);\n        var_6ch = var_6ch & 0xffff;\n        var_68h = 0;\n        if (var_6ch == 0) {\n            if (var_26h._3_1_ != -1) {\n                var_2ch._0_2_ = var_2ch * *0x55b910;\n                var_3fch = var_58h;\n                *0x55b8d3 = var_5ch + 0x23;\n            }\n        }\n        else {\n            var_3f8h = var_58h;\n            var_21h._0_1_ = var_21h + (var_21h ^ var_5ch);\n            *0x55b8ec = *0x55b938 + 0x1ddeabc9;\n            for (stack0xffffff40 = 0x390; 0x240 < stack0xffffff40; *NULL = stack0xffffff40 + -1) {\n                var_28h = *0x55b8e3 + -0x38 + (*0x55b920 - var_26h._3_1_);\n            }\n        }\n        *0x55b94c = *0x55b94c + 1;\n    }\n    var_238h = &var_21h + 1;\n    var_190h = var_21h != 0;\n    var_194h = var_22h < 0x30e30ded;\n    var_1a0h = var_194h < var_190h;\n    var_198h = *0x55b920 != *0x55b8d2;\n    var_19ch = *0x55b8c8 == 0x4cc3b1cd;\n    var_1a4h = var_198h <= var_19ch;\n    if (var_1a0h + var_1a4h == 0) {\n        if (*0x55b968 == 0) {\n            if (*0x55b8cf != '\\0') {\n                var_21h._0_1_ = var_21h + 0x54;\n                *0x55b94c = *0x55b94c + var_30h;\n                *0x55b940 = var_30h & *0x55b940;\n                *0x55b944 = 0;\n            }\n        }\n        else {\n            *0x55b8c8 = fcn.00548310(*0x55b970, *0x55b974, 0x36084adb, 0xf625);\n            var_50h = 0x10ba;\n            var_4ch = 0;\n            *0x55b910 = var_2ch + 0x2e;\n        }\n    }\n    else {\n        iVar5 = fcn.00548310(var_40h, var_40h >> 0x1f, *0x55b950);\n        var_40h._0_2_ = var_40h - iVar5;\n        *0x55b96c = *0x55b96c - (var_5ch + -0x41);\n        *0x55b8e8 = ~var_26h._1_1_ + 0x24e7;\n    }\n    *0x62404c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hModule, var_238h);\n    var_1ach = *0x55b8d3 < *0x55b94c;\n    var_1b0h = 0x3a < *0x55b94c;\n    if (var_1ach == var_1b0h) {\n        var_21h._0_1_ = var_21h * var_21h * *0x55b8cf;\n        uVar7 = var_26h;\n        bVar10 = CARRY4(*0x55b970, uVar7);\n        bVar9 = CARRY4(*0x55b970, *0x55b970 + uVar7);\n        *0x55b970 = *0x55b970 + *0x55b970 + uVar7;\n        *0x55b974 = *0x55b974 * 2 + (uVar7 >> 0x1f) + bVar10 + bVar9;\n    }\n    else {\n        uVar7 = ~*0x55b930 + 0xf1a5fa0b;\n        *0x55b8cb = fcn.00548310(*0x55b90a - (-0x6613d378 - *0x55b8d2), 0, *0x55b8d3 + uVar7, \n                                 (~*0x55b934 - (~*0x55b930 < 0xe5a05f5)) + CARRY4(*0x55b8d3, uVar7));\n        *0x55b8cb = ~*0x55b8cb;\n        *0x55b8ec = *0x64ead8;\n        *0x55b8e3 = fcn.00548310(*0x55b94c, 0, 0xfab156d6, 0xbc5c5);\n    }\n    if (((var_64h | var_60h) == 0) && (var_22h != 0)) {\n        *0x55b8e6 = '\\x01';\n        var_27h = fcn.00548310(var_64h, var_60h, 0x1518bd72, 0xb39d6);\n    }\n    var_23ch = 0x40;\n    arg_8h = &var_400h;\n    (**0x62404c)(*0x57b3e4, 0x10f3a0, 0x40);\n    uVar12 = CONCAT44(*0x55b964, *0x55b960);\n    while( true ) {\n        *0x55b920 = 0x8ad6;\n        var_1b4h = *0x55b90c == 0;\n        var_1b8h = *0x55b8cc == 0x136e959c;\n        var_1c0h = (*0x55b8c8 & var_1b4h) == var_1b8h;\n        if ((var_2ch == 0) || (*0x55b8e2 == 0)) {\n            var_1bch = 0;\n        }\n        else {\n            var_1bch = 1;\n        }\n        var_1c4h = *0x55b8d0 <= var_1bch;\n        if (var_1c0h + var_1c4h == 0) {\n            CodePage = (*0x55b96c - *0x55b928) - (var_26h._1_1_ + ~*0x55b958);\n            var_26h._2_1_ = var_26h._2_1_ * '\\x02' + var_3ch;\n            *0x55b8e4 = *0x55b8e4 & *0x55b8e4 - *0x55b92c;\n        }\n        if (*0x55b8d4 != var_21h + 0x8ad6) break;\n        uVar7 = var_40h;\n        *0x55b960 = uVar12;\n        var_44h = fcn.00511470(*0x55b950 & 0xff, uVar7, 0, 0xa8, *0x55b8ce);\n        var_44h = var_44h & 0xff;\n        var_1c8h = var_44h == 0;\n        var_1cch = var_44h == 0x4d;\n        if (var_1c8h != var_1cch) {\n            *0x55b8d0 = *0x55b8e0;\n            var_38h._0_2_ = var_38h + var_44h;\n            var_21h._0_1_ = var_21h ^ *0x57bcae;\n        }\n        var_26h._2_1_ = 0x90;\n        uVar12 = fcn.00548310(uVar7, *0x55b944, *0x55b92c, *0x55b92c >> 0x1f, *0x55b940);\n        if (*0x55b8cc != CodePage + 0x9f) break;\n        var_30h._0_2_ = 1;\n        var_7ch = var_5ch;\n        var_78h = var_58h;\n        var_28h = *0x55b908 * ~var_2ch;\n    }\n    if (*0x55b8e7 == 0) {\n        var_1d8h = var_26h._1_1_;\n    }\n    else {\n        var_1d8h = var_30h;\n    }\n    var_68h = 0;\n    var_6ch = var_1d8h;\n    *0x55b960 = uVar12;\n    fcn.00519070(arg_8h);\n    return;\n}\n",
        "token_count": 16627
    },
    "00517690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00517c79)\n// WARNING: Removing unreachable block (ram,0x00517abd)\n// WARNING: Removing unreachable block (ram,0x00517c74)\n// WARNING: Removing unreachable block (ram,0x00517d3b)\n// WARNING: Removing unreachable block (ram,0x00517d68)\n// WARNING: Removing unreachable block (ram,0x00517d7f)\n// WARNING: Removing unreachable block (ram,0x00517e00)\n// WARNING: Removing unreachable block (ram,0x00517e42)\n// WARNING: Removing unreachable block (ram,0x00517e2e)\n// WARNING: Removing unreachable block (ram,0x00517e4f)\n// WARNING: Removing unreachable block (ram,0x00517dfe)\n// WARNING: Removing unreachable block (ram,0x00517e58)\n// WARNING: Removing unreachable block (ram,0x00517e80)\n// WARNING: Removing unreachable block (ram,0x00517e8e)\n// WARNING: Removing unreachable block (ram,0x00517ac8)\n// WARNING: Removing unreachable block (ram,0x00517af5)\n// WARNING: Removing unreachable block (ram,0x00517aec)\n// WARNING: Removing unreachable block (ram,0x00517afc)\n// WARNING: Removing unreachable block (ram,0x00517b0c)\n// WARNING: Removing unreachable block (ram,0x00517b20)\n// WARNING: Removing unreachable block (ram,0x00517b37)\n// WARNING: Removing unreachable block (ram,0x00517b2e)\n// WARNING: Removing unreachable block (ram,0x00517b3e)\n// WARNING: Removing unreachable block (ram,0x00517b6b)\n// WARNING: Removing unreachable block (ram,0x00517b9b)\n// WARNING: Removing unreachable block (ram,0x00517b73)\n// WARNING: Removing unreachable block (ram,0x00517b47)\n// WARNING: Removing unreachable block (ram,0x00517b07)\n// WARNING: Removing unreachable block (ram,0x00517bc0)\n// WARNING: Removing unreachable block (ram,0x00517bf2)\n// WARNING: Removing unreachable block (ram,0x00517eae)\n// WARNING: Removing unreachable block (ram,0x00517c04)\n// WARNING: Removing unreachable block (ram,0x00517d3d)\n// WARNING: Removing unreachable block (ram,0x00517c14)\n// WARNING: Removing unreachable block (ram,0x00517c21)\n// WARNING: Removing unreachable block (ram,0x00517c6e)\n// WARNING: Removing unreachable block (ram,0x00517ca9)\n// WARNING: Removing unreachable block (ram,0x00517cd4)\n// WARNING: Removing unreachable block (ram,0x00517ccb)\n// WARNING: Removing unreachable block (ram,0x00517cdb)\n\nuint fcn.00517690(void)\n\n{\n    uint uVar1;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_9h;\n    uint var_1h;\n    \n    *0x55b908 = 4;\n    // WARNING: Could not recover jumptable at 0x0051795f. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x517ed8\n    uVar1 = (**0x517ee8)();\n    return uVar1;\n}\n",
        "token_count": 1287
    },
    "00517ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_f8h\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00517ef0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    uchar uVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint8_t uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_3h;\n    \n    iVar10 = *0x55b974;\n    uVar9 = *0x55b970;\n    uVar8 = *0x55b948;\n    uVar7 = *0x55b8f4;\n    iVar6 = *0x55b8e8;\n    iVar5 = *0x55b8e4;\n    uVar12 = *0x55b8d4;\n    uVar4 = *0x55b8d3;\n    iVar3 = *0x55b8d0;\n    uVar2 = *0x55b8c4;\n    uVar1 = *0x55b8c0;\n    uVar11 = *0x55b968;\n    iVar13 = *0x55b8e8 >> 0x1f;\n    var_3h._1_1_ = 'T';\n    *0x55b8d0 = *0x55b8d0 + *0x55b910 * -0x7a08;\n    *0x55b8e4 = *0x55b8e4 + *0x55b8e7;\n    if (((*0x55b968 & 0xff) == 0) && (*0x55b8e4 == -0x8b8)) {\n        var_34h = 0xe;\n        *0x55b8ec = 0x109cd4;\n        do {\n            if (*0x55b8c8 < *0x55b928) {\n                for (var_30h = 0xd01; 0xc1f < var_30h; var_30h = var_30h + -1) {\n                    *0x64ebe8 = 0xe50e;\n                    var_3h._1_1_ = *0x55b970 + '(';\n                }\n            }\n            else {\n                *0x57b4db = *0x55b90c;\n                *0x55b8ca = *0x55b8e2 + '\\x11';\n            }\n            var_34h = var_34h + 1;\n        } while (var_34h < 0xbae);\n    }\n    *0x55b960 = 0x7f;\n    *0x55b964 = 0;\n    bVar14 = *0x55b930 < *0x62407e;\n    *0x55b930 = *0x55b930 - *0x62407e;\n    *0x55b934 = *0x55b934 - bVar14;\n    if ((*0x55b8e7 != '\\0') && ((*0x55b8c0 | *0x55b8c4) != 0)) {\n        for (var_2ch = 0x6d; 0 < var_2ch; var_2ch = var_2ch + -1) {\n            (*_sym.imp.USER32.dll_GetTopWindow)(var_3h._1_1_);\n        }\n    }\n    uVar12 = fcn.00513460(uVar4, 0, iVar5, 0, 0xf7, 0, iVar3, 0, uVar12, 0, 0xa3d9, 0, 0xdb8c, 0, 0x6761484a, 0xb303a, \n                          iVar6, iVar13, uVar7, uVar8, uVar1, uVar2);\n    bVar14 = *0x55b950 < uVar9;\n    *0x55b950 = *0x55b950 - uVar9;\n    *0x55b954 = (*0x55b954 - iVar10) - bVar14;\n    *0x56b66a = uVar11;\n    return uVar12;\n}\n",
        "token_count": 1742
    },
    "00518400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00518d93)\n// WARNING: Removing unreachable block (ram,0x00518de3)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00518400(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t arg_8h;\n    bool bVar8;\n    float10 fVar9;\n    uint var_1b8h;\n    uint32_t var_1b4h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint lpRect;\n    uint bErase;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint var_a0h;\n    uint hWnd;\n    uint32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint8_t var_12h;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = *0x55b90a;\n    uVar3 = *0x55b8e4;\n    uVar2 = *0x55b8c0;\n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    var_20h._0_2_ = *0x55b96c;\n    var_38h = 3;\n    var_11h._0_1_ = *0x55b8ce;\n    uVar7 = *0x55b8d3;\n    var_12h = 0x4b;\n    var_4ch = *0x55b960;\n    var_48h._0_2_ = -0x5116;\n    var_a4h = 0x1e89998b;\n    fVar9 = fcn.00522810(0x556ef4);\n    var_1b4h = ROUND(fVar9);\n    *0x64ead8 = var_1b4h;\n    if (var_1b4h == 0x224) {\n        for (var_74h = 0; var_74h < 0xb; var_74h = var_74h + 1) {\n            *0x55b8e0 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n            var_11h._0_1_ = var_11h + '\\x01';\n        }\n        fcn.005131e0();\n    }\n    *0x55b924 = -0x692c;\n    *0x55b908 = 3;\n    arg_8h = (*0x55b90c ^ 0xdb) >> 0x1f;\n    *0x55b8ec = fcn.00548310(*0x55b90c ^ 0xdb, arg_8h, uVar4 + *0x55b938, *0x55b93c + CARRY4(uVar4, *0x55b938));\n    *0x55b8e2 = 0x23;\n    cVar1 = uVar3;\n    if (*0x55b908 < 4) {\n    // switch table (4 cases) at 0x51905c\n        switch(*0x55b908) {\n        case 0:\n            var_a4h = *0x64ead8;\n            var_20h._0_2_ = *0x55b8e8 + 0xcad9;\n            break;\n        case 1:\n            if (*0x55b90c == 0) {\n                var_98h = *0x55b8e4;\n            }\n            else {\n                var_98h = *0x55b8d3;\n            }\n            var_4ch = var_98h;\n            bVar8 = 0xfffffffb < *0x55b8f0;\n            *0x55b8f0 = *0x55b8f0 + 4;\n            *0x55b8f4 = *0x55b8f4 + bVar8;\n            var_38h = *0x55b8cf + 0xaaad3eae;\n            break;\n        case 2:\n            *0x55b8d0 = *0x55b8d0 * uVar7;\n            break;\n        case 3:\n            *0x55b8ca = cVar1 + -0x24;\n        }\n    }\n    *0x55b948 = *0x55b8d0 + 0xfb;\n    for (var_5ch = 0x3f6; 0x32e < var_5ch; var_5ch = var_5ch + -1) {\n        iVar6 = (*_sym.imp.USER32.dll_GetFocus)();\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_GetUpdateRect)(iVar6, 0, 1);\n        }\n        if (uVar3 == 0) {\n            *0x55b920 = -0x61de;\n        }\n        else {\n            var_58h = 0x57;\n            *0x55b968 = *0x55b948;\n            do {\n                *0x55b8e7 = fcn.005481e0();\n                *0x55b8c8 = *0x55b8c8 * var_4ch;\n                var_12h = *0x55b8c8 * -0x3f;\n                var_58h = var_58h + 1;\n            } while (var_58h < 0x1389);\n        }\n    }\n    fcn.00517690();\n    while ((*0x55b910 = 0x9c3e,  *0x55b8d8 == -0x6326 && (*0x55b8dc == -1))) {\n        *0x55b8ec = 0x6f869ffc;\n        *0x55b8e8 = -*0x55b8cc;\n        if ((*0x55b8e0 != var_20h + 0xe5ba7731) || (*0x55b8e0 >> 0x1f != (0x1a4588ce < var_20h) + 0xfa517)) break;\n        if (*0x55b8d2 == '\\0') {\n            var_a8h = var_12h;\n        }\n        else {\n            var_a8h = var_a4h;\n        }\n        *0x55b930 = var_a8h;\n        *0x55b934 = var_a8h >> 0x1f;\n        *0x55b924 = *0x55b8d4 + 0x309b;\n    }\n    if (*0x55b914 != 0) {\n        if ((0x9b < *0x55b8ec) < (uVar2 == ~*0x55b8d3) == (var_20h != *0x55b8d0 < 0xe4)) {\n            *0x55b8ec = 0x9ddac5e1;\n            *0x55b8e4 = *0x5f2b98;\n        }\n        else if (var_12h != 0) {\n            *0x55b928 = *0x55b928 + -0x51c547d1 + uVar4;\n            *0x55b8e7 = *0x55b8e7 * cVar1;\n        }\n    }\n    fcn.00517ef0();\n    *0x55b8e2 = 0x3d;\n    iVar5 = fcn.00510700(3, 0);\n    if (iVar5 < 1) {\n        *0x55b90a = *0x55b90a + 0x42 + *0x55b8cc;\n        *0x55b8cb = *0x55b8cb * var_20h;\n    }\n    else {\n        fcn.00548310(*0x55b8d8, *0x55b8dc, 0x9ce6c76e, 0);\n        var_48h._0_2_ = 0x317b;\n    }\n    if (*0x55b8e2 == iVar5 + 1U) {\n        iVar5 = fcn.005103a0(0, *0x55b8e0);\n        if ((iVar5 < 1) < (iVar5 < 0x65)) {\n            stack0xffffffec = str.VarFileInfo._0_4_;\n            var_ch = str.VarFileInfo._4_4_;\n            var_8h = str.VarFileInfo._8_4_;\n            *0x55b8d4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&var_11h + 1);\n        }\n        *0x55b8ce = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        *0x55b920 = var_48h + 0x63c7;\n        *0x55b8ec = 0x43;\n        if ((*0x55b950 == 1) && (*0x55b954 == 0)) {\n            for (var_64h = 0; var_64h < 0x34b; var_64h = var_64h + 1) {\n                *0x55b8e6 = 0;\n                *0x55b8e7 = *0x55b8d8 + '\\x14';\n                *0x55b90a = *0x55b90a + 1;\n            }\n        }\n    }\n    *0x55b8e2 = *0x55b90c * '$' + '=';\n    *0x55b8c0 = *0x64ead8;\n    *0x55b8c4 = 0;\n    *0x55b8c0 = fcn.00510700(uVar7, 0);\n    if (*0x55b8c0 == 0) {\n        if (var_4ch == 0xffffffff) {\n            if ((*0x55b93c < var_38h >> 0x1f) || ((*0x55b93c <= var_38h >> 0x1f && (*0x55b938 <= var_38h)))) {\n                if (*0x55b914 != 0) {\n                    *0x55b8d4 = *0x55b948 + -0x7bdf;\n                    var_11h._0_1_ = *0x55b920;\n                }\n            }\n            else {\n                *0x55b94c = *0x55b94c - (*0x55b958 + 0x38a8);\n                *0x55b8e7 = *0x55b96c + '/';\n            }\n        }\n    }\n    else {\n        *0x55b958 = *0x55b940 + 0x8d;\n        *0x55b95c = *0x55b944 + (0xffffff72 < *0x55b940);\n        *0x55b96c = *0x55b970 + 0x8152;\n        var_11h._0_1_ = var_11h + '\\x01';\n    }\n    fcn.00519070(arg_8h);\n    return;\n}\n",
        "token_count": 3197
    },
    "0051b720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051b720(uint dwTlsIndex)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0051b360();\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(dwTlsIndex);\n    }\n    else {\n        (**0x54919c)(dwTlsIndex);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0051b760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051b760(uint dwTlsIndex)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0051b380();\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsGetValue)(dwTlsIndex);\n    }\n    else {\n        (**0x54919c)(dwTlsIndex);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0051d632": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051d632(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_19h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x34);\n    fcn.0051c1d0(*(unaff_EBP + -0x38));\n    iVar1 = fcn.0051af80();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x3c);\n    iVar1 = fcn.0051af80();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x40);\n    if ((((**(unaff_EBP + 8) == -0x1f928c9d) && (*(*(unaff_EBP + 8) + 0x10) == 3)) &&\n        ((*(*(unaff_EBP + 8) + 0x14) == 0x19930520 ||\n         ((*(*(unaff_EBP + 8) + 0x14) == 0x19930521 || (*(*(unaff_EBP + 8) + 0x14) == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x44) == 0 && (*(unaff_EBP + -0x28) != 0)))) {\n        iVar1 = fcn.0051aa50(*(*(unaff_EBP + 8) + 0x18));\n        if (iVar1 != 0) {\n            if (*(unaff_EBP + -0x48) == 0) {\n                *(unaff_EBP + -0x19) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x19) = 1;\n            }\n            fcn.0051a890(*(unaff_EBP + 8), *(unaff_EBP + -0x19));\n        }\n    }\n    return;\n}\n",
        "token_count": 497
    },
    "0051d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0051d820(uint param_1, uint param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t arg_10h;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h_2;\n    uint var_ch;\n    int32_t var_10h_2;\n    uint32_t var_14h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_10h_3;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h_3 = *in_FS_OFFSET;\n    uStack12 = *0x55b004 ^ 0x559608;\n    *in_FS_OFFSET = &var_10h_3;\n    arg_10h = fcn.0051dd20(var_8h_2, var_ch, var_10h_2);\n    iVar1 = fcn.0051af80();\n    *(iVar1 + 0x18) = *(iVar1 + 0x18) + 1;\n    while (var_1ch = arg_10h,  var_4h = 0,  var_1ch != var_14h) {\n        if ((0x7fffffff < var_1ch) || (*(var_10h_2 + 4) <= var_1ch)) {\n            fcn.00527cb0();\n        }\n        arg_10h = *(*(var_10h_2 + 8) + var_1ch * 8);\n        var_4h = 1;\n        if (*(*(var_10h_2 + 8) + 4 + var_1ch * 8) != 0) {\n            fcn.0051dd50(var_8h_2, var_10h_2, arg_10h);\n            fcn.0051dc90(*(*(var_10h_2 + 8) + 4 + var_1ch * 8), var_8h_2, 0x103);\n        }\n    }\n    var_4h = 0xfffffffe;\n    fcn.0051d93c();\n    if (var_1ch != var_14h) {\n        fcn.00527cb0();\n    }\n    fcn.0051dd50(var_8h_2, var_10h_2, var_1ch);\n    *in_FS_OFFSET = var_10h_3;\n    return;\n}\n",
        "token_count": 615
    },
    "0051d93c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0051d93c(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_28h;\n    \n    iVar1 = fcn.0051af80();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.0051af80();\n        *(unaff_EBP + -0x28) = iVar1 + 0x18;\n        **(unaff_EBP + -0x28) = **(unaff_EBP + -0x28) + -1;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0051e430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0051e430(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    double dVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_8h_00;\n    float10 fVar5;\n    int32_t var_8h_2;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    double *arg_14h;\n    uint var_2ch_2;\n    double dStack24;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_4h_2;\n    \n    var_4h_2 = var_8h_2 != 0;\n    uStack12 = var_4h_2;\n    if (var_4h_2 == 0) {\n        in_stack_ffffffc4 = 0;\n        in_stack_ffffffc0 = 0x41;\n        iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\convert\\\\atof.cpp\", 0x41, 0, 0x549ca4, \n                             L\"string != nullptr\");\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            fVar5 = (*pcVar1)();\n            return fVar5;\n        }\n    }\n    if (uStack12 == 0) {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"string != nullptr\", L\"common_atof_l\", L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\convert\\\\atof.cpp\", \n                     0x41, 0);\n        fVar5 = 0;\n    }\n    else {\n        fcn.0051f240(noname_1);\n        dStack24 = 0.0;\n        arg_14h = &dStack24;\n        puStack16 = &stack0xffffffc0;\n        fcn.0051e560(&stack0xffffffc0, var_8h_2, 0);\n        arg_8h_00 = fcn.0051f510();\n        fcn.0051e580(arg_8h_00, in_stack_ffffffc0, in_stack_ffffffc4, arg_14h);\n        dVar2 = dStack24;\n        fcn.0051f410();\n        fVar5 = dVar2;\n    }\n    return fVar5;\n}\n",
        "token_count": 702
    },
    "0051e580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_330h\n\nvoid __cdecl fcn.0051e580(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_8h_00;\n    bool bVar4;\n    uint var_330h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    bVar4 = arg_14h != 0;\n    if ((!bVar4) &&\n       (iVar2 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6a6, 0, 0x549ca4, \n                             L\"result != nullptr\"),  iVar2 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (bVar4) {\n        if ((arg_8h == 0) &&\n           (iVar2 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6a7, 0, 0x549ca4, \n                                 L\"locale != nullptr\"),  iVar2 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (arg_8h != 0) {\n            arg_8h_00 = fcn.0051e740(arg_8h, &arg_ch, &var_310h);\n            var_330h = fcn.0051efe0(arg_8h_00, &var_310h, arg_14h);\n            fcn.0051f3e0();\n        }\n        else {\n            puVar3 = fcn.00530020();\n            *puVar3 = 0x16;\n            fcn.00527f00(L\"locale != nullptr\", L\"__crt_strtox::parse_floating_point\", \n                         L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6a7, 0);\n            fcn.0051f3e0();\n        }\n    }\n    else {\n        puVar3 = fcn.00530020();\n        *puVar3 = 0x16;\n        fcn.00527f00(L\"result != nullptr\", L\"__crt_strtox::parse_floating_point\", \n                     L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6a6, 0);\n        fcn.0051f3e0();\n    }\n    fcn.00519070(var_330h);\n    return;\n}\n",
        "token_count": 719
    },
    "0051efe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0051efe0(uint32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (arg_8h < 10) {\n    // switch table (10 cases) at 0x51f13c\n        switch(*(arg_8h * 4 + 0x51f13c)) {\n        case 0x51f000:\n            uVar3 = fcn.0051e500(arg_ch, arg_10h);\n            break;\n        case 0x51f015:\n            uVar3 = fcn.0051e530(arg_ch, arg_10h);\n            break;\n        case 0x51f02a:\n            fcn.0051e3a0(*(arg_ch + 0x308), arg_10h);\n            uVar3 = 0;\n            break;\n        case 0x51f048:\n            fcn.0051e070(*(arg_ch + 0x308), arg_10h);\n            uVar3 = 0;\n            break;\n        case 0x51f066:\n            fcn.0051e100(*(arg_ch + 0x308), arg_10h);\n            uVar3 = 0;\n            break;\n        case 0x51f084:\n            fcn.0051e190(*(arg_ch + 0x308), arg_10h);\n            uVar3 = 0;\n            break;\n        case 0x51f0a2:\n            fcn.0051dfa0(arg_10h);\n            uVar3 = 0;\n            break;\n        case 0x51f0b5:\n            fcn.0051e3a0(0, arg_10h);\n            uVar3 = 1;\n            break;\n        case 0x51f0ca:\n            fcn.0051e3a0(*(arg_ch + 0x308), arg_10h);\n            uVar3 = 2;\n            break;\n        case 0x51f0e8:\n            fcn.0051e070(*(arg_ch + 0x308), arg_10h);\n            uVar3 = 3;\n        }\n    }\n    else {\n        iVar2 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x698, 0, 0x549ca4, L\"false\");\n        if (iVar2 == 1) {\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 625
    },
    "00522210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00522210(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = *param_1 != 0;\n    if ((!bVar5) &&\n       (iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6ec, 0, 0x549ca4, \n                             L\"_p != nullptr\"),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (!bVar5) {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"_p != nullptr\", L\"__crt_strtox::c_string_character_source<char>::validate\", \n                     L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6ec, 0);\n    }\n    return bVar5;\n}\n",
        "token_count": 298
    },
    "005222a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.005222a0(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = *param_1 != 0;\n    if ((!bVar5) &&\n       (iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6ec, 0, 0x549ca4, \n                             L\"_p != nullptr\"),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (!bVar5) {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"_p != nullptr\", L\"__crt_strtox::c_string_character_source<wchar_t>::validate\", \n                     L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x6ec, 0);\n    }\n    return bVar5;\n}\n",
        "token_count": 301
    },
    "00522ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00522ba0(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    iVar2 = fcn.0052f2d0(1, 0, 0, 0, 0x549ca4, arg_8h);\n    if (iVar2 == 0) {\n        uVar3 = 1;\n    }\n    else {\n        if (iVar2 == 1) {\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 161
    },
    "00523cc9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00523cc9(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x55c520 != 0) {\n        return 0;\n    }\n    fcn.00534930();\n    arg_8h = fcn.00535145();\n    if (arg_8h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar1 = fcn.00523ad8(arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            uVar2 = 0;\n            *0x55c520 = iVar1;\n            *0x55c52c = iVar1;\n        }\n        fcn.00527470(0, 2);\n    }\n    fcn.00527470(arg_8h, 2);\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "00524040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00524040(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_10h_2;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    pcStack16 = fcn.0051a500;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x55b004 ^ 0x559740;\n    *in_FS_OFFSET = &var_10h_2;\n    if (*0x55c53c == '\\0') {\n        *0x55c534 = 1;\n        var_4h = 0;\n        if (**param_1 == 0) {\n            fcn.005241b0(0);\n            iVar1 = fcn.00523ea0();\n            if (*0x55c538 != iVar1) {\n                uVar5 = 0;\n                uVar4 = 0;\n                uVar3 = 0;\n                pcVar2 = fcn.00522f90(*0x55c538);\n                (**0x54919c)(uVar3, uVar4, uVar5);\n                (*pcVar2)();\n            }\n            fcn.00524fd0(0x55c54c);\n        }\n        else if (**param_1 == 1) {\n            fcn.00524fd0(0x55c558);\n        }\n        var_4h = 0xfffffffe;\n        if (**param_1 == 0) {\n            fcn.00523df0(0x5491d0, 0x5491e0);\n        }\n        fcn.00523df0(0x5491e4, 0x5491e8);\n        if (*param_1[1] == 0) {\n            *0x55c53c = '\\x01';\n            *param_1[2] = 1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return;\n}\n",
        "token_count": 525
    },
    "005288d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.005288d0(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h\n            )\n\n{\n    code *pcVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_1ch_00;\n    uint in_stack_fffffb14;\n    uint32_t noname_2;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uchar *var_470h;\n    uint32_t var_46ch;\n    uint32_t var_468h;\n    uint var_464h;\n    uint32_t var_460h;\n    uint var_45ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    if ((arg_18h == 0) &&\n       (iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\", 0x8d, 0, 0x549ca4, \n                             L\"format != nullptr\"),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg_18h != 0) {\n        if ((arg_14h == 0) || (arg_10h != NULL)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if ((!bVar2) &&\n           (iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\", 0x8e, 0, 0x549ca4, \n                                 L\"buffer_count == 0 || buffer != nullptr\"),  iVar3 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (bVar2) {\n            fcn.0051f240(arg_1ch);\n            var_470h = arg_10h;\n            var_46ch = arg_14h;\n            var_468h = 0;\n            if (((arg_8h & 2) == 0) && (arg_10h != NULL)) {\n                var_484h = 0;\n            }\n            else {\n                var_484h = 1;\n            }\n            var_464h = var_484h;\n            arg_1ch_00 = fcn.0051f510(arg_20h);\n            puVar4 = &var_470h;\n            noname_2 = arg_8h;\n            in_stack_fffffb14 = fcn.005237c0(puVar4);\n            fcn.0052a190(in_stack_fffffb14, puVar4, noname_2, arg_ch, arg_18h, arg_1ch_00);\n            var_460h = fcn.0052a940();\n            if (arg_10h == NULL) {\n                fcn.0052a2d0();\n                fcn.0051f410();\n            }\n            else {\n                if ((arg_8h & 1) == 0) {\n                    if ((arg_8h & 2) == 0) {\n                        if (arg_14h == 0) {\n                            fcn.0052a2d0();\n                            fcn.0051f410();\n                            goto code_r0x00528cf1;\n                        }\n                        if (var_468h == arg_14h) {\n                            arg_10h[arg_14h - 1] = 0;\n                            fcn.0052a2d0();\n                            fcn.0051f410();\n                            goto code_r0x00528cf1;\n                        }\n                        arg_10h[var_468h] = 0;\n                    }\n                    else if (arg_14h != 0) {\n                        if (var_460h < 0) {\n                            *arg_10h = 0;\n                        }\n                        else if (var_468h == arg_14h) {\n                            arg_10h[arg_14h - 1] = 0;\n                        }\n                        else {\n                            arg_10h[var_468h] = 0;\n                        }\n                    }\n                }\n                else {\n                    if ((arg_14h == 0) && (var_460h != 0)) {\n                        fcn.0052a2d0();\n                        fcn.0051f410();\n                        goto code_r0x00528cf1;\n                    }\n                    if (var_468h == arg_14h) {\n                        if ((-1 < var_460h) && (arg_14h < var_460h)) {\n                            fcn.0052a2d0();\n                            fcn.0051f410();\n                            goto code_r0x00528cf1;\n                        }\n                    }\n                    else {\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n                fcn.0052a2d0();\n                fcn.0051f410();\n            }\n        }\n        else {\n            puVar4 = fcn.00530020();\n            *puVar4 = 0x16;\n            fcn.00527f00(L\"buffer_count == 0 || buffer != nullptr\", L\"common_vsprintf\", \n                         L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\", 0x8e, 0);\n        }\n    }\n    else {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"format != nullptr\", L\"common_vsprintf\", L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\"\n                     , 0x8d, 0);\n    }\ncode_r0x00528cf1:\n    fcn.00519070(in_stack_fffffb14);\n    return;\n}\n",
        "token_count": 1496
    },
    "00528d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00528d00(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_1ch_00;\n    uint in_stack_fffffb14;\n    uint32_t noname_2;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    ushort *var_470h;\n    uint32_t var_46ch;\n    uint32_t var_468h;\n    uint var_464h;\n    uint32_t var_460h;\n    uint var_45ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    if ((arg_18h == 0) &&\n       (iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\", 0x8d, 0, 0x549ca4, \n                             L\"format != nullptr\"),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg_18h != 0) {\n        if ((arg_14h == 0) || (arg_10h != NULL)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if ((!bVar2) &&\n           (iVar3 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\", 0x8e, 0, 0x549ca4, \n                                 L\"buffer_count == 0 || buffer != nullptr\"),  iVar3 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (bVar2) {\n            fcn.0051f240(arg_1ch);\n            var_470h = arg_10h;\n            var_46ch = arg_14h;\n            var_468h = 0;\n            if (((arg_8h & 2) == 0) && (arg_10h != NULL)) {\n                var_484h = 0;\n            }\n            else {\n                var_484h = 1;\n            }\n            var_464h = var_484h;\n            arg_1ch_00 = fcn.0051f510(arg_20h);\n            puVar4 = &var_470h;\n            noname_2 = arg_8h;\n            in_stack_fffffb14 = fcn.005237c0(puVar4);\n            fcn.0052a1c0(in_stack_fffffb14, puVar4, noname_2, arg_ch, arg_18h, arg_1ch_00);\n            var_460h = fcn.0052abf0();\n            if (arg_10h == NULL) {\n                fcn.0052a2d0();\n                fcn.0051f410();\n            }\n            else {\n                if ((arg_8h & 1) == 0) {\n                    if ((arg_8h & 2) == 0) {\n                        if (arg_14h == 0) {\n                            fcn.0052a2d0();\n                            fcn.0051f410();\n                            goto code_r0x00529135;\n                        }\n                        if (var_468h == arg_14h) {\n                            arg_10h[arg_14h - 1] = 0;\n                            fcn.0052a2d0();\n                            fcn.0051f410();\n                            goto code_r0x00529135;\n                        }\n                        arg_10h[var_468h] = 0;\n                    }\n                    else if (arg_14h != 0) {\n                        if (var_460h < 0) {\n                            *arg_10h = 0;\n                        }\n                        else if (var_468h == arg_14h) {\n                            arg_10h[arg_14h - 1] = 0;\n                        }\n                        else {\n                            arg_10h[var_468h] = 0;\n                        }\n                    }\n                }\n                else {\n                    if ((arg_14h == 0) && (var_460h != 0)) {\n                        fcn.0052a2d0();\n                        fcn.0051f410();\n                        goto code_r0x00529135;\n                    }\n                    if (var_468h == arg_14h) {\n                        if ((-1 < var_460h) && (arg_14h < var_460h)) {\n                            fcn.0052a2d0();\n                            fcn.0051f410();\n                            goto code_r0x00529135;\n                        }\n                    }\n                    else {\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n                fcn.0052a2d0();\n                fcn.0051f410();\n            }\n        }\n        else {\n            puVar4 = fcn.00530020();\n            *puVar4 = 0x16;\n            fcn.00527f00(L\"buffer_count == 0 || buffer != nullptr\", L\"common_vsprintf\", \n                         L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\", 0x8e, 0);\n        }\n    }\n    else {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"format != nullptr\", L\"common_vsprintf\", L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\stdio\\\\output.cpp\"\n                     , 0x8d, 0);\n    }\ncode_r0x00529135:\n    fcn.00519070(in_stack_fffffb14);\n    return;\n}\n",
        "token_count": 1494
    },
    "00529b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00529b30(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.00529460();\n    iVar3 = fcn.005293e0();\n    pcVar1 = iVar2 + -1 + iVar3;\n    ppcVar4 = fcn.0052c520();\n    *ppcVar4 = pcVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        var_1h._0_1_ = arg_8h % arg_ch + '0';\n        arg_8h = arg_8h / arg_ch;\n        if ('9' < var_1h) {\n            var_1h._0_1_ = fcn.0052a3b0(var_1h, arg_10h & 0xff);\n        }\n        **ppcVar4 = var_1h;\n        *ppcVar4 = *ppcVar4 + -1;\n    }\n    *(in_ECX + 0x38) = pcVar1 - *ppcVar4;\n    *ppcVar4 = *ppcVar4 + 1;\n    return;\n}\n",
        "token_count": 394
    },
    "00529c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00529c00(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t **ppiVar5;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00529460();\n    iVar4 = fcn.00529420();\n    piVar1 = iVar3 + -2 + iVar4 * 2;\n    ppiVar5 = fcn.0052c520();\n    *ppiVar5 = piVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        var_4h._0_2_ = arg_8h % arg_ch + 0x30;\n        arg_8h = arg_8h / arg_ch;\n        if (0x39 < var_4h) {\n            cVar2 = fcn.0052a3b0(var_4h, arg_10h & 0xff);\n            var_4h._0_2_ = cVar2;\n        }\n        **ppiVar5 = var_4h;\n        *ppiVar5 = *ppiVar5 + -1;\n    }\n    *(in_ECX + 0x38) = piVar1 - *ppiVar5 >> 1;\n    *ppiVar5 = *ppiVar5 + 1;\n    return;\n}\n",
        "token_count": 397
    },
    "00529ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00529ce0(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    int32_t in_ECX;\n    int64_t iVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar5 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = fcn.00529460();\n    iVar3 = fcn.005293e0();\n    pcVar1 = iVar2 + -1 + iVar3;\n    ppcVar4 = fcn.0052c520();\n    *ppcVar4 = pcVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar5 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        var_1h._0_1_ = fcn.00548270(iVar5, arg_10h, 0);\n        var_1h._0_1_ = var_1h + '0';\n        iVar5 = fcn.00548200();\n        if ('9' < var_1h) {\n            var_1h._0_1_ = fcn.0052a3b0(var_1h, arg_14h & 0xff);\n        }\n        **ppcVar4 = var_1h;\n        *ppcVar4 = *ppcVar4 + -1;\n    }\n    *(in_ECX + 0x38) = pcVar1 - *ppcVar4;\n    *ppcVar4 = *ppcVar4 + 1;\n    return;\n}\n",
        "token_count": 438
    },
    "00529dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00529dd0(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t **ppiVar6;\n    int32_t in_ECX;\n    int64_t iVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar4 = fcn.00529460();\n    iVar5 = fcn.00529420();\n    piVar1 = iVar4 + -2 + iVar5 * 2;\n    ppiVar6 = fcn.0052c520();\n    *ppiVar6 = piVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar7 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar3 = fcn.00548270(iVar7, arg_10h, 0);\n        var_4h._0_2_ = iVar3 + 0x30;\n        iVar7 = fcn.00548200();\n        if (0x39 < var_4h) {\n            cVar2 = fcn.0052a3b0(var_4h, arg_14h & 0xff);\n            var_4h._0_2_ = cVar2;\n        }\n        **ppiVar6 = var_4h;\n        *ppiVar6 = *ppiVar6 + -1;\n    }\n    *(in_ECX + 0x38) = piVar1 - *ppiVar6 >> 1;\n    *ppiVar6 = *ppiVar6 + 1;\n    return;\n}\n",
        "token_count": 439
    },
    "0052a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052aa90)\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0052a940(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint32_t arg_8h;\n    uint unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    cVar2 = fcn.0052de70();\n    if (cVar2 != '\\0') {\n        var_ch = *(param_1 + 0x10) != 0;\n        if ((var_ch == 0) &&\n           (iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x682, 0, 0x549ca4, L\"_format_it != nullptr\"),  iVar4 == 1)) {\n            pcVar1 = swi(3);\n            uVar5 = (*pcVar1)();\n            return uVar5;\n        }\n        if (var_ch == 0) {\n            puVar6 = fcn.00530020();\n            *puVar6 = 0x16;\n            fcn.00527f00(L\"_format_it != nullptr\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::process\"\n                         , 0x54d3d8, 0x682, 0);\n        }\n        else {\n            do {\n                cVar2 = fcn.0052a3f0();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\n                while( true ) {\n                    *(param_1 + 0x31) = **(param_1 + 0x10);\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if ((*(param_1 + 0x31) == '\\0') || (*(param_1 + 0x18) < 0)) break;\n                    uVar5 = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar7 = fcn.0052a540(arg_8h, uVar5);\n                    *(param_1 + 0x1c) = uVar7;\n                    cVar2 = fcn.0052aec0();\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    if (*(param_1 + 0x1c) == 8) {\n                        iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x696, 0, 0x549ca4, L\"(\\\"Incorrect format specifier\\\", 0)\");\n                        if (iVar4 == 1) {\n                            pcVar1 = swi(3);\n                            uVar5 = (*pcVar1)();\n                            return uVar5;\n                        }\n                        puVar6 = fcn.00530020();\n                        *puVar6 = 0x16;\n                        fcn.00527f00(L\"(\\\"Incorrect format specifier\\\", 0)\", \n                                     L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::process\"\n                                     , 0x54d3d8, 0x696, 0);\n                        return 0xffffffff;\n                    }\n                    _auStack8 = _auStack8 & 0xffffff;\n    // switch table (8 cases) at 0x52abc4\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        uVar3 = fcn.0052b060();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 1:\n                        uVar3 = fcn.0052b380();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 2:\n                        uVar3 = fcn.0052af00();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 3:\n                        uVar3 = fcn.0052c3e0();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 4:\n                        uVar3 = fcn.0052aee0();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 5:\n                        uVar3 = fcn.0052b3d0();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 6:\n                        uVar3 = fcn.0052b4b0();\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                        break;\n                    case 7:\n                        uVar3 = fcn.0052bc50(arg_8h, uVar5, arg_8h, *(param_1 + 0x1c), var_18h, var_14h, var_ch, var_ch\n                                             , param_1, _auStack8, unaff_EBP);\n                        _auStack8 = _auStack8 | uVar3 << 0x18;\n                    }\n                    if (var_1h == '\\0') {\n                        return 0xffffffff;\n                    }\n                }\n                cVar2 = fcn.0052df90();\n            } while (cVar2 != '\\0');\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 1542
    },
    "0052abf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052ad42)\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0052abf0(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar2 = fcn.0052df00();\n    if (cVar2 != '\\0') {\n        bVar6 = *(param_1 + 0x10) != 0;\n        if ((!bVar6) && (iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0x682, 0, 0x549ca4, L\"_format_it != nullptr\"),  iVar3 == 1))\n        {\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (bVar6) {\n            do {\n                cVar2 = fcn.0052a3f0();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\n                while( true ) {\n                    *(param_1 + 0x32) = **(param_1 + 0x10);\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if ((*(param_1 + 0x32) == 0) || (*(param_1 + 0x18) < 0)) break;\n                    uVar4 = fcn.0052a5b0(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n                    cVar2 = fcn.0052aec0();\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    if (*(param_1 + 0x1c) == 8) {\n                        iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0x696, 0, 0x549ca4, L\"(\\\"Incorrect format specifier\\\", 0)\");\n                        if (iVar3 == 1) {\n                            pcVar1 = swi(3);\n                            uVar4 = (*pcVar1)();\n                            return uVar4;\n                        }\n                        puVar5 = fcn.00530020();\n                        *puVar5 = 0x16;\n                        fcn.00527f00(L\"(\\\"Incorrect format specifier\\\", 0)\", \n                                     L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::process\"\n                                     , 0x54d3d8, 0x696, 0);\n                        return 0xffffffff;\n                    }\n                    var_1h._0_1_ = '\\0';\n    // switch table (8 cases) at 0x52ae74\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        var_1h._0_1_ = fcn.0052b110();\n                        break;\n                    case 1:\n                        var_1h._0_1_ = fcn.0052b380();\n                        break;\n                    case 2:\n                        var_1h._0_1_ = fcn.0052afb0();\n                        break;\n                    case 3:\n                        var_1h._0_1_ = fcn.0052c460();\n                        break;\n                    case 4:\n                        var_1h._0_1_ = fcn.0052aee0();\n                        break;\n                    case 5:\n                        var_1h._0_1_ = fcn.0052b440();\n                        break;\n                    case 6:\n                        var_1h._0_1_ = fcn.0052b880();\n                        break;\n                    case 7:\n                        var_1h._0_1_ = fcn.0052c000();\n                    }\n                    if (var_1h == '\\0') {\n                        return 0xffffffff;\n                    }\n                }\n                cVar2 = fcn.0052e030();\n            } while (cVar2 != '\\0');\n        }\n        else {\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"_format_it != nullptr\", \n                         L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::process\"\n                         , 0x54d3d8, 0x682, 0);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 1251
    },
    "0052b060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.0052b060(uint param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.0052aed0();\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0052b1c0();\n        if ((cVar2 == '\\0') &&\n           (iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0x6c3, 0, 0x549ca4, L\"state_case_normal_common()\"),  iVar3 == 1)) {\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (cVar2 != '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            puVar5 = fcn.00530020(0, 0, param_1);\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"state_case_normal_common()\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::state_case_normal\"\n                         , 0x54d3d8, 0x6c3, 0);\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "0052b110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.0052b110(uint param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.0052aed0();\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0052b210();\n        if ((cVar2 == '\\0') &&\n           (iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0x6c3, 0, 0x549ca4, L\"state_case_normal_common()\"),  iVar3 == 1)) {\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (cVar2 != '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            puVar5 = fcn.00530020(0, 0, param_1);\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"state_case_normal_common()\", \n                         L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_normal\"\n                         , 0x54d3d8, 0x6c3, 0);\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 437
    },
    "0052b260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052b260(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0x3c) = 0;\n    iVar2 = fcn.0052e630(*(param_1 + 0x31), *(param_1 + 8));\n    if (iVar2 != 0) {\n        fcn.0052e0e0(*(param_1 + 0x31), param_1 + 0x18);\n        *(param_1 + 0x31) = **(param_1 + 0x10);\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        bVar5 = *(param_1 + 0x31) == '\\0';\n        if ((bVar5) && (iVar2 = fcn.0052f2d0(2, 0x54d3d8, 0x6db, 0, 0x549ca4, L\"_format_char != \\'\\\\0\\'\"),  iVar2 == 1))\n        {\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if (bVar5) {\n            puVar4 = fcn.00530020();\n            *puVar4 = 0x16;\n            fcn.00527f00(L\"_format_char != \\'\\\\0\\'\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::state_case_normal_tchar\"\n                         , 0x54d3d8, 0x6db, 0);\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 460
    },
    "0052b3d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052b3d0(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (*(param_1 + 0x31) == '*') {\n        cVar1 = fcn.0052de40();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            cVar1 = fcn.0052aec0();\n            if (cVar1 == '\\0') {\n                uVar2 = 1;\n            }\n            else {\n                if (*(param_1 + 0x28) < 0) {\n                    *(param_1 + 0x28) = 0xffffffff;\n                }\n                uVar2 = 1;\n            }\n        }\n    }\n    else {\n        uVar2 = fcn.0052a7c0(param_1 + 0x28);\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "0052b440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052b440(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (*(param_1 + 0x32) == 0x2a) {\n        cVar1 = fcn.0052de40();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            cVar1 = fcn.0052aec0();\n            if (cVar1 == '\\0') {\n                uVar2 = 1;\n            }\n            else {\n                if (*(param_1 + 0x28) < 0) {\n                    *(param_1 + 0x28) = 0xffffffff;\n                }\n                uVar2 = 1;\n            }\n        }\n    }\n    else {\n        uVar2 = fcn.0052a880(param_1 + 0x28);\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "0052b4b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052b53f)\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0052b5b7)\n\nuint __fastcall fcn.0052b4b0(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x31) == 'F') {\n        if ((*param_1 & 8) == 0) {\n            param_1[7] = 7;\n            uVar3 = fcn.0052bc50(var_28h, var_24h, 0, 0, var_18h, var_14h, var_10h, var_ch, var_8h, param_1, unaff_EBP);\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    else if (*(param_1 + 0x31) == 'N') {\n        if ((*param_1 & 8) == 0) {\n            param_1[7] = 8;\n            iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x780, 0, 0x549ca4, L\"(\\\"N length modifier not specifier\\\", false)\");\n            if (iVar4 == 1) {\n                pcVar2 = swi(3);\n                uVar3 = (*pcVar2)();\n                return uVar3;\n            }\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"(\\\"N length modifier not specifier\\\", false)\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::state_case_size\"\n                         , 0x54d3d8, 0x780, 0);\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    else {\n        uVar1 = param_1[0xb];\n        if ((uVar1 != 0) &&\n           (iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x787, 0, 0x549ca4, L\"_length == length_modifier::none\"),  iVar4 == 1)) {\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        if (uVar1 != 0) {\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"_length == length_modifier::none\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::state_case_size\"\n                         , 0x54d3d8, 0x787, 0);\n            uVar3 = 0;\n        }\n        else {\n    // switch table (50 cases) at 0x52b818\n            switch(*(param_1 + 0x31)) {\n            case 0x49:\n                if ((*param_1[4] == '3') && (*(param_1[4] + 1) == '2')) {\n                    param_1[4] = param_1[4] + 2;\n                    param_1[0xb] = 10;\n                }\n                else if ((*param_1[4] == '6') && (*(param_1[4] + 1) == '4')) {\n                    param_1[4] = param_1[4] + 2;\n                    param_1[0xb] = 0xb;\n                }\n                else if ((((*param_1[4] == 'd') || (*param_1[4] == 'i')) || (*param_1[4] == 'o')) ||\n                        (((*param_1[4] == 'u' || (*param_1[4] == 'x')) || (*param_1[4] == 'X')))) {\n                    param_1[0xb] = 9;\n                }\n                uVar3 = 1;\n                break;\n            default:\n                uVar3 = 1;\n                break;\n            case 0x4c:\n                param_1[0xb] = 8;\n                uVar3 = 1;\n                break;\n            case 0x54:\n                param_1[0xb] = 0xd;\n                uVar3 = 1;\n                break;\n            case 0x68:\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    param_1[0xb] = 1;\n                }\n                else {\n                    param_1[0xb] = 2;\n                }\n                uVar3 = 1;\n                break;\n            case 0x6a:\n                param_1[0xb] = 5;\n                uVar3 = 1;\n                break;\n            case 0x6c:\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    param_1[0xb] = 4;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n                uVar3 = 1;\n                break;\n            case 0x74:\n                param_1[0xb] = 7;\n                uVar3 = 1;\n                break;\n            case 0x77:\n                param_1[0xb] = 0xc;\n                uVar3 = 1;\n                break;\n            case 0x7a:\n                param_1[0xb] = 6;\n                uVar3 = 1;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1606
    },
    "0052b880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052b90f)\n// WARNING: Removing unreachable block (ram,0x0052b987)\n\nuint __fastcall fcn.0052b880(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x32) == 0x46) {\n        if ((*param_1 & 8) == 0) {\n            param_1[7] = 7;\n            uVar3 = fcn.0052c000();\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    else if (*(param_1 + 0x32) == 0x4e) {\n        if ((*param_1 & 8) == 0) {\n            param_1[7] = 8;\n            iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x780, 0, 0x549ca4, L\"(\\\"N length modifier not specifier\\\", false)\");\n            if (iVar4 == 1) {\n                pcVar2 = swi(3);\n                uVar3 = (*pcVar2)();\n                return uVar3;\n            }\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"(\\\"N length modifier not specifier\\\", false)\", \n                         L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_size\"\n                         , 0x54d3d8, 0x780, 0);\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    else {\n        uVar1 = param_1[0xb];\n        if ((uVar1 != 0) &&\n           (iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x787, 0, 0x549ca4, L\"_length == length_modifier::none\"),  iVar4 == 1)) {\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        if (uVar1 != 0) {\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"_length == length_modifier::none\", \n                         L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_size\"\n                         , 0x54d3d8, 0x787, 0);\n            uVar3 = 0;\n        }\n        else {\n    // switch table (50 cases) at 0x52bbe8\n            switch(*(param_1 + 0x32)) {\n            case 0x49:\n                if ((*param_1[4] == 0x33) && (*(param_1[4] + 2) == 0x32)) {\n                    param_1[4] = param_1[4] + 4;\n                    param_1[0xb] = 10;\n                }\n                else if ((*param_1[4] == 0x36) && (*(param_1[4] + 2) == 0x34)) {\n                    param_1[4] = param_1[4] + 4;\n                    param_1[0xb] = 0xb;\n                }\n                else if ((((*param_1[4] == 100) || (*param_1[4] == 0x69)) || (*param_1[4] == 0x6f)) ||\n                        (((*param_1[4] == 0x75 || (*param_1[4] == 0x78)) || (*param_1[4] == 0x58)))) {\n                    param_1[0xb] = 9;\n                }\n                uVar3 = 1;\n                break;\n            default:\n                uVar3 = 1;\n                break;\n            case 0x4c:\n                param_1[0xb] = 8;\n                uVar3 = 1;\n                break;\n            case 0x54:\n                param_1[0xb] = 0xd;\n                uVar3 = 1;\n                break;\n            case 0x68:\n                if (*param_1[4] == 0x68) {\n                    param_1[4] = param_1[4] + 2;\n                    param_1[0xb] = 1;\n                }\n                else {\n                    param_1[0xb] = 2;\n                }\n                uVar3 = 1;\n                break;\n            case 0x6a:\n                param_1[0xb] = 5;\n                uVar3 = 1;\n                break;\n            case 0x6c:\n                if (*param_1[4] == 0x6c) {\n                    param_1[4] = param_1[4] + 2;\n                    param_1[0xb] = 4;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n                uVar3 = 1;\n                break;\n            case 0x74:\n                param_1[0xb] = 7;\n                uVar3 = 1;\n                break;\n            case 0x77:\n                param_1[0xb] = 0xc;\n                uVar3 = 1;\n                break;\n            case 0x7a:\n                param_1[0xb] = 6;\n                uVar3 = 1;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1433
    },
    "0052bc50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0052bc50(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t arg_10h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    char var_6h;\n    char var_5h;\n    uint8_t var_4h;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\0';\n    // switch table (56 cases) at 0x52bf90\n    switch(*(in_ECX + 0x31)) {\n    case 0x41:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x61:\n    case 0x65:\n    case 0x66:\n    case 0x67:\n        var_1h._0_1_ = fcn.0052c800();\n        break;\n    case 0x43:\n    case 99:\n        var_1h._0_1_ = fcn.0052cce0();\n        break;\n    case 0x53:\n    case 0x73:\n        var_1h._0_1_ = fcn.0052daf0();\n        break;\n    case 0x58:\n        var_1h._0_1_ = fcn.0052c5e0();\n        break;\n    case 0x5a:\n        var_1h._0_1_ = fcn.0052c620();\n        break;\n    case 100:\n    case 0x69:\n        var_1h._0_1_ = fcn.0052cf30();\n        break;\n    case 0x6e:\n        var_1h._0_1_ = fcn.0052d630();\n        break;\n    case 0x6f:\n        var_1h._0_1_ = fcn.0052da10();\n        break;\n    case 0x70:\n        var_1h._0_1_ = fcn.0052da90();\n        break;\n    case 0x75:\n        var_1h._0_1_ = fcn.0052dd70();\n        break;\n    case 0x78:\n        var_1h._0_1_ = fcn.0052ddb0();\n    }\n    if (var_1h == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aed0();\n        if (cVar1 == '\\0') {\n            if (*(in_ECX + 0x30) == '\\0') {\n                var_ch._0_2_ = 0;\n                var_ch._2_1_ = 0;\n                var_14h = 0;\n                cVar1 = fcn.0052a740(0x10);\n                if (cVar1 != '\\0') {\n                    cVar1 = fcn.0052a740(0x40);\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.0052a740(1);\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.0052a740(2);\n                            if (cVar1 != '\\0') {\n    // WARNING: Ignoring partial resolution of indirect\n                                var_ch._0_1_ = 0x20;\n                                var_14h = 1;\n                            }\n                        }\n                        else {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_ch._0_1_ = 0x2b;\n                            var_14h = 1;\n                        }\n                    }\n                    else {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_ch._0_1_ = 0x2d;\n                        var_14h = 1;\n                    }\n                }\n                if (((*(in_ECX + 0x31) == 'x') || (*(in_ECX + 0x31) == 'X')) &&\n                   (cVar1 = fcn.0052a740(0x20),  cVar1 != '\\0')) {\n                    var_2h = '\\x01';\n                }\n                else {\n                    var_2h = '\\0';\n                }\n                var_5h = var_2h;\n                if ((*(in_ECX + 0x31) == 'a') || (*(in_ECX + 0x31) == 'A')) {\n                    var_3h = '\\x01';\n                }\n                else {\n                    var_3h = '\\0';\n                }\n                var_6h = var_3h;\n                if ((var_2h != '\\0') || (var_3h != '\\0')) {\n                    *(&var_ch + var_14h) = 0x30;\n                    if ((*(in_ECX + 0x31) == 'X') || (*(in_ECX + 0x31) == 'A')) {\n                        var_4h = 1;\n                    }\n                    else {\n                        var_4h = 0;\n                    }\n                    uVar2 = fcn.0052a3b0(0x51, var_4h);\n                    *(&var_ch + var_14h + 1) = uVar2;\n                    var_14h = var_14h + 2;\n                }\n                arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - var_14h;\n                cVar1 = fcn.0052a740(0xc);\n                if (cVar1 == '\\0') {\n                    fcn.00529ed0(in_ECX + 0x448, 0x20, arg_10h, in_ECX + 0x18);\n                }\n                fcn.0052e420(&var_ch, var_14h, in_ECX + 0x18);\n                cVar1 = fcn.0052a740(8);\n                if ((cVar1 != '\\0') && (cVar1 = fcn.0052a740(4),  cVar1 == '\\0')) {\n                    fcn.00529ed0(in_ECX + 0x448, 0x30, arg_10h, in_ECX + 0x18);\n                }\n                fcn.0052e210(0);\n                if ((-1 < *(in_ECX + 0x18)) && (cVar1 = fcn.0052a740(4),  cVar1 != '\\0')) {\n                    fcn.00529ed0(in_ECX + 0x448, 0x20, arg_10h, in_ECX + 0x18);\n                }\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = 1;\n            }\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1654
    },
    "0052c000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0052c000(int32_t param_1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t arg_10h;\n    uint in_stack_ffffffa0;\n    uint var_28h;\n    uint var_24h;\n    uint8_t var_1bh;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x55b004 ^ &stack0xfffffffc;\n    var_dh._0_1_ = '\\0';\n    // switch table (56 cases) at 0x52c370\n    switch(*(param_1 + 0x32)) {\n    case 0x41:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x61:\n    case 0x65:\n    case 0x66:\n    case 0x67:\n        var_dh._0_1_ = fcn.0052ca70();\n        break;\n    case 0x43:\n    case 99:\n        var_dh._0_1_ = fcn.0052cd00();\n        break;\n    case 0x53:\n    case 0x73:\n        var_dh._0_1_ = fcn.0052dbe0();\n        break;\n    case 0x58:\n        var_dh._0_1_ = fcn.0052c600();\n        break;\n    case 0x5a:\n        var_dh._0_1_ = fcn.0052c710();\n        break;\n    case 100:\n    case 0x69:\n        var_dh._0_1_ = fcn.0052cf60();\n        break;\n    case 0x6e:\n        var_dh._0_1_ = fcn.0052d820();\n        break;\n    case 0x6f:\n        var_dh._0_1_ = fcn.0052da50();\n        break;\n    case 0x70:\n        var_dh._0_1_ = fcn.0052dac0();\n        break;\n    case 0x75:\n        var_dh._0_1_ = fcn.0052dd90();\n        break;\n    case 0x78:\n        var_dh._0_1_ = fcn.0052ddd0();\n    }\n    if (((var_dh != '\\0') && (cVar3 = fcn.0052aed0(),  cVar3 == '\\0')) && (*(param_1 + 0x30) == '\\0')) {\n        stack0xfffffff0 = 0;\n        var_8h._0_2_ = 0;\n        var_18h = 0;\n        cVar3 = fcn.0052a740(0x10);\n        if (cVar3 != '\\0') {\n            cVar3 = fcn.0052a740(0x40);\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.0052a740(1);\n                if (cVar3 == '\\0') {\n                    cVar3 = fcn.0052a740(2);\n                    if (cVar3 != '\\0') {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_dh._1_2_ = 0x20;\n                        var_18h = 1;\n                    }\n                }\n                else {\n    // WARNING: Ignoring partial resolution of indirect\n                    var_dh._1_2_ = 0x2b;\n                    var_18h = 1;\n                }\n            }\n            else {\n    // WARNING: Ignoring partial resolution of indirect\n                var_dh._1_2_ = 0x2d;\n                var_18h = 1;\n            }\n        }\n        if (((*(param_1 + 0x32) == 0x78) || (*(param_1 + 0x32) == 0x58)) && (cVar3 = fcn.0052a740(0x20),  cVar3 != '\\0')\n           ) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if ((bVar1) || (bVar2)) {\n            *(&fcn.0052c000::var_dh + var_18h * 2 + 1) = 0x30;\n            if ((*(param_1 + 0x32) == 0x58) || (*(param_1 + 0x32) == 0x41)) {\n                var_1bh = 1;\n            }\n            else {\n                var_1bh = 0;\n            }\n            cVar3 = fcn.0052a3b0(0x51, var_1bh);\n            *(&fcn.0052c000::var_dh + (var_18h + 1) * 2 + 1) = cVar3;\n            var_18h = var_18h + 2;\n        }\n        arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - var_18h;\n        cVar3 = fcn.0052a740(0xc);\n        if (cVar3 == '\\0') {\n            fcn.00529f20(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n        }\n        fcn.0052e520(&fcn.0052c000::var_dh + 1, var_18h, param_1 + 0x18);\n        cVar3 = fcn.0052a740(8);\n        if ((cVar3 != '\\0') && (cVar3 = fcn.0052a740(4),  cVar3 == '\\0')) {\n            fcn.00529f20(param_1 + 0x448, 0x30, arg_10h, param_1 + 0x18);\n        }\n        in_stack_ffffffa0 = 0x52c326;\n        fcn.0052e330(0);\n        if (-1 < *(param_1 + 0x18)) {\n            in_stack_ffffffa0 = 4;\n            cVar3 = fcn.0052a740(4);\n            if (cVar3 != '\\0') {\n                fcn.00529f20(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n            }\n        }\n    }\n    fcn.00519070(in_stack_ffffffa0);\n    return;\n}\n",
        "token_count": 1566
    },
    "0052c3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052c3e0(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (*(param_1 + 0x31) == '*') {\n        cVar1 = fcn.0052de10();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            cVar1 = fcn.0052aec0();\n            if (cVar1 == '\\0') {\n                uVar2 = 1;\n            }\n            else {\n                if (*(param_1 + 0x24) < 0) {\n                    fcn.0052aea0(4);\n                    *(param_1 + 0x24) = -*(param_1 + 0x24);\n                }\n                uVar2 = 1;\n            }\n        }\n    }\n    else {\n        uVar2 = fcn.0052a7c0(param_1 + 0x24);\n    }\n    return uVar2;\n}\n",
        "token_count": 233
    },
    "0052c460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052c460(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (*(param_1 + 0x32) == 0x2a) {\n        cVar1 = fcn.0052de10();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            cVar1 = fcn.0052aec0();\n            if (cVar1 == '\\0') {\n                uVar2 = 1;\n            }\n            else {\n                if (*(param_1 + 0x24) < 0) {\n                    fcn.0052aea0(4);\n                    *(param_1 + 0x24) = -*(param_1 + 0x24);\n                }\n                uVar2 = 1;\n            }\n        }\n    }\n    else {\n        uVar2 = fcn.0052a880(param_1 + 0x24);\n    }\n    return uVar2;\n}\n",
        "token_count": 233
    },
    "0052c620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0052c620(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint16_t *var_8h;\n    uint *var_4h;\n    \n    var_8h = NULL;\n    cVar1 = fcn.005297c0(&var_8h);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar2 = 1;\n        }\n        else {\n            if ((var_8h == NULL) || (*(var_8h + 2) == 0)) {\n                uVar2 = fcn.0052a7b0();\n                var_4h[0xd] = uVar2;\n                uVar2 = fcn.00527c20(var_4h[0xd]);\n                var_4h[0xe] = uVar2;\n                *(var_4h + 0xf) = 0;\n            }\n            else {\n                cVar1 = fcn.005298a0(*var_4h, var_4h[1], *(var_4h + 0x31), var_4h[0xb]);\n                if (cVar1 == '\\0') {\n                    var_4h[0xd] = *(var_8h + 2);\n                    var_4h[0xe] = *var_8h;\n                    *(var_4h + 0xf) = 0;\n                }\n                else {\n                    var_4h[0xd] = *(var_8h + 2);\n                    var_4h[0xe] = *var_8h / 2;\n                    *(var_4h + 0xf) = 1;\n                }\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 424
    },
    "0052c710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0052c710(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint16_t *var_8h;\n    uint *var_4h;\n    \n    var_8h = NULL;\n    cVar1 = fcn.005297c0(&var_8h);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar2 = 1;\n        }\n        else {\n            if ((var_8h == NULL) || (*(var_8h + 2) == 0)) {\n                uVar2 = fcn.0052a7b0();\n                var_4h[0xd] = uVar2;\n                uVar2 = fcn.00527c20(var_4h[0xd]);\n                var_4h[0xe] = uVar2;\n                *(var_4h + 0xf) = 0;\n            }\n            else {\n                cVar1 = fcn.00529920(*var_4h, var_4h[1], *(var_4h + 0x32), var_4h[0xb]);\n                if (cVar1 == '\\0') {\n                    var_4h[0xd] = *(var_8h + 2);\n                    var_4h[0xe] = *var_8h;\n                    *(var_4h + 0xf) = 0;\n                }\n                else {\n                    var_4h[0xd] = *(var_8h + 2);\n                    var_4h[0xe] = *var_8h / 2;\n                    *(var_4h + 0xf) = 1;\n                }\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 423
    },
    "0052c800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0052c800(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint arg_ch;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_30h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.0052aea0(0x10);\n    cVar1 = fcn.0052aec0();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar3 = 1;\n        }\n        else {\n            if (var_4h[10] < 0) {\n                if ((*(var_4h + 0x31) == 'a') || (*(var_4h + 0x31) == 'A')) {\n                    var_4h[10] = 0xd;\n                }\n                else {\n                    var_4h[10] = 6;\n                }\n            }\n            else if ((var_4h[10] == 0) && ((*(var_4h + 0x31) == 'g' || (*(var_4h + 0x31) == 'G')))) {\n                var_4h[10] = 1;\n            }\n            cVar1 = fcn.005294a0(var_4h[10] + 0x15d);\n            if (cVar1 == '\\0') {\n                iVar2 = fcn.005293e0();\n                var_4h[10] = iVar2 + -0x15d;\n            }\n            uVar3 = fcn.00529460();\n            var_4h[0xd] = uVar3;\n            var_ch = 0;\n            var_8h = 0;\n            cVar1 = fcn.005297f0(&var_ch);\n            if (cVar1 == '\\0') {\n                uVar3 = 0;\n            }\n            else {\n                arg_30h = 1;\n                uVar3 = var_4h[2];\n                arg_28h = var_4h[1];\n                arg_24h = *var_4h;\n                arg_20h = var_4h[10];\n                iVar2 = *(var_4h + 0x31);\n                arg_18h = fcn.00529a60();\n                arg_14h = fcn.00529a80();\n                arg_10h = fcn.005293e0();\n                arg_ch = fcn.00529460();\n                fcn.0053a910(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, iVar2, arg_20h, arg_24h, arg_28h, uVar3, \n                             arg_30h);\n                cVar1 = fcn.0052a740(0x20);\n                if ((cVar1 != '\\0') && (var_4h[10] == 0)) {\n                    fcn.0052a620(var_4h[0xd], var_4h[2]);\n                }\n                if (((*(var_4h + 0x31) == 'g') || (*(var_4h + 0x31) == 'G')) &&\n                   (cVar1 = fcn.0052a740(0x20),  cVar1 == '\\0')) {\n                    fcn.0052a440(var_4h[0xd], var_4h[2]);\n                }\n                if (*var_4h[0xd] == '-') {\n                    fcn.0052aea0(0x40);\n                    var_4h[0xd] = var_4h[0xd] + 1;\n                }\n                if (((*var_4h[0xd] == 'i') || (*var_4h[0xd] == 'I')) || ((*var_4h[0xd] == 'n' || (*var_4h[0xd] == 'N')))\n                   ) {\n                    fcn.0052ddf0(8);\n                    *(var_4h + 0x31) = 0x73;\n                }\n                uVar3 = fcn.00527c20(var_4h[0xd]);\n                var_4h[0xe] = uVar3;\n                uVar3 = 1;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1029
    },
    "0052ca70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0052ca70(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint arg_ch;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_30h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.0052aea0(0x10);\n    cVar1 = fcn.0052aec0();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar3 = 1;\n        }\n        else {\n            if (var_4h[10] < 0) {\n                if ((*(var_4h + 0x32) == 0x61) || (*(var_4h + 0x32) == 0x41)) {\n                    var_4h[10] = 0xd;\n                }\n                else {\n                    var_4h[10] = 6;\n                }\n            }\n            else if ((var_4h[10] == 0) && ((*(var_4h + 0x32) == 0x67 || (*(var_4h + 0x32) == 0x47)))) {\n                var_4h[10] = 1;\n            }\n            cVar1 = fcn.005294a0(var_4h[10] + 0x15d);\n            if (cVar1 == '\\0') {\n                iVar2 = fcn.005293e0();\n                var_4h[10] = iVar2 + -0x15d;\n            }\n            uVar3 = fcn.00529460();\n            var_4h[0xd] = uVar3;\n            var_ch = 0;\n            var_8h = 0;\n            cVar1 = fcn.005297f0(&var_ch);\n            if (cVar1 == '\\0') {\n                uVar3 = 0;\n            }\n            else {\n                arg_30h = 1;\n                uVar3 = var_4h[2];\n                arg_28h = var_4h[1];\n                arg_24h = *var_4h;\n                arg_20h = var_4h[10];\n                iVar2 = *(var_4h + 0x32);\n                arg_18h = fcn.00529a60();\n                arg_14h = fcn.00529a80();\n                arg_10h = fcn.005293e0();\n                arg_ch = fcn.00529460();\n                fcn.0053a910(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, iVar2, arg_20h, arg_24h, arg_28h, uVar3, \n                             arg_30h);\n                cVar1 = fcn.0052a740(0x20);\n                if ((cVar1 != '\\0') && (var_4h[10] == 0)) {\n                    fcn.0052a620(var_4h[0xd], var_4h[2]);\n                }\n                if (((*(var_4h + 0x32) == 0x67) || (*(var_4h + 0x32) == 0x47)) &&\n                   (cVar1 = fcn.0052a740(0x20),  cVar1 == '\\0')) {\n                    fcn.0052a440(var_4h[0xd], var_4h[2]);\n                }\n                if (*var_4h[0xd] == '-') {\n                    fcn.0052aea0(0x40);\n                    var_4h[0xd] = var_4h[0xd] + 1;\n                }\n                if (((*var_4h[0xd] == 'i') || (*var_4h[0xd] == 'I')) || ((*var_4h[0xd] == 'n' || (*var_4h[0xd] == 'N')))\n                   ) {\n                    fcn.0052ddf0(8);\n                    *(var_4h + 0x32) = 0x73;\n                }\n                uVar3 = fcn.00527c20(var_4h[0xd]);\n                var_4h[0xe] = uVar3;\n                uVar3 = 1;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1039
    },
    "0052cd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0052cd20(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t arg_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.005298a0(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00529460();\n        cVar1 = fcn.00529700(uVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xe] = 1;\n    }\n    else {\n        var_4h._0_2_ = 0;\n        cVar1 = fcn.00529870(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        uVar3 = param_1[2];\n        arg_14h = var_4h;\n        arg_10h = fcn.005293e0();\n        arg_ch = fcn.00529460();\n        iVar2 = fcn.00539120(param_1 + 0xe, arg_ch, arg_10h, arg_14h, uVar3);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    uVar3 = fcn.00529460();\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 453
    },
    "0052cf90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052d0d3)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0052cf90(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    char **ppcVar6;\n    int32_t *piVar7;\n    int32_t in_ECX;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char var_5h;\n    char var_4h;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    var_ch = in_ECX;\n    var_20h = fcn.0052c540(*(in_ECX + 0x2c));\n    var_28h = 0;\n    var_24h = 0;\n    var_1h._0_1_ = '\\0';\n    var_10h = var_20h + -1;\n    // switch table (8 cases) at 0x52d2b8\n    switch(var_10h) {\n    case 0:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_2h = fcn.005296a0(&var_28h);\n        }\n        else {\n            var_2h = fcn.00529670(&var_28h);\n        }\n        var_1h._0_1_ = var_2h;\n        break;\n    case 1:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_3h = fcn.00529730(&var_28h);\n        }\n        else {\n            var_3h = fcn.005296d0(&var_28h);\n        }\n        var_1h._0_1_ = var_3h;\n        break;\n    default:\n        var_18h = 0;\n        var_1ch = 0;\n        iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0x9e9, 0, 0x549ca4, L\"(\\\"Invalid integer length modifier\\\", 0)\");\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (var_1ch == 0) {\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"(\\\"Invalid integer length modifier\\\", 0)\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::type_case_integer\"\n                         , 0x54d3d8, 0x9e9, 0);\n            return 0;\n        }\n        break;\n    case 3:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_4h = fcn.00529790(&var_28h);\n        }\n        else {\n            var_4h = fcn.00529760(&var_28h);\n        }\n        var_1h._0_1_ = var_4h;\n        break;\n    case 7:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_5h = fcn.00529840(&var_28h);\n        }\n        else {\n            var_5h = fcn.00529840(&var_28h);\n        }\n        var_1h._0_1_ = var_5h;\n    }\n    if (var_1h == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0052aec0();\n        if (cVar2 == '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            cVar2 = fcn.0052a740(0x10);\n            if (((cVar2 == '\\0') || (0 < var_24h)) || (-1 < var_24h)) {\n                var_30h = var_28h;\n                var_2ch = var_24h;\n            }\n            else {\n                var_30h = -var_28h;\n                var_2ch = -(var_24h + (var_28h != 0));\n                fcn.0052aea0(0x40);\n            }\n            if (*(var_ch + 0x28) < 0) {\n                *(var_ch + 0x28) = 1;\n            }\n            else {\n                fcn.0052ddf0(8);\n                fcn.005294a0(*(var_ch + 0x28));\n            }\n            if ((var_30h | var_2ch) == 0) {\n                fcn.0052ddf0(0x20);\n            }\n            *(var_ch + 0x3c) = 0;\n            if (var_20h == 8) {\n                fcn.00529ce0(var_30h, var_2ch, arg_8h, arg_ch & 0xff);\n            }\n            else {\n                fcn.00529b30(var_30h, arg_8h, arg_ch & 0xff);\n            }\n            cVar2 = fcn.0052a740(0x80);\n            if ((cVar2 != '\\0') && ((*(var_ch + 0x38) == 0 || (ppcVar6 = fcn.0052c520(),  **ppcVar6 != '0')))) {\n                piVar7 = fcn.0052c520();\n                *piVar7 = *piVar7 + -1;\n                **piVar7 = 0x30;\n                *(var_ch + 0x38) = *(var_ch + 0x38) + 1;\n            }\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1503
    },
    "0052d2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052d423)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0052d2e0(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int16_t **ppiVar6;\n    int32_t *piVar7;\n    int32_t in_ECX;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char var_5h;\n    char var_4h;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    var_ch = in_ECX;\n    var_20h = fcn.0052c540(*(in_ECX + 0x2c));\n    var_28h = 0;\n    var_24h = 0;\n    var_1h._0_1_ = '\\0';\n    var_10h = var_20h + -1;\n    // switch table (8 cases) at 0x52d60c\n    switch(var_10h) {\n    case 0:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_2h = fcn.005296a0(&var_28h);\n        }\n        else {\n            var_2h = fcn.00529670(&var_28h);\n        }\n        var_1h._0_1_ = var_2h;\n        break;\n    case 1:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_3h = fcn.00529730(&var_28h);\n        }\n        else {\n            var_3h = fcn.005296d0(&var_28h);\n        }\n        var_1h._0_1_ = var_3h;\n        break;\n    default:\n        var_18h = 0;\n        var_1ch = 0;\n        iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0x9e9, 0, 0x549ca4, L\"(\\\"Invalid integer length modifier\\\", 0)\");\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (var_1ch == 0) {\n            puVar5 = fcn.00530020();\n            *puVar5 = 0x16;\n            fcn.00527f00(L\"(\\\"Invalid integer length modifier\\\", 0)\", \n                         L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::type_case_integer\"\n                         , 0x54d3d8, 0x9e9, 0);\n            return 0;\n        }\n        break;\n    case 3:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_4h = fcn.00529790(&var_28h);\n        }\n        else {\n            var_4h = fcn.00529760(&var_28h);\n        }\n        var_1h._0_1_ = var_4h;\n        break;\n    case 7:\n        cVar2 = fcn.0052a740(0x10);\n        if (cVar2 == '\\0') {\n            var_5h = fcn.00529840(&var_28h);\n        }\n        else {\n            var_5h = fcn.00529840(&var_28h);\n        }\n        var_1h._0_1_ = var_5h;\n    }\n    if (var_1h == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0052aec0();\n        if (cVar2 == '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            cVar2 = fcn.0052a740(0x10);\n            if (((cVar2 == '\\0') || (0 < var_24h)) || (-1 < var_24h)) {\n                var_30h = var_28h;\n                var_2ch = var_24h;\n            }\n            else {\n                var_30h = -var_28h;\n                var_2ch = -(var_24h + (var_28h != 0));\n                fcn.0052aea0(0x40);\n            }\n            if (*(var_ch + 0x28) < 0) {\n                *(var_ch + 0x28) = 1;\n            }\n            else {\n                fcn.0052ddf0(8);\n                fcn.00529580(*(var_ch + 0x28));\n            }\n            if ((var_30h | var_2ch) == 0) {\n                fcn.0052ddf0(0x20);\n            }\n            *(var_ch + 0x3c) = 1;\n            if (var_20h == 8) {\n                fcn.00529dd0(var_30h, var_2ch, arg_8h, arg_ch & 0xff);\n            }\n            else {\n                fcn.00529c00(var_30h, arg_8h, arg_ch & 0xff);\n            }\n            cVar2 = fcn.0052a740(0x80);\n            if ((cVar2 != '\\0') && ((*(var_ch + 0x38) == 0 || (ppiVar6 = fcn.0052c520(),  **ppiVar6 != 0x30)))) {\n                piVar7 = fcn.0052c520();\n                *piVar7 = *piVar7 + -2;\n                **piVar7 = 0x30;\n                *(var_ch + 0x38) = *(var_ch + 0x38) + 1;\n            }\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1509
    },
    "0052d630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052d774)\n// WARNING: Removing unreachable block (ram,0x0052d683)\n// WARNING: Removing unreachable block (ram,0x0052d6fb)\n\nuint fcn.0052d630(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    cVar2 = fcn.005297c0(&var_8h);\n    if (cVar2 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0052aec0();\n        if (cVar2 == '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            iVar3 = fcn.0053b060();\n            if (iVar3 == 0) {\n                iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0xa65, 0, 0x549ca4, L\"(\\\"\\'n\\' format specifier disabled\\\", 0)\");\n                if (iVar3 == 1) {\n                    pcVar1 = swi(3);\n                    uVar4 = (*pcVar1)();\n                    return uVar4;\n                }\n                puVar5 = fcn.00530020();\n                *puVar5 = 0x16;\n                fcn.00527f00(L\"(\\\"\\'n\\' format specifier disabled\\\", 0)\", \n                             L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::type_case_n\"\n                             , 0x54d3d8, 0xa65, 0);\n                uVar4 = 0;\n            }\n            else {\n                iVar3 = fcn.0052c540(*(var_4h + 0x2c));\n    // switch table (8 cases) at 0x52d7f8\n                switch(iVar3 + -1) {\n                case 0:\n                    *var_8h = *(var_4h + 0x18);\n                    break;\n                case 1:\n                    *var_8h = *(var_4h + 0x18);\n                    break;\n                default:\n                    iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0xa6f, 0, 0x549ca4, L\"(\\\"Invalid integer length modifier\\\", 0)\");\n                    if (iVar3 != 1) {\n                        puVar5 = fcn.00530020();\n                        *puVar5 = 0x16;\n                        fcn.00527f00(L\"(\\\"Invalid integer length modifier\\\", 0)\", \n                                     L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class __crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> > >::type_case_n\"\n                                     , 0x54d3d8, 0xa6f, 0);\n                        return 0;\n                    }\n                    pcVar1 = swi(3);\n                    uVar4 = (*pcVar1)();\n                    return uVar4;\n                case 3:\n                    *var_8h = *(var_4h + 0x18);\n                    break;\n                case 7:\n                    iVar3 = *(var_4h + 0x18);\n                    *var_8h = iVar3;\n                    var_8h[1] = iVar3 >> 0x1f;\n                }\n                *(var_4h + 0x30) = 1;\n                uVar4 = 1;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 907
    },
    "0052d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0052d964)\n// WARNING: Removing unreachable block (ram,0x0052d873)\n// WARNING: Removing unreachable block (ram,0x0052d8eb)\n\nuint fcn.0052d820(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    cVar2 = fcn.005297c0(&var_8h);\n    if (cVar2 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0052aec0();\n        if (cVar2 == '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            iVar3 = fcn.0053b060();\n            if (iVar3 == 0) {\n                iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0xa65, 0, 0x549ca4, L\"(\\\"\\'n\\' format specifier disabled\\\", 0)\");\n                if (iVar3 == 1) {\n                    pcVar1 = swi(3);\n                    uVar4 = (*pcVar1)();\n                    return uVar4;\n                }\n                puVar5 = fcn.00530020();\n                *puVar5 = 0x16;\n                fcn.00527f00(L\"(\\\"\\'n\\' format specifier disabled\\\", 0)\", \n                             L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::type_case_n\"\n                             , 0x54d3d8, 0xa65, 0);\n                uVar4 = 0;\n            }\n            else {\n                iVar3 = fcn.0052c540(*(var_4h + 0x2c));\n    // switch table (8 cases) at 0x52d9e8\n                switch(iVar3 + -1) {\n                case 0:\n                    *var_8h = *(var_4h + 0x18);\n                    break;\n                case 1:\n                    *var_8h = *(var_4h + 0x18);\n                    break;\n                default:\n                    iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0xa6f, 0, 0x549ca4, L\"(\\\"Invalid integer length modifier\\\", 0)\");\n                    if (iVar3 != 1) {\n                        puVar5 = fcn.00530020();\n                        *puVar5 = 0x16;\n                        fcn.00527f00(L\"(\\\"Invalid integer length modifier\\\", 0)\", \n                                     L\"__crt_stdio_output::output_processor<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t>,class __crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> > >::type_case_n\"\n                                     , 0x54d3d8, 0xa6f, 0);\n                        return 0;\n                    }\n                    pcVar1 = swi(3);\n                    uVar4 = (*pcVar1)();\n                    return uVar4;\n                case 3:\n                    *var_8h = *(var_4h + 0x18);\n                    break;\n                case 7:\n                    iVar3 = *(var_4h + 0x18);\n                    *var_8h = iVar3;\n                    var_8h[1] = iVar3 >> 0x1f;\n                }\n                *(var_4h + 0x30) = 1;\n                uVar4 = 1;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 923
    },
    "0052daf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052daf0(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.005297c0(param_1 + 0xd);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar2 = 1;\n        }\n        else {\n            if (param_1[10] == -1) {\n                var_8h = 0x7fffffff;\n            }\n            else {\n                var_8h = param_1[10];\n            }\n            cVar1 = fcn.005298a0(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (param_1[0xd] == 0) {\n                    uVar2 = fcn.0052a7b0();\n                    param_1[0xd] = uVar2;\n                }\n                uVar2 = fcn.0052dcd0(var_8h);\n                param_1[0xe] = uVar2;\n            }\n            else {\n                if (param_1[0xd] == 0) {\n                    uVar2 = fcn.0052e0d0();\n                    param_1[0xd] = uVar2;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00532610(param_1[0xd], var_8h);\n                param_1[0xe] = uVar2;\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 424
    },
    "0052dbe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052dbe0(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.005297c0(param_1 + 0xd);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar2 = 1;\n        }\n        else {\n            if (param_1[10] == -1) {\n                var_8h = 0x7fffffff;\n            }\n            else {\n                var_8h = param_1[10];\n            }\n            cVar1 = fcn.00529920(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (param_1[0xd] == 0) {\n                    uVar2 = fcn.0052a7b0();\n                    param_1[0xd] = uVar2;\n                }\n                uVar2 = fcn.0052dd00(var_8h);\n                param_1[0xe] = uVar2;\n            }\n            else {\n                if (param_1[0xd] == 0) {\n                    uVar2 = fcn.0052e0d0();\n                    param_1[0xd] = uVar2;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00532610(param_1[0xd], var_8h);\n                param_1[0xe] = uVar2;\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 422
    },
    "0052de70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0052de70(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = *param_1 != 0;\n    if ((!bVar5) && (iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0xd8, 0, 0x549ca4, L\"_context != nullptr\"),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (!bVar5) {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"_context != nullptr\", L\"__crt_stdio_output::string_output_adapter<char>::validate\", 0x54d3d8, \n                     0xd8, 0);\n    }\n    return bVar5;\n}\n",
        "token_count": 264
    },
    "0052df00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0052df00(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = *param_1 != 0;\n    if ((!bVar5) && (iVar3 = fcn.0052f2d0(2, 0x54d3d8, 0xd8, 0, 0x549ca4, L\"_context != nullptr\"),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (!bVar5) {\n        puVar4 = fcn.00530020();\n        *puVar4 = 0x16;\n        fcn.00527f00(L\"_context != nullptr\", L\"__crt_stdio_output::string_output_adapter<wchar_t>::validate\", 0x54d3d8, \n                     0xd8, 0);\n    }\n    return bVar5;\n}\n",
        "token_count": 266
    },
    "0052df90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0052df90(int32_t param_1)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x1c) == 0) || (*(param_1 + 0x1c) == 7)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((!bVar2) &&\n       (iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x467, 0, 0x549ca4, L\"_state == state::normal || _state == state::type\"), \n       iVar4 == 1)) {\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (!bVar2) {\n        puVar5 = fcn.00530020();\n        *puVar5 = 0x16;\n        fcn.00527f00(L\"_state == state::normal || _state == state::type\", \n                     L\"__crt_stdio_output::format_validation_base<char,class __crt_stdio_output::string_output_adapter<char> >::validate_and_update_state_at_end_of_format_string\"\n                     , 0x54d3d8, 0x467, 0);\n    }\n    return bVar2;\n}\n",
        "token_count": 348
    },
    "0052e030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0052e030(int32_t param_1)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x1c) == 0) || (*(param_1 + 0x1c) == 7)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((!bVar2) &&\n       (iVar4 = fcn.0052f2d0(2, 0x54d3d8, 0x467, 0, 0x549ca4, L\"_state == state::normal || _state == state::type\"), \n       iVar4 == 1)) {\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (!bVar2) {\n        puVar5 = fcn.00530020();\n        *puVar5 = 0x16;\n        fcn.00527f00(L\"_state == state::normal || _state == state::type\", \n                     L\"__crt_stdio_output::format_validation_base<wchar_t,class __crt_stdio_output::string_output_adapter<wchar_t> >::validate_and_update_state_at_end_of_format_string\"\n                     , 0x54d3d8, 0x467, 0);\n    }\n    return bVar2;\n}\n",
        "token_count": 352
    },
    "005308e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.005308e0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.005307c0(param_1);\n    if (iVar1 == 0) {\n        fcn.00527cb0();\n    }\n    return iVar1;\n}\n",
        "token_count": 92
    },
    "00531700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00531700(uint arg_8h, uint arg_ch)\n\n{\n    if (*0x55bd34 < 5) {\n        if (*0x55bd34 < 1) {\n            fcn.005317f0(arg_8h, arg_ch);\n        }\n        else {\n            fcn.00531ae0(arg_8h, arg_ch);\n        }\n    }\n    else {\n        fcn.00531900(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00531900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00531900(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar in_YMM0 [32];\n    uchar auVar5 [32];\n    uchar auVar6 [32];\n    uint32_t uStack72;\n    uint32_t uStack64;\n    uchar (*pauStack40) [32];\n    \n    if (param_1 % 2 == 0) {\n        if (param_1 % 0x20 == 0) {\n            uStack64 = 0;\n        }\n        else {\n            uStack64 = 0x20 - param_1 % 0x20;\n        }\n        if (param_2 < uStack64 >> 1) {\n            uStack72 = param_2;\n        }\n        else {\n            uStack72 = uStack64 >> 1;\n        }\n        uVar3 = fcn.005318a0(param_1, uStack72);\n        if (uVar3 == uStack72) {\n            pauStack40 = param_1 + uVar3 * 2;\n            fcn.00532570();\n            auVar5 = vmovdqu_avx(in_YMM0);\n            auVar5 = vmovdqu_avx(auVar5);\n            auVar5 = vmovdqu_avx(auVar5);\n            iVar1 = pauStack40 + ((param_2 - uStack72) - (param_2 - uStack72) % 0x20) * 2;\n            while (cVar2 = fcn.005323c0(pauStack40, iVar1),  cVar2 == '\\0') {\n                vmovdqu_avx(auVar5);\n                auVar6 = vmovdqu_avx(*pauStack40);\n                fcn.00532450();\n                auVar6 = vmovdqu_avx(auVar6);\n                vmovdqu_avx(auVar6);\n                iVar4 = fcn.00532510(auVar6, auVar5);\n                if (iVar4 != 0) break;\n                pauStack40 = pauStack40[1];\n            }\n            for (; (cVar2 = fcn.005323c0(pauStack40, param_1 + param_2 * 2),  cVar2 == '\\0' && (**pauStack40 != 0));\n                pauStack40 = *pauStack40 + 2) {\n            }\n            uVar3 = pauStack40 - param_1 >> 1;\n            fcn.00532400();\n        }\n    }\n    else {\n        uVar3 = fcn.005317f0(param_1, param_2);\n    }\n    return uVar3;\n}\n",
        "token_count": 619
    },
    "00531ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00531ae0(uint32_t param_1, uint32_t param_2)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint in_XMM0_Da;\n    uint uVar5;\n    uint in_XMM0_Db;\n    uint uVar6;\n    uint in_XMM0_Dc;\n    uint uVar7;\n    uint in_XMM0_Dd;\n    uint uVar8;\n    uint32_t uStack52;\n    uint32_t uStack44;\n    uint *puStack24;\n    \n    if (param_1 % 2 == 0) {\n        if (param_1 % 0x10 == 0) {\n            uStack44 = 0;\n        }\n        else {\n            uStack44 = 0x10 - param_1 % 0x10;\n        }\n        if (param_2 < uStack44 >> 1) {\n            uStack52 = param_2;\n        }\n        else {\n            uStack52 = uStack44 >> 1;\n        }\n        uVar3 = fcn.005318a0(param_1, uStack52);\n        if (uVar3 == uStack52) {\n            puStack24 = param_1 + uVar3 * 2;\n            fcn.005325a0();\n            piVar1 = puStack24 + ((param_2 - uStack52) - (param_2 - uStack52) % 0x10) * 2;\n            while (cVar2 = fcn.005323c0(puStack24, piVar1),  cVar2 == '\\0') {\n                uVar5 = *puStack24;\n                uVar6 = puStack24[1];\n                uVar7 = puStack24[2];\n                uVar8 = puStack24[3];\n                fcn.005324d0();\n                iVar4 = fcn.00532540(CONCAT412(uVar8, CONCAT48(uVar7, CONCAT44(uVar6, uVar5))), in_XMM0_Da, in_XMM0_Db, \n                                     in_XMM0_Dc, in_XMM0_Dd);\n                if (iVar4 != 0) break;\n                puStack24 = puStack24 + 4;\n            }\n            for (; (cVar2 = fcn.005323c0(puStack24, param_1 + param_2 * 2),  cVar2 == '\\0' && (*puStack24 != 0));\n                puStack24 = puStack24 + 2) {\n            }\n            uVar3 = puStack24 - param_1 >> 1;\n            fcn.00524bc0();\n        }\n    }\n    else {\n        uVar3 = fcn.005317f0(param_1, param_2);\n    }\n    return uVar3;\n}\n",
        "token_count": 636
    },
    "00532630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00532630(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_6h;\n    uchar var_5h;\n    char var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uint var_1h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    var_4h = iVar2 != 0;\n    var_1h._0_1_ = var_4h;\n    if (var_4h) {\n        if (arg_8h != 0) {\n            fcn.00532770(&arg_8h);\n        }\n        iVar2 = fcn.00535540();\n        var_5h = iVar2 == 1;\n        var_2h = var_5h;\n        if (!var_5h) {\n            return 4;\n        }\n    }\n    iVar2 = fcn.00535500();\n    var_6h = iVar2 == 2;\n    if ((var_6h) && (var_3h = var_6h,  cVar1 = fcn.005376c0(),  cVar1 != '\\0')) {\n        cVar1 = fcn.005377e0();\n        if (cVar1 == '\\0') {\n            var_10h = arg_10h | 0x200000;\n            var_14h = 0;\n            var_ch = fcn.00532740(&var_14h, &arg_8h, &arg_ch, &var_10h);\n        }\n        else {\n            var_18h = fcn.00537700();\n            var_ch = fcn.00532740(&var_18h, &arg_8h, &arg_ch, &arg_10h);\n        }\n    }\n    else if (var_4h == '\\0') {\n        var_ch = 3;\n    }\n    else {\n        var_ch = 4;\n    }\n    return var_ch;\n}\n",
        "token_count": 514
    },
    "00532910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00532910(int16_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t arg_8h_00;\n    uint uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint arg_10h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        fcn.005339e0();\n        iVar1 = 0;\n    }\n    else if (*arg_8h == 0) {\n        iVar1 = fcn.005336e0();\n        if ((iVar1 != 0) || (iVar1 = fcn.00533560(1),  iVar1 == 0)) {\n            puVar2 = fcn.00533770();\n            *puVar2 = 0;\n            fcn.00533a20(0);\n            iVar1 = 0;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.005333c0(arg_14h, arg_8h, 0, 0);\n        if (arg_8h_00 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0052ffc0(uVar3);\n            piVar4 = fcn.00530020();\n            iVar1 = *piVar4;\n        }\n        else {\n            uVar5 = fcn.005336e0();\n            if ((arg_8h_00 <= uVar5) || (iVar1 = fcn.00533560(arg_8h_00),  iVar1 == 0)) {\n                uVar3 = fcn.005336e0();\n                arg_10h_00 = fcn.00533770();\n                iVar1 = fcn.005333c0(arg_14h, arg_8h, arg_10h_00, uVar3);\n                if (iVar1 == 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    fcn.0052ffc0(uVar3);\n                    piVar4 = fcn.00530020();\n                    iVar1 = *piVar4;\n                }\n                else {\n                    fcn.00533a20(iVar1 + -1);\n                    iVar1 = 0;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 565
    },
    "00532d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00532d80(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char16_t *pcVar3;\n    char16_t *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0052f200(&arg_8h);\n    var_ch = iVar1 + 1;\n    if (-arg_10h - 1U < var_ch) {\n        uVar2 = 0xc;\n    }\n    else {\n        var_8h = arg_10h + 1 + var_ch;\n        uVar2 = fcn.00527400(var_8h, 1, 2, \"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\startup\\\\argv_wildcards.cpp\", 0x98);\n        fcn.0051a770(uVar2);\n        if (arg_10h != 0) {\n            var_10h = fcn.0051a7f0();\n            uVar7 = 0;\n            uVar6 = 0x9c;\n            uVar5 = 0x54fd90;\n            pcVar4 = L\"copy_and_add_argument_to_buffer\";\n            pcVar3 = L\"traits::tcsncpy_s(argument_buffer.get(), required_count, directory, directory_length)\";\n            uVar2 = fcn.00533220(&var_10h, &var_8h, &arg_ch, &arg_10h);\n            fcn.00522f40(uVar2, pcVar3, pcVar4, uVar5, uVar6, uVar7);\n        }\n        var_14h = var_8h - arg_10h;\n        var_18h = fcn.0051a7f0();\n        var_18h = var_18h + arg_10h;\n        uVar7 = 0;\n        uVar6 = 0xa3;\n        uVar5 = 0x54fd90;\n        pcVar4 = L\"copy_and_add_argument_to_buffer\";\n        pcVar3 = \n        L\"traits::tcsncpy_s( argument_buffer.get() + directory_length, required_count - directory_length, file_name, file_name_count)\"\n        ;\n        uVar2 = fcn.00533220(&var_18h, &var_14h, &arg_8h, &var_ch);\n        fcn.00522f40(uVar2, pcVar3, pcVar4, uVar5, uVar6, uVar7);\n        uVar2 = fcn.00523c8c();\n        uVar2 = fcn.00533680(uVar2);\n        fcn.0051a790();\n    }\n    return uVar2;\n}\n",
        "token_count": 687
    },
    "00533560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00533560(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00533520();\n    fcn.005238d0();\n    iVar1 = fcn.00533640(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        *(in_ECX + 0xc) = arg_8h;\n        iVar1 = 0;\n    }\n    else {\n        *(in_ECX + 0x14) = 0;\n        *(in_ECX + 0xc) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 178
    },
    "005335d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.005335d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00533520();\n    fcn.005238d0();\n    iVar1 = fcn.00533640(in_ECX + 8, arg_8h << 1);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        *(in_ECX + 0xc) = arg_8h;\n        iVar1 = 0;\n    }\n    else {\n        *(in_ECX + 0x14) = 0;\n        *(in_ECX + 0xc) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "00533680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00533680(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.005337d0();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.00527470(arg_8h, 2);\n    }\n    return iVar1;\n}\n",
        "token_count": 144
    },
    "00533930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00533930(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = fcn.00533490();\n    iVar2 = fcn.00532a70(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.00533770();\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "00533aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00533aa0(int16_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t arg_8h_00;\n    uint uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint arg_10h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        fcn.00533d70();\n        iVar1 = 0;\n    }\n    else if (*arg_8h == 0) {\n        iVar1 = fcn.005336e0();\n        if ((iVar1 != 0) || (iVar1 = fcn.00533cd0(1),  iVar1 == 0)) {\n            puVar2 = fcn.00533770();\n            *puVar2 = 0;\n            fcn.00533a20(0);\n            iVar1 = 0;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.005333c0(arg_14h, arg_8h, 0, 0);\n        if (arg_8h_00 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0052ffc0(uVar3);\n            piVar4 = fcn.00530020();\n            iVar1 = *piVar4;\n        }\n        else {\n            uVar5 = fcn.005336e0();\n            if ((arg_8h_00 <= uVar5) || (iVar1 = fcn.00533cd0(arg_8h_00),  iVar1 == 0)) {\n                uVar3 = fcn.005336e0();\n                arg_10h_00 = fcn.00533770();\n                iVar1 = fcn.005333c0(arg_14h, arg_8h, arg_10h_00, uVar3);\n                if (iVar1 == 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    fcn.0052ffc0(uVar3);\n                    piVar4 = fcn.00530020();\n                    iVar1 = *piVar4;\n                }\n                else {\n                    fcn.00533a20(iVar1 + -1);\n                    iVar1 = 0;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 568
    },
    "00533cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00533cd0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00533c90();\n    uVar1 = fcn.005238d0();\n    iVar2 = fcn.00533d40(in_ECX + 8, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        *(in_ECX + 0x14) = 1;\n        *(in_ECX + 0xc) = arg_8h;\n        iVar2 = 0;\n    }\n    else {\n        *(in_ECX + 0x14) = 0;\n        *(in_ECX + 0xc) = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 195
    },
    "005352d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.005352d0(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00523fa0(0x55c714);\n    iVar3 = *0x55c714;\n    if (var_4h == 0) {\n        var_ch = arg_8h;\n        var_8h = var_4h;\n        if ((*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8) & 0x80000000) == 0) {\n            fcn.00535450(&var_ch);\n        }\n        var_4h = fcn.00535480(var_ch);\n        iVar3 = var_4h;\n        if (((*0x55c714 != 0) && (iVar3 = var_4h,  *0x55c714 != var_4h)) &&\n           (*0x55c714 = var_4h, \n           iVar2 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\internal\\\\win_policies.cpp\", 0x34, 0, 0x549ca4\n                                , L\"cached_state == static_cast<long>(policyValue)\"),  iVar3 = *0x55c714,  iVar2 == 1))\n        {\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    *0x55c714 = iVar3;\n    return var_4h;\n}\n",
        "token_count": 406
    },
    "00535370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00535370(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00523fa0(0x55c718);\n    iVar3 = *0x55c718;\n    if (var_4h == 0) {\n        var_ch = arg_8h;\n        var_8h = var_4h;\n        if ((*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8) & 0x80000000) == 0) {\n            fcn.00535470(&var_ch);\n        }\n        var_4h = fcn.005354c0(var_ch);\n        iVar3 = var_4h;\n        if (((*0x55c718 != 0) && (iVar3 = var_4h,  *0x55c718 != var_4h)) &&\n           (*0x55c718 = var_4h, \n           iVar2 = fcn.0052f2d0(2, L\"minkernel\\\\crts\\\\ucrt\\\\src\\\\appcrt\\\\internal\\\\win_policies.cpp\", 0x34, 0, 0x549ca4\n                                , L\"cached_state == static_cast<long>(policyValue)\"),  iVar3 = *0x55c718,  iVar2 == 1))\n        {\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    *0x55c718 = iVar3;\n    return var_4h;\n}\n",
        "token_count": 406
    },
    "00536120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00536120(int32_t *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        if (*arg_8h != *0x55b660) {\n            fcn.00527470(*arg_8h, 2);\n        }\n        if (arg_8h[1] != *0x55b664) {\n            fcn.00527470(arg_8h[1], 2);\n        }\n        if (arg_8h[2] != *0x55b668) {\n            fcn.00527470(arg_8h[2], 2);\n        }\n        if (arg_8h[0xc] != *0x55b690) {\n            fcn.00527470(arg_8h[0xc], 2);\n        }\n        if (arg_8h[0xd] != *0x55b694) {\n            fcn.00527470(arg_8h[0xd], 2);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00537340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00537340(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00536db0();\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        uVar2 = fcn.00537330(arg_8h);\n        (**0x54919c)(uVar2);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 132
    },
    "00537380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00537380(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00536dd0();\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        uVar2 = fcn.00537330(arg_8h);\n        (**0x54919c)(uVar2);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 132
    },
    "005373c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.005373c0(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00536df0();\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        uVar2 = fcn.00537330(arg_8h);\n        (**0x54919c)(uVar2);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 133
    },
    "005375a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.005375a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00536f50();\n    if (pcVar1 == NULL) {\n        uVar3 = 0;\n        uVar2 = fcn.00537620(arg_8h, 0);\n        (*_sym.imp.KERNEL32.dll_LCMapStringW)(uVar2, arg_8h, uVar3, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        (**0x54919c)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00537670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00537670(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00536fb0();\n    if (pcVar1 == NULL) {\n        fcn.00527cb0();\n    }\n    else {\n        (**0x54919c)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0053b8d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053b8d6(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        LOCK();\n        *0x55b788 = *0x55b788 + -1;\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0053c28b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053c28b(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        LOCK();\n        *0x55b788 = *0x55b788 + -1;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00544c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00544c50(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint arg_14h;\n    bool bVar5;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    double dVar6;\n    uint64_t uVar7;\n    uint unaff_retaddr;\n    ulong uStack12;\n    \n    bVar5 = *0x64f004 == 0;\n    if (!bVar5) {\n        bVar5 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar5) {\n            uStack12._0_6_ = CONCAT24(in_FPUControlWord, uStack12);\n            uStack12 = uStack12 & 0xffff000000000000 | uStack12;\n            uStack12._4_2_ = uStack12 >> 0x20;\n            bVar5 = (uStack12._4_2_ & 0x7f) == 0x7f;\n        }\n        if (bVar5) {\n            dVar6 = CONCAT44(param_2, param_1);\n            iVar4 = 0;\n            while( true ) {\n                uVar2 = dVar6 >> 0x34;\n                uVar3 = uVar2 - 1;\n                if (uVar3 < 0x7fe) {\n                    return (SUB82(*0x556230 + (dVar6 & *0x556210 | *0x556280), 0) & 0x7f0) +\n                           ((uVar2 - 0x3ff) + iVar4) * 0x400;\n                }\n                uStack12 = -(*0x556290 == CONCAT44(param_2, param_1));\n                if (uStack12 != 0) break;\n                if (uVar3 != 0xffffffff) {\n                    if (uVar3 < 0x7ff) {\n                        uVar2 = -(*0x556280 == (CONCAT44(param_2, param_1) & *0x556210 | *0x556280));\n                        if (uVar2 != 0) {\n                            return uVar2;\n                        }\n                        arg_14h = 0x3e9;\n                        uStack12 = *0x556210;\n                    }\n                    else if (((uVar2 & 0x7ff) < 0x7ff) || ((param_1 | param_2 & 0xfffff) == 0)) {\n                        uStack12 = 0xfff8000000000000;\n                        arg_14h = 9;\n                    }\n                    else {\n                        arg_14h = 0x3e9;\n                    }\n                    goto code_r0x0054580a;\n                }\n                dVar6 = CONCAT44(param_2, param_1) * *0x5562a0;\n                iVar4 = -0x34;\n            }\n            arg_14h = 8;\n            uStack12 = *0x5562b0;\ncode_r0x0054580a:\n            uVar2 = fcn.00545870(&stack0x00000004, &stack0x00000004, &uStack12, arg_14h);\n            return uVar2;\n        }\n    }\n    uVar7 = fcn.00546b35();\n    uVar2 = uVar7 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (bVar5) {\n        if (((uVar7 & 0xfffff) != 0) || (param_1 != 0)) {\n            uStack12 = CONCAT44(0x5455a4, uStack12);\n            uVar3 = fcn.00546b1c();\n            goto code_r0x005455c1;\n        }\n        uVar3 = uVar7 & 0x80000000;\n        if ((uVar7 & 0x80000000) == 0) goto code_r0x00545555;\n    }\n    else {\n        if ((((param_2 & 0x7ff00000) == 0) && ((param_2 & 0xfffff) == 0)) && (param_1 == 0)) {\n            uVar3 = 2;\n            goto code_r0x005455c1;\n        }\n        uVar3 = param_2;\n        if ((param_2 & 0x80000000) == 0) {\ncode_r0x00545555:\n            if (*0x55ca5c != 0) {\n                return uVar3;\n            }\n            uVar1 = uVar3 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar1 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uStack12 = CONCAT44(0x546bbe, uStack12);\n                    uVar2 = fcn.00546c97(uVar2, unaff_retaddr, param_1, param_2);\n                    return uVar2;\n                }\n                uVar1 = uVar1 & 0xffff0020;\n            }\n            return uVar1;\n        }\n    }\n    uVar3 = 1;\ncode_r0x005455c1:\n    if (*0x55ca5c != 0) {\n        return uVar3;\n    }\n    uStack12 = CONCAT44(0x5455de, uStack12);\n    uVar2 = fcn.00546c97(uVar2, unaff_retaddr, param_1, param_2);\n    return uVar2;\n}\n",
        "token_count": 1338
    },
    "00545528": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00545528(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = in_EAX & 0x80000000;\n            uVar2 = uVar1;\n            goto joined_r0x00545577;\n        }\n        uVar2 = fcn.00546b1c();\n    }\n    else {\n        uVar2 = param_4;\n        if ((param_4 & 0x7ff00000) == 0) {\n            if (((param_4 & 0xfffff) == 0) && (param_3 == 0)) {\n                uVar2 = 2;\n                goto code_r0x005455c1;\n            }\n            uVar1 = param_4 & 0x80000000;\n        }\n        else {\n            uVar1 = param_4 & 0x80000000;\n        }\njoined_r0x00545577:\n        if (uVar1 == 0) {\n            if (*0x55ca5c == 0) {\n                uVar1 = uVar2 & 0xffff0000 | in_FPUControlWord;\n                if (in_FPUControlWord != 0x27f) {\n                    if (((in_FPUControlWord & 0x20) != 0) &&\n                       (uVar1 = uVar2 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                        uVar3 = fcn.00546c97(arg_8h, unaff_retaddr, param_3, param_4);\n                        return CONCAT44(arg_8h, uVar3);\n                    }\n                    uVar1 = uVar1 & 0xffff0020;\n                }\n                return CONCAT44(arg_8h, uVar1);\n            }\n            goto code_r0x00546b8e;\n        }\n        uVar2 = 1;\n    }\ncode_r0x005455c1:\n    if (*0x55ca5c == 0) {\n        uVar3 = fcn.00546c97(arg_8h, unaff_retaddr, param_3, param_4);\n        return CONCAT44(arg_8h, uVar3);\n    }\ncode_r0x00546b8e:\n    return CONCAT44(arg_8h, uVar2);\n}\n",
        "token_count": 659
    },
    "005455fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.005455fe(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x556210 | *0x556280;\n        dVar7 = SUB168(in_XMM0, 0) & *0x556218 | *0x556288;\n        uVar1 = SUB82(*0x556230 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x556248 & dVar7;\n        dVar9 = (*0x556240 & dVar6) * *(uVar1 + 0x5568d0) - *0x556220;\n        dVar6 = (dVar6 - (*0x556240 & dVar6)) * *(uVar1 + 0x5568d0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x5568d8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x5568d8) - *0x556228);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x5562d8 * dVar11 + *0x5562e8) * dVar11 + *0x5562f8) * dVar11 * dVar11 +\n                   ((*0x5562d0 * dVar7 + *0x5562e0) * dVar7 + *0x5562f0) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x556300 * dVar7 + *(uVar1 + 0x5564c8) + dVar10 * *0x556258 + (dVar8 & *(iVar5 + 0x556268)) +\n                   *(uVar1 + 0x5564c0) + dVar9 + dVar10 * *0x556250 + (dVar6 & *(iVar5 + 0x556260));\n        }\n        dStack12 = -(*0x556290 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x556280 == (param_1 & *0x556210 | *0x556280)) {\n                    return *0x5562b8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x556210;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0054580a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x5562a0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x5562b0;\ncode_r0x0054580a:\n    fcn.00545870(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1006
    },
    "00548540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00548540(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x55bd34) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 260
    },
    "00510b10": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar fcn.00510b10(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    char cVar7;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_dh;\n    uint var_2h;\n    \n    uVar4 = *0x55b94c;\n    uVar3 = *0x55b8e2;\n    uVar2 = *0x55b8c4;\n    uVar1 = *0x55b8c0;\n    cVar7 = *0x55b8cc;\n    var_20h = 0x77c2;\n    iVar6 = fcn.00548310(*0x55b8e3, *0x55b8e3 >> 0x1f, 0x2c7df1e2, 0x4f2d);\n    *0x55b8d0 = *0x55b8d0 + iVar6;\n    *0x55b8e7 = cVar7 << 7;\n    if (*0x55b8e2 == 0) {\n        if ((uVar4 | (*0x55b960 | *0x55b964) == 0) != 0) {\n            var_30h = *0x55b924 == 0;\n            *0x55b90c = -1 - (~*0x55b968 & var_30h * 0x48);\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetCaretBlinkTime)();\n    }\n    uVar5 = fcn.00511470(0, 0x39, uVar4, 0, 0x8c);\n    *0x55b924 = uVar5;\n    if ((*0x55b924 != 0) < (*0x55b924 != 0x28)) {\n        if ((*0x55b958 == *0x55b908) && (*0x55b95c == 0)) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = 1;\n        }\n        var_58h = var_54h != uVar3 * -0x88;\n        if (var_58h != 0xffffffff) {\n            *0x55b8e3 = uVar5 + 6;\n        }\n    }\n    else if ((uVar1 | uVar2) != 0) {\n        var_20h = 0x3d7034de;\n    }\n    *0x55b8cb = 0xf8;\n    *0x55b920 = (var_20h == 0) + 0x5406;\n    return *0x55b920;\n}\n",
        "token_count": 1163
    },
    "00512f40": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2h\n\nint32_t fcn.00512f40(void)\n\n{\n    int32_t iVar1;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_2h;\n    \n    *0x55b8cf = 1;\n    iVar1 = *0x55b948 + -0x6eb075cd;\n    *0x55b8e6 = fcn.005481e0(*0x55b96c, *0x55b96c >> 0x1f, *0x55b96c, *0x55b96c >> 0x1f, *0x55b8c0, *0x55b8c4, \n                             0xadd46645, 0x70a0e, 0xefb, 0, 0x9dfc260c, 0x91baa, *0x55b958, *0x55b95c, *0x55b918, \n                             *0x55b91c, 0xc8a57f16, 0, 0x95, 0x9447, *0x55b958, 0x5d934272, 0x83a2, *0x55b968, *0x55b8cc\n                             , 0x730c, *0x55b8e6, *0x55b8d4, 0x62b4, *0x55b94c, 0x42, 0x9dedc211, 0x25, *0x55b8d2, 0, \n                             0x70a6baba, 0, 0xadd6d0e9, *0x55b8e3, 0xb651, *0x55b8d2, *0x55b8e4, 0xfac7, 0xf81b, \n                             *0x55b8cb, 0xbb83, 0x7ca6, 0xa1a, *0x55b90a, *0x55b8ca);\n    *0x55b908 = 1;\n    *0x55b92c = *0x55b928 + -0x39d9854;\n    return iVar1;\n}\n",
        "token_count": 1663
    },
    "null": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl method.std::bad_exception.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0051d220();\n    if ((arg_8h & 1) != 0) {\n        fcn.005482f0(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "005465f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.005465f5(void)\n\n{\n    if (*0x55b8a0 == -2) {\n        fcn.005465d6();\n    }\n    return *0x55b8a0 != -1;\n}\n",
        "token_count": 53
    },
    "00546614": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00546614(void)\n\n{\n    if ((*0x55b8a0 != -1) && (*0x55b8a0 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x55b8a0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0052ce30": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0052ce30(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint *arg_ch;\n    uint arg_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = 0;\n    cVar1 = fcn.00529870(&var_4h);\n    if (cVar1 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        cVar1 = fcn.0052aec0();\n        if (cVar1 == '\\0') {\n            uVar4 = 1;\n        }\n        else {\n            cVar1 = fcn.00529920(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                var_8h._0_1_ = var_4h;\n                var_8h._1_1_ = 0;\n                uVar4 = param_1[2];\n                arg_10h = *(*param_1[2] + 4);\n                arg_ch = &var_8h;\n                arg_8h = fcn.00529460();\n                iVar2 = fcn.00538de0(arg_8h, arg_ch, arg_10h, uVar4);\n                if (iVar2 < 0) {\n                    *(param_1 + 0xc) = 1;\n                }\n            }\n            else {\n                puVar3 = fcn.00529460();\n                *puVar3 = var_4h;\n            }\n            uVar4 = fcn.00529460();\n            param_1[0xd] = uVar4;\n            param_1[0xe] = 1;\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 471
    },
    "00535880": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00535880(uint32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((arg_8h >> 6) * 4 + 0x55c720) + (arg_8h & 0x3f) * 0x38);\n    return;\n}\n",
        "token_count": 74
    },
    "005358b0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005358b0(uint32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg_8h >> 6) * 4 + 0x55c720) + (arg_8h & 0x3f) * 0x38);\n    return;\n}\n",
        "token_count": 76
    },
    "00546b35": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00546b35(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00510700": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain obfuscated stackstrings"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00510ae8)\n\nulong fcn.00510700(void)\n\n{\n    int16_t iVar1;\n    ulong uVar2;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_7h;\n    uint var_18h;\n    uint var_14h;\n    uint var_1h;\n    \n    *0x55b8ce = *0x55b8ce + -0x60;\n    iVar1 = fcn.00548310(*0x55b94c, 0, 0x6761484a, 0xb303a);\n    *0x55b94c = *0x55b94c + iVar1;\n    *0x55b8e8 = 4;\n    // WARNING: Could not recover jumptable at 0x005109d2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x510af4\n    uVar2 = (**0x510b04)();\n    return uVar2;\n}\n",
        "token_count": 610
    },
    "0052a540": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0052a540(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0052c4f0();\n    if ((arg_8h < ' ') || ('z' < arg_8h)) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.0052a390(arg_8h + -0x20);\n        var_4h = *(iVar1 + 4);\n    }\n    iVar1 = fcn.0052c4e0();\n    puVar2 = fcn.0052a390(iVar1 * var_4h + arg_ch);\n    return *puVar2;\n}\n",
        "token_count": 202
    },
    "0052a5b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0052a5b0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0052c4f0();\n    if ((arg_8h < 0x20) || (0x7a < arg_8h)) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.0052a390(arg_8h - 0x20);\n        var_4h = *(iVar1 + 4);\n    }\n    iVar1 = fcn.0052c4e0();\n    puVar2 = fcn.0052a390(iVar1 * var_4h + arg_ch);\n    return *puVar2;\n}\n",
        "token_count": 209
    },
    "0052af00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052af00(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    // switch table (17 cases) at 0x52af78\n    switch(*(param_1 + 0x31)) {\n    case 0x20:\n        fcn.0052aea0(2);\n        break;\n    case 0x23:\n        fcn.0052aea0(0x20);\n        break;\n    case 0x2b:\n        fcn.0052aea0(1);\n        break;\n    case 0x2d:\n        fcn.0052aea0(4);\n        break;\n    case 0x30:\n        fcn.0052aea0(8);\n    }\n    return 1;\n}\n",
        "token_count": 177
    },
    "0052afb0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0052afb0(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    // switch table (17 cases) at 0x52b028\n    switch(*(param_1 + 0x32)) {\n    case 0x20:\n        fcn.0052aea0(2);\n        break;\n    case 0x23:\n        fcn.0052aea0(0x20);\n        break;\n    case 0x2b:\n        fcn.0052aea0(1);\n        break;\n    case 0x2d:\n        fcn.0052aea0(4);\n        break;\n    case 0x30:\n        fcn.0052aea0(8);\n    }\n    return 1;\n}\n",
        "token_count": 177
    },
    "00512c30": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00512c30(void)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_15h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x55b8d0;\n    var_4h._3_1_ = *0x55b938;\n    iVar2 = *0x55b8f0;\n    uVar3 = *0x55b8d3;\n    if (uVar3 != 0) {\n        for (var_28h = 0; var_28h < 0x32c; var_28h = var_28h + 1) {\n            for (var_2ch = 0; var_2ch < 0x250; var_2ch = var_2ch + 1) {\n                fcn.00548310();\n                uVar3 = 0;\n                *0x55b8e3 = *0x55b8e3 + '\\x01';\n            }\n            uVar3 = uVar3 & 0xffffff00;\n            var_4h._3_1_ = var_4h._3_1_ + '\\x01';\n        }\n    }\n    if ((var_4h._3_1_ == '\\0') && (uVar3 = uVar1,  6 < uVar3)) {\n        uVar3 = iVar2 - 1;\n    }\n    return uVar3 & 0xffffff00 | 0xa1;\n}\n",
        "token_count": 673
    },
    "0053c3d0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0053c3d0(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint var_1h;\n    \n    iVar1 = fcn.0053cd10(arg_8h & 0xffff, arg_ch & 0xffff);\n    if (iVar1 != 0) {\n        arg_14h = arg_10h;\n    }\n    return arg_14h;\n}\n",
        "token_count": 129
    },
    "00519630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00519630(void)\n\n{\n    main(2);\n    return;\n}\n",
        "token_count": 20
    },
    "0051a050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0051a05f)\n// WARNING: Removing unreachable block (ram,0x0051a060)\n// WARNING: Removing unreachable block (ram,0x0051a066)\n// WARNING: Removing unreachable block (ram,0x0051a070)\n// WARNING: Removing unreachable block (ram,0x0051a07b)\n\nvoid fcn.0051a050(void)\n\n{\n    return;\n}\n",
        "token_count": 98
    },
    "0051a0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051a0e0(uint arg_8h)\n\n{\n    fcn.0051a0c0(arg_8h);\n    return;\n}\n",
        "token_count": 39
    },
    "0051b310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051b310(uint arg_8h)\n\n{\n    fcn.0051a7d0(arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "0051b340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0051b340(void)\n\n{\n    fcn.0051b430(0, \"FlsAlloc\", 0x549e64, \"FlsAlloc\");\n    return;\n}\n",
        "token_count": 44
    },
    "0051b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0051b360(void)\n\n{\n    fcn.0051b430(1, \"FlsFree\", 0x549e78, \"FlsFree\");\n    return;\n}\n",
        "token_count": 44
    },
    "0051b380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0051b380(void)\n\n{\n    fcn.0051b430(2, \"FlsGetValue\", 0x549e88, \"FlsGetValue\");\n    return;\n}\n",
        "token_count": 44
    },
    "0051b3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0051b3a0(void)\n\n{\n    fcn.0051b430(3, \"FlsSetValue\", 0x549e9c, \"FlsSetValue\");\n    return;\n}\n",
        "token_count": 47
    },
    "0051b3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0051b3c0(void)\n\n{\n    fcn.0051b430(4, \"InitializeCriticalSectionEx\", 0x549eb0, \"InitializeCriticalSectionEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "0051d460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051d460(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0051c5c0(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 66
    },
    "0051dac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051dac0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0051ce80(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "0051ef80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051ef80(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0051f170(\"IND)ind)\", \"ind)\", 4, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "0051efb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0051efb0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0051f170(\"SNAN)\", \"snan)\", 5, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00522810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00522810(uint arg_8h)\n\n{\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    \n    fcn.0051e430(arg_8h, 0, unaff_EBP, unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, in_stack_00000010, \n                 in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, \n                 in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034);\n    return;\n}\n",
        "token_count": 269
    },
    "00523410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00523410(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    fcn.00533dd0(*arg_8h, arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "005237a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005237a0(uint *arg_8h)\n\n{\n    fcn.00523a70(*arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "00523ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00523ea0(void)\n\n{\n    uint var_4h;\n    \n    fcn.00522fc0(0);\n    return;\n}\n",
        "token_count": 35
    },
    "00523ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00523ec0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559760;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.00524040();\n    var_4h = 0xfffffffe;\n    fcn.00523f1a(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 254
    },
    "00523fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00523fa0(uint arg_8h)\n\n{\n    fcn.0051a7d0(arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "00524000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00524000(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00535240(*param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "00524020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00524020(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.005352b0(*param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "005241e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.005241e0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00523000();\n    if (*param_1 != iVar1) {\n        fcn.00524220(*param_1);\n        iVar1 = fcn.00523000();\n        *param_1 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00524600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00524600(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559780;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.00524700();\n    var_4h = 0xfffffffe;\n    fcn.0052465a(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 252
    },
    "005249f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.005249f0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x5597c8;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    uVar1 = fcn.00524bd0();\n    var_4h = 0xfffffffe;\n    fcn.00524a54(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 276
    },
    "00524a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00524a80(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x5597e8;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    uVar1 = fcn.00524de0();\n    var_4h = 0xfffffffe;\n    fcn.00524ae4(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 276
    },
    "00524fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00524fb0(uint arg_8h)\n\n{\n    fcn.00525060(0x55c54c, arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "00526364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00526364(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 26
    },
    "00526e5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00526e5a(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 28
    },
    "005271b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005271b0(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 27
    },
    "0052722d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0052722d(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 27
    },
    "005273bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005273bc(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 26
    },
    "005274fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005274fd(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 26
    },
    "005276e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005276e6(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 27
    },
    "0052778f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0052778f(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 27
    },
    "005297c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.005297c0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.00529a20(in_ECX + 0x14);\n    *arg_8h = uVar1;\n    return 1;\n}\n",
        "token_count": 79
    },
    "00529ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00529ad0(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00538da0(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00529b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00529b00(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00538dc0(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "0052b1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0052b1c0(int32_t param_1)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    cVar1 = fcn.0052b260(0);\n    if (cVar1 != '\\0') {\n        fcn.0052e0e0(*(param_1 + 0x31), param_1 + 0x18);\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 102
    },
    "0052b210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0052b210(int32_t param_1)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    cVar1 = fcn.0052b360(0);\n    if (cVar1 != '\\0') {\n        fcn.0052e170(*(param_1 + 0x32), param_1 + 0x18);\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 98
    },
    "0052f1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0052f1c0(uint arg_8h)\n\n{\n    fcn.00527c20(arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "0052f1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0052f1e0(uint arg_8h)\n\n{\n    fcn.005325f0(arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "0052f220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0052f220(uint *arg_8h)\n\n{\n    fcn.005325f0(*arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "0052ffc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0052ffc0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = fcn.0052fff0();\n    *puVar1 = arg_8h;\n    uVar2 = fcn.0052ff40(arg_8h);\n    puVar1 = fcn.00530020();\n    *puVar1 = uVar2;\n    return;\n}\n",
        "token_count": 99
    },
    "00530050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00530050(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559968;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.00530430();\n    var_4h = 0xfffffffe;\n    fcn.005300aa(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 251
    },
    "005300d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005300d0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x5599c8;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.005303c0();\n    var_4h = 0xfffffffe;\n    fcn.0053012a(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 256
    },
    "00530150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00530150(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559988;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.00530390();\n    var_4h = 0xfffffffe;\n    fcn.005301aa(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 251
    },
    "005301d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005301d0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x5599a8;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.005303e0();\n    var_4h = 0xfffffffe;\n    fcn.0053022a(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 256
    },
    "005309d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005309d0(uint arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = fcn.00523050();\n    if (*arg_ch != *piVar2) {\n        cVar1 = fcn.005309a0(arg_8h);\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00536c50();\n            *arg_ch = iVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00530a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00530a10(uint arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = fcn.00523050();\n    if (*arg_ch != *piVar2) {\n        cVar1 = fcn.005309a0(arg_8h);\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.005349e0();\n            *arg_ch = iVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "005317f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.005317f0(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        cVar1 = fcn.005323c0(var_4h, arg_8h + arg_ch);\n        if ((cVar1 != '\\0') || (*var_4h == 0)) break;\n        var_4h = var_4h + 1;\n    }\n    return var_4h - arg_8h >> 1;\n}\n",
        "token_count": 149
    },
    "005325d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005325d0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00531750(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 41
    },
    "00532610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00532610(uint arg_8h, uint arg_ch)\n\n{\n    fcn.005317a0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 41
    },
    "00532790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00532790(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00532630(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 51
    },
    "00532a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00532a70(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    unkuint3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = in_ECX;\n    fcn.00532910(arg_8h, arg_ch, auStack8 + 2, arg_10h);\n    return;\n}\n",
        "token_count": 109
    },
    "00533520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00533520(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.005238d0();\n        fcn.00533790(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00533700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00533700(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00533970();\n    if (*param_1 != iVar1) {\n        fcn.00533740(*param_1);\n        iVar1 = fcn.00533970();\n        *param_1 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "005339c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005339c0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0053e2b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 44
    },
    "00533bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00533bd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    unkuint3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = in_ECX;\n    fcn.00533aa0(arg_8h, arg_ch, auStack8 + 2, arg_10h);\n    return;\n}\n",
        "token_count": 110
    },
    "00533c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00533c90(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        uVar1 = fcn.005238d0();\n        fcn.00533d60(*(param_1 + 8), uVar1);\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00533e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00533e90(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559a28;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.00533ff0();\n    var_4h = 0xfffffffe;\n    fcn.00533eea(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 254
    },
    "005348ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005348ef(void)\n\n{\n    fcn.005352b0(5);\n    return;\n}\n",
        "token_count": 26
    },
    "00535240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00535240(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x55c5c0);\n    return;\n}\n",
        "token_count": 50
    },
    "005352b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005352b0(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x55c5c0);\n    return;\n}\n",
        "token_count": 52
    },
    "00535500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00535500(void)\n\n{\n    fcn.005352d0(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00535540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00535540(void)\n\n{\n    fcn.00535370(2);\n    return;\n}\n",
        "token_count": 25
    },
    "00535858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00535858(void)\n\n{\n    fcn.005352b0(7);\n    return;\n}\n",
        "token_count": 26
    },
    "00535ee3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00535ee3(void)\n\n{\n    fcn.005352b0(7);\n    return;\n}\n",
        "token_count": 27
    },
    "00536400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00536400(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00536630(*param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "00536ceb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536ceb(void)\n\n{\n    fcn.005352b0(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00536db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536db0(void)\n\n{\n    fcn.00537020(0x1c, \"AppPolicyGetProcessTerminationMethod\", 0x55159c, \"AppPolicyGetProcessTerminationMethod\");\n    return;\n}\n",
        "token_count": 54
    },
    "00536dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536dd0(void)\n\n{\n    fcn.00537020(0x1e, \"AppPolicyGetShowDeveloperDiagnostic\", 0x5515c8, \"AppPolicyGetShowDeveloperDiagnostic\");\n    return;\n}\n",
        "token_count": 53
    },
    "00536df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536df0(void)\n\n{\n    fcn.00537020(0x1f, \"AppPolicyGetWindowingModel\", 0x5515f0, \"AppPolicyGetWindowingModel\");\n    return;\n}\n",
        "token_count": 53
    },
    "00536ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536ed0(void)\n\n{\n    fcn.00537020(10, \"GetLastActivePopup\", 0x5514d8, \"GetLastActivePopup\");\n    return;\n}\n",
        "token_count": 46
    },
    "00536ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536ef0(void)\n\n{\n    fcn.00537020(0xc, \"GetProcessWindowStation\", 0x5514f4, \"GetProcessWindowStation\");\n    return;\n}\n",
        "token_count": 47
    },
    "00536f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536f10(void)\n\n{\n    fcn.00537020(0x10, \"GetUserObjectInformationW\", 0x551514, \"GetUserObjectInformationW\");\n    return;\n}\n",
        "token_count": 48
    },
    "00536f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536f30(void)\n\n{\n    fcn.00537020(0x12, \"InitializeCriticalSectionEx\", 0x551538, 0x551540);\n    return;\n}\n",
        "token_count": 45
    },
    "00536f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536f50(void)\n\n{\n    fcn.00537020(0x14, \"LCMapStringEx\", 0x551540, \"LCMapStringEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "00536f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536f70(void)\n\n{\n    fcn.00537020(0x16, \"LocaleNameToLCID\", 0x551558, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 48
    },
    "00536f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536f90(void)\n\n{\n    fcn.00537020(0x18, \"MessageBoxA\", 0x551574, \"MessageBoxA\");\n    return;\n}\n",
        "token_count": 42
    },
    "00536fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00536fb0(void)\n\n{\n    fcn.00537020(0x19, \"MessageBoxW\", 0x551588, \"MessageBoxW\");\n    return;\n}\n",
        "token_count": 42
    },
    "00537b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00537b30(void)\n\n{\n    fcn.005352b0(0);\n    return;\n}\n",
        "token_count": 27
    },
    "00537b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00537b50(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559ae8;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    uVar1 = fcn.00537c20();\n    var_4h = 0xfffffffe;\n    fcn.00537bb4(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 275
    },
    "00537c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00537c20(uint param_1)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = fcn.00523050(param_1);\n    fcn.00522f90(*puVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "005380ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005380ac(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.005352b0(3);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00538da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00538da0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    \n    fcn.00538d20(arg_8h, arg_ch, arg_10h, 0, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 89
    },
    "00538dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00538dc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    \n    fcn.00538d60(arg_8h, arg_ch, arg_10h, 0, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 89
    },
    "0053b000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053b000(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.005237c0(arg_8h);\n    iVar1 = fcn.00521cc0();\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 82
    },
    "0053b030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053b030(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.005237c0(arg_8h);\n    iVar1 = fcn.00521cc0();\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 83
    },
    "0053b717": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0053b717(void)\n\n{\n    fcn.005352b0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "0053bf95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0053bf95(void)\n\n{\n    fcn.005352b0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "0053c3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0053c3b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0053cd00(arg_8h, arg_ch);\n    return iVar1 << (arg_10h & 0x1f);\n}\n",
        "token_count": 77
    },
    "0053c410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0053c410(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    iVar1 = fcn.0053cd00(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        arg_14h = arg_10h;\n    }\n    return arg_14h;\n}\n",
        "token_count": 115
    },
    "0053c490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053c490(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0053cd00(arg_8h >> (arg_10h & 0x1f), arg_ch);\n    return;\n}\n",
        "token_count": 62
    },
    "0053c4b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053c4b0(uint arg_8h)\n\n{\n    fcn.0053cb60(arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "0053cb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0053cb60(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.0053c410(arg_8h, 0x20, 1, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 0x10, 2, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 8, 4, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 4, 8, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 1, 0x10, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 2, 0x20, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    return var_4h;\n}\n",
        "token_count": 321
    },
    "0053cc30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0053cc30(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.0053c410(arg_8h, 1, 0x20, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 2, 0x10, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 4, 8, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 8, 4, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 0x10, 1, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    uVar1 = fcn.0053c410(arg_8h, 0x20, 2, 0);\n    fcn.0053cd60(&var_4h, uVar1);\n    return var_4h;\n}\n",
        "token_count": 321
    },
    "0053cda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053cda0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    \n    arg_ch = fcn.0053c3b0(arg_8h, 0x300, 0x16);\n    arg_8h_00 = fcn.0053c3b0(arg_8h, 0x3f, 0x18);\n    fcn.0053cd30(arg_8h_00, arg_ch);\n    return;\n}\n",
        "token_count": 117
    },
    "0053cde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053cde0(uint arg_8h)\n\n{\n    fcn.0053c3b0(arg_8h, 0x3f, 0x18);\n    return;\n}\n",
        "token_count": 49
    },
    "0053ce00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053ce00(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    \n    arg_ch = fcn.0053c3b0(arg_8h, 0x300, 0xe);\n    arg_8h_00 = fcn.0053c3b0(arg_8h, 0x3f, 0x10);\n    fcn.0053cd30(arg_8h_00, arg_ch);\n    return;\n}\n",
        "token_count": 115
    },
    "0053ce40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053ce40(uint arg_8h)\n\n{\n    fcn.0053c3b0(arg_8h, 0x3f, 0x10);\n    return;\n}\n",
        "token_count": 48
    },
    "0053ce60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053ce60(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    \n    arg_ch = fcn.0053c490(arg_8h, 0x300, 0x16);\n    arg_8h_00 = fcn.0053c490(arg_8h, 0x3f, 0x18);\n    fcn.0053cd30(arg_8h_00, arg_ch);\n    return;\n}\n",
        "token_count": 112
    },
    "0053cea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053cea0(uint arg_8h)\n\n{\n    fcn.0053c490(arg_8h, 0x3f, 0x18);\n    return;\n}\n",
        "token_count": 46
    },
    "0053cec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053cec0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    \n    arg_ch = fcn.0053c490(arg_8h, 0x300, 0xe);\n    arg_8h_00 = fcn.0053c490(arg_8h, 0x3f, 0x10);\n    fcn.0053cd30(arg_8h_00, arg_ch);\n    return;\n}\n",
        "token_count": 111
    },
    "0053cf00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053cf00(uint arg_8h)\n\n{\n    fcn.0053c490(arg_8h, 0x3f, 0x10);\n    return;\n}\n",
        "token_count": 46
    },
    "0053d290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053d290(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0053cea0(arg_8h);\n    fcn.0053cc30(arg_8h_00);\n    return;\n}\n",
        "token_count": 67
    },
    "0053d330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053d330(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0053cf00(arg_8h);\n    fcn.0053cc30(arg_8h_00);\n    return;\n}\n",
        "token_count": 67
    },
    "0053f320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053f320(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559bb0;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.0053f4e0();\n    var_4h = 0;\n    fcn.0053f520();\n    var_4h = 0xfffffffe;\n    fcn.0053f37a(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 259
    },
    "0053f3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0053f3a0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559bd0;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00524000();\n    var_4h = 0;\n    fcn.0053f5b0();\n    var_4h = 0xfffffffe;\n    fcn.0053f3fa(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 260
    },
    "0053f4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0053f4e0(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0053b000(*param_1);\n    return;\n}\n",
        "token_count": 45
    },
    "0053f500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0053f500(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0053b030(*param_1);\n    return;\n}\n",
        "token_count": 43
    },
    "0053f970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0053f970(void)\n\n{\n    fcn.0053f680(1);\n    return;\n}\n",
        "token_count": 27
    },
    "005412b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.005412b0(void)\n\n{\n    fcn.005352b0(8);\n    return;\n}\n",
        "token_count": 27
    },
    "00542a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00542a50(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559c58;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00542be0();\n    var_4h = 0;\n    uVar1 = fcn.00542b40();\n    var_4h = 0xfffffffe;\n    fcn.00542ab4(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 276
    },
    "00542b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00542b20(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.005358b0(*param_1);\n    return;\n}\n",
        "token_count": 43
    },
    "00542be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00542be0(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00535880(*param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "00544501": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00544501(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.005358b0(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "0054525e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0054525e(void)\n\n{\n    uint arg_8h;\n    uint var_1ch;\n    \n    arg_8h = fcn.00521cc0();\n    fcn.0053b030(arg_8h);\n    return;\n}\n",
        "token_count": 58
    },
    "00545870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00545870(double *arg_8h, ulong *arg_ch, double *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_60h;\n    char *var_5ch;\n    double dStack92;\n    ulong uStack84;\n    double dStack76;\n    code *var_40h;\n    code *var_3ch;\n    code *var_38h;\n    code *var_34h;\n    code *var_30h;\n    code *var_2ch;\n    code *var_28h;\n    code *var_24h;\n    code *var_20h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint32_t var_8h;\n    code *var_4h;\n    \n    if (*0x55ca50 == 0) {\n        var_ch = fcn.005230d0;\n    }\n    else {\n        var_ch = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x64f000);\n    }\n    var_4h = var_ch;\n    if (arg_14h < 0x3e9) {\n        if (arg_14h == 1000) {\n            *arg_10h = *arg_8h * *0x556340;\n        }\n        else {\n            var_8h = arg_14h - 2;\n            if (var_8h < 0x3c) {\n    // switch table (60 cases) at 0x545dac\n                switch(*(*(arg_14h + 0x545de6) * 4 + 0x545dac)) {\n                case 0x5458f1:\n                    var_60h = 2;\n                    var_5ch = 0x556310;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_10h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_10h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x54594c:\n                    var_60h = 1;\n                    var_5ch = 0x556310;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_14h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_14h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x5459a7:\n                    var_60h = 2;\n                    var_5ch = \"log10\";\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_18h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_18h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545a02:\n                    var_60h = 1;\n                    var_5ch = \"log10\";\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_1ch = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_1ch)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545a5d:\n                    var_60h = 3;\n                    var_5ch = 0x55631c;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_20h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_20h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545ab8:\n                    var_60h = 4;\n                    var_5ch = 0x55631c;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_24h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    (*var_24h)();\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545b04:\n                    *arg_10h = 1.0;\n                    break;\n                case 0x545b1e:\n                    var_60h = 3;\n                    var_5ch = 0x556320;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_28h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_28h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545b79:\n                    var_60h = 4;\n                    var_5ch = 0x556320;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_2ch = var_ch;\n                    (**0x54919c)(&var_60h);\n                    (*var_2ch)();\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545bc5:\n                    var_60h = 2;\n                    var_5ch = 0x556320;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_30h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_30h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545c20:\n                    var_60h = 1;\n                    var_5ch = 0x556320;\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_34h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_34h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545c7b:\n                    var_60h = 1;\n                    var_5ch = \"asin\";\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_38h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_38h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545cd6:\n                    var_60h = 1;\n                    var_5ch = \"acos\";\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_3ch = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_3ch)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack76;\n                    break;\n                case 0x545d52:\n                    var_60h = 1;\n                    var_5ch = \"sqrt\";\n                    dStack92 = *arg_8h;\n                    uStack84 = *arg_ch;\n                    dStack76 = *arg_10h;\n                    var_40h = var_ch;\n                    (**0x54919c)(&var_60h);\n                    iVar1 = (*var_40h)();\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.00530020();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack76;\n                }\n            }\n        }\n    }\n    else if (arg_14h == 0x3e9) {\n        *arg_10h = *arg_8h * *0x556340;\n    }\n    return;\n}\n",
        "token_count": 2248
    },
    "00545f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00545f50(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    uint uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0051a500;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x55b004 ^ 0x559cb8;\n    noname_0 = *0x55b004 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    fcn.00542be0();\n    var_4h = 0;\n    uVar1 = fcn.00546020();\n    var_4h = 0xfffffffe;\n    fcn.00545fb4(noname_0, unaff_EDI, unaff_ESI);\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 275
    },
    "005482f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.005482f0(uint arg_8h)\n\n{\n    fcn.005485d0(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0051c2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0051c2f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0051cf60(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "005465d6": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.005465d6(void)\n\n{\n    *0x55b8a0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "00532770": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00532770(uint *lpOutputString)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(*lpOutputString);\n    return;\n}\n",
        "token_count": 39
    }
}