{
    "00401405": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401405(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00403acd(8);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402f27": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004031e9)\n// WARNING: Removing unreachable block (ram,0x004031b2)\n// WARNING: Removing unreachable block (ram,0x0040359a)\n// WARNING: Removing unreachable block (ram,0x004031c1)\n// WARNING: Removing unreachable block (ram,0x004031c9)\n// WARNING: Removing unreachable block (ram,0x004031cf)\n// WARNING: Removing unreachable block (ram,0x004031d2)\n// WARNING: Removing unreachable block (ram,0x004031d9)\n// WARNING: Removing unreachable block (ram,0x004031e3)\n// WARNING: Removing unreachable block (ram,0x0040323e)\n// WARNING: Removing unreachable block (ram,0x00403238)\n// WARNING: Removing unreachable block (ram,0x00403244)\n// WARNING: Removing unreachable block (ram,0x00403261)\n// WARNING: Removing unreachable block (ram,0x00403263)\n// WARNING: Removing unreachable block (ram,0x0040326b)\n// WARNING: Removing unreachable block (ram,0x0040326e)\n// WARNING: Removing unreachable block (ram,0x00403273)\n// WARNING: Removing unreachable block (ram,0x00403276)\n// WARNING: Removing unreachable block (ram,0x004035a3)\n// WARNING: Removing unreachable block (ram,0x00403281)\n// WARNING: Removing unreachable block (ram,0x004035ba)\n// WARNING: Removing unreachable block (ram,0x004035c1)\n// WARNING: Removing unreachable block (ram,0x0040328c)\n// WARNING: Removing unreachable block (ram,0x0040329f)\n// WARNING: Removing unreachable block (ram,0x004032a1)\n// WARNING: Removing unreachable block (ram,0x004032ae)\n// WARNING: Removing unreachable block (ram,0x004032b3)\n// WARNING: Removing unreachable block (ram,0x004032b9)\n// WARNING: Removing unreachable block (ram,0x004032c2)\n// WARNING: Removing unreachable block (ram,0x004032c9)\n// WARNING: Removing unreachable block (ram,0x004032e1)\n// WARNING: Removing unreachable block (ram,0x004032f2)\n// WARNING: Removing unreachable block (ram,0x00403300)\n// WARNING: Removing unreachable block (ram,0x0040333f)\n// WARNING: Removing unreachable block (ram,0x00403348)\n// WARNING: Removing unreachable block (ram,0x00403560)\n// WARNING: Removing unreachable block (ram,0x00403356)\n// WARNING: Removing unreachable block (ram,0x00403360)\n// WARNING: Removing unreachable block (ram,0x0040357b)\n// WARNING: Removing unreachable block (ram,0x0040336d)\n// WARNING: Removing unreachable block (ram,0x00403374)\n// WARNING: Removing unreachable block (ram,0x0040337e)\n// WARNING: Removing unreachable block (ram,0x00403383)\n// WARNING: Removing unreachable block (ram,0x00403393)\n// WARNING: Removing unreachable block (ram,0x00403398)\n// WARNING: Removing unreachable block (ram,0x004033a2)\n// WARNING: Removing unreachable block (ram,0x004033a7)\n// WARNING: Removing unreachable block (ram,0x004033b9)\n// WARNING: Removing unreachable block (ram,0x004033c6)\n// WARNING: Removing unreachable block (ram,0x004033d5)\n// WARNING: Removing unreachable block (ram,0x004033e2)\n// WARNING: Removing unreachable block (ram,0x004033ff)\n// WARNING: Removing unreachable block (ram,0x00403403)\n// WARNING: Removing unreachable block (ram,0x0040340a)\n// WARNING: Removing unreachable block (ram,0x00403413)\n// WARNING: Removing unreachable block (ram,0x00403416)\n// WARNING: Removing unreachable block (ram,0x00403427)\n// WARNING: Removing unreachable block (ram,0x00403435)\n// WARNING: Removing unreachable block (ram,0x00403440)\n// WARNING: Removing unreachable block (ram,0x00403447)\n// WARNING: Removing unreachable block (ram,0x00403472)\n// WARNING: Removing unreachable block (ram,0x00403477)\n// WARNING: Removing unreachable block (ram,0x00403482)\n// WARNING: Removing unreachable block (ram,0x0040348b)\n// WARNING: Removing unreachable block (ram,0x00403491)\n// WARNING: Removing unreachable block (ram,0x00403494)\n// WARNING: Removing unreachable block (ram,0x004034ba)\n// WARNING: Removing unreachable block (ram,0x004034bf)\n// WARNING: Removing unreachable block (ram,0x004034c4)\n// WARNING: Removing unreachable block (ram,0x004034d1)\n// WARNING: Removing unreachable block (ram,0x004034e2)\n// WARNING: Removing unreachable block (ram,0x00403513)\n// WARNING: Removing unreachable block (ram,0x004034e8)\n// WARNING: Removing unreachable block (ram,0x0040350e)\n// WARNING: Removing unreachable block (ram,0x004034f2)\n// WARNING: Removing unreachable block (ram,0x00403508)\n// WARNING: Removing unreachable block (ram,0x00403501)\n// WARNING: Removing unreachable block (ram,0x00403516)\n// WARNING: Removing unreachable block (ram,0x00403543)\n// WARNING: Removing unreachable block (ram,0x00403520)\n// WARNING: Removing unreachable block (ram,0x004033ab)\n// WARNING: Removing unreachable block (ram,0x00403388)\n// WARNING: Removing unreachable block (ram,0x0040357e)\n// WARNING: Removing unreachable block (ram,0x004032c4)\n// WARNING: Removing unreachable block (ram,0x00403588)\n// WARNING: Removing unreachable block (ram,0x004035c9)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00402f27(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00401869();\n        *puVar2 = 0x16;\n        fcn.00401b98(0, 0, 0, 0, 0);\n        fcn.00405682(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00402fba. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x4035ef\n    (**0x4035ef)();\n    return;\n}\n",
        "token_count": 1782
    },
    "0040425e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040425e(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00403acd(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00405682": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405682(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x419c7c) {\n        return;\n    }\n    *0x41ba08 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x41ba0c = &arg_8h;\n    *0x41b948 = 0x10001;\n    *0x41b8f0 = 0xc0000409;\n    *0x41b8f4 = 1;\n    var_328h = *0x419c7c;\n    var_324h = *0x419c80;\n    *0x41b8fc = unaff_retaddr;\n    *0x41b9d4 = in_GS;\n    *0x41b9d8 = in_FS;\n    *0x41b9dc = in_ES;\n    *0x41b9e0 = in_DS;\n    *0x41b9e4 = unaff_EDI;\n    *0x41b9e8 = unaff_ESI;\n    *0x41b9ec = unaff_EBX;\n    *0x41b9f0 = in_EDX;\n    *0x41b9f4 = in_ECX;\n    *0x41b9f8 = in_EAX;\n    *0x41b9fc = unaff_EBP;\n    *0x41ba00 = unaff_retaddr;\n    *0x41ba04 = in_CS;\n    *0x41ba10 = in_SS;\n    *0x41b940 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040567a(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4182c8);\n    if (*0x41b940 == 0) {\n        fcn.0040567a(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 853
    },
    "00406710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406710(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00406c11;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00406845;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040684c;\ncode_r0x00406845:\n                        do {\n                            var_4h = 1;\ncode_r0x0040684c:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040685a;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040685a:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x419da4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x419da4 < iVar12) {\n                if (iVar12 < *0x419da0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x419da0;\n                    uVar5 = 1;\n                }\n                goto code_r0x00406c11;\n            }\n            var_10h = *0x419da4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004069fd;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004069fd:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00406c11:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3659
    },
    "00406c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406c54(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00407155;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x419dc0 - 1;\n        iVar4 = *0x419dc0 + (*0x419dc0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x419dc0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00406d89;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00406d90;\ncode_r0x00406d89:\n                        do {\n                            var_4h = 1;\ncode_r0x00406d90:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00406d9e;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00406d9e:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x419dbc - *0x419dc0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x419dbc < iVar12) {\n                if (iVar12 < *0x419db8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x419dcc;\n                    iVar4 = *0x419dc4 + (*0x419dc4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x419dc4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x419dc4 + (*0x419dc4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x419dc4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x419dcc + *0x419db8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00407155;\n            }\n            var_10h = *0x419dbc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x419dc0 - 1;\n            iVar12 = *0x419dc0 + (*0x419dc0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x419dc0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00406f41;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00406f41:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x419dc4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00407155:\n    var_20h = iVar12 << (0x1fU - *0x419dc4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x419dc8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x419dc8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3632
    },
    "004089e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004089e2(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00402826();\n    var_4h = 0;\n    if (*0x41b8dc == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x41b8dc = fcn.004027b4(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x41b8e0 = fcn.004027b4(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x41b8e4 = fcn.004027b4(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x41b8ec = fcn.004027b4(uVar3);\n        if (*0x41b8ec != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x41b8e8 = fcn.004027b4(uVar3);\n        }\n    }\n    if ((*0x41b8e8 != iVar1) && (*0x41b8ec != iVar1)) {\n        pcVar4 = fcn.0040282f(*0x41b8e8);\n        pcVar5 = fcn.0040282f(*0x41b8ec);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00408b24;\n        }\n    }\n    if ((((*0x41b8e0 != iVar1) && (pcVar4 = fcn.0040282f(*0x41b8e0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x41b8e4 != iVar1 && (pcVar4 = fcn.0040282f(*0x41b8e4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00408b24:\n    pcVar4 = fcn.0040282f(*0x41b8dc);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 845
    },
    "00409ebe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409ebe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x419c7c ^ &stack0xfffffffc;\n    fcn.00401000(arg_10h);\n    var_14h = fcn.00402f27(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00406710(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00409f17:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00409f57;\n        }\n        if (iVar1 != 2) {\ncode_r0x00409f49:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00409f57;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00409f49;\n        goto code_r0x00409f17;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00409f57:\n    fcn.00405682(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "00409f66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409f66(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x419c7c ^ &stack0xfffffffc;\n    fcn.00401000(arg_10h);\n    var_14h = fcn.00402f27(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00406c54(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00409fbf:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00409fff;\n        }\n        if (iVar1 != 2) {\ncode_r0x00409ff1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00409fff;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00409ff1;\n        goto code_r0x00409fbf;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00409fff:\n    fcn.00405682(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "0040533f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040533f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00401bc0(0x418780, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040187c();\n        *puVar2 = 0;\n        puVar2 = fcn.00401869();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x7b79c0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x7b79e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00404b45(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00401869();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040187c();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00404c0c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00405411(0x418780);\n                goto code_r0x0040540b;\n            }\n        }\n        puVar2 = fcn.0040187c();\n        *puVar2 = 0;\n        puVar2 = fcn.00401869();\n        *puVar2 = 9;\n        fcn.00401b98(0, 0, 0, 0, 0);\n    }\ncode_r0x0040540b:\n    fcn.00401c05();\n    return;\n}\n",
        "token_count": 631
    },
    "004159c0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.004159c0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar auStack1044 [1044];\n    \n    *0x79cb74 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x418348);\n    *0x79a814 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x79cb74, 0x418364);\n    uVar4 = (**0x79a814)(0, *0x79cb7c);\n    iVar6 = 0;\n    iVar7 = 4;\n    uVar5 = 0;\n    if (*0x79cb7c == 0) {\n        *0x797ea4 = uVar4;\n        *0x79cb7c = 0;\n        return (uVar4 >> 0xf) << 0x14;\n    }\n    do {\n        uVar1 = *(*0x797ea4 + 1 + uVar5);\n        *0x7948bc = 0;\n        if (*0x79cb7c == 0xc3a) {\n            *0x79a810 = 0;\n        }\n        *0x79cb4c = 0x9f4faef4;\n        uVar3 = *(*0x797ea4 + 2 + uVar5);\n        uVar2 = *(*0x797ea4 + 3 + uVar5);\n        *0x79cb68 = 0;\n        *0x79cb6c = 0;\n        if (*0x79cb7c == 0xbfb) {\n            *0x42fd30 = 0xea6088b6;\n            *0x42fd34 = 0xffffffff;\n        }\n        *0x42fd20 = 0;\n        *0x42fd24 = 0;\n        *(iVar6 + uVar4) = *(*0x797ea4 + uVar5) | (uVar2 & 0x30) << 2;\n        *(iVar6 + 1 + uVar4) = uVar1 | (uVar2 & 0xc) << 4;\n        *0x79a82c = 0;\n        if (*0x79cb7c == 0x8a) {\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                      (\"beyanepogazilu bawehuwohisola gedudewigegizowepatitageyuwe teretohirahohigasomi nizutajefobukotu\"\n                       , \"yadutadukomejamekuhisubato xadulepexovesarowajazeju jecacabonowowowolu luganibewetoho\", \n                       \"rebeyecanuwuwomaveremilo foxokijalavoceyemupesuto\", auStack1044, 0, \"gemonipu\");\n            *0x42fd18 = 0x9bb5a1c2;\n        }\n        *0x79a81c = 0;\n        *(iVar6 + 2 + uVar4) = uVar3 | uVar2 << 6;\n        uVar5 = uVar5 + iVar7;\n        iVar6 = iVar6 + 3;\n    } while (uVar5 < *0x79cb7c);\n    *0x797ea4 = uVar4;\n    *0x79a81c = 0;\n    *0x79cb7c = iVar6;\n    return uVar4;\n}\n",
        "token_count": 825
    },
    "00416040": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00416040(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar auStack2096 [4];\n    uint uStack2092;\n    uchar auStack2084 [4];\n    int32_t iStack2080;\n    int32_t iStack2060;\n    \n    *0x42fd38 = 0;\n    *0x42fd3c = 0;\n    *0x797eaf = 0x6f;\n    *0x79cb70 = 0x9e9f4518;\n    *0x797eb6 = 0x33;\n    *0x797e94 = 0;\n    *0x797ebb = 0x70;\n    *0x79a808 = 0;\n    *0x79a80c = 0;\n    *0x797ebd = 0x68;\n    *0x797e88 = 0;\n    *0x797e8c = 0;\n    *0x797eb3 = 0x65;\n    *0x797ea0 = 0xddbdeb2e;\n    *0x797eb4 = 0x6c;\n    *0x41bce0 = 0xf163fd92;\n    *0x797ea9 = 0x72;\n    *0x79a820 = 0;\n    *0x79a824 = 0;\n    *0x797eb8 = 0x53;\n    *0x79a068 = 0x82382f38;\n    *0x79a06c = 0xffffffff;\n    *0x797eab = 0x61;\n    *0x797e80 = 0;\n    *0x797e84 = 0;\n    *0x797eb1 = 0x6c;\n    *0x797e90 = 0;\n    *0x797eb5 = 0x70;\n    *0x797e7c = 0xd594ed48;\n    *0x797ebc = 0x73;\n    *0x79cb64 = 0xb9a1589a;\n    *0x797ea8 = 0x43;\n    *0x7948c4 = 0;\n    *0x797ec0 = 0;\n    *0x7961cc = 0x74;\n    *0x797e70 = 0xb6944eec;\n    *0x797e74 = 0xffffffff;\n    *0x7961c8 = 0x46;\n    *0x42fd28 = 0;\n    *0x7961cd = 0x57;\n    *0x79a7f0 = 0xad37323a;\n    *0x79a7f4 = 0xffffffff;\n    *0x7961c6 = 0x33;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x41d2c8);\n    if (iVar4 == 0x8cb23) {\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0);\n        (*_sym.imp.KERNEL32.dll_PurgeComm)(0, 0);\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, 0);\n        (*_sym.imp.USER32.dll_GetClassNameW)(0, auStack2084, 0);\n        fcn.0040141a(1);\n    }\n    pcVar3 = _sym.imp.USER32.dll_GetMenuInfo;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetOEMCP;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLocaleInfoA;\n    iVar4 = 0;\n    do {\n        (*pcVar1)(0, 0, 0, 0);\n        (*pcVar2)();\n        (*pcVar3)(0, auStack2096);\n        if (((0xda2de0 < iVar4) && (iStack2080 != 0x229ad697)) && (iStack2060 != 0x5457ef65)) break;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x2881c1fa);\n    *0x79cb7c = *0x41a604 + 0x4defc;\n    *0x797ea4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x79cb7c);\n    *0x79cc64 = *0x41a1f8;\n    uVar5 = 0;\n    if (*0x79cb7c != 0) {\n        do {\n            *(*0x797ea4 + uVar5) = *(*0x79cc64 + 0x4defc + uVar5);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *0x79cb7c);\n    }\n    fcn.004159c0();\n    uStack2092 = 0x40;\n    *0x79cb74 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    *0x7926eb = 0x65;\n    *0x7b7994 = 0;\n    *0x7926e2 = 0x72;\n    *0x79cb50 = 0;\n    *0x79cb54 = 0;\n    *0x7926e6 = 0x6c;\n    *0x7b7990 = 0;\n    *0x7926e5 = 0x61;\n    *0x79cb3c = 0;\n    *0x7926e0 = 0x56;\n    *0x41bcdc = 0xb5b13a98;\n    *0x7926ed = 0x74;\n    *0x79cb40 = 0;\n    *0x79cb44 = 0;\n    *0x7926ec = 99;\n    *0x79a7fc = 0x87a93600;\n    *0x7926e9 = 0x6f;\n    *0x42fd2c = 0;\n    *0x7926ea = 0x74;\n    *0x797e68 = 0x9cd13e94;\n    *0x797e6c = 0xffffffff;\n    *0x7926e8 = 0x72;\n    *0x79cb48 = 0x8c592958;\n    *0x7926e3 = 0x74;\n    *0x41bcd8 = 0xd698eb94;\n    *0x7926e7 = 0x50;\n    *0x79cc68 = 0;\n    *0x79cc6c = 0;\n    *0x7926e1 = 0x69;\n    *0x79a828 = 0xd44c988a;\n    *0x7926e4 = 0x75;\n    *0x797e98 = 0x9f16720e;\n    *0x797e9c = 0xffffffff;\n    *0x7926ee = 0;\n    fcn.004156a0();\n    fcn.004159b0();\n    fcn.00415ff0();\n    *0x79cb78 = *0x797ea4;\n    return;\n}\n",
        "token_count": 1673
    },
    "004156d0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t fcn.004156d0(void)\n\n{\n    if (*0x79cb7c == 0x13d4) {\n        *0x79a070 = 0x9c9f9508;\n        *0x79a074 = 0xffffffff;\n    }\n    if (*0x79cb7c == 0x82b) {\n        *0x41bce4 = 0;\n    }\n    *0x797e78 = *0x797e78 * 0x343fd + 0x269ec3;\n    *0x42fd1c = 0;\n    *0x79a7f8 = 0;\n    *0x79a800 = 0xf71ca014;\n    *0x79a804 = 0xffffffff;\n    *0x79cb58 = 0x8f9ea07e;\n    *0x79cb5c = 0xffffffff;\n    return *0x797e78 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 227
    },
    "0040141a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040141a(uint arg_8h)\n\n{\n    fcn.004012ee(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00403d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403d2c)\n// WARNING: Removing unreachable block (ram,0x00403d32)\n// WARNING: Removing unreachable block (ram,0x00403d34)\n\nvoid fcn.00403d18(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "00415ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415ff0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t uStack8;\n    \n    iVar2 = *0x79cb7c;\n    iVar1 = *0x797ea4;\n    iVar4 = 0;\n    if (0 < *0x79cb7c) {\n        do {\n            uStack8 = *(iVar4 + iVar1);\n            uVar3 = fcn.004156d0();\n            uStack8 = uStack8 ^ uVar3;\n            *(iVar4 + iVar1) = uStack8;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0040a6fb": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040a6fb(void)\n\n{\n    *0x41a164 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    }
}