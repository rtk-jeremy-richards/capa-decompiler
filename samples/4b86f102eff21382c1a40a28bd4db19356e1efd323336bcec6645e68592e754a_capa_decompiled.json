{
    "004193b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004193b0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00419350();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "00419650": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419650(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004195c0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "00419740": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419740(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004196e0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "0041a9f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a9f0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00419920();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0041ace0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ace0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041acc0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "0041b440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b440(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041b410();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "004217f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004217f0(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_1ch;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *in_FS_OFFSET;\n    bool bVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0041fa50;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x43d2f0 ^ 0x43b0a0;\n    arg_1ch = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.0041f530();\n        *puVar2 = 9;\n        var_1ch = -1;\n        goto code_r0x004219f5;\n    }\n    if ((arg_8h < 0) || (*0x953280 <= arg_8h)) {\n        bVar6 = false;\n    }\n    else {\n        bVar6 = true;\n    }\n    if ((!bVar6) && (iVar3 = fcn.0041be30(2, 0x403bf8, 0x2c, 0, 0x403c58, arg_1ch),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (!bVar6) {\n        puVar2 = fcn.0041f530();\n        *puVar2 = 9;\n        fcn.0041f2c0(0x403c58, 0x403be4, 0x403bf8, 0x2c, 0);\n        var_1ch = -1;\n        goto code_r0x004219f5;\n    }\n    bVar6 = (*(*((arg_8h >> 5) * 4 + 0x9532a0) + 4 + (arg_8h & 0x1f) * 0x40) & 1) == 0;\n    if ((bVar6) && (iVar3 = fcn.0041be30(2, 0x403bf8, 0x2d, 0, 0x403bac, arg_1ch),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (bVar6) {\n        puVar2 = fcn.0041f530();\n        *puVar2 = 9;\n        fcn.0041f2c0(0x403bac, 0x403be4, 0x403bf8, 0x2d, 0);\n        var_1ch = -1;\n        goto code_r0x004219f5;\n    }\n    fcn.0042a330(arg_8h);\n    var_4h = 0;\n    if ((*(*((arg_8h >> 5) * 4 + 0x9532a0) + 4 + (arg_8h & 0x1f) * 0x40) & 1) == 0) {\ncode_r0x004219a3:\n        puVar2 = fcn.0041f530();\n        *puVar2 = 9;\n        var_1ch = -1;\n        iVar3 = fcn.0041be30(2, 0x403bf8, 0x45, 0, 0x402e78, arg_1ch);\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    else {\n        uVar4 = fcn.0042a1c0(arg_8h);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar4);\n        if (iVar3 == 0) {\n            var_1ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            var_1ch = 0;\n        }\n        if (var_1ch != 0) {\n            piVar5 = fcn.0041f560();\n            *piVar5 = var_1ch;\n            goto code_r0x004219a3;\n        }\n    }\n    var_4h = 0xfffffffe;\n    fcn.004219e5(arg_1ch);\ncode_r0x004219f5:\n    *in_FS_OFFSET = var_10h;\n    return var_1ch;\n}\n",
        "token_count": 1134
    },
    "004238f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004238f0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hModule;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.00423f50();\n    var_18h = 0;\n    bVar1 = false;\n    var_14h = 0;\n    if (*0x440c64 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x404adc);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404ad0);\n        if (var_1ch == 0) {\n            return 0;\n        }\n        *0x440c64 = fcn.00423e80(var_1ch);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404ac0);\n        *0x440c68 = fcn.00423e80(uVar3);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404aac);\n        *0x440c6c = fcn.00423e80(uVar3);\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404a90);\n        *0x440c74 = fcn.00423e80(var_1ch);\n        if (*0x440c74 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404a78);\n            *0x440c70 = fcn.00423e80(uVar3);\n        }\n    }\n    if ((*0x440c70 != var_4h) && (*0x440c74 != var_4h)) {\n        pcVar4 = fcn.00423f70(*0x440c70);\n        pcVar5 = fcn.00423f70(*0x440c74);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((var_14h = (*pcVar4)(),  var_14h == 0 ||\n             (iVar2 = (*pcVar5)(var_14h, 1, &var_10h, 0xc, &var_20h),  iVar2 == 0)) || ((var_8h & 1) == 0)))) {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        arg_10h = arg_10h | 0x200000;\n    }\n    else {\n        if ((*0x440c68 != var_4h) && (pcVar4 = fcn.00423f70(*0x440c68),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)();\n        }\n        if (((var_18h != 0) && (*0x440c6c != var_4h)) && (pcVar4 = fcn.00423f70(*0x440c6c),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)(var_18h);\n        }\n    }\n    pcVar4 = fcn.00423f70(*0x440c64);\n    if (pcVar4 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (*pcVar4)(var_18h, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 945
    },
    "004287e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004287e0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004287c0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041b170(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "0042a520": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a520(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hModule;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.00423f50();\n    var_18h = 0;\n    bVar1 = false;\n    var_14h = 0;\n    if (*0x440d3c == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x405b20);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405b14);\n        if (var_1ch == 0) {\n            return 0;\n        }\n        *0x440d3c = fcn.00423e80(var_1ch);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404ac0);\n        *0x440d40 = fcn.00423e80(uVar3);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404aac);\n        *0x440d44 = fcn.00423e80(uVar3);\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405af8);\n        *0x440d4c = fcn.00423e80(var_1ch);\n        if (*0x440d4c != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x404a78);\n            *0x440d48 = fcn.00423e80(uVar3);\n        }\n    }\n    if ((*0x440d48 != var_4h) && (*0x440d4c != var_4h)) {\n        pcVar4 = fcn.00423f70(*0x440d48);\n        pcVar5 = fcn.00423f70(*0x440d4c);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((var_14h = (*pcVar4)(),  var_14h == 0 ||\n             (iVar2 = (*pcVar5)(var_14h, 1, &var_10h, 0xc, &var_20h),  iVar2 == 0)) || ((var_8h & 1) == 0)))) {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        arg_10h = arg_10h | 0x200000;\n    }\n    else {\n        if ((*0x440d40 != var_4h) && (pcVar4 = fcn.00423f70(*0x440d40),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)();\n        }\n        if (((var_18h != 0) && (*0x440d44 != var_4h)) && (pcVar4 = fcn.00423f70(*0x440d44),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)(var_18h);\n        }\n    }\n    pcVar4 = fcn.00423f70(*0x440d3c);\n    if (pcVar4 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (*pcVar4)(var_18h, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 950
    },
    "00436090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.00436090(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_24h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *0x43d2f0 ^ &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0041e250(arg_10h);\n    arg_24h = fcn.0041e360();\n    var_8h = fcn.00438350(&var_1ch, &var_ch, arg_ch, 0, 0, 0, 0, arg_24h);\n    var_4h = fcn.00437ca0(&var_1ch, arg_8h);\n    if ((var_8h & 3) == 0) {\n        if (var_4h == 1) {\n            fcn.0041e330();\n            goto code_r0x00436183;\n        }\n        if (var_4h == 2) {\n            fcn.0041e330();\n            goto code_r0x00436183;\n        }\n    }\n    else {\n        if ((var_8h & 1) != 0) {\n            fcn.0041e330();\n            goto code_r0x00436183;\n        }\n        if ((var_8h & 2) != 0) {\n            fcn.0041e330();\n            goto code_r0x00436183;\n        }\n    }\n    fcn.0041e330(arg_10h, 0);\ncode_r0x00436183:\n    fcn.0041adc0(arg_10h);\n    return;\n}\n",
        "token_count": 468
    },
    "004361a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.004361a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_24h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *0x43d2f0 ^ &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0041e250(arg_10h);\n    arg_24h = fcn.0041e360();\n    var_8h = fcn.00438350(&var_1ch, &var_ch, arg_ch, 0, 0, 0, 0, arg_24h);\n    var_4h = fcn.00438330(&var_1ch, arg_8h);\n    if ((var_8h & 3) == 0) {\n        if (var_4h == 1) {\n            fcn.0041e330();\n            goto code_r0x00436293;\n        }\n        if (var_4h == 2) {\n            fcn.0041e330();\n            goto code_r0x00436293;\n        }\n    }\n    else {\n        if ((var_8h & 1) != 0) {\n            fcn.0041e330();\n            goto code_r0x00436293;\n        }\n        if ((var_8h & 2) != 0) {\n            fcn.0041e330();\n            goto code_r0x00436293;\n        }\n    }\n    fcn.0041e330(arg_10h, 0);\ncode_r0x00436293:\n    fcn.0041adc0(arg_10h);\n    return;\n}\n",
        "token_count": 468
    },
    "004193f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004193f0(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        cVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h - (arg_8h + 1);\n}\n",
        "token_count": 117
    },
    "004194b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004194b0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a878;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = 3;\n    fcn.0041ab20(3);\n    if (*param_1 != -3) {\n        while (*param_1 != 0) {\n            **param_1 = 0;\n            *param_1 = *(*param_1 + 4);\n        }\n        *param_1 = 0;\n    }\n    var_4h = 0xffffffff;\n    fcn.0041ab60(uVar2, uVar1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 262
    },
    "00419ce0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ce0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x1c))) {\n        arg_8h_00 = *(in_ECX + 8);\n        if (arg_ch != 0) {\n            fcn.0041a780(arg_8h_00, arg_ch);\n        }\n        fcn.0041a300(arg_8h_00);\n    }\n    *(in_ECX + 0x1c) = 0xf;\n    fcn.0041a1e0(arg_ch);\n    return;\n}\n",
        "token_count": 181
    },
    "00419e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419e80(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar1 = fcn.0041a320();\n        if (uVar1 < arg_8h) {\n            fcn.0041a360();\n        }\n        else {\n            uVar2 = fcn.0041a460(arg_8h);\n            *(in_ECX + 8) = uVar2;\n            *(in_ECX + 0xc) = *(in_ECX + 8);\n            *(in_ECX + 0x10) = arg_8h * 0x20 + *(in_ECX + 8);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 256
    },
    "00419f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419f00(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    if (*(param_1 + 8) != 0) {\n        fcn.004194b0();\n        fcn.0041a340(*(param_1 + 8), *(param_1 + 0xc));\n        fcn.0041a440(*(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "0041a0a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a0a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        fcn.0041a760(arg_8h, 0x415440, 0x42c);\n    }\n    cVar1 = fcn.0041a6a0(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0041a220(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            iVar2 = arg_ch;\n            fcn.0041a2c0();\n            fcn.0041a780(arg_8h, iVar2);\n            fcn.0041a1e0(arg_ch);\n        }\n    }\n    else {\n        iVar2 = fcn.0041a2c0();\n        in_ECX = fcn.00419be0(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 255
    },
    "0041a140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a140(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x18) < arg_8h) {\n        fcn.0041ac10();\n    }\n    if (*(in_ECX + 0x18) - arg_8h < arg_ch) {\n        arg_ch = *(in_ECX + 0x18) - arg_8h;\n    }\n    if (arg_ch != 0) {\n        arg_ch_00 = (*(in_ECX + 0x18) - arg_8h) - arg_ch;\n        iVar1 = fcn.0041a2c0();\n        iVar1 = iVar1 + arg_8h + arg_ch;\n        fcn.0041a2c0();\n        fcn.0041a7c0(iVar1, arg_ch_00);\n        fcn.0041a1e0(*(in_ECX + 0x18) - arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 269
    },
    "0041a220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041a220(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041a4e0();\n    if (uVar1 < arg_8h) {\n        fcn.0041ab90();\n    }\n    if (*(in_ECX + 0x1c) < arg_8h) {\n        fcn.0041a520(arg_8h, *(in_ECX + 0x18));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.0041a1e0(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x18)) {\n            var_8h = arg_8h;\n        }\n        else {\n            var_8h = *(in_ECX + 0x18);\n        }\n        fcn.00419ce0(1, var_8h);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 276
    },
    "0041a520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041a520(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43aab0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h = var_8h | 0xf;\n    uVar1 = fcn.0041a4e0();\n    if (uVar1 < var_18h) {\n        var_18h = var_8h;\n    }\n    else if (var_18h / 3 < *(param_1 + 0x1c) >> 1) {\n        iVar2 = fcn.0041a4e0();\n        uVar1 = iVar2 - (*(param_1 + 0x1c) >> 1);\n        if (*(param_1 + 0x1c) < uVar1 || *(param_1 + 0x1c) == uVar1) {\n            var_18h = (*(param_1 + 0x1c) >> 1) + *(param_1 + 0x1c);\n        }\n    }\n    var_4h = 0;\n    uVar3 = fcn.0041a710(var_18h + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_8h = fcn.0041a2c0();\n        fcn.0041a780(arg_8h, iVar2);\n    }\n    fcn.00419ce0(1, 0);\n    *(param_1 + 8) = uVar3;\n    *(param_1 + 0x1c) = var_18h;\n    fcn.0041a1e0(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 555
    },
    "0041a6a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041a6a0(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h != 0) && (in_EAX = fcn.0041a2c0(),  in_EAX <= arg_8h)) {\n        iVar1 = fcn.0041a2c0();\n        in_EAX = iVar1 + *(in_ECX + 0x18);\n        if (arg_8h < in_EAX) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 168
    },
    "0041a6e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a6fe)\n\nuint fcn.0041a6e0(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return 0x7ffffff;\n}\n",
        "token_count": 60
    },
    "0041a840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a840(uint32_t param_1)\n\n{\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    \n    if (param_1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = param_1;\n        if (0xffffffff / param_1 < 0x20) {\n            fcn.004192f0(0);\n            fcn.0041e8a0(&var_ch, 0x43b53c);\n        }\n    }\n    fcn.0041b6b0(var_10h << 5);\n    return;\n}\n",
        "token_count": 151
    },
    "0041a8a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a8a0(uint32_t param_1)\n\n{\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    \n    if (param_1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = param_1;\n        if (0xffffffff / param_1 == 0) {\n            fcn.004192f0(0);\n            fcn.0041e8a0(&var_ch, 0x43b53c);\n        }\n    }\n    fcn.0041b6b0(var_10h);\n    return;\n}\n",
        "token_count": 148
    },
    "0041adc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041adc0(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x43d2f0) {\n        return;\n    }\n    *0x440578 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x44057c = &arg_8h;\n    *0x4404b8 = 0x10001;\n    *0x440460 = 0xc0000409;\n    *0x440464 = 1;\n    var_328h = *0x43d2f0;\n    var_324h = *0x43d2f4;\n    *0x44046c = unaff_retaddr;\n    *0x440544 = in_GS;\n    *0x440548 = in_FS;\n    *0x44054c = in_ES;\n    *0x440550 = in_DS;\n    *0x440554 = unaff_EDI;\n    *0x440558 = unaff_ESI;\n    *0x44055c = unaff_EBX;\n    *0x440560 = in_EDX;\n    *0x440564 = in_ECX;\n    *0x440568 = in_EAX;\n    *0x44056c = unaff_EBP;\n    *0x440570 = unaff_retaddr;\n    *0x440574 = in_CS;\n    *0x440580 = in_SS;\n    *0x4404b0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00424920(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402b54);\n    if (*0x4404b0 == 0) {\n        fcn.00424920(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 819
    },
    "0041add0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0041add0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h == 0) {\n            iVar3 = fcn.0041be30(2, 0x401288, 0x36, 0, 0x4012f0, var_ch);\n            if (iVar3 == 1) {\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n        }\n        if (arg_8h != 0) {\n            if (arg_10h == 0) {\n                iVar3 = fcn.0041be30(2, 0x401288, 0x37, 0, 0x40125c, var_ch);\n                if (iVar3 == 1) {\n                    pcVar1 = swi(3);\n                    uVar2 = (*pcVar1)();\n                    return uVar2;\n                }\n            }\n            if (arg_10h != 0) {\n                if (arg_14h > arg_ch) {\n                    iVar3 = fcn.0041be30(2, 0x401288, 0x38, 0, 0x401230, 0);\n                    if (iVar3 == 1) {\n                        pcVar1 = swi(3);\n                        uVar2 = (*pcVar1)();\n                        return uVar2;\n                    }\n                }\n                if (arg_14h <= arg_ch) {\n                    fcn.0041ef50(arg_8h, arg_10h, arg_14h);\n                    uVar2 = 0;\n                }\n                else {\n                    puVar4 = fcn.0041f530();\n                    *puVar4 = 0x22;\n                    fcn.0041f2c0(0x401230, 0x401274, 0x401288, 0x38, 0);\n                    uVar2 = 0x22;\n                }\n            }\n            else {\n                puVar4 = fcn.0041f530();\n                *puVar4 = 0x16;\n                fcn.0041f2c0(0x40125c, 0x401274, 0x401288, 0x37, 0);\n                uVar2 = 0x16;\n            }\n        }\n        else {\n            puVar4 = fcn.0041f530();\n            *puVar4 = 0x16;\n            fcn.0041f2c0(0x4012f0, 0x401274, 0x401288, 0x36, 0);\n            uVar2 = 0x16;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 708
    },
    "0041b260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0041b260(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h == 0) {\n            iVar3 = fcn.0041be30(2, 0x4013f8, 0x37, 0, 0x4012f0, var_ch);\n            if (iVar3 == 1) {\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n        }\n        if (arg_8h != 0) {\n            if ((arg_10h == 0) || (arg_ch < arg_14h)) {\n                fcn.0041ffe0(arg_8h, 0, arg_ch);\n                if (arg_10h == 0) {\n                    iVar3 = fcn.0041be30(2, 0x4013f8, 0x3d, 0, 0x40125c, var_ch);\n                    if (iVar3 == 1) {\n                        pcVar1 = swi(3);\n                        uVar2 = (*pcVar1)();\n                        return uVar2;\n                    }\n                }\n                if (arg_10h != 0) {\n                    if (arg_14h > arg_ch) {\n                        iVar3 = fcn.0041be30(2, 0x4013f8, 0x3e, 0, 0x401230, 0);\n                        if (iVar3 == 1) {\n                            pcVar1 = swi(3);\n                            uVar2 = (*pcVar1)();\n                            return uVar2;\n                        }\n                    }\n                    if (arg_14h <= arg_ch) {\n                        uVar2 = 0x16;\n                    }\n                    else {\n                        puVar4 = fcn.0041f530();\n                        *puVar4 = 0x22;\n                        fcn.0041f2c0(0x401230, 0x4013e0, 0x4013f8, 0x3e, 0);\n                        uVar2 = 0x22;\n                    }\n                }\n                else {\n                    puVar4 = fcn.0041f530();\n                    *puVar4 = 0x16;\n                    fcn.0041f2c0(0x40125c, 0x4013e0, 0x4013f8, 0x3d, 0);\n                    uVar2 = 0x16;\n                }\n            }\n            else {\n                fcn.0041fc70(arg_8h, arg_10h, arg_14h);\n                uVar2 = 0;\n            }\n        }\n        else {\n            puVar4 = fcn.0041f530();\n            *puVar4 = 0x16;\n            fcn.0041f2c0(0x4012f0, 0x4013e0, 0x4013f8, 0x37, 0);\n            uVar2 = 0x16;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 788
    },
    "0041c5a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c5a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0041c600(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        iVar2 = fcn.0041f530();\n        if (iVar2 != 0) {\n            piVar3 = fcn.0041f530();\n            *piVar3 = var_4h;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "0041caf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041caf0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0041ca20(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        iVar2 = fcn.0041f530();\n        if (iVar2 != 0) {\n            piVar3 = fcn.0041f530();\n            *piVar3 = var_4h;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 207
    },
    "0041ead0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041ead0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x41eb8e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0041ebc0;\n        uStack36 = *0x43d2f0 ^ &fcn.0041ead0::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0041ead0::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00424280();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0041ead0::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 726
    },
    "00420f28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420f28(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00420ff0();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004212ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004212ac(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_28h;\n    \n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0041fa30(0);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00428af0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00428af0(int32_t param_1, uint param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h_2;\n    int32_t var_10h_2;\n    uint32_t var_14h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_10h_3;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0041fa50;\n    var_10h_3 = *in_FS_OFFSET;\n    uStack12 = *0x43d2f0 ^ 0x43b2d8;\n    *in_FS_OFFSET = &var_10h_3;\n    if (*(var_10h_2 + 4) < 0x81) {\n        var_24h = *(var_8h_2 + 8);\n    }\n    else {\n        var_24h = *(var_8h_2 + 8);\n    }\n    var_1ch = var_24h;\n    iVar2 = fcn.00424280();\n    *(iVar2 + 0x90) = *(iVar2 + 0x90) + 1;\n    uVar1 = var_1ch;\n    while (var_1ch = uVar1,  var_4h = 0,  var_1ch != var_14h) {\n        if ((0x7fffffff < var_1ch) || (*(var_10h_2 + 4) <= var_1ch)) {\n            fcn.00429750();\n        }\n        uVar1 = *(*(var_10h_2 + 8) + var_1ch * 8);\n        var_4h = 1;\n        if (*(*(var_10h_2 + 8) + 4 + var_1ch * 8) != 0) {\n            *(var_8h_2 + 8) = uVar1;\n            fcn.00429650(*(*(var_10h_2 + 8) + 4 + var_1ch * 8), var_8h_2, 0x103);\n        }\n    }\n    var_4h = 0xfffffffe;\n    fcn.00428c1d();\n    if (var_1ch != var_14h) {\n        fcn.00429750();\n    }\n    *(var_8h_2 + 8) = var_1ch;\n    *in_FS_OFFSET = var_10h_3;\n    return;\n}\n",
        "token_count": 654
    },
    "00428c1d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00428c1d(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    \n    iVar1 = fcn.00424280();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00424280();\n        *(unaff_EBP + -0x2c) = iVar1 + 0x90;\n        **(unaff_EBP + -0x2c) = **(unaff_EBP + -0x2c) + -1;\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00428f08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428f08(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x20);\n    fcn.0041ed50(*(unaff_EBP + -0x1c));\n    iVar1 = fcn.00424280();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00424280();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if ((((**(unaff_EBP + 8) == -0x1f928c9d) && (*(*(unaff_EBP + 8) + 0x10) == 3)) &&\n        ((*(*(unaff_EBP + 8) + 0x14) == 0x19930520 ||\n         ((*(*(unaff_EBP + 8) + 0x14) == 0x19930521 || (*(*(unaff_EBP + 8) + 0x14) == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x30) != 0)))) {\n        iVar1 = fcn.0041ed20(*(*(unaff_EBP + 8) + 0x18));\n        if (iVar1 != 0) {\n            fcn.004293b0(*(unaff_EBP + 8), *(unaff_EBP + -0x4c));\n        }\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00433620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433620(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x95324c != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0043512e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.00435928(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.00433678();\n    return;\n}\n",
        "token_count": 198
    },
    "00433678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00433678(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 fVar1;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) != 0) || (fVar1 = *0x43ff50,  param_3 != 0)) {\n            fVar1 = fcn.004358cc();\n        }\ncode_r0x00433707:\n        if (*0x953234 == 0) {\n            fVar1 = fcn.00435857(arg_8h, unaff_retaddr, param_3, param_4);\n            return fVar1;\n        }\n    }\n    else {\n        if (in_FPUControlWord != 0x27f) {\n            in_EAX = fcn.004358b5();\n            in_ST0 = extraout_ST0;\n        }\n        if (in_EAX < 0x3ff00000) {\n            fVar1 = fpatan(SQRT((1 - in_ST0) * (1 + in_ST0)), in_ST0);\n        }\n        else {\n            fVar1 = *0x43ff50;\n            if ((0x3ff00000 < in_EAX) || ((param_4 & 0xfffff | param_3) != 0)) goto code_r0x00433707;\n            if ((param_4 & 0x80000000) == 0) {\n                fVar1 = 0;\n            }\n            else {\n                fVar1 = 3.141592653589793;\n            }\n        }\n        if (*0x953234 == 0) {\n            if (((arg_8h != 0x27f) && ((arg_8h & 0x20) != 0)) && ((in_FPUStatusWord & 0x20) != 0)) {\n                fVar1 = fcn.00435857(arg_8h, unaff_retaddr, param_3, param_4);\n                return fVar1;\n            }\n            return fVar1;\n        }\n    }\n    return fVar1;\n}\n",
        "token_count": 565
    },
    "00433770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433770(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x95324c != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.00435a4e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.00435928(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.004337c8();\n    return;\n}\n",
        "token_count": 200
    },
    "004337c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.004337c8(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 fVar1;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) != 0) || (fVar1 = *0x43ff50,  param_3 != 0)) {\n            fVar1 = fcn.004358cc();\n        }\ncode_r0x00433857:\n        if (*0x953234 == 0) {\n            fVar1 = fcn.00435857(arg_8h, unaff_retaddr, param_3, param_4);\n            return fVar1;\n        }\n    }\n    else {\n        if (in_FPUControlWord != 0x27f) {\n            in_EAX = fcn.004358b5();\n            in_ST0 = extraout_ST0;\n        }\n        if (in_EAX < 0x3ff00000) {\n            fVar1 = fpatan(in_ST0, SQRT((1 - in_ST0) * (1 + in_ST0)));\n        }\n        else {\n            fVar1 = *0x43ff50;\n            if ((0x3ff00000 < in_EAX) || ((param_4 & 0xfffff | param_3) != 0)) goto code_r0x00433857;\n            fVar1 = *0x43ff5a;\n            if ((param_4 & 0x80000000) != 0) {\n                fVar1 = -*0x43ff5a;\n            }\n        }\n        if (*0x953234 == 0) {\n            if (((arg_8h != 0x27f) && ((arg_8h & 0x20) != 0)) && ((in_FPUStatusWord & 0x20) != 0)) {\n                fVar1 = fcn.00435857(arg_8h, unaff_retaddr, param_3, param_4);\n                return fVar1;\n            }\n            return fVar1;\n        }\n    }\n    return fVar1;\n}\n",
        "token_count": 564
    },
    "0043512e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 fcn.0043512e(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0x4170b8 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0x4167f0);\n        dVar10 = SQRT(*0x4170c0 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0x417068 * dVar7 + *0x417060) * dVar6 * dVar7 * dVar7 +\n                (*0x417058 * dVar6 * dVar7 - ((*(iVar3 + 0x4158f0) ^ uVar9 << 0x20) - *0x416ff0))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0x4158f8) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0x416ff8 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0x4170c0 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0x4170b8 & dVar10 | SUB168(auVar12, 0) | ~*0x4170b0 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0x4167f0);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0x417008) +\n                *(iVar3 + 0x4158f8);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0x417068 * dVar11 + *0x417060) * dVar13 * dVar11 * dVar11 +\n               *0x417058 * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0x417000) + *(iVar3 + 0x4158f0) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0x416ff8 - dVar8) +\n               (((*0x416ff0 - dVar11 * dVar11 * dVar11 * (*0x417070 * dVar6 + *0x417080 + *0x417090 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0x417078 * dVar7 + *0x417088 + *0x417098 * dVar7 * dVar7))\n               - (dVar8 - (*0x416ff8 - (*0x416ff8 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0x4170c8 - (dVar8 & *0x4170b0) * *0x4170c8;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0x417030 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0x417008) +\n               (*0x417080 + *0x417070 * dVar14 + *0x417090 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0x417000) +\n               (*0x417088 + *0x417078 * dVar17 + *0x417098 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0x416ff8 + *0x416ff0;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.00436930(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0x417018 & uVar15) + (*0x417010 & uVar15);\n}\n",
        "token_count": 2518
    },
    "00435a4e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 fcn.00435a4e(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0x4188f8 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0x418060);\n        dVar1 = SQRT(*0x418900 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0x4188a0 + *0x4188a8 * dVar8) * dVar7 * dVar8 * dVar8 +\n               *0x418898 * dVar7 * dVar8 + (*(iVar5 + 0x417160) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0x417168) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0x418900 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0x418890;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0x4188f8 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0x418060);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0x4188a8 * dVar14 + *0x4188a0) * dVar13 * dVar14 * dVar14 +\n                *0x418898 * dVar13 * dVar14 + (*0x418860 - *(iVar5 + 0x417160))) -\n               (((*0x418900 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0x418868 - *(iVar5 + 0x417168) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0x4188b0 * dVar1 + *0x4188c0 + *0x4188d0 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0x4188b8 * dVar7 + *0x4188c8 + *0x4188d8 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0x418900 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0x418880;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0x418880;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0x418860 + (*0x4188e0 * dVar1 + *0x4188e8) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0x4188d0 + *0x4188c0 + *0x4188b0 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0x4188d8 + *0x4188c8 + *0x4188b8 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0x418900 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0x418868 + (dVar15 - *0x418868)))) - (dVar15 - *0x418868) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.00436930(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0x418868 + *0x418860 | ~*0x4188f0 & dVar6;\n}\n",
        "token_count": 2197
    },
    "00438350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00438350(ushort *arg_8h, uint8_t **arg_ch, uint8_t *arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t *arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_76h;\n    uint16_t var_72h;\n    int32_t var_70h;\n    uint32_t var_6ch;\n    uint8_t var_65h;\n    uint *var_64h;\n    uint var_60h;\n    uint8_t *var_5ch;\n    uint var_58h;\n    uint var_41h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    var_3ch = *0x43d2f0 ^ &stack0xfffffffc;\n    var_64h = &var_58h;\n    var_60h._0_2_ = 0;\n    var_38h = 1;\n    var_2ch = 0;\n    var_14h = 0;\n    var_70h = 0;\n    var_30h = 0;\n    var_20h = 0;\n    var_34h = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_24h = 0;\n    var_6ch = 0;\n    if ((arg_24h == NULL) && (iVar2 = fcn.0041be30(2, 0x418cd8, 0x92, 0, 0x418d60, var_a8h),  iVar2 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg_24h != NULL) {\n        var_5ch = arg_10h;\n        for (var_4h = arg_10h;\n            (((*var_4h == 0x20 || (*var_4h == 9)) || (*var_4h == 10)) || (puVar4 = var_4h,  *var_4h == 0xd));\n            var_4h = var_4h + 1) {\n        }\ncode_r0x0043846c:\n        var_4h = puVar4;\n        if (var_6ch != 10) {\n            var_65h = *var_4h;\n            puVar4 = var_4h + 1;\n            if (var_6ch < 0xc) {\n    // switch table (12 cases) at 0x438cf4\n                switch(*(var_6ch * 4 + 0x438cf4)) {\n                case 0x4384aa:\n                    if ((var_65h < '1') || ('9' < var_65h)) {\n                        if (var_65h == ***(*arg_24h + 0xbc)) {\n                            var_6ch = 5;\n                        }\n                        else if (var_65h == 0x2b) {\n                            var_6ch = 2;\n                            var_60h._0_2_ = 0;\n                        }\n                        else if (var_65h == 0x2d) {\n                            var_6ch = 2;\n                            var_60h._0_2_ = 0x8000;\n                        }\n                        else if (var_65h == 0x30) {\n                            var_6ch = 1;\n                        }\n                        else {\n                            var_6ch = 10;\n                            puVar4 = var_4h;\n                        }\n                    }\n                    else {\n                        var_6ch = 3;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x438557:\n                    var_14h = 1;\n                    if ((var_65h < '1') || ('9' < var_65h)) {\n                        if (var_65h != ***(*arg_24h + 0xbc)) {\n                            if (var_65h - 0x2bU < 0x3b) {\n    // switch table (59 cases) at 0x438d24\n                                switch(*(*(var_65h + 0x438d09) * 4 + 0x438d24)) {\n                                case 0x4385dc:\n                                    var_6ch = 1;\n                                    goto code_r0x0043846c;\n                                case 0x4385e5:\n                                    var_6ch = 6;\n                                    goto code_r0x0043846c;\n                                case 0x4385ee:\n                                    var_6ch = 0xb;\n                                    puVar4 = var_4h;\n                                    goto code_r0x0043846c;\n                                }\n                            }\n                            var_6ch = 10;\n                            puVar4 = var_4h;\n                            break;\n                        }\n                        var_6ch = 4;\n                    }\n                    else {\n                        var_6ch = 3;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x438615:\n                    if ((var_65h < '1') || ('9' < var_65h)) {\n                        if (var_65h == ***(*arg_24h + 0xbc)) {\n                            var_6ch = 5;\n                        }\n                        else if (var_65h == 0x30) {\n                            var_6ch = 1;\n                        }\n                        else {\n                            var_6ch = 10;\n                            var_4h = var_5ch;\n                            puVar4 = var_4h;\n                        }\n                    }\n                    else {\n                        var_6ch = 3;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x438689:\n                    var_14h = 1;\n                    var_4h = puVar4;\n                    while (('/' < var_65h && (var_65h < ':'))) {\n                        if (var_2ch < 0x19) {\n                            var_2ch = var_2ch + 1;\n                            *var_64h = var_65h - 0x30;\n                            var_64h = var_64h + 1;\n                        }\n                        else {\n                            var_10h = var_10h + 1;\n                        }\n                        var_65h = *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    puVar4 = var_4h;\n                    if (var_65h == ***(*arg_24h + 0xbc)) {\n                        var_6ch = 4;\n                    }\n                    else {\n    // switch table (59 cases) at 0x438d70\n                        switch(var_65h) {\n                        case 0x2b:\n                        case 0x2d:\n                            var_6ch = 0xb;\n                            puVar4 = var_4h + -1;\n                            break;\n                        default:\n                            var_6ch = 10;\n                            puVar4 = var_4h + -1;\n                            break;\n                        case 0x44:\n                        case 0x45:\n                        case 100:\n                        case 0x65:\n                            var_6ch = 6;\n                        }\n                    }\n                    break;\n                case 0x43876d:\n                    var_14h = 1;\n                    var_70h = 1;\n                    var_4h = puVar4;\n                    if (var_2ch == 0) {\n                        while (var_65h == 0x30) {\n                            var_10h = var_10h + -1;\n                            var_65h = *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                    }\n                    while (('/' < var_65h && (var_65h < ':'))) {\n                        if (var_2ch < 0x19) {\n                            var_2ch = var_2ch + 1;\n                            *var_64h = var_65h - 0x30;\n                            var_64h = var_64h + 1;\n                            var_10h = var_10h + -1;\n                        }\n                        var_65h = *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n    // switch table (59 cases) at 0x438db8\n                    switch(var_65h) {\n                    case 0x2b:\n                    case 0x2d:\n                        var_6ch = 0xb;\n                        puVar4 = var_4h + -1;\n                        break;\n                    default:\n                        var_6ch = 10;\n                        puVar4 = var_4h + -1;\n                        break;\n                    case 0x44:\n                    case 0x45:\n                    case 100:\n                    case 0x65:\n                        var_6ch = 6;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x438862:\n                    var_70h = 1;\n                    if ((var_65h < '0') || ('9' < var_65h)) {\n                        var_6ch = 10;\n                        var_4h = var_5ch;\n                        puVar4 = var_4h;\n                    }\n                    else {\n                        var_6ch = 4;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x43889f:\n                    var_5ch = var_4h + -1;\n                    if ((var_65h < '1') || ('9' < var_65h)) {\n                        if (var_65h == 0x2b) {\n                            var_6ch = 7;\n                        }\n                        else if (var_65h == 0x2d) {\n                            var_6ch = 7;\n                            var_38h = -1;\n                        }\n                        else if (var_65h == 0x30) {\n                            var_6ch = 8;\n                        }\n                        else {\n                            var_6ch = 10;\n                            puVar4 = var_5ch;\n                        }\n                    }\n                    else {\n                        var_6ch = 9;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x438926:\n                    var_30h = 1;\n                    var_4h = puVar4;\n                    while (var_65h == 0x30) {\n                        var_65h = *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    if ((var_65h < '1') || ('9' < var_65h)) {\n                        var_6ch = 10;\n                    }\n                    else {\n                        var_6ch = 9;\n                    }\n                    var_4h = var_4h + -1;\n                    puVar4 = var_4h;\n                    break;\n                case 0x438984:\n                    if ((var_65h < '1') || ('9' < var_65h)) {\n                        if (var_65h == 0x30) {\n                            var_6ch = 8;\n                        }\n                        else {\n                            var_6ch = 10;\n                            var_4h = var_5ch;\n                            puVar4 = var_4h;\n                        }\n                    }\n                    else {\n                        var_6ch = 9;\n                        puVar4 = var_4h;\n                    }\n                    break;\n                case 0x4389d7:\n                    var_30h = 1;\n                    var_84h = 0;\n                    var_4h = puVar4;\n                    while( true ) {\n                        if ((var_65h < '0') || ('9' < var_65h)) goto code_r0x00438a3e;\n                        var_84h = var_84h * 10 + -0x30 + var_65h;\n                        if (0x1450 < var_84h) break;\n                        var_65h = *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    var_84h = 0x1451;\ncode_r0x00438a3e:\n                    var_8h = var_84h;\n                    while (('/' < var_65h && (var_65h < ':'))) {\n                        var_65h = *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    var_6ch = 10;\n                    puVar4 = var_4h + -1;\n                    break;\n                case 0x438a80:\n                    if (arg_20h == 0) {\n                        var_6ch = 10;\n                        puVar4 = var_4h;\n                    }\n                    else {\n                        var_5ch = var_4h;\n                        var_a8h = var_a8h & 0xffffff00 | var_65h;\n                        if (var_65h == 0x2b) {\n                            var_6ch = 7;\n                        }\n                        else if (var_65h == 0x2d) {\n                            var_6ch = 7;\n                            var_38h = -1;\n                        }\n                        else {\n                            var_6ch = 10;\n                            puVar4 = var_4h;\n                        }\n                    }\n                }\n            }\n            goto code_r0x0043846c;\n        }\n        *arg_ch = var_4h;\n        if (((var_14h != 0) && (var_20h == 0)) && (var_34h == 0)) {\n            if (0x18 < var_2ch) {\n                if ('\\x04' < var_41h) {\n                    var_41h._0_1_ = var_41h + '\\x01';\n                }\n                var_2ch = 0x18;\n                var_64h = var_64h + -1;\n                var_10h = var_10h + 1;\n            }\n            if (var_2ch == 0) {\n                var_1ch._0_2_ = 0;\n                var_18h._0_2_ = 0;\n                var_28h = 0;\n                var_ch = var_28h;\n            }\n            else {\n                while (var_64h = var_64h + -1,  *var_64h == '\\0') {\n                    var_2ch = var_2ch - 1;\n                    var_10h = var_10h + 1;\n                }\n                fcn.0043a4a0(&var_58h, var_2ch, &var_7ch);\n                if (var_38h < 0) {\n                    var_8h = -var_8h;\n                }\n                var_8h = var_8h + var_10h;\n                if (var_30h == 0) {\n                    var_8h = var_8h + arg_18h;\n                }\n                if (var_70h == 0) {\n                    var_8h = var_8h - arg_1ch;\n                }\n                if (var_8h < 0x1451) {\n                    if (var_8h < -0x1450) {\n                        var_34h = 1;\n                    }\n                    else {\n                        fcn.00438e00(&var_7ch, var_8h, arg_14h);\n                        var_1ch._0_2_ = var_7ch;\n                        var_ch = stack0xffffff82;\n                        var_28h = var_76h;\n                        var_18h._0_2_ = var_72h;\n                    }\n                }\n                else {\n                    var_20h = 1;\n                }\n            }\n        }\n        if (var_14h == 0) {\n            var_1ch._0_2_ = 0;\n            var_18h._0_2_ = 0;\n            var_28h = 0;\n            var_24h = var_24h | 4;\n            var_ch = var_28h;\n        }\n        else if (var_20h == 0) {\n            if (var_34h != 0) {\n                var_1ch._0_2_ = 0;\n                var_18h._0_2_ = 0;\n                var_28h = 0;\n                var_ch = 0;\n                var_24h = var_24h | 1;\n            }\n        }\n        else {\n            var_18h._0_2_ = 0x7fff;\n            var_28h = 0x80000000;\n            var_ch = 0;\n            var_1ch._0_2_ = 0;\n            var_24h = var_24h | 2;\n        }\n        *arg_8h = var_1ch;\n        *(arg_8h + 1) = var_ch;\n        *(arg_8h + 3) = var_28h;\n        arg_8h[5] = var_18h | var_60h;\n    }\n    else {\n        puVar3 = fcn.0041f530();\n        *puVar3 = 0x16;\n        fcn.0041f2c0(0x418d60, 0x418cb4, 0x418cd8, 0x92, 0);\n    }\n    fcn.0041adc0(var_a8h);\n    return;\n}\n",
        "token_count": 4120
    },
    "00438e00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438e00(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *0x43d2f0 ^ &stack0xfffffffc;\n    var_4h = 0x440060;\n    if (arg_ch != 0) {\n        if (arg_ch < 0) {\n            arg_ch = -arg_ch;\n            var_4h = 0x4401c0;\n        }\n        if (arg_10h == 0) {\n            *arg_8h = 0;\n        }\n        while (arg_ch != 0) {\n            var_4h = var_4h + 0x54;\n            uVar1 = arg_ch & 7;\n            arg_ch = arg_ch >> 3;\n            if (uVar1 != 0) {\n                var_1ch = uVar1 * 0xc + var_4h;\n                if (0x7fff < *var_1ch) {\n                    var_14h._0_2_ = *var_1ch;\n                    var_14h._2_2_ = *var_1ch >> 0x10;\n                    var_10h._0_2_ = var_1ch[1];\n                    var_10h._2_2_ = var_1ch[1] >> 0x10;\n                    var_ch = var_1ch[2];\n                    iVar2 = CONCAT22(var_10h, var_14h._2_2_) + -1;\n                    var_14h._2_2_ = iVar2;\n                    var_10h._0_2_ = iVar2 >> 0x10;\n                    var_1ch = &var_14h;\n                }\n                fcn.00438ee0(arg_8h, var_1ch);\n            }\n        }\n    }\n    fcn.0041adc0(var_1ch);\n    return;\n}\n",
        "token_count": 525
    },
    "0041b0f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b0f0(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0x40130c;\n    if (param_1[2] != 0) {\n        fcn.0041b150(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00422f7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422f7f(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x43d6a0);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004238b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004238b7(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x43d6a0);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00433130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433130(void)\n\n{\n    int32_t iVar1;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_14h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    if (iVar1 == 0x6d728) {\n        if (*0x95322c == 0x47d) {\n            (*_sym.imp.ADVAPI32.dll_RegFlushKey)(0);\n        }\n        fcn.0041b4a0(0);\n        fcn.00419800(0);\n        fcn.0041b3f0(0);\n        fcn.004197f0();\n    }\n    var_4h = 0;\n    while( true ) {\n        if ((1 < var_4h >> 0x1f) || ((0 < var_4h >> 0x1f && (0xd2e442e4 < var_4h)))) goto code_r0x00433241;\n        if (var_4h < 0x934) {\n            (*_sym.imp.USER32.dll_GetCursor)();\n        }\n        if (var_4h < 0x1124f1) {\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n        if (*0x95322c == 0xce1) {\n            *0x441390 = 0xcd51fc44;\n        }\n        if ((((0x5185da7 < var_4h) && (var_ch != 0x2ecabc3c)) && (var_14h != 0x66166683)) && (var_24h != 0x467f4e9c))\n        break;\n        var_4h = var_4h + 1;\n    }\n    *0x951f98 = 0xffffbded;\n    *0x951f9c = 0xffffffff;\n    *0x951fa0 = 0;\n    *0x951fa4 = 0;\ncode_r0x00433241:\n    *0x95322c = *0x43fe9c + 0xd0f5;\n    for (var_28h = 0; var_28h < 0x77c43d; var_28h = var_28h + 1) {\n        if (var_28h == 0x5fc2aa) {\n            fcn.00432ed0();\n        }\n    }\n    for (var_2ch = 0; var_2ch < 0x29a8dc; var_2ch = var_2ch + 1) {\n        if (var_2ch == 0x1863b7) {\n            *0x953230 = *0x43dfd8;\n        }\n        if (*0x95322c == 0x1226) {\n            (*_sym.imp.KERNEL32.dll_PurgeComm)(0, 0);\n        }\n    }\n    for (var_30h = 0; var_30h < *0x95322c; var_30h = var_30h + 1) {\n        if (*0x95322c == 0x382) {\n            (*_sym.imp.KERNEL32.dll_FindFirstChangeNotificationW)(0, 0, 0);\n        }\n        fcn.00432e40();\n    }\n    fcn.00432f80();\n    fcn.004330e0(0x43dfe0);\n    fcn.00432ef0();\n    for (var_34h = 0; var_34h < 0x54ed46; var_34h = var_34h + 1) {\n        *0x9521f8 = 0;\n        *0x9521fc = 0;\n    }\n    return;\n}\n",
        "token_count": 896
    },
    "null": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00432f00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pSecurityDescriptor\n\nvoid fcn.00432f00(void)\n\n{\n    uint pSecurityDescriptor;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = *0x43d2f0 ^ &stack0xfffffffc;\n    *0x441394 = *0x441394 * 0x343fd + 0x269ec3;\n    var_4h = *0x441394;\n    if (*0x95322c == 0x2a5) {\n        (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(&pSecurityDescriptor, 0, 0, 0);\n    }\n    var_4h = var_4h >> 0x10 & 0x7fff;\n    fcn.0041adc0(pSecurityDescriptor);\n    return;\n}\n",
        "token_count": 198
    },
    "00419430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419430(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0041b260(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "00419450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419450(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0041add0(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "00419550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00419550(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ac03;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0041af30(uVar1);\n    var_4h = 0;\n    *in_ECX = 0x401204;\n    fcn.004198a0(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 193
    },
    "004195c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004195c0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43aa93;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x401204;\n    var_4h = 0;\n    fcn.00419920(uVar1);\n    var_4h = 0xffffffff;\n    fcn.0041b0f0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 180
    },
    "00419630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00419630(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00419980(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "00419770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00419770(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43aba3;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0041b050(arg_8h);\n    var_4h = 0;\n    *in_ECX = 0x401204;\n    fcn.004198a0(arg_8h + 0xc);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 172
    },
    "00419be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419be0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.004199a0();\n    if (uVar2 < arg_ch) {\n        fcn.0041ac10();\n    }\n    iVar3 = fcn.004199a0();\n    var_4h = iVar3 - arg_ch;\n    if (arg_10h < var_4h) {\n        var_4h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.0041a140(arg_ch + var_4h, *0x41550c);\n        fcn.0041a140(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.0041a220(var_4h, 0);\n        if (cVar1 != '\\0') {\n            uVar2 = var_4h;\n            iVar3 = fcn.00419d60();\n            iVar3 = iVar3 + arg_ch;\n            fcn.0041a2c0();\n            fcn.0041a780(iVar3, uVar2);\n            fcn.0041a1e0(var_4h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 339
    },
    "00419ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ca0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    fcn.0041a760(arg_8h, 0x415440, 0x43c);\n    arg_ch = fcn.004193f0(arg_8h);\n    fcn.0041a0a0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 94
    },
    "00419d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419d90(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ab08;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0041a050(uVar1);\n    var_4h = 0;\n    fcn.0041a2f0(&arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 183
    },
    "00419df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00419df0(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43aad8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0041a050(uVar1);\n    var_4h = 0;\n    fcn.0041a2f0(arg_8h + 1);\n    if (*arg_8h == -3) {\n        *in_ECX = 0xfffffffd;\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 215
    },
    "00419f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00419f80(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar auStack32 [4];\n    uint32_t uStack28;\n    uint var_14h_2;\n    uchar *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a998;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack28 = *0x43d2f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    puStack20 = auStack32;\n    fcn.0041a430(&var_14h);\n    fcn.0041a3e0();\n    var_4h = 0;\n    fcn.0041a430(&var_14h);\n    *in_FS_OFFSET = var_ch_2;\n    return var_14h_2;\n}\n",
        "token_count": 238
    },
    "0041a1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041a1e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *arg_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    *(in_ECX + 0x18) = arg_8h;\n    arg_ch = &var_1h;\n    iVar1 = fcn.0041a2c0();\n    fcn.004193e0(iVar1 + arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 163
    },
    "0041a300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a300(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.0041b170(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "0041a320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0041a320(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0041a6e0(param_1);\n    return;\n}\n",
        "token_count": 59
    },
    "0041a340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a340(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.0041a800(in_ECX + 4);\n    return;\n}\n",
        "token_count": 57
    },
    "0041a440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a440(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.0041b170(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "0041a800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041a800(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = fcn.0041a960(&var_8h, &var_ch);\n    fcn.0041a970(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "0041a900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a900(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00419430(in_ECX, in_EDX, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 76
    },
    "0041a930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a930(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00419450(in_ECX, in_EDX, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 76
    },
    "0041a970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0041a970(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_EDX;\n    for (var_4h = in_ECX; var_4h != var_8h; var_4h = var_4h + 0x20) {\n        var_8h = var_4h;\n        fcn.0041a9b0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0041b23a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b23a(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0041b410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b410(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0x401460;\n    fcn.00420590(param_1);\n    return;\n}\n",
        "token_count": 53
    },
    "0041b581": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b581(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0041baa0(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 50
    },
    "0041bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bc60(void)\n\n{\n    fcn.0041bc80(1);\n    return;\n}\n",
        "token_count": 27
    },
    "0041bdc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bdc7(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    \n    fcn.0041bb00(*(unaff_EBP + -0x20), *(*0x9533ac + *(unaff_EBP + -0x20) * 4));\n    return;\n}\n",
        "token_count": 75
    },
    "0041bdf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bdf4(void)\n\n{\n    fcn.0041fa30(1);\n    return;\n}\n",
        "token_count": 28
    },
    "0041ca00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ca00(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0041cbc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cbc2(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0041d251": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d251(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0041d916": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d916(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0041ddb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ddb5(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0041df16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041df16(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0041e1eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e1eb(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0041e63a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e63a(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0041f480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f480(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = fcn.0041f560();\n    *puVar1 = arg_8h;\n    uVar2 = fcn.0041f4b0(arg_8h);\n    puVar1 = fcn.0041f530();\n    *puVar1 = uVar2;\n    return;\n}\n",
        "token_count": 102
    },
    "0041f9c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f9c6(void)\n\n{\n    fcn.0041fa30(10);\n    return;\n}\n",
        "token_count": 29
    },
    "0042067b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042067b(void)\n\n{\n    fcn.0041fa30(0xe);\n    return;\n}\n",
        "token_count": 28
    },
    "0042091c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042091c(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0042a430(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 49
    },
    "00420fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420fd0(void)\n\n{\n    fcn.0041f9f0(8);\n    return;\n}\n",
        "token_count": 29
    },
    "004213b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004213b0(void)\n\n{\n    fcn.00423f70(*0x44093c);\n    return;\n}\n",
        "token_count": 31
    },
    "004217c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004217c8(void)\n\n{\n    fcn.0041fa30(1);\n    return;\n}\n",
        "token_count": 27
    },
    "004219e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004219e5(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0042a430(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 49
    },
    "00421c0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421c0f(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0042a430(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 50
    },
    "00422e15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422e15(void)\n\n{\n    fcn.0041fa30(0xf);\n    return;\n}\n",
        "token_count": 28
    },
    "0042362a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042362a(void)\n\n{\n    fcn.0041fa30(0xf);\n    return;\n}\n",
        "token_count": 28
    },
    "00424140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424140(void)\n\n{\n    fcn.0041fa30(0xd);\n    return;\n}\n",
        "token_count": 27
    },
    "00424196": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424196(void)\n\n{\n    fcn.0041fa30(0xc);\n    return;\n}\n",
        "token_count": 27
    },
    "00424322": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424322(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00424a5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424a5e(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 28
    },
    "00424de8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424de8(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 27
    },
    "00425045": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425045(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00425151": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425151(void)\n\n{\n    fcn.0041fa30(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00426be1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426be1(void)\n\n{\n    fcn.0041fa30(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "00426e5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426e5e(void)\n\n{\n    fcn.0041fa30(0xd);\n    return;\n}\n",
        "token_count": 29
    },
    "00427da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427da8(void)\n\n{\n    fcn.0041fa30(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "00427ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427ee4(void)\n\n{\n    fcn.0041fa30(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "0042a3e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a3e1(void)\n\n{\n    fcn.0041fa30(10);\n    return;\n}\n",
        "token_count": 29
    },
    "0042b884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b884(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0042a430(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 49
    },
    "00432e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_810h\n\nvoid __fastcall fcn.00432e40(int32_t param_1, int32_t param_2)\n\n{\n    uint var_810h;\n    uint var_80ch;\n    uint var_808h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *0x43d2f0 ^ &stack0xfffffffc;\n    if (*0x95322c == 0x9a3) {\n        (*_sym.imp.KERNEL32.dll_UpdateResourceW)(0, 0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_QueryDosDeviceW)(0, &var_808h, 0);\n    }\n    *(*0x951fa8 + param_2) = *(param_1 + param_2 + 0xd0f5);\n    fcn.0041adc0(param_2);\n    return;\n}\n",
        "token_count": 250
    },
    "00432ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432ef0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00433050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433050(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint var_34h;\n    uint var_30h;\n    uint hActCtx;\n    int32_t var_28h;\n    uint pActCtx;\n    uint var_4h;\n    \n    if (param_2 == 0x1149) {\n        (*_sym.imp.KERNEL32.dll_SetConsoleMode)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(0, 0, 0, 0, &var_4h);\n        (*_sym.imp.KERNEL32.dll_CreateActCtxW)(&pActCtx);\n    }\n    for (var_28h = 0; var_28h < param_2; var_28h = var_28h + 1) {\n        if (param_2 == 0x469) {\n            (*_sym.imp.KERNEL32.dll_AddRefActCtx)(0);\n        }\n        uVar1 = *(param_1 + var_28h);\n        uVar2 = fcn.00432f00();\n        *(param_1 + var_28h) = uVar1 ^ uVar2;\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00436930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00436930(double *arg_8h, ulong *arg_ch, double *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t var_60h;\n    code *var_5ch;\n    uint var_58h;\n    uchar uVar3;\n    uint var_50h;\n    uint var_4ch;\n    double dStack76;\n    ulong uStack68;\n    double dStack60;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    code *var_28h;\n    uint var_24h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x43d2f0 ^ &stack0xfffffffc;\n    var_24h._0_1_ = 0;\n    var_24h._1_1_ = 0;\n    var_24h._2_1_ = 0;\n    var_24h._3_1_ = 0;\n    var_20h = 0;\n    var_1fh = 0;\n    var_1eh = 0xf0;\n    var_1dh = 0x7f;\n    var_1ch = 0xff;\n    var_1bh = 0xff;\n    var_1ah = 0xff;\n    var_19h = 0xff;\n    var_18h = 0xff;\n    var_17h = 0xff;\n    var_16h = 0xef;\n    var_15h = 0x7f;\n    var_14h = 0;\n    var_13h = 0;\n    var_12h = 0;\n    var_11h = 0;\n    var_10h = 0;\n    var_fh = 0;\n    var_eh = 0;\n    var_dh = 0;\n    uVar3 = 0;\n    var_ch = 0xff;\n    var_bh = 0xff;\n    var_ah = 0xff;\n    var_9h = 0xff;\n    var_8h = 0xff;\n    var_7h = 0xff;\n    var_6h = 0xef;\n    var_5h = 0xff;\n    var_30h._0_1_ = 0;\n    var_30h._1_1_ = 0;\n    var_30h._2_1_ = 0;\n    var_30h._3_1_ = 0;\n    var_2ch = 0;\n    var_2bh = 0;\n    var_2ah = 0;\n    var_29h = 0x80;\n    if (*0x953244 == 0) {\n        var_5ch = fcn.00439a20;\n    }\n    else {\n        var_5ch = fcn.00423f70(*0x953248);\n    }\n    var_28h = var_5ch;\n    var_60h = arg_14h;\n    if (arg_14h < 0x3e9) {\n        if (arg_14h == 1000) {\n            var_50h = 1;\n            var_4ch = 0x418cac;\n            *arg_10h = *arg_8h * *0x415620;\n            dStack76 = *arg_8h;\n            uStack68 = *arg_ch;\n            dStack60 = *arg_10h;\n            iVar1 = (*var_5ch)(&var_50h);\n            if (iVar1 == 0) {\n                puVar2 = fcn.0041f530();\n                *puVar2 = 0x21;\n            }\n            *arg_10h = dStack60;\n        }\n        else {\n            var_60h = arg_14h - 2;\n            if (var_60h < 0xa5) {\n    // switch table (165 cases) at 0x43734c\n                switch(*(*(arg_14h + 0x43738a) * 4 + 0x43734c)) {\n                case 0x436a8d:\n                    var_50h = 2;\n                    var_4ch = 0x418cac;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436ad9:\n                    var_50h = 1;\n                    var_4ch = 0x418cac;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436b25:\n                    var_50h = 2;\n                    var_4ch = 0x418ca4;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436b71:\n                    var_50h = 1;\n                    var_4ch = 0x418ca4;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436bbd:\n                    var_50h = 3;\n                    var_4ch = 0x418ca0;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436c09:\n                    var_50h = 4;\n                    var_4ch = 0x418ca0;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    (*var_5ch)(&var_50h);\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436c46:\n                    var_50h = 1;\n                    var_4ch = 0x418c9c;\n                    *arg_10h = 1.0;\n                    break;\n                case 0x436c60:\n                    var_50h = 3;\n                    var_4ch = 0x418c9c;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436cac:\n                    var_50h = 4;\n                    var_4ch = 0x418c9c;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    (*var_5ch)(&var_50h);\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436ce9:\n                    var_50h = 2;\n                    var_4ch = 0x418c9c;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436d35:\n                    var_50h = 1;\n                    var_4ch = 0x418c9c;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436d81:\n                    var_50h = 1;\n                    var_4ch = 0x418c9c;\n                    *arg_10h = *arg_8h * *0x415620;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436ded:\n                    var_50h = 1;\n                    var_4ch = 0x418c94;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436e39:\n                    var_50h = 1;\n                    var_4ch = 0x418c8c;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x21;\n                    }\n                    *arg_10h = dStack60;\n                    break;\n                case 0x436e85:\n                    var_50h = 3;\n                    var_4ch = 0x418c84;\n                    dStack76 = *arg_8h;\n                    uStack68 = *arg_ch;\n                    dStack60 = *arg_10h;\n                    iVar1 = (*var_5ch)(&var_50h);\n                    if (iVar1 == 0) {\n                        puVar2 = fcn.0041f530();\n                        *puVar2 = 0x22;\n                    }\n                    *arg_10h = dStack60;\n                }\n            }\n        }\n    }\n    else {\n        var_60h = arg_14h - 0x3e9;\n        if (var_60h < 0xc) {\n    // switch table (12 cases) at 0x437434\n            switch(*(var_60h * 4 + 0x437434)) {\n            case 0x436f2d:\n                var_50h = 1;\n                var_4ch = 0x418ca4;\n                *arg_10h = *arg_8h * *0x415620;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x436f89:\n                var_50h = 1;\n                var_4ch = 0x418ca0;\n                *arg_10h = *arg_8h * *0x415620;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x436fe5:\n                var_50h = 1;\n                var_4ch = 0x418c7c;\n                *arg_10h = *arg_8h * *0x415620;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x437041:\n                var_50h = 1;\n                var_4ch = 0x418c74;\n                *arg_10h = *arg_8h * *0x415620;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x43709d:\n                var_50h = 1;\n                var_4ch = 0x418c6c;\n                *arg_10h = *arg_8h * *0x415620;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x4370f9:\n                var_50h = 1;\n                var_4ch = 0x418c9c;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x437145:\n                var_50h = 1;\n                var_4ch = 0x418c64;\n                *arg_10h = *arg_8h * *0x415620;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x4371a1:\n                var_50h = 1;\n                var_4ch = 0x418c8c;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x4371ed:\n                var_50h = 1;\n                var_4ch = 0x418c94;\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x437239:\n                var_50h = 1;\n                var_4ch = 0x418c60;\n                *arg_10h = *arg_8h * CONCAT17(var_dh, CONCAT16(var_eh, CONCAT15(var_fh, CONCAT14(var_10h, CONCAT13(\n                                                            var_11h, CONCAT12(var_12h, CONCAT11(var_13h, var_14h)))))));\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x437292:\n                var_50h = 1;\n                var_4ch = 0x418c5c;\n                *arg_10h = *arg_8h * CONCAT17(var_dh, CONCAT16(var_eh, CONCAT15(var_fh, CONCAT14(var_10h, CONCAT13(\n                                                            var_11h, CONCAT12(var_12h, CONCAT11(var_13h, var_14h)))))));\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n                break;\n            case 0x4372e8:\n                var_50h = 1;\n                var_4ch = 0x418c58;\n                *arg_10h = *arg_8h * CONCAT17(var_dh, CONCAT16(var_eh, CONCAT15(var_fh, CONCAT14(var_10h, CONCAT13(\n                                                            var_11h, CONCAT12(var_12h, CONCAT11(var_13h, var_14h)))))));\n                dStack76 = *arg_8h;\n                uStack68 = *arg_ch;\n                dStack60 = *arg_10h;\n                iVar1 = (*var_5ch)(&var_50h, var_60h, var_5ch, 0, uVar3);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041f530();\n                    *puVar2 = 0x21;\n                }\n                *arg_10h = dStack60;\n            }\n        }\n    }\n    fcn.0041adc0(var_60h);\n    return;\n}\n",
        "token_count": 4923
    },
    "00437ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437ca0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00437cc0(arg_8h, arg_ch, 0x43ff80);\n    return;\n}\n",
        "token_count": 49
    },
    "00438330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438330(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00437cc0(arg_8h, arg_ch, 0x43ff98);\n    return;\n}\n",
        "token_count": 48
    },
    "0041ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab60(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 < 4) {\n        fcn.0041ada0(*param_1 * 0x18 + 0x4403c0);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0041e9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e9d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00428190(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "0043ad40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ad40(void)\n\n{\n    fcn.0041aa80();\n    fcn.0041c4f0(fcn.0043ad60);\n    return;\n}\n",
        "token_count": 43
    },
    "00432fe0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432fe0(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x951fac = 0xfd025b7e;\n    if (*0x95322c == 0xc6e) {\n        (*_sym.imp.KERNEL32.dll_GetOverlappedResult)(0, 0, 0, 0);\n    }\n    *0x441394 = param_1;\n    if (*0x95322c == 0x958) {\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(&var_4h);\n        (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "004330e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004330e0(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00432fe0();\n    if (*0x95322c == 0x263) {\n        (*_sym.imp.KERNEL32.dll_ResetEvent)(0);\n        (*_sym.imp.KERNEL32.dll_EnumDateFormatsExW)(0, 0, 0);\n    }\n    fcn.00433050();\n    return;\n}\n",
        "token_count": 109
    },
    "00432f80": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00432f80(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint hModule;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcatW)(0x952200, 0x4079b4);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x952200);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, 0x4079d0);\n    (*pcVar2)(*0x951fa8, *0x95322c, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 161
    }
}